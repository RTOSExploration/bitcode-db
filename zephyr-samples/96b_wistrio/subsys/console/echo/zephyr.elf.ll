; ModuleID = 'build/96b_wistrio/subsys/console/echo/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232164 to i8*), void (i8*)* inttoptr (i32 134229871 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232164 to i8*), void (i8*)* inttoptr (i32 134229861 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232164 to i8*), void (i8*)* inttoptr (i32 134229851 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232164 to i8*), void (i8*)* inttoptr (i32 134229841 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232164 to i8*), void (i8*)* inttoptr (i32 134229831 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232164 to i8*), void (i8*)* inttoptr (i32 134229821 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232332 to i8*), void (i8*)* inttoptr (i32 134231079 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232356 to i8*), void (i8*)* inttoptr (i32 134231079 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232164 to i8*), void (i8*)* inttoptr (i32 134229811 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [62 x i8] c"You should see another line with instructions below. If not,\0A\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"the (interrupt-driven) console device doesn't work as expected:\0A\00", align 1
@prompt = internal constant [50 x i8] c"Start typing characters to see them echoed back\0D\0A\00", align 1, !dbg !25
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !111
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [35 x i8*] [i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !120
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !188
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !217
@console_txbuf = internal global [512 x i8] zeroinitializer, align 1, !dbg !314
@console_rxbuf = internal global [64 x i8] zeroinitializer, align 1, !dbg !308
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !364
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !372
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !513
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !549
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), %struct.z_heap_bucket { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.37, i32 0, i32 0), %struct.z_heap_bucket { i32 285933596 } }], align 4, !dbg !559
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !564
@.str.36 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.37 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !584
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !692
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !844
@.str.41 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !814
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !797
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !770
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !786
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !816
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !829
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !831
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !833
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !835
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !837
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !839
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !849
@.str.43 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !874
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !951
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !940
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !992
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1143
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1093
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1135
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1137
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1086
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1153
@esc_state = internal global i32 0, align 4, !dbg !1178
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1186
@end = internal unnamed_addr global i8 0, align 1, !dbg !1188
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1182
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1184
@.str.64 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.63 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !865
@.str.70 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1194
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1440
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1404
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1352
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !863
@.str.1.73 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1442
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1420
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1369
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !861
@.str.2.74 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1455
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1378
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !859
@.str.3.75 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1457
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1387
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !857
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1459
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1393
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !855
@.str.5.76 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1461
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1402
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !869
@.str.80 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1463
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1701
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1649
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1703
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1634
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1636
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !867
@.str.1.83 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1712
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1651
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1744
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.83, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1645
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1647
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1653
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1661
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1684
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1687
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1690
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !924
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1731
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1733
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1735
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1737
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1739
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1746
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1857
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1859
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1855
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1826
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1861
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1350
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.73, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1367
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.74, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1376
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.75, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1385
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1391
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.76, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1400
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1948
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1972
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1975
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1978
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1982
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1988
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2197
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2206
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2213
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2218
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.134 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.138, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.139, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.140, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.142, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !2244
@.str.137 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.138 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.139 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.140 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.141 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.142 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2358
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2371
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2394
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2502
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2505
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2507
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2211
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2208
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2509
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2545
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2075
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2543
@.str.212 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2548
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3227 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3285, !srcloc !3288
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3323, !srcloc !3324
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3325, !srcloc !3326
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3327, !srcloc !3328
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3329, !srcloc !3330
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3331, !srcloc !3332
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3333, !srcloc !3334
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3335, !srcloc !3336
  ret void, !dbg !3337
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3340 {
  %1 = tail call i32 @console_init() #25, !dbg !3344
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3345
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3346
  %2 = tail call i32 @console_write(i8* noundef null, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @prompt, i32 0, i32 0), i32 noundef 49) #25, !dbg !3347
  br label %3, !dbg !3348

3:                                                ; preds = %11, %0
  %4 = tail call i32 @console_getchar() #25, !dbg !3349
  %5 = trunc i32 %4 to i8, !dbg !3349
  call void @llvm.dbg.value(metadata i8 %5, metadata !3342, metadata !DIExpression()), !dbg !3350
  %6 = tail call i32 @console_putchar(i8 noundef zeroext %5) #25, !dbg !3351
  %7 = and i32 %4, 255, !dbg !3352
  %8 = icmp eq i32 %7, 13, !dbg !3354
  br i1 %8, label %9, label %11, !dbg !3355

9:                                                ; preds = %3
  %10 = tail call i32 @console_putchar(i8 noundef zeroext 10) #25, !dbg !3356
  br label %11, !dbg !3358

11:                                               ; preds = %9, %3
  br label %3, !dbg !3349, !llvm.loop !3359
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3363, metadata !DIExpression()), !dbg !3364
  ret i32 0, !dbg !3365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3366 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3370, metadata !DIExpression()), !dbg !3371
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3372
  ret void, !dbg !3373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3374 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3377
  ret i8* %1, !dbg !3378
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3379 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3400
  call void @llvm.dbg.value(metadata i8* %0, metadata !3390, metadata !DIExpression()), !dbg !3400
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3401
  ret void, !dbg !3403
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3408, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i8* %1, metadata !3409, metadata !DIExpression()), !dbg !3410
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3411
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3411
  ret i32 %4, !dbg !3412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3413 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3425, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3422, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %1, metadata !3423, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %2, metadata !3424, metadata !DIExpression()), !dbg !3426
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3427
  ret void, !dbg !3428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3433, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %1, metadata !3434, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 0, metadata !3435, metadata !DIExpression()), !dbg !3436
  %3 = icmp eq i32 %1, 0, !dbg !3437
  br i1 %3, label %13, label %4, !dbg !3440

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3435, metadata !DIExpression()), !dbg !3436
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3441
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3443
  %8 = load i8, i8* %7, align 1, !dbg !3443
  %9 = zext i8 %8 to i32, !dbg !3443
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3441
  %11 = add nuw i32 %5, 1, !dbg !3444
  call void @llvm.dbg.value(metadata i32 %11, metadata !3435, metadata !DIExpression()), !dbg !3436
  %12 = icmp eq i32 %11, %1, !dbg !3437
  br i1 %12, label %13, label %4, !dbg !3440, !llvm.loop !3445

13:                                               ; preds = %4, %2
  ret void, !dbg !3447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3448 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3452, metadata !DIExpression()), !dbg !3454
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3455
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3455
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3453, metadata !DIExpression()), !dbg !3456
  call void @llvm.va_start(i8* nonnull %3), !dbg !3457
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3458
  %5 = load i32, i32* %4, align 4, !dbg !3458
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3458
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3458
  call void @llvm.va_end(i8* nonnull %3), !dbg !3459
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3460
  ret void, !dbg !3460
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3461 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3465, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %1, metadata !3466, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %2, metadata !3467, metadata !DIExpression()), !dbg !3470
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3471
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3471
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3468, metadata !DIExpression()), !dbg !3472
  call void @llvm.va_start(i8* nonnull %5), !dbg !3473
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3474
  %7 = load i32, i32* %6, align 4, !dbg !3474
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3474
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3474
  call void @llvm.dbg.value(metadata i32 %9, metadata !3469, metadata !DIExpression()), !dbg !3470
  call void @llvm.va_end(i8* nonnull %5), !dbg !3475
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3476
  ret i32 %9, !dbg !3477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3478 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3485, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %0, metadata !3482, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %1, metadata !3483, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %2, metadata !3484, metadata !DIExpression()), !dbg !3492
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3493
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3493
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3486, metadata !DIExpression()), !dbg !3494
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3495
  store i8* %0, i8** %7, align 4, !dbg !3495
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3495
  store i32 %1, i32* %8, align 4, !dbg !3495
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3495
  store i32 0, i32* %9, align 4, !dbg !3495
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3496
  %10 = load i32, i32* %9, align 4, !dbg !3497
  %11 = load i32, i32* %8, align 4, !dbg !3499
  %12 = icmp slt i32 %10, %11, !dbg !3500
  br i1 %12, label %13, label %15, !dbg !3501

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3502
  store i8 0, i8* %14, align 1, !dbg !3504
  br label %15, !dbg !3505

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3506
  ret i32 %10, !dbg !3507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3513, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3514, metadata !DIExpression()), !dbg !3515
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3516
  %4 = load i8*, i8** %3, align 4, !dbg !3516
  %5 = icmp eq i8* %4, null, !dbg !3518
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3519
  br i1 %5, label %12, label %8, !dbg !3520

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3521
  %10 = load i32, i32* %9, align 4, !dbg !3521
  %11 = icmp slt i32 %7, %10, !dbg !3522
  br i1 %11, label %15, label %12, !dbg !3523

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3524
  %14 = add nsw i32 %7, 1, !dbg !3526
  store i32 %14, i32* %13, align 4, !dbg !3526
  br label %25, !dbg !3527

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3528
  %17 = icmp eq i32 %7, %16, !dbg !3530
  br i1 %17, label %18, label %21, !dbg !3531

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3532
  store i32 %19, i32* %6, align 4, !dbg !3532
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3534
  store i8 0, i8* %20, align 1, !dbg !3535
  br label %25, !dbg !3536

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3537
  %23 = add nsw i32 %7, 1, !dbg !3539
  store i32 %23, i32* %6, align 4, !dbg !3539
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3540
  store i8 %22, i8* %24, align 1, !dbg !3541
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3542
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3543 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3553, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.value(metadata i8* %1, metadata !3554, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.value(metadata i8* %2, metadata !3555, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.value(metadata i8* %3, metadata !3556, metadata !DIExpression()), !dbg !3557
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3558
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3559
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3560
  unreachable, !dbg !3561
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3562 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3666
  ret %struct.k_thread* %1, !dbg !3667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3673, metadata !DIExpression()), !dbg !3674
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3675, !srcloc !3677
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3678
  ret void, !dbg !3679
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3680 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3681, !srcloc !3683
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3684
  ret %struct.k_thread* %1, !dbg !3685
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3686 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3697, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.value(metadata i8* %1, metadata !3698, metadata !DIExpression()), !dbg !3701
  %3 = icmp eq i8* %1, null, !dbg !3702
  br i1 %3, label %8, label %4, !dbg !3704

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3705
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3705
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3699, metadata !DIExpression()), !dbg !3701
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3706, !range !3707
  call void @llvm.dbg.value(metadata i32 %7, metadata !3700, metadata !DIExpression()), !dbg !3701
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3708
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3709
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3711 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3715, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8* %1, metadata !3716, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8* %1, metadata !3717, metadata !DIExpression()), !dbg !3719
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3720
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3718, metadata !DIExpression()), !dbg !3719
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3721
  %5 = ptrtoint i8* %4 to i32, !dbg !3722
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3722
  %7 = sub i32 %5, %6, !dbg !3722
  %8 = lshr i32 %7, 3, !dbg !3723
  ret i32 %8, !dbg !3724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3725 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3729, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata i32 %1, metadata !3730, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata i1 %2, metadata !3731, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3734
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3735
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3732, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3734
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3736
  %6 = bitcast i8* %5 to i16*, !dbg !3736
  %7 = load i16, i16* %6, align 2, !dbg !3736
  %8 = and i16 %7, -2, !dbg !3740
  %9 = zext i1 %2 to i16, !dbg !3740
  %10 = or i16 %8, %9, !dbg !3740
  store i16 %10, i16* %6, align 2, !dbg !3736
  ret void, !dbg !3741
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3742 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3746, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i32 %1, metadata !3747, metadata !DIExpression()), !dbg !3748
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3749
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3751
  br i1 %4, label %7, label %5, !dbg !3752

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3753
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3755
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3756
  br label %7, !dbg !3757

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3758, !range !3760
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3761
  br i1 %9, label %13, label %10, !dbg !3762

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3763
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3765, !range !3760
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3766
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3767
  call void @llvm.dbg.value(metadata i32 %12, metadata !3747, metadata !DIExpression()), !dbg !3748
  br label %13, !dbg !3768

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3747, metadata !DIExpression()), !dbg !3748
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3769
  ret void, !dbg !3770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3771 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3775, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %1, metadata !3776, metadata !DIExpression()), !dbg !3777
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3778
  %4 = add i32 %3, %1, !dbg !3779
  ret i32 %4, !dbg !3780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3781 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3785, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.value(metadata i32 %1, metadata !3786, metadata !DIExpression()), !dbg !3787
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3788
  %4 = and i32 %3, 1, !dbg !3789
  %5 = icmp ne i32 %4, 0, !dbg !3788
  ret i1 %5, !dbg !3790
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3791 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3793, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %1, metadata !3794, metadata !DIExpression()), !dbg !3798
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3799, !range !3800
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %4, metadata !3795, metadata !DIExpression()), !dbg !3802
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3803
  ret void, !dbg !3804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3805 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3809, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata i32 %1, metadata !3810, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata i32 %2, metadata !3811, metadata !DIExpression()), !dbg !3814
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3815
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3816
  %6 = add i32 %5, %4, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %6, metadata !3812, metadata !DIExpression()), !dbg !3814
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3818
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3819
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3820
  ret void, !dbg !3821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3822 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3824, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i32 %1, metadata !3825, metadata !DIExpression()), !dbg !3826
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3827
  %4 = sub i32 %1, %3, !dbg !3828
  ret i32 %4, !dbg !3829
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3830 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3832, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 %1, metadata !3833, metadata !DIExpression()), !dbg !3837
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3838, !range !3800
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %4, metadata !3834, metadata !DIExpression()), !dbg !3840
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3841
  ret void, !dbg !3842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3843 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3847, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata i32 %1, metadata !3848, metadata !DIExpression()), !dbg !3849
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3850
  %4 = lshr i32 %3, 1, !dbg !3851
  ret i32 %4, !dbg !3852
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3853 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3857, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i32 %1, metadata !3858, metadata !DIExpression()), !dbg !3860
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3861
  %4 = add i32 %1, 1, !dbg !3862
  %5 = sub i32 %4, %3, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %5, metadata !3859, metadata !DIExpression()), !dbg !3860
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3864, !range !3865
  %7 = sub nsw i32 31, %6, !dbg !3866
  ret i32 %7, !dbg !3867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3868 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3872, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %1, metadata !3873, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %2, metadata !3874, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3875, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3881
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3882
  %5 = load i32, i32* %4, align 4, !dbg !3882
  %6 = icmp eq i32 %5, 0, !dbg !3883
  br i1 %6, label %7, label %12, !dbg !3884

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3885
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3887
  %10 = load i32, i32* %9, align 4, !dbg !3888
  %11 = or i32 %10, %8, !dbg !3888
  store i32 %11, i32* %9, align 4, !dbg !3888
  store i32 %1, i32* %4, align 4, !dbg !3889
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3890
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3891
  br label %14, !dbg !3892

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3877, metadata !DIExpression()), !dbg !3893
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3894, !range !3895
  call void @llvm.dbg.value(metadata i32 %13, metadata !3880, metadata !DIExpression()), !dbg !3893
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3896
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3897
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3898
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3899
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3901 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3903, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 %1, metadata !3904, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 %2, metadata !3905, metadata !DIExpression()), !dbg !3906
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3907
  ret void, !dbg !3908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3909 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3911, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i32 %1, metadata !3912, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i32 %2, metadata !3913, metadata !DIExpression()), !dbg !3914
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3915
  ret void, !dbg !3916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3917 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3919, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %1, metadata !3920, metadata !DIExpression()), !dbg !3921
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3922
  ret i32 %3, !dbg !3923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3924 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3928, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata i32 %1, metadata !3929, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata i32 %2, metadata !3930, metadata !DIExpression()), !dbg !3933
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3934
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3931, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3932, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3933
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3932, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3933
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3935
  call void @llvm.dbg.value(metadata i8* %5, metadata !3932, metadata !DIExpression()), !dbg !3933
  %6 = bitcast i8* %5 to i16*, !dbg !3936
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3939
  %8 = load i16, i16* %7, align 2, !dbg !3939
  %9 = zext i16 %8 to i32, !dbg !3939
  ret i32 %9, !dbg !3940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3941 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3945, metadata !DIExpression()), !dbg !3946
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3947
  ret %struct.chunk_unit_t* %2, !dbg !3948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3949 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3953, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i32 %1, metadata !3954, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i32 %2, metadata !3955, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i32 %3, metadata !3956, metadata !DIExpression()), !dbg !3959
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3960
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3957, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3958, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3959
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3961
  call void @llvm.dbg.value(metadata i8* %6, metadata !3958, metadata !DIExpression()), !dbg !3959
  %7 = trunc i32 %3 to i16, !dbg !3962
  %8 = bitcast i8* %6 to i16*, !dbg !3965
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3966
  store i16 %7, i16* %9, align 2, !dbg !3967
  ret void, !dbg !3968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3969 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3973, metadata !DIExpression()), !dbg !3974
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3975
  ret i32 %2, !dbg !3976
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3977 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3981, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 %1, metadata !3982, metadata !DIExpression()), !dbg !3983
  %3 = add i32 %1, 4, !dbg !3984
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3985
  ret i32 %4, !dbg !3986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3991, metadata !DIExpression()), !dbg !3992
  %2 = add i32 %0, 7, !dbg !3993
  %3 = lshr i32 %2, 3, !dbg !3994
  ret i32 %3, !dbg !3995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3996 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4000, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %1, metadata !4001, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %2, metadata !4002, metadata !DIExpression()), !dbg !4003
  %4 = shl i32 %2, 1, !dbg !4004
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4005
  ret void, !dbg !4006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4007 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4009, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i32 %1, metadata !4010, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i32 %2, metadata !4011, metadata !DIExpression()), !dbg !4012
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4013
  ret void, !dbg !4014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4015 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4017, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i32 %1, metadata !4018, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i32 %2, metadata !4019, metadata !DIExpression()), !dbg !4025
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4026
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4020, metadata !DIExpression()), !dbg !4025
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4027
  %6 = icmp eq i32 %5, %1, !dbg !4028
  br i1 %6, label %7, label %14, !dbg !4029

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4030
  %9 = xor i32 %8, -1, !dbg !4032
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4033
  %11 = load i32, i32* %10, align 4, !dbg !4034
  %12 = and i32 %11, %9, !dbg !4034
  store i32 %12, i32* %10, align 4, !dbg !4034
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4035
  store i32 0, i32* %13, align 4, !dbg !4036
  br label %17, !dbg !4037

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4038
  call void @llvm.dbg.value(metadata i32 %15, metadata !4021, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 %5, metadata !4024, metadata !DIExpression()), !dbg !4039
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4040
  store i32 %5, i32* %16, align 4, !dbg !4041
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4042
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4043
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4045 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4047, metadata !DIExpression()), !dbg !4049
  call void @llvm.dbg.value(metadata i32 %1, metadata !4048, metadata !DIExpression()), !dbg !4049
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4050
  ret i32 %3, !dbg !4051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4052 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4056, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata i8* %1, metadata !4057, metadata !DIExpression()), !dbg !4063
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4064
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4064
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4058, metadata !DIExpression()), !dbg !4063
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %5, metadata !4059, metadata !DIExpression()), !dbg !4063
  %6 = ptrtoint i8* %1 to i32, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %6, metadata !4060, metadata !DIExpression()), !dbg !4063
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4067
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4067
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %9, metadata !4061, metadata !DIExpression()), !dbg !4063
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4069
  %11 = shl i32 %10, 3, !dbg !4070
  call void @llvm.dbg.value(metadata i32 %11, metadata !4062, metadata !DIExpression()), !dbg !4063
  %12 = sub i32 %9, %6, !dbg !4071
  %13 = add i32 %12, %11, !dbg !4072
  ret i32 %13, !dbg !4073
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4074 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4078, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.value(metadata i32 %1, metadata !4079, metadata !DIExpression()), !dbg !4084
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4085
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4085
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4080, metadata !DIExpression()), !dbg !4084
  %5 = icmp eq i32 %1, 0, !dbg !4086
  br i1 %5, label %19, label %6, !dbg !4088

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4089
  br i1 %7, label %19, label %8, !dbg !4090

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4091, !range !3707
  call void @llvm.dbg.value(metadata i32 %9, metadata !4082, metadata !DIExpression()), !dbg !4084
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %10, metadata !4083, metadata !DIExpression()), !dbg !4084
  %11 = icmp eq i32 %10, 0, !dbg !4093
  br i1 %11, label %19, label %12, !dbg !4095

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4096
  %14 = icmp ugt i32 %13, %9, !dbg !4098
  br i1 %14, label %15, label %17, !dbg !4099

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4100
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4102
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4103
  br label %17, !dbg !4104

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4105
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4106
  call void @llvm.dbg.value(metadata i8* %18, metadata !4081, metadata !DIExpression()), !dbg !4084
  br label %19, !dbg !4107

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4084
  ret i8* %20, !dbg !4108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4109 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4113, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i32 %1, metadata !4114, metadata !DIExpression()), !dbg !4115
  %3 = lshr i32 %1, 3, !dbg !4116
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4117
  %5 = load i32, i32* %4, align 4, !dbg !4117
  %6 = icmp uge i32 %3, %5, !dbg !4118
  ret i1 %6, !dbg !4119
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4120 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4124, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata i32 %1, metadata !4125, metadata !DIExpression()), !dbg !4139
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4140
  call void @llvm.dbg.value(metadata i32 %3, metadata !4126, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4127, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4139
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4141
  %5 = load i32, i32* %4, align 4, !dbg !4141
  %6 = icmp eq i32 %5, 0, !dbg !4142
  br i1 %6, label %19, label %7, !dbg !4143

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4144
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4145
  call void @llvm.dbg.value(metadata i32 %9, metadata !4131, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 %8, metadata !4132, metadata !DIExpression()), !dbg !4146
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4147
  %11 = icmp ult i32 %10, %1, !dbg !4149
  br i1 %11, label %13, label %12, !dbg !4150

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4151
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4153
  store i32 %14, i32* %4, align 4, !dbg !4154
  %15 = add nsw i32 %9, -1, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %15, metadata !4131, metadata !DIExpression()), !dbg !4145
  %16 = icmp eq i32 %15, 0, !dbg !4155
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4156
  br i1 %18, label %19, label %7, !dbg !4156, !llvm.loop !4157

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4160
  %21 = load i32, i32* %20, align 4, !dbg !4160
  %22 = add nsw i32 %3, 1, !dbg !4161
  %23 = shl nsw i32 -1, %22, !dbg !4161
  %24 = and i32 %21, %23, !dbg !4162
  call void @llvm.dbg.value(metadata i32 %24, metadata !4134, metadata !DIExpression()), !dbg !4139
  %25 = icmp eq i32 %24, 0, !dbg !4163
  br i1 %25, label %30, label %26, !dbg !4164

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4165, !range !3865
  call void @llvm.dbg.value(metadata i32 %27, metadata !4135, metadata !DIExpression()), !dbg !4166
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4167
  %29 = load i32, i32* %28, align 4, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %29, metadata !4138, metadata !DIExpression()), !dbg !4166
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4168
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4139
  ret i32 %31, !dbg !4169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4170 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4172, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i32 %1, metadata !4173, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i32 %2, metadata !4174, metadata !DIExpression()), !dbg !4178
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %4, metadata !4175, metadata !DIExpression()), !dbg !4178
  %5 = sub i32 %2, %1, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %5, metadata !4176, metadata !DIExpression()), !dbg !4178
  %6 = sub i32 %4, %5, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %6, metadata !4177, metadata !DIExpression()), !dbg !4178
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4182
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4183
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4184
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4185
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4186
  ret void, !dbg !4187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4188 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4192, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %1, metadata !4193, metadata !DIExpression()), !dbg !4196
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4197
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4194, metadata !DIExpression()), !dbg !4196
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4198
  call void @llvm.dbg.value(metadata i8* %4, metadata !4195, metadata !DIExpression()), !dbg !4196
  ret i8* %4, !dbg !4199
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4200 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4204, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %1, metadata !4205, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %2, metadata !4206, metadata !DIExpression()), !dbg !4216
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4217
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4217
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4207, metadata !DIExpression()), !dbg !4216
  %6 = sub i32 0, %1, !dbg !4218
  %7 = and i32 %6, %1, !dbg !4219
  call void @llvm.dbg.value(metadata i32 %7, metadata !4209, metadata !DIExpression()), !dbg !4216
  %8 = icmp eq i32 %7, %1, !dbg !4220
  br i1 %8, label %13, label %9, !dbg !4222

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %10, metadata !4205, metadata !DIExpression()), !dbg !4216
  %11 = icmp ult i32 %7, 4, !dbg !4225
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4225
  br label %17, !dbg !4225

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4226
  br i1 %14, label %15, label %17, !dbg !4229

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4230
  br label %57, !dbg !4232

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4216
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4233
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4205, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %19, metadata !4208, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %18, metadata !4209, metadata !DIExpression()), !dbg !4216
  %21 = icmp eq i32 %2, 0, !dbg !4234
  br i1 %21, label %57, label %22, !dbg !4236

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4237
  br i1 %23, label %57, label %24, !dbg !4238

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4239
  %26 = add i32 %25, %20, !dbg !4240
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4241, !range !3707
  call void @llvm.dbg.value(metadata i32 %27, metadata !4210, metadata !DIExpression()), !dbg !4216
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4242
  call void @llvm.dbg.value(metadata i32 %28, metadata !4211, metadata !DIExpression()), !dbg !4216
  %29 = icmp eq i32 %28, 0, !dbg !4243
  br i1 %29, label %57, label %30, !dbg !4245

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4246
  call void @llvm.dbg.value(metadata i8* %31, metadata !4212, metadata !DIExpression()), !dbg !4216
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4247
  %33 = ptrtoint i8* %32 to i32, !dbg !4247
  %34 = add i32 %20, -1, !dbg !4247
  %35 = add i32 %34, %33, !dbg !4247
  %36 = sub i32 0, %20, !dbg !4247
  %37 = and i32 %35, %36, !dbg !4247
  %38 = inttoptr i32 %37 to i8*, !dbg !4248
  %39 = sub i32 0, %18, !dbg !4249
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4249
  call void @llvm.dbg.value(metadata i8* %40, metadata !4212, metadata !DIExpression()), !dbg !4216
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4250
  %42 = ptrtoint i8* %41 to i32, !dbg !4250
  %43 = add i32 %42, 7, !dbg !4250
  %44 = and i32 %43, -8, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %44, metadata !4213, metadata !DIExpression()), !dbg !4216
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4251
  call void @llvm.dbg.value(metadata i32 %45, metadata !4214, metadata !DIExpression()), !dbg !4216
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4252
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4253
  %48 = sub i32 %44, %47, !dbg !4253
  %49 = ashr exact i32 %48, 3, !dbg !4253
  call void @llvm.dbg.value(metadata i32 %49, metadata !4215, metadata !DIExpression()), !dbg !4216
  %50 = icmp ugt i32 %45, %28, !dbg !4254
  br i1 %50, label %51, label %52, !dbg !4256

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4257
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4259
  br label %52, !dbg !4260

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4261
  %54 = icmp ugt i32 %53, %49, !dbg !4263
  br i1 %54, label %55, label %56, !dbg !4264

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4265
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4267
  br label %56, !dbg !4268

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4269
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4216
  ret i8* %58, !dbg !4270
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4271 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4275, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i8* %1, metadata !4276, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i32 %2, metadata !4277, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i32 %3, metadata !4278, metadata !DIExpression()), !dbg !4294
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4295
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4295
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4279, metadata !DIExpression()), !dbg !4294
  %7 = icmp eq i8* %1, null, !dbg !4296
  br i1 %7, label %8, label %10, !dbg !4298

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4299
  br label %59, !dbg !4301

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4302
  br i1 %11, label %12, label %13, !dbg !4304

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4305
  br label %59, !dbg !4307

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4308
  br i1 %14, label %59, label %15, !dbg !4310

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4311, !range !3707
  call void @llvm.dbg.value(metadata i32 %16, metadata !4280, metadata !DIExpression()), !dbg !4294
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4312
  call void @llvm.dbg.value(metadata i32 %17, metadata !4281, metadata !DIExpression()), !dbg !4294
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4313
  %19 = ptrtoint i8* %1 to i32, !dbg !4314
  %20 = ptrtoint i8* %18 to i32, !dbg !4314
  %21 = sub i32 %19, %20, !dbg !4314
  call void @llvm.dbg.value(metadata i32 %21, metadata !4282, metadata !DIExpression()), !dbg !4294
  %22 = add i32 %21, %3, !dbg !4315
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4316
  call void @llvm.dbg.value(metadata i32 %23, metadata !4283, metadata !DIExpression()), !dbg !4294
  %24 = icmp eq i32 %2, 0, !dbg !4317
  br i1 %24, label %29, label %25, !dbg !4318

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4319
  %27 = and i32 %26, %19, !dbg !4320
  %28 = icmp eq i32 %27, 0, !dbg !4320
  br i1 %28, label %29, label %49, !dbg !4321

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4322
  %31 = icmp eq i32 %23, %30, !dbg !4323
  br i1 %31, label %59, label %32, !dbg !4324

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4325
  br i1 %33, label %34, label %36, !dbg !4326

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4327
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4329
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4330
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4331
  br label %59, !dbg !4332

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4333
  br i1 %37, label %49, label %38, !dbg !4334

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4335
  %40 = add i32 %39, %30, !dbg !4336
  %41 = icmp ult i32 %40, %23, !dbg !4337
  br i1 %41, label %49, label %42, !dbg !4338

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %43, metadata !4284, metadata !DIExpression()), !dbg !4340
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4341
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4342
  %45 = icmp ult i32 %43, %44, !dbg !4344
  br i1 %45, label %46, label %48, !dbg !4345

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4346
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4348
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4349
  br label %48, !dbg !4350

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4351
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4352
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4353
  call void @llvm.dbg.value(metadata i8* %50, metadata !4290, metadata !DIExpression()), !dbg !4294
  %51 = icmp eq i8* %50, null, !dbg !4354
  br i1 %51, label %59, label %52, !dbg !4355

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4356, !range !3800
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4357
  %55 = sub i32 %54, %21, !dbg !4358
  call void @llvm.dbg.value(metadata i32 %55, metadata !4291, metadata !DIExpression()), !dbg !4359
  %56 = icmp ult i32 %55, %3, !dbg !4360
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4360
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4361
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4362
  br label %59, !dbg !4363

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4294
  ret i8* %60, !dbg !4364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4365 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4369, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 %1, metadata !4370, metadata !DIExpression()), !dbg !4371
  %3 = shl i32 %1, 3, !dbg !4372
  %4 = add i32 %3, -4, !dbg !4373
  ret i32 %4, !dbg !4374
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4375 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4379, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i8* %1, metadata !4380, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i32 %2, metadata !4381, metadata !DIExpression()), !dbg !4390
  %4 = add i32 %2, -4, !dbg !4391
  call void @llvm.dbg.value(metadata i32 %4, metadata !4381, metadata !DIExpression()), !dbg !4390
  %5 = ptrtoint i8* %1 to i32, !dbg !4392
  %6 = add i32 %5, 7, !dbg !4392
  %7 = and i32 %6, -8, !dbg !4392
  call void @llvm.dbg.value(metadata i32 %7, metadata !4382, metadata !DIExpression()), !dbg !4390
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4393
  %9 = ptrtoint i8* %8 to i32, !dbg !4393
  %10 = and i32 %9, -8, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %10, metadata !4383, metadata !DIExpression()), !dbg !4390
  %11 = sub i32 %10, %7, !dbg !4394
  %12 = lshr exact i32 %11, 3, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %12, metadata !4384, metadata !DIExpression()), !dbg !4390
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4396
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4385, metadata !DIExpression()), !dbg !4390
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4397
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4398
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4399
  store i32 %12, i32* %15, align 8, !dbg !4400
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4401
  store i32 0, i32* %16, align 4, !dbg !4402
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %17, metadata !4386, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4390
  %18 = shl i32 %17, 2, !dbg !4404
  %19 = add i32 %18, 20, !dbg !4405
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %20, metadata !4387, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i32 0, metadata !4388, metadata !DIExpression()), !dbg !4407
  %21 = icmp slt i32 %17, 0, !dbg !4408
  br i1 %21, label %22, label %24, !dbg !4410

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4411
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4412
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4413
  %23 = sub i32 %12, %20, !dbg !4414
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4415
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4416
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4417
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4418
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4419
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4420
  ret void, !dbg !4421

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4388, metadata !DIExpression()), !dbg !4407
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4422
  store i32 0, i32* %26, align 4, !dbg !4424
  %27 = add nuw i32 %25, 1, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %27, metadata !4388, metadata !DIExpression()), !dbg !4407
  %28 = icmp eq i32 %25, %17, !dbg !4408
  br i1 %28, label %22, label %24, !dbg !4410, !llvm.loop !4426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4428 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4441, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4438, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %1, metadata !4439, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %2, metadata !4440, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %4, metadata !4442, metadata !DIExpression()), !dbg !4569
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4570
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4570
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4443, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata i32 0, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i1 undef, metadata !4449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4569
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4572

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4572

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4573
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4441, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %30, metadata !4440, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %29, metadata !4447, metadata !DIExpression()), !dbg !4569
  %31 = load i8, i8* %30, align 1, !dbg !4574
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4572

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4574
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4575
  call void @llvm.dbg.value(metadata i8* %34, metadata !4440, metadata !DIExpression()), !dbg !4569
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %35, metadata !4451, metadata !DIExpression()), !dbg !4576
  %36 = icmp slt i32 %35, 0, !dbg !4577
  %37 = add i32 %29, 1, !dbg !4575
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %36, label %365, label %28, !llvm.loop !4579

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4581
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4456, metadata !DIExpression()), !dbg !4582
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4582
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4501, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4504, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %30, metadata !4507, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 -1, metadata !4508, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 -1, metadata !4509, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* null, metadata !4510, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %14, metadata !4511, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8 0, metadata !4512, metadata !DIExpression()), !dbg !4583
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4584
  call void @llvm.dbg.value(metadata i8* %39, metadata !4440, metadata !DIExpression()), !dbg !4569
  %40 = load i24, i24* %15, align 8, !dbg !4585
  %41 = and i24 %40, 256, !dbg !4585
  %42 = icmp eq i24 %41, 0, !dbg !4585
  br i1 %42, label %51, label %43, !dbg !4587

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4588
  call void @llvm.dbg.value(metadata i8* %44, metadata !4441, metadata !DIExpression()), !dbg !4569
  %45 = bitcast i8* %27 to i32*, !dbg !4588
  %46 = load i32, i32* %45, align 4, !dbg !4588
  call void @llvm.dbg.value(metadata i32 %46, metadata !4508, metadata !DIExpression()), !dbg !4583
  %47 = icmp slt i32 %46, 0, !dbg !4590
  br i1 %47, label %48, label %56, !dbg !4592

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4593
  store i24 %49, i24* %15, align 8, !dbg !4593
  %50 = sub nsw i32 0, %46, !dbg !4595
  call void @llvm.dbg.value(metadata i32 %50, metadata !4508, metadata !DIExpression()), !dbg !4583
  br label %56, !dbg !4596

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4597
  %53 = icmp eq i24 %52, 0, !dbg !4597
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4599
  br label %56, !dbg !4599

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4600
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4583
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4441, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %58, metadata !4508, metadata !DIExpression()), !dbg !4583
  %60 = and i24 %57, 1024, !dbg !4600
  %61 = icmp eq i24 %60, 0, !dbg !4600
  br i1 %61, label %69, label %62, !dbg !4601

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4602
  call void @llvm.dbg.value(metadata i8* %63, metadata !4441, metadata !DIExpression()), !dbg !4569
  %64 = bitcast i8* %59 to i32*, !dbg !4602
  %65 = load i32, i32* %64, align 4, !dbg !4602
  call void @llvm.dbg.value(metadata i32 %65, metadata !4513, metadata !DIExpression()), !dbg !4603
  %66 = icmp slt i32 %65, 0, !dbg !4604
  br i1 %66, label %67, label %74, !dbg !4606

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4607
  store i24 %68, i24* %15, align 8, !dbg !4607
  br label %74, !dbg !4609

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4610
  %71 = icmp eq i24 %70, 0, !dbg !4610
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4612
  br label %74, !dbg !4612

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4613
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4583
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4583
  call void @llvm.dbg.value(metadata i8* %77, metadata !4441, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %76, metadata !4509, metadata !DIExpression()), !dbg !4583
  store i32 0, i32* %16, align 4, !dbg !4614
  store i32 0, i32* %17, align 8, !dbg !4615
  %78 = lshr i24 %75, 16, !dbg !4613
  call void @llvm.dbg.value(metadata i24 %78, metadata !4516, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4583
  %79 = lshr i24 %75, 11, !dbg !4616
  %80 = and i24 %79, 15, !dbg !4616
  %81 = zext i24 %80 to i32, !dbg !4616
  call void @llvm.dbg.value(metadata i32 %81, metadata !4517, metadata !DIExpression()), !dbg !4583
  %82 = trunc i24 %78 to i3, !dbg !4617
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4617

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4618

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4621
  call void @llvm.dbg.value(metadata i8* %85, metadata !4441, metadata !DIExpression()), !dbg !4569
  %86 = bitcast i8* %77 to i32*, !dbg !4621
  %87 = load i32, i32* %86, align 4, !dbg !4621
  %88 = sext i32 %87 to i64, !dbg !4621
  store i64 %88, i64* %20, align 8, !dbg !4623
  br label %115, !dbg !4624

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4625
  call void @llvm.dbg.value(metadata i8* %90, metadata !4441, metadata !DIExpression()), !dbg !4569
  %91 = bitcast i8* %77 to i32*, !dbg !4625
  %92 = load i32, i32* %91, align 4, !dbg !4625
  %93 = sext i32 %92 to i64, !dbg !4625
  store i64 %93, i64* %20, align 8, !dbg !4628
  br label %115, !dbg !4629

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4630
  %96 = add i32 %95, 7, !dbg !4630
  %97 = and i32 %96, -8, !dbg !4630
  %98 = inttoptr i32 %97 to i8*, !dbg !4630
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4630
  call void @llvm.dbg.value(metadata i8* %99, metadata !4441, metadata !DIExpression()), !dbg !4569
  %100 = inttoptr i32 %97 to i64*, !dbg !4630
  %101 = load i64, i64* %100, align 8, !dbg !4630
  store i64 %101, i64* %20, align 8, !dbg !4631
  br label %115, !dbg !4632

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4633
  %104 = add i32 %103, 7, !dbg !4633
  %105 = and i32 %104, -8, !dbg !4633
  %106 = inttoptr i32 %105 to i8*, !dbg !4633
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %107, metadata !4441, metadata !DIExpression()), !dbg !4569
  %108 = inttoptr i32 %105 to i64*, !dbg !4633
  %109 = load i64, i64* %108, align 8, !dbg !4633
  store i64 %109, i64* %20, align 8, !dbg !4634
  br label %115, !dbg !4635

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4636
  call void @llvm.dbg.value(metadata i8* %111, metadata !4441, metadata !DIExpression()), !dbg !4569
  %112 = bitcast i8* %77 to i32*, !dbg !4636
  %113 = load i32, i32* %112, align 4, !dbg !4636
  %114 = sext i32 %113 to i64, !dbg !4637
  store i64 %114, i64* %20, align 8, !dbg !4638
  br label %115, !dbg !4639

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4640
  call void @llvm.dbg.value(metadata i8* %117, metadata !4441, metadata !DIExpression()), !dbg !4569
  %118 = trunc i24 %79 to i4, !dbg !4641
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4641

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4642
  %121 = ashr exact i64 %120, 56, !dbg !4642
  store i64 %121, i64* %20, align 8, !dbg !4645
  br label %177, !dbg !4646

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4647
  %124 = ashr exact i64 %123, 48, !dbg !4647
  store i64 %124, i64* %20, align 8, !dbg !4650
  br label %177, !dbg !4651

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4652

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4655
  call void @llvm.dbg.value(metadata i8* %127, metadata !4441, metadata !DIExpression()), !dbg !4569
  %128 = bitcast i8* %77 to i32*, !dbg !4655
  %129 = load i32, i32* %128, align 4, !dbg !4655
  %130 = zext i32 %129 to i64, !dbg !4655
  store i64 %130, i64* %20, align 8, !dbg !4657
  br label %157, !dbg !4658

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4659
  call void @llvm.dbg.value(metadata i8* %132, metadata !4441, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %132, metadata !4441, metadata !DIExpression()), !dbg !4569
  %133 = bitcast i8* %77 to i32*, !dbg !4659
  %134 = load i32, i32* %133, align 4, !dbg !4659
  %135 = zext i32 %134 to i64, !dbg !4659
  store i64 %135, i64* %20, align 8, !dbg !4659
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4661
  %138 = add i32 %137, 7, !dbg !4661
  %139 = and i32 %138, -8, !dbg !4661
  %140 = inttoptr i32 %139 to i8*, !dbg !4661
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4661
  call void @llvm.dbg.value(metadata i8* %141, metadata !4441, metadata !DIExpression()), !dbg !4569
  %142 = inttoptr i32 %139 to i64*, !dbg !4661
  %143 = load i64, i64* %142, align 8, !dbg !4661
  store i64 %143, i64* %20, align 8, !dbg !4662
  br label %157, !dbg !4663

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4664
  %146 = add i32 %145, 7, !dbg !4664
  %147 = and i32 %146, -8, !dbg !4664
  %148 = inttoptr i32 %147 to i8*, !dbg !4664
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4664
  call void @llvm.dbg.value(metadata i8* %149, metadata !4441, metadata !DIExpression()), !dbg !4569
  %150 = inttoptr i32 %147 to i64*, !dbg !4664
  %151 = load i64, i64* %150, align 8, !dbg !4664
  store i64 %151, i64* %20, align 8, !dbg !4665
  br label %157, !dbg !4666

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %153, metadata !4441, metadata !DIExpression()), !dbg !4569
  %154 = bitcast i8* %77 to i32*, !dbg !4667
  %155 = load i32, i32* %154, align 4, !dbg !4667
  %156 = zext i32 %155 to i64, !dbg !4668
  store i64 %156, i64* %20, align 8, !dbg !4669
  br label %157, !dbg !4670

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4671
  call void @llvm.dbg.value(metadata i8* %159, metadata !4441, metadata !DIExpression()), !dbg !4569
  %160 = trunc i24 %79 to i4, !dbg !4672
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4672

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4673
  store i64 %162, i64* %20, align 8, !dbg !4676
  br label %177, !dbg !4677

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4678
  store i64 %164, i64* %20, align 8, !dbg !4681
  br label %177, !dbg !4682

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4683
  %167 = add i32 %166, 7, !dbg !4683
  %168 = and i32 %167, -8, !dbg !4683
  %169 = inttoptr i32 %168 to i8*, !dbg !4683
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4683
  call void @llvm.dbg.value(metadata i8* %170, metadata !4441, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %170, metadata !4441, metadata !DIExpression()), !dbg !4569
  %171 = inttoptr i32 %168 to double*, !dbg !4683
  %172 = load double, double* %171, align 8, !dbg !4683
  store double %172, double* %19, align 8, !dbg !4683
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %174, metadata !4441, metadata !DIExpression()), !dbg !4569
  %175 = bitcast i8* %77 to i8**, !dbg !4687
  %176 = load i8*, i8** %175, align 4, !dbg !4687
  store i8* %176, i8** %18, align 8, !dbg !4690
  br label %177, !dbg !4691

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4583
  call void @llvm.dbg.value(metadata i8* %178, metadata !4441, metadata !DIExpression()), !dbg !4569
  %179 = and i24 %75, 3, !dbg !4692
  %180 = icmp eq i24 %179, 0, !dbg !4692
  br i1 %180, label %185, label %181, !dbg !4692

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %182, metadata !4518, metadata !DIExpression()), !dbg !4694
  %183 = icmp slt i32 %182, 0, !dbg !4695
  %184 = add i32 %182, %29, !dbg !4693
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4697
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4698

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4699
  call void @llvm.dbg.value(metadata i32 %188, metadata !4522, metadata !DIExpression()), !dbg !4700
  %189 = icmp slt i32 %188, 0, !dbg !4701
  %190 = add i32 %29, 1, !dbg !4699
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %192, metadata !4510, metadata !DIExpression()), !dbg !4583
  %193 = icmp sgt i32 %76, -1, !dbg !4704
  br i1 %193, label %194, label %196, !dbg !4706

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %195, metadata !4525, metadata !DIExpression()), !dbg !4709
  br label %241, !dbg !4710

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4711
  call void @llvm.dbg.value(metadata i32 %197, metadata !4525, metadata !DIExpression()), !dbg !4709
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4510, metadata !DIExpression()), !dbg !4583
  %199 = load i64, i64* %20, align 8, !dbg !4713
  %200 = trunc i64 %199 to i8, !dbg !4714
  store i8 %200, i8* %10, align 1, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %23, metadata !4511, metadata !DIExpression()), !dbg !4583
  br label %245, !dbg !4716

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4717
  %203 = icmp eq i24 %202, 0, !dbg !4717
  %204 = trunc i24 %75 to i8, !dbg !4719
  %205 = shl i8 %204, 1, !dbg !4719
  %206 = and i8 %205, 32, !dbg !4719
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4719
  call void @llvm.dbg.value(metadata i8 %207, metadata !4512, metadata !DIExpression()), !dbg !4583
  %208 = load i64, i64* %20, align 8, !dbg !4720
  call void @llvm.dbg.value(metadata i64 %208, metadata !4448, metadata !DIExpression()), !dbg !4569
  %209 = icmp slt i64 %208, 0, !dbg !4721
  br i1 %209, label %210, label %212, !dbg !4723

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4512, metadata !DIExpression()), !dbg !4583
  %211 = sub nsw i64 0, %208, !dbg !4724
  store i64 %211, i64* %20, align 8, !dbg !4726
  br label %212, !dbg !4727

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4583
  call void @llvm.dbg.value(metadata i8 %213, metadata !4512, metadata !DIExpression()), !dbg !4583
  %214 = load i64, i64* %20, align 8, !dbg !4728
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %215, metadata !4510, metadata !DIExpression()), !dbg !4583
  br label %216, !dbg !4730

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4731
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4732
  call void @llvm.dbg.value(metadata i8* %218, metadata !4510, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8 %217, metadata !4512, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.label(metadata !4568), !dbg !4733
  %219 = icmp sgt i32 %76, -1, !dbg !4734
  br i1 %219, label %222, label %220, !dbg !4735

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4736
  br label %245, !dbg !4735

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4738
  %224 = sub i32 %22, %223, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %224, metadata !4527, metadata !DIExpression()), !dbg !4739
  %225 = load i24, i24* %15, align 8, !dbg !4740
  %226 = and i24 %225, -65, !dbg !4740
  store i24 %226, i24* %15, align 8, !dbg !4740
  %227 = icmp ugt i32 %76, %224, !dbg !4741
  br i1 %227, label %228, label %245, !dbg !4743

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4744
  store i32 %229, i32* %16, align 4, !dbg !4746
  br label %245, !dbg !4747

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4748
  %232 = icmp eq i8* %231, null, !dbg !4750
  br i1 %232, label %245, label %233, !dbg !4751

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4752
  %235 = zext i32 %234 to i64, !dbg !4752
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4754
  call void @llvm.dbg.value(metadata i8* %236, metadata !4510, metadata !DIExpression()), !dbg !4583
  %237 = load i24, i24* %15, align 8, !dbg !4755
  %238 = or i24 %237, 1048576, !dbg !4755
  store i24 %238, i24* %15, align 8, !dbg !4755
  store i8 120, i8* %21, align 1, !dbg !4756
  br label %216, !dbg !4757

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4758
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4761
  br label %363, !dbg !4762

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4763
  call void @llvm.dbg.value(metadata i32 %242, metadata !4525, metadata !DIExpression()), !dbg !4709
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4764
  call void @llvm.dbg.value(metadata i32 -1, metadata !4509, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %29, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %192, metadata !4510, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %243, metadata !4511, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8 0, metadata !4512, metadata !DIExpression()), !dbg !4583
  %244 = icmp eq i8* %192, null, !dbg !4765
  br i1 %244, label %363, label %245, !dbg !4767, !llvm.loop !4579

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4736
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata i32 0, metadata !4531, metadata !DIExpression()), !dbg !4583
  %250 = zext i8 %249 to i32, !dbg !4768
  %251 = icmp eq i8 %249, 0, !dbg !4770
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4583
  %252 = icmp sgt i32 %58, 0, !dbg !4771
  br i1 %252, label %253, label %302, !dbg !4772

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4736
  %255 = icmp eq i24 %254, 0, !dbg !4736
  %256 = ptrtoint i8* %248 to i32, !dbg !4773
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %257 = ptrtoint i8* %247 to i32, !dbg !4773
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %258 = xor i1 %251, true, !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %259 = sext i1 %258 to i32, !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %260 = lshr i24 %246, 19, !dbg !4775
  %261 = and i24 %260, 1, !dbg !4775
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4775
  %263 = zext i24 %262 to i32, !dbg !4775
  %264 = add i32 %257, %259, !dbg !4775
  %265 = add i32 %256, %263, !dbg !4775
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %266 = and i24 %246, 4194304, !dbg !4776
  %267 = icmp eq i24 %266, 0, !dbg !4776
  %268 = load i32, i32* %16, align 4, !dbg !4778
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4583
  %269 = load i32, i32* %17, align 8, !dbg !4779
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4779
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4583
  %271 = add i32 %264, %58, !dbg !4779
  %272 = add i32 %265, %268, !dbg !4779
  %273 = add i32 %272, %270, !dbg !4780
  %274 = sub i32 %271, %273, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %274, metadata !4508, metadata !DIExpression()), !dbg !4583
  %275 = and i24 %246, 4, !dbg !4781
  %276 = icmp eq i24 %275, 0, !dbg !4781
  br i1 %276, label %277, label %302, !dbg !4782

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4532, metadata !DIExpression()), !dbg !4783
  %278 = and i24 %246, 64, !dbg !4784
  %279 = icmp eq i24 %278, 0, !dbg !4784
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4785
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4785
  %282 = select i1 %279, i32 32, i32 48, !dbg !4785
  br i1 %280, label %287, label %283, !dbg !4785

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %284, metadata !4537, metadata !DIExpression()), !dbg !4787
  %285 = icmp slt i32 %284, 0, !dbg !4788
  %286 = add i32 %29, 1, !dbg !4786
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4583
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %290, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8 undef, metadata !4532, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 %288, metadata !4512, metadata !DIExpression()), !dbg !4583
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4790
  %292 = add i32 %291, -1, !dbg !4790
  br label %293, !dbg !4790

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4791
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %295, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %294, metadata !4508, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %294, metadata !4508, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4583
  %296 = icmp sgt i32 %294, 0, !dbg !4792
  br i1 %296, label %297, label %302, !dbg !4790

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %298, metadata !4508, metadata !DIExpression()), !dbg !4583
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %299, metadata !4543, metadata !DIExpression()), !dbg !4795
  %300 = icmp slt i32 %299, 0, !dbg !4796
  %301 = add i32 %295, 1, !dbg !4794
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %300, label %361, label %293, !llvm.loop !4798

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4583
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4583
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %305, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %304, metadata !4508, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8 %303, metadata !4512, metadata !DIExpression()), !dbg !4583
  %306 = icmp eq i8 %303, 0, !dbg !4800
  br i1 %306, label %312, label %307, !dbg !4801

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4802
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %309, metadata !4546, metadata !DIExpression()), !dbg !4804
  %310 = icmp slt i32 %309, 0, !dbg !4805
  %311 = add i32 %305, 1, !dbg !4803
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %313, metadata !4447, metadata !DIExpression()), !dbg !4569
  %314 = lshr i24 %246, 20, !dbg !4807
  %315 = lshr i24 %246, 19, !dbg !4808
  %316 = or i24 %314, %315, !dbg !4809
  %317 = and i24 %316, 1, !dbg !4809
  %318 = icmp eq i24 %317, 0, !dbg !4809
  br i1 %318, label %323, label %319, !dbg !4810

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %320, metadata !4550, metadata !DIExpression()), !dbg !4812
  %321 = icmp slt i32 %320, 0, !dbg !4813
  %322 = add i32 %313, 1, !dbg !4811
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %324, metadata !4447, metadata !DIExpression()), !dbg !4569
  %325 = and i24 %246, 1048576, !dbg !4815
  %326 = icmp eq i24 %325, 0, !dbg !4815
  br i1 %326, label %333, label %327, !dbg !4816

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4817
  %329 = zext i8 %328 to i32, !dbg !4817
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %330, metadata !4556, metadata !DIExpression()), !dbg !4818
  %331 = icmp slt i32 %330, 0, !dbg !4819
  %332 = add i32 %324, 1, !dbg !4817
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %334, metadata !4447, metadata !DIExpression()), !dbg !4569
  %335 = load i32, i32* %16, align 4, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %335, metadata !4531, metadata !DIExpression()), !dbg !4583
  br label %336, !dbg !4822

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4823
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %338, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %337, metadata !4531, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4583
  %339 = icmp sgt i32 %337, 0, !dbg !4824
  br i1 %339, label %340, label %345, !dbg !4822

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %341, metadata !4531, metadata !DIExpression()), !dbg !4583
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %342, metadata !4560, metadata !DIExpression()), !dbg !4827
  %343 = icmp slt i32 %342, 0, !dbg !4828
  %344 = add i32 %338, 1, !dbg !4826
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %343, label %361, label %336, !llvm.loop !4830

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %346, metadata !4563, metadata !DIExpression()), !dbg !4833
  %347 = icmp slt i32 %346, 0, !dbg !4834
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %349, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %304, metadata !4508, metadata !DIExpression()), !dbg !4583
  %350 = icmp sgt i32 %304, 0, !dbg !4836
  br i1 %350, label %351, label %363, !dbg !4837

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4837
  %353 = add i32 %352, %338, !dbg !4837
  br label %354, !dbg !4837

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %355, metadata !4508, metadata !DIExpression()), !dbg !4583
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %356, metadata !4565, metadata !DIExpression()), !dbg !4839
  %357 = icmp slt i32 %356, 0, !dbg !4840
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4842
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %359, metadata !4508, metadata !DIExpression()), !dbg !4583
  %360 = icmp sgt i32 %355, 1, !dbg !4836
  br i1 %360, label %354, label %363, !dbg !4837, !llvm.loop !4843

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4580
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %364, metadata !4447, metadata !DIExpression()), !dbg !4569
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4580
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4569
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4845
  ret i32 %366, !dbg !4845
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4846 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4850, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i8* %1, metadata !4851, metadata !DIExpression()), !dbg !4852
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4853
  store i24 0, i24* %3, align 4, !dbg !4853
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4853
  store i8 0, i8* %4, align 1, !dbg !4853
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4853
  store i32 0, i32* %5, align 4, !dbg !4853
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4853
  store i32 0, i32* %6, align 4, !dbg !4853
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4854
  call void @llvm.dbg.value(metadata i8* %7, metadata !4851, metadata !DIExpression()), !dbg !4852
  %8 = load i8, i8* %7, align 1, !dbg !4855
  %9 = icmp eq i8 %8, 37, !dbg !4857
  br i1 %9, label %10, label %12, !dbg !4858

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %11, metadata !4851, metadata !DIExpression()), !dbg !4852
  store i8 37, i8* %4, align 1, !dbg !4861
  br label %18, !dbg !4862

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4863
  call void @llvm.dbg.value(metadata i8* %13, metadata !4851, metadata !DIExpression()), !dbg !4852
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4864
  call void @llvm.dbg.value(metadata i8* %14, metadata !4851, metadata !DIExpression()), !dbg !4852
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %15, metadata !4851, metadata !DIExpression()), !dbg !4852
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4866
  call void @llvm.dbg.value(metadata i8* %16, metadata !4851, metadata !DIExpression()), !dbg !4852
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %17, metadata !4851, metadata !DIExpression()), !dbg !4852
  br label %18, !dbg !4868

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4852
  ret i8* %19, !dbg !4869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4870 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4874, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %1, metadata !4875, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %2, metadata !4876, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %3, metadata !4877, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 0, metadata !4878, metadata !DIExpression()), !dbg !4881
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4882

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4883
  call void @llvm.dbg.value(metadata i32 %9, metadata !4878, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %8, metadata !4876, metadata !DIExpression()), !dbg !4881
  %10 = icmp ult i8* %8, %3, !dbg !4884
  br i1 %10, label %11, label %13, !dbg !4885

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4886
  br label %17, !dbg !4885

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4887

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4888
  %16 = icmp eq i8 %15, 0, !dbg !4887
  br i1 %16, label %24, label %17, !dbg !4882

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4886
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %19, metadata !4876, metadata !DIExpression()), !dbg !4881
  %20 = zext i8 %18 to i32, !dbg !4890
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %21, metadata !4879, metadata !DIExpression()), !dbg !4892
  %22 = icmp slt i32 %21, 0, !dbg !4893
  %23 = add i32 %9, 1, !dbg !4895
  call void @llvm.dbg.value(metadata i32 undef, metadata !4878, metadata !DIExpression()), !dbg !4881
  br i1 %22, label %24, label %7, !llvm.loop !4896

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4881
  ret i32 %25, !dbg !4898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4899 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4903, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4904, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %2, metadata !4905, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %3, metadata !4906, metadata !DIExpression()), !dbg !4913
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4914
  %6 = load i8, i8* %5, align 1, !dbg !4914
  %7 = zext i8 %6 to i32, !dbg !4915
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4916
  %9 = icmp eq i32 %8, 0, !dbg !4916
  call void @llvm.dbg.value(metadata i1 %9, metadata !4907, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4913
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %10, metadata !4908, metadata !DIExpression()), !dbg !4913
  %11 = ptrtoint i8* %3 to i32, !dbg !4918
  %12 = ptrtoint i8* %2 to i32, !dbg !4918
  %13 = sub i32 %11, %12, !dbg !4918
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4919
  call void @llvm.dbg.value(metadata i8* %14, metadata !4910, metadata !DIExpression()), !dbg !4913
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4920

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4913
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4903, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %18, metadata !4910, metadata !DIExpression()), !dbg !4913
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4921
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %25, metadata !4911, metadata !DIExpression()), !dbg !4923
  %26 = icmp ult i32 %25, 10, !dbg !4924
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4925
  %28 = add i32 %27, %25, !dbg !4923
  %29 = trunc i32 %28 to i8, !dbg !4925
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4926
  call void @llvm.dbg.value(metadata i8* %30, metadata !4910, metadata !DIExpression()), !dbg !4913
  store i8 %29, i8* %30, align 1, !dbg !4927
  call void @llvm.dbg.value(metadata i64 %22, metadata !4903, metadata !DIExpression()), !dbg !4913
  %31 = icmp uge i64 %19, %15, !dbg !4928
  %32 = icmp ugt i8* %30, %2, !dbg !4929
  %33 = and i1 %31, %32, !dbg !4929
  br i1 %33, label %17, label %34, !dbg !4930, !llvm.loop !4931

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4933
  %36 = load i24, i24* %35, align 4, !dbg !4933
  %37 = and i24 %36, 32, !dbg !4933
  %38 = icmp eq i24 %37, 0, !dbg !4933
  br i1 %38, label %44, label %39, !dbg !4935

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4936

40:                                               ; preds = %39
  br label %41, !dbg !4938

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4942
  store i24 %43, i24* %35, align 4, !dbg !4942
  br label %44, !dbg !4943

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4943
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4944 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4950, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8* %1, metadata !4951, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i32 %2, metadata !4952, metadata !DIExpression()), !dbg !4953
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4954
  %5 = load i24, i24* %4, align 4, !dbg !4954
  %6 = lshr i24 %5, 11, !dbg !4954
  %7 = and i24 %6, 15, !dbg !4954
  %8 = zext i24 %7 to i32, !dbg !4954
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4955

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4956
  store i32 %2, i32* %10, align 4, !dbg !4958
  br label %28, !dbg !4959

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4960
  store i8 %12, i8* %1, align 1, !dbg !4961
  br label %28, !dbg !4962

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4963
  %15 = bitcast i8* %1 to i16*, !dbg !4964
  store i16 %14, i16* %15, align 2, !dbg !4965
  br label %28, !dbg !4966

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4967
  store i32 %2, i32* %17, align 4, !dbg !4968
  br label %28, !dbg !4969

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4970
  %20 = bitcast i8* %1 to i64*, !dbg !4971
  store i64 %19, i64* %20, align 8, !dbg !4972
  br label %28, !dbg !4973

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4974
  %23 = bitcast i8* %1 to i64*, !dbg !4975
  store i64 %22, i64* %23, align 8, !dbg !4976
  br label %28, !dbg !4977

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4978
  store i32 %2, i32* %25, align 4, !dbg !4979
  br label %28, !dbg !4980

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4981
  store i32 %2, i32* %27, align 4, !dbg !4982
  br label %28, !dbg !4983

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4984
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4988, metadata !DIExpression()), !dbg !4989
  %2 = add i32 %0, -65, !dbg !4990
  %3 = icmp ult i32 %2, 26, !dbg !4991
  %4 = zext i1 %3 to i32, !dbg !4991
  ret i32 %4, !dbg !4992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4993 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4997, metadata !DIExpression()), !dbg !4998
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4999

2:                                                ; preds = %1
  br label %4, !dbg !5000

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5002

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5003
  ret i32 %5, !dbg !5004
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5005 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5007, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %1, metadata !5008, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8 1, metadata !5009, metadata !DIExpression()), !dbg !5010
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5011

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5009, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %5, metadata !5008, metadata !DIExpression()), !dbg !5010
  %6 = load i8, i8* %5, align 1, !dbg !5012
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5014

7:                                                ; preds = %4
  br label %11, !dbg !5015

8:                                                ; preds = %4
  br label %11, !dbg !5017

9:                                                ; preds = %4
  br label %11, !dbg !5018

10:                                               ; preds = %4
  br label %11, !dbg !5019

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5020
  %14 = or i24 %13, %12, !dbg !5020
  store i24 %14, i24* %3, align 4, !dbg !5020
  call void @llvm.dbg.value(metadata i8 poison, metadata !5009, metadata !DIExpression()), !dbg !5010
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5008, metadata !DIExpression()), !dbg !5010
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5009, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %15, metadata !5008, metadata !DIExpression()), !dbg !5010
  %17 = load i24, i24* %3, align 4, !dbg !5021
  %18 = and i24 %17, 68, !dbg !5023
  %19 = icmp eq i24 %18, 68, !dbg !5023
  br i1 %19, label %20, label %22, !dbg !5023

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5024
  store i24 %21, i24* %3, align 4, !dbg !5024
  br label %22, !dbg !5026

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5027
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5028 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5030, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5034
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5035
  %5 = load i24, i24* %4, align 4, !dbg !5036
  %6 = or i24 %5, 128, !dbg !5036
  store i24 %6, i24* %4, align 4, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5034
  %7 = load i8, i8* %1, align 1, !dbg !5037
  %8 = icmp eq i8 %7, 42, !dbg !5039
  br i1 %8, label %9, label %12, !dbg !5040

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5041
  store i24 %10, i24* %4, align 4, !dbg !5041
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5034
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %11, metadata !5031, metadata !DIExpression()), !dbg !5034
  store i8* %11, i8** %3, align 4, !dbg !5043
  br label %29, !dbg !5044

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5032, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8** %3, metadata !5031, metadata !DIExpression(DW_OP_deref)), !dbg !5034
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5045
  call void @llvm.dbg.value(metadata i32 %13, metadata !5033, metadata !DIExpression()), !dbg !5034
  %14 = load i8*, i8** %3, align 4, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %14, metadata !5031, metadata !DIExpression()), !dbg !5034
  %15 = icmp eq i8* %14, %1, !dbg !5048
  br i1 %15, label %29, label %16, !dbg !5049

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5050
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5052
  store i32 %13, i32* %18, align 4, !dbg !5053
  %19 = lshr i32 %13, 31, !dbg !5054
  %20 = lshr i24 %17, 1, !dbg !5055
  %21 = and i24 %20, 1, !dbg !5055
  %22 = zext i24 %21 to i32, !dbg !5055
  %23 = or i32 %19, %22, !dbg !5055
  %24 = trunc i32 %23 to i24, !dbg !5055
  %25 = shl nuw nsw i24 %24, 1, !dbg !5055
  %26 = and i24 %17, -131, !dbg !5055
  %27 = or i24 %26, 128, !dbg !5055
  %28 = or i24 %25, %27, !dbg !5055
  store i24 %28, i24* %4, align 4, !dbg !5055
  br label %29, !dbg !5056

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5034
  ret i8* %30, !dbg !5057
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5058 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5060, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %1, metadata !5061, metadata !DIExpression()), !dbg !5063
  %4 = load i8, i8* %1, align 1, !dbg !5064
  %5 = icmp eq i8 %4, 46, !dbg !5065
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5066
  %7 = load i24, i24* %6, align 4, !dbg !5067
  %8 = select i1 %5, i24 512, i24 0, !dbg !5067
  %9 = and i24 %7, -513, !dbg !5067
  %10 = or i24 %9, %8, !dbg !5067
  store i24 %10, i24* %6, align 4, !dbg !5067
  br i1 %5, label %11, label %32, !dbg !5068

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5061, metadata !DIExpression()), !dbg !5063
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5069
  call void @llvm.dbg.value(metadata i8* %12, metadata !5061, metadata !DIExpression()), !dbg !5063
  store i8* %12, i8** %3, align 4, !dbg !5069
  %13 = load i8, i8* %12, align 1, !dbg !5070
  %14 = icmp eq i8 %13, 42, !dbg !5072
  br i1 %14, label %15, label %18, !dbg !5073

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5074
  store i24 %16, i24* %6, align 4, !dbg !5074
  call void @llvm.dbg.value(metadata i8* %12, metadata !5061, metadata !DIExpression()), !dbg !5063
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5076
  call void @llvm.dbg.value(metadata i8* %17, metadata !5061, metadata !DIExpression()), !dbg !5063
  store i8* %17, i8** %3, align 4, !dbg !5076
  br label %32, !dbg !5077

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5061, metadata !DIExpression(DW_OP_deref)), !dbg !5063
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %19, metadata !5062, metadata !DIExpression()), !dbg !5063
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5079
  store i32 %19, i32* %20, align 4, !dbg !5080
  %21 = lshr i32 %19, 31, !dbg !5081
  %22 = load i24, i24* %6, align 4, !dbg !5082
  %23 = lshr i24 %22, 1, !dbg !5082
  %24 = and i24 %23, 1, !dbg !5082
  %25 = zext i24 %24 to i32, !dbg !5082
  %26 = or i32 %21, %25, !dbg !5082
  %27 = trunc i32 %26 to i24, !dbg !5082
  %28 = shl nuw nsw i24 %27, 1, !dbg !5082
  %29 = and i24 %22, -3, !dbg !5082
  %30 = or i24 %28, %29, !dbg !5082
  store i24 %30, i24* %6, align 4, !dbg !5082
  %31 = load i8*, i8** %3, align 4, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %31, metadata !5061, metadata !DIExpression()), !dbg !5063
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5063
  ret i8* %33, !dbg !5084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5085 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5087, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.value(metadata i8* %1, metadata !5088, metadata !DIExpression()), !dbg !5089
  %3 = load i8, i8* %1, align 1, !dbg !5090
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5091

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5092
  call void @llvm.dbg.value(metadata i8* %5, metadata !5088, metadata !DIExpression()), !dbg !5089
  %6 = load i8, i8* %5, align 1, !dbg !5095
  %7 = icmp eq i8 %6, 104, !dbg !5096
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5097
  %9 = load i24, i24* %8, align 4, !dbg !5097
  %10 = and i24 %9, -30721, !dbg !5097
  br i1 %7, label %11, label %14, !dbg !5098

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5099
  store i24 %12, i24* %8, align 4, !dbg !5099
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5101
  call void @llvm.dbg.value(metadata i8* %13, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5102

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5103
  store i24 %15, i24* %8, align 4, !dbg !5103
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %17, metadata !5088, metadata !DIExpression()), !dbg !5089
  %18 = load i8, i8* %17, align 1, !dbg !5107
  %19 = icmp eq i8 %18, 108, !dbg !5108
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5109
  %21 = load i24, i24* %20, align 4, !dbg !5109
  %22 = and i24 %21, -30721, !dbg !5109
  br i1 %19, label %23, label %26, !dbg !5110

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5111
  store i24 %24, i24* %20, align 4, !dbg !5111
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5113
  call void @llvm.dbg.value(metadata i8* %25, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5114

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5115
  store i24 %27, i24* %20, align 4, !dbg !5115
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5117
  %30 = load i24, i24* %29, align 4, !dbg !5118
  %31 = and i24 %30, -30721, !dbg !5118
  %32 = or i24 %31, 10240, !dbg !5118
  store i24 %32, i24* %29, align 4, !dbg !5118
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5119
  call void @llvm.dbg.value(metadata i8* %33, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5120

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5121
  %36 = load i24, i24* %35, align 4, !dbg !5122
  %37 = and i24 %36, -30721, !dbg !5122
  %38 = or i24 %37, 12288, !dbg !5122
  store i24 %38, i24* %35, align 4, !dbg !5122
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5123
  call void @llvm.dbg.value(metadata i8* %39, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5124

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5125
  %42 = load i24, i24* %41, align 4, !dbg !5126
  %43 = and i24 %42, -30721, !dbg !5126
  %44 = or i24 %43, 14336, !dbg !5126
  store i24 %44, i24* %41, align 4, !dbg !5126
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %45, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5128

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5129
  %48 = load i24, i24* %47, align 4, !dbg !5130
  %49 = and i24 %48, -30723, !dbg !5130
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5131
  call void @llvm.dbg.value(metadata i8* %50, metadata !5088, metadata !DIExpression()), !dbg !5089
  %51 = or i24 %49, 16386, !dbg !5132
  store i24 %51, i24* %47, align 4, !dbg !5132
  br label %56, !dbg !5133

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5134
  %54 = load i24, i24* %53, align 4, !dbg !5135
  %55 = and i24 %54, -30721, !dbg !5135
  store i24 %55, i24* %53, align 4, !dbg !5135
  br label %56, !dbg !5136

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5088, metadata !DIExpression()), !dbg !5089
  ret i8* %57, !dbg !5137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5138 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5140, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8* %1, metadata !5141, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8 0, metadata !5142, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8* %1, metadata !5141, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5145
  %3 = load i8, i8* %1, align 1, !dbg !5146
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5147
  store i8 %3, i8* %4, align 1, !dbg !5148
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5149

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5150

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5151
  %9 = load i24, i24* %8, align 4, !dbg !5151
  %10 = and i24 %9, -458753, !dbg !5151
  %11 = or i24 %10, %7, !dbg !5151
  call void @llvm.dbg.label(metadata !5143), !dbg !5152
  %12 = and i24 %9, 30720, !dbg !5153
  %13 = icmp eq i24 %12, 16384, !dbg !5153
  %14 = zext i1 %13 to i24, !dbg !5155
  %15 = or i24 %11, %14, !dbg !5155
  %16 = icmp eq i8 %3, 99, !dbg !5156
  br i1 %16, label %17, label %43, !dbg !5158

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5159
  %19 = icmp ne i24 %18, 0, !dbg !5159
  call void @llvm.dbg.value(metadata i1 %19, metadata !5142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5145
  br label %43, !dbg !5161

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5162
  %22 = load i24, i24* %21, align 4, !dbg !5163
  %23 = and i24 %22, -458753, !dbg !5163
  %24 = or i24 %23, 262144, !dbg !5163
  call void @llvm.dbg.value(metadata i8 1, metadata !5142, metadata !DIExpression()), !dbg !5145
  br label %43, !dbg !5164

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5167
  %27 = load i24, i24* %26, align 4, !dbg !5168
  %28 = and i24 %27, -458753, !dbg !5168
  %29 = or i24 %28, 196608, !dbg !5168
  %30 = and i24 %27, 30720, !dbg !5169
  %31 = icmp eq i24 %30, 16384, !dbg !5169
  br label %43, !dbg !5171

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5172
  %34 = load i24, i24* %33, align 4, !dbg !5173
  %35 = and i24 %34, -458753, !dbg !5173
  %36 = or i24 %35, 196608, !dbg !5173
  %37 = and i24 %34, 30720, !dbg !5174
  %38 = icmp ne i24 %37, 0, !dbg !5174
  br label %43, !dbg !5176

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5177
  %41 = load i24, i24* %40, align 4, !dbg !5178
  %42 = or i24 %41, 1, !dbg !5178
  br label %43, !dbg !5179

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5180
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5181
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %48, metadata !5141, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8 poison, metadata !5142, metadata !DIExpression()), !dbg !5145
  %49 = lshr i24 %44, 1, !dbg !5180
  %50 = and i24 %49, 1, !dbg !5180
  %51 = zext i24 %50 to i32, !dbg !5180
  %52 = or i32 %51, %47, !dbg !5180
  %53 = trunc i32 %52 to i24, !dbg !5180
  %54 = shl nuw nsw i24 %53, 1, !dbg !5180
  %55 = and i24 %44, -3, !dbg !5180
  %56 = or i24 %54, %55, !dbg !5180
  store i24 %56, i24* %46, align 4, !dbg !5180
  ret i8* %48, !dbg !5183
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5184 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5189, metadata !DIExpression()), !dbg !5192
  %2 = load i8*, i8** %0, align 4, !dbg !5193
  call void @llvm.dbg.value(metadata i8* %2, metadata !5190, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i32 0, metadata !5191, metadata !DIExpression()), !dbg !5192
  %3 = load i8, i8* %2, align 1, !dbg !5194
  %4 = zext i8 %3 to i32, !dbg !5195
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5196
  %6 = icmp eq i32 %5, 0, !dbg !5197
  br i1 %6, label %19, label %7, !dbg !5197

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5191, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i8* %10, metadata !5190, metadata !DIExpression()), !dbg !5192
  %11 = mul i32 %9, 10, !dbg !5198
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5200
  call void @llvm.dbg.value(metadata i8* %12, metadata !5190, metadata !DIExpression()), !dbg !5192
  %13 = add i32 %11, -48, !dbg !5201
  %14 = add i32 %13, %8, !dbg !5202
  call void @llvm.dbg.value(metadata i32 %14, metadata !5191, metadata !DIExpression()), !dbg !5192
  %15 = load i8, i8* %12, align 1, !dbg !5194
  %16 = zext i8 %15 to i32, !dbg !5195
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5196
  %18 = icmp eq i32 %17, 0, !dbg !5197
  br i1 %18, label %19, label %7, !dbg !5197, !llvm.loop !5203

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5192
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5192
  store i8* %20, i8** %0, align 4, !dbg !5205
  ret i32 %21, !dbg !5206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5209, metadata !DIExpression()), !dbg !5210
  %2 = add i32 %0, -48, !dbg !5211
  %3 = icmp ult i32 %2, 10, !dbg !5212
  %4 = zext i1 %3 to i32, !dbg !5212
  ret i32 %4, !dbg !5213
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5214 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #24, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #24, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #24, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #24, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #24, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #24, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #24, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #24, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #24, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #24, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #24, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #24, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,64\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,512\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5770, !srcloc !5771
  ret void, !dbg !5772
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5775, metadata !DIExpression()), !dbg !5777
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5778, !srcloc !5787
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5778
  call void @llvm.dbg.value(metadata i32 %3, metadata !5784, metadata !DIExpression()) #24, !dbg !5788
  call void @llvm.dbg.value(metadata i32 undef, metadata !5785, metadata !DIExpression()) #24, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %3, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.value(metadata i32 %3, metadata !5789, metadata !DIExpression()) #24, !dbg !5794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5796, !srcloc !5797
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !5798
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !5799
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #26, !dbg !5800
  ret i32 0, !dbg !5801
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !5802 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !5807, metadata !DIExpression()), !dbg !5809
  %2 = bitcast i32* %1 to i8*, !dbg !5810
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5810
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5808, metadata !DIExpression()), !dbg !5811
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5812
  %4 = or i32 %3, 268435456, !dbg !5812
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5812
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5813
  %6 = and i32 %5, 268435456, !dbg !5813
  store volatile i32 %6, i32* %1, align 4, !dbg !5814
  %7 = load volatile i32, i32* %1, align 4, !dbg !5815
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5816
  ret void, !dbg !5816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #16 !dbg !5817 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !5820, metadata !DIExpression()), !dbg !5821
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5822
  %2 = and i32 %1, -6145, !dbg !5822
  %3 = or i32 %2, 2048, !dbg !5822
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5822
  ret void, !dbg !5823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5824 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5826, metadata !DIExpression()), !dbg !5827
  ret i32 0, !dbg !5828
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5829 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5875, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i8* %1, metadata !5876, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %2, metadata !5877, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i8* %1, metadata !5878, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 0, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 0, metadata !5880, metadata !DIExpression()), !dbg !5881
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5882
  %5 = load i32, i32* %4, align 4, !dbg !5882
  %6 = icmp eq i32 %5, 0, !dbg !5884
  %7 = icmp eq i32 %2, 0, !dbg !5881
  br i1 %6, label %9, label %8, !dbg !5885

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i8* %1, metadata !5878, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %2, metadata !5877, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %2, metadata !5877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5881
  br i1 %7, label %37, label %20, !dbg !5886

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5878, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %2, metadata !5877, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %2, metadata !5877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5881
  br i1 %7, label %37, label %10, !dbg !5887

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5887

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5878, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %14, metadata !5877, metadata !DIExpression()), !dbg !5881
  %15 = add i32 %14, -1, !dbg !5889
  call void @llvm.dbg.value(metadata i32 %15, metadata !5877, metadata !DIExpression()), !dbg !5881
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5890
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5892
  call void @llvm.dbg.value(metadata i8* %17, metadata !5878, metadata !DIExpression()), !dbg !5881
  %18 = load i8, i8* %13, align 1, !dbg !5893
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5894
  call void @llvm.dbg.value(metadata i32 %15, metadata !5877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5881
  %19 = icmp eq i32 %15, 0, !dbg !5887
  br i1 %19, label %37, label %12, !dbg !5887, !llvm.loop !5895

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %22, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i8* %23, metadata !5878, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i8* %23, metadata !5878, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5881
  %25 = load i8, i8* %23, align 1, !dbg !5898
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %26, metadata !5880, metadata !DIExpression()), !dbg !5881
  %27 = icmp slt i32 %26, 0, !dbg !5901
  br i1 %27, label %28, label %33, !dbg !5903

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5904
  br i1 %29, label %30, label %37, !dbg !5907

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5908
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5910
  store i32 %31, i32* %32, align 4, !dbg !5911
  br label %37, !dbg !5912

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5913
  call void @llvm.dbg.value(metadata i8* %34, metadata !5878, metadata !DIExpression()), !dbg !5881
  %35 = add nuw i32 %22, 1, !dbg !5914
  call void @llvm.dbg.value(metadata i32 %35, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %24, metadata !5877, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %24, metadata !5877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5881
  %36 = icmp eq i32 %24, 0, !dbg !5886
  br i1 %36, label %37, label %20, !dbg !5886, !llvm.loop !5915

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5881
  ret i32 %38, !dbg !5917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5921, metadata !DIExpression()), !dbg !5923
  call void @llvm.dbg.value(metadata i8 %1, metadata !5922, metadata !DIExpression()), !dbg !5923
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5924, !srcloc !5926
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !5927
  ret void, !dbg !5928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5929 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5933, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i8 %1, metadata !5934, metadata !DIExpression()), !dbg !5938
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5939
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !5940
  br i1 %4, label %14, label %5, !dbg !5940

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5941
  %7 = load i32, i32* %6, align 4, !dbg !5941
  %8 = icmp eq i32 %7, -1, !dbg !5941
  br i1 %8, label %14, label %9, !dbg !5941

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5941
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5941
  %12 = zext i32 %11 to i64, !dbg !5941
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !5941
  br label %14, !dbg !5941

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5938
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5942
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %17, metadata !5937, metadata !DIExpression()), !dbg !5938
  %18 = icmp slt i32 %17, 0, !dbg !5943
  br i1 %18, label %42, label %19, !dbg !5945

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5946, !srcloc !5952
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5946
  call void @llvm.dbg.value(metadata i32 %21, metadata !5949, metadata !DIExpression()) #24, !dbg !5953
  call void @llvm.dbg.value(metadata i32 undef, metadata !5950, metadata !DIExpression()) #24, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %21, metadata !5935, metadata !DIExpression()), !dbg !5938
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5954
  %23 = load i16, i16* %22, align 2, !dbg !5954
  %24 = zext i16 %23 to i32, !dbg !5955
  %25 = add nuw nsw i32 %24, 1, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %25, metadata !5936, metadata !DIExpression()), !dbg !5938
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5957
  %27 = load i32, i32* %26, align 4, !dbg !5957
  %28 = icmp ult i32 %25, %27, !dbg !5959
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %29, metadata !5936, metadata !DIExpression()), !dbg !5938
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5961
  %31 = load i16, i16* %30, align 4, !dbg !5961
  %32 = zext i16 %31 to i32, !dbg !5963
  %33 = icmp eq i32 %29, %32, !dbg !5964
  br i1 %33, label %34, label %35, !dbg !5965

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5966, metadata !DIExpression()) #24, !dbg !5969
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5972, !srcloc !5973
  br label %42, !dbg !5974

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !5975
  %37 = load i8*, i8** %36, align 4, !dbg !5975
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !5976
  store i8 %1, i8* %38, align 1, !dbg !5977
  %39 = trunc i32 %29 to i16, !dbg !5978
  store i16 %39, i16* %22, align 2, !dbg !5979
  call void @llvm.dbg.value(metadata i32 %21, metadata !5966, metadata !DIExpression()) #24, !dbg !5980
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5982, !srcloc !5973
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !5983
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !5983
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !5984
  br label %42, !dbg !5985

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5938
  ret i32 %43, !dbg !5986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !5987 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5991, !srcloc !5993
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !5994
  ret i32* %1, !dbg !5995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !5996 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6001, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i64 %0, metadata !6003, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i32 1000, metadata !6008, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i32 10000, metadata !6009, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8 1, metadata !6010, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8 0, metadata !6011, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8 1, metadata !6012, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8 0, metadata !6013, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8 1, metadata !6014, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8 0, metadata !6015, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i64 0, metadata !6016, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i64 0, metadata !6016, metadata !DIExpression()), !dbg !6020
  %2 = mul i64 %0, 10, !dbg !6022
  ret i64 %2, !dbg !6028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6029 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6039, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6038, metadata !DIExpression()), !dbg !6040
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6041, !srcloc !6043
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6044
  ret i32 %3, !dbg !6045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6046 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6048, metadata !DIExpression()), !dbg !6049
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6050, !srcloc !6052
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6053
  ret void, !dbg !6054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6055 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6057, metadata !DIExpression()), !dbg !6059
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6060
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6060
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6060
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6058, metadata !DIExpression()), !dbg !6059
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6061
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6061
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6063
  br i1 %7, label %9, label %8, !dbg !6064

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6065
  br label %9, !dbg !6067

9:                                                ; preds = %8, %1
  ret void, !dbg !6068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6069 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6071, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.value(metadata i8 %1, metadata !6072, metadata !DIExpression()), !dbg !6074
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6075
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6075
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6075
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6073, metadata !DIExpression()), !dbg !6074
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6076
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6076
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6077
  ret void, !dbg !6078
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6079 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6083, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i8* %1, metadata !6084, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %2, metadata !6085, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i8* %1, metadata !6086, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 0, metadata !6087, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 0, metadata !6088, metadata !DIExpression()), !dbg !6089
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6090
  %5 = load i32, i32* %4, align 4, !dbg !6090
  %6 = icmp eq i32 %5, 0, !dbg !6092
  br i1 %6, label %9, label %7, !dbg !6093

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6087, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i8* %1, metadata !6086, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %2, metadata !6085, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %2, metadata !6085, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6089
  %8 = icmp eq i32 %2, 0, !dbg !6094
  br i1 %8, label %28, label %11, !dbg !6094

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6095
  br label %28, !dbg !6097

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6098
  call void @llvm.dbg.value(metadata i32 %13, metadata !6087, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i8* %14, metadata !6086, metadata !DIExpression()), !dbg !6089
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6099
  call void @llvm.dbg.value(metadata i32 %16, metadata !6088, metadata !DIExpression()), !dbg !6089
  %17 = icmp slt i32 %16, 0, !dbg !6101
  br i1 %17, label %18, label %23, !dbg !6103

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6104
  br i1 %19, label %20, label %28, !dbg !6107

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6108
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6110
  store i32 %21, i32* %22, align 4, !dbg !6111
  br label %28, !dbg !6112

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6113
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6114
  call void @llvm.dbg.value(metadata i8* %25, metadata !6086, metadata !DIExpression()), !dbg !6089
  store i8 %24, i8* %14, align 1, !dbg !6115
  %26 = add nuw i32 %13, 1, !dbg !6116
  call void @llvm.dbg.value(metadata i32 %26, metadata !6087, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %15, metadata !6085, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %15, metadata !6085, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6089
  %27 = icmp eq i32 %15, 0, !dbg !6094
  br i1 %27, label %28, label %11, !dbg !6094, !llvm.loop !6117

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6089
  ret i32 %29, !dbg !6119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6120 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6122, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %1, metadata !6123, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 %2, metadata !6124, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %1, metadata !6125, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 0, metadata !6126, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 0, metadata !6127, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 undef, metadata !6128, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 0, metadata !6126, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %1, metadata !6125, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 %2, metadata !6124, metadata !DIExpression()), !dbg !6131
  %5 = icmp eq i32 %2, 0, !dbg !6132
  br i1 %5, label %48, label %6, !dbg !6132

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6133
  %8 = load i32, i32* %7, align 4, !dbg !6133
  call void @llvm.dbg.value(metadata i32 %8, metadata !6128, metadata !DIExpression()), !dbg !6131
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6132

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6128, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 %12, metadata !6126, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %13, metadata !6125, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 %14, metadata !6124, metadata !DIExpression()), !dbg !6131
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6134
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6135
  call void @llvm.dbg.value(metadata i8* %4, metadata !6129, metadata !DIExpression(DW_OP_deref)), !dbg !6136
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6137
  call void @llvm.dbg.value(metadata i32 %16, metadata !6127, metadata !DIExpression()), !dbg !6131
  %17 = icmp slt i32 %16, -1, !dbg !6138
  br i1 %17, label %18, label %22, !dbg !6140

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6141
  br i1 %19, label %20, label %44, !dbg !6144

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6145
  store i32 %16, i32* %21, align 4, !dbg !6147
  call void @llvm.dbg.value(metadata i32 %39, metadata !6128, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 undef, metadata !6126, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %32, metadata !6125, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 %33, metadata !6124, metadata !DIExpression()), !dbg !6131
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6148
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6149
  br i1 %23, label %24, label %30, !dbg !6151

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6152
  call void @llvm.dbg.value(metadata i8 %25, metadata !6129, metadata !DIExpression()), !dbg !6136
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6154
  call void @llvm.dbg.value(metadata i8* %26, metadata !6125, metadata !DIExpression()), !dbg !6131
  store i8 %25, i8* %13, align 1, !dbg !6155
  %27 = add i32 %12, 1, !dbg !6156
  call void @llvm.dbg.value(metadata i32 %27, metadata !6126, metadata !DIExpression()), !dbg !6131
  %28 = add i32 %14, -1, !dbg !6157
  call void @llvm.dbg.value(metadata i32 %28, metadata !6124, metadata !DIExpression()), !dbg !6131
  %29 = icmp eq i32 %28, 0, !dbg !6158
  br i1 %29, label %44, label %30, !dbg !6160

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6161
  br i1 %34, label %38, label %35, !dbg !6162

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %36, metadata !6128, metadata !DIExpression()), !dbg !6131
  %37 = icmp eq i32 %11, 0, !dbg !6164
  br i1 %37, label %44, label %38, !dbg !6165

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6131
  call void @llvm.dbg.value(metadata i32 %39, metadata !6128, metadata !DIExpression()), !dbg !6131
  %40 = icmp eq i32 %16, -1, !dbg !6166
  br i1 %40, label %41, label %46, !dbg !6168

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6169
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6171
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6171
  br label %46, !dbg !6172

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6128, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 undef, metadata !6126, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %32, metadata !6125, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 %33, metadata !6124, metadata !DIExpression()), !dbg !6131
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6148
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6128, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 %31, metadata !6126, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %32, metadata !6125, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i32 %33, metadata !6124, metadata !DIExpression()), !dbg !6131
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6148
  %47 = icmp eq i32 %33, 0, !dbg !6132
  br i1 %47, label %48, label %10, !dbg !6132

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6131
  ret i32 %49, !dbg !6173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6174 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6178, metadata !DIExpression()), !dbg !6182
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6183
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6184
  %4 = load i32, i32* %3, align 4, !dbg !6184
  %5 = icmp eq i32 %4, -1, !dbg !6184
  br i1 %5, label %11, label %6, !dbg !6184

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6184
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6184
  %9 = zext i32 %8 to i64, !dbg !6184
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6184
  br label %11, !dbg !6184

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6184
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6185
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6185
  call void @llvm.dbg.value(metadata i32 %14, metadata !6181, metadata !DIExpression()), !dbg !6182
  %15 = icmp slt i32 %14, 0, !dbg !6186
  br i1 %15, label %33, label %16, !dbg !6188

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6189, !srcloc !5952
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %18, metadata !5949, metadata !DIExpression()) #24, !dbg !6191
  call void @llvm.dbg.value(metadata i32 undef, metadata !5950, metadata !DIExpression()) #24, !dbg !6191
  call void @llvm.dbg.value(metadata i32 %18, metadata !6179, metadata !DIExpression()), !dbg !6182
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6192
  %20 = load i8*, i8** %19, align 4, !dbg !6192
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6193
  %22 = load i16, i16* %21, align 4, !dbg !6194
  %23 = add i16 %22, 1, !dbg !6194
  store i16 %23, i16* %21, align 4, !dbg !6194
  %24 = zext i16 %22 to i32, !dbg !6195
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6195
  %26 = load i8, i8* %25, align 1, !dbg !6195
  call void @llvm.dbg.value(metadata i8 %26, metadata !6180, metadata !DIExpression()), !dbg !6182
  %27 = zext i16 %23 to i32, !dbg !6196
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6198
  %29 = load i32, i32* %28, align 4, !dbg !6198
  %30 = icmp ugt i32 %29, %27, !dbg !6199
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6200
  store i16 %31, i16* %21, align 4, !dbg !6182
  call void @llvm.dbg.value(metadata i32 %18, metadata !5966, metadata !DIExpression()) #24, !dbg !6201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6203, !srcloc !5973
  %32 = zext i8 %26 to i32, !dbg !6204
  br label %33, !dbg !6205

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6182
  ret i32 %34, !dbg !6206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6209, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata i8* %1, metadata !6210, metadata !DIExpression()), !dbg !6211
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6212, !srcloc !6214
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6215
  ret i32 %3, !dbg !6216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6217 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6221, metadata !DIExpression()), !dbg !6222
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6223, !srcloc !6225
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6226
  ret void, !dbg !6227
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6228 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6230, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8* %1, metadata !6231, metadata !DIExpression()), !dbg !6233
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6234
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6234
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6234
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6232, metadata !DIExpression()), !dbg !6233
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6235
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6235
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6237
  br i1 %8, label %11, label %9, !dbg !6238

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6239
  br label %11, !dbg !6240

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6233
  ret i32 %12, !dbg !6241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6242 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6246, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6247, metadata !DIExpression()), !dbg !6248
  %3 = icmp eq %struct.device* %1, null, !dbg !6249
  br i1 %3, label %17, label %4, !dbg !6251

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6252
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6253
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6254
  store i8* null, i8** %6, align 4, !dbg !6255
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6256
  store i32 0, i32* %7, align 4, !dbg !6257
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6258
  store i8* null, i8** %8, align 4, !dbg !6259
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6260
  store i32 0, i32* %9, align 4, !dbg !6261
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6262
  store i16 0, i16* %10, align 2, !dbg !6263
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6264
  store i16 0, i16* %11, align 4, !dbg !6265
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6266
  store i16 0, i16* %12, align 2, !dbg !6267
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6268
  store i16 0, i16* %13, align 4, !dbg !6269
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6270
  store i32 -1, i32* %14, align 4, !dbg !6271
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6272
  store i32 -1, i32* %15, align 4, !dbg !6273
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6274
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6275
  br label %17, !dbg !6276

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6248
  ret i32 %18, !dbg !6277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6278 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6280, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6281, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.value(metadata i8* %1, metadata !6282, metadata !DIExpression()), !dbg !6284
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6285
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6285
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6285
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6283, metadata !DIExpression()), !dbg !6284
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6286
  br i1 %6, label %12, label %7, !dbg !6288

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6289
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6289
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6290
  br i1 %10, label %12, label %11, !dbg !6291

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6292
  br label %12, !dbg !6294

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6295
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6296 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6298, metadata !DIExpression()), !dbg !6304
  call void @llvm.dbg.value(metadata i8* %1, metadata !6299, metadata !DIExpression()), !dbg !6304
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6305
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6300, metadata !DIExpression()), !dbg !6304
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6306
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6307
  %6 = icmp eq i32 %5, 0, !dbg !6307
  br i1 %6, label %15, label %7, !dbg !6308

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6309
  call void @llvm.dbg.value(metadata i8* %3, metadata !6301, metadata !DIExpression(DW_OP_deref)), !dbg !6310
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6311
  %9 = icmp eq i32 %8, 0, !dbg !6314
  br i1 %9, label %14, label %10, !dbg !6315

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6316
  call void @llvm.dbg.value(metadata i8 %11, metadata !6301, metadata !DIExpression()), !dbg !6310
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6317
  call void @llvm.dbg.value(metadata i8* %3, metadata !6301, metadata !DIExpression(DW_OP_deref)), !dbg !6310
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6311
  %13 = icmp eq i32 %12, 0, !dbg !6314
  br i1 %13, label %14, label %10, !dbg !6315, !llvm.loop !6318

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6321
  br label %15, !dbg !6322

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6323
  %17 = icmp eq i32 %16, 0, !dbg !6323
  br i1 %17, label %44, label %18, !dbg !6325

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6326
  %20 = bitcast i8* %19 to i16*, !dbg !6326
  %21 = load i16, i16* %20, align 4, !dbg !6326
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6329
  %23 = bitcast i8* %22 to i16*, !dbg !6329
  %24 = load i16, i16* %23, align 2, !dbg !6329
  %25 = icmp eq i16 %21, %24, !dbg !6330
  br i1 %25, label %26, label %27, !dbg !6331

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6332
  br label %44, !dbg !6334

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6335
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6336
  %30 = bitcast i8* %29 to i8**, !dbg !6336
  %31 = load i8*, i8** %30, align 4, !dbg !6336
  %32 = add i16 %21, 1, !dbg !6338
  store i16 %32, i16* %20, align 4, !dbg !6338
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6339
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6340
  %34 = load i16, i16* %20, align 4, !dbg !6341
  %35 = zext i16 %34 to i32, !dbg !6343
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6344
  %37 = bitcast i8* %36 to i32*, !dbg !6344
  %38 = load i32, i32* %37, align 4, !dbg !6344
  %39 = icmp ugt i32 %38, %35, !dbg !6345
  br i1 %39, label %41, label %40, !dbg !6346

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6347
  br label %41, !dbg !6349

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6350
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6350
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6351
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6355, metadata !DIExpression()), !dbg !6356
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6357, !srcloc !6359
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6360
  ret void, !dbg !6361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6362 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6364, metadata !DIExpression()), !dbg !6366
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6367
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6367
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6367
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6365, metadata !DIExpression()), !dbg !6366
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6368
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6368
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6370
  br i1 %7, label %10, label %8, !dbg !6371

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6372
  br label %10, !dbg !6373

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6366
  ret i32 %11, !dbg !6374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6377, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i8* %1, metadata !6378, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i32 1, metadata !6379, metadata !DIExpression()), !dbg !6381
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6382
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6382
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6382
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6380, metadata !DIExpression()), !dbg !6381
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6383
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6383
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6385
  br i1 %8, label %11, label %9, !dbg !6386

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6387
  br label %11, !dbg !6388

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6381
  ret i32 %12, !dbg !6389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6390 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6392, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.value(metadata i8 %1, metadata !6393, metadata !DIExpression()), !dbg !6395
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6396
  %4 = load i16, i16* %3, align 2, !dbg !6396
  %5 = zext i16 %4 to i32, !dbg !6397
  %6 = add nuw nsw i32 %5, 1, !dbg !6398
  call void @llvm.dbg.value(metadata i32 %6, metadata !6394, metadata !DIExpression()), !dbg !6395
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6399
  %8 = load i32, i32* %7, align 4, !dbg !6399
  %9 = icmp ult i32 %6, %8, !dbg !6401
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6402
  call void @llvm.dbg.value(metadata i32 %10, metadata !6394, metadata !DIExpression()), !dbg !6395
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6403
  %12 = load i16, i16* %11, align 4, !dbg !6403
  %13 = zext i16 %12 to i32, !dbg !6405
  %14 = icmp eq i32 %10, %13, !dbg !6406
  br i1 %14, label %15, label %17, !dbg !6407

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6408
  br label %23, !dbg !6410

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6411
  %19 = load i8*, i8** %18, align 4, !dbg !6411
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6412
  store i8 %1, i8* %20, align 1, !dbg !6413
  %21 = trunc i32 %10 to i16, !dbg !6414
  store i16 %21, i16* %3, align 2, !dbg !6415
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6416
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6417
  br label %23, !dbg !6418

23:                                               ; preds = %17, %15
  ret void, !dbg !6419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6420 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6422, metadata !DIExpression()), !dbg !6424
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6425
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6425
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6425
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6423, metadata !DIExpression()), !dbg !6424
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6426
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6426
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6428
  br i1 %7, label %10, label %8, !dbg !6429

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6430
  br label %10, !dbg !6431

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6424
  ret i32 %11, !dbg !6432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6433 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6435, metadata !DIExpression()), !dbg !6436
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6437, !srcloc !6439
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6440
  ret void, !dbg !6441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6444, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i8* %1, metadata !6445, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i32 1, metadata !6446, metadata !DIExpression()), !dbg !6448
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6449
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6449
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6449
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6447, metadata !DIExpression()), !dbg !6448
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6450
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6450
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6452
  br i1 %8, label %11, label %9, !dbg !6453

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6454
  br label %11, !dbg !6455

11:                                               ; preds = %2, %9
  ret void, !dbg !6456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6457 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6461, metadata !DIExpression()), !dbg !6462
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6463, !srcloc !6465
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6466
  ret void, !dbg !6467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6470, metadata !DIExpression()), !dbg !6472
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6473
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6473
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6473
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6471, metadata !DIExpression()), !dbg !6472
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6474
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6474
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6476
  br i1 %7, label %9, label %8, !dbg !6477

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6478
  br label %9, !dbg !6480

9:                                                ; preds = %8, %1
  ret void, !dbg !6481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6482 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6484, metadata !DIExpression()), !dbg !6486
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6487
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6487
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6487
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6485, metadata !DIExpression()), !dbg !6486
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6488
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6488
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6490
  br i1 %7, label %10, label %8, !dbg !6491

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6492
  br label %10, !dbg !6493

10:                                               ; preds = %1, %8
  ret void, !dbg !6494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6495 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6499, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i8* %1, metadata !6500, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i32 %2, metadata !6501, metadata !DIExpression()), !dbg !6502
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6503
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6503
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6504
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6505
  store i8* %1, i8** %6, align 4, !dbg !6506
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6507
  store i32 %2, i32* %7, align 4, !dbg !6508
  %8 = icmp eq i32 %2, 0, !dbg !6509
  br i1 %8, label %12, label %9, !dbg !6511

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6512
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6514
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6515
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6516
  br label %12, !dbg !6517

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6519 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6521, metadata !DIExpression()), !dbg !6522
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6523, !srcloc !6525
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6526
  ret void, !dbg !6527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6528 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6532, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i32 %1, metadata !6533, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i32 -1, metadata !6534, metadata !DIExpression()), !dbg !6535
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6536, !srcloc !6538
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6539
  ret void, !dbg !6540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6541 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6543, metadata !DIExpression()), !dbg !6544
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6545, !srcloc !6547
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6548
  ret void, !dbg !6549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6552, metadata !DIExpression()), !dbg !6554
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6555
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6555
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6555
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6553, metadata !DIExpression()), !dbg !6554
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6556
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6556
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6558
  br i1 %7, label %9, label %8, !dbg !6559

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6560
  br label %9, !dbg !6562

9:                                                ; preds = %8, %1
  ret void, !dbg !6563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6566, metadata !DIExpression()), !dbg !6568
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6569
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6569
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6569
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6567, metadata !DIExpression()), !dbg !6568
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6570
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6570
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6572
  br i1 %7, label %9, label %8, !dbg !6573

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6574
  br label %9, !dbg !6576

9:                                                ; preds = %8, %1
  ret void, !dbg !6577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6578 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6580, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i8* %1, metadata !6581, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i32 %2, metadata !6582, metadata !DIExpression()), !dbg !6583
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6584
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6584
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6585
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6586
  store i8* %1, i8** %6, align 4, !dbg !6587
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6588
  store i32 %2, i32* %7, align 4, !dbg !6589
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6590
  %9 = add i32 %2, -1, !dbg !6591
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6592
  ret i32 0, !dbg !6593
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6598, metadata !DIExpression()), !dbg !6601
  call void @llvm.dbg.value(metadata i8* %1, metadata !6599, metadata !DIExpression()), !dbg !6601
  call void @llvm.dbg.value(metadata i32 %2, metadata !6600, metadata !DIExpression()), !dbg !6601
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6602
  ret i32 %4, !dbg !6603
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6604 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6608, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.value(metadata i8* %1, metadata !6609, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.value(metadata i32 %2, metadata !6610, metadata !DIExpression()), !dbg !6611
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6612
  ret i32 %4, !dbg !6613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6614 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6616, metadata !DIExpression()), !dbg !6617
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6616, metadata !DIExpression(DW_OP_deref)), !dbg !6617
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6618
  ret i32 %3, !dbg !6619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6620 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6626
  call void @llvm.dbg.value(metadata i8* %1, metadata !6624, metadata !DIExpression(DW_OP_deref)), !dbg !6627
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6628
  call void @llvm.dbg.value(metadata i32 %2, metadata !6625, metadata !DIExpression()), !dbg !6627
  %3 = icmp slt i32 %2, 0, !dbg !6629
  %4 = load i8, i8* %1, align 1, !dbg !6631
  %5 = zext i8 %4 to i32, !dbg !6631
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6631
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6632
  ret i32 %6, !dbg !6632
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6633 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6635, metadata !DIExpression()), !dbg !6640
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6641
  br i1 %1, label %2, label %13, !dbg !6643

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !6644
  call void @llvm.dbg.value(metadata i32 %3, metadata !6636, metadata !DIExpression()), !dbg !6640
  %4 = icmp eq i32 %3, 0, !dbg !6645
  br i1 %4, label %5, label %13, !dbg !6647

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6648
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6637, metadata !DIExpression()), !dbg !6649
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6650
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6650
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6652
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([512 x i8], [512 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 512) #25, !dbg !6653
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 64) #25, !dbg !6654
  br label %13, !dbg !6655

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6657 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6662, metadata !DIExpression()), !dbg !6663
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6664, !srcloc !6666
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6667
  ret i1 %1, !dbg !6668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6669 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6671, metadata !DIExpression()), !dbg !6672
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !6673
  ret i1 %1, !dbg !6674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6724, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6725, metadata !DIExpression()), !dbg !6726
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6727
  ret void, !dbg !6728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6729 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6746, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6747, metadata !DIExpression()), !dbg !6749
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6750
  %4 = load i32, i32* %3, align 4, !dbg !6750
  call void @llvm.dbg.value(metadata i32 %4, metadata !6748, metadata !DIExpression()), !dbg !6749
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6751
  ret void, !dbg !6752
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6753 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6757, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.value(metadata i8* %0, metadata !6758, metadata !DIExpression()), !dbg !6760
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6761
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6761
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6759, metadata !DIExpression()), !dbg !6762
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6762
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6763
  %5 = bitcast i8* %4 to i32*, !dbg !6763
  %6 = load i32, i32* %5, align 4, !dbg !6763
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6764
  store i32 %6, i32* %7, align 4, !dbg !6765
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6766
  unreachable, !dbg !6767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6771, metadata !DIExpression()), !dbg !6772
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6773
  ret void, !dbg !6774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6779, metadata !DIExpression()), !dbg !6780
  %2 = icmp sgt i32 %0, -1, !dbg !6781
  br i1 %2, label %3, label %8, !dbg !6783

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6784, !srcloc !6786
  %4 = and i32 %0, 31, !dbg !6787
  %5 = shl nuw i32 1, %4, !dbg !6788
  %6 = lshr i32 %0, 5, !dbg !6789
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6790
  store volatile i32 %5, i32* %7, align 4, !dbg !6791
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6792, !srcloc !6793
  br label %8, !dbg !6794

8:                                                ; preds = %3, %1
  ret void, !dbg !6795
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6798, metadata !DIExpression()), !dbg !6799
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6800
  ret void, !dbg !6801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6804, metadata !DIExpression()), !dbg !6805
  %2 = icmp sgt i32 %0, -1, !dbg !6806
  br i1 %2, label %3, label %8, !dbg !6808

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6809
  %5 = shl nuw i32 1, %4, !dbg !6811
  %6 = lshr i32 %0, 5, !dbg !6812
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6813
  store volatile i32 %5, i32* %7, align 4, !dbg !6814
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6815, !srcloc !6819
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6820, !srcloc !6823
  br label %8, !dbg !6824

8:                                                ; preds = %3, %1
  ret void, !dbg !6825
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !6826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6830, metadata !DIExpression()), !dbg !6831
  %2 = lshr i32 %0, 5, !dbg !6832
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6833
  %4 = load volatile i32, i32* %3, align 4, !dbg !6833
  %5 = and i32 %0, 31, !dbg !6834
  %6 = shl nuw i32 1, %5, !dbg !6834
  %7 = and i32 %4, %6, !dbg !6835
  ret i32 %7, !dbg !6836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !6837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6841, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 %1, metadata !6842, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 %2, metadata !6843, metadata !DIExpression()), !dbg !6844
  %4 = add i32 %1, 1, !dbg !6845
  call void @llvm.dbg.value(metadata i32 %4, metadata !6842, metadata !DIExpression()), !dbg !6844
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6848
  ret void, !dbg !6849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !6850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6854, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i32 %1, metadata !6855, metadata !DIExpression()), !dbg !6856
  %3 = trunc i32 %1 to i8, !dbg !6857
  %4 = shl i8 %3, 4, !dbg !6857
  %5 = and i32 %0, 15, !dbg !6859
  %6 = add nsw i32 %5, -4, !dbg !6859
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6859
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6859
  %9 = icmp slt i32 %0, 0, !dbg !6859
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6859
  store volatile i8 %4, i8* %10, align 1, !dbg !6857
  ret void, !dbg !6860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6863, metadata !DIExpression()), !dbg !6864
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6865
  ret void, !dbg !6866
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6867 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6869
  tail call void @z_arm_int_exit() #25, !dbg !6870
  ret void, !dbg !6871
}

; Function Attrs: optsize
declare !dbg !6872 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6873 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6875 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6877
  tail call void @z_bss_zero() #25, !dbg !6878
  tail call void @z_data_copy() #25, !dbg !6879
  tail call void @z_arm_interrupt_init() #25, !dbg !6880
  tail call void @z_cstart() #28, !dbg !6881
  unreachable, !dbg !6881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6882 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6883
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6884, !srcloc !6887
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6888, !srcloc !6891
  ret void, !dbg !6892
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6896, metadata !DIExpression()), !dbg !6897
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6898
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6899
  store i32 %0, i32* %3, align 4, !dbg !6900
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6901
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6902
  store i32 %4, i32* %5, align 4, !dbg !6903
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6904
  %7 = or i32 %6, 268435456, !dbg !6904
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6904
  call void @llvm.dbg.value(metadata i32 0, metadata !6905, metadata !DIExpression()) #24, !dbg !6908
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6910, !srcloc !6911
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6912
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6913
  %10 = load i32, i32* %9, align 4, !dbg !6913
  ret i32 %10, !dbg !6914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7025, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7026, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata i8* %2, metadata !7027, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7028, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata i8* %4, metadata !7029, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata i8* %5, metadata !7030, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata i8* %6, metadata !7031, metadata !DIExpression()), !dbg !7033
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7034
  call void @llvm.dbg.value(metadata i8* %8, metadata !7032, metadata !DIExpression()), !dbg !7033
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7035
  %10 = bitcast i8* %9 to i32*, !dbg !7035
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7036
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7037
  %12 = bitcast i8* %8 to i32*, !dbg !7038
  store i32 %11, i32* %12, align 4, !dbg !7039
  %13 = ptrtoint i8* %4 to i32, !dbg !7040
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7041
  %15 = bitcast i8* %14 to i32*, !dbg !7041
  store i32 %13, i32* %15, align 4, !dbg !7042
  %16 = ptrtoint i8* %5 to i32, !dbg !7043
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7044
  %18 = bitcast i8* %17 to i32*, !dbg !7044
  store i32 %16, i32* %18, align 4, !dbg !7045
  %19 = ptrtoint i8* %6 to i32, !dbg !7046
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7047
  %21 = bitcast i8* %20 to i32*, !dbg !7047
  store i32 %19, i32* %21, align 4, !dbg !7048
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7049
  %23 = bitcast i8* %22 to i32*, !dbg !7049
  store i32 16777216, i32* %23, align 4, !dbg !7050
  %24 = ptrtoint i8* %8 to i32, !dbg !7051
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7052
  store i32 %24, i32* %25, align 8, !dbg !7053
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7054
  store i32 0, i32* %26, align 4, !dbg !7055
  ret void, !dbg !7056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7062, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.value(metadata i32 %1, metadata !7063, metadata !DIExpression()), !dbg !7068
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7069
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7064, metadata !DIExpression()), !dbg !7068
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7070
  br i1 %4, label %19, label %5, !dbg !7072

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7067, metadata !DIExpression()), !dbg !7068
  %6 = icmp eq i32 %0, -22, !dbg !7073
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7073
  %8 = load i32, i32* %7, align 4, !dbg !7073
  br i1 %6, label %16, label %9, !dbg !7075

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7073
  %11 = icmp ule i32 %10, %0, !dbg !7073
  %12 = icmp ugt i32 %8, %0, !dbg !7073
  %13 = and i1 %12, %11, !dbg !7073
  %14 = icmp ugt i32 %8, %1, !dbg !7073
  %15 = and i1 %14, %13, !dbg !7073
  br i1 %15, label %18, label %19, !dbg !7073

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7073
  br i1 %17, label %18, label %19, !dbg !7075

18:                                               ; preds = %9, %16
  br label %19, !dbg !7076

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7068
  ret i32 %20, !dbg !7078
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7083, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i8* %1, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7085, metadata !DIExpression()), !dbg !7086
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7087
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7088
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7089, !srcloc !7090
  unreachable, !dbg !7091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7092 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7110, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 %1, metadata !7111, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 %2, metadata !7112, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7113, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 0, metadata !7114, metadata !DIExpression()), !dbg !7120
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7121
  %9 = and i32 %8, 511, !dbg !7122
  call void @llvm.dbg.value(metadata i32 %9, metadata !7115, metadata !DIExpression()), !dbg !7120
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7123
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7123
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7124
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7124
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7119, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 0, metadata !7126, metadata !DIExpression()) #24, !dbg !7129
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7131, !srcloc !7132
  call void @llvm.dbg.value(metadata i8* %6, metadata !7117, metadata !DIExpression(DW_OP_deref)), !dbg !7120
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7133
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7118, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i8* %5, metadata !7116, metadata !DIExpression(DW_OP_deref)), !dbg !7120
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %12, metadata !7114, metadata !DIExpression()), !dbg !7120
  %13 = load i8, i8* %5, align 1, !dbg !7135, !range !7137
  call void @llvm.dbg.value(metadata i8 %13, metadata !7116, metadata !DIExpression()), !dbg !7120
  %14 = icmp eq i8 %13, 0, !dbg !7135
  br i1 %14, label %15, label %32, !dbg !7138

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7139
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7140
  %18 = load i8, i8* %6, align 1, !dbg !7141, !range !7137
  call void @llvm.dbg.value(metadata i8 %18, metadata !7117, metadata !DIExpression()), !dbg !7120
  %19 = icmp eq i8 %18, 0, !dbg !7141
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7143
  %21 = load i32, i32* %20, align 4, !dbg !7143
  br i1 %19, label %27, label %22, !dbg !7144

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7145
  %24 = icmp eq i32 %23, 0, !dbg !7148
  br i1 %24, label %25, label %31, !dbg !7149

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7150
  br label %29, !dbg !7152

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7153
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7143
  br label %31, !dbg !7155

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7155
  br label %32, !dbg !7156

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7156
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7156
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7156
  ret void, !dbg !7156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7162, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i32 %1, metadata !7163, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i32 %2, metadata !7164, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i8* %3, metadata !7165, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i8 0, metadata !7166, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7167, metadata !DIExpression()), !dbg !7168
  store i8 0, i8* %3, align 1, !dbg !7169
  %5 = icmp ult i32 %2, -16777216, !dbg !7170
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7172
  br i1 %8, label %16, label %9, !dbg !7172

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7173
  %11 = icmp eq i32 %10, 0, !dbg !7173
  br i1 %11, label %12, label %13, !dbg !7175

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7167, metadata !DIExpression()), !dbg !7168
  store i8 1, i8* %3, align 1, !dbg !7178
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7168
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7167, metadata !DIExpression()), !dbg !7168
  br label %16, !dbg !7181

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7168
  ret %struct.__esf* %17, !dbg !7182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7183 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7187, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 %1, metadata !7188, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8* %2, metadata !7189, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 0, metadata !7190, metadata !DIExpression()), !dbg !7191
  store i8 0, i8* %2, align 1, !dbg !7192
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7193

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7194
  call void @llvm.dbg.value(metadata i32 %5, metadata !7190, metadata !DIExpression()), !dbg !7191
  br label %11, !dbg !7196

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7197
  call void @llvm.dbg.value(metadata i32 %7, metadata !7190, metadata !DIExpression()), !dbg !7191
  br label %11, !dbg !7198

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7199
  call void @llvm.dbg.value(metadata i32 0, metadata !7190, metadata !DIExpression()), !dbg !7191
  br label %11, !dbg !7200

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7201
  call void @llvm.dbg.value(metadata i32 0, metadata !7190, metadata !DIExpression()), !dbg !7191
  br label %11, !dbg !7202

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7203
  br label %11, !dbg !7204

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7206 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7210, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata i8* %1, metadata !7211, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata i32 0, metadata !7212, metadata !DIExpression()), !dbg !7213
  store i8 0, i8* %1, align 1, !dbg !7214
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7215
  %4 = and i32 %3, 2, !dbg !7217
  %5 = icmp eq i32 %4, 0, !dbg !7218
  br i1 %5, label %6, label %33, !dbg !7219

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7220
  %8 = icmp sgt i32 %7, -1, !dbg !7222
  br i1 %8, label %9, label %33, !dbg !7223

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7224
  %11 = and i32 %10, 1073741824, !dbg !7226
  %12 = icmp eq i32 %11, 0, !dbg !7227
  br i1 %12, label %33, label %13, !dbg !7228

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7229
  br i1 %14, label %15, label %18, !dbg !7232

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7233
  %17 = load i32, i32* %16, align 4, !dbg !7233
  call void @llvm.dbg.value(metadata i32 %17, metadata !7212, metadata !DIExpression()), !dbg !7213
  br label %33, !dbg !7235

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7236
  %20 = and i32 %19, 255, !dbg !7238
  %21 = icmp eq i32 %20, 0, !dbg !7239
  br i1 %21, label %24, label %22, !dbg !7240

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7241
  call void @llvm.dbg.value(metadata i32 %23, metadata !7212, metadata !DIExpression()), !dbg !7213
  br label %33, !dbg !7243

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7244
  %26 = and i32 %25, 65280, !dbg !7246
  %27 = icmp eq i32 %26, 0, !dbg !7247
  br i1 %27, label %29, label %28, !dbg !7248

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7249
  call void @llvm.dbg.value(metadata i32 0, metadata !7212, metadata !DIExpression()), !dbg !7213
  br label %33, !dbg !7251

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7252
  %31 = icmp ult i32 %30, 65536, !dbg !7254
  br i1 %31, label %33, label %32, !dbg !7255

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7256
  call void @llvm.dbg.value(metadata i32 0, metadata !7212, metadata !DIExpression()), !dbg !7213
  br label %33, !dbg !7258

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7213
  call void @llvm.dbg.value(metadata i32 %34, metadata !7212, metadata !DIExpression()), !dbg !7213
  ret i32 %34, !dbg !7259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7260 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7262, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata i32 %1, metadata !7263, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata i8* %2, metadata !7264, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata i32 0, metadata !7265, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata i32 -22, metadata !7266, metadata !DIExpression()), !dbg !7275
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7276
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7278
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7280
  %7 = and i32 %6, 2, !dbg !7281
  %8 = icmp eq i32 %7, 0, !dbg !7282
  br i1 %8, label %19, label %9, !dbg !7283

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7284
  call void @llvm.dbg.value(metadata i32 %10, metadata !7267, metadata !DIExpression()), !dbg !7285
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7286
  %12 = and i32 %11, 128, !dbg !7288
  %13 = icmp eq i32 %12, 0, !dbg !7289
  br i1 %13, label %19, label %14, !dbg !7290

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7266, metadata !DIExpression()), !dbg !7275
  %15 = icmp eq i32 %1, 0, !dbg !7291
  br i1 %15, label %19, label %16, !dbg !7294

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7295
  %18 = and i32 %17, -129, !dbg !7295
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7295
  br label %19, !dbg !7297

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7275
  call void @llvm.dbg.value(metadata i32 %20, metadata !7266, metadata !DIExpression()), !dbg !7275
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7298
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7300
  %23 = and i32 %22, 16, !dbg !7301
  %24 = icmp eq i32 %23, 0, !dbg !7301
  br i1 %24, label %25, label %29, !dbg !7302

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7303
  %27 = and i32 %26, 2, !dbg !7304
  %28 = icmp eq i32 %27, 0, !dbg !7304
  br i1 %28, label %38, label %29, !dbg !7305

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7306
  %31 = and i32 %30, 2048, !dbg !7307
  %32 = icmp eq i32 %31, 0, !dbg !7307
  br i1 %32, label %38, label %33, !dbg !7308

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !7309
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #25, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %35, metadata !7270, metadata !DIExpression()), !dbg !7311
  %36 = icmp eq i32 %35, 0, !dbg !7312
  br i1 %36, label %38, label %37, !dbg !7314

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !7315, metadata !DIExpression()) #24, !dbg !7318
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #24, !dbg !7321, !srcloc !7322
  call void @llvm.dbg.value(metadata i32 2, metadata !7265, metadata !DIExpression()), !dbg !7275
  br label %38, !dbg !7323

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !7275
  call void @llvm.dbg.value(metadata i32 %39, metadata !7265, metadata !DIExpression()), !dbg !7275
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7324
  %41 = or i32 %40, 255, !dbg !7324
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7324
  store i8 0, i8* %2, align 1, !dbg !7325
  ret i32 %39, !dbg !7326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !7327 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7331, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 %0, metadata !7332, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i8* %1, metadata !7333, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 0, metadata !7334, metadata !DIExpression()), !dbg !7338
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7339
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7341
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7343
  %6 = and i32 %5, 512, !dbg !7344
  %7 = icmp eq i32 %6, 0, !dbg !7344
  br i1 %7, label %18, label %8, !dbg !7345

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7346
  call void @llvm.dbg.value(metadata i32 %9, metadata !7335, metadata !DIExpression()), !dbg !7347
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7348
  %11 = and i32 %10, 32768, !dbg !7350
  %12 = icmp ne i32 %11, 0, !dbg !7351
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7352
  br i1 %14, label %15, label %18, !dbg !7352

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7353
  %17 = and i32 %16, -32769, !dbg !7353
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7353
  br label %18, !dbg !7357

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7358
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7360
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7362
  %22 = or i32 %21, 65280, !dbg !7362
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7362
  store i8 0, i8* %1, align 1, !dbg !7363
  ret void, !dbg !7364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #16 !dbg !7365 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7371, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 0, metadata !7372, metadata !DIExpression()), !dbg !7373
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7374
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7376
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7378
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7380
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7382
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7384
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7386
  %8 = or i32 %7, -65536, !dbg !7386
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7386
  ret void, !dbg !7387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7388 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7392, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i8* %0, metadata !7393, metadata !DIExpression()), !dbg !7394
  store i8 0, i8* %0, align 1, !dbg !7395
  ret void, !dbg !7396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7397 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7401, metadata !DIExpression()), !dbg !7404
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7405
  %3 = load i32, i32* %2, align 4, !dbg !7405
  %4 = inttoptr i32 %3 to i16*, !dbg !7406
  call void @llvm.dbg.value(metadata i16* %4, metadata !7402, metadata !DIExpression()), !dbg !7404
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7407
  %6 = or i32 %5, 256, !dbg !7407
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7407
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7408, !srcloc !7411
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7412, !srcloc !7415
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7416
  %8 = load i16, i16* %7, align 2, !dbg !7417
  call void @llvm.dbg.value(metadata i16 %8, metadata !7403, metadata !DIExpression()), !dbg !7404
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7418
  %10 = and i32 %9, -257, !dbg !7418
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7418
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7419, !srcloc !7411
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7421, !srcloc !7415
  %11 = icmp eq i16 %8, -8446, !dbg !7423
  ret i1 %11, !dbg !7425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !7426 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7427
  %2 = or i32 %1, 16, !dbg !7427
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7427
  ret void, !dbg !7428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !7429 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7432, metadata !DIExpression()), !dbg !7433
  br label %1, !dbg !7434

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7432, metadata !DIExpression()), !dbg !7433
  tail call fastcc void @__NVIC_SetPriority.19(i32 noundef %2) #26, !dbg !7436
  %3 = add nuw nsw i32 %2, 1, !dbg !7439
  call void @llvm.dbg.value(metadata i32 %3, metadata !7432, metadata !DIExpression()), !dbg !7433
  %4 = icmp eq i32 %3, 45, !dbg !7440
  br i1 %4, label %5, label %1, !dbg !7434, !llvm.loop !7441

5:                                                ; preds = %1
  ret void, !dbg !7443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.19(i32 noundef %0) unnamed_addr #16 !dbg !7444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7446, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 1, metadata !7447, metadata !DIExpression()), !dbg !7448
  %2 = and i32 %0, 15, !dbg !7449
  %3 = add nsw i32 %2, -4, !dbg !7449
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7449
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7449
  %6 = icmp slt i32 %0, 0, !dbg !7449
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7449
  store volatile i8 16, i8* %7, align 1, !dbg !7450
  ret void, !dbg !7452
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7559, metadata !DIExpression()), !dbg !7560
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7561
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7563
  br i1 %3, label %4, label %12, !dbg !7564

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7565, !srcloc !7579
  call void @llvm.dbg.value(metadata i32 %5, metadata !7570, metadata !DIExpression()) #24, !dbg !7580
  %6 = icmp eq i32 %5, 0, !dbg !7581
  br i1 %6, label %12, label %7, !dbg !7582

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7583
  %9 = or i32 %8, 268435456, !dbg !7583
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7583
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7585
  %11 = and i32 %10, -32769, !dbg !7585
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7585
  br label %12, !dbg !7586

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7587
  ret void, !dbg !7588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7589 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7590
  ret void, !dbg !7591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !374 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !493, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.value(metadata i8 0, metadata !494, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.value(metadata i32 64, metadata !496, metadata !DIExpression()), !dbg !7592
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7593
  %3 = load i32, i32* %2, align 4, !dbg !7593
  %4 = add i32 %3, -64, !dbg !7595
  call void @llvm.dbg.value(metadata i32 %4, metadata !495, metadata !DIExpression()), !dbg !7592
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7596
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7597
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7598
  call void @llvm.dbg.value(metadata i8 1, metadata !494, metadata !DIExpression()), !dbg !7592
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7599
  ret void, !dbg !7600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7601 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7602
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7603, !srcloc !7606
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7607, !srcloc !7610
  ret void, !dbg !7611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7612 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7613, !srcloc !7616
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7617
  ret void, !dbg !7618
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !7619 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7634, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8 %1, metadata !7635, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %2, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %3, metadata !7637, metadata !DIExpression()), !dbg !7638
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7639
  ret void, !dbg !7641
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !7642 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7647, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i8 %1, metadata !7648, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 undef, metadata !7649, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 undef, metadata !7650, metadata !DIExpression()), !dbg !7652
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7653
  call void @llvm.dbg.value(metadata i8 %3, metadata !7651, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7652
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %4, metadata !7651, metadata !DIExpression()), !dbg !7652
  %5 = trunc i32 %4 to i8, !dbg !7655
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7656
  ret void, !dbg !7657
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !7658 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7662, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i8 %1, metadata !7663, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i8 %2, metadata !7664, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i1 %3, metadata !7665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7668
  %5 = zext i8 %2 to i32, !dbg !7669
  call void @llvm.dbg.value(metadata i32 %5, metadata !7667, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 0, metadata !7666, metadata !DIExpression()), !dbg !7668
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7667, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 0, metadata !7666, metadata !DIExpression()), !dbg !7668
  %7 = icmp eq i8 %1, 0, !dbg !7670
  br i1 %7, label %29, label %8, !dbg !7673

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7667, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 %10, metadata !7666, metadata !DIExpression()), !dbg !7668
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7674
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7677
  %13 = load i32, i32* %12, align 4, !dbg !7677
  %14 = icmp eq i32 %13, 0, !dbg !7678
  br i1 %14, label %25, label %15, !dbg !7679

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7680

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7682
  %18 = icmp eq i32 %17, 0, !dbg !7682
  br i1 %18, label %29, label %19, !dbg !7683

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7684
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7685
  call void @llvm.dbg.value(metadata i32 %21, metadata !7667, metadata !DIExpression()), !dbg !7668
  %22 = icmp eq i32 %21, -22, !dbg !7686
  br i1 %22, label %29, label %23, !dbg !7688

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7689
  call void @llvm.dbg.value(metadata i32 %24, metadata !7667, metadata !DIExpression()), !dbg !7668
  br label %25, !dbg !7690

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7668
  call void @llvm.dbg.value(metadata i32 %26, metadata !7667, metadata !DIExpression()), !dbg !7668
  %27 = add nuw nsw i32 %10, 1, !dbg !7691
  call void @llvm.dbg.value(metadata i32 %27, metadata !7666, metadata !DIExpression()), !dbg !7668
  %28 = icmp eq i32 %27, %6, !dbg !7670
  br i1 %28, label %29, label %8, !dbg !7673, !llvm.loop !7692

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7668
  ret i32 %30, !dbg !7694
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7695 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7699, metadata !DIExpression()), !dbg !7701
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7702
  %3 = load i32, i32* %2, align 4, !dbg !7702
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7703, !range !3865
  %5 = icmp ult i32 %4, 2, !dbg !7703
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7704
  br i1 %7, label %8, label %15, !dbg !7704

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7705
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7706
  %11 = load i32, i32* %10, align 4, !dbg !7706
  %12 = and i32 %11, %9, !dbg !7707
  %13 = icmp eq i32 %12, 0, !dbg !7708
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7700, metadata !DIExpression()), !dbg !7701
  ret i32 %16, !dbg !7709
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7710 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7714, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7715, metadata !DIExpression()), !dbg !7717
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7718
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7718
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7716, metadata !DIExpression()), !dbg !7719
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7720
  %6 = load i32, i32* %5, align 4, !dbg !7720
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7721
  store i32 %6, i32* %7, align 4, !dbg !7722
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7723
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7724
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7725
  %11 = load i32, i32* %10, align 4, !dbg !7725
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7726
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7727
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7728
  ret i32 %12, !dbg !7729
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7730 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7737, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7738, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i32 undef, metadata !7739, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i32 %2, metadata !7740, metadata !DIExpression()), !dbg !7741
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7742
  %5 = load i32, i32* %4, align 4, !dbg !7742
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7743
  %7 = or i32 %6, %5, !dbg !7744
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7745
  store i32 %7, i32* %8, align 4, !dbg !7746
  ret void, !dbg !7747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7748 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7752, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7753, metadata !DIExpression()), !dbg !7754
  %3 = zext i8 %0 to i32, !dbg !7755
  %4 = icmp ugt i8 %0, 7, !dbg !7757
  br i1 %4, label %6, label %5, !dbg !7758

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7759
  br label %6, !dbg !7760

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7754
  ret i32 %7, !dbg !7761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7767, metadata !DIExpression()), !dbg !7768
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7769
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7770
  %4 = load i32, i32* %3, align 4, !dbg !7770
  %5 = and i32 %4, -32, !dbg !7771
  %6 = or i32 %5, %0, !dbg !7772
  %7 = or i32 %6, 16, !dbg !7772
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7773
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7774
  %9 = load i32, i32* %8, align 4, !dbg !7774
  %10 = or i32 %9, 1, !dbg !7775
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7776
  ret void, !dbg !7777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !7778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7781, metadata !DIExpression()), !dbg !7782
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7783
  ret void, !dbg !7784
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7789, metadata !DIExpression()), !dbg !7790
  %2 = icmp ult i32 %0, 33, !dbg !7791
  br i1 %2, label %11, label %3, !dbg !7793

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7794
  br i1 %4, label %11, label %5, !dbg !7796

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7797
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7798, !range !3865
  %8 = mul nsw i32 %7, -2, !dbg !7799
  %9 = add nsw i32 %8, 62, !dbg !7799
  %10 = and i32 %9, 62, !dbg !7800
  br label %11, !dbg !7801

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7790
  ret i32 %12, !dbg !7802
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !7803 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7807, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i8 %1, metadata !7808, metadata !DIExpression()), !dbg !7809
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7810
  ret void, !dbg !7812
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !7813 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7817, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.value(metadata i8 %1, metadata !7818, metadata !DIExpression()), !dbg !7824
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7825
  call void @llvm.dbg.value(metadata i8 %3, metadata !7819, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7824
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %4, metadata !7819, metadata !DIExpression()), !dbg !7824
  %5 = icmp ne i32 %4, -22, !dbg !7827
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7828
  call void @llvm.dbg.value(metadata i32 %4, metadata !7820, metadata !DIExpression()), !dbg !7829
  br i1 %7, label %8, label %12, !dbg !7828

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7820, metadata !DIExpression()), !dbg !7829
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7830
  %10 = add i32 %9, 1, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %10, metadata !7820, metadata !DIExpression()), !dbg !7829
  %11 = icmp eq i32 %10, 8, !dbg !7834
  br i1 %11, label %12, label %8, !dbg !7835, !llvm.loop !7836

12:                                               ; preds = %8, %2
  ret void, !dbg !7838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !7839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7842, metadata !DIExpression()), !dbg !7843
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7844
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7845
  ret void, !dbg !7846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7847 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7850
  %2 = icmp ugt i32 %1, 8, !dbg !7852
  br i1 %2, label %14, label %3, !dbg !7853

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7854
  call void @llvm.dbg.value(metadata i32 0, metadata !7849, metadata !DIExpression()), !dbg !7855
  %4 = icmp eq i32 %1, 0, !dbg !7856
  br i1 %4, label %12, label %5, !dbg !7859

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7859

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7849, metadata !DIExpression()), !dbg !7855
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7860
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7862
  %10 = add nuw i32 %8, 1, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %10, metadata !7849, metadata !DIExpression()), !dbg !7855
  %11 = icmp eq i32 %10, %1, !dbg !7856
  br i1 %11, label %12, label %7, !dbg !7859, !llvm.loop !7864

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7866
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7867
  tail call void @arm_core_mpu_enable() #26, !dbg !7868
  br label %14, !dbg !7869

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7855
  ret i32 %15, !dbg !7870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7878, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata i8* %1, metadata !7879, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7881
  %3 = load i8, i8* %1, align 1, !dbg !7882
  %4 = icmp eq i8 %3, 0, !dbg !7883
  br i1 %4, label %13, label %5, !dbg !7884

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7878, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata i8* %8, metadata !7879, metadata !DIExpression()), !dbg !7881
  store i8 %6, i8* %7, align 1, !dbg !7885
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7887
  call void @llvm.dbg.value(metadata i8* %9, metadata !7878, metadata !DIExpression()), !dbg !7881
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7888
  call void @llvm.dbg.value(metadata i8* %10, metadata !7879, metadata !DIExpression()), !dbg !7881
  %11 = load i8, i8* %10, align 1, !dbg !7882
  %12 = icmp eq i8 %11, 0, !dbg !7883
  br i1 %12, label %13, label %5, !dbg !7884, !llvm.loop !7889

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7891
  ret i8* %0, !dbg !7892
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7893 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7897, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i8* %1, metadata !7898, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i32 %2, metadata !7899, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i8* %0, metadata !7900, metadata !DIExpression()), !dbg !7901
  %4 = icmp eq i32 %2, 0, !dbg !7902
  br i1 %4, label %22, label %5, !dbg !7903

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7897, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i32 %7, metadata !7899, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i8* %8, metadata !7898, metadata !DIExpression()), !dbg !7901
  %9 = load i8, i8* %8, align 1, !dbg !7904
  %10 = icmp eq i8 %9, 0, !dbg !7905
  br i1 %10, label %16, label %11, !dbg !7906

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7907
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7909
  call void @llvm.dbg.value(metadata i8* %12, metadata !7898, metadata !DIExpression()), !dbg !7901
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7910
  call void @llvm.dbg.value(metadata i8* %13, metadata !7897, metadata !DIExpression()), !dbg !7901
  %14 = add i32 %7, -1, !dbg !7911
  call void @llvm.dbg.value(metadata i32 %14, metadata !7899, metadata !DIExpression()), !dbg !7901
  %15 = icmp eq i32 %14, 0, !dbg !7902
  br i1 %15, label %22, label %5, !dbg !7903, !llvm.loop !7912

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7897, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i32 %18, metadata !7899, metadata !DIExpression()), !dbg !7901
  store i8 0, i8* %17, align 1, !dbg !7914
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7916
  call void @llvm.dbg.value(metadata i8* %19, metadata !7897, metadata !DIExpression()), !dbg !7901
  %20 = add i32 %18, -1, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %20, metadata !7899, metadata !DIExpression()), !dbg !7901
  %21 = icmp eq i32 %20, 0, !dbg !7918
  br i1 %21, label %22, label %16, !dbg !7919, !llvm.loop !7920

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7922
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7927, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 %1, metadata !7928, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 %1, metadata !7929, metadata !DIExpression()), !dbg !7930
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7931

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7927, metadata !DIExpression()), !dbg !7930
  %6 = load i8, i8* %5, align 1, !dbg !7932
  %7 = icmp eq i8 %6, %3, !dbg !7933
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7934
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7935
  call void @llvm.dbg.value(metadata i8* %10, metadata !7927, metadata !DIExpression()), !dbg !7930
  br i1 %9, label %11, label %4, !dbg !7934, !llvm.loop !7937

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7939
  ret i8* %12, !dbg !7940
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7941 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 %1, metadata !7944, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* null, metadata !7945, metadata !DIExpression()), !dbg !7946
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7947

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7946
  call void @llvm.dbg.value(metadata i8* %6, metadata !7945, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %5, metadata !7943, metadata !DIExpression()), !dbg !7946
  %7 = load i8, i8* %5, align 1, !dbg !7948
  %8 = icmp eq i8 %7, %3, !dbg !7951
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7952
  call void @llvm.dbg.value(metadata i8* %9, metadata !7945, metadata !DIExpression()), !dbg !7946
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7953
  call void @llvm.dbg.value(metadata i8* %10, metadata !7943, metadata !DIExpression()), !dbg !7946
  %11 = icmp eq i8 %7, 0, !dbg !7954
  br i1 %11, label %12, label %4, !dbg !7954, !llvm.loop !7955

12:                                               ; preds = %4
  ret i8* %9, !dbg !7957
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7962, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 0, metadata !7963, metadata !DIExpression()), !dbg !7964
  %2 = load i8, i8* %0, align 1, !dbg !7965
  %3 = icmp eq i8 %2, 0, !dbg !7966
  br i1 %3, label %11, label %4, !dbg !7967

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7963, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i8* %6, metadata !7962, metadata !DIExpression()), !dbg !7964
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7968
  call void @llvm.dbg.value(metadata i8* %7, metadata !7962, metadata !DIExpression()), !dbg !7964
  %8 = add i32 %5, 1, !dbg !7970
  call void @llvm.dbg.value(metadata i32 %8, metadata !7963, metadata !DIExpression()), !dbg !7964
  %9 = load i8, i8* %7, align 1, !dbg !7965
  %10 = icmp eq i8 %9, 0, !dbg !7966
  br i1 %10, label %11, label %4, !dbg !7967, !llvm.loop !7971

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7964
  ret i32 %12, !dbg !7973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7974 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7978, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i32 %1, metadata !7979, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i32 0, metadata !7980, metadata !DIExpression()), !dbg !7981
  %3 = load i8, i8* %0, align 1, !dbg !7982
  %4 = icmp ne i8 %3, 0, !dbg !7983
  %5 = icmp ne i32 %1, 0, !dbg !7984
  %6 = and i1 %4, %5, !dbg !7984
  br i1 %6, label %7, label %16, !dbg !7985

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7980, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %9, metadata !7978, metadata !DIExpression()), !dbg !7981
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7986
  call void @llvm.dbg.value(metadata i8* %10, metadata !7978, metadata !DIExpression()), !dbg !7981
  %11 = add nuw i32 %8, 1, !dbg !7988
  call void @llvm.dbg.value(metadata i32 %11, metadata !7980, metadata !DIExpression()), !dbg !7981
  %12 = load i8, i8* %10, align 1, !dbg !7982
  %13 = icmp ne i8 %12, 0, !dbg !7983
  %14 = icmp ult i32 %11, %1, !dbg !7984
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7984
  br i1 %15, label %7, label %16, !dbg !7985, !llvm.loop !7989

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7981
  ret i32 %17, !dbg !7991
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7992 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7996, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i8* %1, metadata !7997, metadata !DIExpression()), !dbg !7998
  %3 = load i8, i8* %0, align 1, !dbg !7999
  %4 = load i8, i8* %1, align 1, !dbg !8000
  %5 = icmp ne i8 %3, %4, !dbg !8001
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8002
  br i1 %7, label %18, label %8, !dbg !8002

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7997, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i8* %10, metadata !7996, metadata !DIExpression()), !dbg !7998
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8003
  call void @llvm.dbg.value(metadata i8* %11, metadata !7996, metadata !DIExpression()), !dbg !7998
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8005
  call void @llvm.dbg.value(metadata i8* %12, metadata !7997, metadata !DIExpression()), !dbg !7998
  %13 = load i8, i8* %11, align 1, !dbg !7999
  %14 = load i8, i8* %12, align 1, !dbg !8000
  %15 = icmp ne i8 %13, %14, !dbg !8001
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8002
  br i1 %17, label %18, label %8, !dbg !8002, !llvm.loop !8006

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7999
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8000
  %21 = zext i8 %19 to i32, !dbg !8009
  %22 = zext i8 %20 to i32, !dbg !8010
  %23 = sub nsw i32 %21, %22, !dbg !8011
  ret i32 %23, !dbg !8012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8017, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i8* %1, metadata !8018, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 %2, metadata !8019, metadata !DIExpression()), !dbg !8020
  %4 = icmp eq i32 %2, 0, !dbg !8021
  br i1 %4, label %23, label %5, !dbg !8021

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8019, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i8* %7, metadata !8018, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i8* %8, metadata !8017, metadata !DIExpression()), !dbg !8020
  %9 = load i8, i8* %8, align 1, !dbg !8022
  %10 = load i8, i8* %7, align 1, !dbg !8023
  %11 = icmp ne i8 %9, %10, !dbg !8024
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8025
  br i1 %13, label %19, label %14, !dbg !8025

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8026
  call void @llvm.dbg.value(metadata i8* %15, metadata !8017, metadata !DIExpression()), !dbg !8020
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8028
  call void @llvm.dbg.value(metadata i8* %16, metadata !8018, metadata !DIExpression()), !dbg !8020
  %17 = add i32 %6, -1, !dbg !8029
  call void @llvm.dbg.value(metadata i32 %17, metadata !8019, metadata !DIExpression()), !dbg !8020
  %18 = icmp eq i32 %17, 0, !dbg !8021
  br i1 %18, label %23, label %5, !dbg !8021, !llvm.loop !8030

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8033
  %21 = zext i8 %10 to i32, !dbg !8034
  %22 = sub nsw i32 %20, %21, !dbg !8035
  br label %23, !dbg !8036

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8036
  ret i32 %24, !dbg !8037
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8043, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i8* %1, metadata !8044, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i8** %2, metadata !8045, metadata !DIExpression()), !dbg !8048
  %4 = icmp eq i8* %0, null, !dbg !8049
  br i1 %4, label %5, label %7, !dbg !8049

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8050
  br label %7, !dbg !8049

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8049
  call void @llvm.dbg.value(metadata i8* %8, metadata !8046, metadata !DIExpression()), !dbg !8048
  %9 = load i8, i8* %8, align 1, !dbg !8051
  %10 = icmp eq i8 %9, 0, !dbg !8051
  br i1 %10, label %33, label %11, !dbg !8052

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8046, metadata !DIExpression()), !dbg !8048
  %14 = zext i8 %12 to i32, !dbg !8051
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8053
  %16 = icmp eq i8* %15, null, !dbg !8052
  br i1 %16, label %21, label %17, !dbg !8054

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8055
  call void @llvm.dbg.value(metadata i8* %18, metadata !8046, metadata !DIExpression()), !dbg !8048
  %19 = load i8, i8* %18, align 1, !dbg !8051
  %20 = icmp eq i8 %19, 0, !dbg !8051
  br i1 %20, label %33, label %11, !dbg !8052, !llvm.loop !8057

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8047, metadata !DIExpression()), !dbg !8048
  %24 = zext i8 %22 to i32, !dbg !8059
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8060
  %26 = icmp eq i8* %25, null, !dbg !8061
  br i1 %26, label %27, label %31, !dbg !8062

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8063
  call void @llvm.dbg.value(metadata i8* %28, metadata !8047, metadata !DIExpression()), !dbg !8048
  %29 = load i8, i8* %28, align 1, !dbg !8059
  %30 = icmp eq i8 %29, 0, !dbg !8059
  br i1 %30, label %33, label %21, !dbg !8065, !llvm.loop !8066

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8068
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8071
  br label %33, !dbg !8072

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8048
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8048
  store i8* %34, i8** %2, align 4, !dbg !8048
  ret i8* %35, !dbg !8073
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8074 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8076, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.value(metadata i8* %1, metadata !8077, metadata !DIExpression()), !dbg !8078
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8079
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8080
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8081
  ret i8* %0, !dbg !8082
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8085, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %1, metadata !8086, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i32 %2, metadata !8087, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %0, metadata !8088, metadata !DIExpression()), !dbg !8090
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8091
  call void @llvm.dbg.value(metadata i32 %4, metadata !8089, metadata !DIExpression()), !dbg !8090
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8092
  call void @llvm.dbg.value(metadata i8* %5, metadata !8085, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %1, metadata !8086, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i32 %2, metadata !8087, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i32 %2, metadata !8087, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8090
  %6 = icmp eq i32 %2, 0, !dbg !8093
  br i1 %6, label %18, label %7, !dbg !8094

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8095
  call void @llvm.dbg.value(metadata i8* %9, metadata !8085, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %10, metadata !8086, metadata !DIExpression()), !dbg !8090
  %12 = load i8, i8* %10, align 1, !dbg !8096
  %13 = icmp eq i8 %12, 0, !dbg !8097
  br i1 %13, label %18, label %14, !dbg !8098

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8099
  call void @llvm.dbg.value(metadata i8* %15, metadata !8086, metadata !DIExpression()), !dbg !8090
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8101
  call void @llvm.dbg.value(metadata i8* %16, metadata !8085, metadata !DIExpression()), !dbg !8090
  store i8 %12, i8* %9, align 1, !dbg !8102
  call void @llvm.dbg.value(metadata i32 %11, metadata !8087, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i32 %11, metadata !8087, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8090
  %17 = icmp eq i32 %11, 0, !dbg !8093
  br i1 %17, label %18, label %7, !dbg !8094, !llvm.loop !8103

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8090
  store i8 0, i8* %19, align 1, !dbg !8105
  ret i8* %0, !dbg !8106
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8107 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8111, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8* %1, metadata !8112, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i32 %2, metadata !8113, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8* %0, metadata !8114, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8* %1, metadata !8115, metadata !DIExpression()), !dbg !8116
  %4 = icmp eq i32 %2, 0, !dbg !8117
  br i1 %4, label %31, label %5, !dbg !8119

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8115, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8* %0, metadata !8114, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i32 %2, metadata !8113, metadata !DIExpression()), !dbg !8116
  %6 = add i32 %2, -1, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %6, metadata !8113, metadata !DIExpression()), !dbg !8116
  %7 = icmp eq i32 %6, 0, !dbg !8121
  br i1 %7, label %23, label %8, !dbg !8122

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8123
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8123
  br label %11, !dbg !8123

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8115, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8* %14, metadata !8114, metadata !DIExpression()), !dbg !8116
  %15 = load i8, i8* %14, align 1, !dbg !8124
  %16 = load i8, i8* %13, align 1, !dbg !8125
  %17 = icmp eq i8 %15, %16, !dbg !8126
  br i1 %17, label %18, label %23, !dbg !8123

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8127
  call void @llvm.dbg.value(metadata i8* %19, metadata !8114, metadata !DIExpression()), !dbg !8116
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8129
  call void @llvm.dbg.value(metadata i8* %20, metadata !8115, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i32 %12, metadata !8113, metadata !DIExpression()), !dbg !8116
  %21 = add i32 %12, -1, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %21, metadata !8113, metadata !DIExpression()), !dbg !8116
  %22 = icmp eq i32 %21, 0, !dbg !8121
  br i1 %22, label %23, label %11, !dbg !8122, !llvm.loop !8130

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8116
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8116
  %26 = load i8, i8* %24, align 1, !dbg !8132
  %27 = zext i8 %26 to i32, !dbg !8132
  %28 = load i8, i8* %25, align 1, !dbg !8133
  %29 = zext i8 %28 to i32, !dbg !8133
  %30 = sub nsw i32 %27, %29, !dbg !8134
  br label %31, !dbg !8135

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8116
  ret i32 %32, !dbg !8136
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8137 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8141, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %1, metadata !8142, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %2, metadata !8143, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %0, metadata !8144, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %1, metadata !8145, metadata !DIExpression()), !dbg !8146
  %4 = ptrtoint i8* %0 to i32, !dbg !8147
  %5 = ptrtoint i8* %1 to i32, !dbg !8147
  %6 = sub i32 %4, %5, !dbg !8147
  %7 = icmp ult i32 %6, %2, !dbg !8149
  br i1 %7, label %10, label %8, !dbg !8150

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8145, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %0, metadata !8144, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %2, metadata !8143, metadata !DIExpression()), !dbg !8146
  %9 = icmp eq i32 %2, 0, !dbg !8151
  br i1 %9, label %26, label %17, !dbg !8153

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8143, metadata !DIExpression()), !dbg !8146
  %12 = add i32 %11, -1, !dbg !8154
  call void @llvm.dbg.value(metadata i32 %12, metadata !8143, metadata !DIExpression()), !dbg !8146
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8157
  %14 = load i8, i8* %13, align 1, !dbg !8157
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8158
  store i8 %14, i8* %15, align 1, !dbg !8159
  %16 = icmp eq i32 %12, 0, !dbg !8160
  br i1 %16, label %26, label %10, !dbg !8161, !llvm.loop !8162

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8145, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %19, metadata !8144, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %20, metadata !8143, metadata !DIExpression()), !dbg !8146
  %21 = load i8, i8* %18, align 1, !dbg !8164
  store i8 %21, i8* %19, align 1, !dbg !8166
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8167
  call void @llvm.dbg.value(metadata i8* %22, metadata !8144, metadata !DIExpression()), !dbg !8146
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8168
  call void @llvm.dbg.value(metadata i8* %23, metadata !8145, metadata !DIExpression()), !dbg !8146
  %24 = add i32 %20, -1, !dbg !8169
  call void @llvm.dbg.value(metadata i32 %24, metadata !8143, metadata !DIExpression()), !dbg !8146
  %25 = icmp eq i32 %24, 0, !dbg !8151
  br i1 %25, label %26, label %17, !dbg !8153, !llvm.loop !8170

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8172
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8173 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8179, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i8* %1, metadata !8180, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i32 %2, metadata !8181, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i8* %0, metadata !8182, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i8* %1, metadata !8183, metadata !DIExpression()), !dbg !8184
  %4 = icmp eq i32 %2, 0, !dbg !8185
  br i1 %4, label %14, label %5, !dbg !8186

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8183, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i8* %7, metadata !8182, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i32 %8, metadata !8181, metadata !DIExpression()), !dbg !8184
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8187
  call void @llvm.dbg.value(metadata i8* %9, metadata !8183, metadata !DIExpression()), !dbg !8184
  %10 = load i8, i8* %6, align 1, !dbg !8189
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8190
  call void @llvm.dbg.value(metadata i8* %11, metadata !8182, metadata !DIExpression()), !dbg !8184
  store i8 %10, i8* %7, align 1, !dbg !8191
  %12 = add i32 %8, -1, !dbg !8192
  call void @llvm.dbg.value(metadata i32 %12, metadata !8181, metadata !DIExpression()), !dbg !8184
  %13 = icmp eq i32 %12, 0, !dbg !8185
  br i1 %13, label %14, label %5, !dbg !8186, !llvm.loop !8193

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8195
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8196 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8200, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %1, metadata !8201, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %2, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8* %0, metadata !8203, metadata !DIExpression()), !dbg !8205
  %4 = trunc i32 %1 to i8, !dbg !8206
  call void @llvm.dbg.value(metadata i8 %4, metadata !8204, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %2, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8* %0, metadata !8203, metadata !DIExpression()), !dbg !8205
  %5 = icmp eq i32 %2, 0, !dbg !8207
  br i1 %5, label %12, label %6, !dbg !8208

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8* %8, metadata !8203, metadata !DIExpression()), !dbg !8205
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8209
  call void @llvm.dbg.value(metadata i8* %9, metadata !8203, metadata !DIExpression()), !dbg !8205
  store i8 %4, i8* %8, align 1, !dbg !8211
  %10 = add i32 %7, -1, !dbg !8212
  call void @llvm.dbg.value(metadata i32 %10, metadata !8202, metadata !DIExpression()), !dbg !8205
  %11 = icmp eq i32 %10, 0, !dbg !8207
  br i1 %11, label %12, label %6, !dbg !8208, !llvm.loop !8213

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8215
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8220, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %1, metadata !8221, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %2, metadata !8222, metadata !DIExpression()), !dbg !8226
  %4 = icmp eq i32 %2, 0, !dbg !8227
  br i1 %4, label %17, label %5, !dbg !8228

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8229

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8230
  call void @llvm.dbg.value(metadata i8* %9, metadata !8223, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %8, metadata !8222, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i8* %9, metadata !8223, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8230
  %10 = load i8, i8* %9, align 1, !dbg !8231
  %11 = icmp eq i8 %10, %6, !dbg !8234
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8235
  call void @llvm.dbg.value(metadata i8* %12, metadata !8223, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %13, metadata !8222, metadata !DIExpression()), !dbg !8226
  br i1 %15, label %16, label %7, !dbg !8235, !llvm.loop !8236

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8238

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8226
  ret i8* %19, !dbg !8239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8240 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8242, metadata !DIExpression()), !dbg !8243
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8244
  ret void, !dbg !8245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8248, metadata !DIExpression()), !dbg !8249
  ret i32 -1, !dbg !8250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8255, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata i32* %1, metadata !8256, metadata !DIExpression()), !dbg !8257
  %3 = ptrtoint i32* %1 to i32, !dbg !8258
  %4 = and i32 %3, -2, !dbg !8258
  %5 = icmp eq i32 %4, 2, !dbg !8258
  br i1 %5, label %6, label %9, !dbg !8258

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8259
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8259
  br label %9, !dbg !8260

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8260
  ret i32 %10, !dbg !8261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8264, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.value(metadata i32* %1, metadata !8265, metadata !DIExpression()), !dbg !8266
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8267
  ret i32 %3, !dbg !8268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8272, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i32* %1, metadata !8273, metadata !DIExpression()), !dbg !8274
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8275, !srcloc !8277
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8278
  ret i32 %3, !dbg !8279
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8280 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8285, metadata !DIExpression()), !dbg !8289
  call void @llvm.dbg.value(metadata i32* %1, metadata !8286, metadata !DIExpression()), !dbg !8289
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8290
  call void @llvm.dbg.value(metadata i32 %3, metadata !8287, metadata !DIExpression()), !dbg !8289
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8291
  call void @llvm.dbg.value(metadata i32 %4, metadata !8288, metadata !DIExpression()), !dbg !8289
  %5 = icmp ne i32 %3, %4, !dbg !8292
  %6 = sext i1 %5 to i32, !dbg !8293
  ret i32 %6, !dbg !8294
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8295 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8299, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i32 %1, metadata !8300, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i32 %2, metadata !8301, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i32* %3, metadata !8302, metadata !DIExpression()), !dbg !8303
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8304
  ret i32 %5, !dbg !8305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8306 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8308, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.value(metadata i32 %1, metadata !8309, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.value(metadata i32 %2, metadata !8310, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.value(metadata i32* %3, metadata !8311, metadata !DIExpression()), !dbg !8312
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8313, !srcloc !8315
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8316
  ret i32 %5, !dbg !8317
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8320, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 %1, metadata !8321, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 %2, metadata !8322, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32* %3, metadata !8323, metadata !DIExpression()), !dbg !8328
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8329
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8331
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8331
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8331
  br i1 %11, label %33, label %12, !dbg !8331

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8328
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8328
  call void @llvm.dbg.value(metadata i8* %14, metadata !8326, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 %13, metadata !8324, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 %1, metadata !8325, metadata !DIExpression()), !dbg !8328
  br label %15, !dbg !8332

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8334
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8328
  call void @llvm.dbg.value(metadata i8* %17, metadata !8326, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 %16, metadata !8325, metadata !DIExpression()), !dbg !8328
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8335
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8338
  call void @llvm.dbg.value(metadata i8* %19, metadata !8326, metadata !DIExpression()), !dbg !8328
  %20 = load i8, i8* %17, align 1, !dbg !8339
  %21 = zext i8 %20 to i32, !dbg !8340
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8335
  %23 = icmp eq i32 %22, -1, !dbg !8341
  br i1 %23, label %30, label %24, !dbg !8342

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8343
  call void @llvm.dbg.value(metadata i32 %25, metadata !8325, metadata !DIExpression()), !dbg !8328
  %26 = icmp eq i32 %25, 0, !dbg !8344
  br i1 %26, label %27, label %15, !dbg !8345, !llvm.loop !8346

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8348
  call void @llvm.dbg.value(metadata i32 %28, metadata !8324, metadata !DIExpression()), !dbg !8328
  %29 = icmp eq i32 %28, 0, !dbg !8349
  br i1 %29, label %30, label %12, !dbg !8350, !llvm.loop !8351

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8328
  call void @llvm.dbg.value(metadata i32 %31, metadata !8324, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.label(metadata !8327), !dbg !8354
  %32 = sub i32 %2, %31, !dbg !8355
  br label %33, !dbg !8356

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8328
  ret i32 %34, !dbg !8357
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8358 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8362, metadata !DIExpression()), !dbg !8363
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8364
  %3 = icmp eq i32 %2, -1, !dbg !8366
  br i1 %3, label %8, label %4, !dbg !8367

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8368
  %6 = icmp eq i32 %5, -1, !dbg !8369
  %7 = sext i1 %6 to i32, !dbg !8368
  br label %8, !dbg !8370

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8363
  ret i32 %9, !dbg !8371
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8372 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8374, metadata !DIExpression()), !dbg !8385
  %8 = bitcast i64* %2 to i8*, !dbg !8386
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #24, !dbg !8386
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !8375, metadata !DIExpression()), !dbg !8387
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !8387
  store i64 %9, i64* %2, align 8, !dbg !8387
  %10 = bitcast i64* %4 to i8*, !dbg !8388
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #24, !dbg !8388
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !8383, metadata !DIExpression()), !dbg !8389
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !8389
  store i64 %11, i64* %4, align 8, !dbg !8389
  %12 = bitcast i64* %6 to i8*, !dbg !8390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #24, !dbg !8390
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !8384, metadata !DIExpression()), !dbg !8391
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !8391
  store i64 %13, i64* %6, align 8, !dbg !8391
  %14 = trunc i64 %9 to i32, !dbg !8392
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !8392
  %16 = tail call fastcc zeroext i1 @device_is_ready.39(%struct.device* noundef %15) #26, !dbg !8394
  %17 = trunc i64 %13 to i32, !dbg !8395
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !8395
  br i1 %16, label %19, label %26, !dbg !8395

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !8395
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !8395
  %22 = tail call fastcc zeroext i1 @device_is_ready.39(%struct.device* noundef %21) #26, !dbg !8396
  br i1 %22, label %23, label %26, !dbg !8397

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready.39(%struct.device* noundef %18) #26, !dbg !8398
  br i1 %24, label %25, label %26, !dbg !8399

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #26, !dbg !8400
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #26, !dbg !8401
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #26, !dbg !8402
  br label %26, !dbg !8403

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !8385
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #24, !dbg !8404
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #24, !dbg !8404
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #24, !dbg !8404
  ret i32 %27, !dbg !8404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.39(%struct.device* noundef %0) unnamed_addr #1 !dbg !8405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8409, metadata !DIExpression()), !dbg !8410
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8411, !srcloc !8413
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.40(%struct.device* noundef %0) #26, !dbg !8414
  ret i1 %2, !dbg !8415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8416 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !8421, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.value(metadata i32 %1, metadata !8422, metadata !DIExpression()), !dbg !8423
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !8424
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !8424
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !8425
  %6 = load i8, i8* %5, align 4, !dbg !8425
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !8426
  %8 = load i16, i16* %7, align 2, !dbg !8426
  %9 = zext i16 %8 to i32, !dbg !8427
  %10 = or i32 %9, %1, !dbg !8428
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #26, !dbg !8429
  ret void, !dbg !8430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8434, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i8 %1, metadata !8435, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %2, metadata !8436, metadata !DIExpression()), !dbg !8437
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8438, !srcloc !8440
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8445, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata i8 %1, metadata !8446, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata i32 %2, metadata !8447, metadata !DIExpression()), !dbg !8452
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8453
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !8453
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !8453
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !8448, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata i8* undef, metadata !8449, metadata !DIExpression()), !dbg !8452
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8454
  %8 = bitcast i8** %7 to %struct.z_heap_bucket**, !dbg !8454
  %9 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %8, align 4, !dbg !8454
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !8451, metadata !DIExpression()), !dbg !8452
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !8455
  %13 = icmp ne i32 %12, 1048577, !dbg !8455
  %14 = or i1 %13, %11, !dbg !8455
  %15 = xor i32 %2, 786432, !dbg !8455
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !8455
  call void @llvm.dbg.value(metadata i32 %16, metadata !8447, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata i32 %16, metadata !8447, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !8452
  %17 = and i32 %16, 1, !dbg !8457
  %18 = icmp eq i32 %17, 0, !dbg !8459
  %19 = zext i8 %1 to i32, !dbg !8460
  %20 = shl nuw i32 1, %19, !dbg !8460
  br i1 %18, label %25, label %21, !dbg !8461

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !8462
  %23 = load i32, i32* %22, align 4, !dbg !8464
  %24 = or i32 %23, %20, !dbg !8464
  store i32 %24, i32* %22, align 4, !dbg !8464
  br label %30, !dbg !8465

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !8466
  %27 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !8468
  %28 = load i32, i32* %27, align 4, !dbg !8469
  %29 = and i32 %28, %26, !dbg !8469
  store i32 %29, i32* %27, align 4, !dbg !8469
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !8470
  call void @llvm.dbg.value(metadata i32 %31, metadata !8447, metadata !DIExpression()), !dbg !8452
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !8471
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !8471
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #25, !dbg !8472
  ret void, !dbg !8473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.40(%struct.device* noundef %0) unnamed_addr #1 !dbg !8474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8476, metadata !DIExpression()), !dbg !8477
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8478
  ret i1 %2, !dbg !8479
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8482, metadata !DIExpression()), !dbg !8483
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8484
  ret void, !dbg !8485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8490, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i32 %1, metadata !8491, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8492, metadata !DIExpression()), !dbg !8496
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8497
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8497
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8497
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8493, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i32 %0, metadata !8495, metadata !DIExpression()), !dbg !8496
  %7 = icmp slt i32 %0, %1, !dbg !8498
  br i1 %7, label %8, label %22, !dbg !8501

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8495, metadata !DIExpression()), !dbg !8496
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8502
  %11 = icmp eq i32 %10, 0, !dbg !8502
  br i1 %11, label %19, label %12, !dbg !8505

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8506
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8508
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8508
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8510
  br i1 %15, label %19, label %16, !dbg !8511

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8512
  %18 = load i8*, i8** %17, align 4, !dbg !8512
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8513
  br label %19, !dbg !8514

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8515
  call void @llvm.dbg.value(metadata i32 %20, metadata !8495, metadata !DIExpression()), !dbg !8496
  %21 = icmp eq i32 %20, %1, !dbg !8498
  br i1 %21, label %22, label %8, !dbg !8501, !llvm.loop !8516

22:                                               ; preds = %19, %3
  ret void, !dbg !8518
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !8519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8521, metadata !DIExpression()), !dbg !8522
  %2 = shl nuw i32 1, %0, !dbg !8523
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8526
  ret i32 %3, !dbg !8527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !8528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8532, metadata !DIExpression()), !dbg !8533
  %2 = shl nuw i32 1, %0, !dbg !8534
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8537
  ret void, !dbg !8538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8542, metadata !DIExpression()), !dbg !8543
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8544
  ret void, !dbg !8545
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !8546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8548, metadata !DIExpression()), !dbg !8549
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8550
  %3 = and i32 %2, %0, !dbg !8550
  %4 = icmp eq i32 %3, %0, !dbg !8551
  %5 = zext i1 %4 to i32, !dbg !8551
  ret i32 %5, !dbg !8552
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8553 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8555, metadata !DIExpression()), !dbg !8556
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8557
  ret void, !dbg !8558
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8559 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8561, metadata !DIExpression()), !dbg !8562
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8563
  ret void, !dbg !8564
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8565 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8567, metadata !DIExpression()), !dbg !8568
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8569
  ret void, !dbg !8570
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8573, metadata !DIExpression()), !dbg !8574
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8575
  ret void, !dbg !8576
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8579, metadata !DIExpression()), !dbg !8580
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8581
  ret void, !dbg !8582
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8585, metadata !DIExpression()), !dbg !8586
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8587
  ret void, !dbg !8588
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8589 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8591, metadata !DIExpression()), !dbg !8592
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8593
  ret i32 0, !dbg !8594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !818 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !822, metadata !DIExpression()), !dbg !8595
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8596
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8598
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8600
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8602
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8604
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8606
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8608
  ret void, !dbg !8610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8613, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i32 0, metadata !8614, metadata !DIExpression()), !dbg !8615
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8616
  %3 = load i32, i32* %2, align 4, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %3, metadata !8614, metadata !DIExpression()), !dbg !8615
  %4 = shl nuw i32 1, %0, !dbg !8617
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8618
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8619
  ret void, !dbg !8620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8623, metadata !DIExpression()), !dbg !8624
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8625
  %3 = or i32 %2, %0, !dbg !8625
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8625
  ret void, !dbg !8626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !8627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8629, metadata !DIExpression()), !dbg !8630
  %2 = icmp slt i32 %0, 32, !dbg !8631
  br i1 %2, label %3, label %5, !dbg !8633

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8634
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8636
  br label %5, !dbg !8637

5:                                                ; preds = %1, %3
  ret void, !dbg !8638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8641, metadata !DIExpression()), !dbg !8642
  %2 = xor i32 %0, -1, !dbg !8643
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8643
  %4 = and i32 %3, %2, !dbg !8643
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8643
  ret void, !dbg !8644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !8645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8649, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata i32 %1, metadata !8650, metadata !DIExpression()), !dbg !8651
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8652

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8653
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8655
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8656
  br label %11, !dbg !8657

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8658
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8659
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8660
  br label %11, !dbg !8661

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8662
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8663
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8664
  br label %11, !dbg !8665

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8666
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8667
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8668
  br label %11, !dbg !8669

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8673, metadata !DIExpression()), !dbg !8674
  %2 = xor i32 %0, -1, !dbg !8675
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8675
  %4 = and i32 %3, %2, !dbg !8675
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8675
  ret void, !dbg !8676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8679, metadata !DIExpression()), !dbg !8680
  %2 = xor i32 %0, -1, !dbg !8681
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8681
  %4 = and i32 %3, %2, !dbg !8681
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8681
  ret void, !dbg !8682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8685, metadata !DIExpression()), !dbg !8686
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8687
  %3 = or i32 %2, %0, !dbg !8687
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8687
  ret void, !dbg !8688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8691, metadata !DIExpression()), !dbg !8692
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8693
  %3 = or i32 %2, %0, !dbg !8693
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8693
  ret void, !dbg !8694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8699, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8700, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8* %2, metadata !8701, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8702, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8704, metadata !DIExpression()), !dbg !8705
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8706
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8706
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8708
  br i1 %6, label %7, label %9, !dbg !8709

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8710
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8711
  store i8* %2, i8** %8, align 4, !dbg !8712
  br label %9, !dbg !8713

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8705
  ret i32 %10, !dbg !8714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8717, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8718, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8719, metadata !DIExpression()), !dbg !8720
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8721
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8722
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8723
  store i8* null, i8** %3, align 4, !dbg !8724
  ret void, !dbg !8725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !8726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8728, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i8* %1, metadata !8729, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i8* %1, metadata !8730, metadata !DIExpression()), !dbg !8733
  %3 = bitcast i8* %1 to i32*, !dbg !8734
  %4 = load i32, i32* %3, align 4, !dbg !8734
  %5 = add i32 %4, -37, !dbg !8734
  %6 = icmp ult i32 %5, -9, !dbg !8734
  br i1 %6, label %15, label %7, !dbg !8736

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8737
  %9 = inttoptr i32 %8 to i32*, !dbg !8738
  call void @llvm.dbg.value(metadata i32* %9, metadata !8731, metadata !DIExpression()), !dbg !8733
  %10 = load volatile i32, i32* %9, align 4, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %10, metadata !8732, metadata !DIExpression()), !dbg !8733
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8740
  %12 = bitcast i8* %11 to i32*, !dbg !8740
  %13 = load i32, i32* %12, align 4, !dbg !8740
  %14 = or i32 %13, %10, !dbg !8741
  call void @llvm.dbg.value(metadata i32 %14, metadata !8732, metadata !DIExpression()), !dbg !8733
  store volatile i32 %14, i32* %9, align 4, !dbg !8742
  br label %15, !dbg !8743

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8733
  ret i32 %16, !dbg !8744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !8745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8747, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8* %1, metadata !8748, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8* %1, metadata !8749, metadata !DIExpression()), !dbg !8752
  %3 = bitcast i8* %1 to i32*, !dbg !8753
  %4 = load i32, i32* %3, align 4, !dbg !8753
  %5 = add i32 %4, -37, !dbg !8753
  %6 = icmp ult i32 %5, -9, !dbg !8753
  br i1 %6, label %16, label %7, !dbg !8755

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8756
  %9 = inttoptr i32 %8 to i32*, !dbg !8757
  call void @llvm.dbg.value(metadata i32* %9, metadata !8750, metadata !DIExpression()), !dbg !8752
  %10 = load volatile i32, i32* %9, align 4, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %10, metadata !8751, metadata !DIExpression()), !dbg !8752
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8759
  %12 = bitcast i8* %11 to i32*, !dbg !8759
  %13 = load i32, i32* %12, align 4, !dbg !8759
  %14 = xor i32 %13, -1, !dbg !8760
  %15 = and i32 %10, %14, !dbg !8761
  call void @llvm.dbg.value(metadata i32 %15, metadata !8751, metadata !DIExpression()), !dbg !8752
  store volatile i32 %15, i32* %9, align 4, !dbg !8762
  br label %16, !dbg !8763

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8752
  ret i32 %17, !dbg !8764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #8 !dbg !8765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8767, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i8* %1, metadata !8768, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32* %2, metadata !8769, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i8* %1, metadata !8770, metadata !DIExpression()), !dbg !8774
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8775
  call void @llvm.dbg.value(metadata i32 %4, metadata !8771, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 %4, metadata !8772, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 %4, metadata !8773, metadata !DIExpression()), !dbg !8774
  %5 = bitcast i8* %1 to i32*, !dbg !8776
  %6 = load i32, i32* %5, align 4, !dbg !8776
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !8777

7:                                                ; preds = %3
  br label %10, !dbg !8778

8:                                                ; preds = %3
  br label %10, !dbg !8780

9:                                                ; preds = %3
  br label %10, !dbg !8781

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !8782
  br label %12, !dbg !8783

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !8774
  ret i32 %13, !dbg !8783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !8784 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8786, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %1, metadata !8787, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %2, metadata !8788, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %1, metadata !8789, metadata !DIExpression()), !dbg !8794
  %4 = bitcast i8* %1 to i32*, !dbg !8795
  %5 = load i32, i32* %4, align 4, !dbg !8795
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8796
  call void @llvm.dbg.value(metadata i32 %6, metadata !8793, metadata !DIExpression()), !dbg !8794
  %7 = icmp slt i32 %6, 0, !dbg !8797
  br i1 %7, label %22, label %8, !dbg !8799

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8789, metadata !DIExpression()), !dbg !8794
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8800
  %10 = bitcast i8* %9 to i32*, !dbg !8800
  %11 = load i32, i32* %10, align 4, !dbg !8800
  %12 = lshr i32 %11, 16, !dbg !8800
  %13 = and i32 %12, 7, !dbg !8800
  %14 = lshr i32 %11, 8, !dbg !8801
  %15 = and i32 %14, 31, !dbg !8801
  %16 = shl i32 %13, %15, !dbg !8802
  call void @llvm.dbg.value(metadata i32 %16, metadata !8792, metadata !DIExpression()), !dbg !8794
  %17 = and i32 %11, 255, !dbg !8803
  %18 = or i32 %17, 1073887232, !dbg !8804
  %19 = inttoptr i32 %18 to i32*, !dbg !8805
  call void @llvm.dbg.value(metadata i32* %19, metadata !8790, metadata !DIExpression()), !dbg !8794
  %20 = load volatile i32, i32* %19, align 4, !dbg !8806
  call void @llvm.dbg.value(metadata i32 %20, metadata !8791, metadata !DIExpression()), !dbg !8794
  %21 = or i32 %16, %20, !dbg !8807
  call void @llvm.dbg.value(metadata i32 %21, metadata !8791, metadata !DIExpression()), !dbg !8794
  store volatile i32 %21, i32* %19, align 4, !dbg !8808
  br label %22, !dbg !8809

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8794
  ret i32 %23, !dbg !8810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 0, metadata !8816, metadata !DIExpression()), !dbg !8817
  %2 = add i32 %0, -1, !dbg !8818
  %3 = icmp ult i32 %2, 4, !dbg !8818
  br i1 %3, label %4, label %7, !dbg !8818

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8818
  %6 = load i32, i32* %5, align 4, !dbg !8818
  call void @llvm.dbg.value(metadata i32 %6, metadata !8816, metadata !DIExpression()), !dbg !8817
  br label %7, !dbg !8819

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8817
  ret i32 %8, !dbg !8820
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8821 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8823, metadata !DIExpression()), !dbg !8826
  tail call void @config_enable_default_clocks() #25, !dbg !8827
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8828
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8828
  %4 = lshr i32 %3, 4, !dbg !8828
  %5 = and i32 %4, 15, !dbg !8828
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8828
  %7 = load i8, i8* %6, align 1, !dbg !8828
  %8 = zext i8 %7 to i32, !dbg !8828
  %9 = lshr i32 %2, %8, !dbg !8828
  call void @llvm.dbg.value(metadata i32 %9, metadata !8824, metadata !DIExpression()), !dbg !8826
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !8825, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8826
  %10 = icmp ult i32 %9, 32000000, !dbg !8829
  br i1 %10, label %11, label %13, !dbg !8831

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8832
  br label %13, !dbg !8834

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8835
  tail call fastcc void @set_up_plls() #26, !dbg !8836
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8837
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #26, !dbg !8840
  br label %14, !dbg !8841

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8842
  %16 = icmp eq i32 %15, 12, !dbg !8843
  br i1 %16, label %17, label %14, !dbg !8841, !llvm.loop !8844

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !8846
  br i1 %18, label %19, label %21, !dbg !8848

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8849
  br label %21, !dbg !8851

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !8852
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8853
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8854
  ret i32 0, !dbg !8855
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !8856 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8858
  %2 = and i32 %1, 240, !dbg !8858
  ret i32 %2, !dbg !8859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !8860 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8861
  %2 = icmp eq i32 %1, 1, !dbg !8865
  br i1 %2, label %7, label %3, !dbg !8866

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8867
  br label %4, !dbg !8869

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8870
  %6 = icmp eq i32 %5, 1, !dbg !8871
  br i1 %6, label %7, label %4, !dbg !8869, !llvm.loop !8872

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8874
  br label %8, !dbg !8877

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8878
  %10 = icmp eq i32 %9, 1, !dbg !8879
  br i1 %10, label %11, label %8, !dbg !8877, !llvm.loop !8880

11:                                               ; preds = %8
  ret void, !dbg !8882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8883 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8884
  %2 = icmp eq i32 %1, 12, !dbg !8886
  br i1 %2, label %3, label %4, !dbg !8887

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8888
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8890
  br label %4, !dbg !8891

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8892
  tail call void @config_pll_sysclock() #25, !dbg !8893
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8894
  br label %5, !dbg !8895

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8896
  %7 = icmp eq i32 %6, 1, !dbg !8897
  br i1 %7, label %8, label %5, !dbg !8895, !llvm.loop !8898

8:                                                ; preds = %5
  ret void, !dbg !8900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !8901 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8904
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8905
  %2 = and i32 %1, -241, !dbg !8905
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8905
  ret void, !dbg !8906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !8907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8909, metadata !DIExpression()), !dbg !8910
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8911
  %3 = and i32 %2, -4, !dbg !8911
  %4 = or i32 %3, %0, !dbg !8911
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8911
  ret void, !dbg !8912
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !8913 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8914
  %2 = and i32 %1, 12, !dbg !8914
  ret i32 %2, !dbg !8915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !8916 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8918, metadata !DIExpression()), !dbg !8919
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8920
  %2 = and i32 %1, -1793, !dbg !8920
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8920
  ret void, !dbg !8921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !8922 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8924, metadata !DIExpression()), !dbg !8925
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8926
  %2 = and i32 %1, -14337, !dbg !8926
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8926
  ret void, !dbg !8927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !8928 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8929
  %2 = icmp eq i32 %1, 1, !dbg !8931
  br i1 %2, label %7, label %3, !dbg !8932

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8933
  br label %4, !dbg !8935

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8936
  %6 = icmp eq i32 %5, 1, !dbg !8937
  br i1 %6, label %7, label %4, !dbg !8935, !llvm.loop !8938

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #26, !dbg !8940
  br label %8, !dbg !8941

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8942
  %10 = icmp eq i32 %9, 4, !dbg !8943
  br i1 %10, label %11, label %8, !dbg !8941, !llvm.loop !8944

11:                                               ; preds = %8
  ret void, !dbg !8946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !8947 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8948
  %2 = and i32 %1, -16777217, !dbg !8948
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8948
  ret void, !dbg !8949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !8950 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8951
  %2 = or i32 %1, 16777216, !dbg !8951
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8951
  ret void, !dbg !8952
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !8953 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8954
  %2 = lshr i32 %1, 25, !dbg !8955
  %3 = and i32 %2, 1, !dbg !8955
  ret i32 %3, !dbg !8956
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !8957 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8958
  %2 = lshr i32 %1, 1, !dbg !8959
  %3 = and i32 %2, 1, !dbg !8959
  ret i32 %3, !dbg !8960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !8961 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8962
  %2 = or i32 %1, 1, !dbg !8962
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8962
  ret void, !dbg !8963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !8964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8965
  %2 = or i32 %1, 1, !dbg !8965
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8965
  ret void, !dbg !8966
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !8967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8968
  %2 = lshr i32 %1, 1, !dbg !8969
  %3 = and i32 %2, 1, !dbg !8969
  ret i32 %3, !dbg !8970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8971 {
  ret i32 16000000, !dbg !8973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !8976 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8977
  ret void, !dbg !8978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !8979 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8983, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 262144, metadata !8984, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8985, metadata !DIExpression()), !dbg !8986
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8987
  %2 = and i32 %1, -16580609, !dbg !8987
  %3 = or i32 %2, 4456448, !dbg !8987
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8987
  ret void, !dbg !8988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #11 !dbg !8989 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !8990
  %2 = zext i8 %1 to i32, !dbg !8990
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !8990
  ret i32 %3, !dbg !8991
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !8992 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #26, !dbg !8993
  ret void, !dbg !8994
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #15 !dbg !8995 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8997, metadata !DIExpression()), !dbg !8999
  %2 = bitcast i32* %1 to i8*, !dbg !9000
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9000
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8998, metadata !DIExpression()), !dbg !9001
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9002
  %4 = or i32 %3, 1, !dbg !9002
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9002
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9003
  %6 = and i32 %5, 1, !dbg !9003
  store volatile i32 %6, i32* %1, align 4, !dbg !9004
  %7 = load volatile i32, i32* %1, align 4, !dbg !9005
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9006
  ret void, !dbg !9006
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9009, metadata !DIExpression()), !dbg !9010
  %2 = tail call fastcc zeroext i1 @device_is_ready.50() #26, !dbg !9011
  br i1 %2, label %3, label %4, !dbg !9013

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9014
  br label %4, !dbg !9015

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9010
  ret i32 %5, !dbg !9016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.50() unnamed_addr #1 !dbg !9017 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9021, metadata !DIExpression()), !dbg !9022
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9023, !srcloc !9025
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.53() #26, !dbg !9026
  ret i1 %1, !dbg !9027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9028 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9029
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9030
  ret void, !dbg !9031
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9034, metadata !DIExpression()), !dbg !9036
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9037
  %3 = trunc i32 %0 to i8, !dbg !9037
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9037
  %5 = icmp eq i32 %4, 1, !dbg !9037
  call void @llvm.dbg.value(metadata i1 %5, metadata !9035, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9036
  br i1 %5, label %10, label %6, !dbg !9038

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9039
  br i1 %7, label %8, label %9, !dbg !9041

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext 13) #26, !dbg !9042
  br label %9, !dbg !9044

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext %3) #26, !dbg !9045
  br label %10, !dbg !9046

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.51(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9048 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9050, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i8 %0, metadata !9051, metadata !DIExpression()), !dbg !9052
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9053, !srcloc !9055
  tail call fastcc void @z_impl_uart_poll_out.52(i8 noundef zeroext %0) #26, !dbg !9056
  ret void, !dbg !9057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.52(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9058 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9060, metadata !DIExpression()), !dbg !9063
  call void @llvm.dbg.value(metadata i8 %0, metadata !9061, metadata !DIExpression()), !dbg !9063
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9064
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9062, metadata !DIExpression()), !dbg !9063
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9065
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9065
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #25, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9068 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9070, metadata !DIExpression()), !dbg !9071
  ret i32 0, !dbg !9072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.53() unnamed_addr #1 !dbg !9073 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9075, metadata !DIExpression()), !dbg !9076
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9077
  ret i1 %1, !dbg !9078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9079 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9083, metadata !DIExpression()), !dbg !9084
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9085
  ret void, !dbg !9086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9087 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9091, metadata !DIExpression()), !dbg !9092
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9093
  ret void, !dbg !9094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9099, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9100, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9101, metadata !DIExpression()), !dbg !9102
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9103
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9104
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9105
  tail call fastcc void @console_input_init() #26, !dbg !9106
  ret void, !dbg !9107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9108 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9111
  tail call fastcc void @uart_irq_rx_disable.54() #26, !dbg !9112
  tail call fastcc void @uart_irq_tx_disable.55() #26, !dbg !9113
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9114
  %2 = call fastcc i32 @uart_irq_rx_ready.56() #26, !dbg !9115
  %3 = icmp eq i32 %2, 0, !dbg !9116
  br i1 %3, label %8, label %4, !dbg !9116

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9110, metadata !DIExpression(DW_OP_deref)), !dbg !9117
  %5 = call fastcc i32 @uart_fifo_read.57(i8* noundef nonnull %1) #26, !dbg !9118
  %6 = call fastcc i32 @uart_irq_rx_ready.56() #26, !dbg !9115
  %7 = icmp eq i32 %6, 0, !dbg !9116
  br i1 %7, label %8, label %4, !dbg !9116, !llvm.loop !9120

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.58() #26, !dbg !9122
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9123
  ret void, !dbg !9123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.54() unnamed_addr #1 !dbg !9124 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9126, metadata !DIExpression()), !dbg !9127
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9128, !srcloc !9130
  tail call fastcc void @z_impl_uart_irq_rx_disable.67() #26, !dbg !9131
  ret void, !dbg !9132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.55() unnamed_addr #1 !dbg !9133 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9135, metadata !DIExpression()), !dbg !9136
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9137, !srcloc !9139
  tail call fastcc void @z_impl_uart_irq_tx_disable.66() #26, !dbg !9140
  ret void, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9146, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9147, metadata !DIExpression()), !dbg !9148
  tail call fastcc void @uart_irq_callback_user_data_set.60() #26, !dbg !9149
  ret void, !dbg !9150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.56() unnamed_addr #1 !dbg !9151 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9153, metadata !DIExpression()), !dbg !9155
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9156
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9154, metadata !DIExpression()), !dbg !9155
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9157
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9157
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9159
  br i1 %4, label %7, label %5, !dbg !9160

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9161
  br label %7, !dbg !9162

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9155
  ret i32 %8, !dbg !9163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.57(i8* noundef %0) unnamed_addr #1 !dbg !9164 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9166, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i8* %0, metadata !9167, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i32 1, metadata !9168, metadata !DIExpression()), !dbg !9170
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9171
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9169, metadata !DIExpression()), !dbg !9170
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9172
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9172
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9174
  br i1 %5, label %8, label %6, !dbg !9175

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8* noundef %0, i32 noundef 1) #25, !dbg !9176
  br label %8, !dbg !9177

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9170
  ret i32 %9, !dbg !9178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.58() unnamed_addr #1 !dbg !9179 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9181, metadata !DIExpression()), !dbg !9182
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9183, !srcloc !9185
  tail call fastcc void @z_impl_uart_irq_rx_enable.59() #26, !dbg !9186
  ret void, !dbg !9187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.59() unnamed_addr #1 !dbg !9188 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9190, metadata !DIExpression()), !dbg !9192
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9193
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9191, metadata !DIExpression()), !dbg !9192
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9194
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9194
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9196
  br i1 %4, label %6, label %5, !dbg !9197

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9198
  br label %6, !dbg !9200

6:                                                ; preds = %5, %0
  ret void, !dbg !9201
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1155 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1157, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata i8* %1, metadata !1158, metadata !DIExpression()), !dbg !9202
  %4 = call fastcc i32 @uart_irq_update.61() #26, !dbg !9203
  %5 = icmp eq i32 %4, 0, !dbg !9203
  br i1 %5, label %96, label %6, !dbg !9204

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9205
  %8 = icmp eq i32 %7, 0, !dbg !9204
  br i1 %8, label %96, label %9, !dbg !9206

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9207
  %10 = call fastcc i32 @uart_irq_rx_ready.56() #26, !dbg !9208
  %11 = icmp eq i32 %10, 0, !dbg !9208
  br i1 %11, label %93, label %12, !dbg !9210, !llvm.loop !9211

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1159, metadata !DIExpression(DW_OP_deref)), !dbg !9213
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9214
  call void @llvm.dbg.value(metadata i32 %13, metadata !1161, metadata !DIExpression()), !dbg !9213
  %14 = icmp slt i32 %13, 0, !dbg !9215
  br i1 %14, label %92, label %15, !dbg !9217

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9218
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9220
  br i1 %17, label %22, label %18, !dbg !9221

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9222
  call void @llvm.dbg.value(metadata i8 %19, metadata !1159, metadata !DIExpression()), !dbg !9213
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9223
  %21 = icmp eq i32 %20, 0, !dbg !9224
  br i1 %21, label %22, label %92, !dbg !9225

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9226
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9226
  br i1 %24, label %25, label %30, !dbg !9227

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9228
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9228
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9228
  call void @llvm.dbg.value(metadata i8* %28, metadata !1162, metadata !DIExpression()), !dbg !9229
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9230
  %29 = icmp eq i8* %28, null, !dbg !9231
  br i1 %29, label %92, label %30, !dbg !9233

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9234
  br i1 %31, label %32, label %36, !dbg !9236

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9237
  call void @llvm.dbg.value(metadata i8 %33, metadata !1159, metadata !DIExpression()), !dbg !9213
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9239
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9239
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9240
  br label %93, !dbg !9241, !llvm.loop !9211

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9242
  %38 = load i8, i8* %3, align 1, !dbg !9213
  call void @llvm.dbg.value(metadata i8 %38, metadata !1159, metadata !DIExpression()), !dbg !9213
  call void @llvm.dbg.value(metadata i8 %38, metadata !1159, metadata !DIExpression()), !dbg !9213
  br i1 %37, label %39, label %42, !dbg !9244

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9245
  br i1 %40, label %41, label %93, !dbg !9248, !llvm.loop !9211

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9249
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9251
  br label %93, !dbg !9252, !llvm.loop !9211

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9253
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9255
  %45 = icmp eq i32 %44, 0, !dbg !9255
  br i1 %45, label %46, label %81, !dbg !9256

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1159, metadata !DIExpression()), !dbg !9213
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9257, !llvm.loop !9211

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9259
  %49 = icmp eq i8 %48, 0, !dbg !9262
  br i1 %49, label %93, label %50, !dbg !9263, !llvm.loop !9211

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9264
  %52 = add i8 %48, -1, !dbg !9266
  store i8 %52, i8* @cur, align 1, !dbg !9266
  %53 = zext i8 %52 to i32, !dbg !9264
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9264
  %55 = load i8, i8* @end, align 1, !dbg !9267
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9268
  br label %93, !dbg !9269, !llvm.loop !9211

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9270
  br label %93, !dbg !9271, !llvm.loop !9211

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9272
  %59 = load i8, i8* @cur, align 1, !dbg !9273
  %60 = zext i8 %59 to i32, !dbg !9273
  %61 = load i8, i8* @end, align 1, !dbg !9274
  %62 = zext i8 %61 to i32, !dbg !9274
  %63 = add nuw nsw i32 %62, %60, !dbg !9275
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9272
  store i8 0, i8* %64, align 1, !dbg !9276
  call fastcc void @uart_poll_out.51(i8 noundef zeroext 13) #26, !dbg !9277
  call fastcc void @uart_poll_out.51(i8 noundef zeroext 10) #26, !dbg !9278
  store i8 0, i8* @cur, align 1, !dbg !9279
  store i8 0, i8* @end, align 1, !dbg !9280
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9281
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9281
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9281
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9281
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9283
  br label %93, !dbg !9284, !llvm.loop !9211

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9285
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9285
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9287
  br i1 %73, label %93, label %74, !dbg !9287, !llvm.loop !9211

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9288
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9288
  %77 = load i8, i8* @cur, align 1, !dbg !9290
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9291
  %79 = load i8, i8* @cur, align 1, !dbg !9292
  %80 = add i8 %79, %78, !dbg !9292
  store i8 %80, i8* @cur, align 1, !dbg !9292
  br label %93, !dbg !9293, !llvm.loop !9211

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9294
  %83 = zext i8 %82 to i32, !dbg !9294
  %84 = load i8, i8* @end, align 1, !dbg !9296
  %85 = zext i8 %84 to i32, !dbg !9296
  %86 = add nuw nsw i32 %85, %83, !dbg !9297
  %87 = icmp ult i32 %86, 127, !dbg !9298
  br i1 %87, label %88, label %93, !dbg !9299

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9300
  %90 = add i8 %82, 1, !dbg !9302
  store i8 %90, i8* @cur, align 1, !dbg !9302
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9300
  call void @llvm.dbg.value(metadata i8 %38, metadata !1159, metadata !DIExpression()), !dbg !9213
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9303
  br label %93, !dbg !9304

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9212
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9212
  %94 = call fastcc i32 @uart_irq_update.61() #26, !dbg !9203
  %95 = icmp eq i32 %94, 0, !dbg !9203
  br i1 %95, label %96, label %6, !dbg !9204

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.60() unnamed_addr #1 !dbg !9306 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9308, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9309, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8* null, metadata !9310, metadata !DIExpression()), !dbg !9312
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9313
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9311, metadata !DIExpression()), !dbg !9312
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9314
  br i1 %2, label %8, label %3, !dbg !9316

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9317
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9317
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9318
  br i1 %6, label %8, label %7, !dbg !9319

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_42, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9320
  br label %8, !dbg !9322

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.61() unnamed_addr #1 !dbg !9324 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9326, metadata !DIExpression()), !dbg !9327
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9328, !srcloc !9330
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.65() #26, !dbg !9331
  ret i32 %1, !dbg !9332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9333 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9335, metadata !DIExpression()), !dbg !9336
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9337, !srcloc !9339
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9340
  ret i32 %1, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9346, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.value(metadata i8* %0, metadata !9347, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.value(metadata i32 1, metadata !9348, metadata !DIExpression()), !dbg !9350
  %2 = tail call fastcc i32 @uart_fifo_read.57(i8* noundef %0) #26, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %2, metadata !9349, metadata !DIExpression()), !dbg !9350
  %3 = icmp slt i32 %2, 0, !dbg !9352
  br i1 %3, label %4, label %5, !dbg !9354

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.54() #26, !dbg !9355
  br label %5, !dbg !9357

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9350
  ret i32 %6, !dbg !9358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9359 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9369, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9368, metadata !DIExpression()), !dbg !9370
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9371, !srcloc !9373
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9374
  ret i8* %2, !dbg !9375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #17 !dbg !9376 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9382, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i32 %0, metadata !9383, metadata !DIExpression()), !dbg !9386
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9387
  call void @llvm.dbg.value(metadata i32 %2, metadata !9384, metadata !DIExpression()), !dbg !9386
  %3 = and i32 %0, 31, !dbg !9388
  %4 = shl nuw i32 1, %3, !dbg !9389
  %5 = and i32 %2, %4, !dbg !9389
  %6 = icmp ne i32 %5, 0, !dbg !9389
  ret i1 %6, !dbg !9390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9391 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9395, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i8* %1, metadata !9396, metadata !DIExpression()), !dbg !9398
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9399
  br i1 %3, label %4, label %11, !dbg !9401

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9402
  %6 = tail call fastcc i32 @isdigit.62(i32 noundef %5) #26, !dbg !9405
  %7 = icmp eq i32 %6, 0, !dbg !9405
  br i1 %7, label %8, label %9, !dbg !9406

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9407
  br label %34, !dbg !9409

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9410
  %10 = add nsw i32 %5, -48, !dbg !9411
  store i32 %10, i32* @ansi_val, align 4, !dbg !9412
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9413
  br label %81, !dbg !9414

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9415
  br i1 %12, label %13, label %34, !dbg !9417

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9418
  %15 = tail call fastcc i32 @isdigit.62(i32 noundef %14) #26, !dbg !9421
  %16 = icmp eq i32 %15, 0, !dbg !9421
  br i1 %16, label %29, label %17, !dbg !9422

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9423
  br i1 %18, label %19, label %24, !dbg !9426

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9427
  %21 = mul i32 %20, 10, !dbg !9427
  %22 = add nsw i32 %14, -48, !dbg !9429
  %23 = add i32 %22, %21, !dbg !9430
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9430
  br label %81, !dbg !9431

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9432
  %26 = mul i32 %25, 10, !dbg !9432
  %27 = add nsw i32 %14, -48, !dbg !9434
  %28 = add i32 %27, %26, !dbg !9435
  store i32 %28, i32* @ansi_val, align 4, !dbg !9435
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9436
  br i1 %30, label %31, label %33, !dbg !9438

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9439
  br i1 %32, label %33, label %81, !dbg !9440

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9441
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9442
  br label %34, !dbg !9443

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9397), !dbg !9444
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9445

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9446
  %37 = load i8, i8* @cur, align 1, !dbg !9449
  %38 = zext i8 %37 to i32, !dbg !9449
  %39 = icmp ugt i32 %36, %38, !dbg !9450
  br i1 %39, label %80, label %40, !dbg !9451

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9452
  %42 = trunc i32 %36 to i8, !dbg !9452
  %43 = add i8 %41, %42, !dbg !9452
  store i8 %43, i8* @end, align 1, !dbg !9452
  %44 = sub i8 %37, %42, !dbg !9453
  store i8 %44, i8* @cur, align 1, !dbg !9453
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9454
  br label %80, !dbg !9455

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9456
  %47 = load i8, i8* @end, align 1, !dbg !9458
  %48 = zext i8 %47 to i32, !dbg !9458
  %49 = icmp ugt i32 %46, %48, !dbg !9459
  br i1 %49, label %80, label %50, !dbg !9460

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9461
  %52 = sub i8 %47, %51, !dbg !9461
  store i8 %52, i8* @end, align 1, !dbg !9461
  %53 = load i8, i8* @cur, align 1, !dbg !9462
  %54 = add i8 %53, %51, !dbg !9462
  store i8 %54, i8* @cur, align 1, !dbg !9462
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9463
  br label %80, !dbg !9464

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9465
  %57 = icmp eq i8 %56, 0, !dbg !9465
  br i1 %57, label %80, label %58, !dbg !9467

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9468
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9469
  %60 = load i8, i8* @cur, align 1, !dbg !9470
  %61 = load i8, i8* @end, align 1, !dbg !9471
  %62 = add i8 %61, %60, !dbg !9471
  store i8 %62, i8* @end, align 1, !dbg !9471
  store i8 0, i8* @cur, align 1, !dbg !9472
  br label %80, !dbg !9473

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9474
  %65 = icmp eq i8 %64, 0, !dbg !9474
  br i1 %65, label %80, label %66, !dbg !9476

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9477
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9478
  %68 = load i8, i8* @end, align 1, !dbg !9479
  %69 = load i8, i8* @cur, align 1, !dbg !9480
  %70 = add i8 %69, %68, !dbg !9480
  store i8 %70, i8* @cur, align 1, !dbg !9480
  store i8 0, i8* @end, align 1, !dbg !9481
  br label %80, !dbg !9482

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9483
  %73 = icmp eq i8 %72, 0, !dbg !9483
  br i1 %73, label %80, label %74, !dbg !9485

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9486
  %75 = load i8, i8* @cur, align 1, !dbg !9487
  %76 = zext i8 %75 to i32, !dbg !9488
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9488
  %78 = load i8, i8* @end, align 1, !dbg !9489
  %79 = add i8 %78, -1, !dbg !9489
  store i8 %79, i8* @end, align 1, !dbg !9489
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9490
  br label %80, !dbg !9491

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9492
  br label %81, !dbg !9493

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9493
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #17 !dbg !9494 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9499, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %0, metadata !9500, metadata !DIExpression()), !dbg !9503
  %2 = and i32 %0, 31, !dbg !9504
  %3 = shl nuw i32 1, %2, !dbg !9504
  call void @llvm.dbg.value(metadata i32 %3, metadata !9501, metadata !DIExpression()), !dbg !9503
  %4 = xor i32 %3, -1, !dbg !9505
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %5, metadata !9502, metadata !DIExpression()), !dbg !9503
  %6 = and i32 %5, %3, !dbg !9507
  %7 = icmp ne i32 %6, 0, !dbg !9508
  ret i1 %7, !dbg !9509
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #17 !dbg !9510 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9514, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i32 %0, metadata !9515, metadata !DIExpression()), !dbg !9517
  %2 = and i32 %0, 31, !dbg !9518
  %3 = shl nuw i32 1, %2, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %3, metadata !9516, metadata !DIExpression()), !dbg !9517
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9519
  ret void, !dbg !9520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9523, metadata !DIExpression()), !dbg !9524
  %2 = add i32 %0, -32, !dbg !9525
  %3 = icmp ult i32 %2, 95, !dbg !9525
  %4 = zext i1 %3 to i32, !dbg !9525
  ret i32 %4, !dbg !9526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9527 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9531, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i8 %1, metadata !9532, metadata !DIExpression()), !dbg !9533
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext 8) #26, !dbg !9534
  %3 = icmp eq i8 %1, 0, !dbg !9535
  br i1 %3, label %4, label %5, !dbg !9537

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext 32) #26, !dbg !9538
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext 8) #26, !dbg !9540
  br label %14, !dbg !9541

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9542
  call void @llvm.dbg.value(metadata i8 %1, metadata !9532, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i8* %0, metadata !9531, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i8 %1, metadata !9532, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9533
  br label %6, !dbg !9543

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9532, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i8* %8, metadata !9531, metadata !DIExpression()), !dbg !9533
  %9 = add i8 %7, -1, !dbg !9544
  call void @llvm.dbg.value(metadata i8 %9, metadata !9532, metadata !DIExpression()), !dbg !9533
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9545
  %11 = load i8, i8* %10, align 1, !dbg !9547
  store i8 %11, i8* %8, align 1, !dbg !9548
  call void @llvm.dbg.value(metadata i8* %10, metadata !9531, metadata !DIExpression()), !dbg !9533
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext %11) #26, !dbg !9549
  call void @llvm.dbg.value(metadata i8 %9, metadata !9532, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9533
  %12 = icmp eq i8 %9, 0, !dbg !9550
  br i1 %12, label %13, label %6, !dbg !9543, !llvm.loop !9551

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext 32) #26, !dbg !9553
  tail call fastcc void @cursor_restore() #26, !dbg !9554
  br label %14, !dbg !9555

14:                                               ; preds = %13, %4
  ret void, !dbg !9555
}

; Function Attrs: optsize
declare !dbg !9556 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9563, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8 %1, metadata !9564, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8 %2, metadata !9565, metadata !DIExpression()), !dbg !9567
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext %1) #26, !dbg !9568
  %4 = icmp eq i8 %2, 0, !dbg !9569
  br i1 %4, label %5, label %6, !dbg !9571

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9572
  br label %17, !dbg !9574

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9575
  call void @llvm.dbg.value(metadata i8 %7, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8* %0, metadata !9563, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9567
  store i8 %1, i8* %0, align 1, !dbg !9576
  tail call fastcc void @cursor_save() #26, !dbg !9577
  call void @llvm.dbg.value(metadata i8 %7, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8 %2, metadata !9565, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8* %0, metadata !9563, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9567
  call void @llvm.dbg.value(metadata i8 %2, metadata !9565, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9567
  br label %8, !dbg !9578

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9567
  call void @llvm.dbg.value(metadata i8 %10, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8 %11, metadata !9565, metadata !DIExpression()), !dbg !9567
  %13 = add i8 %11, -1, !dbg !9579
  call void @llvm.dbg.value(metadata i8 %13, metadata !9565, metadata !DIExpression()), !dbg !9567
  tail call fastcc void @uart_poll_out.51(i8 noundef zeroext %10) #26, !dbg !9580
  %14 = load i8, i8* %12, align 1, !dbg !9582
  call void @llvm.dbg.value(metadata i8 %14, metadata !9564, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8* %12, metadata !9563, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9567
  store i8 %10, i8* %12, align 1, !dbg !9583
  call void @llvm.dbg.value(metadata i8 %14, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8* %12, metadata !9563, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9567
  call void @llvm.dbg.value(metadata i8 %13, metadata !9565, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9567
  %15 = icmp eq i8 %13, 0, !dbg !9584
  br i1 %15, label %16, label %8, !dbg !9578, !llvm.loop !9585

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9587
  br label %17, !dbg !9588

17:                                               ; preds = %16, %5
  ret void, !dbg !9588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9589 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9590
  ret void, !dbg !9591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9592 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9593
  ret void, !dbg !9594
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #17 !dbg !9595 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9600, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %0, metadata !9601, metadata !DIExpression()), !dbg !9602
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9603
  ret i32 %2, !dbg !9604
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #17 !dbg !9605 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9607, metadata !DIExpression()), !dbg !9609
  call void @llvm.dbg.value(metadata i32 %0, metadata !9608, metadata !DIExpression()), !dbg !9609
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9610
  ret i32 %2, !dbg !9611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.62(i32 noundef %0) unnamed_addr #11 !dbg !9612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9614, metadata !DIExpression()), !dbg !9615
  %2 = add i32 %0, -48, !dbg !9616
  %3 = icmp ult i32 %2, 10, !dbg !9617
  %4 = zext i1 %3 to i32, !dbg !9617
  ret i32 %4, !dbg !9618
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #17 !dbg !9619 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9621, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.value(metadata i32 4, metadata !9622, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.value(metadata i32 16, metadata !9623, metadata !DIExpression()), !dbg !9625
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %1, metadata !9624, metadata !DIExpression()), !dbg !9625
  %2 = and i32 %1, 16, !dbg !9627
  %3 = icmp ne i32 %2, 0, !dbg !9628
  ret i1 %3, !dbg !9629
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #17 !dbg !9630 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9632, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %0, metadata !9633, metadata !DIExpression()), !dbg !9635
  %2 = and i32 %0, 31, !dbg !9636
  %3 = shl nuw i32 1, %2, !dbg !9636
  call void @llvm.dbg.value(metadata i32 %3, metadata !9634, metadata !DIExpression()), !dbg !9635
  %4 = xor i32 %3, -1, !dbg !9637
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9638
  ret void, !dbg !9639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9642, metadata !DIExpression()), !dbg !9643
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i32 0, i32 0), i32 noundef %0) #25, !dbg !9644
  ret void, !dbg !9645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9648, metadata !DIExpression()), !dbg !9649
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.63, i32 0, i32 0), i32 noundef %0) #25, !dbg !9650
  ret void, !dbg !9651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #17 !dbg !9652 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9656, metadata !DIExpression()), !dbg !9657
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9658
  ret i32 %1, !dbg !9659
}

; Function Attrs: optsize
declare !dbg !9660 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9661 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9663, metadata !DIExpression()), !dbg !9665
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9666
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9664, metadata !DIExpression()), !dbg !9665
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9667
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9667
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9669
  br i1 %4, label %7, label %5, !dbg !9670

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9671
  br label %7, !dbg !9672

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9665
  ret i32 %8, !dbg !9673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.65() unnamed_addr #1 !dbg !9674 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9676, metadata !DIExpression()), !dbg !9678
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9679
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9677, metadata !DIExpression()), !dbg !9678
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9680
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9680
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9682
  br i1 %4, label %7, label %5, !dbg !9683

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9684
  br label %7, !dbg !9685

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9678
  ret i32 %8, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.66() unnamed_addr #1 !dbg !9687 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9689, metadata !DIExpression()), !dbg !9691
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9692
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9690, metadata !DIExpression()), !dbg !9691
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9693
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9693
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9695
  br i1 %4, label %6, label %5, !dbg !9696

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9697
  br label %6, !dbg !9699

6:                                                ; preds = %5, %0
  ret void, !dbg !9700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.67() unnamed_addr #1 !dbg !9701 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9703, metadata !DIExpression()), !dbg !9705
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9706
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9704, metadata !DIExpression()), !dbg !9705
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9707
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9707
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9709
  br i1 %4, label %6, label %5, !dbg !9710

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9711
  br label %6, !dbg !9713

6:                                                ; preds = %5, %0
  ret void, !dbg !9714
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9715 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9717, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata i8 %1, metadata !9718, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata i32 %2, metadata !9719, metadata !DIExpression()), !dbg !9722
  %5 = bitcast i32* %4 to i8*, !dbg !9723
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9723
  call void @llvm.dbg.value(metadata i32* %4, metadata !9721, metadata !DIExpression(DW_OP_deref)), !dbg !9722
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %6, metadata !9720, metadata !DIExpression()), !dbg !9722
  %7 = icmp eq i32 %6, 0, !dbg !9725
  br i1 %7, label %8, label %31, !dbg !9727

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9720, metadata !DIExpression()), !dbg !9722
  %9 = and i32 %2, 131072, !dbg !9728
  %10 = icmp eq i32 %9, 0, !dbg !9730
  br i1 %10, label %28, label %11, !dbg !9731

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9732
  %13 = icmp eq i32 %12, 0, !dbg !9735
  br i1 %13, label %18, label %14, !dbg !9736

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9737
  %16 = shl nuw i32 1, %15, !dbg !9737
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9739
  br label %25, !dbg !9740

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9741
  %20 = icmp eq i32 %19, 0, !dbg !9743
  %21 = zext i8 %1 to i32, !dbg !9722
  br i1 %20, label %25, label %22, !dbg !9744

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9745
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9747
  br label %25, !dbg !9748

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9749
  %27 = load i32, i32* %4, align 4, !dbg !9750
  call void @llvm.dbg.value(metadata i32 %30, metadata !9721, metadata !DIExpression()), !dbg !9722
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9751
  br label %31, !dbg !9752

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9749
  %30 = load i32, i32* %4, align 4, !dbg !9750
  call void @llvm.dbg.value(metadata i32 %30, metadata !9721, metadata !DIExpression()), !dbg !9722
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9751
  call void @llvm.dbg.value(metadata i32 0, metadata !9720, metadata !DIExpression()), !dbg !9722
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9753
  ret i32 %6, !dbg !9753
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !9754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9758, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i32* %1, metadata !9759, metadata !DIExpression()), !dbg !9763
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9764
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9764
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9764
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9760, metadata !DIExpression()), !dbg !9763
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9765
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9765
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9765
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9762, metadata !DIExpression()), !dbg !9763
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9766
  store i32 %9, i32* %1, align 4, !dbg !9767
  ret i32 0, !dbg !9768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !9769 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9771, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.value(metadata i32 %1, metadata !9772, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.value(metadata i32 %2, metadata !9773, metadata !DIExpression()), !dbg !9777
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9778
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9778
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9778
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9774, metadata !DIExpression()), !dbg !9777
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9779
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9779
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9779
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9775, metadata !DIExpression()), !dbg !9777
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %10, metadata !9776, metadata !DIExpression()), !dbg !9777
  %11 = xor i32 %1, -1, !dbg !9781
  %12 = and i32 %10, %11, !dbg !9782
  %13 = and i32 %2, %1, !dbg !9783
  %14 = or i32 %12, %13, !dbg !9784
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9785
  ret i32 0, !dbg !9786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9787 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9789, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.value(metadata i32 %1, metadata !9790, metadata !DIExpression()), !dbg !9793
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9794
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9794
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9794
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9791, metadata !DIExpression()), !dbg !9793
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9795
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9795
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9795
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9792, metadata !DIExpression()), !dbg !9793
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9796
  store volatile i32 %1, i32* %9, align 4, !dbg !9796
  ret i32 0, !dbg !9797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9800, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata i32 %1, metadata !9801, metadata !DIExpression()), !dbg !9804
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9805
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9805
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9805
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9802, metadata !DIExpression()), !dbg !9804
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9806
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9806
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9806
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9803, metadata !DIExpression()), !dbg !9804
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9807
  ret i32 0, !dbg !9808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9811, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 %1, metadata !9812, metadata !DIExpression()), !dbg !9815
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9816
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9816
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9816
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9813, metadata !DIExpression()), !dbg !9815
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9817
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9817
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9817
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9814, metadata !DIExpression()), !dbg !9815
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9818
  %10 = load volatile i32, i32* %9, align 4, !dbg !9818
  %11 = xor i32 %10, %1, !dbg !9818
  store volatile i32 %11, i32* %9, align 4, !dbg !9818
  ret i32 0, !dbg !9819
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9820 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9822, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i8 %1, metadata !9823, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 %2, metadata !9824, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 %3, metadata !9825, metadata !DIExpression()), !dbg !9832
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9833
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9833
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9833
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9826, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i8* undef, metadata !9827, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 0, metadata !9829, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 0, metadata !9830, metadata !DIExpression()), !dbg !9832
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9834

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9835
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9839
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9840
  %12 = load i32, i32* %11, align 4, !dbg !9840
  %13 = icmp eq i32 %10, %12, !dbg !9841
  br i1 %13, label %14, label %29, !dbg !9842

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9843
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9845
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9846
  br label %29, !dbg !9847

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9848
  %17 = load i8*, i8** %16, align 4, !dbg !9848
  call void @llvm.dbg.value(metadata i8* %17, metadata !9827, metadata !DIExpression()), !dbg !9832
  %18 = zext i8 %1 to i32, !dbg !9849
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9851
  %20 = icmp eq i32 %19, 0, !dbg !9852
  br i1 %20, label %21, label %29, !dbg !9853

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9854
  %23 = load i32, i32* %22, align 4, !dbg !9854
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9855
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9856

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9829, metadata !DIExpression()), !dbg !9832
  br label %27, !dbg !9857

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9829, metadata !DIExpression()), !dbg !9832
  br label %27, !dbg !9859

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9829, metadata !DIExpression()), !dbg !9832
  br label %27, !dbg !9860

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9832
  call void @llvm.dbg.value(metadata i32 %28, metadata !9829, metadata !DIExpression()), !dbg !9832
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9861
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9862
  br label %29, !dbg !9862

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9832
  call void @llvm.dbg.value(metadata i32 %30, metadata !9830, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.label(metadata !9831), !dbg !9863
  ret i32 %30, !dbg !9864
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9867, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9868, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i1 %2, metadata !9869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9871
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9872
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9872
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9872
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9870, metadata !DIExpression()), !dbg !9871
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9873
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9874
  ret i32 %8, !dbg !9875
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9876 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9882, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9883, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i1 %2, metadata !9884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9885
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9886
  br i1 %4, label %10, label %5, !dbg !9888

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9889
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9892
  %8 = or i1 %7, %2, !dbg !9893
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9893
  br i1 %2, label %11, label %13, !dbg !9893

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9894

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9895
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9898
  br label %13, !dbg !9899

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9885
  ret i32 %14, !dbg !9900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9901 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9905, metadata !DIExpression()), !dbg !9906
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9907
  %3 = icmp eq %struct._snode* %2, null, !dbg !9907
  ret i1 %3, !dbg !9907
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9908 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9912, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9913, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9914, metadata !DIExpression()), !dbg !9916
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9917
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9915, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9914, metadata !DIExpression()), !dbg !9916
  %4 = icmp eq %struct._snode* %3, null, !dbg !9919
  br i1 %4, label %15, label %5, !dbg !9917

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9915, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9914, metadata !DIExpression()), !dbg !9916
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9921
  br i1 %6, label %9, label %11, !dbg !9924

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9915, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9914, metadata !DIExpression()), !dbg !9916
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9921
  br i1 %8, label %9, label %11, !dbg !9924, !llvm.loop !9925

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9926
  br label %15, !dbg !9926

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9915, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9914, metadata !DIExpression()), !dbg !9916
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9919
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9915, metadata !DIExpression()), !dbg !9916
  %14 = icmp eq %struct._snode* %13, null, !dbg !9919
  br i1 %14, label %15, label %7, !dbg !9917, !llvm.loop !9925

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9929 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9933, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9934, metadata !DIExpression()), !dbg !9935
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9936
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9936
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9936
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9937
  %5 = icmp eq %struct._snode* %4, null, !dbg !9937
  br i1 %5, label %6, label %8, !dbg !9936

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9939
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9939
  br label %8, !dbg !9939

8:                                                ; preds = %6, %2
  ret void, !dbg !9936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9941 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9945, metadata !DIExpression()), !dbg !9946
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9947
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9947
  ret %struct._snode* %3, !dbg !9948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9949 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9954, metadata !DIExpression()), !dbg !9955
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9956
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9957
  ret void, !dbg !9958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9959 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9961, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9962, metadata !DIExpression()), !dbg !9963
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9964
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9965
  ret void, !dbg !9966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9967 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9969, metadata !DIExpression()), !dbg !9970
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9971
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9971
  ret %struct._snode* %3, !dbg !9972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9973 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9975, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9976, metadata !DIExpression()), !dbg !9977
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9978
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9979
  ret void, !dbg !9980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9981 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9985, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9986, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9987, metadata !DIExpression()), !dbg !9988
  %4 = icmp eq %struct._snode* %1, null, !dbg !9989
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9991
  br i1 %4, label %6, label %11, !dbg !9992

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9993
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9995
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9995
  br i1 %8, label %9, label %15, !dbg !9993

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9997
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9997
  br label %15, !dbg !9997

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9999
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10001
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10001
  br i1 %13, label %14, label %15, !dbg !9999

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10003
  br label %15, !dbg !10003

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9992
  ret void, !dbg !9992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !10005 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10009, metadata !DIExpression()), !dbg !10010
  %2 = icmp eq %struct._snode* %0, null, !dbg !10011
  br i1 %2, label %5, label %3, !dbg !10011

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10011
  br label %5, !dbg !10011

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10011
  ret %struct._snode* %6, !dbg !10011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10012 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10014, metadata !DIExpression()), !dbg !10015
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10016
  ret %struct._snode* %2, !dbg !10016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10017 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10019, metadata !DIExpression()), !dbg !10020
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10021
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10021
  ret %struct._snode* %3, !dbg !10022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10025, metadata !DIExpression()), !dbg !10028
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10029, !range !10030
  call void @llvm.dbg.value(metadata i32 %2, metadata !10026, metadata !DIExpression()), !dbg !10028
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10031
  call void @llvm.dbg.value(metadata i32 %3, metadata !10027, metadata !DIExpression()), !dbg !10028
  ret i32 %3, !dbg !10032
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %1, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %1, metadata !10037, metadata !DIExpression()), !dbg !10038
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10039
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10039
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10040
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10040
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10040
  %8 = shl nuw i32 1, %0, !dbg !10041
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10042
  ret void, !dbg !10043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10044 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10048, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i32 %1, metadata !10049, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10050, metadata !DIExpression()), !dbg !10054
  %4 = bitcast i64* %3 to i8*, !dbg !10055
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10055
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !10052, metadata !DIExpression()), !dbg !10054
  store i64 4294967328, i64* %3, align 8, !dbg !10056
  call void @llvm.dbg.value(metadata i64* %3, metadata !10052, metadata !DIExpression(DW_OP_deref)), !dbg !10054
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10057
  call void @llvm.dbg.value(metadata i32 %5, metadata !10053, metadata !DIExpression()), !dbg !10054
  %6 = icmp eq i32 %5, 0, !dbg !10058
  br i1 %6, label %7, label %8, !dbg !10060

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10061
  br label %8, !dbg !10062

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10063
  ret void, !dbg !10063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10066, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i8* %0, metadata !10067, metadata !DIExpression()), !dbg !10069
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10070
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10068, metadata !DIExpression()), !dbg !10069
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10071
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10071
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10072
  ret i32 %5, !dbg !10073
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10076, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 %1, metadata !10077, metadata !DIExpression()), !dbg !10079
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10080
  call void @llvm.dbg.value(metadata i32 %3, metadata !10078, metadata !DIExpression()), !dbg !10079
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10081
  ret void, !dbg !10082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10087, metadata !DIExpression()), !dbg !10088
  %2 = sdiv i32 %0, 4, !dbg !10089
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10090
  %6 = add nsw i32 %5, 16, !dbg !10091
  %7 = shl i32 15, %6, !dbg !10092
  %8 = or i32 %7, %2, !dbg !10093
  ret i32 %8, !dbg !10094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10100, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i32 %1, metadata !10101, metadata !DIExpression()), !dbg !10102
  %3 = and i32 %1, 3, !dbg !10103
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !10103
  %5 = load volatile i32, i32* %4, align 4, !dbg !10103
  %6 = lshr i32 %1, 16, !dbg !10103
  %7 = xor i32 %6, -1, !dbg !10103
  %8 = and i32 %5, %7, !dbg !10103
  call void @llvm.dbg.value(metadata i32 %6, metadata !10104, metadata !DIExpression()) #24, !dbg !10108
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10110, !srcloc !10111
  call void @llvm.dbg.value(metadata i32 %9, metadata !10107, metadata !DIExpression()) #24, !dbg !10108
  call void @llvm.dbg.value(metadata i32 %9, metadata !10112, metadata !DIExpression()) #24, !dbg !10117
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10119, !range !3865
  %11 = shl i32 %0, %10, !dbg !10103
  %12 = or i32 %11, %8, !dbg !10103
  store volatile i32 %12, i32* %4, align 4, !dbg !10103
  ret void, !dbg !10120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10121 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10125, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10126, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata i32 %2, metadata !10127, metadata !DIExpression()), !dbg !10130
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10131
  %5 = icmp eq %struct._snode* %4, null, !dbg !10131
  br i1 %5, label %21, label %6, !dbg !10131

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10133
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10128, metadata !DIExpression()), !dbg !10130
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10134
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10134
  %11 = load i32, i32* %10, align 4, !dbg !10134
  %12 = and i32 %11, %2, !dbg !10138
  %13 = icmp eq i32 %12, 0, !dbg !10138
  br i1 %13, label %19, label %14, !dbg !10139

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10128, metadata !DIExpression()), !dbg !10130
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10140
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10140
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10140
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10142
  br label %19, !dbg !10143

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10128, metadata !DIExpression()), !dbg !10130
  %20 = icmp eq %struct._snode* %8, null, !dbg !10144
  br i1 %20, label %21, label %6, !dbg !10144

21:                                               ; preds = %19, %3
  ret void, !dbg !10145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10148, metadata !DIExpression()), !dbg !10149
  %2 = and i32 %0, 3, !dbg !10150
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !10150
  %4 = load volatile i32, i32* %3, align 4, !dbg !10150
  %5 = lshr i32 %0, 16, !dbg !10150
  %6 = and i32 %4, %5, !dbg !10150
  call void @llvm.dbg.value(metadata i32 %5, metadata !10104, metadata !DIExpression()) #24, !dbg !10151
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10153, !srcloc !10111
  call void @llvm.dbg.value(metadata i32 %7, metadata !10107, metadata !DIExpression()) #24, !dbg !10151
  call void @llvm.dbg.value(metadata i32 %7, metadata !10112, metadata !DIExpression()) #24, !dbg !10154
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10156, !range !3865
  %9 = lshr i32 %6, %8, !dbg !10157
  ret i32 %9, !dbg !10158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10159 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10164, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata i32 %1, metadata !10165, metadata !DIExpression()), !dbg !10166
  %3 = shl i32 %1, 16, !dbg !10167
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10167
  store volatile i32 %3, i32* %4, align 4, !dbg !10167
  ret void, !dbg !10168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10169 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10173, metadata !DIExpression()), !dbg !10174
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10175
  %3 = load volatile i32, i32* %2, align 4, !dbg !10175
  ret i32 %3, !dbg !10176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10177 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10179, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata i32 %1, metadata !10180, metadata !DIExpression()), !dbg !10181
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10182
  store volatile i32 %1, i32* %3, align 4, !dbg !10182
  ret void, !dbg !10183
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10184 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10186, metadata !DIExpression()), !dbg !10187
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10188
  %3 = load volatile i32, i32* %2, align 4, !dbg !10188
  ret i32 %3, !dbg !10189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10194, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32* %1, metadata !10195, metadata !DIExpression()), !dbg !10196
  %3 = and i32 %0, 131072, !dbg !10197
  %4 = icmp eq i32 %3, 0, !dbg !10199
  br i1 %4, label %22, label %5, !dbg !10200

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10201
  %6 = and i32 %0, 2, !dbg !10203
  %7 = icmp eq i32 %6, 0, !dbg !10205
  br i1 %7, label %11, label %8, !dbg !10206

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10207
  %10 = icmp eq i32 %9, 0, !dbg !10207
  br i1 %10, label %33, label %11, !dbg !10210

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10211
  store i32 %12, i32* %1, align 4, !dbg !10211
  %13 = and i32 %0, 16, !dbg !10212
  %14 = icmp eq i32 %13, 0, !dbg !10214
  br i1 %14, label %17, label %15, !dbg !10215

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10216
  br label %31, !dbg !10218

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10219
  %19 = icmp eq i32 %18, 0, !dbg !10221
  br i1 %19, label %33, label %20, !dbg !10222

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10223
  br label %31, !dbg !10225

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10226
  %24 = icmp eq i32 %23, 0, !dbg !10228
  br i1 %24, label %31, label %25, !dbg !10229

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10230
  %27 = icmp eq i32 %26, 0, !dbg !10233
  br i1 %27, label %28, label %31, !dbg !10234

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10235
  br label %33, !dbg !10236

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10196
  ret i32 %34, !dbg !10236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10237 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10241, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 %2, metadata !10243, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 %3, metadata !10244, metadata !DIExpression()), !dbg !10252
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10253
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10253
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10253
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10245, metadata !DIExpression()), !dbg !10252
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10254
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10254
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10254
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10246, metadata !DIExpression()), !dbg !10252
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10255
  call void @llvm.dbg.value(metadata i32 %11, metadata !10247, metadata !DIExpression()), !dbg !10252
  %12 = and i32 %2, 48, !dbg !10256
  call void @llvm.dbg.value(metadata i32 %12, metadata !10248, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 %2, metadata !10249, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10252
  call void @llvm.dbg.value(metadata i32 %2, metadata !10250, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10252
  call void @llvm.dbg.value(metadata i32 %2, metadata !10251, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10252
  %13 = lshr i32 %2, 6, !dbg !10257
  %14 = and i32 %13, 1, !dbg !10257
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10258
  %15 = lshr i32 %2, 7, !dbg !10259
  %16 = and i32 %15, 3, !dbg !10259
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10260
  %17 = lshr i32 %2, 9, !dbg !10261
  %18 = and i32 %17, 3, !dbg !10261
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10262
  %19 = icmp eq i32 %12, 32, !dbg !10263
  br i1 %19, label %20, label %24, !dbg !10265

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10266
  br i1 %21, label %22, label %23, !dbg !10269

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10270
  br label %24, !dbg !10272

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10273
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10275
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10276
  ret void, !dbg !10277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10280, metadata !DIExpression()), !dbg !10282
  %2 = shl nuw i32 1, %0, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %2, metadata !10281, metadata !DIExpression()), !dbg !10282
  ret i32 %2, !dbg !10284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10285 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10289, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32 %1, metadata !10290, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32 %2, metadata !10291, metadata !DIExpression()), !dbg !10292
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10293
  %5 = load volatile i32, i32* %4, align 4, !dbg !10293
  %6 = xor i32 %1, -1, !dbg !10293
  %7 = and i32 %5, %6, !dbg !10293
  %8 = mul i32 %2, %1, !dbg !10293
  %9 = or i32 %7, %8, !dbg !10293
  store volatile i32 %9, i32* %4, align 4, !dbg !10293
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10297, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata i32 %1, metadata !10298, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata i32 %2, metadata !10299, metadata !DIExpression()), !dbg !10300
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10301
  %5 = load volatile i32, i32* %4, align 4, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()) #24, !dbg !10302
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10304, !srcloc !10111
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()) #24, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %6, metadata !10112, metadata !DIExpression()) #24, !dbg !10305
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10307, !range !3865
  %8 = shl nuw nsw i32 %7, 1, !dbg !10301
  %9 = shl i32 3, %8, !dbg !10301
  %10 = xor i32 %9, -1, !dbg !10301
  %11 = and i32 %5, %10, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()) #24, !dbg !10308
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()) #24, !dbg !10308
  call void @llvm.dbg.value(metadata i32 %6, metadata !10112, metadata !DIExpression()) #24, !dbg !10310
  %12 = shl i32 %2, %8, !dbg !10301
  %13 = or i32 %11, %12, !dbg !10301
  store volatile i32 %13, i32* %4, align 4, !dbg !10301
  ret void, !dbg !10312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10313 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10315, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.value(metadata i32 %1, metadata !10316, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.value(metadata i32 %2, metadata !10317, metadata !DIExpression()), !dbg !10318
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10319
  %5 = load volatile i32, i32* %4, align 4, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()) #24, !dbg !10320
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10322, !srcloc !10111
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()) #24, !dbg !10320
  call void @llvm.dbg.value(metadata i32 %6, metadata !10112, metadata !DIExpression()) #24, !dbg !10323
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10325, !range !3865
  %8 = shl nuw nsw i32 %7, 1, !dbg !10319
  %9 = shl i32 3, %8, !dbg !10319
  %10 = xor i32 %9, -1, !dbg !10319
  %11 = and i32 %5, %10, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()) #24, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()) #24, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %6, metadata !10112, metadata !DIExpression()) #24, !dbg !10328
  %12 = shl i32 %2, %8, !dbg !10319
  %13 = or i32 %11, %12, !dbg !10319
  store volatile i32 %13, i32* %4, align 4, !dbg !10319
  ret void, !dbg !10330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10331 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10333, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.value(metadata i32 %1, metadata !10334, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.value(metadata i32 %2, metadata !10335, metadata !DIExpression()), !dbg !10336
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10337
  %5 = load volatile i32, i32* %4, align 4, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()) #24, !dbg !10338
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10340, !srcloc !10111
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()) #24, !dbg !10338
  call void @llvm.dbg.value(metadata i32 %6, metadata !10112, metadata !DIExpression()) #24, !dbg !10341
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10343, !range !3865
  %8 = shl nuw nsw i32 %7, 2, !dbg !10337
  %9 = shl i32 15, %8, !dbg !10337
  %10 = xor i32 %9, -1, !dbg !10337
  %11 = and i32 %5, %10, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()) #24, !dbg !10344
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()) #24, !dbg !10344
  call void @llvm.dbg.value(metadata i32 %6, metadata !10112, metadata !DIExpression()) #24, !dbg !10346
  %12 = shl i32 %2, %8, !dbg !10337
  %13 = or i32 %11, %12, !dbg !10337
  store volatile i32 %13, i32* %4, align 4, !dbg !10337
  ret void, !dbg !10348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10351, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %1, metadata !10352, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %2, metadata !10353, metadata !DIExpression()), !dbg !10354
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10355
  %5 = load volatile i32, i32* %4, align 4, !dbg !10355
  %6 = lshr i32 %1, 8, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %6, metadata !10104, metadata !DIExpression()) #24, !dbg !10356
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10358, !srcloc !10111
  call void @llvm.dbg.value(metadata i32 %7, metadata !10107, metadata !DIExpression()) #24, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %7, metadata !10112, metadata !DIExpression()) #24, !dbg !10359
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10361, !range !3865
  %9 = shl nuw nsw i32 %8, 2, !dbg !10355
  %10 = shl i32 15, %9, !dbg !10355
  %11 = xor i32 %10, -1, !dbg !10355
  %12 = and i32 %5, %11, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %6, metadata !10104, metadata !DIExpression()) #24, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %7, metadata !10107, metadata !DIExpression()) #24, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %7, metadata !10112, metadata !DIExpression()) #24, !dbg !10364
  %13 = shl i32 %2, %9, !dbg !10355
  %14 = or i32 %12, %13, !dbg !10355
  store volatile i32 %14, i32* %4, align 4, !dbg !10355
  ret void, !dbg !10366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10367 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10369, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 %1, metadata !10370, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 %2, metadata !10371, metadata !DIExpression()), !dbg !10372
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10373
  %5 = load volatile i32, i32* %4, align 4, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()) #24, !dbg !10374
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10376, !srcloc !10111
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()) #24, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %6, metadata !10112, metadata !DIExpression()) #24, !dbg !10377
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10379, !range !3865
  %8 = shl nuw nsw i32 %7, 1, !dbg !10373
  %9 = shl i32 3, %8, !dbg !10373
  %10 = xor i32 %9, -1, !dbg !10373
  %11 = and i32 %5, %10, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()) #24, !dbg !10380
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()) #24, !dbg !10380
  call void @llvm.dbg.value(metadata i32 %6, metadata !10112, metadata !DIExpression()) #24, !dbg !10382
  %12 = shl i32 %2, %8, !dbg !10373
  %13 = or i32 %11, %12, !dbg !10373
  store volatile i32 %13, i32* %4, align 4, !dbg !10373
  ret void, !dbg !10384
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10387, metadata !DIExpression()), !dbg !10390
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10391
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10391
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10391
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10388, metadata !DIExpression()), !dbg !10390
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10392
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10393
  %6 = tail call fastcc zeroext i1 @device_is_ready.78() #26, !dbg !10394
  br i1 %6, label %7, label %11, !dbg !10396

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10397
  call void @llvm.dbg.value(metadata i32 %8, metadata !10389, metadata !DIExpression()), !dbg !10390
  %9 = icmp slt i32 %8, 0, !dbg !10398
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10400
  br label %11, !dbg !10400

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10390
  ret i32 %12, !dbg !10401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.78() unnamed_addr #1 !dbg !10402 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10406, metadata !DIExpression()), !dbg !10407
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10408, !srcloc !10410
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.79() #26, !dbg !10411
  ret i1 %1, !dbg !10412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10413 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10417, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i8 1, metadata !10418, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10419, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i32 0, metadata !10420, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10421, metadata !DIExpression()), !dbg !10422
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10423
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10423
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10423
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10419, metadata !DIExpression()), !dbg !10422
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10424
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10427
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %7, metadata !10420, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i32 %7, metadata !10420, metadata !DIExpression()), !dbg !10422
  ret i32 %7, !dbg !10429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.79() unnamed_addr #1 !dbg !10430 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10432, metadata !DIExpression()), !dbg !10433
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10434
  ret i1 %1, !dbg !10435
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10436 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10440, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32 %1, metadata !10441, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32 %2, metadata !10442, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32 %3, metadata !10443, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32 0, metadata !10444, metadata !DIExpression()), !dbg !10448
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10449
  %5 = icmp eq i32 %3, 17, !dbg !10450
  br i1 %5, label %6, label %14, !dbg !10451

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10452
  call void @llvm.dbg.value(metadata i32 %7, metadata !10445, metadata !DIExpression()), !dbg !10453
  %8 = icmp eq i32 %7, 0, !dbg !10454
  %9 = shl nuw i32 1, %1, !dbg !10456
  br i1 %8, label %12, label %10, !dbg !10457

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10458
  br label %14, !dbg !10460

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10461
  br label %14, !dbg !10464

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10465
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !10466 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10468, metadata !DIExpression()), !dbg !10472
  call void @llvm.dbg.value(metadata i8* %1, metadata !10469, metadata !DIExpression()), !dbg !10472
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10473
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10473
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10473
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10470, metadata !DIExpression()), !dbg !10472
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10474
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10474
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10476
  %9 = icmp eq i32 %8, 0, !dbg !10476
  br i1 %9, label %12, label %10, !dbg !10477

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10478
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10480
  br label %12, !dbg !10481

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10482
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10484
  %15 = icmp eq i32 %14, 0, !dbg !10484
  br i1 %15, label %19, label %16, !dbg !10485

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10486
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10487
  store i8 %18, i8* %1, align 1, !dbg !10488
  br label %19, !dbg !10489

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10472
  ret i32 %20, !dbg !10490
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10493, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i8 %1, metadata !10494, metadata !DIExpression()), !dbg !10497
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10498
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10498
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10498
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10495, metadata !DIExpression()), !dbg !10497
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10499

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10500
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10503
  %10 = icmp eq i32 %9, 0, !dbg !10503
  br i1 %10, label %18, label %11, !dbg !10504

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10505, !srcloc !10512
  call void @llvm.dbg.value(metadata i32 undef, metadata !10508, metadata !DIExpression()) #24, !dbg !10513
  call void @llvm.dbg.value(metadata i32 undef, metadata !10509, metadata !DIExpression()) #24, !dbg !10513
  call void @llvm.dbg.value(metadata i32 undef, metadata !10496, metadata !DIExpression()), !dbg !10497
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10514
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10516
  %15 = icmp eq i32 %14, 0, !dbg !10516
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10505
  br i1 %15, label %17, label %19, !dbg !10517

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10508, metadata !DIExpression()) #24, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %16, metadata !10496, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 undef, metadata !10518, metadata !DIExpression()) #24, !dbg !10521
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10523, !srcloc !10524
  br label %18, !dbg !10525

18:                                               ; preds = %17, %7
  br label %7, !dbg !10500, !llvm.loop !10526

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10505
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10528
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %20, metadata !10518, metadata !DIExpression()) #24, !dbg !10530
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10532, !srcloc !10524
  ret void, !dbg !10533
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10536, metadata !DIExpression()), !dbg !10539
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10540
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10540
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10537, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.value(metadata i32 0, metadata !10538, metadata !DIExpression()), !dbg !10539
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10541
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10541
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10543
  %8 = icmp ne i32 %7, 0, !dbg !10543
  %9 = zext i1 %8 to i32, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %9, metadata !10538, metadata !DIExpression()), !dbg !10539
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10545
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10547
  %12 = icmp eq i32 %11, 0, !dbg !10547
  %13 = or i32 %9, 2, !dbg !10548
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10548
  call void @llvm.dbg.value(metadata i32 %14, metadata !10538, metadata !DIExpression()), !dbg !10539
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10549
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10551
  %17 = icmp eq i32 %16, 0, !dbg !10551
  %18 = or i32 %14, 4, !dbg !10552
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10552
  call void @llvm.dbg.value(metadata i32 %19, metadata !10538, metadata !DIExpression()), !dbg !10539
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10553
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10555
  %22 = icmp eq i32 %21, 0, !dbg !10555
  %23 = or i32 %19, 8, !dbg !10556
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10556
  call void @llvm.dbg.value(metadata i32 %24, metadata !10538, metadata !DIExpression()), !dbg !10539
  %25 = and i32 %24, 8, !dbg !10557
  %26 = icmp eq i32 %25, 0, !dbg !10557
  br i1 %26, label %29, label %27, !dbg !10559

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10560
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10562
  br label %29, !dbg !10563

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10564
  %31 = icmp eq i32 %30, 0, !dbg !10564
  br i1 %31, label %34, label %32, !dbg !10566

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10567
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10569
  br label %34, !dbg !10570

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10571
  %36 = icmp eq i32 %35, 0, !dbg !10571
  br i1 %36, label %39, label %37, !dbg !10573

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10574
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10576
  br label %39, !dbg !10577

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10578
  %41 = icmp eq i32 %40, 0, !dbg !10578
  br i1 %41, label %44, label %42, !dbg !10580

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10581
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10583
  br label %44, !dbg !10584

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10585
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10586
  ret i32 %24, !dbg !10587
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10588 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10590, metadata !DIExpression()), !dbg !10599
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10591, metadata !DIExpression()), !dbg !10599
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10600
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10600
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10600
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10592, metadata !DIExpression()), !dbg !10599
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10601
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10601
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10601
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10593, metadata !DIExpression()), !dbg !10599
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10602
  %10 = load i8, i8* %9, align 4, !dbg !10602
  %11 = zext i8 %10 to i32, !dbg !10603
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %12, metadata !10595, metadata !DIExpression()), !dbg !10599
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10605
  %14 = load i8, i8* %13, align 1, !dbg !10605
  %15 = zext i8 %14 to i32, !dbg !10606
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10607
  call void @llvm.dbg.value(metadata i32 %16, metadata !10596, metadata !DIExpression()), !dbg !10599
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10608
  %18 = load i8, i8* %17, align 2, !dbg !10608
  %19 = zext i8 %18 to i32, !dbg !10609
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10610
  call void @llvm.dbg.value(metadata i32 %20, metadata !10597, metadata !DIExpression()), !dbg !10599
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10611
  %22 = load i8, i8* %21, align 1, !dbg !10611
  %23 = zext i8 %22 to i32, !dbg !10612
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10613
  call void @llvm.dbg.value(metadata i32 %24, metadata !10598, metadata !DIExpression()), !dbg !10599
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10614

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10616
  br i1 %26, label %69, label %27, !dbg !10618

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10619

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10620
  br i1 %29, label %65, label %30, !dbg !10620

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10622
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10599
  br i1 %31, label %38, label %34, !dbg !10624

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10625
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10625

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10628
  br i1 %37, label %38, label %69, !dbg !10629

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10630
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10631
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10632
  %41 = icmp eq i32 %12, %40, !dbg !10634
  br i1 %41, label %43, label %42, !dbg !10635

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10636
  br label %43, !dbg !10638

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10639
  %45 = icmp eq i32 %16, %44, !dbg !10641
  br i1 %45, label %47, label %46, !dbg !10642

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10643
  br label %47, !dbg !10645

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10646
  %49 = icmp eq i32 %20, %48, !dbg !10648
  br i1 %49, label %51, label %50, !dbg !10649

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10650
  br label %51, !dbg !10652

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10653
  %53 = icmp eq i32 %24, %52, !dbg !10655
  br i1 %53, label %55, label %54, !dbg !10656

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10657
  br label %55, !dbg !10659

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10660
  %57 = load i32, i32* %56, align 4, !dbg !10660
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10662
  %59 = load i32, i32* %58, align 4, !dbg !10662
  %60 = icmp eq i32 %57, %59, !dbg !10663
  br i1 %60, label %63, label %61, !dbg !10664

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10665
  %62 = load i32, i32* %56, align 4, !dbg !10667
  store i32 %62, i32* %58, align 4, !dbg !10668
  br label %63, !dbg !10669

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10670
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10671
  br label %69, !dbg !10672

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10620
  %67 = and i8 %66, 1, !dbg !10620
  %68 = icmp eq i8 %67, 0, !dbg !10620
  br i1 %68, label %30, label %69, !dbg !10620

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10599
  ret i32 %70, !dbg !10673
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10676, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10677, metadata !DIExpression()), !dbg !10679
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10680
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10680
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10680
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10678, metadata !DIExpression()), !dbg !10679
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10681
  %7 = load i32, i32* %6, align 4, !dbg !10681
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10682
  store i32 %7, i32* %8, align 4, !dbg !10683
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10684, !range !10685
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10686
  %11 = trunc i32 %10 to i8, !dbg !10686
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10687
  store i8 %11, i8* %12, align 4, !dbg !10688
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10689, !range !10690
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10691
  %15 = trunc i32 %14 to i8, !dbg !10691
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10692
  store i8 %15, i8* %16, align 1, !dbg !10693
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10694
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10695, !range !10685
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10696
  %20 = trunc i32 %19 to i8, !dbg !10696
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10697
  store i8 %20, i8* %21, align 2, !dbg !10698
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10699, !range !10700
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10701
  %24 = trunc i32 %23 to i8, !dbg !10701
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10702
  store i8 %24, i8* %25, align 1, !dbg !10703
  ret i32 0, !dbg !10704
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10707, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i8* %1, metadata !10708, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i32 %2, metadata !10709, metadata !DIExpression()), !dbg !10713
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10714
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10714
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10714
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10710, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i8 0, metadata !10711, metadata !DIExpression()), !dbg !10713
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10715
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10715
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10717
  %10 = icmp eq i32 %9, 0, !dbg !10717
  br i1 %10, label %30, label %11, !dbg !10718

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10719, !srcloc !10512
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10719
  call void @llvm.dbg.value(metadata i32 %13, metadata !10508, metadata !DIExpression()) #24, !dbg !10721
  call void @llvm.dbg.value(metadata i32 undef, metadata !10509, metadata !DIExpression()) #24, !dbg !10721
  call void @llvm.dbg.value(metadata i32 %13, metadata !10712, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i8 0, metadata !10711, metadata !DIExpression()), !dbg !10713
  %14 = icmp sgt i32 %2, 0, !dbg !10722
  br i1 %14, label %15, label %28, !dbg !10723

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10711, metadata !DIExpression()), !dbg !10713
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10724
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10725
  %20 = icmp eq i32 %19, 0, !dbg !10723
  br i1 %20, label %28, label %21, !dbg !10726

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10727
  %23 = add i8 %17, 1, !dbg !10729
  call void @llvm.dbg.value(metadata i8 %23, metadata !10711, metadata !DIExpression()), !dbg !10713
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10730
  %25 = load i8, i8* %24, align 1, !dbg !10730
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10731
  %26 = zext i8 %23 to i32, !dbg !10732
  %27 = icmp slt i32 %26, %2, !dbg !10722
  br i1 %27, label %15, label %28, !dbg !10723, !llvm.loop !10733

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10732
  call void @llvm.dbg.value(metadata i32 %13, metadata !10518, metadata !DIExpression()) #24, !dbg !10735
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10737, !srcloc !10524
  br label %30, !dbg !10738

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10713
  ret i32 %31, !dbg !10739
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #15 !dbg !10740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10742, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i8* %1, metadata !10743, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i32 %2, metadata !10744, metadata !DIExpression()), !dbg !10747
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10748
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10748
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10748
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10745, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i8 0, metadata !10746, metadata !DIExpression()), !dbg !10747
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10749
  call void @llvm.dbg.value(metadata i8 0, metadata !10746, metadata !DIExpression()), !dbg !10747
  %8 = icmp sgt i32 %2, 0, !dbg !10750
  br i1 %8, label %9, label %28, !dbg !10751

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10746, metadata !DIExpression()), !dbg !10747
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10749
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10752
  %14 = icmp eq i32 %13, 0, !dbg !10751
  br i1 %14, label %28, label %15, !dbg !10753

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10754
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10756
  %18 = add i8 %11, 1, !dbg !10757
  call void @llvm.dbg.value(metadata i8 %18, metadata !10746, metadata !DIExpression()), !dbg !10747
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10758
  store i8 %17, i8* %19, align 1, !dbg !10759
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10760
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10762
  %22 = icmp eq i32 %21, 0, !dbg !10762
  br i1 %22, label %25, label %23, !dbg !10763

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10764
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10766
  br label %25, !dbg !10767

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10746, metadata !DIExpression()), !dbg !10747
  %26 = zext i8 %18 to i32, !dbg !10768
  %27 = icmp slt i32 %26, %2, !dbg !10750
  br i1 %27, label %9, label %28, !dbg !10751, !llvm.loop !10769

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10768
  ret i32 %29, !dbg !10771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10772 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10774, metadata !DIExpression()), !dbg !10776
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10777
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10777
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10777
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10775, metadata !DIExpression()), !dbg !10776
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10778
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10778
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10779
  ret void, !dbg !10780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10783, metadata !DIExpression()), !dbg !10785
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10786
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10786
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10786
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10784, metadata !DIExpression()), !dbg !10785
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10787
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10787
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10788
  ret void, !dbg !10789
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10790 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10792, metadata !DIExpression()), !dbg !10794
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10795
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10795
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10795
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10793, metadata !DIExpression()), !dbg !10794
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10796
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10796
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10797
  %8 = icmp eq i32 %7, 0, !dbg !10797
  br i1 %8, label %14, label %9, !dbg !10798

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10799
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10800
  %12 = icmp ne i32 %11, 0, !dbg !10798
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10804, metadata !DIExpression()), !dbg !10806
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10807
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10807
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10807
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10805, metadata !DIExpression()), !dbg !10806
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10808
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10808
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10809
  ret void, !dbg !10810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10813, metadata !DIExpression()), !dbg !10815
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10816
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10816
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10814, metadata !DIExpression()), !dbg !10815
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10817
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10817
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10818
  ret void, !dbg !10819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #17 !dbg !10820 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10822, metadata !DIExpression()), !dbg !10824
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10825
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10825
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10825
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10823, metadata !DIExpression()), !dbg !10824
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10826
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10826
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10827
  ret i32 %7, !dbg !10828
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10831, metadata !DIExpression()), !dbg !10833
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10834
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10834
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10834
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10832, metadata !DIExpression()), !dbg !10833
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10835
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10835
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10836
  ret i32 %7, !dbg !10837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10840, metadata !DIExpression()), !dbg !10842
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10843
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10843
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10843
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10841, metadata !DIExpression()), !dbg !10842
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10844
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10844
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10845
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10846
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10846
  switch i32 %8, label %11 [
    i32 1073821696, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
  ], !dbg !10846

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10848
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10850
  br label %11, !dbg !10851

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10850
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10852
  ret void, !dbg !10853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10856, metadata !DIExpression()), !dbg !10858
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10859
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10859
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10859
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10857, metadata !DIExpression()), !dbg !10858
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10860
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10860
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10861
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10862
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10862
  switch i32 %8, label %11 [
    i32 1073821696, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
  ], !dbg !10862

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10864
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10866
  br label %11, !dbg !10867

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10866
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10868
  ret void, !dbg !10869
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !10870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10872, metadata !DIExpression()), !dbg !10874
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10875
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10875
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10875
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10873, metadata !DIExpression()), !dbg !10874
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10876
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10876
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10877
  %8 = icmp eq i32 %7, 0, !dbg !10877
  br i1 %8, label %13, label %9, !dbg !10878

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10879
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10880
  %12 = icmp eq i32 %11, 0, !dbg !10880
  br i1 %12, label %13, label %22, !dbg !10881

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10882
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10883
  %16 = icmp eq i32 %15, 0, !dbg !10883
  br i1 %16, label %22, label %17, !dbg !10884

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10885
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10886
  %20 = icmp ne i32 %19, 0, !dbg !10884
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10888 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10890, metadata !DIExpression()), !dbg !10891
  ret i32 1, !dbg !10892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10893 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10895, metadata !DIExpression()), !dbg !10899
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10896, metadata !DIExpression()), !dbg !10899
  call void @llvm.dbg.value(metadata i8* %2, metadata !10897, metadata !DIExpression()), !dbg !10899
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10900
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10900
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10900
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10898, metadata !DIExpression()), !dbg !10899
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10901
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10902
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10903
  store i8* %2, i8** %8, align 4, !dbg !10904
  ret void, !dbg !10905
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10906 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10911, metadata !DIExpression()), !dbg !10912
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10913
  %3 = load volatile i32, i32* %2, align 4, !dbg !10913
  %4 = lshr i32 %3, 5, !dbg !10914
  %5 = and i32 %4, 1, !dbg !10914
  ret i32 %5, !dbg !10915
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10916 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10918, metadata !DIExpression()), !dbg !10919
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10920
  %3 = load volatile i32, i32* %2, align 4, !dbg !10920
  %4 = lshr i32 %3, 5, !dbg !10921
  %5 = and i32 %4, 1, !dbg !10921
  ret i32 %5, !dbg !10922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10923 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10925, metadata !DIExpression()), !dbg !10926
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10927
  %3 = load volatile i32, i32* %2, align 4, !dbg !10927
  %4 = lshr i32 %3, 6, !dbg !10928
  %5 = and i32 %4, 1, !dbg !10928
  ret i32 %5, !dbg !10929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10930 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10932, metadata !DIExpression()), !dbg !10933
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10934
  %3 = load volatile i32, i32* %2, align 4, !dbg !10934
  %4 = lshr i32 %3, 6, !dbg !10935
  %5 = and i32 %4, 1, !dbg !10935
  ret i32 %5, !dbg !10936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10937 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10941, metadata !DIExpression()), !dbg !10942
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10943
  %3 = load volatile i32, i32* %2, align 4, !dbg !10943
  %4 = and i32 %3, -2, !dbg !10943
  store volatile i32 %4, i32* %2, align 4, !dbg !10943
  ret void, !dbg !10944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10945 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10947, metadata !DIExpression()), !dbg !10948
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10949
  %3 = load volatile i32, i32* %2, align 4, !dbg !10949
  %4 = and i32 %3, -65, !dbg !10949
  store volatile i32 %4, i32* %2, align 4, !dbg !10949
  ret void, !dbg !10950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10951 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10953, metadata !DIExpression()), !dbg !10954
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10955
  %3 = load volatile i32, i32* %2, align 4, !dbg !10955
  %4 = and i32 %3, -257, !dbg !10955
  store volatile i32 %4, i32* %2, align 4, !dbg !10955
  ret void, !dbg !10956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10957 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10959, metadata !DIExpression()), !dbg !10960
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10961
  %3 = load volatile i32, i32* %2, align 4, !dbg !10961
  %4 = or i32 %3, 1, !dbg !10961
  store volatile i32 %4, i32* %2, align 4, !dbg !10961
  ret void, !dbg !10962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10965, metadata !DIExpression()), !dbg !10966
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10967
  %3 = load volatile i32, i32* %2, align 4, !dbg !10967
  %4 = or i32 %3, 64, !dbg !10967
  store volatile i32 %4, i32* %2, align 4, !dbg !10967
  ret void, !dbg !10968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10969 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10971, metadata !DIExpression()), !dbg !10972
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10973
  %3 = load volatile i32, i32* %2, align 4, !dbg !10973
  %4 = or i32 %3, 256, !dbg !10973
  store volatile i32 %4, i32* %2, align 4, !dbg !10973
  ret void, !dbg !10974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10975 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10977, metadata !DIExpression()), !dbg !10978
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10979
  %3 = load volatile i32, i32* %2, align 4, !dbg !10979
  %4 = and i32 %3, -33, !dbg !10979
  store volatile i32 %4, i32* %2, align 4, !dbg !10979
  ret void, !dbg !10980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10981 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10983, metadata !DIExpression()), !dbg !10984
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10985
  %3 = load volatile i32, i32* %2, align 4, !dbg !10985
  %4 = or i32 %3, 32, !dbg !10985
  store volatile i32 %4, i32* %2, align 4, !dbg !10985
  ret void, !dbg !10986
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10987 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10989, metadata !DIExpression()), !dbg !10990
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10991
  %3 = load volatile i32, i32* %2, align 4, !dbg !10991
  %4 = lshr i32 %3, 7, !dbg !10992
  %5 = and i32 %4, 1, !dbg !10992
  ret i32 %5, !dbg !10993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10994 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10996, metadata !DIExpression()), !dbg !10997
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10998
  %3 = load volatile i32, i32* %2, align 4, !dbg !10998
  %4 = and i32 %3, -65, !dbg !10998
  store volatile i32 %4, i32* %2, align 4, !dbg !10998
  ret void, !dbg !10999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11000 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11002, metadata !DIExpression()), !dbg !11003
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11004
  %3 = load volatile i32, i32* %2, align 4, !dbg !11004
  %4 = or i32 %3, 64, !dbg !11004
  store volatile i32 %4, i32* %2, align 4, !dbg !11004
  ret void, !dbg !11005
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11006 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11010, metadata !DIExpression()), !dbg !11011
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11012
  %3 = load volatile i32, i32* %2, align 4, !dbg !11012
  %4 = trunc i32 %3 to i8, !dbg !11013
  ret i8 %4, !dbg !11014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11015 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11017, metadata !DIExpression()), !dbg !11018
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11019
  %3 = load volatile i32, i32* %2, align 4, !dbg !11019
  %4 = lshr i32 %3, 3, !dbg !11020
  %5 = and i32 %4, 1, !dbg !11020
  ret i32 %5, !dbg !11021
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11022 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11024, metadata !DIExpression()), !dbg !11026
  %3 = bitcast i32* %2 to i8*, !dbg !11027
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11027
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11025, metadata !DIExpression()), !dbg !11028
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11029
  %5 = load volatile i32, i32* %4, align 4, !dbg !11029
  store volatile i32 %5, i32* %2, align 4, !dbg !11030
  %6 = load volatile i32, i32* %2, align 4, !dbg !11031
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11032
  %8 = load volatile i32, i32* %7, align 4, !dbg !11032
  store volatile i32 %8, i32* %2, align 4, !dbg !11033
  %9 = load volatile i32, i32* %2, align 4, !dbg !11034
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11035
  ret void, !dbg !11035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !11036 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11040, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i8 %1, metadata !11041, metadata !DIExpression()), !dbg !11042
  %3 = zext i8 %1 to i32, !dbg !11043
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11044
  store volatile i32 %3, i32* %4, align 4, !dbg !11045
  ret void, !dbg !11046
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11047 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11051, metadata !DIExpression()), !dbg !11053
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11054
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11054
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11054
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11052, metadata !DIExpression()), !dbg !11053
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11055
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11055
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11056
  ret i32 %7, !dbg !11057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11062, metadata !DIExpression()), !dbg !11063
  %2 = icmp eq i32 %0, 1024, !dbg !11064
  %3 = select i1 %2, i32 2, i32 0, !dbg !11064
  %4 = icmp eq i32 %0, 1536, !dbg !11064
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11064
  ret i32 %5, !dbg !11065
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11068, metadata !DIExpression()), !dbg !11070
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11071
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11071
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11071
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11069, metadata !DIExpression()), !dbg !11070
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11072
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11072
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11073
  ret i32 %7, !dbg !11074
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11079, metadata !DIExpression()), !dbg !11080
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11081
  %3 = icmp ult i32 %2, 4, !dbg !11081
  br i1 %3, label %4, label %7, !dbg !11081

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11081
  %6 = load i32, i32* %5, align 4, !dbg !11081
  br label %7, !dbg !11081

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11082
  ret i32 %8, !dbg !11084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11087, metadata !DIExpression()), !dbg !11089
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11090
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11090
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11090
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11088, metadata !DIExpression()), !dbg !11089
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11091
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11091
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11092
  ret i32 %7, !dbg !11093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11098, metadata !DIExpression()), !dbg !11100
  call void @llvm.dbg.value(metadata i32 %1, metadata !11099, metadata !DIExpression()), !dbg !11100
  %3 = icmp eq i32 %0, 4096, !dbg !11101
  %4 = icmp eq i32 %1, 0, !dbg !11101
  %5 = select i1 %4, i32 4, i32 3, !dbg !11101
  %6 = select i1 %4, i32 3, i32 2, !dbg !11101
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11101
  ret i32 %7, !dbg !11102
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11105, metadata !DIExpression()), !dbg !11107
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11108
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11108
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11108
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11106, metadata !DIExpression()), !dbg !11107
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11109
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11109
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11110
  ret i32 %7, !dbg !11111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11116, metadata !DIExpression()), !dbg !11117
  %2 = icmp eq i32 %0, 768, !dbg !11118
  %3 = zext i1 %2 to i32, !dbg !11117
  ret i32 %3, !dbg !11120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11121 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11123, metadata !DIExpression()), !dbg !11124
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11125
  %3 = load volatile i32, i32* %2, align 4, !dbg !11125
  %4 = and i32 %3, 768, !dbg !11125
  ret i32 %4, !dbg !11126
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11127 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11129, metadata !DIExpression()), !dbg !11130
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11131
  %3 = load volatile i32, i32* %2, align 4, !dbg !11131
  %4 = and i32 %3, 4096, !dbg !11131
  ret i32 %4, !dbg !11132
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11133 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11135, metadata !DIExpression()), !dbg !11136
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11137
  %3 = load volatile i32, i32* %2, align 4, !dbg !11137
  %4 = and i32 %3, 12288, !dbg !11137
  ret i32 %4, !dbg !11138
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11141, metadata !DIExpression()), !dbg !11142
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11143
  %3 = load volatile i32, i32* %2, align 4, !dbg !11143
  %4 = and i32 %3, 1536, !dbg !11143
  ret i32 %4, !dbg !11144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11149, metadata !DIExpression()), !dbg !11150
  %2 = icmp eq i32 %0, 2, !dbg !11151
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11151
  %4 = icmp eq i32 %0, 1, !dbg !11151
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11151
  ret i32 %5, !dbg !11152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11157, metadata !DIExpression()), !dbg !11158
  %2 = icmp ult i32 %0, 3, !dbg !11159
  br i1 %2, label %3, label %6, !dbg !11159

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11159
  %5 = load i32, i32* %4, align 4, !dbg !11159
  br label %6, !dbg !11159

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11160
  ret i32 %7, !dbg !11162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11167, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 %1, metadata !11168, metadata !DIExpression()), !dbg !11169
  %3 = icmp eq i32 %0, 4, !dbg !11170
  %4 = icmp eq i32 %1, 0, !dbg !11170
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11170
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11170
  ret i32 %6, !dbg !11171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11176, metadata !DIExpression()), !dbg !11177
  %2 = icmp eq i32 %0, 1, !dbg !11178
  %3 = select i1 %2, i32 768, i32 0, !dbg !11177
  ret i32 %3, !dbg !11180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11181 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11183, metadata !DIExpression()), !dbg !11184
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11185
  %3 = load volatile i32, i32* %2, align 4, !dbg !11185
  %4 = and i32 %3, -8193, !dbg !11185
  store volatile i32 %4, i32* %2, align 4, !dbg !11185
  ret void, !dbg !11186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11187 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11191, metadata !DIExpression()), !dbg !11194
  call void @llvm.dbg.value(metadata i32 %1, metadata !11192, metadata !DIExpression()), !dbg !11194
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11195
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11195
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11195
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11193, metadata !DIExpression()), !dbg !11194
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11196
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11196
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11197
  ret void, !dbg !11198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11199 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11201, metadata !DIExpression()), !dbg !11204
  call void @llvm.dbg.value(metadata i32 %1, metadata !11202, metadata !DIExpression()), !dbg !11204
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11205
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11205
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11205
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11203, metadata !DIExpression()), !dbg !11204
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11206
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11206
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11207
  ret void, !dbg !11208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11211, metadata !DIExpression()), !dbg !11214
  call void @llvm.dbg.value(metadata i32 %1, metadata !11212, metadata !DIExpression()), !dbg !11214
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11215
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11215
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11215
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11213, metadata !DIExpression()), !dbg !11214
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11216
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11216
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11217
  ret void, !dbg !11218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11219 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11221, metadata !DIExpression()), !dbg !11224
  call void @llvm.dbg.value(metadata i32 %1, metadata !11222, metadata !DIExpression()), !dbg !11224
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11225
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11225
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11225
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11223, metadata !DIExpression()), !dbg !11224
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11226
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11226
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11227
  ret void, !dbg !11228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11229 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11231, metadata !DIExpression()), !dbg !11236
  call void @llvm.dbg.value(metadata i32 %1, metadata !11232, metadata !DIExpression()), !dbg !11236
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11237
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11237
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11237
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11233, metadata !DIExpression()), !dbg !11236
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11238
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11238
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11238
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11234, metadata !DIExpression()), !dbg !11236
  %10 = bitcast i32* %3 to i8*, !dbg !11239
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11239
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11240
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11240
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11244
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11244
  %15 = load i8*, i8** %14, align 4, !dbg !11244
  call void @llvm.dbg.value(metadata i32* %3, metadata !11235, metadata !DIExpression(DW_OP_deref)), !dbg !11236
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11245
  %17 = icmp slt i32 %16, 0, !dbg !11246
  br i1 %17, label %23, label %18, !dbg !11247

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11248
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11248
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11249
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11250
  %22 = load i32, i32* %3, align 4, !dbg !11251
  call void @llvm.dbg.value(metadata i32 %22, metadata !11235, metadata !DIExpression()), !dbg !11236
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11252
  br label %23, !dbg !11253

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11253
  ret void, !dbg !11253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11254 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11256, metadata !DIExpression()), !dbg !11257
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11258
  %3 = load volatile i32, i32* %2, align 4, !dbg !11258
  %4 = or i32 %3, 8192, !dbg !11258
  store volatile i32 %4, i32* %2, align 4, !dbg !11258
  ret void, !dbg !11259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11260 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11262, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i8* %1, metadata !11263, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i32* %2, metadata !11264, metadata !DIExpression()), !dbg !11266
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11267
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11267
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11267
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11265, metadata !DIExpression()), !dbg !11266
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11268
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11268
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11270
  br i1 %9, label %12, label %10, !dbg !11271

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11272
  br label %12, !dbg !11273

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11266
  ret i32 %13, !dbg !11274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11275 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11279, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 0, metadata !11280, metadata !DIExpression()), !dbg !11281
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11282
  %3 = load volatile i32, i32* %2, align 4, !dbg !11282
  %4 = and i32 %3, -32769, !dbg !11282
  store volatile i32 %4, i32* %2, align 4, !dbg !11282
  ret void, !dbg !11283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11284 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11288, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 %1, metadata !11289, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 0, metadata !11290, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 %2, metadata !11291, metadata !DIExpression()), !dbg !11292
  %4 = mul i32 %1, 25, !dbg !11293
  %5 = shl i32 %2, 2, !dbg !11293
  %6 = udiv i32 %4, %5, !dbg !11293
  %7 = udiv i32 %6, 100, !dbg !11293
  %8 = shl nuw nsw i32 %7, 4, !dbg !11293
  %9 = mul i32 %7, -100, !dbg !11293
  %10 = add i32 %9, %6, !dbg !11293
  %11 = shl i32 %10, 4, !dbg !11293
  %12 = add i32 %11, 50, !dbg !11293
  %13 = udiv i32 %12, 100, !dbg !11293
  %14 = and i32 %13, 240, !dbg !11293
  %15 = add nuw nsw i32 %14, %8, !dbg !11293
  %16 = and i32 %13, 15, !dbg !11293
  %17 = and i32 %15, 65520, !dbg !11296
  %18 = or i32 %17, %16, !dbg !11296
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11297
  store volatile i32 %18, i32* %19, align 4, !dbg !11298
  ret void, !dbg !11299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11300 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11302, metadata !DIExpression()), !dbg !11304
  call void @llvm.dbg.value(metadata i32 %1, metadata !11303, metadata !DIExpression()), !dbg !11304
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11305
  %4 = load volatile i32, i32* %3, align 4, !dbg !11305
  %5 = and i32 %4, -769, !dbg !11305
  %6 = or i32 %5, %1, !dbg !11305
  store volatile i32 %6, i32* %3, align 4, !dbg !11305
  ret void, !dbg !11306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11307 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11309, metadata !DIExpression()), !dbg !11311
  call void @llvm.dbg.value(metadata i32 %1, metadata !11310, metadata !DIExpression()), !dbg !11311
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11312
  %4 = load volatile i32, i32* %3, align 4, !dbg !11312
  %5 = and i32 %4, -4097, !dbg !11312
  %6 = or i32 %5, %1, !dbg !11312
  store volatile i32 %6, i32* %3, align 4, !dbg !11312
  ret void, !dbg !11313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11314 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11316, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.value(metadata i32 %1, metadata !11317, metadata !DIExpression()), !dbg !11318
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11319
  %4 = load volatile i32, i32* %3, align 4, !dbg !11319
  %5 = and i32 %4, -12289, !dbg !11319
  %6 = or i32 %5, %1, !dbg !11319
  store volatile i32 %6, i32* %3, align 4, !dbg !11319
  ret void, !dbg !11320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11323, metadata !DIExpression()), !dbg !11325
  call void @llvm.dbg.value(metadata i32 %1, metadata !11324, metadata !DIExpression()), !dbg !11325
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11326
  %4 = load volatile i32, i32* %3, align 4, !dbg !11326
  %5 = and i32 %4, -1537, !dbg !11326
  %6 = or i32 %5, %1, !dbg !11326
  store volatile i32 %6, i32* %3, align 4, !dbg !11326
  ret void, !dbg !11327
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11328 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11330, metadata !DIExpression()), !dbg !11331
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11332
  %3 = load volatile i32, i32* %2, align 4, !dbg !11332
  %4 = and i32 %3, 1, !dbg !11332
  ret i32 %4, !dbg !11333
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11334 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11336, metadata !DIExpression()), !dbg !11337
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11338
  %3 = load volatile i32, i32* %2, align 4, !dbg !11338
  %4 = lshr i32 %3, 1, !dbg !11339
  %5 = and i32 %4, 1, !dbg !11339
  ret i32 %5, !dbg !11340
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11341 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11343, metadata !DIExpression()), !dbg !11344
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11345
  %3 = load volatile i32, i32* %2, align 4, !dbg !11345
  %4 = lshr i32 %3, 8, !dbg !11346
  %5 = and i32 %4, 1, !dbg !11346
  ret i32 %5, !dbg !11347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11348 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11350, metadata !DIExpression()), !dbg !11351
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11352
  store volatile i32 -257, i32* %2, align 4, !dbg !11352
  ret void, !dbg !11353
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11354 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11356, metadata !DIExpression()), !dbg !11358
  %3 = bitcast i32* %2 to i8*, !dbg !11359
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11359
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11357, metadata !DIExpression()), !dbg !11360
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11361
  %5 = load volatile i32, i32* %4, align 4, !dbg !11361
  store volatile i32 %5, i32* %2, align 4, !dbg !11362
  %6 = load volatile i32, i32* %2, align 4, !dbg !11363
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11364
  %8 = load volatile i32, i32* %7, align 4, !dbg !11364
  store volatile i32 %8, i32* %2, align 4, !dbg !11365
  %9 = load volatile i32, i32* %2, align 4, !dbg !11366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11367
  ret void, !dbg !11367
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11368 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11370, metadata !DIExpression()), !dbg !11372
  %3 = bitcast i32* %2 to i8*, !dbg !11373
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11373
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11371, metadata !DIExpression()), !dbg !11374
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11375
  %5 = load volatile i32, i32* %4, align 4, !dbg !11375
  store volatile i32 %5, i32* %2, align 4, !dbg !11376
  %6 = load volatile i32, i32* %2, align 4, !dbg !11377
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11378
  %8 = load volatile i32, i32* %7, align 4, !dbg !11378
  store volatile i32 %8, i32* %2, align 4, !dbg !11379
  %9 = load volatile i32, i32* %2, align 4, !dbg !11380
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11381
  ret void, !dbg !11381
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11382 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11384, metadata !DIExpression()), !dbg !11386
  %3 = bitcast i32* %2 to i8*, !dbg !11387
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11387
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11385, metadata !DIExpression()), !dbg !11388
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11389
  %5 = load volatile i32, i32* %4, align 4, !dbg !11389
  store volatile i32 %5, i32* %2, align 4, !dbg !11390
  %6 = load volatile i32, i32* %2, align 4, !dbg !11391
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11392
  %8 = load volatile i32, i32* %7, align 4, !dbg !11392
  store volatile i32 %8, i32* %2, align 4, !dbg !11393
  %9 = load volatile i32, i32* %2, align 4, !dbg !11394
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11395
  ret void, !dbg !11395
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1692 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1694, metadata !DIExpression()), !dbg !11396
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #25, !dbg !11397
  tail call void @arch_irq_enable(i32 noundef 38) #25, !dbg !11399
  ret void, !dbg !11399
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1743, metadata !DIExpression()), !dbg !11400
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #25, !dbg !11401
  tail call void @arch_irq_enable(i32 noundef 37) #25, !dbg !11403
  ret void, !dbg !11403
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11404 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11406, metadata !DIExpression()), !dbg !11408
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11409
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11409
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11409
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11407, metadata !DIExpression()), !dbg !11408
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11410
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11410
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11412
  br i1 %7, label %11, label %8, !dbg !11413

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11414
  %10 = load i8*, i8** %9, align 4, !dbg !11414
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11416
  br label %11, !dbg !11417

11:                                               ; preds = %8, %1
  ret void, !dbg !11418
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11419 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11421, metadata !DIExpression()), !dbg !11427
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11428
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11428
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11428
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11422, metadata !DIExpression()), !dbg !11427
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11429
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11429
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11429
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11423, metadata !DIExpression()), !dbg !11427
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11430
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11431
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11431
  %10 = tail call fastcc zeroext i1 @device_is_ready.85(%struct.device* noundef %9) #26, !dbg !11433
  br i1 %10, label %11, label %51, !dbg !11434

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11435
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11436
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11436
  %15 = load i8*, i8** %14, align 4, !dbg !11436
  %16 = tail call fastcc i32 @clock_control_on.86(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11437
  call void @llvm.dbg.value(metadata i32 %16, metadata !11426, metadata !DIExpression()), !dbg !11427
  %17 = icmp eq i32 %16, 0, !dbg !11438
  br i1 %17, label %18, label %51, !dbg !11440

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11441
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11441
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11442
  call void @llvm.dbg.value(metadata i32 %21, metadata !11426, metadata !DIExpression()), !dbg !11427
  %22 = icmp slt i32 %21, 0, !dbg !11443
  br i1 %22, label %51, label %23, !dbg !11445

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11446
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11446
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11447
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11448
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11449
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11450
  %28 = load i32, i32* %27, align 4, !dbg !11450
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11452

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11424, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 4096, metadata !11425, metadata !DIExpression()), !dbg !11427
  br label %31, !dbg !11453

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11424, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 0, metadata !11425, metadata !DIExpression()), !dbg !11427
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11456
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11456
  call void @llvm.dbg.value(metadata i32 %33, metadata !11425, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 %32, metadata !11424, metadata !DIExpression()), !dbg !11427
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11457
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11458
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11459
  %36 = load i8, i8* %35, align 4, !dbg !11459, !range !7137
  %37 = icmp eq i8 %36, 0, !dbg !11459
  br i1 %37, label %39, label %38, !dbg !11461

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11462
  br label %39, !dbg !11464

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11465
  %41 = load i32, i32* %40, align 4, !dbg !11465
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11466
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11467
  %43 = load i8, i8* %42, align 4, !dbg !11467, !range !7137
  %44 = icmp eq i8 %43, 0, !dbg !11467
  br i1 %44, label %47, label %45, !dbg !11469

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11470
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11472
  br label %47, !dbg !11473

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11474
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11475
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11476
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11476
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11477
  br label %51, !dbg !11478

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11427
  ret i32 %52, !dbg !11479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11482, metadata !DIExpression()), !dbg !11486
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11487
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11487
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11487
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11483, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11484, metadata !DIExpression()), !dbg !11486
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11488
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11489
  ret void, !dbg !11490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.85(%struct.device* noundef %0) unnamed_addr #1 !dbg !11491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11495, metadata !DIExpression()), !dbg !11496
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11497, !srcloc !11499
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.87(%struct.device* noundef %0) #26, !dbg !11500
  ret i1 %2, !dbg !11501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.86(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11504, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i8* %1, metadata !11505, metadata !DIExpression()), !dbg !11507
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11508
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11508
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11508
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11506, metadata !DIExpression()), !dbg !11507
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11509
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11509
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11510
  ret i32 %8, !dbg !11511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11512 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11516, metadata !DIExpression()), !dbg !11520
  call void @llvm.dbg.value(metadata i8 0, metadata !11517, metadata !DIExpression()), !dbg !11520
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11521
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11521
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11519, metadata !DIExpression(DW_OP_deref)), !dbg !11520
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11522
  call void @llvm.dbg.value(metadata i32 %4, metadata !11518, metadata !DIExpression()), !dbg !11520
  %5 = icmp slt i32 %4, 0, !dbg !11523
  br i1 %5, label %9, label %6, !dbg !11525

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11526
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11519, metadata !DIExpression()), !dbg !11520
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11527
  br label %9, !dbg !11528

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11520
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11529
  ret i32 %10, !dbg !11529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11530 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11532, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i32 12, metadata !11533, metadata !DIExpression()), !dbg !11534
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11535
  %3 = load volatile i32, i32* %2, align 4, !dbg !11535
  %4 = or i32 %3, 12, !dbg !11535
  store volatile i32 %4, i32* %2, align 4, !dbg !11535
  ret void, !dbg !11536
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11537 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11539, metadata !DIExpression()), !dbg !11543
  call void @llvm.dbg.value(metadata i32 %1, metadata !11540, metadata !DIExpression()), !dbg !11543
  call void @llvm.dbg.value(metadata i32 %2, metadata !11541, metadata !DIExpression()), !dbg !11543
  call void @llvm.dbg.value(metadata i32 0, metadata !11542, metadata !DIExpression()), !dbg !11543
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11544
  %5 = load volatile i32, i32* %4, align 4, !dbg !11544
  %6 = and i32 %5, -5633, !dbg !11544
  %7 = or i32 %2, %1, !dbg !11544
  %8 = or i32 %7, %6, !dbg !11544
  store volatile i32 %8, i32* %4, align 4, !dbg !11544
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11545
  %10 = load volatile i32, i32* %9, align 4, !dbg !11545
  %11 = and i32 %10, -12289, !dbg !11545
  store volatile i32 %11, i32* %9, align 4, !dbg !11545
  ret void, !dbg !11546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11547 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11549, metadata !DIExpression()), !dbg !11550
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11551
  %3 = load volatile i32, i32* %2, align 4, !dbg !11551
  %4 = or i32 %3, 8, !dbg !11551
  store volatile i32 %4, i32* %2, align 4, !dbg !11551
  ret void, !dbg !11552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11553 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11557, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11558, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i32 0, metadata !11559, metadata !DIExpression()), !dbg !11560
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11561
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11561
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11562
  %5 = load i8, i8* %4, align 4, !dbg !11562
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11563
  ret i32 %6, !dbg !11564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.87(%struct.device* noundef %0) unnamed_addr #1 !dbg !11565 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11567, metadata !DIExpression()), !dbg !11568
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11569
  ret i1 %2, !dbg !11570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11573, metadata !DIExpression()), !dbg !11574
  tail call fastcc void @__NVIC_SetPriority.89() #26, !dbg !11575
  store i32 3199, i32* @last_load, align 4, !dbg !11576
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11577
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11578
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11579
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11580
  %3 = or i32 %2, 7, !dbg !11580
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11580
  ret i32 0, !dbg !11581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.89() unnamed_addr #16 !dbg !11582 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11584, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i32 1, metadata !11585, metadata !DIExpression()), !dbg !11586
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11587
  ret void, !dbg !11590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11591 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11593, metadata !DIExpression()), !dbg !11595
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11596
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11597
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11598
  %5 = add i32 %4, %3, !dbg !11598
  store i32 %5, i32* @cycle_count, align 4, !dbg !11598
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11599
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11600
  %7 = sub i32 %5, %6, !dbg !11603
  %8 = udiv i32 %7, 3200, !dbg !11604
  call void @llvm.dbg.value(metadata i32 %8, metadata !11594, metadata !DIExpression()), !dbg !11595
  %9 = mul nuw i32 %8, 3200, !dbg !11605
  %10 = add i32 %9, %6, !dbg !11606
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11606
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11607
  tail call void @z_arm_int_exit() #25, !dbg !11608
  ret void, !dbg !11609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11610 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %1, metadata !11612, metadata !DIExpression()), !dbg !11616
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11617
  call void @llvm.dbg.value(metadata i32 %2, metadata !11613, metadata !DIExpression()), !dbg !11616
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11618
  call void @llvm.dbg.value(metadata i32 %3, metadata !11614, metadata !DIExpression()), !dbg !11616
  %4 = and i32 %2, 65536, !dbg !11619
  %5 = icmp ne i32 %4, 0, !dbg !11619
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11621
  %8 = load i32, i32* @last_load, align 4, !dbg !11616
  br i1 %7, label %9, label %13, !dbg !11621

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11622
  %11 = add i32 %10, %8, !dbg !11622
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11622
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11624
  br label %13, !dbg !11625

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11626
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11627
  %16 = add i32 %14, %15, !dbg !11628
  ret i32 %16, !dbg !11629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11634, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.value(metadata i1 %1, metadata !11635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11647
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11648
  br i1 %4, label %5, label %8, !dbg !11648

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11650
  %7 = and i32 %6, -2, !dbg !11650
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11650
  store i32 -16777216, i32* @last_load, align 4, !dbg !11652
  br label %54, !dbg !11653

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %9, metadata !11639, metadata !DIExpression()), !dbg !11647
  br i1 %3, label %18, label %10, !dbg !11655

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()), !dbg !11647
  %12 = icmp slt i32 %11, 1, !dbg !11656
  br i1 %12, label %18, label %13, !dbg !11656

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !11656
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !11656
  %16 = mul nuw nsw i32 %15, 3200, !dbg !11656
  %17 = add nuw nsw i32 %16, 3199, !dbg !11656
  br label %18, !dbg !11656

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11657, metadata !DIExpression()) #24, !dbg !11664
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11666, !srcloc !11672
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11666
  call void @llvm.dbg.value(metadata i32 %21, metadata !11669, metadata !DIExpression()) #24, !dbg !11673
  call void @llvm.dbg.value(metadata i32 undef, metadata !11670, metadata !DIExpression()) #24, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %21, metadata !11663, metadata !DIExpression()) #24, !dbg !11664
  call void @llvm.dbg.value(metadata i32 %21, metadata !11640, metadata !DIExpression()), !dbg !11647
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %22, metadata !11645, metadata !DIExpression()), !dbg !11647
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11675
  call void @llvm.dbg.value(metadata i32 %23, metadata !11637, metadata !DIExpression()), !dbg !11647
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11676
  %25 = add i32 %24, %22, !dbg !11676
  store i32 %25, i32* @cycle_count, align 4, !dbg !11676
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11677
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11678
  %27 = sub i32 %25, %26, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %27, metadata !11646, metadata !DIExpression()), !dbg !11647
  %28 = icmp slt i32 %27, 0, !dbg !11680
  br i1 %28, label %38, label %29, !dbg !11682

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11636, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.value(metadata i32 undef, metadata !11636, metadata !DIExpression()), !dbg !11647
  %30 = add nuw i32 %19, %27, !dbg !11683
  %31 = urem i32 %30, 3200, !dbg !11685
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11647
  %32 = sub nuw nsw i32 %19, %31, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %32, metadata !11636, metadata !DIExpression()), !dbg !11647
  %33 = icmp ugt i32 %32, 1024, !dbg !11687
  br i1 %33, label %34, label %36, !dbg !11687

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11636, metadata !DIExpression()), !dbg !11647
  %35 = icmp ugt i32 %32, 16771200, !dbg !11688
  br i1 %35, label %38, label %36, !dbg !11690

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11691
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11692
  call void @llvm.dbg.value(metadata i32 %40, metadata !11638, metadata !DIExpression()), !dbg !11647
  %41 = add nsw i32 %39, -1, !dbg !11693
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11694
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11695
  %42 = icmp ult i32 %23, %40, !dbg !11696
  br i1 %42, label %43, label %48, !dbg !11698

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11699
  %45 = add i32 %23, %9, !dbg !11701
  %46 = sub i32 %45, %40, !dbg !11702
  %47 = add i32 %46, %44, !dbg !11699
  br label %52, !dbg !11703

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11704
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11706
  %51 = add i32 %49, %50, !dbg !11706
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11707
  store i32 %53, i32* @cycle_count, align 4, !dbg !11707
  call void @llvm.dbg.value(metadata i32 %21, metadata !11708, metadata !DIExpression()) #24, !dbg !11714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11713, metadata !DIExpression()) #24, !dbg !11714
  call void @llvm.dbg.value(metadata i32 %21, metadata !11716, metadata !DIExpression()) #24, !dbg !11719
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11721, !srcloc !11722
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11723
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11724 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11657, metadata !DIExpression()) #24, !dbg !11728
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11730, !srcloc !11672
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11730
  call void @llvm.dbg.value(metadata i32 %2, metadata !11669, metadata !DIExpression()) #24, !dbg !11732
  call void @llvm.dbg.value(metadata i32 undef, metadata !11670, metadata !DIExpression()) #24, !dbg !11732
  call void @llvm.dbg.value(metadata i32 %2, metadata !11663, metadata !DIExpression()) #24, !dbg !11728
  call void @llvm.dbg.value(metadata i32 %2, metadata !11726, metadata !DIExpression()), !dbg !11733
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11734
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11735
  %5 = add i32 %4, %3, !dbg !11736
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11737
  %7 = sub i32 %5, %6, !dbg !11738
  call void @llvm.dbg.value(metadata i32 %7, metadata !11727, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %2, metadata !11708, metadata !DIExpression()) #24, !dbg !11739
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11713, metadata !DIExpression()) #24, !dbg !11739
  call void @llvm.dbg.value(metadata i32 %2, metadata !11716, metadata !DIExpression()) #24, !dbg !11741
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11743, !srcloc !11722
  %8 = udiv i32 %7, 3200, !dbg !11744
  ret i32 %8, !dbg !11745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11746 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11657, metadata !DIExpression()) #24, !dbg !11750
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11752, !srcloc !11672
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11752
  call void @llvm.dbg.value(metadata i32 %2, metadata !11669, metadata !DIExpression()) #24, !dbg !11754
  call void @llvm.dbg.value(metadata i32 undef, metadata !11670, metadata !DIExpression()) #24, !dbg !11754
  call void @llvm.dbg.value(metadata i32 %2, metadata !11663, metadata !DIExpression()) #24, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %2, metadata !11748, metadata !DIExpression()), !dbg !11755
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11756
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11757
  %5 = add i32 %4, %3, !dbg !11758
  call void @llvm.dbg.value(metadata i32 %5, metadata !11749, metadata !DIExpression()), !dbg !11755
  call void @llvm.dbg.value(metadata i32 %2, metadata !11708, metadata !DIExpression()) #24, !dbg !11759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11713, metadata !DIExpression()) #24, !dbg !11759
  call void @llvm.dbg.value(metadata i32 %2, metadata !11716, metadata !DIExpression()) #24, !dbg !11761
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11763, !srcloc !11722
  ret i32 %5, !dbg !11764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !11765 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11766
  %2 = icmp eq i32 %1, -16777216, !dbg !11768
  br i1 %2, label %3, label %6, !dbg !11769

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11770
  %5 = or i32 %4, 1, !dbg !11770
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11770
  br label %6, !dbg !11772

6:                                                ; preds = %3, %0
  ret void, !dbg !11773
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !11774 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11775
  %2 = and i32 %1, -2, !dbg !11775
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11775
  ret void, !dbg !11776
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11777 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11803, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i8 %1, metadata !11804, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11805, metadata !DIExpression()), !dbg !11806
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11807
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11807
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11806
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11808
  %8 = load i8, i8* %6, align 4, !dbg !11809
  %9 = zext i8 %8 to i32, !dbg !11810
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11810
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11811
  br i1 %11, label %18, label %24, !dbg !11812

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11806
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11808
  %14 = load i8, i8* %6, align 4, !dbg !11809
  %15 = zext i8 %14 to i32, !dbg !11810
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11810
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11811
  br i1 %17, label %18, label %24, !dbg !11812, !llvm.loop !11813

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11815
  %21 = load i8, i8* %20, align 1, !dbg !11815
  %22 = icmp eq i8 %21, %1, !dbg !11818
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11819
  br i1 %22, label %24, label %12, !dbg !11820

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11806
  ret i32 %25, !dbg !11821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11822 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11833, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i8 %1, metadata !11834, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i32 %2, metadata !11835, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i32 0, metadata !11838, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i32 0, metadata !11839, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i8 0, metadata !11840, metadata !DIExpression()), !dbg !11850
  %4 = icmp eq i8 %1, 0, !dbg !11851
  br i1 %4, label %35, label %5, !dbg !11852

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11851
  br label %9, !dbg !11852

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11840, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.value(metadata i32 %29, metadata !11838, metadata !DIExpression()), !dbg !11849
  %8 = icmp eq i32 %34, %6, !dbg !11851
  br i1 %8, label %35, label %9, !dbg !11852, !llvm.loop !11853

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11840, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.value(metadata i32 %11, metadata !11838, metadata !DIExpression()), !dbg !11849
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11855
  %13 = load i32, i32* %12, align 4, !dbg !11855
  call void @llvm.dbg.value(metadata i32 %13, metadata !11837, metadata !DIExpression()), !dbg !11849
  %14 = and i32 %13, 31, !dbg !11856
  %15 = icmp ult i32 %14, 16, !dbg !11857
  br i1 %15, label %16, label %20, !dbg !11858

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11859
  %18 = load i32, i32* %17, align 4, !dbg !11859
  %19 = or i32 %18, 32, !dbg !11861
  call void @llvm.dbg.value(metadata i32 %19, metadata !11838, metadata !DIExpression()), !dbg !11849
  br label %28, !dbg !11862

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11863

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11864
  %23 = load i32, i32* %22, align 4, !dbg !11864
  call void @llvm.dbg.value(metadata i32 %23, metadata !11842, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11865
  %24 = lshr i32 %23, 7, !dbg !11866
  %25 = and i32 %24, 16, !dbg !11866
  %26 = or i32 %25, %23, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %26, metadata !11838, metadata !DIExpression()), !dbg !11849
  br label %28, !dbg !11867

27:                                               ; preds = %20
  br label %28, !dbg !11868

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11849
  call void @llvm.dbg.value(metadata i32 %29, metadata !11838, metadata !DIExpression()), !dbg !11849
  %30 = lshr i32 %13, 5, !dbg !11868
  %31 = and i32 %30, 255, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %31, metadata !11836, metadata !DIExpression()), !dbg !11849
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %32, metadata !11839, metadata !DIExpression()), !dbg !11849
  %33 = icmp slt i32 %32, 0, !dbg !11870
  %34 = add nuw nsw i32 %10, 1, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %34, metadata !11840, metadata !DIExpression()), !dbg !11850
  br i1 %33, label %35, label %7, !dbg !11873

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11879, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11880, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i32 %2, metadata !11881, metadata !DIExpression()), !dbg !11883
  %4 = icmp ugt i32 %0, 175, !dbg !11884
  br i1 %4, label %17, label %5, !dbg !11886

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11887
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11888
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11888
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11882, metadata !DIExpression()), !dbg !11883
  %9 = lshr i32 1888, %6, !dbg !11889
  %10 = and i32 %9, 1, !dbg !11889
  %11 = icmp eq i32 %10, 0, !dbg !11889
  br i1 %11, label %12, label %17, !dbg !11891

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.94(%struct.device* noundef %8) #26, !dbg !11892
  br i1 %13, label %14, label %17, !dbg !11893

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !11894
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !11895
  br label %17, !dbg !11896

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !11883
  ret i32 %18, !dbg !11897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.94(%struct.device* noundef %0) unnamed_addr #1 !dbg !11898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11902, metadata !DIExpression()), !dbg !11903
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11904, !srcloc !11906
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.95(%struct.device* noundef %0) #26, !dbg !11907
  ret i1 %2, !dbg !11908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.95(%struct.device* noundef %0) unnamed_addr #1 !dbg !11909 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11911, metadata !DIExpression()), !dbg !11912
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11913
  ret i1 %2, !dbg !11914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11915 {
  ret void, !dbg !11916
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !11917 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11919, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11920, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11921, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11923, metadata !DIExpression()), !dbg !11924
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11925
  call void @llvm.dbg.value(metadata i32 %1, metadata !11919, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !11924
  %2 = lshr i32 %1, 2, !dbg !11926
  %3 = and i32 %2, 3, !dbg !11926
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !11926

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11927
  %6 = lshr i32 %5, 13, !dbg !11929
  %7 = and i32 %6, 7, !dbg !11929
  call void @llvm.dbg.value(metadata i32 %7, metadata !11923, metadata !DIExpression()), !dbg !11924
  %8 = shl nuw nsw i32 65536, %7, !dbg !11930
  br label %31, !dbg !11931

9:                                                ; preds = %0
  br label %31, !dbg !11932

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11933
  call void @llvm.dbg.value(metadata i32 %11, metadata !11920, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !11924
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11934
  call void @llvm.dbg.value(metadata i32 %12, metadata !11921, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !11924
  %13 = lshr i32 %11, 18, !dbg !11935
  %14 = and i32 %13, 15, !dbg !11935
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !11936
  %16 = load i8, i8* %15, align 1, !dbg !11936
  %17 = zext i8 %16 to i32, !dbg !11936
  call void @llvm.dbg.value(metadata i32 %17, metadata !11920, metadata !DIExpression()), !dbg !11924
  %18 = lshr i32 %12, 22, !dbg !11937
  %19 = and i32 %18, 3, !dbg !11937
  %20 = add nuw nsw i32 %19, 1, !dbg !11938
  call void @llvm.dbg.value(metadata i32 %20, metadata !11921, metadata !DIExpression()), !dbg !11924
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11939
  %22 = and i32 %21, 65536, !dbg !11940
  call void @llvm.dbg.value(metadata i32 %22, metadata !11922, metadata !DIExpression()), !dbg !11924
  %23 = icmp eq i32 %22, 0, !dbg !11941
  br i1 %23, label %24, label %27, !dbg !11943

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !11944
  %26 = udiv i32 %25, %20, !dbg !11946
  br label %31, !dbg !11947

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !11948
  %29 = udiv i32 %28, %20, !dbg !11950
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !11951
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11952
  %34 = lshr i32 %33, 4, !dbg !11953
  %35 = and i32 %34, 15, !dbg !11953
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !11954
  %37 = load i8, i8* %36, align 1, !dbg !11954
  %38 = zext i8 %37 to i32, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %38, metadata !11919, metadata !DIExpression()), !dbg !11924
  %39 = lshr i32 %32, %38, !dbg !11955
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !11955
  ret void, !dbg !11956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11957 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11965
  %2 = and i32 %1, 16711935, !dbg !11965
  %3 = or i32 %2, 45056, !dbg !11965
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11965
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11966
  %5 = or i32 %4, 256, !dbg !11966
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11966
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %6, metadata !11963, metadata !DIExpression()), !dbg !11968
  br label %7, !dbg !11969

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11970
  %9 = and i32 %8, 512, !dbg !11970
  %10 = icmp eq i32 %9, 0, !dbg !11971
  br i1 %10, label %11, label %15, !dbg !11969

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !11972
  %13 = sub i32 %12, %6, !dbg !11975
  %14 = icmp ugt i32 %13, 2, !dbg !11976
  br i1 %14, label %47, label %7, !dbg !11977, !llvm.loop !11978

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11980
  %17 = and i32 %16, -4, !dbg !11980
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11980
  br label %18, !dbg !11981

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11982
  %20 = and i32 %19, 12, !dbg !11982
  %21 = icmp eq i32 %20, 0, !dbg !11983
  br i1 %21, label %26, label %22, !dbg !11981

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !11984
  %24 = sub i32 %23, %6, !dbg !11987
  %25 = icmp ugt i32 %24, 5000, !dbg !11988
  br i1 %25, label %47, label %18, !dbg !11989, !llvm.loop !11990

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !11992
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !11993
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %28, metadata !11964, metadata !DIExpression()), !dbg !11968
  %29 = icmp eq i32 %28, 0, !dbg !11995
  br i1 %29, label %30, label %47, !dbg !11997

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11998
  %32 = and i32 %31, -285278210, !dbg !11998
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11998
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11999
  %34 = and i32 %33, -262145, !dbg !11999
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11999
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !12000
  call void @llvm.dbg.value(metadata i32 %35, metadata !11963, metadata !DIExpression()), !dbg !11968
  br label %36, !dbg !12001

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12002
  %38 = and i32 %37, 33554432, !dbg !12002
  %39 = icmp eq i32 %38, 0, !dbg !12003
  br i1 %39, label %44, label %40, !dbg !12001

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !12004
  %42 = sub i32 %41, %35, !dbg !12007
  %43 = icmp ugt i32 %42, 2, !dbg !12008
  br i1 %43, label %47, label %36, !dbg !12009, !llvm.loop !12010

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12012
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12013
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12014
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12015
  %46 = or i32 %45, 16777216, !dbg !12015
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12015
  br label %47, !dbg !12016

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !11968
  ret i32 %48, !dbg !12017
}

; Function Attrs: optsize
declare !dbg !12018 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12020 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12023 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12049, metadata !DIExpression()), !dbg !12062
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12063
  br i1 %3, label %385, label %4, !dbg !12065

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12066
  %6 = and i32 %5, 12, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %6, metadata !12052, metadata !DIExpression()), !dbg !12062
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12067
  %8 = and i32 %7, 65536, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %8, metadata !12053, metadata !DIExpression()), !dbg !12062
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12068
  %10 = load i32, i32* %9, align 4, !dbg !12068
  %11 = and i32 %10, 1, !dbg !12070
  %12 = icmp eq i32 %11, 0, !dbg !12071
  br i1 %12, label %69, label %13, !dbg !12072

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !12073
  br i1 %14, label %19, label %15, !dbg !12076

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !12077
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !12078
  br i1 %18, label %19, label %27, !dbg !12078

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12079
  %21 = and i32 %20, 131072, !dbg !12079
  %22 = icmp eq i32 %21, 0, !dbg !12082
  br i1 %22, label %69, label %23, !dbg !12083

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12084
  %25 = load i32, i32* %24, align 4, !dbg !12084
  %26 = icmp eq i32 %25, 0, !dbg !12085
  br i1 %26, label %385, label %69, !dbg !12086

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12087
  %29 = load i32, i32* %28, align 4, !dbg !12087
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !12091

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12092
  %32 = or i32 %31, 65536, !dbg !12092
  br label %48, !dbg !12092

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12094
  %35 = and i32 %34, -65537, !dbg !12094
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12094
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12094
  %37 = and i32 %36, -262145, !dbg !12094
  br label %48, !dbg !12094

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12097
  %40 = or i32 %39, 262144, !dbg !12097
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12097
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12097
  %42 = or i32 %41, 65536, !dbg !12097
  br label %48, !dbg !12097

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12100
  %45 = and i32 %44, -65537, !dbg !12100
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12100
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12100
  %47 = and i32 %46, -262145, !dbg !12100
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12102
  %50 = load i32, i32* %28, align 4, !dbg !12103
  %51 = icmp eq i32 %50, 0, !dbg !12105
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %52, metadata !12050, metadata !DIExpression()), !dbg !12062
  call void @llvm.dbg.value(metadata i32 %52, metadata !12050, metadata !DIExpression()), !dbg !12062
  br i1 %51, label %61, label %53, !dbg !12107

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12108
  %55 = and i32 %54, 131072, !dbg !12108
  %56 = icmp eq i32 %55, 0, !dbg !12110
  br i1 %56, label %57, label %69, !dbg !12111

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !12112
  %59 = sub i32 %58, %52, !dbg !12115
  %60 = icmp ugt i32 %59, 100, !dbg !12116
  br i1 %60, label %385, label %53, !dbg !12117, !llvm.loop !12118

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12120
  %63 = and i32 %62, 131072, !dbg !12120
  %64 = icmp eq i32 %63, 0, !dbg !12122
  br i1 %64, label %69, label %65, !dbg !12123

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12124
  %67 = sub i32 %66, %52, !dbg !12127
  %68 = icmp ugt i32 %67, 100, !dbg !12128
  br i1 %68, label %385, label %61, !dbg !12129, !llvm.loop !12130

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !12132
  %71 = and i32 %70, 2, !dbg !12134
  %72 = icmp eq i32 %71, 0, !dbg !12135
  br i1 %72, label %118, label %73, !dbg !12136

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !12137
  br i1 %74, label %79, label %75, !dbg !12140

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !12141
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !12142
  br i1 %78, label %79, label %87, !dbg !12142

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12143
  %81 = and i32 %80, 2, !dbg !12143
  %82 = icmp eq i32 %81, 0, !dbg !12146
  br i1 %82, label %111, label %83, !dbg !12147

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12148
  %85 = load i32, i32* %84, align 4, !dbg !12148
  %86 = icmp eq i32 %85, 1, !dbg !12149
  br i1 %86, label %111, label %385, !dbg !12150

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12151
  %89 = load i32, i32* %88, align 4, !dbg !12151
  %90 = icmp eq i32 %89, 0, !dbg !12154
  br i1 %90, label %101, label %91, !dbg !12155

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12156
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %92, metadata !12050, metadata !DIExpression()), !dbg !12062
  br label %93, !dbg !12159

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12160
  %95 = and i32 %94, 2, !dbg !12160
  %96 = icmp eq i32 %95, 0, !dbg !12161
  br i1 %96, label %97, label %111, !dbg !12159

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !12162
  %99 = sub i32 %98, %92, !dbg !12165
  %100 = icmp ugt i32 %99, 2, !dbg !12166
  br i1 %100, label %385, label %93, !dbg !12167, !llvm.loop !12168

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12170
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %102, metadata !12050, metadata !DIExpression()), !dbg !12062
  br label %103, !dbg !12173

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12174
  %105 = and i32 %104, 2, !dbg !12174
  %106 = icmp eq i32 %105, 0, !dbg !12175
  br i1 %106, label %118, label %107, !dbg !12173

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !12176
  %109 = sub i32 %108, %102, !dbg !12179
  %110 = icmp ugt i32 %109, 2, !dbg !12180
  br i1 %110, label %385, label %103, !dbg !12181, !llvm.loop !12182

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12184
  %113 = and i32 %112, -7937, !dbg !12184
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12184
  %115 = load i32, i32* %114, align 4, !dbg !12184
  %116 = shl i32 %115, 8, !dbg !12184
  %117 = or i32 %116, %113, !dbg !12184
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12184
  br label %118, !dbg !12185

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !12185
  %120 = and i32 %119, 16, !dbg !12187
  %121 = icmp eq i32 %120, 0, !dbg !12188
  br i1 %121, label %215, label %122, !dbg !12189

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !12190
  br i1 %123, label %124, label %179, !dbg !12193

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12194
  %126 = and i32 %125, 512, !dbg !12194
  %127 = icmp eq i32 %126, 0, !dbg !12197
  br i1 %127, label %132, label %128, !dbg !12198

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12199
  %130 = load i32, i32* %129, align 4, !dbg !12199
  %131 = icmp eq i32 %130, 0, !dbg !12200
  br i1 %131, label %385, label %132, !dbg !12201

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12202
  %134 = load i32, i32* %133, align 4, !dbg !12202
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12205
  %136 = and i32 %135, 57344, !dbg !12205
  %137 = icmp ugt i32 %134, %136, !dbg !12206
  br i1 %137, label %138, label %152, !dbg !12207

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #26, !dbg !12208
  %140 = icmp eq i32 %139, 0, !dbg !12211
  br i1 %140, label %141, label %385, !dbg !12212

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12213
  %143 = and i32 %142, -57345, !dbg !12213
  %144 = load i32, i32* %133, align 4, !dbg !12213
  %145 = or i32 %143, %144, !dbg !12213
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12213
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12214
  %147 = and i32 %146, 16777215, !dbg !12214
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12214
  %149 = load i32, i32* %148, align 4, !dbg !12214
  %150 = shl i32 %149, 24, !dbg !12214
  %151 = or i32 %150, %147, !dbg !12214
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12214
  br label %165, !dbg !12215

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12216
  %154 = and i32 %153, -57345, !dbg !12216
  %155 = or i32 %154, %134, !dbg !12216
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12216
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12218
  %157 = and i32 %156, 16777215, !dbg !12218
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12218
  %159 = load i32, i32* %158, align 4, !dbg !12218
  %160 = shl i32 %159, 24, !dbg !12218
  %161 = or i32 %160, %157, !dbg !12218
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12218
  %162 = load i32, i32* %133, align 4, !dbg !12219
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #26, !dbg !12221
  %164 = icmp eq i32 %163, 0, !dbg !12222
  br i1 %164, label %165, label %385, !dbg !12223

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !12224
  %167 = lshr i32 %166, 13, !dbg !12225
  %168 = shl i32 65536, %167, !dbg !12226
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12227
  %170 = lshr i32 %169, 4, !dbg !12228
  %171 = and i32 %170, 15, !dbg !12228
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !12229
  %173 = load i8, i8* %172, align 1, !dbg !12229
  %174 = zext i8 %173 to i32, !dbg !12229
  %175 = lshr i32 %168, %174, !dbg !12230
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !12231
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !12232
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !12233
  call void @llvm.dbg.value(metadata i32 %177, metadata !12051, metadata !DIExpression()), !dbg !12062
  %178 = icmp eq i32 %177, 0, !dbg !12234
  br i1 %178, label %215, label %385, !dbg !12236

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12237
  %181 = load i32, i32* %180, align 4, !dbg !12237
  %182 = icmp eq i32 %181, 0, !dbg !12240
  br i1 %182, label %205, label %183, !dbg !12241

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12242
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !12244
  call void @llvm.dbg.value(metadata i32 %184, metadata !12050, metadata !DIExpression()), !dbg !12062
  br label %185, !dbg !12245

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12246
  %187 = and i32 %186, 512, !dbg !12246
  %188 = icmp eq i32 %187, 0, !dbg !12247
  br i1 %188, label %189, label %193, !dbg !12245

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !12248
  %191 = sub i32 %190, %184, !dbg !12251
  %192 = icmp ugt i32 %191, 2, !dbg !12252
  br i1 %192, label %385, label %185, !dbg !12253, !llvm.loop !12254

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12256
  %195 = and i32 %194, -57345, !dbg !12256
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12256
  %197 = load i32, i32* %196, align 4, !dbg !12256
  %198 = or i32 %195, %197, !dbg !12256
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12256
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12257
  %200 = and i32 %199, 16777215, !dbg !12257
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12257
  %202 = load i32, i32* %201, align 4, !dbg !12257
  %203 = shl i32 %202, 24, !dbg !12257
  %204 = or i32 %203, %200, !dbg !12257
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12257
  br label %215, !dbg !12258

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12259
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12261
  call void @llvm.dbg.value(metadata i32 %206, metadata !12050, metadata !DIExpression()), !dbg !12062
  br label %207, !dbg !12262

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12263
  %209 = and i32 %208, 512, !dbg !12263
  %210 = icmp eq i32 %209, 0, !dbg !12264
  br i1 %210, label %215, label %211, !dbg !12262

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !12265
  %213 = sub i32 %212, %206, !dbg !12268
  %214 = icmp ugt i32 %213, 2, !dbg !12269
  br i1 %214, label %385, label %207, !dbg !12270, !llvm.loop !12271

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !12273
  %217 = and i32 %216, 8, !dbg !12275
  %218 = icmp eq i32 %217, 0, !dbg !12276
  br i1 %218, label %243, label %219, !dbg !12277

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12278
  %221 = load i32, i32* %220, align 4, !dbg !12278
  %222 = icmp eq i32 %221, 0, !dbg !12281
  br i1 %222, label %233, label %223, !dbg !12282

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12283
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %224, metadata !12050, metadata !DIExpression()), !dbg !12062
  br label %225, !dbg !12286

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12287
  %227 = and i32 %226, 2, !dbg !12287
  %228 = icmp eq i32 %227, 0, !dbg !12288
  br i1 %228, label %229, label %243, !dbg !12286

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !12289
  %231 = sub i32 %230, %224, !dbg !12292
  %232 = icmp ugt i32 %231, 2, !dbg !12293
  br i1 %232, label %385, label %225, !dbg !12294, !llvm.loop !12295

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12297
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !12299
  call void @llvm.dbg.value(metadata i32 %234, metadata !12050, metadata !DIExpression()), !dbg !12062
  br label %235, !dbg !12300

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12301
  %237 = and i32 %236, 2, !dbg !12301
  %238 = icmp eq i32 %237, 0, !dbg !12302
  br i1 %238, label %243, label %239, !dbg !12300

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !12303
  %241 = sub i32 %240, %234, !dbg !12306
  %242 = icmp ugt i32 %241, 2, !dbg !12307
  br i1 %242, label %385, label %235, !dbg !12308, !llvm.loop !12309

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !12311
  %245 = and i32 %244, 4, !dbg !12312
  %246 = icmp eq i32 %245, 0, !dbg !12313
  br i1 %246, label %320, label %247, !dbg !12314

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !12054, metadata !DIExpression()), !dbg !12315
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12316
  %249 = and i32 %248, 268435456, !dbg !12316
  %250 = icmp eq i32 %249, 0, !dbg !12316
  br i1 %250, label %251, label %258, !dbg !12317

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !12318
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !12318
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12058, metadata !DIExpression()), !dbg !12318
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12318
  %254 = or i32 %253, 268435456, !dbg !12318
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12318
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12318
  %256 = and i32 %255, 268435456, !dbg !12318
  store volatile i32 %256, i32* %2, align 4, !dbg !12318
  %257 = load volatile i32, i32* %2, align 4, !dbg !12318
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !12319
  call void @llvm.dbg.value(metadata i32 1, metadata !12054, metadata !DIExpression()), !dbg !12315
  br label %258, !dbg !12320

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12054, metadata !DIExpression()), !dbg !12315
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12321
  %260 = and i32 %259, 256, !dbg !12321
  %261 = icmp eq i32 %260, 0, !dbg !12321
  br i1 %261, label %262, label %274, !dbg !12323

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12324
  %264 = or i32 %263, 256, !dbg !12324
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12324
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !12326
  call void @llvm.dbg.value(metadata i32 %265, metadata !12050, metadata !DIExpression()), !dbg !12062
  br label %266, !dbg !12327

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12328
  %268 = and i32 %267, 256, !dbg !12328
  %269 = icmp eq i32 %268, 0, !dbg !12328
  br i1 %269, label %270, label %274, !dbg !12327

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !12329
  %272 = sub i32 %271, %265, !dbg !12332
  %273 = icmp ugt i32 %272, 100, !dbg !12333
  br i1 %273, label %385, label %266, !dbg !12334, !llvm.loop !12335

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12337
  %276 = load i32, i32* %275, align 4, !dbg !12337
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !12340

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12341
  %279 = or i32 %278, 256, !dbg !12341
  br label %295, !dbg !12341

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12343
  %282 = and i32 %281, -257, !dbg !12343
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12343
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12343
  %284 = and i32 %283, -1025, !dbg !12343
  br label %295, !dbg !12343

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12346
  %287 = or i32 %286, 1024, !dbg !12346
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12346
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12346
  %289 = or i32 %288, 256, !dbg !12346
  br label %295, !dbg !12346

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12349
  %292 = and i32 %291, -257, !dbg !12349
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12349
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12349
  %294 = and i32 %293, -1025, !dbg !12349
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12351
  %297 = load i32, i32* %275, align 4, !dbg !12352
  %298 = icmp eq i32 %297, 0, !dbg !12354
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !12355
  call void @llvm.dbg.value(metadata i32 %299, metadata !12050, metadata !DIExpression()), !dbg !12062
  call void @llvm.dbg.value(metadata i32 %299, metadata !12050, metadata !DIExpression()), !dbg !12062
  br i1 %298, label %308, label %300, !dbg !12356

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12357
  %302 = and i32 %301, 512, !dbg !12357
  %303 = icmp eq i32 %302, 0, !dbg !12359
  br i1 %303, label %304, label %316, !dbg !12360

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !12361
  %306 = sub i32 %305, %299, !dbg !12364
  %307 = icmp ugt i32 %306, 5000, !dbg !12365
  br i1 %307, label %385, label %300, !dbg !12366, !llvm.loop !12367

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12369
  %310 = and i32 %309, 512, !dbg !12369
  %311 = icmp eq i32 %310, 0, !dbg !12371
  br i1 %311, label %316, label %312, !dbg !12372

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !12373
  %314 = sub i32 %313, %299, !dbg !12376
  %315 = icmp ugt i32 %314, 5000, !dbg !12377
  br i1 %315, label %385, label %308, !dbg !12378, !llvm.loop !12379

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !12381

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12382
  %319 = and i32 %318, -268435457, !dbg !12382
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12382
  br label %320, !dbg !12385

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12386
  %322 = load i32, i32* %321, align 4, !dbg !12386
  %323 = icmp eq i32 %322, 0, !dbg !12388
  br i1 %323, label %384, label %324, !dbg !12389

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !12390
  br i1 %325, label %366, label %326, !dbg !12393

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !12394
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12397
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !12397
  call void @llvm.dbg.value(metadata i32 %328, metadata !12050, metadata !DIExpression()), !dbg !12062
  call void @llvm.dbg.value(metadata i32 %328, metadata !12050, metadata !DIExpression()), !dbg !12062
  br i1 %327, label %329, label %358, !dbg !12398

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12399
  %331 = and i32 %330, 33554432, !dbg !12399
  %332 = icmp eq i32 %331, 0, !dbg !12401
  br i1 %332, label %337, label %333, !dbg !12402

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !12403
  %335 = sub i32 %334, %328, !dbg !12406
  %336 = icmp ugt i32 %335, 2, !dbg !12407
  br i1 %336, label %385, label %329, !dbg !12408, !llvm.loop !12409

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12411
  %339 = and i32 %338, -16580609, !dbg !12411
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12411
  %341 = load i32, i32* %340, align 4, !dbg !12411
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12411
  %343 = load i32, i32* %342, align 4, !dbg !12411
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12411
  %345 = load i32, i32* %344, align 4, !dbg !12411
  %346 = or i32 %339, %341, !dbg !12411
  %347 = or i32 %346, %343, !dbg !12411
  %348 = or i32 %347, %345, !dbg !12411
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12411
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12412
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !12413
  call void @llvm.dbg.value(metadata i32 %349, metadata !12050, metadata !DIExpression()), !dbg !12062
  br label %350, !dbg !12414

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12415
  %352 = and i32 %351, 33554432, !dbg !12415
  %353 = icmp eq i32 %352, 0, !dbg !12416
  br i1 %353, label %354, label %384, !dbg !12414

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !12417
  %356 = sub i32 %355, %349, !dbg !12420
  %357 = icmp ugt i32 %356, 2, !dbg !12421
  br i1 %357, label %385, label %350, !dbg !12422, !llvm.loop !12423

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12425
  %360 = and i32 %359, 33554432, !dbg !12425
  %361 = icmp eq i32 %360, 0, !dbg !12427
  br i1 %361, label %384, label %362, !dbg !12428

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !12429
  %364 = sub i32 %363, %328, !dbg !12432
  %365 = icmp ugt i32 %364, 2, !dbg !12433
  br i1 %365, label %385, label %358, !dbg !12434, !llvm.loop !12435

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !12437
  br i1 %367, label %385, label %368, !dbg !12440

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12441
  call void @llvm.dbg.value(metadata i32 %369, metadata !12053, metadata !DIExpression()), !dbg !12062
  %370 = and i32 %369, 65536, !dbg !12443
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12445
  %372 = load i32, i32* %371, align 4, !dbg !12445
  %373 = icmp eq i32 %370, %372, !dbg !12446
  br i1 %373, label %374, label %385, !dbg !12447

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !12448
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12449
  %377 = load i32, i32* %376, align 4, !dbg !12449
  %378 = icmp eq i32 %375, %377, !dbg !12450
  br i1 %378, label %379, label %385, !dbg !12451

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !12452
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12453
  %382 = load i32, i32* %381, align 4, !dbg !12453
  %383 = icmp eq i32 %380, %382, !dbg !12454
  br i1 %383, label %384, label %385, !dbg !12455

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !12456

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !12062
  ret i32 %386, !dbg !12457
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #15 !dbg !12458 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12460, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata i32 0, metadata !12462, metadata !DIExpression()), !dbg !12469
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12470
  %4 = and i32 %3, 240, !dbg !12470
  %5 = icmp eq i32 %4, 0, !dbg !12471
  br i1 %5, label %6, label %31, !dbg !12472

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12473
  %8 = and i32 %7, 268435456, !dbg !12473
  %9 = icmp eq i32 %8, 0, !dbg !12473
  br i1 %9, label %12, label %10, !dbg !12474

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12475
  call void @llvm.dbg.value(metadata i32 %11, metadata !12461, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12469
  br label %22, !dbg !12477

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !12478
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !12478
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12463, metadata !DIExpression()), !dbg !12478
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12478
  %15 = or i32 %14, 268435456, !dbg !12478
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12478
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12478
  %17 = and i32 %16, 268435456, !dbg !12478
  store volatile i32 %17, i32* %2, align 4, !dbg !12478
  %18 = load volatile i32, i32* %2, align 4, !dbg !12478
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !12479
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12480
  call void @llvm.dbg.value(metadata i32 %19, metadata !12461, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12469
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12481
  %21 = and i32 %20, -268435457, !dbg !12481
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12481
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !12482
  call void @llvm.dbg.value(metadata i32 %24, metadata !12461, metadata !DIExpression()), !dbg !12469
  %25 = icmp eq i32 %24, 6144, !dbg !12483
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12462, metadata !DIExpression()), !dbg !12469
  br i1 %27, label %28, label %31, !dbg !12486

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12488
  %30 = or i32 %29, 4, !dbg !12488
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12488
  br label %31, !dbg !12488

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12486
  %34 = and i32 %33, -2, !dbg !12486
  %35 = or i32 %34, %32, !dbg !12486
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12486
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12491
  %37 = and i32 %36, 1, !dbg !12491
  %38 = xor i32 %37, %32, !dbg !12469
  ret i32 %38, !dbg !12493
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12494 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12507, metadata !DIExpression()), !dbg !12511
  call void @llvm.dbg.value(metadata i32 %1, metadata !12508, metadata !DIExpression()), !dbg !12511
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12512
  br i1 %3, label %136, label %4, !dbg !12514

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12515
  %6 = and i32 %5, 1, !dbg !12515
  %7 = icmp ult i32 %6, %1, !dbg !12517
  br i1 %7, label %8, label %20, !dbg !12518

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !12519
  br i1 %9, label %10, label %13, !dbg !12523

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12524
  %12 = or i32 %11, 4, !dbg !12524
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12524
  br label %13, !dbg !12524

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12523
  %15 = and i32 %14, -2, !dbg !12523
  %16 = or i32 %15, %1, !dbg !12523
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12523
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12526
  %18 = and i32 %17, 1, !dbg !12526
  %19 = icmp eq i32 %18, %1, !dbg !12528
  br i1 %19, label %20, label %136, !dbg !12529

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12530
  %22 = load i32, i32* %21, align 4, !dbg !12530
  %23 = and i32 %22, 2, !dbg !12532
  %24 = icmp eq i32 %23, 0, !dbg !12533
  br i1 %24, label %32, label %25, !dbg !12534

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12535
  %27 = and i32 %26, -241, !dbg !12535
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12535
  %29 = load i32, i32* %28, align 4, !dbg !12535
  %30 = or i32 %27, %29, !dbg !12535
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12535
  %31 = load i32, i32* %21, align 4, !dbg !12537
  br label %32, !dbg !12539

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !12537
  %34 = and i32 %33, 1, !dbg !12540
  %35 = icmp eq i32 %34, 0, !dbg !12541
  br i1 %35, label %93, label %36, !dbg !12542

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12543
  %38 = load i32, i32* %37, align 4, !dbg !12543
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !12546

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12547
  %41 = and i32 %40, 131072, !dbg !12547
  %42 = icmp eq i32 %41, 0, !dbg !12550
  br i1 %42, label %136, label %55, !dbg !12551

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12552
  %45 = and i32 %44, 33554432, !dbg !12552
  %46 = icmp eq i32 %45, 0, !dbg !12556
  br i1 %46, label %136, label %55, !dbg !12557

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12558
  %49 = and i32 %48, 2, !dbg !12558
  %50 = icmp eq i32 %49, 0, !dbg !12562
  br i1 %50, label %136, label %55, !dbg !12563

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12564
  %53 = and i32 %52, 512, !dbg !12564
  %54 = icmp eq i32 %53, 0, !dbg !12567
  br i1 %54, label %136, label %55, !dbg !12568

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12569
  %57 = and i32 %56, -4, !dbg !12569
  %58 = or i32 %57, %38, !dbg !12569
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12569
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !12570
  call void @llvm.dbg.value(metadata i32 %59, metadata !12509, metadata !DIExpression()), !dbg !12511
  %60 = load i32, i32* %37, align 4, !dbg !12571
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !12573

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12574
  %63 = and i32 %62, 12, !dbg !12574
  %64 = icmp eq i32 %63, 8, !dbg !12576
  br i1 %64, label %93, label %65, !dbg !12577

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12578
  %67 = sub i32 %66, %59, !dbg !12581
  %68 = icmp ugt i32 %67, 5000, !dbg !12582
  br i1 %68, label %136, label %61, !dbg !12583, !llvm.loop !12584

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12586
  %71 = and i32 %70, 12, !dbg !12586
  %72 = icmp eq i32 %71, 12, !dbg !12589
  br i1 %72, label %93, label %73, !dbg !12590

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !12591
  %75 = sub i32 %74, %59, !dbg !12594
  %76 = icmp ugt i32 %75, 5000, !dbg !12595
  br i1 %76, label %136, label %69, !dbg !12596, !llvm.loop !12597

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12599
  %79 = and i32 %78, 12, !dbg !12599
  %80 = icmp eq i32 %79, 4, !dbg !12602
  br i1 %80, label %93, label %81, !dbg !12603

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12604
  %83 = sub i32 %82, %59, !dbg !12607
  %84 = icmp ugt i32 %83, 5000, !dbg !12608
  br i1 %84, label %136, label %77, !dbg !12609, !llvm.loop !12610

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12612
  %87 = and i32 %86, 12, !dbg !12612
  %88 = icmp eq i32 %87, 0, !dbg !12614
  br i1 %88, label %93, label %89, !dbg !12615

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !12616
  %91 = sub i32 %90, %59, !dbg !12619
  %92 = icmp ugt i32 %91, 5000, !dbg !12620
  br i1 %92, label %136, label %85, !dbg !12621, !llvm.loop !12622

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12624
  %95 = and i32 %94, 1, !dbg !12624
  %96 = icmp ugt i32 %95, %1, !dbg !12626
  br i1 %96, label %97, label %103, !dbg !12627

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12628
  %99 = and i32 %98, -2, !dbg !12628
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12628
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12631
  %101 = and i32 %100, 1, !dbg !12631
  %102 = icmp eq i32 %101, 0, !dbg !12633
  br i1 %102, label %103, label %136, !dbg !12634

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !12635
  %105 = and i32 %104, 4, !dbg !12637
  %106 = icmp eq i32 %105, 0, !dbg !12638
  br i1 %106, label %114, label %107, !dbg !12639

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12640
  %109 = and i32 %108, -1793, !dbg !12640
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12640
  %111 = load i32, i32* %110, align 4, !dbg !12640
  %112 = or i32 %109, %111, !dbg !12640
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12640
  %113 = load i32, i32* %21, align 4, !dbg !12642
  br label %114, !dbg !12644

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !12642
  %116 = and i32 %115, 8, !dbg !12645
  %117 = icmp eq i32 %116, 0, !dbg !12646
  br i1 %117, label %125, label %118, !dbg !12647

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12648
  %120 = and i32 %119, -14337, !dbg !12648
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12648
  %122 = load i32, i32* %121, align 4, !dbg !12648
  %123 = shl i32 %122, 3, !dbg !12648
  %124 = or i32 %123, %120, !dbg !12648
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12648
  br label %125, !dbg !12650

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12651
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12652
  %128 = lshr i32 %127, 4, !dbg !12653
  %129 = and i32 %128, 15, !dbg !12653
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !12654
  %131 = load i8, i8* %130, align 1, !dbg !12654
  %132 = zext i8 %131 to i32, !dbg !12654
  %133 = lshr i32 %126, %132, !dbg !12655
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !12656
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !12657
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !12658
  call void @llvm.dbg.value(metadata i32 %135, metadata !12510, metadata !DIExpression()), !dbg !12511
  br label %136, !dbg !12659

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !12511
  ret i32 %137, !dbg !12660
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !12661 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12669
  call void @llvm.dbg.value(metadata i32 %1, metadata !12663, metadata !DIExpression()), !dbg !12670
  %2 = lshr i32 %1, 2, !dbg !12671
  %3 = and i32 %2, 3, !dbg !12671
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !12671

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12668, metadata !DIExpression()), !dbg !12670
  br label %26, !dbg !12672

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !12675
  %7 = and i32 %6, 15, !dbg !12675
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !12677
  %9 = load i8, i8* %8, align 1, !dbg !12677
  call void @llvm.dbg.value(metadata i8 %9, metadata !12664, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12670
  %10 = lshr i32 %1, 22, !dbg !12678
  %11 = and i32 %10, 3, !dbg !12678
  %12 = add nuw nsw i32 %11, 1, !dbg !12679
  call void @llvm.dbg.value(metadata i32 %12, metadata !12665, metadata !DIExpression()), !dbg !12670
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12680
  %14 = and i32 %13, 65536, !dbg !12680
  %15 = icmp eq i32 %14, 0, !dbg !12682
  %16 = zext i8 %9 to i32, !dbg !12683
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !12683
  %18 = mul nuw i32 %17, %16, !dbg !12683
  %19 = udiv i32 %18, %12, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %19, metadata !12666, metadata !DIExpression()), !dbg !12670
  call void @llvm.dbg.value(metadata i32 %19, metadata !12668, metadata !DIExpression()), !dbg !12670
  br label %26, !dbg !12685

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12686
  %23 = lshr i32 %22, 13, !dbg !12688
  %24 = and i32 %23, 7, !dbg !12688
  call void @llvm.dbg.value(metadata i32 %24, metadata !12667, metadata !DIExpression()), !dbg !12670
  %25 = shl nuw nsw i32 65536, %24, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %25, metadata !12668, metadata !DIExpression()), !dbg !12670
  br label %26, !dbg !12690

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !12691
  call void @llvm.dbg.value(metadata i32 %27, metadata !12668, metadata !DIExpression()), !dbg !12670
  ret i32 %27, !dbg !12692
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12693 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12695, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i32 %1, metadata !12696, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i32 %2, metadata !12697, metadata !DIExpression()), !dbg !12710
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12711
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #24, !dbg !12711
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12698, metadata !DIExpression()), !dbg !12712
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12713
  store i32 2, i32* %7, align 4, !dbg !12714
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12715
  store i32 2, i32* %8, align 4, !dbg !12716
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12717
  store i32 0, i32* %9, align 4, !dbg !12718
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12719
  store i32 256, i32* %10, align 4, !dbg !12720
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12721
  store i32 0, i32* %11, align 4, !dbg !12722
  %12 = bitcast i32* %5 to i8*, !dbg !12723
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !12723
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12708, metadata !DIExpression()), !dbg !12723
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12723
  %14 = or i32 %13, 1, !dbg !12723
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12723
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12723
  %16 = and i32 %15, 1, !dbg !12723
  store volatile i32 %16, i32* %5, align 4, !dbg !12723
  %17 = load volatile i32, i32* %5, align 4, !dbg !12723
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !12724
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12725
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12726
  %19 = and i32 %18, -1996488705, !dbg !12726
  %20 = or i32 %2, %1, !dbg !12726
  %21 = or i32 %20, %19, !dbg !12726
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12726
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #24, !dbg !12727
  ret void, !dbg !12727
}

; Function Attrs: optsize
declare !dbg !12728 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !12732 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12733
  ret void, !dbg !12734
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !12735 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12736
  ret void, !dbg !12737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !12738 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12739
  ret i32 %1, !dbg !12740
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !12741 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12742
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12743
  %3 = lshr i32 %2, 8, !dbg !12744
  %4 = and i32 %3, 7, !dbg !12744
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12745
  %6 = load i8, i8* %5, align 1, !dbg !12745
  %7 = zext i8 %6 to i32, !dbg !12745
  %8 = lshr i32 %1, %7, !dbg !12746
  ret i32 %8, !dbg !12747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !12748 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12749
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12750
  %3 = lshr i32 %2, 11, !dbg !12751
  %4 = and i32 %3, 7, !dbg !12751
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12752
  %6 = load i8, i8* %5, align 1, !dbg !12752
  %7 = zext i8 %6 to i32, !dbg !12752
  %8 = lshr i32 %1, %7, !dbg !12753
  ret i32 %8, !dbg !12754
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !12755 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12759, metadata !DIExpression()), !dbg !12760
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12761
  store i32 31, i32* %2, align 4, !dbg !12762
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12763
  %4 = and i32 %3, 262144, !dbg !12765
  %5 = icmp eq i32 %4, 0, !dbg !12766
  br i1 %5, label %8, label %6, !dbg !12767

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12768
  store i32 5, i32* %7, align 4, !dbg !12770
  br label %15, !dbg !12771

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12772
  %10 = and i32 %9, 65536, !dbg !12774
  %11 = icmp eq i32 %10, 0, !dbg !12775
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12776
  br i1 %11, label %14, label %13, !dbg !12777

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !12778
  br label %15, !dbg !12780

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12781
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12783
  %17 = and i32 %16, 1, !dbg !12785
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12786
  store i32 %17, i32* %18, align 4, !dbg !12788
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12789
  %20 = lshr i32 %19, 8, !dbg !12790
  %21 = and i32 %20, 31, !dbg !12790
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12791
  store i32 %21, i32* %22, align 4, !dbg !12792
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12793
  %24 = lshr i32 %23, 8, !dbg !12795
  %25 = and i32 %24, 1, !dbg !12795
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12796
  store i32 %25, i32* %26, align 4, !dbg !12798
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12799
  %28 = lshr i32 %27, 24, !dbg !12800
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12801
  store i32 %28, i32* %29, align 4, !dbg !12802
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12803
  %31 = and i32 %30, 57344, !dbg !12804
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12805
  store i32 %31, i32* %32, align 4, !dbg !12806
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12807
  %34 = and i32 %33, 1024, !dbg !12809
  %35 = icmp eq i32 %34, 0, !dbg !12810
  br i1 %35, label %38, label %36, !dbg !12811

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12812
  store i32 5, i32* %37, align 4, !dbg !12814
  br label %45, !dbg !12815

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12816
  %40 = and i32 %39, 256, !dbg !12818
  %41 = icmp eq i32 %40, 0, !dbg !12819
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12820
  br i1 %41, label %44, label %43, !dbg !12821

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !12822
  br label %45, !dbg !12824

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !12825
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12827
  %47 = and i32 %46, 1, !dbg !12829
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12830
  store i32 %47, i32* %48, align 4, !dbg !12832
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12833
  %50 = and i32 %49, 16777216, !dbg !12835
  %51 = icmp eq i32 %50, 0, !dbg !12836
  %52 = select i1 %51, i32 1, i32 2, !dbg !12837
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12838
  store i32 %52, i32* %53, align 4, !dbg !12840
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12841
  %55 = and i32 %54, 65536, !dbg !12842
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12843
  store i32 %55, i32* %56, align 4, !dbg !12844
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12845
  %58 = and i32 %57, 3932160, !dbg !12846
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12847
  store i32 %58, i32* %59, align 4, !dbg !12848
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12849
  %61 = and i32 %60, 12582912, !dbg !12850
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12851
  store i32 %61, i32* %62, align 4, !dbg !12852
  ret void, !dbg !12853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !12854 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12858, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.value(metadata i32* %1, metadata !12859, metadata !DIExpression()), !dbg !12860
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12861
  store i32 15, i32* %3, align 4, !dbg !12862
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12863
  %5 = and i32 %4, 3, !dbg !12864
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12865
  store i32 %5, i32* %6, align 4, !dbg !12866
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12867
  %8 = and i32 %7, 240, !dbg !12868
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12869
  store i32 %8, i32* %9, align 4, !dbg !12870
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12871
  %11 = and i32 %10, 1792, !dbg !12872
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12873
  store i32 %11, i32* %12, align 4, !dbg !12874
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12875
  %14 = lshr i32 %13, 3, !dbg !12876
  %15 = and i32 %14, 1792, !dbg !12876
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12877
  store i32 %15, i32* %16, align 4, !dbg !12878
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12879
  %18 = and i32 %17, 1, !dbg !12879
  store i32 %18, i32* %1, align 4, !dbg !12880
  ret void, !dbg !12881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12882 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12883
  %2 = and i32 %1, 128, !dbg !12883
  %3 = icmp eq i32 %2, 0, !dbg !12883
  br i1 %3, label %5, label %4, !dbg !12885

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12886
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12888
  br label %5, !dbg !12889

5:                                                ; preds = %4, %0
  ret void, !dbg !12890
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12891 {
  ret void, !dbg !12892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !12893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12896, metadata !DIExpression()), !dbg !12897
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12898
  ret void, !dbg !12899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !12900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12903, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.value(metadata i32 1000, metadata !12904, metadata !DIExpression()), !dbg !12905
  %2 = udiv i32 %0, 1000, !dbg !12906
  %3 = add nsw i32 %2, -1, !dbg !12907
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12908
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12909
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12910
  ret void, !dbg !12911
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !12912 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12914, metadata !DIExpression()), !dbg !12917
  %3 = bitcast i32* %2 to i8*, !dbg !12918
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12918
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12915, metadata !DIExpression()), !dbg !12919
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12920
  store volatile i32 %4, i32* %2, align 4, !dbg !12919
  call void @llvm.dbg.value(metadata i32 %0, metadata !12916, metadata !DIExpression()), !dbg !12917
  %5 = load volatile i32, i32* %2, align 4, !dbg !12921
  %6 = icmp eq i32 %0, -1, !dbg !12922
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12916, metadata !DIExpression()), !dbg !12917
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12917
  call void @llvm.dbg.value(metadata i32 %8, metadata !12916, metadata !DIExpression()), !dbg !12917
  br label %9, !dbg !12924

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12916, metadata !DIExpression()), !dbg !12917
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12925
  call void @llvm.dbg.value(metadata i32 undef, metadata !12916, metadata !DIExpression()), !dbg !12917
  %12 = shl i32 %11, 15, !dbg !12917
  %13 = ashr i32 %12, 31, !dbg !12917
  %14 = add i32 %13, %10, !dbg !12917
  call void @llvm.dbg.value(metadata i32 %14, metadata !12916, metadata !DIExpression()), !dbg !12917
  %15 = icmp eq i32 %14, 0, !dbg !12928
  br i1 %15, label %16, label %9, !dbg !12924

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12929
  ret void, !dbg !12929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12932, metadata !DIExpression()), !dbg !12933
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12934
  ret void, !dbg !12935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !12936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12941, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 0, metadata !12942, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 0, metadata !12943, metadata !DIExpression()), !dbg !12944
  %2 = add i32 %0, -32000001, !dbg !12945
  %3 = icmp ult i32 %2, -32000000, !dbg !12945
  br i1 %3, label %22, label %4, !dbg !12945

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12947
  %6 = icmp eq i32 %5, 2048, !dbg !12950
  br i1 %6, label %7, label %9, !dbg !12951

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !12952
  call void @llvm.dbg.value(metadata i32 undef, metadata !12943, metadata !DIExpression()), !dbg !12944
  br i1 %8, label %16, label %17, !dbg !12955

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12956
  %11 = icmp eq i32 %10, 4096, !dbg !12958
  br i1 %11, label %12, label %14, !dbg !12959

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !12960
  call void @llvm.dbg.value(metadata i32 undef, metadata !12943, metadata !DIExpression()), !dbg !12944
  br i1 %13, label %16, label %17, !dbg !12955

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !12963
  call void @llvm.dbg.value(metadata i32 undef, metadata !12943, metadata !DIExpression()), !dbg !12944
  br i1 %15, label %16, label %17, !dbg !12955

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #26, !dbg !12966
  br label %17, !dbg !12969

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #26, !dbg !12970
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12971
  %20 = icmp ne i32 %19, %18, !dbg !12973
  %21 = zext i1 %20 to i32, !dbg !12974
  br label %22, !dbg !12974

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !12944
  call void @llvm.dbg.value(metadata i32 %23, metadata !12942, metadata !DIExpression()), !dbg !12944
  ret i32 %23, !dbg !12975
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !12976 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12977
  %2 = and i32 %1, 6144, !dbg !12977
  ret i32 %2, !dbg !12978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #16 !dbg !12979 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12980
  %2 = or i32 %1, 4, !dbg !12980
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12980
  ret void, !dbg !12981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !12982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12984, metadata !DIExpression()), !dbg !12985
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12986
  %3 = and i32 %2, -2, !dbg !12986
  %4 = or i32 %3, %0, !dbg !12986
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12986
  ret void, !dbg !12987
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !12988 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12989
  %2 = and i32 %1, 1, !dbg !12989
  ret i32 %2, !dbg !12990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !12991 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13008, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13009, metadata !DIExpression()), !dbg !13012
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13013
  %4 = icmp eq i32 %3, 0, !dbg !13015
  br i1 %4, label %5, label %19, !dbg !13016

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #26, !dbg !13017
  call void @llvm.dbg.value(metadata i32 %6, metadata !13011, metadata !DIExpression()), !dbg !13012
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.106() #26, !dbg !13019
  %8 = icmp eq i32 %7, 1, !dbg !13021
  br i1 %8, label %13, label %9, !dbg !13022

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.107() #26, !dbg !13023
  br label %10, !dbg !13025

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.106() #26, !dbg !13026
  %12 = icmp eq i32 %11, 1, !dbg !13027
  br i1 %12, label %13, label %10, !dbg !13025, !llvm.loop !13028

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !13030
  %15 = load i32, i32* %14, align 4, !dbg !13030
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !13031
  %17 = load i32, i32* %16, align 4, !dbg !13031
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.108(i32 noundef 0, i32 noundef %15, i32 noundef %17) #26, !dbg !13032
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13033
  call void @llvm.dbg.value(metadata i32 %18, metadata !13010, metadata !DIExpression()), !dbg !13012
  br label %19, !dbg !13034

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !13035
  call void @llvm.dbg.value(metadata i32 %20, metadata !13010, metadata !DIExpression()), !dbg !13012
  ret i32 %20, !dbg !13036
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !13037 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13041, metadata !DIExpression()), !dbg !13042
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.110() #26, !dbg !13043
  %2 = icmp ne i32 %1, 0, !dbg !13045
  %3 = zext i1 %2 to i32, !dbg !13046
  call void @llvm.dbg.value(metadata i32 %3, metadata !13041, metadata !DIExpression()), !dbg !13042
  ret i32 %3, !dbg !13047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #5 !dbg !13048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13052, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !13053, metadata !DIExpression()), !dbg !13055
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !13056
  %4 = load i32, i32* %3, align 4, !dbg !13056
  %5 = lshr i32 %4, 18, !dbg !13057
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !13058
  %7 = load i8, i8* %6, align 1, !dbg !13058
  %8 = zext i8 %7 to i32, !dbg !13059
  %9 = mul i32 %8, %0, !dbg !13060
  call void @llvm.dbg.value(metadata i32 %9, metadata !13054, metadata !DIExpression()), !dbg !13055
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !13061
  %11 = load i32, i32* %10, align 4, !dbg !13061
  %12 = lshr i32 %11, 22, !dbg !13062
  %13 = add nuw nsw i32 %12, 1, !dbg !13063
  %14 = udiv i32 %9, %13, !dbg !13064
  call void @llvm.dbg.value(metadata i32 %14, metadata !13054, metadata !DIExpression()), !dbg !13055
  ret i32 %14, !dbg !13065
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.106() unnamed_addr #17 !dbg !13066 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13067
  %2 = lshr i32 %1, 1, !dbg !13068
  %3 = and i32 %2, 1, !dbg !13068
  ret i32 %3, !dbg !13069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.107() unnamed_addr #16 !dbg !13070 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13071
  %2 = or i32 %1, 1, !dbg !13071
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13071
  ret void, !dbg !13072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.108(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !13073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13075, metadata !DIExpression()), !dbg !13078
  call void @llvm.dbg.value(metadata i32 %1, metadata !13076, metadata !DIExpression()), !dbg !13078
  call void @llvm.dbg.value(metadata i32 %2, metadata !13077, metadata !DIExpression()), !dbg !13078
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13079
  %5 = and i32 %4, -16580609, !dbg !13079
  %6 = or i32 %1, %0, !dbg !13079
  %7 = or i32 %6, %2, !dbg !13079
  %8 = or i32 %7, %5, !dbg !13079
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13079
  ret void, !dbg !13080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13085, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13086, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata i32 0, metadata !13087, metadata !DIExpression()), !dbg !13089
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13090
  %4 = load i32, i32* %3, align 4, !dbg !13090
  %5 = lshr i32 %4, 4, !dbg !13090
  %6 = and i32 %5, 15, !dbg !13090
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13090
  %8 = load i8, i8* %7, align 1, !dbg !13090
  %9 = zext i8 %8 to i32, !dbg !13090
  %10 = lshr i32 %0, %9, !dbg !13090
  call void @llvm.dbg.value(metadata i32 %10, metadata !13088, metadata !DIExpression()), !dbg !13089
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13091
  %12 = icmp ult i32 %11, %10, !dbg !13093
  br i1 %12, label %13, label %16, !dbg !13094

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %14, metadata !13087, metadata !DIExpression()), !dbg !13089
  %15 = icmp eq i32 %14, 0, !dbg !13097
  br i1 %15, label %16, label %30, !dbg !13099

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.109() #26, !dbg !13100
  br label %17, !dbg !13102

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.110() #26, !dbg !13103
  %19 = icmp eq i32 %18, 1, !dbg !13104
  br i1 %19, label %20, label %17, !dbg !13102, !llvm.loop !13105

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13107
  tail call fastcc void @LL_RCC_SetAHBPrescaler.111(i32 noundef %21) #26, !dbg !13108
  tail call fastcc void @LL_RCC_SetSysClkSource.112() #26, !dbg !13109
  br label %22, !dbg !13110

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.113() #26, !dbg !13111
  %24 = icmp eq i32 %23, 12, !dbg !13112
  br i1 %24, label %25, label %22, !dbg !13110, !llvm.loop !13113

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13115
  %27 = load i32, i32* %26, align 4, !dbg !13115
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.114(i32 noundef %27) #26, !dbg !13116
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13117
  %29 = load i32, i32* %28, align 4, !dbg !13117
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.115(i32 noundef %29) #26, !dbg !13118
  br label %30, !dbg !13119

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13120
  %33 = icmp ugt i32 %32, %10, !dbg !13122
  br i1 %33, label %34, label %36, !dbg !13123

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %35, metadata !13087, metadata !DIExpression()), !dbg !13089
  br label %36, !dbg !13126

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13089
  call void @llvm.dbg.value(metadata i32 %37, metadata !13087, metadata !DIExpression()), !dbg !13089
  %38 = icmp eq i32 %37, 0, !dbg !13127
  br i1 %38, label %39, label %40, !dbg !13129

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13130
  br label %40, !dbg !13132

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.109() unnamed_addr #16 !dbg !13134 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13135
  %2 = or i32 %1, 16777216, !dbg !13135
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13135
  ret void, !dbg !13136
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.110() unnamed_addr #17 !dbg !13137 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13138
  %2 = lshr i32 %1, 25, !dbg !13139
  %3 = and i32 %2, 1, !dbg !13139
  ret i32 %3, !dbg !13140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.111(i32 noundef %0) unnamed_addr #16 !dbg !13141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13143, metadata !DIExpression()), !dbg !13144
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13145
  %3 = and i32 %2, -241, !dbg !13145
  %4 = or i32 %3, %0, !dbg !13145
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13145
  ret void, !dbg !13146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.112() unnamed_addr #16 !dbg !13147 {
  call void @llvm.dbg.value(metadata i32 3, metadata !13149, metadata !DIExpression()), !dbg !13150
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13151
  %2 = or i32 %1, 3, !dbg !13151
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13151
  ret void, !dbg !13152
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.113() unnamed_addr #17 !dbg !13153 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13154
  %2 = and i32 %1, 12, !dbg !13154
  ret i32 %2, !dbg !13155
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.114(i32 noundef %0) unnamed_addr #16 !dbg !13156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13158, metadata !DIExpression()), !dbg !13159
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13160
  %3 = and i32 %2, -1793, !dbg !13160
  %4 = or i32 %3, %0, !dbg !13160
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13160
  ret void, !dbg !13161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.115(i32 noundef %0) unnamed_addr #16 !dbg !13162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13164, metadata !DIExpression()), !dbg !13165
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13166
  %3 = and i32 %2, -14337, !dbg !13166
  %4 = or i32 %3, %0, !dbg !13166
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13166
  ret void, !dbg !13167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !13168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13172, metadata !DIExpression()), !dbg !13178
  call void @llvm.dbg.value(metadata i32 %1, metadata !13173, metadata !DIExpression()), !dbg !13178
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !13174, metadata !DIExpression()), !dbg !13178
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13175, metadata !DIExpression()), !dbg !13178
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13179
  %6 = icmp eq i32 %5, 0, !dbg !13181
  br i1 %6, label %7, label %25, !dbg !13182

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #26, !dbg !13183
  call void @llvm.dbg.value(metadata i32 %8, metadata !13177, metadata !DIExpression()), !dbg !13178
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13185
  %10 = icmp eq i32 %9, 1, !dbg !13187
  br i1 %10, label %19, label %11, !dbg !13188

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13189
  br i1 %12, label %13, label %14, !dbg !13192

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13193
  br label %15, !dbg !13195

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !13196
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !13198
  br label %16, !dbg !13199

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13200
  %18 = icmp eq i32 %17, 1, !dbg !13201
  br i1 %18, label %19, label %16, !dbg !13199, !llvm.loop !13202

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !13204
  %21 = load i32, i32* %20, align 4, !dbg !13204
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !13205
  %23 = load i32, i32* %22, align 4, !dbg !13205
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.108(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #26, !dbg !13206
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13207
  call void @llvm.dbg.value(metadata i32 %24, metadata !13176, metadata !DIExpression()), !dbg !13178
  br label %25, !dbg !13208

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !13209
  call void @llvm.dbg.value(metadata i32 %26, metadata !13176, metadata !DIExpression()), !dbg !13178
  ret i32 %26, !dbg !13210
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !13211 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13212
  %2 = lshr i32 %1, 17, !dbg !13213
  %3 = and i32 %2, 1, !dbg !13213
  ret i32 %3, !dbg !13214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !13215 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13216
  %2 = or i32 %1, 262144, !dbg !13216
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13216
  ret void, !dbg !13217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !13218 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13219
  %2 = and i32 %1, -262145, !dbg !13219
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13219
  ret void, !dbg !13220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !13221 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13222
  %2 = or i32 %1, 65536, !dbg !13222
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13222
  ret void, !dbg !13223
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13224 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13227, metadata !DIExpression()), !dbg !13243
  call void @llvm.dbg.value(metadata i32 undef, metadata !13227, metadata !DIExpression()), !dbg !13243
  call void @llvm.dbg.value(metadata i32 undef, metadata !13227, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13245 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13249, metadata !DIExpression()), !dbg !13251
  %2 = icmp eq i8* %0, null, !dbg !13252
  br i1 %2, label %29, label %3, !dbg !13254

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13255
  %5 = icmp eq i8 %4, 0, !dbg !13256
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13257
  br i1 %6, label %29, label %8, !dbg !13257

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13250, metadata !DIExpression()), !dbg !13251
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13258

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13250, metadata !DIExpression()), !dbg !13251
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13260
  br i1 %10, label %11, label %15, !dbg !13265

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13266
  %13 = load i8*, i8** %12, align 4, !dbg !13266
  %14 = icmp eq i8* %13, %0, !dbg !13267
  br i1 %14, label %29, label %15, !dbg !13268

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13269
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13250, metadata !DIExpression()), !dbg !13251
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13270
  br i1 %17, label %7, label %8, !dbg !13271, !llvm.loop !13272

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13250, metadata !DIExpression()), !dbg !13251
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13274
  br i1 %20, label %21, label %26, !dbg !13278

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13279
  %23 = load i8*, i8** %22, align 4, !dbg !13279
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13280
  %25 = icmp eq i32 %24, 0, !dbg !13281
  br i1 %25, label %29, label %26, !dbg !13282

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13283
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13250, metadata !DIExpression()), !dbg !13251
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13284
  br i1 %28, label %29, label %18, !dbg !13258, !llvm.loop !13285

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13251
  ret %struct.device* %30, !dbg !13287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13288 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13292, metadata !DIExpression()), !dbg !13293
  %2 = icmp eq %struct.device* %0, null, !dbg !13294
  br i1 %2, label %14, label %3, !dbg !13296

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13297
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13297
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13298
  %7 = load i8, i8* %6, align 1, !dbg !13298
  %8 = and i8 %7, 1, !dbg !13298
  %9 = icmp eq i8 %8, 0, !dbg !13298
  br i1 %9, label %14, label %10, !dbg !13299

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13300
  %12 = load i8, i8* %11, align 1, !dbg !13300
  %13 = icmp eq i8 %12, 0, !dbg !13301
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13293
  ret i1 %15, !dbg !13302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13303 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13308, metadata !DIExpression()), !dbg !13309
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13310
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13311
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13312 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13320, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13321, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i8* %2, metadata !13322, metadata !DIExpression()), !dbg !13325
  %5 = bitcast i32* %4 to i8*, !dbg !13326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13326
  call void @llvm.dbg.value(metadata i32 0, metadata !13323, metadata !DIExpression()), !dbg !13325
  store i32 0, i32* %4, align 4, !dbg !13327
  call void @llvm.dbg.value(metadata i32* %4, metadata !13323, metadata !DIExpression(DW_OP_deref)), !dbg !13325
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13328
  call void @llvm.dbg.value(metadata i16* %6, metadata !13324, metadata !DIExpression()), !dbg !13325
  %7 = load i32, i32* %4, align 4, !dbg !13329
  call void @llvm.dbg.value(metadata i32 %7, metadata !13323, metadata !DIExpression()), !dbg !13325
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13330
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13331
  ret i32 %8, !dbg !13332
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13333 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13337, metadata !DIExpression()), !dbg !13343
  call void @llvm.dbg.value(metadata i32* %1, metadata !13338, metadata !DIExpression()), !dbg !13343
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13344
  %4 = load i16*, i16** %3, align 4, !dbg !13344
  call void @llvm.dbg.value(metadata i16* %4, metadata !13339, metadata !DIExpression()), !dbg !13343
  %5 = icmp eq i16* %4, null, !dbg !13345
  br i1 %5, label %14, label %6, !dbg !13346

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13347
  call void @llvm.dbg.value(metadata i32 %7, metadata !13340, metadata !DIExpression()), !dbg !13347
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13348
  %9 = load i16, i16* %8, align 2, !dbg !13348
  %10 = add i16 %9, -32767, !dbg !13349
  %11 = icmp ult i16 %10, 2, !dbg !13349
  %12 = add i32 %7, 1, !dbg !13350
  call void @llvm.dbg.value(metadata i32 %12, metadata !13340, metadata !DIExpression()), !dbg !13347
  br i1 %11, label %13, label %6, !dbg !13349, !llvm.loop !13352

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13355
  br label %14, !dbg !13356

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13358 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13362, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i32 %1, metadata !13363, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13364, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i8* %3, metadata !13365, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i32 0, metadata !13366, metadata !DIExpression()), !dbg !13374
  %5 = icmp eq i32 %1, 0, !dbg !13375
  br i1 %5, label %16, label %8, !dbg !13376

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13366, metadata !DIExpression()), !dbg !13374
  %7 = icmp eq i32 %15, %1, !dbg !13375
  br i1 %7, label %16, label %8, !dbg !13376, !llvm.loop !13377

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13366, metadata !DIExpression()), !dbg !13374
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13379
  %11 = load i16, i16* %10, align 2, !dbg !13379
  call void @llvm.dbg.value(metadata i16 %11, metadata !13368, metadata !DIExpression()), !dbg !13380
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13381
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13371, metadata !DIExpression()), !dbg !13380
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13382
  call void @llvm.dbg.value(metadata i32 %13, metadata !13372, metadata !DIExpression()), !dbg !13380
  %14 = icmp slt i32 %13, 0, !dbg !13383
  %15 = add nuw i32 %9, 1, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %15, metadata !13366, metadata !DIExpression()), !dbg !13374
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13387 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13391, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13392, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13393, metadata !DIExpression()), !dbg !13394
  %2 = sext i16 %0 to i32, !dbg !13395
  %3 = icmp slt i16 %0, 1, !dbg !13397
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13398
  %6 = add nsw i32 %2, -1, !dbg !13398
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13398
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13398
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13392, metadata !DIExpression()), !dbg !13394
  ret %struct.device* %8, !dbg !13399
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13400 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13402, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13403, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.value(metadata i8* %2, metadata !13404, metadata !DIExpression()), !dbg !13407
  %5 = bitcast i32* %4 to i8*, !dbg !13408
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13408
  call void @llvm.dbg.value(metadata i32 0, metadata !13405, metadata !DIExpression()), !dbg !13407
  store i32 0, i32* %4, align 4, !dbg !13409
  call void @llvm.dbg.value(metadata i32* %4, metadata !13405, metadata !DIExpression(DW_OP_deref)), !dbg !13407
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13410
  call void @llvm.dbg.value(metadata i16* %6, metadata !13406, metadata !DIExpression()), !dbg !13407
  %7 = load i32, i32* %4, align 4, !dbg !13411
  call void @llvm.dbg.value(metadata i32 %7, metadata !13405, metadata !DIExpression()), !dbg !13407
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13412
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13413
  ret i32 %8, !dbg !13414
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13415 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13417, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata i32* %1, metadata !13418, metadata !DIExpression()), !dbg !13422
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13423
  %4 = load i16*, i16** %3, align 4, !dbg !13423
  call void @llvm.dbg.value(metadata i16* %4, metadata !13419, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata i32 0, metadata !13420, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata i32 0, metadata !13421, metadata !DIExpression()), !dbg !13422
  %5 = icmp eq i16* %4, null, !dbg !13424
  br i1 %5, label %22, label %6, !dbg !13426

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13420, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata i16* %8, metadata !13419, metadata !DIExpression()), !dbg !13422
  %9 = load i16, i16* %8, align 2, !dbg !13427
  %10 = icmp eq i16 %9, -32768, !dbg !13431
  call void @llvm.dbg.value(metadata i32 undef, metadata !13420, metadata !DIExpression()), !dbg !13422
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13432
  call void @llvm.dbg.value(metadata i16* %11, metadata !13419, metadata !DIExpression()), !dbg !13422
  %12 = zext i1 %10 to i32, !dbg !13433
  %13 = add i32 %7, %12, !dbg !13433
  call void @llvm.dbg.value(metadata i32 %13, metadata !13420, metadata !DIExpression()), !dbg !13422
  %14 = icmp eq i32 %13, 2, !dbg !13434
  br i1 %14, label %15, label %6, !dbg !13435

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13422
  call void @llvm.dbg.value(metadata i32 %16, metadata !13421, metadata !DIExpression()), !dbg !13422
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13436
  %18 = load i16, i16* %17, align 2, !dbg !13436
  %19 = icmp eq i16 %18, 32767, !dbg !13437
  %20 = add i32 %16, 1, !dbg !13438
  call void @llvm.dbg.value(metadata i32 %20, metadata !13421, metadata !DIExpression()), !dbg !13422
  br i1 %19, label %21, label %15, !dbg !13440, !llvm.loop !13441

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13443
  br label %22, !dbg !13444

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13445
  call void @llvm.dbg.value(metadata i16* %23, metadata !13419, metadata !DIExpression()), !dbg !13422
  ret i16* %23, !dbg !13446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13447 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13448
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13449
  ret i32* %2, !dbg !13450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13451 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13600, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13601, metadata !DIExpression()), !dbg !13602
  ret void, !dbg !13603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13608, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata i32 %1, metadata !13609, metadata !DIExpression()), !dbg !13610
  ret void, !dbg !13611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13616, metadata !DIExpression()), !dbg !13618
  call void @llvm.dbg.value(metadata i32 %1, metadata !13617, metadata !DIExpression()), !dbg !13618
  ret void, !dbg !13619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13624, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata i8* %1, metadata !13625, metadata !DIExpression()), !dbg !13626
  ret i32 -134, !dbg !13627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13632, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata i8* %1, metadata !13633, metadata !DIExpression()), !dbg !13634
  ret i32 -134, !dbg !13635
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13639, metadata !DIExpression()), !dbg !13640
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13641, !srcloc !13647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13644, metadata !DIExpression()) #24, !dbg !13648
  call void @llvm.dbg.value(metadata i32 undef, metadata !13645, metadata !DIExpression()) #24, !dbg !13648
  br label %3, !dbg !13649

3:                                                ; preds = %3, %1
  br label %3, !dbg !13650, !llvm.loop !13653
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13660, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13661, metadata !DIExpression()), !dbg !13662
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13663
  unreachable, !dbg !13663
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13666, metadata !DIExpression()), !dbg !13667
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13668
  unreachable, !dbg !13668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13671, metadata !DIExpression()), !dbg !13675
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13672, metadata !DIExpression()), !dbg !13675
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13676, !srcloc !13647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13644, metadata !DIExpression()) #24, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !13645, metadata !DIExpression()) #24, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()), !dbg !13675
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13674, metadata !DIExpression()), !dbg !13675
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13679
  br i1 %4, label %6, label %5, !dbg !13681

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13682
  br label %7, !dbg !13683

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13682
  br label %7, !dbg !13686

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13676
  call void @llvm.dbg.value(metadata i32 %8, metadata !13644, metadata !DIExpression()) #24, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %8, metadata !13673, metadata !DIExpression()), !dbg !13675
  %9 = tail call fastcc %struct.k_thread* @k_current_get.124() #27, !dbg !13688
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13674, metadata !DIExpression()), !dbg !13675
  call void @llvm.dbg.value(metadata i32 undef, metadata !13689, metadata !DIExpression()) #24, !dbg !13692
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13694, !srcloc !13695
  tail call fastcc void @k_thread_abort.125(%struct.k_thread* noundef %9) #26, !dbg !13696
  ret void, !dbg !13699
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.124() unnamed_addr #9 !dbg !13700 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.126() #27, !dbg !13704
  ret %struct.k_thread* %1, !dbg !13705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.125(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13706 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13710, metadata !DIExpression()), !dbg !13711
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13712, !srcloc !13714
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13715
  ret void, !dbg !13716
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.126() unnamed_addr #9 !dbg !13717 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13718, !srcloc !13720
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13721
  ret %struct.k_thread* %1, !dbg !13722
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13723 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13727, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.value(metadata i32 %1, metadata !13728, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.value(metadata i32 %2, metadata !13729, metadata !DIExpression()), !dbg !13730
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13731
  ret void, !dbg !13732
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13733 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13737, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.value(metadata i8* %1, metadata !13738, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.value(metadata i32 %2, metadata !13739, metadata !DIExpression()), !dbg !13740
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13741
  ret void, !dbg !13742
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13743 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13744
  ret void, !dbg !13745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13748, metadata !DIExpression()), !dbg !13749
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13750
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13751
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13752
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13753
  %4 = trunc i32 %0 to i8, !dbg !13754
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13755
  store i8 %4, i8* %5, align 4, !dbg !13756
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13757
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13758
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13759
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13760
  store i8* %8, i8** %9, align 4, !dbg !13761
  ret void, !dbg !13762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13765, metadata !DIExpression()), !dbg !13771
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13772
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13766, metadata !DIExpression()), !dbg !13771
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13773
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13767, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.value(metadata i8* null, metadata !13770, metadata !DIExpression()), !dbg !13771
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13774
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13775
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13776
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13777
  ret void, !dbg !13778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13779 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13783, metadata !DIExpression()), !dbg !13784
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13785
  ret i8* %2, !dbg !13786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()), !dbg !13793
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13794
  %3 = load i8, i8* %2, align 1, !dbg !13795
  %4 = and i8 %3, -5, !dbg !13795
  store i8 %4, i8* %2, align 1, !dbg !13795
  ret void, !dbg !13796
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13797 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13800
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13801
  %3 = ptrtoint i8* %2 to i32, !dbg !13810
  %4 = add i32 %3, 2048, !dbg !13811
  call void @llvm.dbg.value(metadata i32 %4, metadata !13805, metadata !DIExpression()) #24, !dbg !13812
  call void @llvm.dbg.value(metadata i32 %4, metadata !13813, metadata !DIExpression()) #24, !dbg !13816
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13818, !srcloc !13819
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13820
  %6 = or i32 %5, 512, !dbg !13820
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13820
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -2, i32 noundef 255) #25, !dbg !13821
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -5, i32 noundef 0) #25, !dbg !13824
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -12, i32 noundef 0) #25, !dbg !13825
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -11, i32 noundef 0) #25, !dbg !13826
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -10, i32 noundef 0) #25, !dbg !13827
  tail call fastcc void @__NVIC_SetPriority.133(i32 noundef -4, i32 noundef 0) #25, !dbg !13828
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13829
  %8 = or i32 %7, 458752, !dbg !13829
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13829
  tail call void @z_arm_fault_init() #25, !dbg !13830
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13831
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13832
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13835
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13836
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13837
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13838
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13838
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13799, metadata !DIExpression()), !dbg !13839
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13840
  call void @z_device_state_init() #25, !dbg !13841
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13842
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13843
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13844
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13845
  unreachable, !dbg !13845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2224, metadata !DIExpression()), !dbg !13846
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13847
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13847
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2225, metadata !DIExpression()), !dbg !13846
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2225, metadata !DIExpression()), !dbg !13846
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13848
  br i1 %7, label %8, label %35, !dbg !13849

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2225, metadata !DIExpression()), !dbg !13846
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13850
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13850
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2235, metadata !DIExpression()), !dbg !13851
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13852
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13852
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13853
  call void @llvm.dbg.value(metadata i32 %14, metadata !2239, metadata !DIExpression()), !dbg !13851
  %15 = icmp eq %struct.device* %11, null, !dbg !13854
  br i1 %15, label %32, label %16, !dbg !13856

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13857
  br i1 %17, label %26, label %18, !dbg !13860

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13861
  call void @llvm.dbg.value(metadata i32 %19, metadata !2239, metadata !DIExpression()), !dbg !13851
  %20 = icmp ult i32 %19, 255, !dbg !13863
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13863
  call void @llvm.dbg.value(metadata i32 %21, metadata !2239, metadata !DIExpression()), !dbg !13851
  %22 = trunc i32 %21 to i8, !dbg !13864
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13865
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13865
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13866
  store i8 %22, i8* %25, align 1, !dbg !13867
  br label %26, !dbg !13868

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13869
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13869
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13870
  %30 = load i8, i8* %29, align 1, !dbg !13871
  %31 = or i8 %30, 1, !dbg !13871
  store i8 %31, i8* %29, align 1, !dbg !13871
  br label %32, !dbg !13872

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13873
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2225, metadata !DIExpression()), !dbg !13846
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13848
  br i1 %34, label %8, label %35, !dbg !13849, !llvm.loop !13874

35:                                               ; preds = %32, %1
  ret void, !dbg !13876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.133(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !13877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13879, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i32 %1, metadata !13880, metadata !DIExpression()), !dbg !13881
  %3 = trunc i32 %1 to i8, !dbg !13882
  %4 = shl i8 %3, 4, !dbg !13882
  %5 = and i32 %0, 15, !dbg !13885
  %6 = add nsw i32 %5, -4, !dbg !13886
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13887
  store volatile i8 %4, i8* %7, align 1, !dbg !13888
  ret void, !dbg !13889
}

; Function Attrs: optsize
declare !dbg !13890 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13894, metadata !DIExpression()), !dbg !13895
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13896
  store i8 1, i8* %2, align 1, !dbg !13897
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13898
  store i8 1, i8* %3, align 4, !dbg !13899
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13900
  store i32 0, i32* %4, align 4, !dbg !13901
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13902
  store i32 0, i32* %5, align 4, !dbg !13903
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13904
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13905
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13906
  ret void, !dbg !13907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13908 {
  tail call void @z_sched_init() #25, !dbg !13913
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13914
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0)) #25, !dbg !13915
  call void @llvm.dbg.value(metadata i8* %1, metadata !13912, metadata !DIExpression()), !dbg !13916
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13917
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13918
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13919
  ret i8* %1, !dbg !13920
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13921 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13925, metadata !DIExpression()), !dbg !13926
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13927
  unreachable, !dbg !13928
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13931, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8* %1, metadata !13932, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8* %2, metadata !13933, metadata !DIExpression()), !dbg !13934
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13935
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13936
  tail call void @boot_banner() #25, !dbg !13937
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13938
  tail call void @z_init_static_threads() #25, !dbg !13939
  tail call void @main() #25, !dbg !13940
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13941
  %5 = and i8 %4, -2, !dbg !13941
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13941
  ret void, !dbg !13942
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13943 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13953, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %1, metadata !13954, metadata !DIExpression()), !dbg !13955
  ret void, !dbg !13956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13957 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13959, metadata !DIExpression()), !dbg !13961
  call void @llvm.dbg.value(metadata i8* %1, metadata !13960, metadata !DIExpression()), !dbg !13961
  ret void, !dbg !13962
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13963 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13964, !srcloc !13971
  call void @llvm.dbg.value(metadata i32 %1, metadata !13967, metadata !DIExpression()) #24, !dbg !13972
  %2 = icmp ne i32 %1, 0, !dbg !13973
  ret i1 %2, !dbg !13974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13975 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13976
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13977
  %3 = load i8, i8* %2, align 4, !dbg !13978
  %4 = or i8 %3, 1, !dbg !13978
  store i8 %4, i8* %2, align 4, !dbg !13978
  ret void, !dbg !13979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13980 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13981
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13982
  %3 = load i8, i8* %2, align 4, !dbg !13983
  %4 = and i8 %3, -2, !dbg !13983
  store i8 %4, i8* %2, align 4, !dbg !13983
  ret void, !dbg !13984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13985 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13986
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13987
  %3 = load i8, i8* %2, align 4, !dbg !13987
  %4 = and i8 %3, 1, !dbg !13988
  %5 = icmp ne i8 %4, 0, !dbg !13989
  ret i1 %5, !dbg !13990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13991 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13995, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata i8* %1, metadata !13996, metadata !DIExpression()), !dbg !13997
  ret i32 -88, !dbg !13998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14003, metadata !DIExpression()), !dbg !14004
  ret i8* null, !dbg !14005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !14006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14010, metadata !DIExpression()), !dbg !14013
  call void @llvm.dbg.value(metadata i8* %1, metadata !14011, metadata !DIExpression()), !dbg !14013
  call void @llvm.dbg.value(metadata i32 %2, metadata !14012, metadata !DIExpression()), !dbg !14013
  ret i32 -88, !dbg !14014
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2246 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2362, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i8* %1, metadata !2363, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 %2, metadata !2364, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 0, metadata !2365, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i8 undef, metadata !2367, metadata !DIExpression()), !dbg !14015
  %4 = icmp eq i8* %1, null, !dbg !14016
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14018
  br i1 %6, label %46, label %7, !dbg !14018

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14019
  %9 = load i8, i8* %8, align 1, !dbg !14019
  call void @llvm.dbg.value(metadata i8 %9, metadata !2367, metadata !DIExpression()), !dbg !14015
  %10 = add i32 %2, -1, !dbg !14020
  call void @llvm.dbg.value(metadata i32 %10, metadata !2364, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i8 0, metadata !2368, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8 %9, metadata !2367, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 0, metadata !2365, metadata !DIExpression()), !dbg !14015
  %11 = icmp eq i8 %9, 0, !dbg !14022
  br i1 %11, label %12, label %15, !dbg !14024

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14025
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14026
  store i8 0, i8* %14, align 1, !dbg !14027
  br label %46, !dbg !14028

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2368, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8 %17, metadata !2367, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 %18, metadata !2365, metadata !DIExpression()), !dbg !14015
  %19 = zext i8 %17 to i32, !dbg !14029
  %20 = zext i8 %16 to i32, !dbg !14030
  %21 = shl nuw i32 1, %20, !dbg !14030
  call void @llvm.dbg.value(metadata i32 %21, metadata !2366, metadata !DIExpression()), !dbg !14015
  %22 = and i32 %21, %19, !dbg !14032
  %23 = icmp eq i32 %22, 0, !dbg !14034
  br i1 %23, label %42, label %24, !dbg !14035

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14036
  %26 = sub i32 %10, %18, !dbg !14037
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14038
  %28 = load i8*, i8** %27, align 4, !dbg !14038
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14039
  %30 = load i32, i32* %29, align 4, !dbg !14039
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14040
  %32 = add i32 %31, %18, !dbg !14041
  call void @llvm.dbg.value(metadata i32 %32, metadata !2365, metadata !DIExpression()), !dbg !14015
  %33 = trunc i32 %21 to i8, !dbg !14042
  %34 = xor i8 %33, -1, !dbg !14042
  %35 = and i8 %17, %34, !dbg !14042
  call void @llvm.dbg.value(metadata i8 %35, metadata !2367, metadata !DIExpression()), !dbg !14015
  %36 = icmp eq i8 %35, 0, !dbg !14043
  br i1 %36, label %12, label %37, !dbg !14045

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14046
  %39 = sub i32 %10, %32, !dbg !14048
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !14049
  %41 = add i32 %40, %32, !dbg !14050
  call void @llvm.dbg.value(metadata i32 %41, metadata !2365, metadata !DIExpression()), !dbg !14015
  br label %42, !dbg !14051

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14015
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14015
  call void @llvm.dbg.value(metadata i8 %44, metadata !2367, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 %43, metadata !2365, metadata !DIExpression()), !dbg !14015
  %45 = add i8 %16, 1, !dbg !14052
  call void @llvm.dbg.value(metadata i8 %45, metadata !2368, metadata !DIExpression()), !dbg !14021
  br label %15, !dbg !14024

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !14015
  ret i8* %47, !dbg !14053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14054 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14058, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.value(metadata i32 %1, metadata !14059, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.value(metadata i8* %2, metadata !14060, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.value(metadata i32 %3, metadata !14061, metadata !DIExpression()), !dbg !14063
  %5 = icmp ult i32 %1, %3, !dbg !14064
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14064
  call void @llvm.dbg.value(metadata i32 %6, metadata !14062, metadata !DIExpression()), !dbg !14063
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14065
  ret i32 %6, !dbg !14066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14071, metadata !DIExpression()), !dbg !14072
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14073
  ret void, !dbg !14074
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14084, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14085, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i32 %2, metadata !14086, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14087, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i8* %4, metadata !14088, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i8* %5, metadata !14089, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i8* %6, metadata !14090, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i32 %7, metadata !14091, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i32 %8, metadata !14092, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i8* undef, metadata !14093, metadata !DIExpression()), !dbg !14095
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14096
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14097
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14098
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14099
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14100
  call void @llvm.dbg.value(metadata i8* %13, metadata !14094, metadata !DIExpression()), !dbg !14095
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14101
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14102
  store i8* null, i8** %14, align 4, !dbg !14103
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14104
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14104
  br i1 %16, label %20, label %17, !dbg !14106

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14107
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14107
  br label %20, !dbg !14108

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14095
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14109
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14111
  ret i8* %13, !dbg !14112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14113 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14118, metadata !DIExpression()), !dbg !14119
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14120
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14121
  ret void, !dbg !14122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14123 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14128, metadata !DIExpression()), !dbg !14132
  call void @llvm.dbg.value(metadata i32 %1, metadata !14129, metadata !DIExpression()), !dbg !14132
  call void @llvm.dbg.value(metadata i32 %2, metadata !14130, metadata !DIExpression()), !dbg !14132
  call void @llvm.dbg.value(metadata i32 %3, metadata !14131, metadata !DIExpression()), !dbg !14132
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14133
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14134
  %6 = trunc i32 %3 to i8, !dbg !14135
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14136
  store i8 %6, i8* %7, align 4, !dbg !14137
  %8 = trunc i32 %2 to i8, !dbg !14138
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14139
  store i8 %8, i8* %9, align 1, !dbg !14140
  %10 = trunc i32 %1 to i8, !dbg !14141
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14142
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14142
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14142
  store i8 %10, i8* %13, align 2, !dbg !14143
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14144
  store i8 0, i8* %14, align 1, !dbg !14145
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14146
  ret void, !dbg !14147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14152, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14153, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 %2, metadata !14154, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 0, metadata !14159, metadata !DIExpression()), !dbg !14160
  %4 = add i32 %2, 7, !dbg !14161
  %5 = and i32 %4, -8, !dbg !14161
  %6 = add i32 %5, 64, !dbg !14161
  call void @llvm.dbg.value(metadata i32 %6, metadata !14155, metadata !DIExpression()), !dbg !14160
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.145(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14163
  call void @llvm.dbg.value(metadata i8* %7, metadata !14158, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 %5, metadata !14156, metadata !DIExpression()), !dbg !14160
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14164
  call void @llvm.dbg.value(metadata i8* %8, metadata !14157, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 0, metadata !14159, metadata !DIExpression()), !dbg !14160
  %9 = ptrtoint i8* %7 to i32, !dbg !14165
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14166
  store i32 %9, i32* %10, align 4, !dbg !14167
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14168
  store i32 %5, i32* %11, align 4, !dbg !14169
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14170
  store i32 0, i32* %12, align 4, !dbg !14171
  call void @llvm.dbg.value(metadata i8* %8, metadata !14157, metadata !DIExpression()), !dbg !14160
  ret i8* %8, !dbg !14172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.145(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14173 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14177, metadata !DIExpression()), !dbg !14178
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14179
  ret i8* %2, !dbg !14180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14186, metadata !DIExpression()), !dbg !14187
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14188
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14189
  ret void, !dbg !14190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14191 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14193, metadata !DIExpression()), !dbg !14194
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14195
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14196
  ret void, !dbg !14197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14198 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14202, metadata !DIExpression()), !dbg !14203
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14204
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14205
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14206
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14207
  ret void, !dbg !14208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14209 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14214, metadata !DIExpression()), !dbg !14215
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14216
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14217
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14218
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14219
  ret void, !dbg !14220
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14221 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14238, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14230, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i32 %2, metadata !14231, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14232, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8* %4, metadata !14233, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8* %5, metadata !14234, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8* %6, metadata !14235, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i32 %7, metadata !14236, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i32 %8, metadata !14237, metadata !DIExpression()), !dbg !14239
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14240
  %13 = icmp eq i64 %11, -1, !dbg !14241
  br i1 %13, label %15, label %14, !dbg !14243

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14244
  br label %15, !dbg !14246

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14248 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14253, metadata !DIExpression()), !dbg !14254
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14252, metadata !DIExpression()), !dbg !14254
  %4 = icmp eq i64 %3, 0, !dbg !14255
  br i1 %4, label %5, label %6, !dbg !14257

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14258
  br label %7, !dbg !14260

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14261
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14268, metadata !DIExpression()), !dbg !14269
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14270, !srcloc !14272
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14273
  ret void, !dbg !14274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14275 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14278, metadata !DIExpression()), !dbg !14279
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14277, metadata !DIExpression()), !dbg !14279
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14280
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14281
  ret void, !dbg !14282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14283 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14285, metadata !DIExpression()), !dbg !14305
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14306

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14307
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14303, metadata !DIExpression()), !dbg !14308
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14309

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14285, metadata !DIExpression()), !dbg !14305
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14310
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14310
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14313
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14313
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14314
  %9 = load i32, i32* %8, align 4, !dbg !14314
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14315
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14315
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14316
  %13 = load i8*, i8** %12, align 4, !dbg !14316
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14317
  %15 = load i8*, i8** %14, align 4, !dbg !14317
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14318
  %17 = load i8*, i8** %16, align 4, !dbg !14318
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14319
  %19 = load i32, i32* %18, align 4, !dbg !14319
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14320
  %21 = load i32, i32* %20, align 4, !dbg !14320
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14321
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14322
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14323
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14324
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14324
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14325
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14285, metadata !DIExpression()), !dbg !14305
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14326
  br i1 %27, label %2, label %1, !dbg !14306, !llvm.loop !14328

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14307
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14303, metadata !DIExpression()), !dbg !14308
  br label %29, !dbg !14309

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14330
  ret void, !dbg !14331

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14303, metadata !DIExpression()), !dbg !14308
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14332
  %33 = load i32, i32* %32, align 4, !dbg !14332
  %34 = icmp eq i32 %33, -1, !dbg !14336
  br i1 %34, label %43, label %35, !dbg !14337

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14338
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14338
  %38 = icmp sgt i32 %33, 0, !dbg !14340
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14340
  %40 = zext i32 %39 to i64, !dbg !14340
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.148(i64 noundef %40) #26, !dbg !14340
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14341
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14341
  br label %43, !dbg !14342

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14343
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14303, metadata !DIExpression()), !dbg !14308
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14344
  br i1 %45, label %30, label %29, !dbg !14309, !llvm.loop !14346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.148(i64 noundef %0) unnamed_addr #11 !dbg !14348 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14350, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata i64 %0, metadata !14352, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i32 1000, metadata !14355, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i32 10000, metadata !14356, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8 1, metadata !14357, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8 0, metadata !14358, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8 1, metadata !14359, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8 0, metadata !14360, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8 1, metadata !14361, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8 0, metadata !14362, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i64 0, metadata !14363, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i64 0, metadata !14363, metadata !DIExpression()), !dbg !14367
  %2 = mul i64 %0, 10, !dbg !14369
  ret i64 %2, !dbg !14375
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14376 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14378, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i8* %1, metadata !14379, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i8* %2, metadata !14380, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i8* %3, metadata !14381, metadata !DIExpression()), !dbg !14382
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14383
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14384
  %7 = load i8, i8* %6, align 4, !dbg !14385
  %8 = or i8 %7, 4, !dbg !14385
  store i8 %8, i8* %6, align 4, !dbg !14385
  tail call void @z_thread_essential_clear() #26, !dbg !14386
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14387
  unreachable, !dbg !14387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14392, metadata !DIExpression()), !dbg !14393
  ret i32 -134, !dbg !14394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14395 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14399, metadata !DIExpression()), !dbg !14401
  call void @llvm.dbg.value(metadata i32 %1, metadata !14400, metadata !DIExpression()), !dbg !14401
  ret i32 -134, !dbg !14402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14403 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14410, metadata !DIExpression()), !dbg !14412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14411, metadata !DIExpression()), !dbg !14412
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14413
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14415
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14412
  ret i32 %6, !dbg !14416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14417 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14421, metadata !DIExpression()), !dbg !14422
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14423
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14422
  ret i32 %3, !dbg !14425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14426 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14428
  ret void, !dbg !14429
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14430 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14432, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.value(metadata i8* %1, metadata !14433, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.value(metadata i8* %2, metadata !14434, metadata !DIExpression()), !dbg !14435
  br label %4, !dbg !14436

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14437, !srcloc !14444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14440, metadata !DIExpression()) #24, !dbg !14445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14441, metadata !DIExpression()) #24, !dbg !14445
  tail call fastcc void @k_cpu_idle() #26, !dbg !14446
  br label %4, !dbg !14436, !llvm.loop !14447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14449 {
  tail call void @arch_cpu_idle() #25, !dbg !14450
  ret void, !dbg !14451
}

; Function Attrs: optsize
declare !dbg !14452 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14453 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14468, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.value(metadata i32 %1, metadata !14469, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.value(metadata i32 %2, metadata !14470, metadata !DIExpression()), !dbg !14471
  %4 = icmp eq i32 %2, 0, !dbg !14472
  %5 = icmp ugt i32 %1, %2, !dbg !14472
  %6 = or i1 %4, %5, !dbg !14472
  br i1 %6, label %11, label %7, !dbg !14472

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14474
  store i32 %1, i32* %8, align 4, !dbg !14475
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14476
  store i32 %2, i32* %9, align 4, !dbg !14477
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14478
  tail call fastcc void @z_waitq_init.153(%union.anon* noundef %10) #26, !dbg !14479
  br label %11, !dbg !14480

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14471
  ret i32 %12, !dbg !14481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.153(%union.anon* noundef %0) unnamed_addr #4 !dbg !14482 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14487, metadata !DIExpression()), !dbg !14488
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14489
  tail call fastcc void @sys_dlist_init.154(%struct._dnode* noundef %2) #26, !dbg !14490
  ret void, !dbg !14491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.154(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14492 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14497, metadata !DIExpression()), !dbg !14498
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14499
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14500
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14501
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14502
  ret void, !dbg !14503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14504 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14508, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14595, metadata !DIExpression()) #24, !dbg !14602
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14604, !srcloc !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14607, metadata !DIExpression()) #24, !dbg !14611
  call void @llvm.dbg.value(metadata i32 undef, metadata !14608, metadata !DIExpression()) #24, !dbg !14611
  call void @llvm.dbg.value(metadata i32 undef, metadata !14601, metadata !DIExpression()) #24, !dbg !14602
  call void @llvm.dbg.value(metadata i32 undef, metadata !14509, metadata !DIExpression()), !dbg !14594
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14612
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14613
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14514, metadata !DIExpression()), !dbg !14594
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14614
  br i1 %5, label %8, label %6, !dbg !14616

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14617, metadata !DIExpression()), !dbg !14623
  call void @llvm.dbg.value(metadata i32 0, metadata !14622, metadata !DIExpression()), !dbg !14623
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14626
  store i32 0, i32* %7, align 4, !dbg !14627
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !14628
  br label %16, !dbg !14629

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14630
  %10 = load i32, i32* %9, align 4, !dbg !14630
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14632
  %12 = load i32, i32* %11, align 4, !dbg !14632
  %13 = icmp ne i32 %10, %12, !dbg !14633
  %14 = zext i1 %13 to i32, !dbg !14634
  %15 = add i32 %10, %14, !dbg !14635
  store i32 %15, i32* %9, align 4, !dbg !14635
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14604
  call void @llvm.dbg.value(metadata i32 %17, metadata !14607, metadata !DIExpression()) #24, !dbg !14611
  call void @llvm.dbg.value(metadata i32 %17, metadata !14601, metadata !DIExpression()) #24, !dbg !14602
  call void @llvm.dbg.value(metadata i32 %17, metadata !14509, metadata !DIExpression()), !dbg !14594
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14636
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !14636
  ret void, !dbg !14637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14638 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14647, metadata !DIExpression()), !dbg !14651
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14646, metadata !DIExpression()), !dbg !14651
  call void @llvm.dbg.value(metadata i32 0, metadata !14648, metadata !DIExpression()), !dbg !14651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14595, metadata !DIExpression()) #24, !dbg !14652
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14654, !srcloc !14610
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14654
  call void @llvm.dbg.value(metadata i32 %4, metadata !14607, metadata !DIExpression()) #24, !dbg !14656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14608, metadata !DIExpression()) #24, !dbg !14656
  call void @llvm.dbg.value(metadata i32 %4, metadata !14601, metadata !DIExpression()) #24, !dbg !14652
  call void @llvm.dbg.value(metadata i32 %4, metadata !14649, metadata !DIExpression()), !dbg !14651
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14657
  %6 = load i32, i32* %5, align 4, !dbg !14657
  %7 = icmp eq i32 %6, 0, !dbg !14657
  br i1 %7, label %10, label %8, !dbg !14659, !prof !14660

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14661
  store i32 %9, i32* %5, align 4, !dbg !14661
  call void @llvm.dbg.value(metadata i32 %4, metadata !14663, metadata !DIExpression()) #24, !dbg !14669
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14668, metadata !DIExpression()) #24, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %4, metadata !14671, metadata !DIExpression()) #24, !dbg !14674
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14676, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 0, metadata !14648, metadata !DIExpression()), !dbg !14651
  br label %18, !dbg !14678

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14647, metadata !DIExpression()), !dbg !14651
  %12 = icmp eq i64 %11, 0, !dbg !14679
  br i1 %12, label %13, label %14, !dbg !14681

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14663, metadata !DIExpression()) #24, !dbg !14682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14668, metadata !DIExpression()) #24, !dbg !14682
  call void @llvm.dbg.value(metadata i32 %4, metadata !14671, metadata !DIExpression()) #24, !dbg !14685
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14687, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 -16, metadata !14648, metadata !DIExpression()), !dbg !14651
  br label %18, !dbg !14688

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14689
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14690
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !14690
  call void @llvm.dbg.value(metadata i32 %17, metadata !14648, metadata !DIExpression()), !dbg !14651
  br label %18, !dbg !14691

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14651
  call void @llvm.dbg.value(metadata i32 %19, metadata !14648, metadata !DIExpression()), !dbg !14651
  call void @llvm.dbg.label(metadata !14650), !dbg !14692
  ret i32 %19, !dbg !14693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14694 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14696, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14595, metadata !DIExpression()) #24, !dbg !14700
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14702, !srcloc !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14607, metadata !DIExpression()) #24, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14608, metadata !DIExpression()) #24, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14601, metadata !DIExpression()) #24, !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !14698, metadata !DIExpression()), !dbg !14699
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14705
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14697, metadata !DIExpression()), !dbg !14699
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14707
  br i1 %5, label %11, label %6, !dbg !14709

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14617, metadata !DIExpression()), !dbg !14710
  call void @llvm.dbg.value(metadata i32 -11, metadata !14622, metadata !DIExpression()), !dbg !14710
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14712
  store i32 -11, i32* %8, align 4, !dbg !14713
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !14714
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14705
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14697, metadata !DIExpression()), !dbg !14699
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14707
  br i1 %10, label %11, label %6, !dbg !14709, !llvm.loop !14715

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %12, metadata !14607, metadata !DIExpression()) #24, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %12, metadata !14601, metadata !DIExpression()) #24, !dbg !14700
  call void @llvm.dbg.value(metadata i32 %12, metadata !14698, metadata !DIExpression()), !dbg !14699
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14718
  store i32 0, i32* %13, align 4, !dbg !14719
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14720
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !14720
  ret void, !dbg !14721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14722 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14726, metadata !DIExpression()), !dbg !14730
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14727, metadata !DIExpression()), !dbg !14730
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14731
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14731
  %5 = load i8, i8* %4, align 2, !dbg !14731
  call void @llvm.dbg.value(metadata i8 %5, metadata !14728, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14730
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14732
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14732
  %8 = load i8, i8* %7, align 2, !dbg !14732
  call void @llvm.dbg.value(metadata i8 %8, metadata !14729, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14730
  %9 = icmp eq i8 %8, %5, !dbg !14733
  %10 = sext i8 %5 to i32, !dbg !14735
  %11 = sext i8 %8 to i32, !dbg !14735
  %12 = sub nsw i32 %11, %10, !dbg !14735
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14735
  ret i32 %13, !dbg !14736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14737 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14741, metadata !DIExpression()), !dbg !14742
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14743
  %3 = icmp eq i32 %2, 0, !dbg !14745
  br i1 %3, label %8, label %4, !dbg !14746

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14747
  %6 = add i32 %5, %2, !dbg !14749
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14750
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14751
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14752
  br label %8, !dbg !14753

8:                                                ; preds = %4, %1
  ret void, !dbg !14754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14759, metadata !DIExpression()), !dbg !14761
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14762
  call void @llvm.dbg.value(metadata i32 %1, metadata !14760, metadata !DIExpression()), !dbg !14761
  ret i32 %1, !dbg !14763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14768, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.value(metadata i32 %1, metadata !14769, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.value(metadata i32 0, metadata !14770, metadata !DIExpression()), !dbg !14778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !14786
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14788, !srcloc !14794
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14788
  call void @llvm.dbg.value(metadata i32 %4, metadata !14791, metadata !DIExpression()) #24, !dbg !14795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !14795
  call void @llvm.dbg.value(metadata i32 %4, metadata !14785, metadata !DIExpression()) #24, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %4, metadata !14776, metadata !DIExpression()), !dbg !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !14770, metadata !DIExpression()), !dbg !14778
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14796
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14799
  %6 = icmp sgt i32 %0, 0, !dbg !14800
  %7 = icmp sgt i32 %5, 2, !dbg !14802
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14802
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14802
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14803
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14804
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %4, metadata !14806, metadata !DIExpression()) #24, !dbg !14812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !14812
  call void @llvm.dbg.value(metadata i32 %4, metadata !14814, metadata !DIExpression()) #24, !dbg !14817
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14819, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !14770, metadata !DIExpression()), !dbg !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !14770, metadata !DIExpression()), !dbg !14778
  ret void, !dbg !14821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14824, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.value(metadata i32 %0, metadata !14826, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14841
  call void @llvm.dbg.value(metadata i32 1000, metadata !14829, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i32 10000, metadata !14830, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i8 1, metadata !14831, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i1 true, metadata !14832, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14841
  call void @llvm.dbg.value(metadata i1 true, metadata !14833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14841
  call void @llvm.dbg.value(metadata i8 0, metadata !14834, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i1 true, metadata !14835, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14841
  call void @llvm.dbg.value(metadata i1 false, metadata !14836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14841
  call void @llvm.dbg.value(metadata i64 0, metadata !14837, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i64 0, metadata !14837, metadata !DIExpression()), !dbg !14841
  %2 = mul i32 %0, 10, !dbg !14843
  ret i32 %2, !dbg !14849
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14852, metadata !DIExpression()), !dbg !14854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !14855
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14857, !srcloc !14794
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14857
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #24, !dbg !14859
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !14859
  call void @llvm.dbg.value(metadata i32 %3, metadata !14785, metadata !DIExpression()) #24, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %3, metadata !14853, metadata !DIExpression()), !dbg !14854
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14860
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14862
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14863
  br i1 %6, label %7, label %8, !dbg !14864

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14865
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !14867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !14867
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !14869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14871, !srcloc !14820
  br label %24, !dbg !14872

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14873
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14874
  %10 = icmp eq i32 %9, 0, !dbg !14874
  br i1 %10, label %21, label %11, !dbg !14876

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14877
  br i1 %12, label %13, label %21, !dbg !14878

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14879
  %15 = icmp sgt i32 %14, %0, !dbg !14882
  br i1 %15, label %19, label %16, !dbg !14883

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14884
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14884
  call void @llvm.dbg.value(metadata i32 %18, metadata !14853, metadata !DIExpression()), !dbg !14854
  br label %22, !dbg !14886

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14887
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14887
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14889
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14854
  call void @llvm.dbg.value(metadata i32 %23, metadata !14853, metadata !DIExpression()), !dbg !14854
  call void @llvm.dbg.value(metadata i32 %23, metadata !14806, metadata !DIExpression()) #24, !dbg !14891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %23, metadata !14814, metadata !DIExpression()) #24, !dbg !14893
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14895, !srcloc !14820
  br label %24, !dbg !14896

24:                                               ; preds = %22, %7
  ret void, !dbg !14896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14897 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14901, metadata !DIExpression()), !dbg !14903
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14904
  %3 = icmp eq i32 %2, 0, !dbg !14904
  br i1 %3, label %16, label %4, !dbg !14905

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14906
  br i1 %5, label %16, label %6, !dbg !14907

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14908
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14908
  %9 = load i8, i8* %8, align 2, !dbg !14908
  %10 = sext i8 %9 to i32, !dbg !14909
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14910
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14911
  br i1 %12, label %16, label %13, !dbg !14912

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14913
  %15 = xor i1 %14, true, !dbg !14914
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14903
  call void @llvm.dbg.value(metadata i1 %17, metadata !14902, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14903
  ret i1 %17, !dbg !14915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14916 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()), !dbg !14922
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14923
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14921, metadata !DIExpression()), !dbg !14922
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14924
  br i1 %3, label %5, label %4, !dbg !14926

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14927
  br label %5, !dbg !14929

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14920, metadata !DIExpression()), !dbg !14922
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14930
  ret i32 %6, !dbg !14931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14934, metadata !DIExpression()), !dbg !14936
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14937
  %3 = load i8, i8* %2, align 1, !dbg !14937
  call void @llvm.dbg.value(metadata i8 %3, metadata !14935, metadata !DIExpression()), !dbg !14936
  %4 = and i8 %3, 31, !dbg !14938
  %5 = icmp ne i8 %4, 0, !dbg !14939
  ret i1 %5, !dbg !14940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14941 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14943, metadata !DIExpression()), !dbg !14944
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14945
  br i1 %2, label %3, label %7, !dbg !14947

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()) #24, !dbg !14951
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14954
  %5 = load i8, i8* %4, align 1, !dbg !14955
  %6 = and i8 %5, 127, !dbg !14955
  store i8 %6, i8* %4, align 1, !dbg !14955
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14956, metadata !DIExpression()) #24, !dbg !14959
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14963
  br label %7, !dbg !14964

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()) #24, !dbg !14968
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14970
  %9 = load i8, i8* %8, align 1, !dbg !14971
  %10 = or i8 %9, -128, !dbg !14971
  store i8 %10, i8* %8, align 1, !dbg !14971
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14972, metadata !DIExpression()) #24, !dbg !14975
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14979, metadata !DIExpression()) #24, !dbg !14987
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()) #24, !dbg !14987
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14989
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14986, metadata !DIExpression()) #24, !dbg !14987
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14991
  br i1 %12, label %23, label %13, !dbg !14989

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14986, metadata !DIExpression()) #24, !dbg !14987
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14993
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14986, metadata !DIExpression()) #24, !dbg !14987
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14994
  %17 = icmp sgt i32 %16, 0, !dbg !14997
  br i1 %17, label %18, label %20, !dbg !14998

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14999
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !15001
  br label %25, !dbg !15002

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14991
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14986, metadata !DIExpression()) #24, !dbg !14987
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14991
  br i1 %22, label %23, label %13, !dbg !14989, !llvm.loop !15003

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15005
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !15006
  br label %25, !dbg !15007

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15008
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15009
  %28 = zext i1 %27 to i32, !dbg !15009
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15010
  ret void, !dbg !15011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15014, metadata !DIExpression()), !dbg !15015
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15016
  ret i1 %2, !dbg !15017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !15018 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15020, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15021, metadata !DIExpression()), !dbg !15022
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15023
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15024
  ret void, !dbg !15025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !15026 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15030, metadata !DIExpression()), !dbg !15031
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15032
  br i1 %2, label %6, label %3, !dbg !15032

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15033
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15033
  br label %6, !dbg !15032

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15032
  ret %struct._dnode* %7, !dbg !15034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15035 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15039, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15040, metadata !DIExpression()), !dbg !15043
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15044
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15044
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15041, metadata !DIExpression()), !dbg !15043
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15045
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15046
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15047
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15048
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15049
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15050
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15051
  ret void, !dbg !15052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15053 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15057, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15058, metadata !DIExpression()), !dbg !15059
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15060
  br i1 %3, label %6, label %4, !dbg !15061

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15062
  br label %6, !dbg !15061

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15061
  ret %struct._dnode* %7, !dbg !15063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15064 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15068, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15069, metadata !DIExpression()), !dbg !15071
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15072
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15072
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15070, metadata !DIExpression()), !dbg !15071
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15073
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15074
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15075
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15076
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15077
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15078
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15079
  ret void, !dbg !15080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15083, metadata !DIExpression()), !dbg !15085
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15086
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15093, metadata !DIExpression()) #24, !dbg !15095
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15096
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15097
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15097
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15084, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15098, metadata !DIExpression()) #24, !dbg !15104
  call void @llvm.dbg.value(metadata i32 %0, metadata !15103, metadata !DIExpression()) #24, !dbg !15104
  %6 = icmp eq i32 %0, 0, !dbg !15107
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15109
  br i1 %6, label %8, label %15, !dbg !15110

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15111
  br i1 %9, label %15, label %10, !dbg !15113

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15114
  br i1 %11, label %15, label %12, !dbg !15116

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15117
  %14 = icmp eq i32 %13, 0, !dbg !15117
  br i1 %14, label %18, label %15, !dbg !15119

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15120
  br i1 %16, label %18, label %17, !dbg !15123

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15124
  br label %18, !dbg !15126

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15109
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15109
  ret void, !dbg !15127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15128 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15132, metadata !DIExpression()), !dbg !15135
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15133, metadata !DIExpression()), !dbg !15135
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15136
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15134, metadata !DIExpression()), !dbg !15135
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15133, metadata !DIExpression()), !dbg !15135
  ret %struct.k_thread* %3, !dbg !15137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15140, metadata !DIExpression()), !dbg !15141
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15142
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15143
  %4 = xor i1 %3, true, !dbg !15144
  ret i1 %4, !dbg !15145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15146 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15148, metadata !DIExpression()), !dbg !15149
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15150
  %3 = load i16, i16* %2, align 2, !dbg !15150
  %4 = icmp ult i16 %3, 128, !dbg !15151
  %5 = zext i1 %4 to i32, !dbg !15151
  ret i32 %5, !dbg !15152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15153 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15159, metadata !DIExpression()), !dbg !15160
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15161
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15162
  %4 = xor i1 %3, true, !dbg !15163
  ret i1 %4, !dbg !15164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15165 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15171, metadata !DIExpression()), !dbg !15172
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15173
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15173
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15174
  ret i1 %4, !dbg !15175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15176 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15178, metadata !DIExpression()), !dbg !15180
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15179, metadata !DIExpression()), !dbg !15180
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15181
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15181
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15182
  br i1 %5, label %9, label %6, !dbg !15183

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15184
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15184
  br label %9, !dbg !15183

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15183
  ret %struct._dnode* %10, !dbg !15185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15186 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15190, metadata !DIExpression()), !dbg !15191
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15192
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15192
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15193
  ret i1 %4, !dbg !15194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15195 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15199, metadata !DIExpression()), !dbg !15202
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15203
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15203
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15200, metadata !DIExpression()), !dbg !15202
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15204
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15204
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15201, metadata !DIExpression()), !dbg !15202
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15205
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15206
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15207
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15208
  tail call fastcc void @sys_dnode_init.159(%struct._dnode* noundef %0) #26, !dbg !15209
  ret void, !dbg !15210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.159(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15211 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15213, metadata !DIExpression()), !dbg !15214
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15215
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15216
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15217
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15218
  ret void, !dbg !15219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15224, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i32 128, metadata !15225, metadata !DIExpression()), !dbg !15226
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15227
  %3 = load i8, i8* %2, align 1, !dbg !15227
  %4 = icmp slt i8 %3, 0, !dbg !15228
  ret i1 %4, !dbg !15229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15234, metadata !DIExpression()), !dbg !15236
  call void @llvm.dbg.value(metadata i32 %1, metadata !15235, metadata !DIExpression()), !dbg !15236
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15237
  ret i1 %3, !dbg !15238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15241, metadata !DIExpression()), !dbg !15242
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15243
  ret i1 %2, !dbg !15244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15247, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.value(metadata i32 %1, metadata !15248, metadata !DIExpression()), !dbg !15249
  %3 = icmp slt i32 %0, %1, !dbg !15250
  ret i1 %3, !dbg !15251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15252 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15254, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i32 0, metadata !15255, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15260
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15262, !srcloc !14794
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #24, !dbg !15264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15264
  call void @llvm.dbg.value(metadata i32 %3, metadata !14785, metadata !DIExpression()) #24, !dbg !15260
  call void @llvm.dbg.value(metadata i32 %3, metadata !15257, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()), !dbg !15259
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15265
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !15272
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15274, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15255, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()), !dbg !15259
  ret void, !dbg !15275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15278, metadata !DIExpression()), !dbg !15279
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15280
  br i1 %2, label %24, label %3, !dbg !15282

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15283
  br i1 %4, label %5, label %24, !dbg !15284

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()) #24, !dbg !15285
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15288
  %7 = load i8, i8* %6, align 1, !dbg !15289
  %8 = or i8 %7, -128, !dbg !15289
  store i8 %8, i8* %6, align 1, !dbg !15289
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14972, metadata !DIExpression()) #24, !dbg !15290
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14979, metadata !DIExpression()) #24, !dbg !15292
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()) #24, !dbg !15292
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15294
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14986, metadata !DIExpression()) #24, !dbg !15292
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15295
  br i1 %10, label %21, label %11, !dbg !15294

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14986, metadata !DIExpression()) #24, !dbg !15292
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15296
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14986, metadata !DIExpression()) #24, !dbg !15292
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15297
  %15 = icmp sgt i32 %14, 0, !dbg !15298
  br i1 %15, label %16, label %18, !dbg !15299

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15300
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15301
  br label %23, !dbg !15302

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15295
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14986, metadata !DIExpression()) #24, !dbg !15292
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15295
  br i1 %20, label %21, label %11, !dbg !15294, !llvm.loop !15303

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15305
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15306
  br label %23, !dbg !15307

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15308
  br label %24, !dbg !15309

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15311 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15313, metadata !DIExpression()), !dbg !15314
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15315
  br i1 %2, label %6, label %3, !dbg !15316

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15317
  %5 = xor i1 %4, true, !dbg !15316
  br label %6, !dbg !15316

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15319 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15321, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.value(metadata i32 0, metadata !15322, metadata !DIExpression()), !dbg !15326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15327
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15329, !srcloc !14794
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15329
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #24, !dbg !15331
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %3, metadata !14785, metadata !DIExpression()) #24, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %3, metadata !15324, metadata !DIExpression()), !dbg !15326
  call void @llvm.dbg.value(metadata i32 undef, metadata !15322, metadata !DIExpression()), !dbg !15326
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15332
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !15335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15335
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !15337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15339, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15322, metadata !DIExpression()), !dbg !15326
  call void @llvm.dbg.value(metadata i32 undef, metadata !15322, metadata !DIExpression()), !dbg !15326
  ret void, !dbg !15340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15341 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15343, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15346
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15348, !srcloc !14794
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #24, !dbg !15350
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15350
  call void @llvm.dbg.value(metadata i32 %3, metadata !14785, metadata !DIExpression()) #24, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %3, metadata !15344, metadata !DIExpression()), !dbg !15345
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15351
  br i1 %4, label %5, label %6, !dbg !15353

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !15354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15354
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !15357
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15359, !srcloc !14820
  br label %8, !dbg !15360

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.164(%struct.k_thread* noundef %0) #26, !dbg !15361
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15362
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15363
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15363
  br label %8, !dbg !15364

8:                                                ; preds = %6, %5
  ret void, !dbg !15364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15367, metadata !DIExpression()), !dbg !15368
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15369
  %3 = load i8, i8* %2, align 1, !dbg !15369
  %4 = and i8 %3, 4, !dbg !15370
  %5 = icmp eq i8 %4, 0, !dbg !15371
  ret i1 %5, !dbg !15372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.164(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15375, metadata !DIExpression()), !dbg !15376
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15377
  %3 = load i8, i8* %2, align 1, !dbg !15378
  %4 = and i8 %3, -5, !dbg !15378
  store i8 %4, i8* %2, align 1, !dbg !15378
  ret void, !dbg !15379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15380 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15383, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15382, metadata !DIExpression()), !dbg !15384
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15385
  br i1 %4, label %5, label %9, !dbg !15387

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15388
  br i1 %6, label %7, label %9, !dbg !15389

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15390, metadata !DIExpression()) #24, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #24, !dbg !15396
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15399
  br label %10, !dbg !15400

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !15401
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15401
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !15404
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15406, !srcloc !14820
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15412, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 %0, metadata !15414, metadata !DIExpression()), !dbg !15419
  %2 = icmp eq i32 %0, 0, !dbg !15421
  br i1 %2, label %3, label %6, !dbg !15422

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15423, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 %4, metadata !15426, metadata !DIExpression()) #24, !dbg !15431
  %5 = icmp eq i32 %4, 0, !dbg !15432
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15413
  ret i1 %7, !dbg !15433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15434 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15437
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15436, metadata !DIExpression()), !dbg !15438
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15439
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15440
  ret i1 %3, !dbg !15441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15444, metadata !DIExpression()), !dbg !15446
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %2, metadata !15445, metadata !DIExpression()), !dbg !15446
  ret i32 %2, !dbg !15448
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15449 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15451, metadata !DIExpression()), !dbg !15455
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15456
  call void @llvm.dbg.value(metadata i32 0, metadata !15452, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15458
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15460, !srcloc !14794
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15460
  call void @llvm.dbg.value(metadata i32 %4, metadata !14791, metadata !DIExpression()) #24, !dbg !15462
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15462
  call void @llvm.dbg.value(metadata i32 %4, metadata !14785, metadata !DIExpression()) #24, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %4, metadata !15454, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15452, metadata !DIExpression()), !dbg !15457
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15463
  br i1 %5, label %6, label %10, !dbg !15467

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()) #24, !dbg !15468
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15471
  %8 = load i8, i8* %7, align 1, !dbg !15472
  %9 = and i8 %8, 127, !dbg !15472
  store i8 %9, i8* %7, align 1, !dbg !15472
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14956, metadata !DIExpression()) #24, !dbg !15473
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15475
  br label %10, !dbg !15476

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15477
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15478
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15479
  %13 = zext i1 %12 to i32, !dbg !15479
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %4, metadata !14806, metadata !DIExpression()) #24, !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %4, metadata !14814, metadata !DIExpression()) #24, !dbg !15483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15485, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15452, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15452, metadata !DIExpression()), !dbg !15457
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15486
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15488
  br i1 %15, label %16, label %17, !dbg !15489

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15490
  br label %17, !dbg !15492

17:                                               ; preds = %16, %10
  ret void, !dbg !15493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15494 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15496, metadata !DIExpression()), !dbg !15497
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15498
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15499
  ret i32 %3, !dbg !15500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15503, metadata !DIExpression()), !dbg !15504
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15505
  %3 = load i8, i8* %2, align 1, !dbg !15506
  %4 = or i8 %3, 16, !dbg !15506
  store i8 %4, i8* %2, align 1, !dbg !15506
  ret void, !dbg !15507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15508 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15509, !srcloc !14794
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15509
  call void @llvm.dbg.value(metadata i32 %2, metadata !14791, metadata !DIExpression()) #24, !dbg !15511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15511
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15512
  ret void, !dbg !15513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15516, metadata !DIExpression()), !dbg !15517
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15518
  br i1 %2, label %3, label %5, !dbg !15520

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15521
  br label %6, !dbg !15523

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14814, metadata !DIExpression()) #24, !dbg !15524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15527, !srcloc !14820
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15531, metadata !DIExpression()), !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15534
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15536, !srcloc !14794
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15536
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #24, !dbg !15538
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15538
  call void @llvm.dbg.value(metadata i32 %3, metadata !14785, metadata !DIExpression()) #24, !dbg !15534
  call void @llvm.dbg.value(metadata i32 %3, metadata !15532, metadata !DIExpression()), !dbg !15533
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15539
  br i1 %4, label %6, label %5, !dbg !15541

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !15542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15542
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !15545
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15547, !srcloc !14820
  br label %8, !dbg !15548

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15549
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15550
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15551
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15551
  br label %8, !dbg !15552

8:                                                ; preds = %6, %5
  ret void, !dbg !15552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15555, metadata !DIExpression()), !dbg !15556
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15557
  %3 = load i8, i8* %2, align 1, !dbg !15557
  %4 = and i8 %3, 16, !dbg !15558
  %5 = icmp ne i8 %4, 0, !dbg !15559
  ret i1 %5, !dbg !15560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15561 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15563, metadata !DIExpression()), !dbg !15564
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15565
  %3 = load i8, i8* %2, align 1, !dbg !15566
  %4 = and i8 %3, -17, !dbg !15566
  store i8 %4, i8* %2, align 1, !dbg !15566
  ret void, !dbg !15567
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15568 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15578, metadata !DIExpression()), !dbg !15582
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15576, metadata !DIExpression()), !dbg !15582
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15577, metadata !DIExpression()), !dbg !15582
  call void @llvm.dbg.value(metadata i32 0, metadata !15579, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15584
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15586, !srcloc !14794
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15586
  call void @llvm.dbg.value(metadata i32 %5, metadata !14791, metadata !DIExpression()) #24, !dbg !15588
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15588
  call void @llvm.dbg.value(metadata i32 %5, metadata !14785, metadata !DIExpression()) #24, !dbg !15584
  call void @llvm.dbg.value(metadata i32 %5, metadata !15581, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata i32 undef, metadata !15579, metadata !DIExpression()), !dbg !15583
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15589
  call void @llvm.dbg.value(metadata i32 %5, metadata !14806, metadata !DIExpression()) #24, !dbg !15592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15592
  call void @llvm.dbg.value(metadata i32 %5, metadata !14814, metadata !DIExpression()) #24, !dbg !15594
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15596, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15579, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata i32 undef, metadata !15579, metadata !DIExpression()), !dbg !15583
  ret void, !dbg !15597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15598 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15602, metadata !DIExpression()), !dbg !15603
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15600, metadata !DIExpression()), !dbg !15603
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15601, metadata !DIExpression()), !dbg !15603
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !15604
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15605
  ret void, !dbg !15606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15611, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15612, metadata !DIExpression()), !dbg !15613
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15614
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15615
  %3 = icmp eq %union.anon* %1, null, !dbg !15616
  br i1 %3, label %21, label %4, !dbg !15618

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15619
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15621
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15622
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14979, metadata !DIExpression()) #24, !dbg !15623
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()) #24, !dbg !15623
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15625
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14986, metadata !DIExpression()) #24, !dbg !15623
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15626
  br i1 %8, label %19, label %9, !dbg !15625

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14986, metadata !DIExpression()) #24, !dbg !15623
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15627
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14986, metadata !DIExpression()) #24, !dbg !15623
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15628
  %13 = icmp sgt i32 %12, 0, !dbg !15629
  br i1 %13, label %14, label %16, !dbg !15630

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15631
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15632
  br label %21, !dbg !15633

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15626
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14986, metadata !DIExpression()) #24, !dbg !15623
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15626
  br i1 %18, label %19, label %9, !dbg !15625, !llvm.loop !15634

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15636
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15637
  br label %21, !dbg !15638

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15640 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15645, metadata !DIExpression()), !dbg !15646
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15644, metadata !DIExpression()), !dbg !15646
  %4 = icmp eq i64 %3, -1, !dbg !15647
  br i1 %4, label %6, label %5, !dbg !15649

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.167(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15650
  br label %6, !dbg !15652

6:                                                ; preds = %5, %2
  ret void, !dbg !15653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.167(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15654 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15657, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15656, metadata !DIExpression()), !dbg !15658
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15659
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15660
  ret void, !dbg !15661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15662 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15664, metadata !DIExpression()), !dbg !15672
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15673
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15673
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15665, metadata !DIExpression()), !dbg !15672
  call void @llvm.dbg.value(metadata i32 0, metadata !15666, metadata !DIExpression()), !dbg !15674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15675
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15677, !srcloc !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #24, !dbg !15679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()) #24, !dbg !15675
  call void @llvm.dbg.value(metadata i32 undef, metadata !15668, metadata !DIExpression()), !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !15666, metadata !DIExpression()), !dbg !15674
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15680
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15681
  %7 = load i8, i8* %6, align 1, !dbg !15681
  %8 = and i8 %7, 40, !dbg !15682
  %9 = icmp eq i8 %8, 0, !dbg !15682
  call void @llvm.dbg.value(metadata i1 %9, metadata !15669, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15683
  br i1 %9, label %10, label %17, !dbg !15684

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15685
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15685
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15685
  %14 = icmp eq %union.anon* %13, null, !dbg !15689
  br i1 %14, label %16, label %15, !dbg !15690

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15691
  br label %16, !dbg !15693

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.164(%struct.k_thread* noundef nonnull %3) #26, !dbg !15694
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15695
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15696
  br label %17, !dbg !15697

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15677
  call void @llvm.dbg.value(metadata i32 %18, metadata !14791, metadata !DIExpression()) #24, !dbg !15679
  call void @llvm.dbg.value(metadata i32 %18, metadata !14785, metadata !DIExpression()) #24, !dbg !15675
  call void @llvm.dbg.value(metadata i32 %18, metadata !15668, metadata !DIExpression()), !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14806, metadata !DIExpression()) #24, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15700
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15702, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15666, metadata !DIExpression()), !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !15666, metadata !DIExpression()), !dbg !15674
  ret void, !dbg !15703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15704 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15706, metadata !DIExpression()), !dbg !15707
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15708
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15709
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15710
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15711
  ret void, !dbg !15712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15715, metadata !DIExpression()), !dbg !15716
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15717
  %3 = load i8, i8* %2, align 1, !dbg !15718
  %4 = and i8 %3, -3, !dbg !15718
  store i8 %4, i8* %2, align 1, !dbg !15718
  ret void, !dbg !15719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15722, metadata !DIExpression()), !dbg !15723
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15724
  br i1 %2, label %3, label %7, !dbg !15726

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()) #24, !dbg !15727
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15730
  %5 = load i8, i8* %4, align 1, !dbg !15731
  %6 = and i8 %5, 127, !dbg !15731
  store i8 %6, i8* %4, align 1, !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14956, metadata !DIExpression()) #24, !dbg !15732
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15734
  br label %7, !dbg !15735

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15736
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15737
  %10 = zext i1 %9 to i32, !dbg !15737
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15738
  ret void, !dbg !15739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15742, metadata !DIExpression()), !dbg !15743
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15744
  %3 = load i8, i8* %2, align 1, !dbg !15745
  %4 = or i8 %3, 2, !dbg !15745
  store i8 %4, i8* %2, align 1, !dbg !15745
  ret void, !dbg !15746
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15747 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15749, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata i32 0, metadata !15750, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15755
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15757, !srcloc !14794
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15757
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #24, !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15759
  call void @llvm.dbg.value(metadata i32 %3, metadata !14785, metadata !DIExpression()) #24, !dbg !15755
  call void @llvm.dbg.value(metadata i32 %3, metadata !15752, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata i32 undef, metadata !15750, metadata !DIExpression()), !dbg !15754
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15760
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !15763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15763
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !15765
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15767, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15750, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata i32 undef, metadata !15750, metadata !DIExpression()), !dbg !15754
  ret void, !dbg !15768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15769 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15775, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.value(metadata i32 %0, metadata !15773, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15774, metadata !DIExpression()), !dbg !15780
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15781
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15782
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15783
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15784
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15785
  call void @llvm.dbg.value(metadata i32 %6, metadata !15776, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.value(metadata i32 0, metadata !15777, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15787
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15789, !srcloc !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #24, !dbg !15791
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15791
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()) #24, !dbg !15787
  call void @llvm.dbg.value(metadata i32 undef, metadata !15779, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.value(metadata i32 undef, metadata !15777, metadata !DIExpression()), !dbg !15786
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15792
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15796
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15797
  br i1 %10, label %11, label %12, !dbg !15798

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15799
  br label %12, !dbg !15801

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15789
  call void @llvm.dbg.value(metadata i32 %13, metadata !14791, metadata !DIExpression()) #24, !dbg !15791
  call void @llvm.dbg.value(metadata i32 %13, metadata !14785, metadata !DIExpression()) #24, !dbg !15787
  call void @llvm.dbg.value(metadata i32 %13, metadata !15779, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.value(metadata i32 undef, metadata !14806, metadata !DIExpression()) #24, !dbg !15802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15804
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15806, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15777, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.value(metadata i32 undef, metadata !15777, metadata !DIExpression()), !dbg !15786
  ret i32 %6, !dbg !15807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15808 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i64 undef, metadata !15815, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15812, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15814, metadata !DIExpression()), !dbg !15816
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15817
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15819
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15821, !srcloc !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #24, !dbg !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()) #24, !dbg !15819
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15824
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15825
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15390, metadata !DIExpression()) #24, !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #24, !dbg !15826
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15828
  ret i32 %9, !dbg !15829
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15830 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15834, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15835, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i32 0, metadata !15836, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15841
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15843, !srcloc !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #24, !dbg !15845
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15845
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()) #24, !dbg !15841
  call void @llvm.dbg.value(metadata i32 undef, metadata !15838, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15835, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15836, metadata !DIExpression()), !dbg !15840
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15846
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15835, metadata !DIExpression()), !dbg !15839
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15849
  br i1 %5, label %7, label %6, !dbg !15851

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15852
  br label %7, !dbg !15854

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15843
  call void @llvm.dbg.value(metadata i32 %8, metadata !14791, metadata !DIExpression()) #24, !dbg !15845
  call void @llvm.dbg.value(metadata i32 %8, metadata !14785, metadata !DIExpression()) #24, !dbg !15841
  call void @llvm.dbg.value(metadata i32 %8, metadata !15838, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.value(metadata i32 undef, metadata !14806, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15859, !srcloc !14820
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15835, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15836, metadata !DIExpression()), !dbg !15840
  ret %struct.k_thread* %4, !dbg !15860
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15861 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15863, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15864, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata i32 0, metadata !15865, metadata !DIExpression()), !dbg !15869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15870
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15872, !srcloc !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #24, !dbg !15874
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15874
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()) #24, !dbg !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()), !dbg !15869
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15864, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()), !dbg !15869
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15875
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15864, metadata !DIExpression()), !dbg !15868
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15878
  br i1 %5, label %8, label %6, !dbg !15880

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15881
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15883
  br label %8, !dbg !15884

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15872
  call void @llvm.dbg.value(metadata i32 %9, metadata !14791, metadata !DIExpression()) #24, !dbg !15874
  call void @llvm.dbg.value(metadata i32 %9, metadata !14785, metadata !DIExpression()) #24, !dbg !15870
  call void @llvm.dbg.value(metadata i32 %9, metadata !15867, metadata !DIExpression()), !dbg !15869
  call void @llvm.dbg.value(metadata i32 undef, metadata !14806, metadata !DIExpression()) #24, !dbg !15885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15885
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15887
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15889, !srcloc !14820
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15864, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()), !dbg !15869
  ret %struct.k_thread* %4, !dbg !15890
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15893, metadata !DIExpression()), !dbg !15894
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15749, metadata !DIExpression()) #24, !dbg !15895
  call void @llvm.dbg.value(metadata i32 0, metadata !15750, metadata !DIExpression()) #24, !dbg !15897
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15898
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15900, !srcloc !14794
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15900
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #24, !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %3, metadata !14785, metadata !DIExpression()) #24, !dbg !15898
  call void @llvm.dbg.value(metadata i32 %3, metadata !15752, metadata !DIExpression()) #24, !dbg !15897
  call void @llvm.dbg.value(metadata i32 undef, metadata !15750, metadata !DIExpression()) #24, !dbg !15897
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15903
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !15904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !15906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15908, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15750, metadata !DIExpression()) #24, !dbg !15897
  call void @llvm.dbg.value(metadata i32 undef, metadata !15750, metadata !DIExpression()) #24, !dbg !15897
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15909
  ret void, !dbg !15910
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15911 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15913, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i32 %1, metadata !15914, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i8 0, metadata !15915, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i32 0, metadata !15916, metadata !DIExpression()), !dbg !15920
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15921
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15923, !srcloc !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #24, !dbg !15925
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15925
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()) #24, !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()), !dbg !15920
  call void @llvm.dbg.value(metadata i8 poison, metadata !15915, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()), !dbg !15920
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15926
  call void @llvm.dbg.value(metadata i1 %6, metadata !15915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15919
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15929

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()) #24, !dbg !15930
  %11 = load i8, i8* %4, align 1, !dbg !15936
  %12 = and i8 %11, 127, !dbg !15936
  store i8 %12, i8* %4, align 1, !dbg !15936
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14956, metadata !DIExpression()) #24, !dbg !15937
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15939
  store i8 %9, i8* %8, align 2, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()) #24, !dbg !15941
  %13 = load i8, i8* %4, align 1, !dbg !15943
  %14 = or i8 %13, -128, !dbg !15943
  store i8 %14, i8* %4, align 1, !dbg !15943
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14972, metadata !DIExpression()) #24, !dbg !15944
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14979, metadata !DIExpression()) #24, !dbg !15946
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()) #24, !dbg !15946
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15948
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14986, metadata !DIExpression()) #24, !dbg !15946
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15949
  br i1 %16, label %26, label %17, !dbg !15948

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14986, metadata !DIExpression()) #24, !dbg !15946
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15950
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14986, metadata !DIExpression()) #24, !dbg !15946
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15951
  %21 = icmp sgt i32 %20, 0, !dbg !15952
  br i1 %21, label %22, label %23, !dbg !15953

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15954
  br label %27, !dbg !15955

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15949
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14986, metadata !DIExpression()) #24, !dbg !15946
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15949
  br i1 %25, label %26, label %17, !dbg !15948, !llvm.loop !15956

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15958
  br label %27, !dbg !15959

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15960
  br label %29, !dbg !15961

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15962
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %30, metadata !14791, metadata !DIExpression()) #24, !dbg !15925
  call void @llvm.dbg.value(metadata i32 %30, metadata !14785, metadata !DIExpression()) #24, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %30, metadata !15918, metadata !DIExpression()), !dbg !15920
  call void @llvm.dbg.value(metadata i32 undef, metadata !14806, metadata !DIExpression()) #24, !dbg !15964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !15964
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15966
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15968, !srcloc !14820
  call void @llvm.dbg.value(metadata i8 poison, metadata !15915, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()), !dbg !15920
  ret i1 %6, !dbg !15969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15974, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i32 %1, metadata !15975, metadata !DIExpression()), !dbg !15977
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15978
  call void @llvm.dbg.value(metadata i1 %3, metadata !15976, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15977
  br i1 %3, label %4, label %12, !dbg !15979

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15981
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15982
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15982
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15982
  %9 = load i8, i8* %8, align 1, !dbg !15982
  %10 = icmp eq i8 %9, 0, !dbg !15983
  br i1 %10, label %11, label %12, !dbg !15984

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15985
  br label %12, !dbg !15987

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15989 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15991, metadata !DIExpression()), !dbg !15994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !15995
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15997, !srcloc !14794
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15997
  call void @llvm.dbg.value(metadata i32 %2, metadata !14791, metadata !DIExpression()) #24, !dbg !15999
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15999
  call void @llvm.dbg.value(metadata i32 %2, metadata !14785, metadata !DIExpression()) #24, !dbg !15995
  call void @llvm.dbg.value(metadata i32 %2, metadata !15993, metadata !DIExpression()), !dbg !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()), !dbg !15994
  tail call fastcc void @z_sched_lock() #26, !dbg !16000
  call void @llvm.dbg.value(metadata i32 %2, metadata !14806, metadata !DIExpression()) #24, !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %2, metadata !14814, metadata !DIExpression()) #24, !dbg !16005
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16007, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !15991, metadata !DIExpression()), !dbg !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()), !dbg !15994
  ret void, !dbg !16008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16009 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16010
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16011
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16011
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16011
  %5 = load i8, i8* %4, align 1, !dbg !16012
  %6 = add i8 %5, -1, !dbg !16012
  store i8 %6, i8* %4, align 1, !dbg !16012
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16013, !srcloc !16015
  ret void, !dbg !16016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16017 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16019, metadata !DIExpression()), !dbg !16022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !16023
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16025, !srcloc !14794
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16025
  call void @llvm.dbg.value(metadata i32 %2, metadata !14791, metadata !DIExpression()) #24, !dbg !16027
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16027
  call void @llvm.dbg.value(metadata i32 %2, metadata !14785, metadata !DIExpression()) #24, !dbg !16023
  call void @llvm.dbg.value(metadata i32 %2, metadata !16021, metadata !DIExpression()), !dbg !16022
  call void @llvm.dbg.value(metadata i32 undef, metadata !16019, metadata !DIExpression()), !dbg !16022
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16028
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16031
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16031
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16031
  %7 = load i8, i8* %6, align 1, !dbg !16032
  %8 = add i8 %7, 1, !dbg !16032
  store i8 %8, i8* %6, align 1, !dbg !16032
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16033
  call void @llvm.dbg.value(metadata i32 %2, metadata !14806, metadata !DIExpression()) #24, !dbg !16034
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !16034
  call void @llvm.dbg.value(metadata i32 %2, metadata !14814, metadata !DIExpression()) #24, !dbg !16036
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16038, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 1, metadata !16019, metadata !DIExpression()), !dbg !16022
  call void @llvm.dbg.value(metadata i32 undef, metadata !16019, metadata !DIExpression()), !dbg !16022
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16039
  ret void, !dbg !16040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !16041 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16042
  ret %struct.k_thread* %1, !dbg !16043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !16044 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16048, metadata !DIExpression()), !dbg !16053
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16049, metadata !DIExpression()), !dbg !16053
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16054
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16050, metadata !DIExpression()), !dbg !16053
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16055
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16051, metadata !DIExpression()), !dbg !16053
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16056
  call void @llvm.dbg.value(metadata i32 %5, metadata !16052, metadata !DIExpression()), !dbg !16053
  %6 = icmp sgt i32 %5, 0, !dbg !16057
  br i1 %6, label %17, label %7, !dbg !16059

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16060
  br i1 %8, label %17, label %9, !dbg !16062

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16063
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16063
  %12 = load i32, i32* %11, align 8, !dbg !16063
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16065
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16065
  %15 = load i32, i32* %14, align 8, !dbg !16065
  %16 = icmp ult i32 %12, %15, !dbg !16066
  br label %17, !dbg !16067

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16068
  ret i1 %18, !dbg !16069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16070 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16087, metadata !DIExpression()), !dbg !16102
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16088, metadata !DIExpression()), !dbg !16102
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16103
  %5 = load i32, i32* %4, align 4, !dbg !16104
  %6 = add nsw i32 %5, 1, !dbg !16104
  store i32 %6, i32* %4, align 4, !dbg !16104
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16105
  store i32 %5, i32* %7, align 8, !dbg !16106
  %8 = load i32, i32* %4, align 4, !dbg !16107
  %9 = icmp eq i32 %8, 0, !dbg !16108
  br i1 %9, label %10, label %32, !dbg !16109

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16110
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16110
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16090, metadata !DIExpression()), !dbg !16110
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16110
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16110
  %14 = load i32, i32* %13, align 4, !dbg !16110
  %15 = shl i32 %14, 2, !dbg !16110
  %16 = alloca i8, i32 %15, align 8, !dbg !16110
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16110
  store i8* %16, i8** %17, align 4, !dbg !16110
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16110
  %19 = alloca i8, i32 %14, align 8, !dbg !16110
  store i8* %19, i8** %18, align 4, !dbg !16110
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16110
  store i32 -1, i32* %20, align 4, !dbg !16110
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16111
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16099, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16089, metadata !DIExpression()), !dbg !16102
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16113
  br i1 %22, label %23, label %24, !dbg !16110

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16113
  br label %32, !dbg !16114

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16089, metadata !DIExpression()), !dbg !16102
  %26 = load i32, i32* %4, align 4, !dbg !16115
  %27 = add nsw i32 %26, 1, !dbg !16115
  store i32 %27, i32* %4, align 4, !dbg !16115
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16117
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16117
  store i32 %26, i32* %29, align 8, !dbg !16118
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16111
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16099, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16089, metadata !DIExpression()), !dbg !16102
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16113
  br i1 %31, label %23, label %24, !dbg !16110, !llvm.loop !16119

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16121
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16122
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16123
  ret void, !dbg !16124
}

; Function Attrs: optsize
declare !dbg !16125 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16130 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16133 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16135, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16136, metadata !DIExpression()), !dbg !16137
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16138
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16139
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16140
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16141
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16141
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16143
  br i1 %7, label %8, label %10, !dbg !16144

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16145
  store i32 0, i32* %9, align 4, !dbg !16147
  br label %10, !dbg !16148

10:                                               ; preds = %8, %2
  ret void, !dbg !16149
}

; Function Attrs: optsize
declare !dbg !16150 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16151 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16155, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16156, metadata !DIExpression()), !dbg !16158
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16159
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16160
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16157, metadata !DIExpression()), !dbg !16158
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16156, metadata !DIExpression()), !dbg !16158
  ret %struct.k_thread* %4, !dbg !16161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16162 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16166, metadata !DIExpression()), !dbg !16167
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16168
  ret %struct.rbnode* %2, !dbg !16169
}

; Function Attrs: optsize
declare !dbg !16170 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16173 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16183, metadata !DIExpression()), !dbg !16187
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16188
  %3 = load i32, i32* %2, align 4, !dbg !16188
  %4 = icmp eq i32 %3, 0, !dbg !16190
  br i1 %4, label %10, label %5, !dbg !16191

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16184, metadata !DIExpression()), !dbg !16187
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16192, !range !3865
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16193
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16185, metadata !DIExpression()), !dbg !16187
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16194
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16186, metadata !DIExpression()), !dbg !16187
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16184, metadata !DIExpression()), !dbg !16187
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16187
  ret %struct.k_thread* %11, !dbg !16195
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16196 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16200, metadata !DIExpression()), !dbg !16203
  call void @llvm.dbg.value(metadata i32 0, metadata !16201, metadata !DIExpression()), !dbg !16203
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16204
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16202, metadata !DIExpression()), !dbg !16203
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16205
  br i1 %3, label %8, label %4, !dbg !16206

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16207
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16209
  call void @llvm.dbg.value(metadata i32 1, metadata !16201, metadata !DIExpression()), !dbg !16203
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16204
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16202, metadata !DIExpression()), !dbg !16203
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16205
  br i1 %7, label %8, label %4, !dbg !16206, !llvm.loop !16210

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16203
  ret i32 %9, !dbg !16212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16213 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16215, metadata !DIExpression()), !dbg !16216
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16217
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16218
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16219
  ret %struct.k_thread* %4, !dbg !16220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16221 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16230, metadata !DIExpression()), !dbg !16231
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16232
  tail call fastcc void @sys_dlist_init.178(%struct._dnode* noundef nonnull %2) #26, !dbg !16233
  ret void, !dbg !16234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.178(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16235 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16239, metadata !DIExpression()), !dbg !16240
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16241
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16242
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16243
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16244
  ret void, !dbg !16245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16246 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16247
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16248
  ret void, !dbg !16249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16250 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16255, metadata !DIExpression()), !dbg !16256
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16257
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16257
  %4 = load i8, i8* %3, align 2, !dbg !16257
  %5 = sext i8 %4 to i32, !dbg !16258
  ret i32 %5, !dbg !16259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16260 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16264, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata i32 %1, metadata !16265, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16266, metadata !DIExpression()), !dbg !16267
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16268
  ret void, !dbg !16269
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16270 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16271
  br i1 %1, label %8, label %2, !dbg !16272

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16273
  br i1 %3, label %8, label %4, !dbg !16274

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16275
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16276
  %7 = xor i1 %6, true, !dbg !16274
  br label %8, !dbg !16274

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16278 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16279, !range !7137
  %2 = icmp eq i8 %1, 0, !dbg !16279
  ret i1 %2, !dbg !16280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16281 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !16284
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16286, !srcloc !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #24, !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()) #24, !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !16283, metadata !DIExpression()), !dbg !16289
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16290
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14948, metadata !DIExpression()) #24, !dbg !16293
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16295
  %4 = load i8, i8* %3, align 1, !dbg !16296
  %5 = and i8 %4, 127, !dbg !16296
  store i8 %5, i8* %3, align 1, !dbg !16296
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14956, metadata !DIExpression()) #24, !dbg !16297
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16299
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16300
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14965, metadata !DIExpression()) #24, !dbg !16301
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16303
  %8 = load i8, i8* %7, align 1, !dbg !16304
  %9 = or i8 %8, -128, !dbg !16304
  store i8 %9, i8* %7, align 1, !dbg !16304
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14972, metadata !DIExpression()) #24, !dbg !16305
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14979, metadata !DIExpression()) #24, !dbg !16307
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14985, metadata !DIExpression()) #24, !dbg !16307
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16309
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14986, metadata !DIExpression()) #24, !dbg !16307
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16310
  br i1 %11, label %22, label %12, !dbg !16309

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14986, metadata !DIExpression()) #24, !dbg !16307
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16311
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14986, metadata !DIExpression()) #24, !dbg !16307
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16312
  %16 = icmp sgt i32 %15, 0, !dbg !16313
  br i1 %16, label %17, label %19, !dbg !16314

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16315
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16316
  br label %24, !dbg !16317

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16310
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14986, metadata !DIExpression()) #24, !dbg !16307
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16310
  br i1 %21, label %22, label %12, !dbg !16309, !llvm.loop !16318

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16320
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16321
  br label %24, !dbg !16322

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16286
  call void @llvm.dbg.value(metadata i32 %25, metadata !14791, metadata !DIExpression()) #24, !dbg !16288
  call void @llvm.dbg.value(metadata i32 %25, metadata !14785, metadata !DIExpression()) #24, !dbg !16284
  call void @llvm.dbg.value(metadata i32 %25, metadata !16283, metadata !DIExpression()), !dbg !16289
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16323
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #24, !dbg !16324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #24, !dbg !16324
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16326
  ret void, !dbg !16327
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16328 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16332, metadata !DIExpression()), !dbg !16335
  %3 = icmp eq i64 %2, -1, !dbg !16336
  br i1 %3, label %4, label %6, !dbg !16338

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16339
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16341
  br label %11, !dbg !16342

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16333, metadata !DIExpression()), !dbg !16335
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16343
  %8 = sext i32 %7 to i64, !dbg !16343
  call void @llvm.dbg.value(metadata i64 %8, metadata !16333, metadata !DIExpression()), !dbg !16335
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16344
  %10 = trunc i64 %9 to i32, !dbg !16344
  call void @llvm.dbg.value(metadata i32 %10, metadata !16334, metadata !DIExpression()), !dbg !16335
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16335
  ret i32 %12, !dbg !16345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16350, metadata !DIExpression()), !dbg !16351
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16352, !srcloc !16354
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16355
  ret void, !dbg !16356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16357 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16361, metadata !DIExpression()), !dbg !16365
  %2 = icmp eq i64 %0, 0, !dbg !16366
  br i1 %2, label %3, label %4, !dbg !16368

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16369
  br label %29, !dbg !16371

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16363, metadata !DIExpression()), !dbg !16365
  %5 = icmp sgt i64 %0, -3, !dbg !16372
  br i1 %5, label %6, label %10, !dbg !16374

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16375
  %8 = trunc i64 %0 to i32, !dbg !16377
  %9 = add i32 %7, %8, !dbg !16377
  call void @llvm.dbg.value(metadata i32 %9, metadata !16362, metadata !DIExpression()), !dbg !16365
  br label %13, !dbg !16378

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16379
  %12 = sub i32 -2, %11, !dbg !16379
  call void @llvm.dbg.value(metadata i32 %12, metadata !16362, metadata !DIExpression()), !dbg !16365
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16381
  call void @llvm.dbg.value(metadata i32 %14, metadata !16362, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !16382
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16384, !srcloc !14794
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %16, metadata !14791, metadata !DIExpression()) #24, !dbg !16386
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16386
  call void @llvm.dbg.value(metadata i32 %16, metadata !14785, metadata !DIExpression()) #24, !dbg !16382
  call void @llvm.dbg.value(metadata i32 %16, metadata !16364, metadata !DIExpression()), !dbg !16365
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16387
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16388
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !16389
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16390
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16391
  tail call fastcc void @z_add_thread_timeout.167(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !16391
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16392
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !16393
  call void @llvm.dbg.value(metadata i32 %16, metadata !15390, metadata !DIExpression()) #24, !dbg !16394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #24, !dbg !16394
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16396
  %22 = zext i32 %14 to i64, !dbg !16397
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16398
  %24 = zext i32 %23 to i64, !dbg !16398
  %25 = sub nsw i64 %22, %24, !dbg !16399
  call void @llvm.dbg.value(metadata i64 %25, metadata !16361, metadata !DIExpression()), !dbg !16365
  %26 = icmp sgt i64 %25, 0, !dbg !16400
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16400
  %28 = trunc i64 %27 to i32, !dbg !16400
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16365
  ret i32 %30, !dbg !16401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16402 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16404, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i64 %0, metadata !14826, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i32 10000, metadata !14829, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i32 1000, metadata !14830, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i8 1, metadata !14831, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i1 false, metadata !14832, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  call void @llvm.dbg.value(metadata i1 false, metadata !14833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  call void @llvm.dbg.value(metadata i8 0, metadata !14834, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i1 false, metadata !14835, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  call void @llvm.dbg.value(metadata i1 true, metadata !14836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  call void @llvm.dbg.value(metadata i64 0, metadata !14837, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i64 0, metadata !14837, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i64 %0, metadata !14826, metadata !DIExpression()), !dbg !16406
  %2 = udiv i64 %0, 10, !dbg !16408
  ret i64 %2, !dbg !16412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16413 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16414, !srcloc !16416
  tail call void @z_impl_k_yield() #26, !dbg !16417
  ret void, !dbg !16418
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16423, metadata !DIExpression()), !dbg !16425
  %2 = sext i32 %0 to i64, !dbg !16426
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16427
  call void @llvm.dbg.value(metadata i64 %3, metadata !16424, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16425
  %4 = shl i64 %3, 32, !dbg !16428
  %5 = ashr exact i64 %4, 32, !dbg !16428
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16429
  call void @llvm.dbg.value(metadata i32 %6, metadata !16424, metadata !DIExpression()), !dbg !16425
  %7 = sext i32 %6 to i64, !dbg !16430
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16431
  %9 = trunc i64 %8 to i32, !dbg !16431
  ret i32 %9, !dbg !16432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16433 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16435, metadata !DIExpression()), !dbg !16436
  call void @llvm.dbg.value(metadata i64 %0, metadata !14826, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14829, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i32 10000, metadata !14830, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i8 1, metadata !14831, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i1 false, metadata !14832, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16437
  call void @llvm.dbg.value(metadata i1 true, metadata !14833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16437
  call void @llvm.dbg.value(metadata i8 0, metadata !14834, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i1 false, metadata !14835, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16437
  call void @llvm.dbg.value(metadata i1 true, metadata !14836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16437
  call void @llvm.dbg.value(metadata i64 0, metadata !14837, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i64 0, metadata !14837, metadata !DIExpression()), !dbg !16437
  %2 = add i64 %0, 99, !dbg !16439
  call void @llvm.dbg.value(metadata i64 %2, metadata !14826, metadata !DIExpression()), !dbg !16437
  %3 = udiv i64 %2, 100, !dbg !16440
  ret i64 %3, !dbg !16441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16442 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16444, metadata !DIExpression()), !dbg !16445
  call void @llvm.dbg.value(metadata i64 %0, metadata !14826, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata i32 10000, metadata !14829, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14830, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata i8 1, metadata !14831, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata i1 false, metadata !14832, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16446
  call void @llvm.dbg.value(metadata i1 false, metadata !14833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16446
  call void @llvm.dbg.value(metadata i8 0, metadata !14834, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata i1 true, metadata !14835, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16446
  call void @llvm.dbg.value(metadata i1 false, metadata !14836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16446
  call void @llvm.dbg.value(metadata i64 0, metadata !14837, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata i64 0, metadata !14837, metadata !DIExpression()), !dbg !16446
  %2 = mul i64 %0, 100, !dbg !16448
  ret i64 %2, !dbg !16450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16453, metadata !DIExpression()), !dbg !16454
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16455
  br i1 %2, label %14, label %3, !dbg !16457

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16458
  %5 = icmp slt i32 %4, 0, !dbg !16460
  br i1 %5, label %6, label %10, !dbg !16461

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16462
  %8 = load i8, i8* %7, align 1, !dbg !16462
  %9 = icmp eq i8 %8, 16, !dbg !16465
  br i1 %9, label %10, label %14, !dbg !16466

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16467
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16468
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16469, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 %11, metadata !15426, metadata !DIExpression()) #24, !dbg !16473
  %12 = icmp eq i32 %11, 0, !dbg !16474
  br i1 %12, label %13, label %14, !dbg !16475

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16476
  br label %14, !dbg !16478

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16480 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16482, metadata !DIExpression()), !dbg !16483
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16484
  %3 = load i8, i8* %2, align 1, !dbg !16484
  %4 = and i8 %3, 2, !dbg !16485
  %5 = icmp ne i8 %4, 0, !dbg !16486
  ret i1 %5, !dbg !16487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16488 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16493
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16492, metadata !DIExpression()), !dbg !16494
  ret %struct.k_thread* %1, !dbg !16495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16496 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16497, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 %1, metadata !15426, metadata !DIExpression()) #24, !dbg !16500
  %2 = icmp eq i32 %1, 0, !dbg !16501
  br i1 %2, label %3, label %8, !dbg !16502

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16503
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16504
  %6 = icmp ne i32 %5, 0, !dbg !16502
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16508, metadata !DIExpression()), !dbg !16510
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !16511
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16513, !srcloc !14794
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16513
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #24, !dbg !16515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16515
  call void @llvm.dbg.value(metadata i32 %3, metadata !14785, metadata !DIExpression()) #24, !dbg !16511
  call void @llvm.dbg.value(metadata i32 %3, metadata !16509, metadata !DIExpression()), !dbg !16510
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16516
  %5 = load i8, i8* %4, align 4, !dbg !16516
  %6 = and i8 %5, 1, !dbg !16518
  %7 = icmp eq i8 %6, 0, !dbg !16519
  br i1 %7, label %9, label %8, !dbg !16520

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !16521
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !16524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16526, !srcloc !14820
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16527, !srcloc !16529
  br label %24, !dbg !16530

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16531
  %11 = load i8, i8* %10, align 1, !dbg !16531
  %12 = and i8 %11, 8, !dbg !16533
  %13 = icmp eq i8 %12, 0, !dbg !16534
  br i1 %13, label %15, label %14, !dbg !16535

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !16536
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !16539
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16541, !srcloc !14820
  br label %24, !dbg !16542

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16543
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16544
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16546
  br i1 %17, label %18, label %23, !dbg !16547

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16548, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 %19, metadata !15426, metadata !DIExpression()) #24, !dbg !16551
  %20 = icmp eq i32 %19, 0, !dbg !16552
  br i1 %20, label %21, label %23, !dbg !16553

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15390, metadata !DIExpression()) #24, !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #24, !dbg !16554
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16557
  br label %23, !dbg !16558

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()) #24, !dbg !16559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %3, metadata !14814, metadata !DIExpression()) #24, !dbg !16561
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16563, !srcloc !14820
  br label %24, !dbg !16564

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16567, metadata !DIExpression()), !dbg !16568
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16569
  %3 = load i8, i8* %2, align 1, !dbg !16569
  %4 = and i8 %3, 8, !dbg !16571
  %5 = icmp eq i8 %4, 0, !dbg !16572
  br i1 %5, label %6, label %20, !dbg !16573

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16574
  %8 = or i8 %7, 8, !dbg !16574
  store i8 %8, i8* %2, align 1, !dbg !16574
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16576
  br i1 %9, label %10, label %12, !dbg !16578

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()) #24, !dbg !16579
  %11 = and i8 %8, 95, !dbg !16582
  store i8 %11, i8* %2, align 1, !dbg !16582
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14956, metadata !DIExpression()) #24, !dbg !16583
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16585
  br label %12, !dbg !16586

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16587
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16587
  %15 = icmp eq %union.anon* %14, null, !dbg !16589
  br i1 %15, label %17, label %16, !dbg !16590

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16591
  br label %17, !dbg !16593

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16594
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16595
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16596
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16597
  br label %20, !dbg !16598

20:                                               ; preds = %17, %1
  ret void, !dbg !16599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16600 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16604, metadata !DIExpression()), !dbg !16606
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16607
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16605, metadata !DIExpression()), !dbg !16606
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16608
  br i1 %3, label %10, label %4, !dbg !16609

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16610
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16612
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16613, metadata !DIExpression()), !dbg !16619
  call void @llvm.dbg.value(metadata i32 0, metadata !16618, metadata !DIExpression()), !dbg !16619
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16621
  store i32 0, i32* %7, align 4, !dbg !16622
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16623
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16607
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16605, metadata !DIExpression()), !dbg !16606
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16608
  br i1 %9, label %10, label %4, !dbg !16609, !llvm.loop !16624

10:                                               ; preds = %4, %1
  ret void, !dbg !16626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16627 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16632, metadata !DIExpression()), !dbg !16635
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16631, metadata !DIExpression()), !dbg !16635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !16636
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16638, !srcloc !14794
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16638
  call void @llvm.dbg.value(metadata i32 %4, metadata !14791, metadata !DIExpression()) #24, !dbg !16640
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16640
  call void @llvm.dbg.value(metadata i32 %4, metadata !14785, metadata !DIExpression()) #24, !dbg !16636
  call void @llvm.dbg.value(metadata i32 %4, metadata !16633, metadata !DIExpression()), !dbg !16635
  call void @llvm.dbg.value(metadata i32 0, metadata !16634, metadata !DIExpression()), !dbg !16635
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16641
  %6 = load i8, i8* %5, align 1, !dbg !16641
  %7 = and i8 %6, 8, !dbg !16643
  %8 = icmp eq i8 %7, 0, !dbg !16644
  br i1 %8, label %9, label %24, !dbg !16645

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16632, metadata !DIExpression()), !dbg !16635
  %11 = icmp eq i64 %10, 0, !dbg !16646
  br i1 %11, label %24, label %12, !dbg !16648

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16649
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16651
  br i1 %14, label %24, label %15, !dbg !16652

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16653
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16653
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16654
  %19 = icmp eq %union.anon* %17, %18, !dbg !16655
  br i1 %19, label %24, label %20, !dbg !16656

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16657
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !16659
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16660
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16661
  call void @llvm.dbg.value(metadata i32 %4, metadata !15390, metadata !DIExpression()) #24, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #24, !dbg !16662
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16664
  call void @llvm.dbg.value(metadata i32 %23, metadata !16634, metadata !DIExpression()), !dbg !16635
  br label %26, !dbg !16665

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16666
  call void @llvm.dbg.value(metadata i32 %25, metadata !16634, metadata !DIExpression()), !dbg !16635
  call void @llvm.dbg.value(metadata i32 %4, metadata !14806, metadata !DIExpression()) #24, !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !16667
  call void @llvm.dbg.value(metadata i32 %4, metadata !14814, metadata !DIExpression()) #24, !dbg !16669
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16671, !srcloc !14820
  br label %26, !dbg !16672

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16635
  ret i32 %27, !dbg !16673
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16674 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16678, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 %1, metadata !16679, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i8* %2, metadata !16680, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i8 0, metadata !16682, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 0, metadata !16683, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14779, metadata !DIExpression()) #24, !dbg !16688
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16690, !srcloc !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #24, !dbg !16692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14785, metadata !DIExpression()) #24, !dbg !16688
  call void @llvm.dbg.value(metadata i32 undef, metadata !16685, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i8 poison, metadata !16682, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !16683, metadata !DIExpression()), !dbg !16687
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16693
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16681, metadata !DIExpression()), !dbg !16686
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16696
  br i1 %7, label %12, label %8, !dbg !16698

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16699, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata i32 %1, metadata !16705, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata i8* %2, metadata !16706, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16613, metadata !DIExpression()), !dbg !16710
  call void @llvm.dbg.value(metadata i32 %1, metadata !16618, metadata !DIExpression()), !dbg !16710
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16712
  store i32 %1, i32* %9, align 4, !dbg !16713
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16714
  store i8* %2, i8** %10, align 4, !dbg !16715
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16716
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16717
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16718
  call void @llvm.dbg.value(metadata i8 1, metadata !16682, metadata !DIExpression()), !dbg !16686
  br label %12, !dbg !16719

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16690
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %14, metadata !14791, metadata !DIExpression()) #24, !dbg !16692
  call void @llvm.dbg.value(metadata i32 %14, metadata !14785, metadata !DIExpression()) #24, !dbg !16688
  call void @llvm.dbg.value(metadata i32 %14, metadata !16685, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i8 poison, metadata !16682, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14806, metadata !DIExpression()) #24, !dbg !16720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #24, !dbg !16720
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !16722
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16724, !srcloc !14820
  call void @llvm.dbg.value(metadata i32 undef, metadata !16683, metadata !DIExpression()), !dbg !16687
  ret i1 %13, !dbg !16725
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16726 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()), !dbg !16737
  call void @llvm.dbg.value(metadata i64 undef, metadata !16734, metadata !DIExpression()), !dbg !16737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16731, metadata !DIExpression()), !dbg !16737
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16733, metadata !DIExpression()), !dbg !16737
  call void @llvm.dbg.value(metadata i8** %4, metadata !16735, metadata !DIExpression()), !dbg !16737
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16738
  call void @llvm.dbg.value(metadata i32 %6, metadata !16736, metadata !DIExpression()), !dbg !16737
  %7 = icmp eq i8** %4, null, !dbg !16739
  br i1 %7, label %12, label %8, !dbg !16741

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16742
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16744
  %11 = load i8*, i8** %10, align 4, !dbg !16744
  store i8* %11, i8** %4, align 4, !dbg !16745
  br label %12, !dbg !16746

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16748 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16750
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16751
  ret void, !dbg !16752
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16753 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16763, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16761, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16762, metadata !DIExpression()), !dbg !16780
  %5 = icmp eq i64 %4, -1, !dbg !16781
  br i1 %5, label %55, label %6, !dbg !16783

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16784
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16785
  call void @llvm.dbg.value(metadata i32 0, metadata !16764, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !16794
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16796, !srcloc !16802
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16796
  call void @llvm.dbg.value(metadata i32 %9, metadata !16799, metadata !DIExpression()) #24, !dbg !16803
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !16803
  call void @llvm.dbg.value(metadata i32 %9, metadata !16793, metadata !DIExpression()) #24, !dbg !16794
  call void @llvm.dbg.value(metadata i32 %9, metadata !16770, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16764, metadata !DIExpression()), !dbg !16786
  %10 = icmp slt i64 %4, -1, !dbg !16804
  br i1 %10, label %11, label %17, !dbg !16805

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16806
  %13 = add i64 %4, %12, !dbg !16807
  %14 = sub i64 -2, %13, !dbg !16807
  call void @llvm.dbg.value(metadata i64 %14, metadata !16774, metadata !DIExpression()), !dbg !16808
  %15 = icmp sgt i64 %14, 1, !dbg !16809
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16809
  br label %22, !dbg !16810

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16811
  %19 = tail call fastcc i32 @elapsed.191() #26, !dbg !16813
  %20 = sext i32 %19 to i64, !dbg !16813
  %21 = add nsw i64 %18, %20, !dbg !16814
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16815
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16816
  store i64 %23, i64* %24, align 8, !dbg !16817
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16818
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16771, metadata !DIExpression()), !dbg !16820
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16821
  br i1 %26, label %42, label %27, !dbg !16821

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16822
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16771, metadata !DIExpression()), !dbg !16820
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16826
  %31 = load i64, i64* %30, align 8, !dbg !16826
  %32 = icmp slt i64 %28, %31, !dbg !16827
  br i1 %32, label %33, label %38, !dbg !16828

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16826
  %35 = sub nsw i64 %31, %28, !dbg !16829
  store i64 %35, i64* %34, align 8, !dbg !16829
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16831
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16832
  tail call fastcc void @sys_dlist_insert.192(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16833
  br label %44, !dbg !16834

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16835
  store i64 %39, i64* %24, align 8, !dbg !16835
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16836
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16771, metadata !DIExpression()), !dbg !16820
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16821
  br i1 %41, label %42, label %27, !dbg !16821, !llvm.loop !16837

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16839
  tail call fastcc void @sys_dlist_append.193(%struct._dnode* noundef %43) #26, !dbg !16842
  br label %44, !dbg !16843

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16844
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16845
  br i1 %46, label %47, label %54, !dbg !16846

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16847
  call void @llvm.dbg.value(metadata i32 %48, metadata !16777, metadata !DIExpression()), !dbg !16848
  %49 = icmp ne i32 %48, 0, !dbg !16849
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16851
  br i1 %52, label %54, label %53, !dbg !16851

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16852
  br label %54, !dbg !16854

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16855, metadata !DIExpression()) #24, !dbg !16861
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !16861
  call void @llvm.dbg.value(metadata i32 %9, metadata !16863, metadata !DIExpression()) #24, !dbg !16866
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16868, !srcloc !16869
  call void @llvm.dbg.value(metadata i32 undef, metadata !16764, metadata !DIExpression()), !dbg !16786
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.191() unnamed_addr #1 !dbg !16871 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16874
  %2 = icmp eq i32 %1, 0, !dbg !16875
  br i1 %2, label %3, label %5, !dbg !16874

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16876
  br label %5, !dbg !16874

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16874
  ret i32 %6, !dbg !16877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16878 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.196() #26, !dbg !16884
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16882, metadata !DIExpression()), !dbg !16885
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16886
  ret %struct._timeout* %2, !dbg !16887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.192(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16888 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16892, metadata !DIExpression()), !dbg !16896
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16893, metadata !DIExpression()), !dbg !16896
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16897
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16897
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16894, metadata !DIExpression()), !dbg !16896
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16898
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16899
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16900
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16901
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16902
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16903
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16904
  ret void, !dbg !16905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16906 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16910, metadata !DIExpression()), !dbg !16912
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16913
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.194(%struct._dnode* noundef %2) #26, !dbg !16914
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16911, metadata !DIExpression()), !dbg !16912
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16915
  ret %struct._timeout* %4, !dbg !16916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.193(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16917 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16922, metadata !DIExpression()), !dbg !16925
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16923, metadata !DIExpression()), !dbg !16925
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16926
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16924, metadata !DIExpression()), !dbg !16925
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16927
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16928
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16929
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16930
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16931
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16932
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16933
  ret void, !dbg !16934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16935 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16940
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16937, metadata !DIExpression()), !dbg !16941
  %2 = tail call fastcc i32 @elapsed.191() #26, !dbg !16942
  call void @llvm.dbg.value(metadata i32 %2, metadata !16938, metadata !DIExpression()), !dbg !16941
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16943
  br i1 %3, label %14, label %4, !dbg !16945

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16946
  %6 = load i64, i64* %5, align 8, !dbg !16946
  %7 = sext i32 %2 to i64, !dbg !16947
  %8 = sub nsw i64 %6, %7, !dbg !16948
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16949
  br i1 %9, label %14, label %10, !dbg !16950

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16951
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16951
  %13 = trunc i64 %12 to i32, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %13, metadata !16939, metadata !DIExpression()), !dbg !16941
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16953
  call void @llvm.dbg.value(metadata i32 %15, metadata !16939, metadata !DIExpression()), !dbg !16941
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16954
  %17 = icmp ne i32 %16, 0, !dbg !16956
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16957
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16957
  call void @llvm.dbg.value(metadata i32 %20, metadata !16939, metadata !DIExpression()), !dbg !16941
  ret i32 %20, !dbg !16958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.194(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16959 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16963, metadata !DIExpression()), !dbg !16965
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16964, metadata !DIExpression()), !dbg !16965
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16966
  br i1 %2, label %5, label %3, !dbg !16967

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.195(%struct._dnode* noundef nonnull %0) #26, !dbg !16968
  br label %5, !dbg !16967

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16967
  ret %struct._dnode* %6, !dbg !16969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.195(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16970 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16972, metadata !DIExpression()), !dbg !16974
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16973, metadata !DIExpression()), !dbg !16974
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16975
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16976
  br i1 %3, label %7, label %4, !dbg !16977

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16978
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16978
  br label %7, !dbg !16977

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16977
  ret %struct._dnode* %8, !dbg !16979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.196() unnamed_addr #5 !dbg !16980 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16984, metadata !DIExpression()), !dbg !16985
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.197() #26, !dbg !16986
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16986
  ret %struct._dnode* %3, !dbg !16987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.197() unnamed_addr #5 !dbg !16988 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16992, metadata !DIExpression()), !dbg !16993
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16994
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16995
  ret i1 %2, !dbg !16996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16997 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17001, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 -22, metadata !17002, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 0, metadata !17003, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !17008
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17010, !srcloc !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16799, metadata !DIExpression()) #24, !dbg !17012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #24, !dbg !17008
  call void @llvm.dbg.value(metadata i32 undef, metadata !17005, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata i32 -22, metadata !17002, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 undef, metadata !17003, metadata !DIExpression()), !dbg !17007
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17002, metadata !DIExpression()), !dbg !17006
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.200(%struct._dnode* noundef %3) #26, !dbg !17013
  br i1 %4, label %5, label %6, !dbg !17017

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17018
  call void @llvm.dbg.value(metadata i32 0, metadata !17002, metadata !DIExpression()), !dbg !17006
  br label %6, !dbg !17020

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17006
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17010
  call void @llvm.dbg.value(metadata i32 %8, metadata !16799, metadata !DIExpression()) #24, !dbg !17012
  call void @llvm.dbg.value(metadata i32 %8, metadata !16793, metadata !DIExpression()) #24, !dbg !17008
  call void @llvm.dbg.value(metadata i32 %8, metadata !17005, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata i32 %7, metadata !17002, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 undef, metadata !16855, metadata !DIExpression()) #24, !dbg !17021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !17021
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #24, !dbg !17023
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !17025, !srcloc !16869
  call void @llvm.dbg.value(metadata i32 undef, metadata !17003, metadata !DIExpression()), !dbg !17007
  ret i32 %7, !dbg !17026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.200(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17027 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17033, metadata !DIExpression()), !dbg !17034
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17035
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17035
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17036
  ret i1 %4, !dbg !17037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !17038 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17040, metadata !DIExpression()), !dbg !17041
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17042
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17044
  br i1 %3, label %10, label %4, !dbg !17045

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17046
  %6 = load i64, i64* %5, align 8, !dbg !17046
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17048
  %8 = load i64, i64* %7, align 8, !dbg !17049
  %9 = add nsw i64 %8, %6, !dbg !17049
  store i64 %9, i64* %7, align 8, !dbg !17049
  br label %10, !dbg !17050

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17051
  tail call fastcc void @sys_dlist_remove.201(%struct._dnode* noundef %11) #26, !dbg !17052
  ret void, !dbg !17053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.201(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !17054 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17058, metadata !DIExpression()), !dbg !17061
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17062
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17062
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17059, metadata !DIExpression()), !dbg !17061
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17063
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17063
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17060, metadata !DIExpression()), !dbg !17061
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17064
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17065
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17066
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17067
  tail call fastcc void @sys_dnode_init.202(%struct._dnode* noundef %0) #26, !dbg !17068
  ret void, !dbg !17069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.202(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17070 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17072, metadata !DIExpression()), !dbg !17073
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17074
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17075
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17076
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17077
  ret void, !dbg !17078
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17079 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17085, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i64 0, metadata !17086, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i32 0, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !17092
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17094, !srcloc !16802
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17094
  call void @llvm.dbg.value(metadata i32 %3, metadata !16799, metadata !DIExpression()) #24, !dbg !17096
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17096
  call void @llvm.dbg.value(metadata i32 %3, metadata !16793, metadata !DIExpression()) #24, !dbg !17092
  call void @llvm.dbg.value(metadata i32 %3, metadata !17089, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i64 0, metadata !17086, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i32 undef, metadata !17087, metadata !DIExpression()), !dbg !17091
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17097
  call void @llvm.dbg.value(metadata i64 %4, metadata !17086, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i32 %3, metadata !16855, metadata !DIExpression()) #24, !dbg !17100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !17100
  call void @llvm.dbg.value(metadata i32 %3, metadata !16863, metadata !DIExpression()) #24, !dbg !17102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17104, !srcloc !16869
  call void @llvm.dbg.value(metadata i32 undef, metadata !17087, metadata !DIExpression()), !dbg !17091
  ret i64 %4, !dbg !17105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17106 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17108, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i64 0, metadata !17109, metadata !DIExpression()), !dbg !17112
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.203(%struct._timeout* noundef %0) #26, !dbg !17113
  br i1 %2, label %21, label %3, !dbg !17115

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17116
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17110, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i64 0, metadata !17109, metadata !DIExpression()), !dbg !17112
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17118
  br i1 %5, label %16, label %6, !dbg !17120

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17110, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i64 %8, metadata !17109, metadata !DIExpression()), !dbg !17112
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17121
  %10 = load i64, i64* %9, align 8, !dbg !17121
  %11 = add nsw i64 %10, %8, !dbg !17123
  call void @llvm.dbg.value(metadata i64 %11, metadata !17109, metadata !DIExpression()), !dbg !17112
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17124
  br i1 %12, label %16, label %13, !dbg !17126

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17127
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17110, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i64 %11, metadata !17109, metadata !DIExpression()), !dbg !17112
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17118
  br i1 %15, label %16, label %6, !dbg !17120, !llvm.loop !17128

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17112
  call void @llvm.dbg.value(metadata i64 %17, metadata !17109, metadata !DIExpression()), !dbg !17112
  %18 = tail call fastcc i32 @elapsed.191() #26, !dbg !17130
  %19 = sext i32 %18 to i64, !dbg !17130
  %20 = sub nsw i64 %17, %19, !dbg !17131
  br label %21, !dbg !17132

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17112
  ret i64 %22, !dbg !17133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.203(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17134 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17138, metadata !DIExpression()), !dbg !17139
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17140
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.200(%struct._dnode* noundef %2) #26, !dbg !17141
  %4 = xor i1 %3, true, !dbg !17142
  ret i1 %4, !dbg !17143
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17144 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17146, metadata !DIExpression()), !dbg !17151
  call void @llvm.dbg.value(metadata i64 0, metadata !17147, metadata !DIExpression()), !dbg !17151
  call void @llvm.dbg.value(metadata i32 0, metadata !17148, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !17153
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17155, !srcloc !16802
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17155
  call void @llvm.dbg.value(metadata i32 %3, metadata !16799, metadata !DIExpression()) #24, !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17157
  call void @llvm.dbg.value(metadata i32 %3, metadata !16793, metadata !DIExpression()) #24, !dbg !17153
  call void @llvm.dbg.value(metadata i32 %3, metadata !17150, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.value(metadata i64 0, metadata !17147, metadata !DIExpression()), !dbg !17151
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17152
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17158
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17161
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17147, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17151
  call void @llvm.dbg.value(metadata i32 %3, metadata !16855, metadata !DIExpression()) #24, !dbg !17162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !17162
  call void @llvm.dbg.value(metadata i32 %3, metadata !16863, metadata !DIExpression()) #24, !dbg !17164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17166, !srcloc !16869
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17152
  %6 = add i64 %5, %4, !dbg !17167
  ret i64 %6, !dbg !17168
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17169 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17171, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata i32 0, metadata !17172, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !17177
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17179, !srcloc !16802
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17179
  call void @llvm.dbg.value(metadata i32 %2, metadata !16799, metadata !DIExpression()) #24, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17181
  call void @llvm.dbg.value(metadata i32 %2, metadata !16793, metadata !DIExpression()) #24, !dbg !17177
  call void @llvm.dbg.value(metadata i32 %2, metadata !17174, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i32 -1, metadata !17171, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17172, metadata !DIExpression()), !dbg !17176
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17182
  call void @llvm.dbg.value(metadata i32 %3, metadata !17171, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata i32 %2, metadata !16855, metadata !DIExpression()) #24, !dbg !17185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !17185
  call void @llvm.dbg.value(metadata i32 %2, metadata !16863, metadata !DIExpression()) #24, !dbg !17187
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17189, !srcloc !16869
  call void @llvm.dbg.value(metadata i32 undef, metadata !17172, metadata !DIExpression()), !dbg !17176
  ret i32 %3, !dbg !17190
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17193, metadata !DIExpression()), !dbg !17203
  call void @llvm.dbg.value(metadata i1 %1, metadata !17194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17203
  call void @llvm.dbg.value(metadata i32 0, metadata !17195, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !17205
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17207, !srcloc !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16799, metadata !DIExpression()) #24, !dbg !17209
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17209
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #24, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !17197, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !17195, metadata !DIExpression()), !dbg !17204
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17210
  call void @llvm.dbg.value(metadata i32 %4, metadata !17198, metadata !DIExpression()), !dbg !17211
  call void @llvm.dbg.value(metadata i1 undef, metadata !17201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17211
  %5 = icmp slt i32 %4, 2, !dbg !17212
  call void @llvm.dbg.value(metadata i1 %5, metadata !17202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17211
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17213
  call void @llvm.dbg.value(metadata i1 %6, metadata !17201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17211
  br i1 %7, label %11, label %8, !dbg !17213

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17215
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17215
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17217
  br label %11, !dbg !17218

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17207
  call void @llvm.dbg.value(metadata i32 %12, metadata !16799, metadata !DIExpression()) #24, !dbg !17209
  call void @llvm.dbg.value(metadata i32 %12, metadata !16793, metadata !DIExpression()) #24, !dbg !17205
  call void @llvm.dbg.value(metadata i32 %12, metadata !17197, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !16855, metadata !DIExpression()) #24, !dbg !17219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !17219
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #24, !dbg !17221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17223, !srcloc !16869
  call void @llvm.dbg.value(metadata i32 1, metadata !17195, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !17195, metadata !DIExpression()), !dbg !17204
  ret void, !dbg !17224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17229, metadata !DIExpression()), !dbg !17234
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !17236
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17238, !srcloc !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16799, metadata !DIExpression()) #24, !dbg !17240
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17240
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #24, !dbg !17236
  call void @llvm.dbg.value(metadata i32 undef, metadata !17230, metadata !DIExpression()), !dbg !17234
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17234
  call void @llvm.dbg.value(metadata i32 undef, metadata !17230, metadata !DIExpression()), !dbg !17234
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17241
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17242
  br i1 %4, label %28, label %5, !dbg !17243

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17244
  %10 = load i64, i64* %9, align 8, !dbg !17244
  %11 = sext i32 %8 to i64, !dbg !17245
  %12 = icmp sgt i64 %10, %11, !dbg !17246
  br i1 %12, label %26, label %13, !dbg !17247

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17234
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17231, metadata !DIExpression()), !dbg !17248
  %15 = trunc i64 %10 to i32, !dbg !17249
  call void @llvm.dbg.value(metadata i32 %15, metadata !17233, metadata !DIExpression()), !dbg !17248
  %16 = sext i32 %15 to i64, !dbg !17250
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17251
  %18 = add i64 %17, %16, !dbg !17251
  store i64 %18, i64* @curr_tick, align 8, !dbg !17251
  store i64 0, i64* %9, align 8, !dbg !17252
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17253
  call void @llvm.dbg.value(metadata i32 %14, metadata !16855, metadata !DIExpression()) #24, !dbg !17254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !17254
  call void @llvm.dbg.value(metadata i32 %14, metadata !16863, metadata !DIExpression()) #24, !dbg !17256
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17258, !srcloc !16869
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17259
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17259
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !17261
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17263, !srcloc !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16799, metadata !DIExpression()) #24, !dbg !17265
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17265
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #24, !dbg !17261
  call void @llvm.dbg.value(metadata i32 undef, metadata !17230, metadata !DIExpression()), !dbg !17234
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17266
  %23 = sub nsw i32 %22, %15, !dbg !17266
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17234
  call void @llvm.dbg.value(metadata i32 undef, metadata !17230, metadata !DIExpression()), !dbg !17234
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17241
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17242
  br i1 %25, label %28, label %5, !dbg !17243, !llvm.loop !17267

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17269
  store i64 %27, i64* %9, align 8, !dbg !17269
  br label %32, !dbg !17272

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17234
  %31 = sext i32 %30 to i64, !dbg !17273
  br label %32, !dbg !17273

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17273
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17234
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17274
  %37 = add i64 %36, %33, !dbg !17274
  store i64 %37, i64* @curr_tick, align 8, !dbg !17274
  store i32 0, i32* @announce_remaining, align 4, !dbg !17275
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17276
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17277
  call void @llvm.dbg.value(metadata i32 %35, metadata !16855, metadata !DIExpression()) #24, !dbg !17278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !17278
  call void @llvm.dbg.value(metadata i32 %35, metadata !16863, metadata !DIExpression()) #24, !dbg !17280
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17282, !srcloc !16869
  ret void, !dbg !17283
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17284 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17288, metadata !DIExpression()), !dbg !17292
  call void @llvm.dbg.value(metadata i32 0, metadata !17289, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16787, metadata !DIExpression()) #24, !dbg !17294
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17296, !srcloc !16802
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17296
  call void @llvm.dbg.value(metadata i32 %2, metadata !16799, metadata !DIExpression()) #24, !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17298
  call void @llvm.dbg.value(metadata i32 %2, metadata !16793, metadata !DIExpression()) #24, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %2, metadata !17291, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata i64 0, metadata !17288, metadata !DIExpression()), !dbg !17292
  call void @llvm.dbg.value(metadata i32 undef, metadata !17289, metadata !DIExpression()), !dbg !17293
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17299
  %4 = tail call fastcc i32 @elapsed.191() #26, !dbg !17302
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17288, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17292
  call void @llvm.dbg.value(metadata i32 %2, metadata !16855, metadata !DIExpression()) #24, !dbg !17303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16860, metadata !DIExpression()) #24, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %2, metadata !16863, metadata !DIExpression()) #24, !dbg !17305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17307, !srcloc !16869
  call void @llvm.dbg.value(metadata i32 undef, metadata !17289, metadata !DIExpression()), !dbg !17293
  %5 = sext i32 %4 to i64, !dbg !17302
  %6 = add i64 %3, %5, !dbg !17308
  ret i64 %6, !dbg !17309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17310 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17311
  %2 = trunc i64 %1 to i32, !dbg !17312
  ret i32 %2, !dbg !17313
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17314 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17315
  ret i64 %1, !dbg !17316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17319, metadata !DIExpression()), !dbg !17326
  %2 = icmp eq i32 %0, 0, !dbg !17327
  br i1 %2, label %10, label %3, !dbg !17329

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17330
  call void @llvm.dbg.value(metadata i32 %4, metadata !17320, metadata !DIExpression()), !dbg !17326
  %5 = shl i32 %0, 5, !dbg !17331
  call void @llvm.dbg.value(metadata i32 %5, metadata !17321, metadata !DIExpression()), !dbg !17326
  br label %6, !dbg !17332

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %7, metadata !17322, metadata !DIExpression()), !dbg !17334
  %8 = sub i32 %7, %4, !dbg !17335
  %9 = icmp ult i32 %8, %5, !dbg !17337
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17339 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17340
  ret i32 %1, !dbg !17341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17342 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17344
  ret i32 %1, !dbg !17345
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17346 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17350, metadata !DIExpression()), !dbg !17352
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17353

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17354
  br label %14, !dbg !17358

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17351, metadata !DIExpression()), !dbg !17352
  %6 = icmp slt i64 %2, -1, !dbg !17359
  br i1 %6, label %7, label %9, !dbg !17362

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17363
  br label %14, !dbg !17364

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17366
  %11 = icmp ugt i64 %2, 1, !dbg !17367
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17367
  %13 = add nsw i64 %10, %12, !dbg !17368
  br label %14, !dbg !17369

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17370
  ret i64 %15, !dbg !17371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17372 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.212, i32 0, i32 0)) #25, !dbg !17374
  ret void, !dbg !17375
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17378, metadata !DIExpression()), !dbg !17398
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17379, metadata !DIExpression()), !dbg !17399
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17400

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17401

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17379, metadata !DIExpression()), !dbg !17399
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17402
  %6 = load i8*, i8** %5, align 4, !dbg !17402
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17406
  %8 = load i32, i32* %7, align 4, !dbg !17406
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !17407
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17408
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17379, metadata !DIExpression()), !dbg !17399
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17409
  br i1 %10, label %3, label %2, !dbg !17400, !llvm.loop !17411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17413 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17417, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata i8* %1, metadata !17418, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata i32 %2, metadata !17419, metadata !DIExpression()), !dbg !17420
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17421
  tail call fastcc void @z_waitq_init.214(%union.anon* noundef nonnull %4) #26, !dbg !17422
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17423
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !17424
  ret void, !dbg !17425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.214(%union.anon* noundef %0) unnamed_addr #4 !dbg !17426 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17431, metadata !DIExpression()), !dbg !17432
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17433
  tail call fastcc void @sys_dlist_init.215(%struct._dnode* noundef %2) #26, !dbg !17434
  ret void, !dbg !17435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.215(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17436 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17441, metadata !DIExpression()), !dbg !17442
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17443
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17444
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17445
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17446
  ret void, !dbg !17447
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17448 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17459, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17456, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i32 %1, metadata !17457, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i32 %2, metadata !17458, metadata !DIExpression()), !dbg !17469
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17470
  call void @llvm.dbg.value(metadata i64 %6, metadata !17461, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i8* null, metadata !17462, metadata !DIExpression()), !dbg !17469
  %7 = icmp eq i64 %5, -1, !dbg !17471
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17471
  call void @llvm.dbg.value(metadata i64 %8, metadata !17461, metadata !DIExpression()), !dbg !17469
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17473, metadata !DIExpression()) #24, !dbg !17480
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17482, !srcloc !17488
  call void @llvm.dbg.value(metadata i32 undef, metadata !17485, metadata !DIExpression()) #24, !dbg !17489
  call void @llvm.dbg.value(metadata i32 undef, metadata !17486, metadata !DIExpression()) #24, !dbg !17489
  call void @llvm.dbg.value(metadata i32 undef, metadata !17479, metadata !DIExpression()) #24, !dbg !17480
  call void @llvm.dbg.value(metadata i32 undef, metadata !17463, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i8 0, metadata !17468, metadata !DIExpression()), !dbg !17469
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17462, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i8 0, metadata !17468, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i32 undef, metadata !17463, metadata !DIExpression()), !dbg !17469
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17490
  call void @llvm.dbg.value(metadata i8* %12, metadata !17462, metadata !DIExpression()), !dbg !17469
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !17492
  call void @llvm.dbg.value(metadata i64 %13, metadata !17460, metadata !DIExpression()), !dbg !17469
  %14 = icmp eq i8* %12, null, !dbg !17493
  br i1 %14, label %15, label %31, !dbg !17495

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17463, metadata !DIExpression()), !dbg !17469
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17495

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17468, metadata !DIExpression()), !dbg !17469
  %20 = sub nsw i64 %8, %18, !dbg !17496
  %21 = icmp slt i64 %20, 1, !dbg !17497
  br i1 %21, label %31, label %22, !dbg !17498

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17469
  call void @llvm.dbg.value(metadata i8 undef, metadata !17468, metadata !DIExpression()), !dbg !17469
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17499
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17499
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !17499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17473, metadata !DIExpression()) #24, !dbg !17500
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17502, !srcloc !17488
  call void @llvm.dbg.value(metadata i32 undef, metadata !17485, metadata !DIExpression()) #24, !dbg !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17486, metadata !DIExpression()) #24, !dbg !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17479, metadata !DIExpression()) #24, !dbg !17500
  call void @llvm.dbg.value(metadata i32 undef, metadata !17463, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i8* null, metadata !17462, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i32 undef, metadata !17463, metadata !DIExpression()), !dbg !17469
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17490
  call void @llvm.dbg.value(metadata i8* %28, metadata !17462, metadata !DIExpression()), !dbg !17469
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !17492
  call void @llvm.dbg.value(metadata i64 %29, metadata !17460, metadata !DIExpression()), !dbg !17469
  %30 = icmp eq i8* %28, null, !dbg !17493
  br i1 %30, label %17, label %31, !dbg !17495, !llvm.loop !17505

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17490
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17469
  call void @llvm.dbg.value(metadata i8* %33, metadata !17462, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.value(metadata i32 %34, metadata !17508, metadata !DIExpression()) #24, !dbg !17514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17513, metadata !DIExpression()) #24, !dbg !17514
  call void @llvm.dbg.value(metadata i32 %34, metadata !17516, metadata !DIExpression()) #24, !dbg !17519
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !17521, !srcloc !17522
  ret i8* %33, !dbg !17523
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17524 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17530, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17528, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata i32 %1, metadata !17529, metadata !DIExpression()), !dbg !17532
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17533
  call void @llvm.dbg.value(metadata i8* %4, metadata !17531, metadata !DIExpression()), !dbg !17532
  ret i8* %4, !dbg !17534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17535 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17539, metadata !DIExpression()), !dbg !17542
  call void @llvm.dbg.value(metadata i8* %1, metadata !17540, metadata !DIExpression()), !dbg !17542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17473, metadata !DIExpression()) #24, !dbg !17543
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17545, !srcloc !17488
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17545
  call void @llvm.dbg.value(metadata i32 %4, metadata !17485, metadata !DIExpression()) #24, !dbg !17547
  call void @llvm.dbg.value(metadata i32 undef, metadata !17486, metadata !DIExpression()) #24, !dbg !17547
  call void @llvm.dbg.value(metadata i32 %4, metadata !17479, metadata !DIExpression()) #24, !dbg !17543
  call void @llvm.dbg.value(metadata i32 %4, metadata !17541, metadata !DIExpression()), !dbg !17542
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17548
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !17549
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17550
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !17552
  %8 = icmp eq i32 %7, 0, !dbg !17553
  br i1 %8, label %12, label %9, !dbg !17554

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17555
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17556
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !17556
  br label %13, !dbg !17558

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17508, metadata !DIExpression()) #24, !dbg !17559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17513, metadata !DIExpression()) #24, !dbg !17559
  call void @llvm.dbg.value(metadata i32 %4, metadata !17516, metadata !DIExpression()) #24, !dbg !17562
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17564, !srcloc !17522
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17565
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!846, !2, !2581, !27, !113, !2583, !2585, !2618, !2655, !122, !190, !2657, !219, !2739, !2750, !2796, !2798, !2826, !2854, !2897, !2968, !3013, !366, !515, !3041, !551, !561, !586, !694, !876, !3046, !994, !1196, !1465, !1748, !3067, !1863, !1950, !3069, !3140, !3189, !1984, !3192, !1990, !2351, !3210, !2373, !2396, !3212, !2511, !3215, !2550}
!llvm.ident = !{!3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217, !3217}
!llvm.module.flags = !{!3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "prompt", scope: !27, file: !105, line: 9, type: !106, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 400, elements: !109)
!107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!108 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!109 = !{!110}
!110 = !DISubrange(count: 50)
!111 = !DIGlobalVariableExpression(var: !112, expr: !DIExpression())
!112 = distinct !DIGlobalVariable(name: "_char_out", scope: !113, file: !116, line: 54, type: !117, isLocal: false, isDefinition: true)
!113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !115, splitDebugInlining: false, nameTableKind: None)
!114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!115 = !{!111}
!116 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DISubroutineType(types: !119)
!119 = !{!103, !103}
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !122, file: !153, line: 60, type: !154, isLocal: true, isDefinition: true, align: 32)
!122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !124, globals: !152, splitDebugInlining: false, nameTableKind: None)
!123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!124 = !{!125, !146}
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 386, baseType: !128)
!127 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 448, elements: !129)
!129 = !{!130, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !128, file: !127, line: 372, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !128, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !128, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !128, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !128, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !128, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !128, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !128, file: !127, line: 379, baseType: !131, size: 32, offset: 224)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !128, file: !127, line: 380, baseType: !131, size: 32, offset: 256)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !128, file: !127, line: 381, baseType: !131, size: 32, offset: 288)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !128, file: !127, line: 382, baseType: !131, size: 32, offset: 320)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !128, file: !127, line: 383, baseType: !131, size: 32, offset: 352)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !128, file: !127, line: 384, baseType: !131, size: 32, offset: 384)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !128, file: !127, line: 385, baseType: !131, size: 32, offset: 416)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 364, baseType: !148)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 360, size: 64, elements: !149)
!149 = !{!150, !151}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !148, file: !127, line: 362, baseType: !131, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !148, file: !127, line: 363, baseType: !131, size: 32, offset: 32)
!152 = !{!120}
!153 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !157)
!156 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!157 = !{!158, !187}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !155, file: !156, line: 60, baseType: !159, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!160 = !DISubroutineType(types: !161)
!161 = !{!103, !162}
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !166)
!165 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!166 = !{!167, !169, !170, !171, !180, !181}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !164, file: !165, line: 380, baseType: !168, size: 32)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !164, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !164, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !164, file: !165, line: 386, baseType: !172, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !174)
!174 = !{!175, !178}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !173, file: !165, line: 359, baseType: !176, size: 8)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !177)
!177 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !173, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!179 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !164, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !164, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !165, line: 43, baseType: !185)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !186)
!186 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !155, file: !156, line: 65, baseType: !162, size: 32, offset: 32)
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !190, file: !193, line: 71, type: !194, isLocal: true, isDefinition: true, align: 32)
!190 = distinct !DICompileUnit(language: DW_LANG_C99, file: !191, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !192, splitDebugInlining: false, nameTableKind: None)
!191 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!192 = !{!188}
!193 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !196)
!196 = !{!197, !216}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !195, file: !156, line: 60, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!199 = !DISubroutineType(types: !200)
!200 = !{!103, !201}
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !203)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !204)
!204 = !{!205, !206, !207, !208, !214, !215}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !203, file: !165, line: 380, baseType: !168, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !203, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !203, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !203, file: !165, line: 386, baseType: !209, size: 32, offset: 96)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !211)
!211 = !{!212, !213}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !210, file: !165, line: 359, baseType: !176, size: 8)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !210, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !203, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !203, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !195, file: !156, line: 65, baseType: !201, size: 32, offset: 32)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "console_serial", scope: !219, file: !310, line: 13, type: !319, isLocal: true, isDefinition: true)
!219 = distinct !DICompileUnit(language: DW_LANG_C99, file: !220, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !221, globals: !307, splitDebugInlining: false, nameTableKind: None)
!220 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!221 = !{!222, !102, !103}
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !225, line: 336, size: 608, elements: !226)
!225 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !{!227, !247, !251, !255, !268, !273, !279, !285, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !224, file: !225, line: 365, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 32)
!229 = !DISubroutineType(types: !230)
!230 = !{!103, !231, !246}
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !234)
!234 = !{!235, !236, !237, !238, !244, !245}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !233, file: !165, line: 380, baseType: !168, size: 32)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !233, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !233, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !233, file: !165, line: 386, baseType: !239, size: 32, offset: 96)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !240, file: !165, line: 359, baseType: !176, size: 8)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !240, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !233, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !233, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !224, file: !225, line: 366, baseType: !248, size: 32, offset: 32)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!249 = !DISubroutineType(types: !250)
!250 = !{null, !231, !177}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !224, file: !225, line: 374, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{!103, !231}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !224, file: !225, line: 377, baseType: !256, size: 32, offset: 96)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DISubroutineType(types: !258)
!258 = !{!103, !231, !259}
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !225, line: 122, size: 64, elements: !262)
!262 = !{!263, !264, !265, !266, !267}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !261, file: !225, line: 123, baseType: !132, size: 32)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !261, file: !225, line: 124, baseType: !176, size: 8, offset: 32)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !261, file: !225, line: 125, baseType: !176, size: 8, offset: 40)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !261, file: !225, line: 126, baseType: !176, size: 8, offset: 48)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !261, file: !225, line: 127, baseType: !176, size: 8, offset: 56)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !224, file: !225, line: 379, baseType: !269, size: 32, offset: 128)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DISubroutineType(types: !271)
!271 = !{!103, !231, !272}
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !224, file: !225, line: 384, baseType: !274, size: 32, offset: 160)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DISubroutineType(types: !276)
!276 = !{!103, !231, !277, !103}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !224, file: !225, line: 393, baseType: !280, size: 32, offset: 192)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!281 = !DISubroutineType(types: !282)
!282 = !{!103, !231, !283, !284}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !224, file: !225, line: 402, baseType: !286, size: 32, offset: 224)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !231}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !224, file: !225, line: 405, baseType: !286, size: 32, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !224, file: !225, line: 408, baseType: !252, size: 32, offset: 288)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !224, file: !225, line: 411, baseType: !286, size: 32, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !224, file: !225, line: 414, baseType: !286, size: 32, offset: 352)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !224, file: !225, line: 417, baseType: !252, size: 32, offset: 384)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !224, file: !225, line: 420, baseType: !252, size: 32, offset: 416)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !224, file: !225, line: 423, baseType: !286, size: 32, offset: 448)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !224, file: !225, line: 426, baseType: !286, size: 32, offset: 480)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !224, file: !225, line: 429, baseType: !252, size: 32, offset: 512)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !224, file: !225, line: 432, baseType: !252, size: 32, offset: 544)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !224, file: !225, line: 435, baseType: !300, size: 32, offset: 576)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !231, !303, !102}
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !225, line: 142, baseType: !304)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 32)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !231, !102}
!307 = !{!217, !308, !314}
!308 = !DIGlobalVariableExpression(var: !309, expr: !DIExpression())
!309 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !219, file: !310, line: 15, type: !311, isLocal: true, isDefinition: true)
!310 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 512, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 64)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !219, file: !310, line: 16, type: !316, isLocal: true, isDefinition: true)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 4096, elements: !317)
!317 = !{!318}
!318 = !DISubrange(count: 512)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !320, line: 18, size: 544, elements: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = !{!322, !323, !350, !351, !352, !355, !356, !358, !359, !360, !361, !362, !363}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !319, file: !320, line: 19, baseType: !231, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !319, file: !320, line: 21, baseType: !324, size: 128, offset: 32)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !325, line: 2909, size: 128, elements: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = !{!327, !348, !349}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !324, file: !325, line: 2910, baseType: !328, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !330)
!329 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !331)
!331 = !{!332}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !330, file: !329, line: 232, baseType: !333, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !336)
!336 = !{!337, !343}
!337 = !DIDerivedType(tag: DW_TAG_member, scope: !335, file: !334, line: 38, baseType: !338, size: 32)
!338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !335, file: !334, line: 38, size: 32, elements: !339)
!339 = !{!340, !342}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !338, file: !334, line: 39, baseType: !341, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !338, file: !334, line: 40, baseType: !341, size: 32)
!343 = !DIDerivedType(tag: DW_TAG_member, scope: !335, file: !334, line: 42, baseType: !344, size: 32, offset: 32)
!344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !335, file: !334, line: 42, size: 32, elements: !345)
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !344, file: !334, line: 43, baseType: !341, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !344, file: !334, line: 44, baseType: !341, size: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !324, file: !325, line: 2911, baseType: !32, size: 32, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !324, file: !325, line: 2912, baseType: !32, size: 32, offset: 96)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !319, file: !320, line: 22, baseType: !283, size: 32, offset: 160)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !319, file: !320, line: 23, baseType: !132, size: 32, offset: 192)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !319, file: !320, line: 24, baseType: !353, size: 16, offset: 224)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !354)
!354 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !319, file: !320, line: 24, baseType: !353, size: 16, offset: 240)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !319, file: !320, line: 25, baseType: !357, size: 32, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !319, file: !320, line: 27, baseType: !324, size: 128, offset: 288)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !319, file: !320, line: 28, baseType: !283, size: 32, offset: 416)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !319, file: !320, line: 29, baseType: !132, size: 32, offset: 448)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !319, file: !320, line: 30, baseType: !353, size: 16, offset: 480)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !319, file: !320, line: 30, baseType: !353, size: 16, offset: 496)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !319, file: !320, line: 31, baseType: !357, size: 32, offset: 512)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "static_regions", scope: !366, file: !375, line: 62, type: !511, isLocal: true, isDefinition: true)
!366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !368, globals: !371, splitDebugInlining: false, nameTableKind: None)
!367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!368 = !{!369, !103, !132, !102}
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !370, line: 214, baseType: !32)
!370 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!371 = !{!372, !364}
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !374, file: !375, line: 198, type: !497, isLocal: true, isDefinition: true)
!374 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !375, file: !375, line: 175, type: !376, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !492)
!375 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!376 = !DISubroutineType(types: !377)
!377 = !{null, !378}
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !381)
!380 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!381 = !{!382, !447, !460, !461, !462, !463, !469, !487}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !379, file: !380, line: 247, baseType: !383, size: 384)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !384)
!384 = !{!385, !412, !419, !420, !421, !432, !433, !434}
!385 = !DIDerivedType(tag: DW_TAG_member, scope: !383, file: !380, line: 60, baseType: !386, size: 64)
!386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !383, file: !380, line: 60, size: 64, elements: !387)
!387 = !{!388, !403}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !386, file: !380, line: 61, baseType: !389, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !391)
!391 = !{!392, !398}
!392 = !DIDerivedType(tag: DW_TAG_member, scope: !390, file: !334, line: 38, baseType: !393, size: 32)
!393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !390, file: !334, line: 38, size: 32, elements: !394)
!394 = !{!395, !397}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !393, file: !334, line: 39, baseType: !396, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !393, file: !334, line: 40, baseType: !396, size: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, scope: !390, file: !334, line: 42, baseType: !399, size: 32, offset: 32)
!399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !390, file: !334, line: 42, size: 32, elements: !400)
!400 = !{!401, !402}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !399, file: !334, line: 43, baseType: !396, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !399, file: !334, line: 44, baseType: !396, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !386, file: !380, line: 62, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !406)
!405 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = !{!407}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !404, file: !405, line: 50, baseType: !408, size: 64)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !410)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!410 = !{!411}
!411 = !DISubrange(count: 2)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !383, file: !380, line: 68, baseType: !413, size: 32, offset: 64)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !415)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !416)
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !415, file: !329, line: 232, baseType: !418, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !390)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !383, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !383, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!421 = !DIDerivedType(tag: DW_TAG_member, scope: !383, file: !380, line: 90, baseType: !422, size: 16, offset: 112)
!422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !383, file: !380, line: 90, size: 16, elements: !423)
!423 = !{!424, !431}
!424 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !380, line: 91, baseType: !425, size: 16)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !422, file: !380, line: 91, size: 16, elements: !426)
!426 = !{!427, !430}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !425, file: !380, line: 96, baseType: !428, size: 8)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !429)
!429 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !425, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !422, file: !380, line: 100, baseType: !353, size: 16)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !383, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !383, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !383, file: !380, line: 131, baseType: !435, size: 192, offset: 192)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !436)
!436 = !{!437, !438, !444}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !435, file: !329, line: 245, baseType: !389, size: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !435, file: !329, line: 246, baseType: !439, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !440)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 32)
!441 = !DISubroutineType(types: !442)
!442 = !{null, !443}
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !435, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !446)
!446 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !379, file: !380, line: 250, baseType: !448, size: 288, offset: 384)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !450)
!449 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!450 = !{!451, !452, !453, !454, !455, !456, !457, !458, !459}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !448, file: !449, line: 26, baseType: !132, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !448, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !448, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !448, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !448, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !448, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !448, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !448, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !448, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !379, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !379, file: !380, line: 256, baseType: !414, size: 64, offset: 704)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !379, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !379, file: !380, line: 300, baseType: !464, size: 96, offset: 800)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !465)
!465 = !{!466, !467, !468}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !464, file: !380, line: 153, baseType: !22, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !464, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !464, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !379, file: !380, line: 325, baseType: !470, size: 32, offset: 896)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 32)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !472)
!472 = !{!473, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !471, file: !325, line: 5074, baseType: !474, size: 96)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !476)
!475 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!476 = !{!477, !480, !481}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !474, file: !475, line: 57, baseType: !478, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !475, line: 57, flags: DIFlagFwdDecl)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !474, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !474, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !471, file: !325, line: 5075, baseType: !414, size: 64, offset: 96)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !471, file: !325, line: 5076, baseType: !484, offset: 160)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!485 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!486 = !{}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !379, file: !380, line: 343, baseType: !488, size: 64, offset: 928)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !489)
!489 = !{!490, !491}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !488, file: !449, line: 63, baseType: !132, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !488, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!492 = !{!493, !494, !495, !496}
!493 = !DILocalVariable(name: "thread", arg: 1, scope: !374, file: !375, line: 175, type: !378)
!494 = !DILocalVariable(name: "region_num", scope: !374, file: !375, line: 200, type: !176)
!495 = !DILocalVariable(name: "guard_start", scope: !374, file: !375, line: 265, type: !22)
!496 = !DILocalVariable(name: "guard_size", scope: !374, file: !375, line: 266, type: !369)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 96, elements: !509)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !499, line: 52, size: 96, elements: !500)
!499 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!501, !502, !503}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !498, file: !499, line: 53, baseType: !22, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !498, file: !499, line: 54, baseType: !369, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !498, file: !499, line: 55, baseType: !504, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !505, line: 151, baseType: !506)
!505 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !505, line: 149, size: 32, elements: !507)
!507 = !{!508}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !506, file: !505, line: 150, baseType: !132, size: 32)
!509 = !{!510}
!510 = !DISubrange(count: 1)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 96, elements: !509)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!513 = !DIGlobalVariableExpression(var: !514, expr: !DIExpression())
!514 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !515, file: !548, line: 39, type: !176, isLocal: true, isDefinition: true)
!515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !517, globals: !547, splitDebugInlining: false, nameTableKind: None)
!516 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!517 = !{!518, !102, !103, !535, !176}
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !520, line: 1168, baseType: !521)
!520 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 1155, size: 352, elements: !522)
!522 = !{!523, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !521, file: !520, line: 1157, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !521, file: !520, line: 1158, baseType: !131, size: 32, offset: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !521, file: !520, line: 1159, baseType: !131, size: 32, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !521, file: !520, line: 1160, baseType: !131, size: 32, offset: 96)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !521, file: !520, line: 1161, baseType: !131, size: 32, offset: 128)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !521, file: !520, line: 1162, baseType: !131, size: 32, offset: 160)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !521, file: !520, line: 1163, baseType: !131, size: 32, offset: 192)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !521, file: !520, line: 1164, baseType: !131, size: 32, offset: 224)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !521, file: !520, line: 1165, baseType: !131, size: 32, offset: 256)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !521, file: !520, line: 1166, baseType: !131, size: 32, offset: 288)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !521, file: !520, line: 1167, baseType: !131, size: 32, offset: 320)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !538, line: 27, size: 96, elements: !539)
!538 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!539 = !{!540, !541, !542}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !537, file: !538, line: 29, baseType: !132, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !537, file: !538, line: 31, baseType: !168, size: 32, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !537, file: !538, line: 37, baseType: !543, size: 32, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !505, line: 146, baseType: !544)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !505, line: 141, size: 32, elements: !545)
!545 = !{!546}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !544, file: !505, line: 143, baseType: !132, size: 32)
!547 = !{!513}
!548 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !551, file: !558, line: 21, type: !117, isLocal: true, isDefinition: true)
!551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, globals: !557, splitDebugInlining: false, nameTableKind: None)
!552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!553 = !{!554, !103, !102}
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !556, line: 22, baseType: !103)
!556 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!557 = !{!549}
!558 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !561, file: !566, line: 13, type: !583, isLocal: true, isDefinition: true)
!561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !563, splitDebugInlining: false, nameTableKind: None)
!562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!563 = !{!564, !559}
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "mpu_config", scope: !561, file: !566, line: 37, type: !567, isLocal: false, isDefinition: true)
!566 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !538, line: 41, size: 64, elements: !569)
!569 = !{!570, !571}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !568, file: !538, line: 43, baseType: !132, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !568, file: !538, line: 45, baseType: !572, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !538, line: 27, size: 96, elements: !575)
!575 = !{!576, !577, !578}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !574, file: !538, line: 29, baseType: !132, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !574, file: !538, line: 31, baseType: !168, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !574, file: !538, line: 37, baseType: !579, size: 32, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !505, line: 146, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !505, line: 141, size: 32, elements: !581)
!581 = !{!582}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !580, file: !505, line: 143, baseType: !132, size: 32)
!583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 192, elements: !410)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !586, file: !683, line: 36, type: !684, isLocal: true, isDefinition: true, align: 32)
!586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !587, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !588, retainedTypes: !600, globals: !682, splitDebugInlining: false, nameTableKind: None)
!587 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!588 = !{!589, !595}
!589 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !590, line: 506, baseType: !32, size: 32, elements: !591)
!590 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!591 = !{!592, !593, !594}
!592 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!593 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!594 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!595 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !590, line: 512, baseType: !32, size: 32, elements: !596)
!596 = !{!597, !598, !599}
!597 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!598 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!599 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!600 = !{!601, !671, !676, !636, !595, !589, !681, !102}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !590, line: 523, size: 288, elements: !604)
!604 = !{!605, !626, !632, !637, !641, !642, !643, !647, !667}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !603, file: !590, line: 524, baseType: !606, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 32)
!607 = !DISubroutineType(types: !608)
!608 = !{!103, !609, !624, !625}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !612)
!612 = !{!613, !614, !615, !616, !622, !623}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !611, file: !165, line: 380, baseType: !168, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !611, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !611, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !611, file: !165, line: 386, baseType: !617, size: 32, offset: 96)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !619)
!619 = !{!620, !621}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !618, file: !165, line: 359, baseType: !176, size: 8)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !618, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !611, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !611, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !590, line: 237, baseType: !176)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !590, line: 257, baseType: !132)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !603, file: !590, line: 530, baseType: !627, size: 32, offset: 32)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 32)
!628 = !DISubroutineType(types: !629)
!629 = !{!103, !609, !630}
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !590, line: 229, baseType: !132)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !603, file: !590, line: 532, baseType: !633, size: 32, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 32)
!634 = !DISubroutineType(types: !635)
!635 = !{!103, !609, !636, !631}
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !590, line: 216, baseType: !132)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !603, file: !590, line: 535, baseType: !638, size: 32, offset: 96)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 32)
!639 = !DISubroutineType(types: !640)
!640 = !{!103, !609, !636}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !603, file: !590, line: 537, baseType: !638, size: 32, offset: 128)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !603, file: !590, line: 539, baseType: !638, size: 32, offset: 160)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !603, file: !590, line: 541, baseType: !644, size: 32, offset: 192)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = !DISubroutineType(types: !646)
!646 = !{!103, !609, !624, !589, !595}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !603, file: !590, line: 544, baseType: !648, size: 32, offset: 224)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 32)
!649 = !DISubroutineType(types: !650)
!650 = !{!103, !609, !651, !179}
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 32)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !590, line: 478, size: 96, elements: !653)
!653 = !{!654, !661, !666}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !652, file: !590, line: 482, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !656, line: 33, baseType: !657)
!656 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !656, line: 29, size: 32, elements: !658)
!658 = !{!659}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !657, file: !656, line: 30, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !652, file: !590, line: 485, baseType: !662, size: 32, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !590, line: 464, baseType: !663)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DISubroutineType(types: !665)
!665 = !{null, !609, !651, !636}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !652, file: !590, line: 493, baseType: !636, size: 32, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !603, file: !590, line: 547, baseType: !668, size: 32, offset: 256)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 32)
!669 = !DISubroutineType(types: !670)
!670 = !{!132, !609}
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !590, line: 428, size: 32, elements: !674)
!674 = !{!675}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !673, file: !590, line: 434, baseType: !636, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !590, line: 441, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !678, file: !590, line: 447, baseType: !636, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!682 = !{!584}
!683 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !686)
!686 = !{!687, !691}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !685, file: !156, line: 60, baseType: !688, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 32)
!689 = !DISubroutineType(types: !690)
!690 = !{!103, !609}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !685, file: !156, line: 65, baseType: !609, size: 32, offset: 32)
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !694, file: !766, line: 48, type: !841, isLocal: true, isDefinition: true)
!694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !695, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !696, retainedTypes: !752, globals: !763, splitDebugInlining: false, nameTableKind: None)
!695 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!696 = !{!30, !697}
!697 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !127, line: 69, baseType: !103, size: 32, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751}
!699 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!700 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!701 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!702 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!703 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!704 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!705 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!706 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!707 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!708 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!709 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!710 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!711 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!712 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!713 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!714 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!715 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!716 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!717 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!718 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!719 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!720 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!721 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!722 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!723 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!724 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!725 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!726 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!727 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!728 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!729 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!730 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!731 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!732 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!733 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!734 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!735 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!736 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!737 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!738 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!739 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!740 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!741 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!742 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!743 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!744 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!745 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!746 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!747 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!748 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!749 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!750 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!751 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!752 = !{!369, !103, !102, !753}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !127, line: 270, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 262, size: 192, elements: !756)
!756 = !{!757, !758, !759, !760, !761, !762}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !755, file: !127, line: 264, baseType: !131, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !755, file: !127, line: 265, baseType: !131, size: 32, offset: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !755, file: !127, line: 266, baseType: !131, size: 32, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !755, file: !127, line: 267, baseType: !131, size: 32, offset: 96)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !755, file: !127, line: 268, baseType: !131, size: 32, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !755, file: !127, line: 269, baseType: !131, size: 32, offset: 160)
!763 = !{!764, !770, !786, !797, !814, !692, !816, !829, !831, !833, !835, !837, !839}
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !694, file: !766, line: 424, type: !767, isLocal: false, isDefinition: true, align: 16)
!766 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 64, elements: !768)
!768 = !{!769}
!769 = !DISubrange(count: 4)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !694, file: !766, line: 424, type: !772, isLocal: false, isDefinition: true, align: 32)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !774)
!774 = !{!775, !776, !777, !778, !784, !785}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !773, file: !165, line: 380, baseType: !168, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !773, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !773, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !773, file: !165, line: 386, baseType: !779, size: 32, offset: 96)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 32)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !781)
!781 = !{!782, !783}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !780, file: !165, line: 359, baseType: !176, size: 8)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !780, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !773, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !773, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !694, file: !766, line: 424, type: !788, isLocal: true, isDefinition: true, align: 32)
!788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !789)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !790)
!790 = !{!791, !796}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !789, file: !156, line: 60, baseType: !792, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 32)
!793 = !DISubroutineType(types: !794)
!794 = !{!103, !795}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !789, file: !156, line: 65, baseType: !795, size: 32, offset: 32)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "exti_data", scope: !694, file: !766, line: 423, type: !799, isLocal: true, isDefinition: true)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !766, line: 107, size: 1024, elements: !800)
!800 = !{!801}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !799, file: !766, line: 109, baseType: !802, size: 1024)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 1024, elements: !812)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !766, line: 101, size: 64, elements: !804)
!804 = !{!805, !811}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !803, file: !766, line: 102, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !807, line: 63, baseType: !808)
!807 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 32)
!809 = !DISubroutineType(types: !810)
!810 = !{null, !103, !102}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !803, file: !766, line: 103, baseType: !102, size: 32, offset: 32)
!812 = !{!813}
!813 = !DISubrange(count: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !694, file: !766, line: 424, type: !780, isLocal: true, isDefinition: true, align: 8)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !818, file: !766, line: 493, type: !823, isLocal: true, isDefinition: true, align: 32)
!818 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !766, file: !766, line: 460, type: !819, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !821)
!819 = !DISubroutineType(types: !820)
!820 = !{null, !795}
!821 = !{!822}
!822 = !DILocalVariable(name: "dev", arg: 1, scope: !818, file: !766, line: 460, type: !795)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !824)
!824 = !{!825, !826, !827, !828}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !823, file: !10, line: 55, baseType: !357, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !823, file: !10, line: 57, baseType: !357, size: 32, offset: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !823, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !823, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !818, file: !766, line: 497, type: !823, isLocal: true, isDefinition: true, align: 32)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !818, file: !766, line: 507, type: !823, isLocal: true, isDefinition: true, align: 32)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !818, file: !766, line: 512, type: !823, isLocal: true, isDefinition: true, align: 32)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !818, file: !766, line: 516, type: !823, isLocal: true, isDefinition: true, align: 32)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !818, file: !766, line: 523, type: !823, isLocal: true, isDefinition: true, align: 32)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !818, file: !766, line: 527, type: !823, isLocal: true, isDefinition: true, align: 32)
!841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 512, elements: !812)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !127, line: 127, baseType: !697)
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !846, file: !851, line: 21, type: !871, isLocal: false, isDefinition: true, align: 16)
!846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !848, splitDebugInlining: false, nameTableKind: None)
!847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!848 = !{!849, !844, !855, !857, !859, !861, !863, !865, !867, !869}
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !846, file: !851, line: 16, type: !852, isLocal: false, isDefinition: true, align: 16)
!851 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 176, elements: !853)
!853 = !{!854}
!854 = !DISubrange(count: 11)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !846, file: !851, line: 28, type: !767, isLocal: false, isDefinition: true, align: 16)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !846, file: !851, line: 35, type: !767, isLocal: false, isDefinition: true, align: 16)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !846, file: !851, line: 42, type: !767, isLocal: false, isDefinition: true, align: 16)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !846, file: !851, line: 49, type: !767, isLocal: false, isDefinition: true, align: 16)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !846, file: !851, line: 56, type: !767, isLocal: false, isDefinition: true, align: 16)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !846, file: !851, line: 63, type: !767, isLocal: false, isDefinition: true, align: 16)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !846, file: !851, line: 70, type: !767, isLocal: false, isDefinition: true, align: 16)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !846, file: !851, line: 77, type: !767, isLocal: false, isDefinition: true, align: 16)
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 48, elements: !872)
!872 = !{!873}
!873 = !DISubrange(count: 3)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !876, file: !920, line: 398, type: !953, isLocal: true, isDefinition: true)
!876 = distinct !DICompileUnit(language: DW_LANG_C99, file: !877, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !878, retainedTypes: !891, globals: !917, splitDebugInlining: false, nameTableKind: None)
!877 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!878 = !{!879, !30, !884}
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !880, line: 190, baseType: !32, size: 32, elements: !881)
!880 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!881 = !{!882, !883}
!882 = !DIEnumerator(name: "SUCCESS", value: 0)
!883 = !DIEnumerator(name: "ERROR", value: 1)
!884 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !885, line: 44, baseType: !32, size: 32, elements: !886)
!885 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!886 = !{!887, !888, !889, !890}
!887 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!888 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!889 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!890 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!891 = !{!102, !103, !132, !892, !910, !916}
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 386, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 448, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !894, file: !127, line: 372, baseType: !131, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !894, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !894, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !894, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !894, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !894, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !894, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !894, file: !127, line: 379, baseType: !131, size: 32, offset: 224)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !894, file: !127, line: 380, baseType: !131, size: 32, offset: 256)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !894, file: !127, line: 381, baseType: !131, size: 32, offset: 288)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !894, file: !127, line: 382, baseType: !131, size: 32, offset: 320)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !894, file: !127, line: 383, baseType: !131, size: 32, offset: 352)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !894, file: !127, line: 384, baseType: !131, size: 32, offset: 384)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !894, file: !127, line: 385, baseType: !131, size: 32, offset: 416)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !912, line: 343, size: 64, elements: !913)
!912 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!913 = !{!914, !915}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !911, file: !912, line: 344, baseType: !132, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !911, file: !912, line: 345, baseType: !132, size: 32, offset: 32)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!917 = !{!918, !924, !940, !951, !874}
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !876, file: !920, line: 752, type: !921, isLocal: false, isDefinition: true, align: 16)
!920 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 512, elements: !922)
!922 = !{!923}
!923 = !DISubrange(count: 32)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !876, file: !920, line: 752, type: !926, isLocal: false, isDefinition: true, align: 32)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !928)
!928 = !{!929, !930, !931, !932, !938, !939}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !927, file: !165, line: 380, baseType: !168, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !927, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !927, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !927, file: !165, line: 386, baseType: !933, size: 32, offset: 96)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !935)
!935 = !{!936, !937}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !934, file: !165, line: 359, baseType: !176, size: 8)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !934, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !927, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !927, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !876, file: !920, line: 752, type: !942, isLocal: true, isDefinition: true, align: 32)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !944)
!944 = !{!945, !950}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !943, file: !156, line: 60, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DISubroutineType(types: !948)
!948 = !{!103, !949}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !943, file: !156, line: 65, baseType: !949, size: 32, offset: 32)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !876, file: !920, line: 752, type: !934, isLocal: true, isDefinition: true, align: 8)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !885, line: 100, size: 224, elements: !954)
!954 = !{!955, !961, !962, !971, !976, !981, !987}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !953, file: !885, line: 101, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !885, line: 76, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!103, !949, !960}
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !885, line: 56, baseType: !102)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !953, file: !885, line: 102, baseType: !956, size: 32, offset: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !953, file: !885, line: 103, baseType: !963, size: 32, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !885, line: 83, baseType: !964)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!103, !949, !960, !967, !102}
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !885, line: 72, baseType: !968)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!969 = !DISubroutineType(types: !970)
!970 = !{null, !949, !960, !102}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !953, file: !885, line: 104, baseType: !972, size: 32, offset: 96)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !885, line: 79, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!103, !949, !960, !916}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !953, file: !885, line: 105, baseType: !977, size: 32, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !885, line: 88, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{!884, !949, !960}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !953, file: !885, line: 106, baseType: !982, size: 32, offset: 160)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !885, line: 92, baseType: !983)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DISubroutineType(types: !985)
!985 = !{!103, !949, !960, !986}
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !885, line: 64, baseType: !102)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !953, file: !885, line: 107, baseType: !988, size: 32, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !885, line: 96, baseType: !989)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{!103, !949, !960, !102}
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !994, file: !998, line: 43, type: !1190, isLocal: true, isDefinition: true)
!994 = distinct !DICompileUnit(language: DW_LANG_C99, file: !995, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !996, retainedTypes: !1005, globals: !1085, splitDebugInlining: false, nameTableKind: None)
!995 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!996 = !{!30, !997}
!997 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !998, line: 214, baseType: !32, size: 32, elements: !999)
!998 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!999 = !{!1000, !1001, !1002, !1003, !1004}
!1000 = !DIEnumerator(name: "ESC_ESC", value: 0)
!1001 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!1002 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!1003 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!1004 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!1005 = !{!102, !103, !1006, !32, !24}
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1008)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !225, line: 336, size: 608, elements: !1009)
!1009 = !{!1010, !1029, !1033, !1037, !1050, !1055, !1059, !1063, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1008, file: !225, line: 365, baseType: !1011, size: 32)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!103, !1014, !246}
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021, !1027, !1028}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1016, file: !165, line: 380, baseType: !168, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1016, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1016, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1016, file: !165, line: 386, baseType: !1022, size: 32, offset: 96)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !1024)
!1024 = !{!1025, !1026}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1023, file: !165, line: 359, baseType: !176, size: 8)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1023, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1016, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1016, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1008, file: !225, line: 366, baseType: !1030, size: 32, offset: 32)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{null, !1014, !177}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1008, file: !225, line: 374, baseType: !1034, size: 32, offset: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!103, !1014}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1008, file: !225, line: 377, baseType: !1038, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!103, !1014, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !225, line: 122, size: 64, elements: !1044)
!1044 = !{!1045, !1046, !1047, !1048, !1049}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1043, file: !225, line: 123, baseType: !132, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1043, file: !225, line: 124, baseType: !176, size: 8, offset: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1043, file: !225, line: 125, baseType: !176, size: 8, offset: 40)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1043, file: !225, line: 126, baseType: !176, size: 8, offset: 48)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1043, file: !225, line: 127, baseType: !176, size: 8, offset: 56)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1008, file: !225, line: 379, baseType: !1051, size: 32, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!103, !1014, !1054}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1008, file: !225, line: 384, baseType: !1056, size: 32, offset: 160)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!103, !1014, !277, !103}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1008, file: !225, line: 393, baseType: !1060, size: 32, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!103, !1014, !283, !284}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1008, file: !225, line: 402, baseType: !1064, size: 32, offset: 224)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{null, !1014}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1008, file: !225, line: 405, baseType: !1064, size: 32, offset: 256)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1008, file: !225, line: 408, baseType: !1034, size: 32, offset: 288)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1008, file: !225, line: 411, baseType: !1064, size: 32, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1008, file: !225, line: 414, baseType: !1064, size: 32, offset: 352)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1008, file: !225, line: 417, baseType: !1034, size: 32, offset: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1008, file: !225, line: 420, baseType: !1034, size: 32, offset: 416)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1008, file: !225, line: 423, baseType: !1064, size: 32, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1008, file: !225, line: 426, baseType: !1064, size: 32, offset: 480)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1008, file: !225, line: 429, baseType: !1034, size: 32, offset: 512)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1008, file: !225, line: 432, baseType: !1034, size: 32, offset: 544)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1008, file: !225, line: 435, baseType: !1078, size: 32, offset: 576)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{null, !1014, !1081, !102}
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !225, line: 142, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{null, !1014, !102}
!1085 = !{!1086, !992, !1093, !1135, !1137, !1143, !1150, !1153, !1178, !1182, !1184, !1186, !1188}
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !994, file: !998, line: 603, type: !1088, isLocal: true, isDefinition: true, align: 32)
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1089, file: !156, line: 60, baseType: !1034, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1089, file: !156, line: 65, baseType: !1014, size: 32, offset: 32)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "avail_queue", scope: !994, file: !998, line: 108, type: !1095, isLocal: true, isDefinition: true)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !325, line: 2208, size: 128, elements: !1097)
!1097 = !{!1098}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1096, file: !325, line: 2209, baseType: !1099, size: 128)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !325, line: 1709, size: 128, elements: !1100)
!1100 = !{!1101, !1114, !1116}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1099, file: !325, line: 1710, baseType: !1102, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1103, line: 46, baseType: !1104)
!1103 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1103, line: 41, size: 64, elements: !1105)
!1105 = !{!1106, !1113}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1104, file: !1103, line: 42, baseType: !1107, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1103, line: 39, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1103, line: 35, size: 32, elements: !1110)
!1110 = !{!1111}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1109, file: !1103, line: 36, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1103, line: 32, baseType: !132)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1104, file: !1103, line: 43, baseType: !1107, size: 32, offset: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1099, file: !325, line: 1711, baseType: !1115, offset: 64)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1099, file: !325, line: 1712, baseType: !1117, size: 64, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !1119)
!1119 = !{!1120}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1118, file: !329, line: 232, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !1123)
!1123 = !{!1124, !1130}
!1124 = !DIDerivedType(tag: DW_TAG_member, scope: !1122, file: !334, line: 38, baseType: !1125, size: 32)
!1125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1122, file: !334, line: 38, size: 32, elements: !1126)
!1126 = !{!1127, !1129}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1125, file: !334, line: 39, baseType: !1128, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1125, file: !334, line: 40, baseType: !1128, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1122, file: !334, line: 42, baseType: !1131, size: 32, offset: 32)
!1131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1122, file: !334, line: 42, size: 32, elements: !1132)
!1132 = !{!1133, !1134}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1131, file: !334, line: 43, baseType: !1128, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1131, file: !334, line: 44, baseType: !1128, size: 32)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "lines_queue", scope: !994, file: !998, line: 109, type: !1095, isLocal: true, isDefinition: true)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "completion_cb", scope: !994, file: !998, line: 110, type: !1139, isLocal: true, isDefinition: true)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!176, !1142, !176}
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !994, file: !998, line: 54, type: !1145, isLocal: true, isDefinition: true)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1147, line: 40, baseType: !1148)
!1147 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!103, !108}
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !994, file: !998, line: 38, type: !1152, isLocal: true, isDefinition: true)
!1152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "cmd", scope: !1155, file: !998, line: 435, type: !1166, isLocal: true, isDefinition: true)
!1155 = distinct !DISubprogram(name: "uart_console_isr", scope: !998, file: !998, line: 428, type: !1083, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !1156)
!1156 = !{!1157, !1158, !1159, !1161, !1162}
!1157 = !DILocalVariable(name: "unused", arg: 1, scope: !1155, file: !998, line: 428, type: !1014)
!1158 = !DILocalVariable(name: "user_data", arg: 2, scope: !1155, file: !998, line: 428, type: !102)
!1159 = !DILocalVariable(name: "byte", scope: !1160, file: !998, line: 436, type: !176)
!1160 = distinct !DILexicalBlock(scope: !1155, file: !998, line: 434, column: 48)
!1161 = !DILocalVariable(name: "rx", scope: !1160, file: !998, line: 437, type: !103)
!1162 = !DILocalVariable(name: "ret", scope: !1163, file: !998, line: 461, type: !102)
!1163 = distinct !DILexicalBlock(scope: !1164, file: !998, line: 461, column: 10)
!1164 = distinct !DILexicalBlock(scope: !1165, file: !998, line: 460, column: 13)
!1165 = distinct !DILexicalBlock(scope: !1160, file: !998, line: 460, column: 7)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1168, line: 21, size: 1088, elements: !1169)
!1168 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1169 = !{!1170, !1173, !1174}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1167, file: !1168, line: 23, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1172)
!1172 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1167, file: !1168, line: 25, baseType: !176, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1167, file: !1168, line: 27, baseType: !1175, size: 1024, offset: 40)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1024, elements: !1176)
!1176 = !{!1177}
!1177 = !DISubrange(count: 128)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "esc_state", scope: !994, file: !998, line: 228, type: !1180, isLocal: true, isDefinition: true)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1181, line: 22, baseType: !1172)
!1181 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1182 = !DIGlobalVariableExpression(var: !1183, expr: !DIExpression())
!1183 = distinct !DIGlobalVariable(name: "ansi_val", scope: !994, file: !998, line: 229, type: !32, isLocal: true, isDefinition: true)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !994, file: !998, line: 229, type: !32, isLocal: true, isDefinition: true)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "cur", scope: !994, file: !998, line: 230, type: !176, isLocal: true, isDefinition: true)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "end", scope: !994, file: !998, line: 230, type: !176, isLocal: true, isDefinition: true)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1147, line: 45, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!103, !176}
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1196, file: !1346, line: 762, type: !1444, isLocal: true, isDefinition: true)
!1196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1197, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1198, retainedTypes: !1205, globals: !1343, splitDebugInlining: false, nameTableKind: None)
!1197 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!1198 = !{!30, !589, !595, !1199, !884}
!1199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !807, line: 43, baseType: !32, size: 32, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204}
!1201 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1202 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1203 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1204 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1205 = !{!102, !103, !1206, !1270, !1275, !636, !595, !589, !1280, !1281, !132, !1295, !1251, !1142, !1303, !1304}
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !590, line: 523, size: 288, elements: !1209)
!1209 = !{!1210, !1229, !1233, !1237, !1241, !1242, !1243, !1247, !1266}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1208, file: !590, line: 524, baseType: !1211, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!103, !1214, !624, !625}
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1227, !1228}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1216, file: !165, line: 380, baseType: !168, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1216, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1216, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1216, file: !165, line: 386, baseType: !1222, size: 32, offset: 96)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !1224)
!1224 = !{!1225, !1226}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1223, file: !165, line: 359, baseType: !176, size: 8)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1223, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1216, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1216, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1208, file: !590, line: 530, baseType: !1230, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 32)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!103, !1214, !630}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1208, file: !590, line: 532, baseType: !1234, size: 32, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!103, !1214, !636, !631}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1208, file: !590, line: 535, baseType: !1238, size: 32, offset: 96)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!103, !1214, !636}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1208, file: !590, line: 537, baseType: !1238, size: 32, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1208, file: !590, line: 539, baseType: !1238, size: 32, offset: 160)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1208, file: !590, line: 541, baseType: !1244, size: 32, offset: 192)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!103, !1214, !624, !589, !595}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1208, file: !590, line: 544, baseType: !1248, size: 32, offset: 224)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!103, !1214, !1251, !179}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !590, line: 478, size: 96, elements: !1253)
!1253 = !{!1254, !1260, !1265}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1252, file: !590, line: 482, baseType: !1255, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !656, line: 33, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !656, line: 29, size: 32, elements: !1257)
!1257 = !{!1258}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1256, file: !656, line: 30, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1252, file: !590, line: 485, baseType: !1261, size: 32, offset: 32)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !590, line: 464, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{null, !1214, !1251, !636}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1252, file: !590, line: 493, baseType: !636, size: 32, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1208, file: !590, line: 547, baseType: !1267, size: 32, offset: 256)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!132, !1214}
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !590, line: 428, size: 32, elements: !1273)
!1273 = !{!1274}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1272, file: !590, line: 434, baseType: !636, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !590, line: 441, size: 32, elements: !1278)
!1278 = !{!1279}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1277, file: !590, line: 447, baseType: !636, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 314, baseType: !1283)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 303, size: 320, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1283, file: !127, line: 305, baseType: !131, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1283, file: !127, line: 306, baseType: !131, size: 32, offset: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1283, file: !127, line: 307, baseType: !131, size: 32, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1283, file: !127, line: 308, baseType: !131, size: 32, offset: 96)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1283, file: !127, line: 309, baseType: !131, size: 32, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1283, file: !127, line: 310, baseType: !131, size: 32, offset: 160)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1283, file: !127, line: 311, baseType: !131, size: 32, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1283, file: !127, line: 312, baseType: !131, size: 32, offset: 224)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1283, file: !127, line: 313, baseType: !1294, size: 64, offset: 256)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 64, elements: !410)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !127, line: 325, baseType: !1297)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 320, size: 192, elements: !1298)
!1298 = !{!1299, !1300, !1301}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1297, file: !127, line: 322, baseType: !131, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1297, file: !127, line: 323, baseType: !131, size: 32, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1297, file: !127, line: 324, baseType: !1302, size: 128, offset: 64)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 128, elements: !768)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1306)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !885, line: 100, size: 224, elements: !1307)
!1307 = !{!1308, !1313, !1314, !1323, !1328, !1333, !1338}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1306, file: !885, line: 101, baseType: !1309, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !885, line: 76, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!103, !1214, !960}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1306, file: !885, line: 102, baseType: !1309, size: 32, offset: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1306, file: !885, line: 103, baseType: !1315, size: 32, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !885, line: 83, baseType: !1316)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!103, !1214, !960, !1319, !102}
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !885, line: 72, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{null, !1214, !960, !102}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1306, file: !885, line: 104, baseType: !1324, size: 32, offset: 96)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !885, line: 79, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!103, !1214, !960, !916}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1306, file: !885, line: 105, baseType: !1329, size: 32, offset: 128)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !885, line: 88, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!884, !1214, !960}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1306, file: !885, line: 106, baseType: !1334, size: 32, offset: 160)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !885, line: 92, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!103, !1214, !960, !986}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1306, file: !885, line: 107, baseType: !1339, size: 32, offset: 192)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !885, line: 96, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!103, !1214, !960, !102}
!1343 = !{!1344, !1350, !1352, !1362, !1367, !1369, !1371, !1376, !1378, !1380, !1385, !1387, !1389, !1391, !1393, !1395, !1400, !1402, !1404, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1194, !1440, !1442, !1455, !1457, !1459, !1461}
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1196, file: !1346, line: 762, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1346 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 128, elements: !1348)
!1348 = !{!1349}
!1349 = !DISubrange(count: 8)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1196, file: !1346, line: 762, type: !1215, isLocal: false, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1196, file: !1346, line: 762, type: !1354, isLocal: true, isDefinition: true, align: 32)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !1356)
!1356 = !{!1357, !1361}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1355, file: !156, line: 60, baseType: !1358, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!103, !1214}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1355, file: !156, line: 65, baseType: !1214, size: 32, offset: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1196, file: !1346, line: 766, type: !1364, isLocal: false, isDefinition: true, align: 16)
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 144, elements: !1365)
!1365 = !{!1366}
!1366 = !DISubrange(count: 9)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1196, file: !1346, line: 766, type: !1215, isLocal: false, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1196, file: !1346, line: 766, type: !1354, isLocal: true, isDefinition: true, align: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1196, file: !1346, line: 770, type: !1373, isLocal: false, isDefinition: true, align: 16)
!1373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 96, elements: !1374)
!1374 = !{!1375}
!1375 = !DISubrange(count: 6)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1196, file: !1346, line: 770, type: !1215, isLocal: false, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1196, file: !1346, line: 770, type: !1354, isLocal: true, isDefinition: true, align: 32)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1196, file: !1346, line: 774, type: !1382, isLocal: false, isDefinition: true, align: 16)
!1382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 80, elements: !1383)
!1383 = !{!1384}
!1384 = !DISubrange(count: 5)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1196, file: !1346, line: 774, type: !1215, isLocal: false, isDefinition: true, align: 32)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1196, file: !1346, line: 774, type: !1354, isLocal: true, isDefinition: true, align: 32)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1196, file: !1346, line: 778, type: !1382, isLocal: false, isDefinition: true, align: 16)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1196, file: !1346, line: 778, type: !1215, isLocal: false, isDefinition: true, align: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1196, file: !1346, line: 778, type: !1354, isLocal: true, isDefinition: true, align: 32)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1196, file: !1346, line: 790, type: !1397, isLocal: false, isDefinition: true, align: 16)
!1397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 112, elements: !1398)
!1398 = !{!1399}
!1399 = !DISubrange(count: 7)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1196, file: !1346, line: 790, type: !1215, isLocal: false, isDefinition: true, align: 32)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1196, file: !1346, line: 790, type: !1354, isLocal: true, isDefinition: true, align: 32)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1196, file: !1346, line: 762, type: !1406, isLocal: true, isDefinition: true)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1407, line: 237, size: 128, elements: !1408)
!1407 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1408 = !{!1409, !1410, !1411}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1406, file: !1407, line: 239, baseType: !1277, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1406, file: !1407, line: 241, baseType: !1214, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1406, file: !1407, line: 243, baseType: !1412, size: 64, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !656, line: 40, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !656, line: 35, size: 64, elements: !1414)
!1414 = !{!1415, !1417}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1413, file: !656, line: 36, baseType: !1416, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1413, file: !656, line: 37, baseType: !1416, size: 32, offset: 32)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1196, file: !1346, line: 762, type: !1223, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1196, file: !1346, line: 766, type: !1406, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1196, file: !1346, line: 766, type: !1223, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1196, file: !1346, line: 770, type: !1406, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1196, file: !1346, line: 770, type: !1223, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1196, file: !1346, line: 774, type: !1406, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1196, file: !1346, line: 774, type: !1223, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1196, file: !1346, line: 778, type: !1406, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1196, file: !1346, line: 778, type: !1223, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1196, file: !1346, line: 790, type: !1406, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1196, file: !1346, line: 790, type: !1223, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1196, file: !1346, line: 656, type: !1207, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1196, file: !1346, line: 766, type: !1444, isLocal: true, isDefinition: true)
!1444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1407, line: 224, size: 160, elements: !1446)
!1446 = !{!1447, !1448, !1449, !1450}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1445, file: !1407, line: 226, baseType: !1272, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1445, file: !1407, line: 228, baseType: !916, size: 32, offset: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1445, file: !1407, line: 230, baseType: !103, size: 32, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1445, file: !1407, line: 231, baseType: !1451, size: 64, offset: 96)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !912, line: 343, size: 64, elements: !1452)
!1452 = !{!1453, !1454}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1451, file: !912, line: 344, baseType: !132, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1451, file: !912, line: 345, baseType: !132, size: 32, offset: 32)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1196, file: !1346, line: 770, type: !1444, isLocal: true, isDefinition: true)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1196, file: !1346, line: 774, type: !1444, isLocal: true, isDefinition: true)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1196, file: !1346, line: 778, type: !1444, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1196, file: !1346, line: 790, type: !1444, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1465, file: !1633, line: 1914, type: !1714, isLocal: true, isDefinition: true)
!1465 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1466, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1467, retainedTypes: !1500, globals: !1630, splitDebugInlining: false, nameTableKind: None)
!1466 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!1467 = !{!30, !1468, !1475, !1482, !1489, !1495, !884}
!1468 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !225, line: 47, baseType: !32, size: 32, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473, !1474}
!1470 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1471 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1472 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1473 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1474 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1475 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !225, line: 75, baseType: !32, size: 32, elements: !1476)
!1476 = !{!1477, !1478, !1479, !1480, !1481}
!1477 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1478 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1479 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1480 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1481 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1482 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !225, line: 92, baseType: !32, size: 32, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487, !1488}
!1484 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1485 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1486 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1487 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1488 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1489 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !225, line: 84, baseType: !32, size: 32, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494}
!1491 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1492 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1493 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1494 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1495 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !225, line: 107, baseType: !32, size: 32, elements: !1496)
!1496 = !{!1497, !1498, !1499}
!1497 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1498 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1499 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1500 = !{!102, !103, !1501, !177, !176, !1580, !132, !960, !1591, !353}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !225, line: 336, size: 608, elements: !1504)
!1504 = !{!1505, !1524, !1528, !1532, !1545, !1550, !1554, !1558, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1503, file: !225, line: 365, baseType: !1506, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!103, !1509, !246}
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !1512)
!1512 = !{!1513, !1514, !1515, !1516, !1522, !1523}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1511, file: !165, line: 380, baseType: !168, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1511, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1511, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1511, file: !165, line: 386, baseType: !1517, size: 32, offset: 96)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !1519)
!1519 = !{!1520, !1521}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1518, file: !165, line: 359, baseType: !176, size: 8)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1518, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1511, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1511, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1503, file: !225, line: 366, baseType: !1525, size: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{null, !1509, !177}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1503, file: !225, line: 374, baseType: !1529, size: 32, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!103, !1509}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1503, file: !225, line: 377, baseType: !1533, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!103, !1509, !1536}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !225, line: 122, size: 64, elements: !1539)
!1539 = !{!1540, !1541, !1542, !1543, !1544}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1538, file: !225, line: 123, baseType: !132, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1538, file: !225, line: 124, baseType: !176, size: 8, offset: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1538, file: !225, line: 125, baseType: !176, size: 8, offset: 40)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1538, file: !225, line: 126, baseType: !176, size: 8, offset: 48)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1538, file: !225, line: 127, baseType: !176, size: 8, offset: 56)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1503, file: !225, line: 379, baseType: !1546, size: 32, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!103, !1509, !1549}
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1503, file: !225, line: 384, baseType: !1551, size: 32, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!103, !1509, !277, !103}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1503, file: !225, line: 393, baseType: !1555, size: 32, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!103, !1509, !283, !284}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1503, file: !225, line: 402, baseType: !1559, size: 32, offset: 224)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{null, !1509}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1503, file: !225, line: 405, baseType: !1559, size: 32, offset: 256)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1503, file: !225, line: 408, baseType: !1529, size: 32, offset: 288)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1503, file: !225, line: 411, baseType: !1559, size: 32, offset: 320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1503, file: !225, line: 414, baseType: !1559, size: 32, offset: 352)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1503, file: !225, line: 417, baseType: !1529, size: 32, offset: 384)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1503, file: !225, line: 420, baseType: !1529, size: 32, offset: 416)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1503, file: !225, line: 423, baseType: !1559, size: 32, offset: 448)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1503, file: !225, line: 426, baseType: !1559, size: 32, offset: 480)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1503, file: !225, line: 429, baseType: !1529, size: 32, offset: 512)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1503, file: !225, line: 432, baseType: !1529, size: 32, offset: 544)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1503, file: !225, line: 435, baseType: !1573, size: 32, offset: 576)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{null, !1509, !1576, !102}
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !225, line: 142, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{null, !1509, !102}
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !127, line: 505, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 496, size: 224, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587, !1588, !1589, !1590}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1582, file: !127, line: 498, baseType: !131, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1582, file: !127, line: 499, baseType: !131, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1582, file: !127, line: 500, baseType: !131, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1582, file: !127, line: 501, baseType: !131, size: 32, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1582, file: !127, line: 502, baseType: !131, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1582, file: !127, line: 503, baseType: !131, size: 32, offset: 160)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1582, file: !127, line: 504, baseType: !131, size: 32, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !885, line: 100, size: 224, elements: !1594)
!1594 = !{!1595, !1600, !1601, !1610, !1615, !1620, !1625}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1593, file: !885, line: 101, baseType: !1596, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !885, line: 76, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!103, !1509, !960}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1593, file: !885, line: 102, baseType: !1596, size: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1593, file: !885, line: 103, baseType: !1602, size: 32, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !885, line: 83, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!103, !1509, !960, !1606, !102}
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !885, line: 72, baseType: !1607)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1509, !960, !102}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1593, file: !885, line: 104, baseType: !1611, size: 32, offset: 96)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !885, line: 79, baseType: !1612)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!103, !1509, !960, !916}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1593, file: !885, line: 105, baseType: !1616, size: 32, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !885, line: 88, baseType: !1617)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 32)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!884, !1509, !960}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1593, file: !885, line: 106, baseType: !1621, size: 32, offset: 160)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !885, line: 92, baseType: !1622)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 32)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!103, !1509, !960, !986}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1593, file: !885, line: 107, baseType: !1626, size: 32, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !885, line: 96, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!103, !1509, !960, !102}
!1630 = !{!1631, !1634, !1636, !1643, !1645, !1647, !1649, !1651, !1463, !1653, !1661, !1684, !1687, !1690, !1701, !1703, !1712, !1731, !1733, !1735, !1737, !1739, !1744}
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1465, file: !1633, line: 1914, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1633 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1465, file: !1633, line: 1914, type: !1510, isLocal: false, isDefinition: true, align: 32)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1465, file: !1633, line: 1914, type: !1638, isLocal: true, isDefinition: true, align: 32)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1639, file: !156, line: 60, baseType: !1529, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1639, file: !156, line: 65, baseType: !1509, size: 32, offset: 32)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1465, file: !1633, line: 1914, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1465, file: !1633, line: 1914, type: !1510, isLocal: false, isDefinition: true, align: 32)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1465, file: !1633, line: 1914, type: !1638, isLocal: true, isDefinition: true, align: 32)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1465, file: !1633, line: 1914, type: !1518, isLocal: true, isDefinition: true, align: 8)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1465, file: !1633, line: 1914, type: !1518, isLocal: true, isDefinition: true, align: 8)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1465, file: !1633, line: 1914, type: !1655, isLocal: true, isDefinition: true)
!1655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1656, size: 64, elements: !509)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !912, line: 343, size: 64, elements: !1658)
!1658 = !{!1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1657, file: !912, line: 344, baseType: !132, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1657, file: !912, line: 345, baseType: !132, size: 32, offset: 32)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1465, file: !1633, line: 1914, type: !1663, isLocal: true, isDefinition: true)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1665, line: 60, size: 64, elements: !1666)
!1665 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1666 = !{!1667, !1683}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1664, file: !1665, line: 69, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1665, line: 50, size: 64, elements: !1671)
!1671 = !{!1672, !1681, !1682}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1670, file: !1665, line: 52, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1675)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !1677)
!1676 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !1678)
!1678 = !{!1679, !1680}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1677, file: !1676, line: 34, baseType: !132, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1677, file: !1676, line: 36, baseType: !132, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1670, file: !1665, line: 54, baseType: !176, size: 8, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1670, file: !1665, line: 56, baseType: !176, size: 8, offset: 40)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1664, file: !1665, line: 71, baseType: !176, size: 8, offset: 32)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1465, file: !1633, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1669, size: 64, elements: !509)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1465, file: !1633, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1674, size: 128, elements: !410)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1692, file: !1633, line: 1914, type: !1695, isLocal: true, isDefinition: true, align: 32)
!1692 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1633, file: !1633, line: 1914, type: !1560, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !1693)
!1693 = !{!1694}
!1694 = !DILocalVariable(name: "dev", arg: 1, scope: !1692, file: !1633, line: 1914, type: !1509)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1696)
!1696 = !{!1697, !1698, !1699, !1700}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1695, file: !10, line: 55, baseType: !357, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1695, file: !10, line: 57, baseType: !357, size: 32, offset: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1695, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1695, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1465, file: !1633, line: 1539, type: !1502, isLocal: true, isDefinition: true)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1465, file: !1633, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1706, line: 74, size: 128, elements: !1707)
!1706 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1707 = !{!1708, !1709, !1710, !1711}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1705, file: !1706, line: 76, baseType: !132, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1705, file: !1706, line: 78, baseType: !1509, size: 32, offset: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1705, file: !1706, line: 80, baseType: !1576, size: 32, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1705, file: !1706, line: 81, baseType: !102, size: 32, offset: 96)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1465, file: !1633, line: 1914, type: !1714, isLocal: true, isDefinition: true)
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1706, line: 22, size: 256, elements: !1716)
!1716 = !{!1717, !1718, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1729}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1715, file: !1706, line: 24, baseType: !1580, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1715, file: !1706, line: 26, baseType: !1719, size: 32, offset: 32)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1715, file: !1706, line: 28, baseType: !369, size: 32, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1715, file: !1706, line: 30, baseType: !179, size: 8, offset: 96)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1715, file: !1706, line: 32, baseType: !103, size: 32, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1715, file: !1706, line: 34, baseType: !179, size: 8, offset: 160)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1715, file: !1706, line: 36, baseType: !179, size: 8, offset: 168)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1715, file: !1706, line: 38, baseType: !179, size: 8, offset: 176)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1715, file: !1706, line: 40, baseType: !179, size: 8, offset: 184)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1715, file: !1706, line: 41, baseType: !1728, size: 32, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1715, file: !1706, line: 44, baseType: !1730, size: 32, offset: 224)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !225, line: 150, baseType: !1559)
!1731 = !DIGlobalVariableExpression(var: !1732, expr: !DIExpression())
!1732 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1465, file: !1633, line: 1914, type: !1655, isLocal: true, isDefinition: true)
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1465, file: !1633, line: 1914, type: !1663, isLocal: true, isDefinition: true)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1465, file: !1633, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1465, file: !1633, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1741, file: !1633, line: 1914, type: !1695, isLocal: true, isDefinition: true, align: 32)
!1741 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1633, file: !1633, line: 1914, type: !1560, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !1742)
!1742 = !{!1743}
!1743 = !DILocalVariable(name: "dev", arg: 1, scope: !1741, file: !1633, line: 1914, type: !1509)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1465, file: !1633, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1748, file: !1828, line: 65, type: !131, isLocal: true, isDefinition: true)
!1748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1749, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1750, retainedTypes: !1751, globals: !1825, splitDebugInlining: false, nameTableKind: None)
!1749 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!1750 = !{!697}
!1751 = !{!1752, !1754, !357, !176, !132, !1762, !1793}
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1753, line: 46, baseType: !445)
!1753 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !520, line: 712, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 706, size: 128, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1756, file: !520, line: 708, baseType: !131, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1756, file: !520, line: 709, baseType: !131, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1756, file: !520, line: 710, baseType: !131, size: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1756, file: !520, line: 711, baseType: !524, size: 32, offset: 96)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !520, line: 360, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 345, size: 28704, elements: !1765)
!1765 = !{!1766, !1768, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1783, !1788, !1792}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1764, file: !520, line: 347, baseType: !1767, size: 256)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 256, elements: !1348)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1764, file: !520, line: 348, baseType: !1769, size: 768, offset: 256)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 768, elements: !1770)
!1770 = !{!1771}
!1771 = !DISubrange(count: 24)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1764, file: !520, line: 349, baseType: !1767, size: 256, offset: 1024)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1764, file: !520, line: 350, baseType: !1769, size: 768, offset: 1280)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1764, file: !520, line: 351, baseType: !1767, size: 256, offset: 2048)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1764, file: !520, line: 352, baseType: !1769, size: 768, offset: 2304)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1764, file: !520, line: 353, baseType: !1767, size: 256, offset: 3072)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1764, file: !520, line: 354, baseType: !1769, size: 768, offset: 3328)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1764, file: !520, line: 355, baseType: !1767, size: 256, offset: 4096)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1764, file: !520, line: 356, baseType: !1780, size: 1792, offset: 4352)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 1792, elements: !1781)
!1781 = !{!1782}
!1782 = !DISubrange(count: 56)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1764, file: !520, line: 357, baseType: !1784, size: 1920, offset: 6144)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1785, size: 1920, elements: !1786)
!1785 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !176)
!1786 = !{!1787}
!1787 = !DISubrange(count: 240)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1764, file: !520, line: 358, baseType: !1789, size: 20608, offset: 8064)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 20608, elements: !1790)
!1790 = !{!1791}
!1791 = !DISubrange(count: 644)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1764, file: !520, line: 359, baseType: !131, size: 32, offset: 28672)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !520, line: 402, baseType: !1795)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 379, size: 1120, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1800, !1801, !1802, !1803, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1816, !1817, !1818, !1820, !1822, !1824}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1795, file: !520, line: 381, baseType: !524, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1795, file: !520, line: 382, baseType: !131, size: 32, offset: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1795, file: !520, line: 383, baseType: !131, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1795, file: !520, line: 384, baseType: !131, size: 32, offset: 96)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1795, file: !520, line: 385, baseType: !131, size: 32, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1795, file: !520, line: 386, baseType: !131, size: 32, offset: 160)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1795, file: !520, line: 387, baseType: !1804, size: 96, offset: 192)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1785, size: 96, elements: !1805)
!1805 = !{!1806}
!1806 = !DISubrange(count: 12)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1795, file: !520, line: 388, baseType: !131, size: 32, offset: 288)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1795, file: !520, line: 389, baseType: !131, size: 32, offset: 320)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1795, file: !520, line: 390, baseType: !131, size: 32, offset: 352)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1795, file: !520, line: 391, baseType: !131, size: 32, offset: 384)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1795, file: !520, line: 392, baseType: !131, size: 32, offset: 416)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1795, file: !520, line: 393, baseType: !131, size: 32, offset: 448)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1795, file: !520, line: 394, baseType: !131, size: 32, offset: 480)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1795, file: !520, line: 395, baseType: !1815, size: 64, offset: 512)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 64, elements: !410)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1795, file: !520, line: 396, baseType: !524, size: 32, offset: 576)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1795, file: !520, line: 397, baseType: !524, size: 32, offset: 608)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1795, file: !520, line: 398, baseType: !1819, size: 128, offset: 640)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 128, elements: !768)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1795, file: !520, line: 399, baseType: !1821, size: 160, offset: 768)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 160, elements: !1383)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1795, file: !520, line: 400, baseType: !1823, size: 160, offset: 928)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 160, elements: !1383)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1795, file: !520, line: 401, baseType: !131, size: 32, offset: 1088)
!1825 = !{!1826, !1852, !1855, !1857, !1859, !1746}
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1748, file: !1828, line: 285, type: !1829, isLocal: true, isDefinition: true, align: 32)
!1828 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !1831)
!1831 = !{!1832, !1851}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1830, file: !156, line: 60, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!103, !1836}
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1838)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843, !1849, !1850}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1838, file: !165, line: 380, baseType: !168, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1838, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1838, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1838, file: !165, line: 386, baseType: !1844, size: 32, offset: 96)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !1846)
!1846 = !{!1847, !1848}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1845, file: !165, line: 359, baseType: !176, size: 8)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1845, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1838, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1838, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1830, file: !156, line: 65, baseType: !1836, size: 32, offset: 32)
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(name: "lock", scope: !1748, file: !1828, line: 34, type: !1854, isLocal: true, isDefinition: true)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!1855 = !DIGlobalVariableExpression(var: !1856, expr: !DIExpression())
!1856 = distinct !DIGlobalVariable(name: "last_load", scope: !1748, file: !1828, line: 36, type: !132, isLocal: true, isDefinition: true)
!1857 = !DIGlobalVariableExpression(var: !1858, expr: !DIExpression())
!1858 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1748, file: !1828, line: 48, type: !132, isLocal: true, isDefinition: true)
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1748, file: !1828, line: 54, type: !132, isLocal: true, isDefinition: true)
!1861 = !DIGlobalVariableExpression(var: !1862, expr: !DIExpression())
!1862 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1863, file: !1944, line: 22, type: !1946, isLocal: true, isDefinition: true)
!1863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !588, retainedTypes: !1865, globals: !1941, splitDebugInlining: false, nameTableKind: None)
!1864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!1865 = !{!1866, !1930, !1935, !636, !595, !589, !1940, !102}
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !590, line: 523, size: 288, elements: !1869)
!1869 = !{!1870, !1889, !1893, !1897, !1901, !1902, !1903, !1907, !1926}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1868, file: !590, line: 524, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!103, !1874, !624, !625}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !1877)
!1877 = !{!1878, !1879, !1880, !1881, !1887, !1888}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1876, file: !165, line: 380, baseType: !168, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1876, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1876, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1876, file: !165, line: 386, baseType: !1882, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !1884)
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1883, file: !165, line: 359, baseType: !176, size: 8)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1883, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1876, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1876, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1868, file: !590, line: 530, baseType: !1890, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!103, !1874, !630}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1868, file: !590, line: 532, baseType: !1894, size: 32, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!103, !1874, !636, !631}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1868, file: !590, line: 535, baseType: !1898, size: 32, offset: 96)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DISubroutineType(types: !1900)
!1900 = !{!103, !1874, !636}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1868, file: !590, line: 537, baseType: !1898, size: 32, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1868, file: !590, line: 539, baseType: !1898, size: 32, offset: 160)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1868, file: !590, line: 541, baseType: !1904, size: 32, offset: 192)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!103, !1874, !624, !589, !595}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1868, file: !590, line: 544, baseType: !1908, size: 32, offset: 224)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!103, !1874, !1911, !179}
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !590, line: 478, size: 96, elements: !1913)
!1913 = !{!1914, !1920, !1925}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1912, file: !590, line: 482, baseType: !1915, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !656, line: 33, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !656, line: 29, size: 32, elements: !1917)
!1917 = !{!1918}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1916, file: !656, line: 30, baseType: !1919, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1912, file: !590, line: 485, baseType: !1921, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !590, line: 464, baseType: !1922)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{null, !1874, !1911, !636}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1912, file: !590, line: 493, baseType: !636, size: 32, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1868, file: !590, line: 547, baseType: !1927, size: 32, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!132, !1874}
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !590, line: 428, size: 32, elements: !1933)
!1933 = !{!1934}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1932, file: !590, line: 434, baseType: !636, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1937)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !590, line: 441, size: 32, elements: !1938)
!1938 = !{!1939}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1937, file: !590, line: 447, baseType: !636, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1941 = !{!1942, !1861}
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1943 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1863, file: !1944, line: 37, type: !1945, isLocal: true, isDefinition: true)
!1944 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1947, size: 352, elements: !853)
!1947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1874)
!1948 = !DIGlobalVariableExpression(var: !1949, expr: !DIExpression())
!1949 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1950, file: !1974, line: 129, type: !1981, isLocal: false, isDefinition: true)
!1950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1952, globals: !1971, splitDebugInlining: false, nameTableKind: None)
!1951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!1952 = !{!1953}
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 386, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 448, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1955, file: !127, line: 372, baseType: !131, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1955, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1955, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1955, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1955, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1955, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1955, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1955, file: !127, line: 379, baseType: !131, size: 32, offset: 224)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1955, file: !127, line: 380, baseType: !131, size: 32, offset: 256)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1955, file: !127, line: 381, baseType: !131, size: 32, offset: 288)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1955, file: !127, line: 382, baseType: !131, size: 32, offset: 320)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1955, file: !127, line: 383, baseType: !131, size: 32, offset: 352)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1955, file: !127, line: 384, baseType: !131, size: 32, offset: 384)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1955, file: !127, line: 385, baseType: !131, size: 32, offset: 416)
!1971 = !{!1972, !1975, !1978, !1948}
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1950, file: !1974, line: 126, type: !132, isLocal: false, isDefinition: true)
!1974 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1950, file: !1974, line: 127, type: !1977, isLocal: false, isDefinition: true)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 72, elements: !1365)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1950, file: !1974, line: 128, type: !1980, isLocal: false, isDefinition: true)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 128, elements: !812)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 64, elements: !1348)
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1984, file: !1987, line: 23, type: !284, isLocal: false, isDefinition: true)
!1984 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1985, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1986, splitDebugInlining: false, nameTableKind: None)
!1985 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!1986 = !{!1982}
!1987 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1988 = !DIGlobalVariableExpression(var: !1989, expr: !DIExpression())
!1989 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1990, file: !1994, line: 86, type: !2241, isLocal: false, isDefinition: true, align: 512)
!1990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1992, retainedTypes: !2001, globals: !2074, splitDebugInlining: false, nameTableKind: None)
!1991 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!1992 = !{!1993, !30, !697}
!1993 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1994, line: 63, baseType: !32, size: 32, elements: !1995)
!1994 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1995 = !{!1996, !1997, !1998, !1999, !2000}
!1996 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1997 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1998 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1999 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2000 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2001 = !{!369, !102, !103, !2002, !1142, !132, !2032, !357, !176, !2057}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2005, line: 51, size: 64, elements: !2006)
!2005 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2006 = !{!2007, !2027}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2004, file: !2005, line: 52, baseType: !2008, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2005, line: 38, baseType: !2009)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!103, !2012, !283, !353}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2025, !2026}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2014, file: !165, line: 380, baseType: !168, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2014, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2014, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2014, file: !165, line: 386, baseType: !2020, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 32)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !2022)
!2022 = !{!2023, !2024}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2021, file: !165, line: 359, baseType: !176, size: 8)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2021, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2014, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2014, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2004, file: !2005, line: 53, baseType: !2028, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2005, line: 47, baseType: !2029)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!103, !2012, !283, !353, !132}
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !520, line: 402, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 379, size: 1120, elements: !2035)
!2035 = !{!2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2034, file: !520, line: 381, baseType: !524, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2034, file: !520, line: 382, baseType: !131, size: 32, offset: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2034, file: !520, line: 383, baseType: !131, size: 32, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2034, file: !520, line: 384, baseType: !131, size: 32, offset: 96)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2034, file: !520, line: 385, baseType: !131, size: 32, offset: 128)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2034, file: !520, line: 386, baseType: !131, size: 32, offset: 160)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2034, file: !520, line: 387, baseType: !1804, size: 96, offset: 192)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2034, file: !520, line: 388, baseType: !131, size: 32, offset: 288)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2034, file: !520, line: 389, baseType: !131, size: 32, offset: 320)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2034, file: !520, line: 390, baseType: !131, size: 32, offset: 352)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2034, file: !520, line: 391, baseType: !131, size: 32, offset: 384)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2034, file: !520, line: 392, baseType: !131, size: 32, offset: 416)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2034, file: !520, line: 393, baseType: !131, size: 32, offset: 448)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2034, file: !520, line: 394, baseType: !131, size: 32, offset: 480)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2034, file: !520, line: 395, baseType: !1815, size: 64, offset: 512)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2034, file: !520, line: 396, baseType: !524, size: 32, offset: 576)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2034, file: !520, line: 397, baseType: !524, size: 32, offset: 608)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2034, file: !520, line: 398, baseType: !1819, size: 128, offset: 640)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2034, file: !520, line: 399, baseType: !1821, size: 160, offset: 768)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2034, file: !520, line: 400, baseType: !1823, size: 160, offset: 928)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2034, file: !520, line: 401, baseType: !131, size: 32, offset: 1088)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !520, line: 360, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 345, size: 28704, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2059, file: !520, line: 347, baseType: !1767, size: 256)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2059, file: !520, line: 348, baseType: !1769, size: 768, offset: 256)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2059, file: !520, line: 349, baseType: !1767, size: 256, offset: 1024)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2059, file: !520, line: 350, baseType: !1769, size: 768, offset: 1280)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2059, file: !520, line: 351, baseType: !1767, size: 256, offset: 2048)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2059, file: !520, line: 352, baseType: !1769, size: 768, offset: 2304)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2059, file: !520, line: 353, baseType: !1767, size: 256, offset: 3072)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2059, file: !520, line: 354, baseType: !1769, size: 768, offset: 3328)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2059, file: !520, line: 355, baseType: !1767, size: 256, offset: 4096)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2059, file: !520, line: 356, baseType: !1780, size: 1792, offset: 4352)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2059, file: !520, line: 357, baseType: !1784, size: 1920, offset: 6144)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2059, file: !520, line: 358, baseType: !1789, size: 20608, offset: 8064)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2059, file: !520, line: 359, baseType: !131, size: 32, offset: 28672)
!2074 = !{!2075, !2197, !2206, !2208, !1988, !2211, !2213, !2218}
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "_kernel", scope: !1990, file: !1994, line: 40, type: !2077, isLocal: false, isDefinition: true)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !329, line: 158, size: 288, elements: !2078)
!2078 = !{!2079, !2192}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2077, file: !329, line: 159, baseType: !2080, size: 192)
!2080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2081, size: 192, elements: !509)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !329, line: 100, size: 192, elements: !2082)
!2082 = !{!2083, !2084, !2085, !2186, !2187, !2188, !2189}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2081, file: !329, line: 102, baseType: !132, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2081, file: !329, line: 105, baseType: !1142, size: 32, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2081, file: !329, line: 108, baseType: !2086, size: 32, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !2088)
!2088 = !{!2089, !2147, !2159, !2160, !2161, !2162, !2168, !2181}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2087, file: !380, line: 247, baseType: !2090, size: 384)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !2091)
!2091 = !{!2092, !2116, !2123, !2124, !2125, !2134, !2135, !2136}
!2092 = !DIDerivedType(tag: DW_TAG_member, scope: !2090, file: !380, line: 60, baseType: !2093, size: 64)
!2093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2090, file: !380, line: 60, size: 64, elements: !2094)
!2094 = !{!2095, !2110}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2093, file: !380, line: 61, baseType: !2096, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !2097)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !2098)
!2098 = !{!2099, !2105}
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !334, line: 38, baseType: !2100, size: 32)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2097, file: !334, line: 38, size: 32, elements: !2101)
!2101 = !{!2102, !2104}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2100, file: !334, line: 39, baseType: !2103, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2100, file: !334, line: 40, baseType: !2103, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !334, line: 42, baseType: !2106, size: 32, offset: 32)
!2106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2097, file: !334, line: 42, size: 32, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2106, file: !334, line: 43, baseType: !2103, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2106, file: !334, line: 44, baseType: !2103, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2093, file: !380, line: 62, baseType: !2111, size: 64)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !2112)
!2112 = !{!2113}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2111, file: !405, line: 50, baseType: !2114, size: 64)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 64, elements: !410)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2090, file: !380, line: 68, baseType: !2117, size: 32, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !2119)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !2120)
!2120 = !{!2121}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2119, file: !329, line: 232, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !2097)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2090, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2090, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !2090, file: !380, line: 90, baseType: !2126, size: 16, offset: 112)
!2126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2090, file: !380, line: 90, size: 16, elements: !2127)
!2127 = !{!2128, !2133}
!2128 = !DIDerivedType(tag: DW_TAG_member, scope: !2126, file: !380, line: 91, baseType: !2129, size: 16)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !380, line: 91, size: 16, elements: !2130)
!2130 = !{!2131, !2132}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2129, file: !380, line: 96, baseType: !428, size: 8)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2129, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2126, file: !380, line: 100, baseType: !353, size: 16)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2090, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2090, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2090, file: !380, line: 131, baseType: !2137, size: 192, offset: 192)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !2138)
!2138 = !{!2139, !2140, !2146}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2137, file: !329, line: 245, baseType: !2096, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2137, file: !329, line: 246, baseType: !2141, size: 32, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !2142)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 32)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{null, !2145}
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2137, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2087, file: !380, line: 250, baseType: !2148, size: 288, offset: 384)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2148, file: !449, line: 26, baseType: !132, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2148, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2148, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2148, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2148, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2148, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2148, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2148, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2148, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2087, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2087, file: !380, line: 256, baseType: !2118, size: 64, offset: 704)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2087, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2087, file: !380, line: 300, baseType: !2163, size: 96, offset: 800)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !2164)
!2164 = !{!2165, !2166, !2167}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2163, file: !380, line: 153, baseType: !22, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2163, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2163, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2087, file: !380, line: 325, baseType: !2169, size: 32, offset: 896)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 32)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !2171)
!2171 = !{!2172, !2178, !2179}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2170, file: !325, line: 5074, baseType: !2173, size: 96)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !2174)
!2174 = !{!2175, !2176, !2177}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2173, file: !475, line: 57, baseType: !478, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2173, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2173, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2170, file: !325, line: 5075, baseType: !2118, size: 64, offset: 96)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2170, file: !325, line: 5076, baseType: !2180, offset: 160)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2087, file: !380, line: 343, baseType: !2182, size: 64, offset: 928)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !2183)
!2183 = !{!2184, !2185}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2182, file: !449, line: 63, baseType: !132, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2182, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2081, file: !329, line: 111, baseType: !2086, size: 32, offset: 96)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2081, file: !329, line: 124, baseType: !103, size: 32, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2081, file: !329, line: 127, baseType: !176, size: 8, offset: 160)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2081, file: !329, line: 153, baseType: !2190, offset: 168)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2191, line: 33, elements: !486)
!2191 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2077, file: !329, line: 170, baseType: !2193, size: 96, offset: 192)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !329, line: 83, size: 96, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2193, file: !329, line: 86, baseType: !2086, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2193, file: !329, line: 90, baseType: !2122, size: 64, offset: 32)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1990, file: !1994, line: 43, type: !2199, isLocal: false, isDefinition: true, align: 512)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2200, size: 8704, elements: !2204)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2201, line: 47, size: 8, elements: !2202)
!2201 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2202 = !{!2203}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2200, file: !2201, line: 48, baseType: !108, size: 8)
!2204 = !{!2205}
!2205 = !DISubrange(count: 1088)
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1990, file: !1994, line: 44, type: !2087, isLocal: false, isDefinition: true)
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1990, file: !1994, line: 48, type: !2210, isLocal: false, isDefinition: true)
!2210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2087, size: 1024, elements: !509)
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1990, file: !1994, line: 217, type: !179, isLocal: false, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1990, file: !1994, line: 50, type: !2215, isLocal: true, isDefinition: true, align: 512)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2200, size: 2560, elements: !2216)
!2216 = !{!510, !2217}
!2217 = !DISubrange(count: 320)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "levels", scope: !2220, file: !1994, line: 232, type: !2240, isLocal: true, isDefinition: true)
!2220 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1994, file: !1994, line: 230, type: !2221, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !2223)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !1993}
!2223 = !{!2224, !2225, !2235, !2239}
!2224 = !DILocalVariable(name: "level", arg: 1, scope: !2220, file: !1994, line: 230, type: !1993)
!2225 = !DILocalVariable(name: "entry", scope: !2220, file: !1994, line: 244, type: !2226)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !2229)
!2229 = !{!2230, !2234}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2228, file: !156, line: 60, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2232 = !DISubroutineType(types: !2233)
!2233 = !{!103, !2012}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2228, file: !156, line: 65, baseType: !2012, size: 32, offset: 32)
!2235 = !DILocalVariable(name: "dev", scope: !2236, file: !1994, line: 247, type: !2012)
!2236 = distinct !DILexicalBlock(scope: !2237, file: !1994, line: 246, column: 64)
!2237 = distinct !DILexicalBlock(scope: !2238, file: !1994, line: 246, column: 2)
!2238 = distinct !DILexicalBlock(scope: !2220, file: !1994, line: 246, column: 2)
!2239 = !DILocalVariable(name: "rc", scope: !2236, file: !1994, line: 248, type: !103)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2226, size: 192, elements: !1374)
!2241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2200, size: 16896, elements: !2242)
!2242 = !{!510, !2243}
!2243 = !DISubrange(count: 2112)
!2244 = !DIGlobalVariableExpression(var: !2245, expr: !DIExpression())
!2245 = distinct !DIGlobalVariable(name: "states_str", scope: !2246, file: !2247, line: 276, type: !2370, isLocal: true, isDefinition: true)
!2246 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2247, file: !2247, line: 271, type: !2248, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !2361)
!2247 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!168, !2250, !1142, !369}
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !380, line: 347, baseType: !2251)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !2253)
!2253 = !{!2254, !2312, !2324, !2325, !2326, !2327, !2333, !2346}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2252, file: !380, line: 247, baseType: !2255, size: 384)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !2256)
!2256 = !{!2257, !2281, !2288, !2289, !2290, !2299, !2300, !2301}
!2257 = !DIDerivedType(tag: DW_TAG_member, scope: !2255, file: !380, line: 60, baseType: !2258, size: 64)
!2258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2255, file: !380, line: 60, size: 64, elements: !2259)
!2259 = !{!2260, !2275}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2258, file: !380, line: 61, baseType: !2261, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !2263)
!2263 = !{!2264, !2270}
!2264 = !DIDerivedType(tag: DW_TAG_member, scope: !2262, file: !334, line: 38, baseType: !2265, size: 32)
!2265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2262, file: !334, line: 38, size: 32, elements: !2266)
!2266 = !{!2267, !2269}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2265, file: !334, line: 39, baseType: !2268, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2265, file: !334, line: 40, baseType: !2268, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !2262, file: !334, line: 42, baseType: !2271, size: 32, offset: 32)
!2271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2262, file: !334, line: 42, size: 32, elements: !2272)
!2272 = !{!2273, !2274}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2271, file: !334, line: 43, baseType: !2268, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2271, file: !334, line: 44, baseType: !2268, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2258, file: !380, line: 62, baseType: !2276, size: 64)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !2277)
!2277 = !{!2278}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2276, file: !405, line: 50, baseType: !2279, size: 64)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2280, size: 64, elements: !410)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2255, file: !380, line: 68, baseType: !2282, size: 32, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !2284)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !2285)
!2285 = !{!2286}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2284, file: !329, line: 232, baseType: !2287, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !2262)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2255, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2255, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!2290 = !DIDerivedType(tag: DW_TAG_member, scope: !2255, file: !380, line: 90, baseType: !2291, size: 16, offset: 112)
!2291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2255, file: !380, line: 90, size: 16, elements: !2292)
!2292 = !{!2293, !2298}
!2293 = !DIDerivedType(tag: DW_TAG_member, scope: !2291, file: !380, line: 91, baseType: !2294, size: 16)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2291, file: !380, line: 91, size: 16, elements: !2295)
!2295 = !{!2296, !2297}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2294, file: !380, line: 96, baseType: !428, size: 8)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2294, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2291, file: !380, line: 100, baseType: !353, size: 16)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2255, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2255, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2255, file: !380, line: 131, baseType: !2302, size: 192, offset: 192)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !2303)
!2303 = !{!2304, !2305, !2311}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2302, file: !329, line: 245, baseType: !2261, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2302, file: !329, line: 246, baseType: !2306, size: 32, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !2307)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 32)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{null, !2310}
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2302, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2252, file: !380, line: 250, baseType: !2313, size: 288, offset: 384)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !2314)
!2314 = !{!2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2313, file: !449, line: 26, baseType: !132, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2313, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2313, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2313, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2313, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2313, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2313, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2313, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2313, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2252, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2252, file: !380, line: 256, baseType: !2283, size: 64, offset: 704)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2252, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2252, file: !380, line: 300, baseType: !2328, size: 96, offset: 800)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !2329)
!2329 = !{!2330, !2331, !2332}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2328, file: !380, line: 153, baseType: !22, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2328, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2328, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2252, file: !380, line: 325, baseType: !2334, size: 32, offset: 896)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !2336)
!2336 = !{!2337, !2343, !2344}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2335, file: !325, line: 5074, baseType: !2338, size: 96)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !2339)
!2339 = !{!2340, !2341, !2342}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2338, file: !475, line: 57, baseType: !478, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2338, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2338, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2335, file: !325, line: 5075, baseType: !2283, size: 64, offset: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2335, file: !325, line: 5076, baseType: !2345, offset: 160)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2252, file: !380, line: 343, baseType: !2347, size: 64, offset: 928)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !2348)
!2348 = !{!2349, !2350}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2347, file: !449, line: 63, baseType: !132, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2347, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!2351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2353, globals: !2357, splitDebugInlining: false, nameTableKind: None)
!2352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2353 = !{!102, !168, !1752, !176, !103, !2354, !24, !369, !1142, !22, !132, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2356)
!2356 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2357 = !{!2244, !2358}
!2358 = !DIGlobalVariableExpression(var: !2359, expr: !DIExpression())
!2359 = distinct !DIGlobalVariable(name: "states_sz", scope: !2246, file: !2247, line: 279, type: !2360, isLocal: true, isDefinition: true)
!2360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1945, size: 256, elements: !1348)
!2361 = !{!2362, !2363, !2364, !2365, !2366, !2367, !2368}
!2362 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2246, file: !2247, line: 271, type: !2250)
!2363 = !DILocalVariable(name: "buf", arg: 2, scope: !2246, file: !2247, line: 271, type: !1142)
!2364 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2246, file: !2247, line: 271, type: !369)
!2365 = !DILocalVariable(name: "off", scope: !2246, file: !2247, line: 273, type: !369)
!2366 = !DILocalVariable(name: "bit", scope: !2246, file: !2247, line: 274, type: !176)
!2367 = !DILocalVariable(name: "thread_state", scope: !2246, file: !2247, line: 275, type: !176)
!2368 = !DILocalVariable(name: "index", scope: !2369, file: !2247, line: 293, type: !176)
!2369 = distinct !DILexicalBlock(scope: !2246, file: !2247, line: 293, column: 2)
!2370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 256, elements: !1348)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "lock", scope: !2373, file: !2392, line: 39, type: !2393, isLocal: true, isDefinition: true)
!2373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2374, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2375, globals: !2391, splitDebugInlining: false, nameTableKind: None)
!2374 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2375 = !{!102, !179, !103, !2376}
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !2379)
!2379 = !{!2380, !2386}
!2380 = !DIDerivedType(tag: DW_TAG_member, scope: !2378, file: !334, line: 38, baseType: !2381, size: 32)
!2381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2378, file: !334, line: 38, size: 32, elements: !2382)
!2382 = !{!2383, !2385}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2381, file: !334, line: 39, baseType: !2384, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2381, file: !334, line: 40, baseType: !2384, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, scope: !2378, file: !334, line: 42, baseType: !2387, size: 32, offset: 32)
!2387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2378, file: !334, line: 42, size: 32, elements: !2388)
!2388 = !{!2389, !2390}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2387, file: !334, line: 43, baseType: !2384, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2387, file: !334, line: 44, baseType: !2384, size: 32)
!2391 = !{!2371}
!2392 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2396, file: !2504, line: 56, type: !2493, isLocal: false, isDefinition: true)
!2396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2397, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2398, globals: !2501, splitDebugInlining: false, nameTableKind: None)
!2397 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2398 = !{!2399, !1142, !102, !2499, !283, !1752, !357, !103, !132, !2355, !2500}
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 32)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !2401)
!2401 = !{!2402, !2460, !2472, !2473, !2474, !2475, !2481, !2494}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2400, file: !380, line: 247, baseType: !2403, size: 384)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !2404)
!2404 = !{!2405, !2429, !2436, !2437, !2438, !2447, !2448, !2449}
!2405 = !DIDerivedType(tag: DW_TAG_member, scope: !2403, file: !380, line: 60, baseType: !2406, size: 64)
!2406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2403, file: !380, line: 60, size: 64, elements: !2407)
!2407 = !{!2408, !2423}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2406, file: !380, line: 61, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !2411)
!2411 = !{!2412, !2418}
!2412 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !334, line: 38, baseType: !2413, size: 32)
!2413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2410, file: !334, line: 38, size: 32, elements: !2414)
!2414 = !{!2415, !2417}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2413, file: !334, line: 39, baseType: !2416, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2413, file: !334, line: 40, baseType: !2416, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !334, line: 42, baseType: !2419, size: 32, offset: 32)
!2419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2410, file: !334, line: 42, size: 32, elements: !2420)
!2420 = !{!2421, !2422}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2419, file: !334, line: 43, baseType: !2416, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2419, file: !334, line: 44, baseType: !2416, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2406, file: !380, line: 62, baseType: !2424, size: 64)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !2425)
!2425 = !{!2426}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2424, file: !405, line: 50, baseType: !2427, size: 64)
!2427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2428, size: 64, elements: !410)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2403, file: !380, line: 68, baseType: !2430, size: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !2432)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !2433)
!2433 = !{!2434}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2432, file: !329, line: 232, baseType: !2435, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !2410)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2403, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2403, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!2438 = !DIDerivedType(tag: DW_TAG_member, scope: !2403, file: !380, line: 90, baseType: !2439, size: 16, offset: 112)
!2439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2403, file: !380, line: 90, size: 16, elements: !2440)
!2440 = !{!2441, !2446}
!2441 = !DIDerivedType(tag: DW_TAG_member, scope: !2439, file: !380, line: 91, baseType: !2442, size: 16)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2439, file: !380, line: 91, size: 16, elements: !2443)
!2443 = !{!2444, !2445}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2442, file: !380, line: 96, baseType: !428, size: 8)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2442, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2439, file: !380, line: 100, baseType: !353, size: 16)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2403, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2403, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2403, file: !380, line: 131, baseType: !2450, size: 192, offset: 192)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !2451)
!2451 = !{!2452, !2453, !2459}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2450, file: !329, line: 245, baseType: !2409, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2450, file: !329, line: 246, baseType: !2454, size: 32, offset: 64)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !2455)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{null, !2458}
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2450, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2400, file: !380, line: 250, baseType: !2461, size: 288, offset: 384)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !2462)
!2462 = !{!2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2461, file: !449, line: 26, baseType: !132, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2461, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2461, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2461, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2461, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2461, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2461, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2461, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2461, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2400, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2400, file: !380, line: 256, baseType: !2431, size: 64, offset: 704)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2400, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2400, file: !380, line: 300, baseType: !2476, size: 96, offset: 800)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !2477)
!2477 = !{!2478, !2479, !2480}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2476, file: !380, line: 153, baseType: !22, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2476, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2476, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2400, file: !380, line: 325, baseType: !2482, size: 32, offset: 896)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !2484)
!2484 = !{!2485, !2491, !2492}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2483, file: !325, line: 5074, baseType: !2486, size: 96)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !2487)
!2487 = !{!2488, !2489, !2490}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2486, file: !475, line: 57, baseType: !478, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2486, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2486, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2483, file: !325, line: 5075, baseType: !2431, size: 64, offset: 96)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2483, file: !325, line: 5076, baseType: !2493, offset: 160)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2400, file: !380, line: 343, baseType: !2495, size: 64, offset: 928)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !2496)
!2496 = !{!2497, !2498}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2495, file: !449, line: 63, baseType: !132, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2495, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2501 = !{!2394, !2502, !2505, !2507}
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2396, file: !2504, line: 404, type: !103, isLocal: true, isDefinition: true)
!2504 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2505 = !DIGlobalVariableExpression(var: !2506, expr: !DIExpression())
!2506 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2396, file: !2504, line: 405, type: !103, isLocal: true, isDefinition: true)
!2507 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression())
!2508 = distinct !DIGlobalVariable(name: "pending_current", scope: !2396, file: !2504, line: 425, type: !2399, isLocal: true, isDefinition: true)
!2509 = !DIGlobalVariableExpression(var: !2510, expr: !DIExpression())
!2510 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2511, file: !2541, line: 15, type: !2355, isLocal: true, isDefinition: true)
!2511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2513, globals: !2538, splitDebugInlining: false, nameTableKind: None)
!2512 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2513 = !{!1752, !102, !357, !132, !2355, !103, !2514, !1142, !445}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !2516)
!2516 = !{!2517, !2532, !2537}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2515, file: !329, line: 245, baseType: !2518, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !2519)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !2520)
!2520 = !{!2521, !2527}
!2521 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !334, line: 38, baseType: !2522, size: 32)
!2522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !334, line: 38, size: 32, elements: !2523)
!2523 = !{!2524, !2526}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2522, file: !334, line: 39, baseType: !2525, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2522, file: !334, line: 40, baseType: !2525, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !334, line: 42, baseType: !2528, size: 32, offset: 32)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !334, line: 42, size: 32, elements: !2529)
!2529 = !{!2530, !2531}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2528, file: !334, line: 43, baseType: !2525, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2528, file: !334, line: 44, baseType: !2525, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2515, file: !329, line: 246, baseType: !2533, size: 32, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !2534)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{null, !2514}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2515, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!2538 = !{!2509, !2539, !2543, !2545}
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2511, file: !2541, line: 19, type: !2542, isLocal: true, isDefinition: true)
!2541 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!2543 = !DIGlobalVariableExpression(var: !2544, expr: !DIExpression())
!2544 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2511, file: !2541, line: 25, type: !103, isLocal: true, isDefinition: true)
!2545 = !DIGlobalVariableExpression(var: !2546, expr: !DIExpression())
!2546 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2511, file: !2541, line: 17, type: !2547, isLocal: true, isDefinition: true)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !2519)
!2548 = !DIGlobalVariableExpression(var: !2549, expr: !DIExpression())
!2549 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2550, file: !2569, line: 55, type: !2570, isLocal: true, isDefinition: true, align: 32)
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2552, globals: !2568, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2552 = !{!102, !1752, !103, !2553}
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !2555)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !2556)
!2556 = !{!2557, !2563}
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !334, line: 38, baseType: !2558, size: 32)
!2558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2555, file: !334, line: 38, size: 32, elements: !2559)
!2559 = !{!2560, !2562}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2558, file: !334, line: 39, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2558, file: !334, line: 40, baseType: !2561, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !334, line: 42, baseType: !2564, size: 32, offset: 32)
!2564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2555, file: !334, line: 42, size: 32, elements: !2565)
!2565 = !{!2566, !2567}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2564, file: !334, line: 43, baseType: !2561, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2564, file: !334, line: 44, baseType: !2561, size: 32)
!2568 = !{!2548}
!2569 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2571)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !156, line: 51, size: 64, elements: !2572)
!2572 = !{!2573, !2580}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2571, file: !156, line: 60, baseType: !2574, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!103, !2577}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2579)
!2579 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !156, line: 48, flags: DIFlagFwdDecl)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2571, file: !156, line: 65, baseType: !2577, size: 32, offset: 32)
!2581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2583 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2584, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2584 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2587, retainedTypes: !2595, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2587 = !{!30, !2588}
!2588 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2589, line: 54, baseType: !32, size: 32, elements: !2590)
!2589 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2590 = !{!2591, !2592, !2593, !2594}
!2591 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2592 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2593 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2594 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2595 = !{!102, !369, !283, !24, !2596, !22, !2602, !103, !916, !2617}
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2589, line: 58, baseType: !2598)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2589, line: 58, size: 64, elements: !2599)
!2599 = !{!2600}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2598, file: !2589, line: 58, baseType: !2601, size: 64)
!2601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1348)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2589, line: 68, size: 128, elements: !2604)
!2604 = !{!2605, !2608, !2609, !2610}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2603, file: !2589, line: 69, baseType: !2606, size: 64)
!2606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2607, size: 64, elements: !410)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2589, line: 61, baseType: !132)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2603, file: !2589, line: 70, baseType: !2607, size: 32, offset: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2603, file: !2589, line: 71, baseType: !132, size: 32, offset: 96)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2603, file: !2589, line: 77, baseType: !2611, offset: 128)
!2611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2612, elements: !2615)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2589, line: 64, size: 32, elements: !2613)
!2613 = !{!2614}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2612, file: !2589, line: 65, baseType: !2607, size: 32)
!2615 = !{!2616}
!2616 = !DISubrange(count: 0)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 32)
!2618 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2619, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2620, retainedTypes: !2640, splitDebugInlining: false, nameTableKind: None)
!2619 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2620 = !{!2621, !2629}
!2621 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2622, line: 69, baseType: !32, size: 32, elements: !2623)
!2622 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2623 = !{!2624, !2625, !2626, !2627, !2628}
!2624 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2625 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2626 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2627 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2628 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2629 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2622, line: 56, baseType: !32, size: 32, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639}
!2631 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2632 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2633 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2634 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2635 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2636 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2637 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2638 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2639 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2640 = !{!103, !2621, !2629, !2641, !429, !186, !2643, !2644, !177, !354, !168, !369, !102, !22, !32, !2646, !2647, !2648, !1172, !2649, !446, !2650, !2642, !2651, !2652, !2653, !2654}
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2622, line: 31, baseType: !2642)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !446)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !370, line: 329, baseType: !32)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2622, line: 32, baseType: !2645)
!2645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2356)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !370, line: 145, baseType: !103)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2656, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2656 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2659, splitDebugInlining: false, nameTableKind: None)
!2658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2659 = !{!176, !102, !103, !2660, !1752, !132, !2355}
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2662)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !225, line: 336, size: 608, elements: !2663)
!2663 = !{!2664, !2683, !2687, !2691, !2704, !2709, !2713, !2717, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2662, file: !225, line: 365, baseType: !2665, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 32)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{!103, !2668, !246}
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2670)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !2671)
!2671 = !{!2672, !2673, !2674, !2675, !2681, !2682}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2670, file: !165, line: 380, baseType: !168, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2670, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2670, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2670, file: !165, line: 386, baseType: !2676, size: 32, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !2678)
!2678 = !{!2679, !2680}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2677, file: !165, line: 359, baseType: !176, size: 8)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2677, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2670, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2670, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2662, file: !225, line: 366, baseType: !2684, size: 32, offset: 32)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{null, !2668, !177}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2662, file: !225, line: 374, baseType: !2688, size: 32, offset: 64)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 32)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!103, !2668}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2662, file: !225, line: 377, baseType: !2692, size: 32, offset: 96)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!103, !2668, !2695}
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2697)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !225, line: 122, size: 64, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702, !2703}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2697, file: !225, line: 123, baseType: !132, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2697, file: !225, line: 124, baseType: !176, size: 8, offset: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2697, file: !225, line: 125, baseType: !176, size: 8, offset: 40)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2697, file: !225, line: 126, baseType: !176, size: 8, offset: 48)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2697, file: !225, line: 127, baseType: !176, size: 8, offset: 56)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2662, file: !225, line: 379, baseType: !2705, size: 32, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!103, !2668, !2708}
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2662, file: !225, line: 384, baseType: !2710, size: 32, offset: 160)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!103, !2668, !277, !103}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2662, file: !225, line: 393, baseType: !2714, size: 32, offset: 192)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 32)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!103, !2668, !283, !284}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2662, file: !225, line: 402, baseType: !2718, size: 32, offset: 224)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{null, !2668}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2662, file: !225, line: 405, baseType: !2718, size: 32, offset: 256)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2662, file: !225, line: 408, baseType: !2688, size: 32, offset: 288)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2662, file: !225, line: 411, baseType: !2718, size: 32, offset: 320)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2662, file: !225, line: 414, baseType: !2718, size: 32, offset: 352)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2662, file: !225, line: 417, baseType: !2688, size: 32, offset: 384)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2662, file: !225, line: 420, baseType: !2688, size: 32, offset: 416)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2662, file: !225, line: 423, baseType: !2718, size: 32, offset: 448)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2662, file: !225, line: 426, baseType: !2718, size: 32, offset: 480)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2662, file: !225, line: 429, baseType: !2688, size: 32, offset: 512)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2662, file: !225, line: 432, baseType: !2688, size: 32, offset: 544)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2662, file: !225, line: 435, baseType: !2732, size: 32, offset: 576)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{null, !2668, !2735, !102}
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !225, line: 142, baseType: !2736)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 32)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{null, !2668, !102}
!2739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2740, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2741, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2740 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2741 = !{!2742, !30}
!2742 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2743, line: 27, baseType: !32, size: 32, elements: !2744)
!2743 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2744 = !{!2745, !2746, !2747, !2748, !2749}
!2745 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2746 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2747 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2748 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2749 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2752, retainedTypes: !2753, splitDebugInlining: false, nameTableKind: None)
!2751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2752 = !{!697, !2742, !30}
!2753 = !{!843, !2754, !102, !103, !357, !132, !176, !2771}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !520, line: 360, baseType: !2756)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 345, size: 28704, elements: !2757)
!2757 = !{!2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2756, file: !520, line: 347, baseType: !1767, size: 256)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2756, file: !520, line: 348, baseType: !1769, size: 768, offset: 256)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2756, file: !520, line: 349, baseType: !1767, size: 256, offset: 1024)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2756, file: !520, line: 350, baseType: !1769, size: 768, offset: 1280)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2756, file: !520, line: 351, baseType: !1767, size: 256, offset: 2048)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2756, file: !520, line: 352, baseType: !1769, size: 768, offset: 2304)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2756, file: !520, line: 353, baseType: !1767, size: 256, offset: 3072)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2756, file: !520, line: 354, baseType: !1769, size: 768, offset: 3328)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2756, file: !520, line: 355, baseType: !1767, size: 256, offset: 4096)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2756, file: !520, line: 356, baseType: !1780, size: 1792, offset: 4352)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2756, file: !520, line: 357, baseType: !1784, size: 1920, offset: 6144)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2756, file: !520, line: 358, baseType: !1789, size: 20608, offset: 8064)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2756, file: !520, line: 359, baseType: !131, size: 32, offset: 28672)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !520, line: 402, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 379, size: 1120, elements: !2774)
!2774 = !{!2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2773, file: !520, line: 381, baseType: !524, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2773, file: !520, line: 382, baseType: !131, size: 32, offset: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2773, file: !520, line: 383, baseType: !131, size: 32, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2773, file: !520, line: 384, baseType: !131, size: 32, offset: 96)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2773, file: !520, line: 385, baseType: !131, size: 32, offset: 128)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2773, file: !520, line: 386, baseType: !131, size: 32, offset: 160)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2773, file: !520, line: 387, baseType: !1804, size: 96, offset: 192)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2773, file: !520, line: 388, baseType: !131, size: 32, offset: 288)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2773, file: !520, line: 389, baseType: !131, size: 32, offset: 320)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2773, file: !520, line: 390, baseType: !131, size: 32, offset: 352)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2773, file: !520, line: 391, baseType: !131, size: 32, offset: 384)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2773, file: !520, line: 392, baseType: !131, size: 32, offset: 416)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2773, file: !520, line: 393, baseType: !131, size: 32, offset: 448)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2773, file: !520, line: 394, baseType: !131, size: 32, offset: 480)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2773, file: !520, line: 395, baseType: !1815, size: 64, offset: 512)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2773, file: !520, line: 396, baseType: !524, size: 32, offset: 576)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2773, file: !520, line: 397, baseType: !524, size: 32, offset: 608)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2773, file: !520, line: 398, baseType: !1819, size: 128, offset: 640)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2773, file: !520, line: 399, baseType: !1821, size: 160, offset: 768)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2773, file: !520, line: 400, baseType: !1823, size: 160, offset: 928)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2773, file: !520, line: 401, baseType: !131, size: 32, offset: 1088)
!2796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2798 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2799, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2800, splitDebugInlining: false, nameTableKind: None)
!2799 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2800 = !{!102, !103, !22, !2801}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !520, line: 402, baseType: !2803)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 379, size: 1120, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2803, file: !520, line: 381, baseType: !524, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2803, file: !520, line: 382, baseType: !131, size: 32, offset: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2803, file: !520, line: 383, baseType: !131, size: 32, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2803, file: !520, line: 384, baseType: !131, size: 32, offset: 96)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2803, file: !520, line: 385, baseType: !131, size: 32, offset: 128)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2803, file: !520, line: 386, baseType: !131, size: 32, offset: 160)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2803, file: !520, line: 387, baseType: !1804, size: 96, offset: 192)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2803, file: !520, line: 388, baseType: !131, size: 32, offset: 288)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2803, file: !520, line: 389, baseType: !131, size: 32, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2803, file: !520, line: 390, baseType: !131, size: 32, offset: 352)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2803, file: !520, line: 391, baseType: !131, size: 32, offset: 384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2803, file: !520, line: 392, baseType: !131, size: 32, offset: 416)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2803, file: !520, line: 393, baseType: !131, size: 32, offset: 448)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2803, file: !520, line: 394, baseType: !131, size: 32, offset: 480)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2803, file: !520, line: 395, baseType: !1815, size: 64, offset: 512)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2803, file: !520, line: 396, baseType: !524, size: 32, offset: 576)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2803, file: !520, line: 397, baseType: !524, size: 32, offset: 608)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2803, file: !520, line: 398, baseType: !1819, size: 128, offset: 640)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2803, file: !520, line: 399, baseType: !1821, size: 160, offset: 768)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2803, file: !520, line: 400, baseType: !1823, size: 160, offset: 928)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2803, file: !520, line: 401, baseType: !131, size: 32, offset: 1088)
!2826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2828, splitDebugInlining: false, nameTableKind: None)
!2827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2828 = !{!2829, !102, !103}
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !520, line: 402, baseType: !2831)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 379, size: 1120, elements: !2832)
!2832 = !{!2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2831, file: !520, line: 381, baseType: !524, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2831, file: !520, line: 382, baseType: !131, size: 32, offset: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2831, file: !520, line: 383, baseType: !131, size: 32, offset: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2831, file: !520, line: 384, baseType: !131, size: 32, offset: 96)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2831, file: !520, line: 385, baseType: !131, size: 32, offset: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2831, file: !520, line: 386, baseType: !131, size: 32, offset: 160)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2831, file: !520, line: 387, baseType: !1804, size: 96, offset: 192)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2831, file: !520, line: 388, baseType: !131, size: 32, offset: 288)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2831, file: !520, line: 389, baseType: !131, size: 32, offset: 320)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2831, file: !520, line: 390, baseType: !131, size: 32, offset: 352)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2831, file: !520, line: 391, baseType: !131, size: 32, offset: 384)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2831, file: !520, line: 392, baseType: !131, size: 32, offset: 416)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2831, file: !520, line: 393, baseType: !131, size: 32, offset: 448)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2831, file: !520, line: 394, baseType: !131, size: 32, offset: 480)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2831, file: !520, line: 395, baseType: !1815, size: 64, offset: 512)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2831, file: !520, line: 396, baseType: !524, size: 32, offset: 576)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2831, file: !520, line: 397, baseType: !524, size: 32, offset: 608)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2831, file: !520, line: 398, baseType: !1819, size: 128, offset: 640)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2831, file: !520, line: 399, baseType: !1821, size: 160, offset: 768)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2831, file: !520, line: 400, baseType: !1823, size: 160, offset: 928)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2831, file: !520, line: 401, baseType: !131, size: 32, offset: 1088)
!2854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2856, splitDebugInlining: false, nameTableKind: None)
!2855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2856 = !{!2857, !132, !102, !103}
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 32)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2859, line: 98, size: 256, elements: !2860)
!2859 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2860 = !{!2861, !2866, !2871, !2876, !2881, !2886, !2891, !2896}
!2861 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 99, baseType: !2862, size: 32)
!2862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 99, size: 32, elements: !2863)
!2863 = !{!2864, !2865}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2862, file: !2859, line: 99, baseType: !132, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2862, file: !2859, line: 99, baseType: !132, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 100, baseType: !2867, size: 32, offset: 32)
!2867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 100, size: 32, elements: !2868)
!2868 = !{!2869, !2870}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2867, file: !2859, line: 100, baseType: !132, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2867, file: !2859, line: 100, baseType: !132, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 101, baseType: !2872, size: 32, offset: 64)
!2872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 101, size: 32, elements: !2873)
!2873 = !{!2874, !2875}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2872, file: !2859, line: 101, baseType: !132, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2872, file: !2859, line: 101, baseType: !132, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 102, baseType: !2877, size: 32, offset: 96)
!2877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 102, size: 32, elements: !2878)
!2878 = !{!2879, !2880}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2877, file: !2859, line: 102, baseType: !132, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2877, file: !2859, line: 102, baseType: !132, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 103, baseType: !2882, size: 32, offset: 128)
!2882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 103, size: 32, elements: !2883)
!2883 = !{!2884, !2885}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2882, file: !2859, line: 103, baseType: !132, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2882, file: !2859, line: 103, baseType: !132, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 104, baseType: !2887, size: 32, offset: 160)
!2887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 104, size: 32, elements: !2888)
!2888 = !{!2889, !2890}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2887, file: !2859, line: 104, baseType: !132, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2887, file: !2859, line: 104, baseType: !132, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 105, baseType: !2892, size: 32, offset: 192)
!2892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 105, size: 32, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2892, file: !2859, line: 105, baseType: !132, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2892, file: !2859, line: 105, baseType: !132, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2858, file: !2859, line: 106, baseType: !132, size: 32, offset: 224)
!2897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2741, retainedTypes: !2899, splitDebugInlining: false, nameTableKind: None)
!2898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2899 = !{!2900, !102, !103, !2925, !2617, !132}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !520, line: 402, baseType: !2902)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 379, size: 1120, elements: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2902, file: !520, line: 381, baseType: !524, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2902, file: !520, line: 382, baseType: !131, size: 32, offset: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2902, file: !520, line: 383, baseType: !131, size: 32, offset: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2902, file: !520, line: 384, baseType: !131, size: 32, offset: 96)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2902, file: !520, line: 385, baseType: !131, size: 32, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2902, file: !520, line: 386, baseType: !131, size: 32, offset: 160)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2902, file: !520, line: 387, baseType: !1804, size: 96, offset: 192)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2902, file: !520, line: 388, baseType: !131, size: 32, offset: 288)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2902, file: !520, line: 389, baseType: !131, size: 32, offset: 320)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2902, file: !520, line: 390, baseType: !131, size: 32, offset: 352)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2902, file: !520, line: 391, baseType: !131, size: 32, offset: 384)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2902, file: !520, line: 392, baseType: !131, size: 32, offset: 416)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2902, file: !520, line: 393, baseType: !131, size: 32, offset: 448)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2902, file: !520, line: 394, baseType: !131, size: 32, offset: 480)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2902, file: !520, line: 395, baseType: !1815, size: 64, offset: 512)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2902, file: !520, line: 396, baseType: !524, size: 32, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2902, file: !520, line: 397, baseType: !524, size: 32, offset: 608)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2902, file: !520, line: 398, baseType: !1819, size: 128, offset: 640)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2902, file: !520, line: 399, baseType: !1821, size: 160, offset: 768)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2902, file: !520, line: 400, baseType: !1823, size: 160, offset: 928)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2902, file: !520, line: 401, baseType: !131, size: 32, offset: 1088)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2859, line: 141, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2859, line: 97, size: 256, elements: !2928)
!2928 = !{!2929}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2927, file: !2859, line: 107, baseType: !2930, size: 256)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2859, line: 98, size: 256, elements: !2931)
!2931 = !{!2932, !2937, !2942, !2947, !2952, !2957, !2962, !2967}
!2932 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 99, baseType: !2933, size: 32)
!2933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 99, size: 32, elements: !2934)
!2934 = !{!2935, !2936}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2933, file: !2859, line: 99, baseType: !132, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2933, file: !2859, line: 99, baseType: !132, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 100, baseType: !2938, size: 32, offset: 32)
!2938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 100, size: 32, elements: !2939)
!2939 = !{!2940, !2941}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2938, file: !2859, line: 100, baseType: !132, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2938, file: !2859, line: 100, baseType: !132, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 101, baseType: !2943, size: 32, offset: 64)
!2943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 101, size: 32, elements: !2944)
!2944 = !{!2945, !2946}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2943, file: !2859, line: 101, baseType: !132, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2943, file: !2859, line: 101, baseType: !132, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 102, baseType: !2948, size: 32, offset: 96)
!2948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 102, size: 32, elements: !2949)
!2949 = !{!2950, !2951}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2948, file: !2859, line: 102, baseType: !132, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2948, file: !2859, line: 102, baseType: !132, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 103, baseType: !2953, size: 32, offset: 128)
!2953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 103, size: 32, elements: !2954)
!2954 = !{!2955, !2956}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2953, file: !2859, line: 103, baseType: !132, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2953, file: !2859, line: 103, baseType: !132, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 104, baseType: !2958, size: 32, offset: 160)
!2958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 104, size: 32, elements: !2959)
!2959 = !{!2960, !2961}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2958, file: !2859, line: 104, baseType: !132, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2958, file: !2859, line: 104, baseType: !132, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 105, baseType: !2963, size: 32, offset: 192)
!2963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 105, size: 32, elements: !2964)
!2964 = !{!2965, !2966}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2963, file: !2859, line: 105, baseType: !132, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2963, file: !2859, line: 105, baseType: !132, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2930, file: !2859, line: 106, baseType: !132, size: 32, offset: 224)
!2968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2969, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1750, retainedTypes: !2970, splitDebugInlining: false, nameTableKind: None)
!2969 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!2970 = !{!843, !357, !176, !132, !2971, !2988}
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !520, line: 360, baseType: !2973)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 345, size: 28704, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2973, file: !520, line: 347, baseType: !1767, size: 256)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2973, file: !520, line: 348, baseType: !1769, size: 768, offset: 256)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2973, file: !520, line: 349, baseType: !1767, size: 256, offset: 1024)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2973, file: !520, line: 350, baseType: !1769, size: 768, offset: 1280)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2973, file: !520, line: 351, baseType: !1767, size: 256, offset: 2048)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2973, file: !520, line: 352, baseType: !1769, size: 768, offset: 2304)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2973, file: !520, line: 353, baseType: !1767, size: 256, offset: 3072)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2973, file: !520, line: 354, baseType: !1769, size: 768, offset: 3328)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2973, file: !520, line: 355, baseType: !1767, size: 256, offset: 4096)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2973, file: !520, line: 356, baseType: !1780, size: 1792, offset: 4352)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2973, file: !520, line: 357, baseType: !1784, size: 1920, offset: 6144)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2973, file: !520, line: 358, baseType: !1789, size: 20608, offset: 8064)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2973, file: !520, line: 359, baseType: !131, size: 32, offset: 28672)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !520, line: 402, baseType: !2990)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 379, size: 1120, elements: !2991)
!2991 = !{!2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2990, file: !520, line: 381, baseType: !524, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2990, file: !520, line: 382, baseType: !131, size: 32, offset: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2990, file: !520, line: 383, baseType: !131, size: 32, offset: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2990, file: !520, line: 384, baseType: !131, size: 32, offset: 96)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2990, file: !520, line: 385, baseType: !131, size: 32, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2990, file: !520, line: 386, baseType: !131, size: 32, offset: 160)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2990, file: !520, line: 387, baseType: !1804, size: 96, offset: 192)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2990, file: !520, line: 388, baseType: !131, size: 32, offset: 288)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2990, file: !520, line: 389, baseType: !131, size: 32, offset: 320)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2990, file: !520, line: 390, baseType: !131, size: 32, offset: 352)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2990, file: !520, line: 391, baseType: !131, size: 32, offset: 384)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2990, file: !520, line: 392, baseType: !131, size: 32, offset: 416)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2990, file: !520, line: 393, baseType: !131, size: 32, offset: 448)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2990, file: !520, line: 394, baseType: !131, size: 32, offset: 480)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2990, file: !520, line: 395, baseType: !1815, size: 64, offset: 512)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2990, file: !520, line: 396, baseType: !524, size: 32, offset: 576)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2990, file: !520, line: 397, baseType: !524, size: 32, offset: 608)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2990, file: !520, line: 398, baseType: !1819, size: 128, offset: 640)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2990, file: !520, line: 399, baseType: !1821, size: 160, offset: 768)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2990, file: !520, line: 400, baseType: !1823, size: 160, offset: 928)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2990, file: !520, line: 401, baseType: !131, size: 32, offset: 1088)
!3013 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3014, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3015, splitDebugInlining: false, nameTableKind: None)
!3014 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3015 = !{!3016, !102, !103}
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !520, line: 402, baseType: !3018)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 379, size: 1120, elements: !3019)
!3019 = !{!3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3018, file: !520, line: 381, baseType: !524, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3018, file: !520, line: 382, baseType: !131, size: 32, offset: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3018, file: !520, line: 383, baseType: !131, size: 32, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3018, file: !520, line: 384, baseType: !131, size: 32, offset: 96)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3018, file: !520, line: 385, baseType: !131, size: 32, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3018, file: !520, line: 386, baseType: !131, size: 32, offset: 160)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3018, file: !520, line: 387, baseType: !1804, size: 96, offset: 192)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3018, file: !520, line: 388, baseType: !131, size: 32, offset: 288)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3018, file: !520, line: 389, baseType: !131, size: 32, offset: 320)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3018, file: !520, line: 390, baseType: !131, size: 32, offset: 352)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3018, file: !520, line: 391, baseType: !131, size: 32, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3018, file: !520, line: 392, baseType: !131, size: 32, offset: 416)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3018, file: !520, line: 393, baseType: !131, size: 32, offset: 448)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3018, file: !520, line: 394, baseType: !131, size: 32, offset: 480)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3018, file: !520, line: 395, baseType: !1815, size: 64, offset: 512)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3018, file: !520, line: 396, baseType: !524, size: 32, offset: 576)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3018, file: !520, line: 397, baseType: !524, size: 32, offset: 608)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3018, file: !520, line: 398, baseType: !1819, size: 128, offset: 640)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3018, file: !520, line: 399, baseType: !1821, size: 160, offset: 768)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3018, file: !520, line: 400, baseType: !1823, size: 160, offset: 928)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3018, file: !520, line: 401, baseType: !131, size: 32, offset: 1088)
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3043, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3043 = !{!108, !1142, !369, !246, !3044, !177, !102}
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3048, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3048 = !{!3049}
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 386, baseType: !3051)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 448, elements: !3052)
!3052 = !{!3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3051, file: !127, line: 372, baseType: !131, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3051, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3051, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3051, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3051, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3051, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3051, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3051, file: !127, line: 379, baseType: !131, size: 32, offset: 224)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3051, file: !127, line: 380, baseType: !131, size: 32, offset: 256)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3051, file: !127, line: 381, baseType: !131, size: 32, offset: 288)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3051, file: !127, line: 382, baseType: !131, size: 32, offset: 320)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3051, file: !127, line: 383, baseType: !131, size: 32, offset: 352)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3051, file: !127, line: 384, baseType: !131, size: 32, offset: 384)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3051, file: !127, line: 385, baseType: !131, size: 32, offset: 416)
!3067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3071, retainedTypes: !3087, splitDebugInlining: false, nameTableKind: None)
!3070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3071 = !{!3072, !3079, !3083}
!3072 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3073, line: 39, baseType: !32, size: 32, elements: !3074)
!3073 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3074 = !{!3075, !3076, !3077, !3078}
!3075 = !DIEnumerator(name: "HAL_OK", value: 0)
!3076 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3077 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3078 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3079 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !880, line: 183, baseType: !32, size: 32, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIEnumerator(name: "DISABLE", value: 0)
!3082 = !DIEnumerator(name: "ENABLE", value: 1)
!3083 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !880, line: 177, baseType: !32, size: 32, elements: !3084)
!3084 = !{!3085, !3086}
!3085 = !DIEnumerator(name: "RESET", value: 0)
!3086 = !DIEnumerator(name: "SET", value: 1)
!3087 = !{!3088, !102, !132, !176, !3106, !3107, !3113, !353, !3126, !2355, !3139}
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 386, baseType: !3090)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 448, elements: !3091)
!3091 = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3090, file: !127, line: 372, baseType: !131, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3090, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3090, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3090, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3090, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3090, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3090, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3090, file: !127, line: 379, baseType: !131, size: 32, offset: 224)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3090, file: !127, line: 380, baseType: !131, size: 32, offset: 256)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3090, file: !127, line: 381, baseType: !131, size: 32, offset: 288)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3090, file: !127, line: 382, baseType: !131, size: 32, offset: 320)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3090, file: !127, line: 383, baseType: !131, size: 32, offset: 352)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3090, file: !127, line: 384, baseType: !131, size: 32, offset: 384)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3090, file: !127, line: 385, baseType: !131, size: 32, offset: 416)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 364, baseType: !3109)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 360, size: 64, elements: !3110)
!3110 = !{!3111, !3112}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3109, file: !127, line: 362, baseType: !131, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3109, file: !127, line: 363, baseType: !131, size: 32, offset: 32)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 286, baseType: !3115)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 275, size: 288, elements: !3116)
!3116 = !{!3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3115, file: !127, line: 277, baseType: !131, size: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3115, file: !127, line: 278, baseType: !131, size: 32, offset: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3115, file: !127, line: 279, baseType: !131, size: 32, offset: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3115, file: !127, line: 280, baseType: !131, size: 32, offset: 96)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3115, file: !127, line: 281, baseType: !131, size: 32, offset: 128)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3115, file: !127, line: 282, baseType: !131, size: 32, offset: 160)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3115, file: !127, line: 283, baseType: !131, size: 32, offset: 192)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3115, file: !127, line: 284, baseType: !131, size: 32, offset: 224)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3115, file: !127, line: 285, baseType: !131, size: 32, offset: 256)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 314, baseType: !3128)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 303, size: 320, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3128, file: !127, line: 305, baseType: !131, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3128, file: !127, line: 306, baseType: !131, size: 32, offset: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3128, file: !127, line: 307, baseType: !131, size: 32, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3128, file: !127, line: 308, baseType: !131, size: 32, offset: 96)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3128, file: !127, line: 309, baseType: !131, size: 32, offset: 128)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3128, file: !127, line: 310, baseType: !131, size: 32, offset: 160)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3128, file: !127, line: 311, baseType: !131, size: 32, offset: 192)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3128, file: !127, line: 312, baseType: !131, size: 32, offset: 224)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3128, file: !127, line: 313, baseType: !1294, size: 64, offset: 256)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!3140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3141, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3142, retainedTypes: !3143, splitDebugInlining: false, nameTableKind: None)
!3141 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3142 = !{!879}
!3143 = !{!3144, !132, !3152, !3158, !3171}
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !520, line: 712, baseType: !3146)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !520, line: 706, size: 128, elements: !3147)
!3147 = !{!3148, !3149, !3150, !3151}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3146, file: !520, line: 708, baseType: !131, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3146, file: !520, line: 709, baseType: !131, size: 32, offset: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3146, file: !520, line: 710, baseType: !131, size: 32, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3146, file: !520, line: 711, baseType: !524, size: 32, offset: 96)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 364, baseType: !3154)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 360, size: 64, elements: !3155)
!3155 = !{!3156, !3157}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3154, file: !127, line: 362, baseType: !131, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3154, file: !127, line: 363, baseType: !131, size: 32, offset: 32)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 286, baseType: !3160)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 275, size: 288, elements: !3161)
!3161 = !{!3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3160, file: !127, line: 277, baseType: !131, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3160, file: !127, line: 278, baseType: !131, size: 32, offset: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3160, file: !127, line: 279, baseType: !131, size: 32, offset: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3160, file: !127, line: 280, baseType: !131, size: 32, offset: 96)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3160, file: !127, line: 281, baseType: !131, size: 32, offset: 128)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3160, file: !127, line: 282, baseType: !131, size: 32, offset: 160)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3160, file: !127, line: 283, baseType: !131, size: 32, offset: 192)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3160, file: !127, line: 284, baseType: !131, size: 32, offset: 224)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3160, file: !127, line: 285, baseType: !131, size: 32, offset: 256)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 386, baseType: !3173)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 448, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3173, file: !127, line: 372, baseType: !131, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3173, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3173, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3173, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3173, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3173, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3173, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3173, file: !127, line: 379, baseType: !131, size: 32, offset: 224)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3173, file: !127, line: 380, baseType: !131, size: 32, offset: 256)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3173, file: !127, line: 381, baseType: !131, size: 32, offset: 288)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3173, file: !127, line: 382, baseType: !131, size: 32, offset: 320)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3173, file: !127, line: 383, baseType: !131, size: 32, offset: 352)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3173, file: !127, line: 384, baseType: !131, size: 32, offset: 384)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3173, file: !127, line: 385, baseType: !131, size: 32, offset: 416)
!3189 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3190, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3191, splitDebugInlining: false, nameTableKind: None)
!3190 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3191 = !{!102, !369}
!3192 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3193, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3194, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3193 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3194 = !{!3195, !3202, !30}
!3195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3196, line: 14, baseType: !32, size: 32, elements: !3197)
!3196 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3197 = !{!3198, !3199, !3200, !3201}
!3198 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3199 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3200 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3201 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3202 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3196, line: 42, baseType: !32, size: 32, elements: !3203)
!3203 = !{!3204, !3205, !3206, !3207, !3208, !3209}
!3204 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3205 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3206 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3207 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3208 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3209 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3211, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3211 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3213, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3214, splitDebugInlining: false, nameTableKind: None)
!3213 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3214 = !{!22, !102, !103}
!3215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3216, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3216 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3217 = !{!"Ubuntu clang version 14.0.6"}
!3218 = !{i32 7, !"Dwarf Version", i32 4}
!3219 = !{i32 2, !"Debug Info Version", i32 3}
!3220 = !{i32 1, !"wchar_size", i32 4}
!3221 = !{i32 1, !"min_enum_size", i32 4}
!3222 = !{i32 1, !"branch-target-enforcement", i32 0}
!3223 = !{i32 1, !"sign-return-address", i32 0}
!3224 = !{i32 1, !"sign-return-address-all", i32 0}
!3225 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3226 = !{i32 7, !"frame-pointer", i32 2}
!3227 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3228, file: !3228, line: 26, type: !3229, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !486)
!3228 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3229 = !DISubroutineType(types: !3230)
!3230 = !{null}
!3231 = !DILocation(line: 28, column: 1, scope: !3227)
!3232 = !{i64 2152483317, i64 2152483337, i64 2152483400}
!3233 = !DILocation(line: 29, column: 1, scope: !3227)
!3234 = !{i64 2152483732, i64 2152483752, i64 2152483815}
!3235 = !DILocation(line: 30, column: 1, scope: !3227)
!3236 = !{i64 2152488212, i64 2152488232, i64 2152488295}
!3237 = !DILocation(line: 31, column: 1, scope: !3227)
!3238 = !{i64 2152488631, i64 2152488651, i64 2152488714}
!3239 = !DILocation(line: 33, column: 1, scope: !3227)
!3240 = !{i64 2152488923, i64 2152488943, i64 2152489006}
!3241 = !DILocation(line: 35, column: 1, scope: !3227)
!3242 = !{i64 2152489248, i64 2152489268, i64 2152489331}
!3243 = !DILocation(line: 50, column: 1, scope: !3227)
!3244 = !{i64 2152489675, i64 2152489695, i64 2152489758}
!3245 = !DILocation(line: 54, column: 1, scope: !3227)
!3246 = !{i64 2152490114, i64 2152490134, i64 2152490197}
!3247 = !DILocation(line: 61, column: 1, scope: !3227)
!3248 = !{i64 2152490431, i64 2152490451, i64 2152490514}
!3249 = !DILocation(line: 63, column: 1, scope: !3227)
!3250 = !{i64 2152490811, i64 2152490831, i64 2152490894}
!3251 = !DILocation(line: 64, column: 1, scope: !3227)
!3252 = !{i64 2152491333, i64 2152491353, i64 2152491416}
!3253 = !DILocation(line: 65, column: 1, scope: !3227)
!3254 = !{i64 2152491831, i64 2152491851, i64 2152491914}
!3255 = !DILocation(line: 66, column: 1, scope: !3227)
!3256 = !{i64 2152492313, i64 2152492333, i64 2152492396}
!3257 = !DILocation(line: 67, column: 1, scope: !3227)
!3258 = !{i64 2152492820, i64 2152492840, i64 2152492903}
!3259 = !DILocation(line: 68, column: 1, scope: !3227)
!3260 = !{i64 2152493308, i64 2152493328, i64 2152493391}
!3261 = !DILocation(line: 70, column: 1, scope: !3227)
!3262 = !{i64 2152493776, i64 2152493796, i64 2152493859}
!3263 = !DILocation(line: 71, column: 1, scope: !3227)
!3264 = !{i64 2152494218, i64 2152494238, i64 2152494301}
!3265 = !DILocation(line: 72, column: 1, scope: !3227)
!3266 = !{i64 2152494676, i64 2152494696, i64 2152494759}
!3267 = !DILocation(line: 79, column: 1, scope: !3227)
!3268 = !{i64 2152495130, i64 2152495150, i64 2152495213}
!3269 = !DILocation(line: 80, column: 1, scope: !3227)
!3270 = !{i64 2152495641, i64 2152495661, i64 2152495724}
!3271 = !DILocation(line: 82, column: 1, scope: !3227)
!3272 = !{i64 2152496132, i64 2152496152, i64 2152496215}
!3273 = !DILocation(line: 97, column: 1, scope: !3227)
!3274 = !{i64 2152496469, i64 2152496489, i64 2152496552}
!3275 = !DILocation(line: 99, column: 1, scope: !3227)
!3276 = !{i64 2152496687, i64 2152496707, i64 2152496770}
!3277 = !DILocation(line: 102, column: 1, scope: !3227)
!3278 = !{i64 2152496944, i64 2152496964, i64 2152497027}
!3279 = !DILocation(line: 105, column: 1, scope: !3227)
!3280 = !{i64 2152497184, i64 2152497204, i64 2152497267}
!3281 = !DILocation(line: 115, column: 1, scope: !3227)
!3282 = !{i64 2152497523, i64 2152497543, i64 2152497606}
!3283 = !DILocation(line: 118, column: 1, scope: !3227)
!3284 = !{i64 2152501928, i64 2152501948, i64 2152502011}
!3285 = !DILocation(line: 32, column: 1, scope: !3286)
!3286 = !DILexicalBlockFile(scope: !3227, file: !3287, discriminator: 0)
!3287 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3288 = !{i64 2152502284, i64 2152502304, i64 2152502367}
!3289 = !DILocation(line: 33, column: 1, scope: !3286)
!3290 = !{i64 2152502796, i64 2152502816, i64 2152502879}
!3291 = !DILocation(line: 53, column: 1, scope: !3286)
!3292 = !{i64 2152503304, i64 2152503324, i64 2152503387}
!3293 = !DILocation(line: 54, column: 1, scope: !3286)
!3294 = !{i64 2152503722, i64 2152503742, i64 2152503805}
!3295 = !DILocation(line: 55, column: 1, scope: !3286)
!3296 = !{i64 2152504140, i64 2152504160, i64 2152504223}
!3297 = !DILocation(line: 56, column: 1, scope: !3286)
!3298 = !{i64 2152504558, i64 2152504578, i64 2152504641}
!3299 = !DILocation(line: 57, column: 1, scope: !3286)
!3300 = !{i64 2152504976, i64 2152504996, i64 2152505059}
!3301 = !DILocation(line: 58, column: 1, scope: !3286)
!3302 = !{i64 2152505394, i64 2152505414, i64 2152505477}
!3303 = !DILocation(line: 59, column: 1, scope: !3286)
!3304 = !{i64 2152505812, i64 2152505832, i64 2152505895}
!3305 = !DILocation(line: 60, column: 1, scope: !3286)
!3306 = !{i64 2152506236, i64 2152506256, i64 2152506319}
!3307 = !DILocation(line: 61, column: 1, scope: !3286)
!3308 = !{i64 2152506553, i64 2152506573, i64 2152506636}
!3309 = !DILocation(line: 70, column: 1, scope: !3286)
!3310 = !{i64 2152506782, i64 2152506802, i64 2152506865}
!3311 = !DILocation(line: 72, column: 1, scope: !3286)
!3312 = !{i64 2152507114, i64 2152507134, i64 2152507197}
!3313 = !DILocation(line: 73, column: 1, scope: !3286)
!3314 = !{i64 2152507564, i64 2152507584, i64 2152507647}
!3315 = !DILocation(line: 74, column: 1, scope: !3286)
!3316 = !{i64 2152508014, i64 2152508034, i64 2152508097}
!3317 = !DILocation(line: 75, column: 1, scope: !3286)
!3318 = !{i64 2152508464, i64 2152508484, i64 2152508547}
!3319 = !DILocation(line: 76, column: 1, scope: !3286)
!3320 = !{i64 2152508914, i64 2152508934, i64 2152508997}
!3321 = !DILocation(line: 77, column: 1, scope: !3286)
!3322 = !{i64 2152509364, i64 2152509384, i64 2152509447}
!3323 = !DILocation(line: 78, column: 1, scope: !3286)
!3324 = !{i64 2152509814, i64 2152509834, i64 2152509897}
!3325 = !DILocation(line: 79, column: 1, scope: !3286)
!3326 = !{i64 2152510264, i64 2152510284, i64 2152510347}
!3327 = !DILocation(line: 80, column: 1, scope: !3286)
!3328 = !{i64 2152510717, i64 2152510737, i64 2152510800}
!3329 = !DILocation(line: 84, column: 1, scope: !3286)
!3330 = !{i64 2152515110, i64 2152515130, i64 2152515193}
!3331 = !DILocation(line: 91, column: 1, scope: !3286)
!3332 = !{i64 2152515507, i64 2152515527, i64 2152515590}
!3333 = !DILocation(line: 93, column: 1, scope: !3286)
!3334 = !{i64 2152515874, i64 2152515894, i64 2152515957}
!3335 = !DILocation(line: 106, column: 1, scope: !3286)
!3336 = !{i64 2152516144, i64 2152516164, i64 2152516227}
!3337 = !DILocation(line: 11, column: 1, scope: !3338)
!3338 = !DILexicalBlockFile(scope: !3227, file: !3339, discriminator: 0)
!3339 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3340 = distinct !DISubprogram(name: "main", scope: !105, file: !105, line: 11, type: !3229, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3341)
!3341 = !{!3342}
!3342 = !DILocalVariable(name: "c", scope: !3343, file: !105, line: 20, type: !176)
!3343 = distinct !DILexicalBlock(scope: !3340, file: !105, line: 19, column: 12)
!3344 = !DILocation(line: 13, column: 2, scope: !3340)
!3345 = !DILocation(line: 15, column: 2, scope: !3340)
!3346 = !DILocation(line: 16, column: 2, scope: !3340)
!3347 = !DILocation(line: 17, column: 2, scope: !3340)
!3348 = !DILocation(line: 19, column: 2, scope: !3340)
!3349 = !DILocation(line: 20, column: 15, scope: !3343)
!3350 = !DILocation(line: 0, scope: !3343)
!3351 = !DILocation(line: 22, column: 3, scope: !3343)
!3352 = !DILocation(line: 23, column: 7, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3343, file: !105, line: 23, column: 7)
!3354 = !DILocation(line: 23, column: 9, scope: !3353)
!3355 = !DILocation(line: 23, column: 7, scope: !3343)
!3356 = !DILocation(line: 24, column: 4, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3353, file: !105, line: 23, column: 18)
!3358 = !DILocation(line: 25, column: 3, scope: !3357)
!3359 = distinct !{!3359, !3348, !3360}
!3360 = !DILocation(line: 26, column: 2, scope: !3340)
!3361 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !116, file: !116, line: 45, type: !118, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3362)
!3362 = !{!3363}
!3363 = !DILocalVariable(name: "c", arg: 1, scope: !3361, file: !116, line: 45, type: !103)
!3364 = !DILocation(line: 0, scope: !3361)
!3365 = !DILocation(line: 50, column: 2, scope: !3361)
!3366 = distinct !DISubprogram(name: "__printk_hook_install", scope: !116, file: !116, line: 63, type: !3367, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3369)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{null, !117}
!3369 = !{!3370}
!3370 = !DILocalVariable(name: "fn", arg: 1, scope: !3366, file: !116, line: 63, type: !117)
!3371 = !DILocation(line: 0, scope: !3366)
!3372 = !DILocation(line: 65, column: 12, scope: !3366)
!3373 = !DILocation(line: 66, column: 1, scope: !3366)
!3374 = distinct !DISubprogram(name: "__printk_get_hook", scope: !116, file: !116, line: 76, type: !3375, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !486)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!102}
!3377 = !DILocation(line: 78, column: 9, scope: !3374)
!3378 = !DILocation(line: 78, column: 2, scope: !3374)
!3379 = distinct !DISubprogram(name: "vprintk", scope: !116, file: !116, line: 113, type: !3380, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3389)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{null, !168, !3382}
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3383, line: 99, baseType: !3384)
!3383 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3384 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3383, line: 40, baseType: !3385)
!3385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !116, baseType: !3386)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3387)
!3387 = !{!3388}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3386, file: !116, line: 79, baseType: !102, size: 32)
!3389 = !{!3390, !3391, !3392}
!3390 = !DILocalVariable(name: "fmt", arg: 1, scope: !3379, file: !116, line: 113, type: !168)
!3391 = !DILocalVariable(name: "ap", arg: 2, scope: !3379, file: !116, line: 113, type: !3382)
!3392 = !DILocalVariable(name: "ctx", scope: !3393, file: !116, line: 121, type: !3395)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !116, line: 120, column: 27)
!3394 = distinct !DILexicalBlock(scope: !3379, file: !116, line: 120, column: 6)
!3395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !116, line: 81, size: 32, elements: !3396)
!3396 = !{!3397, !3398}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3395, file: !116, line: 85, baseType: !32, size: 32)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3395, file: !116, line: 86, baseType: !3399, offset: 32)
!3399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, elements: !2615)
!3400 = !DILocation(line: 0, scope: !3379)
!3401 = !DILocation(line: 148, column: 3, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3394, file: !116, line: 138, column: 9)
!3403 = !DILocation(line: 155, column: 1, scope: !3379)
!3404 = distinct !DISubprogram(name: "char_out", scope: !116, file: !116, line: 107, type: !3405, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3407)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{!103, !103, !102}
!3407 = !{!3408, !3409}
!3408 = !DILocalVariable(name: "c", arg: 1, scope: !3404, file: !116, line: 107, type: !103)
!3409 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3404, file: !116, line: 107, type: !102)
!3410 = !DILocation(line: 0, scope: !3404)
!3411 = !DILocation(line: 110, column: 9, scope: !3404)
!3412 = !DILocation(line: 110, column: 2, scope: !3404)
!3413 = distinct !DISubprogram(name: "cbvprintf", scope: !3414, file: !3414, line: 739, type: !3415, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3421)
!3414 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!103, !3417, !102, !168, !3382}
!3417 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3414, line: 297, baseType: !3418)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 32)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{!103, null}
!3421 = !{!3422, !3423, !3424, !3425}
!3422 = !DILocalVariable(name: "out", arg: 1, scope: !3413, file: !3414, line: 739, type: !3417)
!3423 = !DILocalVariable(name: "ctx", arg: 2, scope: !3413, file: !3414, line: 739, type: !102)
!3424 = !DILocalVariable(name: "format", arg: 3, scope: !3413, file: !3414, line: 739, type: !168)
!3425 = !DILocalVariable(name: "ap", arg: 4, scope: !3413, file: !3414, line: 739, type: !3382)
!3426 = !DILocation(line: 0, scope: !3413)
!3427 = !DILocation(line: 741, column: 9, scope: !3413)
!3428 = !DILocation(line: 741, column: 2, scope: !3413)
!3429 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !116, file: !116, line: 157, type: !3430, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3432)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{null, !1142, !369}
!3432 = !{!3433, !3434, !3435}
!3433 = !DILocalVariable(name: "c", arg: 1, scope: !3429, file: !116, line: 157, type: !1142)
!3434 = !DILocalVariable(name: "n", arg: 2, scope: !3429, file: !116, line: 157, type: !369)
!3435 = !DILocalVariable(name: "i", scope: !3429, file: !116, line: 159, type: !369)
!3436 = !DILocation(line: 0, scope: !3429)
!3437 = !DILocation(line: 164, column: 16, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !116, line: 164, column: 2)
!3439 = distinct !DILexicalBlock(scope: !3429, file: !116, line: 164, column: 2)
!3440 = !DILocation(line: 164, column: 2, scope: !3439)
!3441 = !DILocation(line: 165, column: 3, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3438, file: !116, line: 164, column: 26)
!3443 = !DILocation(line: 165, column: 13, scope: !3442)
!3444 = !DILocation(line: 164, column: 22, scope: !3438)
!3445 = distinct !{!3445, !3440, !3446}
!3446 = !DILocation(line: 166, column: 2, scope: !3439)
!3447 = !DILocation(line: 171, column: 1, scope: !3429)
!3448 = distinct !DISubprogram(name: "printk", scope: !116, file: !116, line: 203, type: !3449, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3451)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{null, !168, null}
!3451 = !{!3452, !3453}
!3452 = !DILocalVariable(name: "fmt", arg: 1, scope: !3448, file: !116, line: 203, type: !168)
!3453 = !DILocalVariable(name: "ap", scope: !3448, file: !116, line: 205, type: !3382)
!3454 = !DILocation(line: 0, scope: !3448)
!3455 = !DILocation(line: 205, column: 2, scope: !3448)
!3456 = !DILocation(line: 205, column: 10, scope: !3448)
!3457 = !DILocation(line: 207, column: 2, scope: !3448)
!3458 = !DILocation(line: 209, column: 2, scope: !3448)
!3459 = !DILocation(line: 211, column: 2, scope: !3448)
!3460 = !DILocation(line: 212, column: 1, scope: !3448)
!3461 = distinct !DISubprogram(name: "snprintk", scope: !116, file: !116, line: 239, type: !3462, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3464)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!103, !1142, !369, !168, null}
!3464 = !{!3465, !3466, !3467, !3468, !3469}
!3465 = !DILocalVariable(name: "str", arg: 1, scope: !3461, file: !116, line: 239, type: !1142)
!3466 = !DILocalVariable(name: "size", arg: 2, scope: !3461, file: !116, line: 239, type: !369)
!3467 = !DILocalVariable(name: "fmt", arg: 3, scope: !3461, file: !116, line: 239, type: !168)
!3468 = !DILocalVariable(name: "ap", scope: !3461, file: !116, line: 241, type: !3382)
!3469 = !DILocalVariable(name: "ret", scope: !3461, file: !116, line: 242, type: !103)
!3470 = !DILocation(line: 0, scope: !3461)
!3471 = !DILocation(line: 241, column: 2, scope: !3461)
!3472 = !DILocation(line: 241, column: 10, scope: !3461)
!3473 = !DILocation(line: 244, column: 2, scope: !3461)
!3474 = !DILocation(line: 245, column: 8, scope: !3461)
!3475 = !DILocation(line: 246, column: 2, scope: !3461)
!3476 = !DILocation(line: 249, column: 1, scope: !3461)
!3477 = !DILocation(line: 248, column: 2, scope: !3461)
!3478 = distinct !DISubprogram(name: "vsnprintk", scope: !116, file: !116, line: 251, type: !3479, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3481)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!103, !1142, !369, !168, !3382}
!3481 = !{!3482, !3483, !3484, !3485, !3486}
!3482 = !DILocalVariable(name: "str", arg: 1, scope: !3478, file: !116, line: 251, type: !1142)
!3483 = !DILocalVariable(name: "size", arg: 2, scope: !3478, file: !116, line: 251, type: !369)
!3484 = !DILocalVariable(name: "fmt", arg: 3, scope: !3478, file: !116, line: 251, type: !168)
!3485 = !DILocalVariable(name: "ap", arg: 4, scope: !3478, file: !116, line: 251, type: !3382)
!3486 = !DILocalVariable(name: "ctx", scope: !3478, file: !116, line: 253, type: !3487)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !116, line: 217, size: 96, elements: !3488)
!3488 = !{!3489, !3490, !3491}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3487, file: !116, line: 218, baseType: !1142, size: 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3487, file: !116, line: 219, baseType: !103, size: 32, offset: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3487, file: !116, line: 220, baseType: !103, size: 32, offset: 64)
!3492 = !DILocation(line: 0, scope: !3478)
!3493 = !DILocation(line: 253, column: 2, scope: !3478)
!3494 = !DILocation(line: 253, column: 21, scope: !3478)
!3495 = !DILocation(line: 253, column: 27, scope: !3478)
!3496 = !DILocation(line: 255, column: 2, scope: !3478)
!3497 = !DILocation(line: 257, column: 10, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3478, file: !116, line: 257, column: 6)
!3499 = !DILocation(line: 257, column: 22, scope: !3498)
!3500 = !DILocation(line: 257, column: 16, scope: !3498)
!3501 = !DILocation(line: 257, column: 6, scope: !3478)
!3502 = !DILocation(line: 258, column: 3, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3498, file: !116, line: 257, column: 27)
!3504 = !DILocation(line: 258, column: 18, scope: !3503)
!3505 = !DILocation(line: 259, column: 2, scope: !3503)
!3506 = !DILocation(line: 262, column: 1, scope: !3478)
!3507 = !DILocation(line: 261, column: 2, scope: !3478)
!3508 = distinct !DISubprogram(name: "str_out", scope: !116, file: !116, line: 223, type: !3509, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3512)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{!103, !103, !3511}
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 32)
!3512 = !{!3513, !3514}
!3513 = !DILocalVariable(name: "c", arg: 1, scope: !3508, file: !116, line: 223, type: !103)
!3514 = !DILocalVariable(name: "ctx", arg: 2, scope: !3508, file: !116, line: 223, type: !3511)
!3515 = !DILocation(line: 0, scope: !3508)
!3516 = !DILocation(line: 225, column: 11, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3508, file: !116, line: 225, column: 6)
!3518 = !DILocation(line: 225, column: 15, scope: !3517)
!3519 = !DILocation(line: 0, scope: !3517)
!3520 = !DILocation(line: 225, column: 23, scope: !3517)
!3521 = !DILocation(line: 225, column: 45, scope: !3517)
!3522 = !DILocation(line: 225, column: 37, scope: !3517)
!3523 = !DILocation(line: 225, column: 6, scope: !3508)
!3524 = !DILocation(line: 226, column: 8, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3517, file: !116, line: 225, column: 50)
!3526 = !DILocation(line: 226, column: 13, scope: !3525)
!3527 = !DILocation(line: 227, column: 3, scope: !3525)
!3528 = !DILocation(line: 230, column: 29, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3508, file: !116, line: 230, column: 6)
!3530 = !DILocation(line: 230, column: 17, scope: !3529)
!3531 = !DILocation(line: 230, column: 6, scope: !3508)
!3532 = !DILocation(line: 231, column: 22, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3529, file: !116, line: 230, column: 34)
!3534 = !DILocation(line: 231, column: 3, scope: !3533)
!3535 = !DILocation(line: 231, column: 26, scope: !3533)
!3536 = !DILocation(line: 232, column: 2, scope: !3533)
!3537 = !DILocation(line: 233, column: 28, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3529, file: !116, line: 232, column: 9)
!3539 = !DILocation(line: 233, column: 22, scope: !3538)
!3540 = !DILocation(line: 233, column: 3, scope: !3538)
!3541 = !DILocation(line: 233, column: 26, scope: !3538)
!3542 = !DILocation(line: 237, column: 1, scope: !3508)
!3543 = distinct !DISubprogram(name: "z_thread_entry", scope: !3544, file: !3544, line: 30, type: !3545, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !3552)
!3544 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3545 = !DISubroutineType(types: !3546)
!3546 = !{null, !3547, !102, !102, !102}
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3548, line: 46, baseType: !3549)
!3548 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 32)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{null, !102, !102, !102}
!3552 = !{!3553, !3554, !3555, !3556}
!3553 = !DILocalVariable(name: "entry", arg: 1, scope: !3543, file: !3544, line: 30, type: !3547)
!3554 = !DILocalVariable(name: "p1", arg: 2, scope: !3543, file: !3544, line: 31, type: !102)
!3555 = !DILocalVariable(name: "p2", arg: 3, scope: !3543, file: !3544, line: 31, type: !102)
!3556 = !DILocalVariable(name: "p3", arg: 4, scope: !3543, file: !3544, line: 31, type: !102)
!3557 = !DILocation(line: 0, scope: !3543)
!3558 = !DILocation(line: 36, column: 2, scope: !3543)
!3559 = !DILocation(line: 38, column: 17, scope: !3543)
!3560 = !DILocation(line: 38, column: 2, scope: !3543)
!3561 = !DILocation(line: 45, column: 2, scope: !3543)
!3562 = distinct !DISubprogram(name: "k_current_get", scope: !325, file: !325, line: 530, type: !3563, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !486)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!3565}
!3565 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !380, line: 347, baseType: !3566)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 32)
!3567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !3568)
!3568 = !{!3569, !3627, !3639, !3640, !3641, !3642, !3648, !3661}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3567, file: !380, line: 247, baseType: !3570, size: 384)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !3571)
!3571 = !{!3572, !3596, !3603, !3604, !3605, !3614, !3615, !3616}
!3572 = !DIDerivedType(tag: DW_TAG_member, scope: !3570, file: !380, line: 60, baseType: !3573, size: 64)
!3573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3570, file: !380, line: 60, size: 64, elements: !3574)
!3574 = !{!3575, !3590}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3573, file: !380, line: 61, baseType: !3576, size: 64)
!3576 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !3577)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !3578)
!3578 = !{!3579, !3585}
!3579 = !DIDerivedType(tag: DW_TAG_member, scope: !3577, file: !334, line: 38, baseType: !3580, size: 32)
!3580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3577, file: !334, line: 38, size: 32, elements: !3581)
!3581 = !{!3582, !3584}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3580, file: !334, line: 39, baseType: !3583, size: 32)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 32)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3580, file: !334, line: 40, baseType: !3583, size: 32)
!3585 = !DIDerivedType(tag: DW_TAG_member, scope: !3577, file: !334, line: 42, baseType: !3586, size: 32, offset: 32)
!3586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3577, file: !334, line: 42, size: 32, elements: !3587)
!3587 = !{!3588, !3589}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3586, file: !334, line: 43, baseType: !3583, size: 32)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3586, file: !334, line: 44, baseType: !3583, size: 32)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3573, file: !380, line: 62, baseType: !3591, size: 64)
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !3592)
!3592 = !{!3593}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3591, file: !405, line: 50, baseType: !3594, size: 64)
!3594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3595, size: 64, elements: !410)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 32)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3570, file: !380, line: 68, baseType: !3597, size: 32, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 32)
!3598 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !3599)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !3600)
!3600 = !{!3601}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3599, file: !329, line: 232, baseType: !3602, size: 64)
!3602 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !3577)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3570, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3570, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!3605 = !DIDerivedType(tag: DW_TAG_member, scope: !3570, file: !380, line: 90, baseType: !3606, size: 16, offset: 112)
!3606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3570, file: !380, line: 90, size: 16, elements: !3607)
!3607 = !{!3608, !3613}
!3608 = !DIDerivedType(tag: DW_TAG_member, scope: !3606, file: !380, line: 91, baseType: !3609, size: 16)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3606, file: !380, line: 91, size: 16, elements: !3610)
!3610 = !{!3611, !3612}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3609, file: !380, line: 96, baseType: !428, size: 8)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3609, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3606, file: !380, line: 100, baseType: !353, size: 16)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3570, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3570, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3570, file: !380, line: 131, baseType: !3617, size: 192, offset: 192)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !3618)
!3618 = !{!3619, !3620, !3626}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3617, file: !329, line: 245, baseType: !3576, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3617, file: !329, line: 246, baseType: !3621, size: 32, offset: 64)
!3621 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !3622)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 32)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{null, !3625}
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 32)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3617, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3567, file: !380, line: 250, baseType: !3628, size: 288, offset: 384)
!3628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !3629)
!3629 = !{!3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3628, file: !449, line: 26, baseType: !132, size: 32)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3628, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3628, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3628, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3628, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3628, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3628, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3628, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3628, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3567, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3567, file: !380, line: 256, baseType: !3598, size: 64, offset: 704)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3567, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3567, file: !380, line: 300, baseType: !3643, size: 96, offset: 800)
!3643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !3644)
!3644 = !{!3645, !3646, !3647}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3643, file: !380, line: 153, baseType: !22, size: 32)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3643, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3643, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3567, file: !380, line: 325, baseType: !3649, size: 32, offset: 896)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 32)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !3651)
!3651 = !{!3652, !3658, !3659}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3650, file: !325, line: 5074, baseType: !3653, size: 96)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !3654)
!3654 = !{!3655, !3656, !3657}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3653, file: !475, line: 57, baseType: !478, size: 32)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3653, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3653, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3650, file: !325, line: 5075, baseType: !3598, size: 64, offset: 96)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3650, file: !325, line: 5076, baseType: !3660, offset: 160)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3567, file: !380, line: 343, baseType: !3662, size: 64, offset: 928)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !3663)
!3663 = !{!3664, !3665}
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3662, file: !449, line: 63, baseType: !132, size: 32)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3662, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!3666 = !DILocation(line: 535, column: 9, scope: !3562)
!3667 = !DILocation(line: 535, column: 2, scope: !3562)
!3668 = distinct !DISubprogram(name: "k_thread_abort", scope: !3669, file: !3669, line: 188, type: !3670, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !3672)
!3669 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!3670 = !DISubroutineType(types: !3671)
!3671 = !{null, !3565}
!3672 = !{!3673}
!3673 = !DILocalVariable(name: "thread", arg: 1, scope: !3668, file: !3669, line: 188, type: !3565)
!3674 = !DILocation(line: 0, scope: !3668)
!3675 = !DILocation(line: 197, column: 2, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3668, file: !3669, line: 197, column: 2)
!3677 = !{i64 2152212633}
!3678 = !DILocation(line: 198, column: 2, scope: !3668)
!3679 = !DILocation(line: 199, column: 1, scope: !3668)
!3680 = distinct !DISubprogram(name: "z_current_get", scope: !3669, file: !3669, line: 173, type: !3563, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !486)
!3681 = !DILocation(line: 180, column: 2, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3680, file: !3669, line: 180, column: 2)
!3683 = !{i64 2152212565}
!3684 = !DILocation(line: 181, column: 9, scope: !3680)
!3685 = !DILocation(line: 181, column: 2, scope: !3680)
!3686 = distinct !DISubprogram(name: "sys_heap_free", scope: !3687, file: !3687, line: 163, type: !3688, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3696)
!3687 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3688 = !DISubroutineType(types: !3689)
!3689 = !{null, !3690, !102}
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 32)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !3692)
!3692 = !{!3693, !3694, !3695}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3691, file: !475, line: 57, baseType: !2602, size: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3691, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3691, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!3696 = !{!3697, !3698, !3699, !3700}
!3697 = !DILocalVariable(name: "heap", arg: 1, scope: !3686, file: !3687, line: 163, type: !3690)
!3698 = !DILocalVariable(name: "mem", arg: 2, scope: !3686, file: !3687, line: 163, type: !102)
!3699 = !DILocalVariable(name: "h", scope: !3686, file: !3687, line: 168, type: !2602)
!3700 = !DILocalVariable(name: "c", scope: !3686, file: !3687, line: 169, type: !2607)
!3701 = !DILocation(line: 0, scope: !3686)
!3702 = !DILocation(line: 165, column: 10, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3686, file: !3687, line: 165, column: 6)
!3704 = !DILocation(line: 165, column: 6, scope: !3686)
!3705 = !DILocation(line: 168, column: 27, scope: !3686)
!3706 = !DILocation(line: 169, column: 16, scope: !3686)
!3707 = !{i32 0, i32 536870912}
!3708 = !DILocation(line: 187, column: 2, scope: !3686)
!3709 = !DILocation(line: 197, column: 2, scope: !3686)
!3710 = !DILocation(line: 198, column: 1, scope: !3686)
!3711 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3687, file: !3687, line: 157, type: !3712, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3714)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!2607, !2602, !102}
!3714 = !{!3715, !3716, !3717, !3718}
!3715 = !DILocalVariable(name: "h", arg: 1, scope: !3711, file: !3687, line: 157, type: !2602)
!3716 = !DILocalVariable(name: "p", arg: 2, scope: !3711, file: !3687, line: 157, type: !102)
!3717 = !DILocalVariable(name: "mem", scope: !3711, file: !3687, line: 159, type: !283)
!3718 = !DILocalVariable(name: "base", scope: !3711, file: !3687, line: 159, type: !283)
!3719 = !DILocation(line: 0, scope: !3711)
!3720 = !DILocation(line: 159, column: 39, scope: !3711)
!3721 = !DILocation(line: 160, column: 14, scope: !3711)
!3722 = !DILocation(line: 160, column: 38, scope: !3711)
!3723 = !DILocation(line: 160, column: 46, scope: !3711)
!3724 = !DILocation(line: 160, column: 2, scope: !3711)
!3725 = distinct !DISubprogram(name: "set_chunk_used", scope: !2589, file: !2589, line: 147, type: !3726, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3728)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{null, !2602, !2607, !179}
!3728 = !{!3729, !3730, !3731, !3732, !3733}
!3729 = !DILocalVariable(name: "h", arg: 1, scope: !3725, file: !2589, line: 147, type: !2602)
!3730 = !DILocalVariable(name: "c", arg: 2, scope: !3725, file: !2589, line: 147, type: !2607)
!3731 = !DILocalVariable(name: "used", arg: 3, scope: !3725, file: !2589, line: 147, type: !179)
!3732 = !DILocalVariable(name: "buf", scope: !3725, file: !2589, line: 149, type: !2596)
!3733 = !DILocalVariable(name: "cmem", scope: !3725, file: !2589, line: 150, type: !102)
!3734 = !DILocation(line: 0, scope: !3725)
!3735 = !DILocation(line: 149, column: 22, scope: !3725)
!3736 = !DILocation(line: 0, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !2589, line: 159, column: 7)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !2589, line: 158, column: 9)
!3739 = distinct !DILexicalBlock(scope: !3725, file: !2589, line: 152, column: 6)
!3740 = !DILocation(line: 159, column: 7, scope: !3738)
!3741 = !DILocation(line: 165, column: 1, scope: !3725)
!3742 = distinct !DISubprogram(name: "free_chunk", scope: !3687, file: !3687, line: 133, type: !3743, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3745)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{null, !2602, !2607}
!3745 = !{!3746, !3747}
!3746 = !DILocalVariable(name: "h", arg: 1, scope: !3742, file: !3687, line: 133, type: !2602)
!3747 = !DILocalVariable(name: "c", arg: 2, scope: !3742, file: !3687, line: 133, type: !2607)
!3748 = !DILocation(line: 0, scope: !3742)
!3749 = !DILocation(line: 136, column: 21, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3742, file: !3687, line: 136, column: 6)
!3751 = !DILocation(line: 136, column: 7, scope: !3750)
!3752 = !DILocation(line: 136, column: 6, scope: !3742)
!3753 = !DILocation(line: 137, column: 3, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3750, file: !3687, line: 136, column: 41)
!3755 = !DILocation(line: 138, column: 22, scope: !3754)
!3756 = !DILocation(line: 138, column: 3, scope: !3754)
!3757 = !DILocation(line: 139, column: 2, scope: !3754)
!3758 = !DILocation(line: 142, column: 21, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3742, file: !3687, line: 142, column: 6)
!3760 = !{i32 -65535, i32 536903678}
!3761 = !DILocation(line: 142, column: 7, scope: !3759)
!3762 = !DILocation(line: 142, column: 6, scope: !3742)
!3763 = !DILocation(line: 143, column: 3, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3759, file: !3687, line: 142, column: 40)
!3765 = !DILocation(line: 144, column: 19, scope: !3764)
!3766 = !DILocation(line: 144, column: 3, scope: !3764)
!3767 = !DILocation(line: 145, column: 7, scope: !3764)
!3768 = !DILocation(line: 146, column: 2, scope: !3764)
!3769 = !DILocation(line: 148, column: 2, scope: !3742)
!3770 = !DILocation(line: 149, column: 1, scope: !3742)
!3771 = distinct !DISubprogram(name: "right_chunk", scope: !2589, file: !2589, line: 204, type: !3772, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3774)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!2607, !2602, !2607}
!3774 = !{!3775, !3776}
!3775 = !DILocalVariable(name: "h", arg: 1, scope: !3771, file: !2589, line: 204, type: !2602)
!3776 = !DILocalVariable(name: "c", arg: 2, scope: !3771, file: !2589, line: 204, type: !2607)
!3777 = !DILocation(line: 0, scope: !3771)
!3778 = !DILocation(line: 206, column: 13, scope: !3771)
!3779 = !DILocation(line: 206, column: 11, scope: !3771)
!3780 = !DILocation(line: 206, column: 2, scope: !3771)
!3781 = distinct !DISubprogram(name: "chunk_used", scope: !2589, file: !2589, line: 137, type: !3782, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3784)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!179, !2602, !2607}
!3784 = !{!3785, !3786}
!3785 = !DILocalVariable(name: "h", arg: 1, scope: !3781, file: !2589, line: 137, type: !2602)
!3786 = !DILocalVariable(name: "c", arg: 2, scope: !3781, file: !2589, line: 137, type: !2607)
!3787 = !DILocation(line: 0, scope: !3781)
!3788 = !DILocation(line: 139, column: 9, scope: !3781)
!3789 = !DILocation(line: 139, column: 42, scope: !3781)
!3790 = !DILocation(line: 139, column: 2, scope: !3781)
!3791 = distinct !DISubprogram(name: "free_list_remove", scope: !3687, file: !3687, line: 60, type: !3743, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3792)
!3792 = !{!3793, !3794, !3795}
!3793 = !DILocalVariable(name: "h", arg: 1, scope: !3791, file: !3687, line: 60, type: !2602)
!3794 = !DILocalVariable(name: "c", arg: 2, scope: !3791, file: !3687, line: 60, type: !2607)
!3795 = !DILocalVariable(name: "bidx", scope: !3796, file: !3687, line: 63, type: !103)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !3687, line: 62, column: 31)
!3797 = distinct !DILexicalBlock(scope: !3791, file: !3687, line: 62, column: 6)
!3798 = !DILocation(line: 0, scope: !3791)
!3799 = !DILocation(line: 63, column: 28, scope: !3796)
!3800 = !{i32 0, i32 32768}
!3801 = !DILocation(line: 63, column: 14, scope: !3796)
!3802 = !DILocation(line: 0, scope: !3796)
!3803 = !DILocation(line: 64, column: 3, scope: !3796)
!3804 = !DILocation(line: 66, column: 1, scope: !3791)
!3805 = distinct !DISubprogram(name: "merge_chunks", scope: !3687, file: !3687, line: 125, type: !3806, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3808)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{null, !2602, !2607, !2607}
!3808 = !{!3809, !3810, !3811, !3812}
!3809 = !DILocalVariable(name: "h", arg: 1, scope: !3805, file: !3687, line: 125, type: !2602)
!3810 = !DILocalVariable(name: "lc", arg: 2, scope: !3805, file: !3687, line: 125, type: !2607)
!3811 = !DILocalVariable(name: "rc", arg: 3, scope: !3805, file: !3687, line: 125, type: !2607)
!3812 = !DILocalVariable(name: "newsz", scope: !3805, file: !3687, line: 127, type: !3813)
!3813 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2589, line: 62, baseType: !132)
!3814 = !DILocation(line: 0, scope: !3805)
!3815 = !DILocation(line: 127, column: 20, scope: !3805)
!3816 = !DILocation(line: 127, column: 40, scope: !3805)
!3817 = !DILocation(line: 127, column: 38, scope: !3805)
!3818 = !DILocation(line: 129, column: 2, scope: !3805)
!3819 = !DILocation(line: 130, column: 25, scope: !3805)
!3820 = !DILocation(line: 130, column: 2, scope: !3805)
!3821 = !DILocation(line: 131, column: 1, scope: !3805)
!3822 = distinct !DISubprogram(name: "left_chunk", scope: !2589, file: !2589, line: 199, type: !3772, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3823)
!3823 = !{!3824, !3825}
!3824 = !DILocalVariable(name: "h", arg: 1, scope: !3822, file: !2589, line: 199, type: !2602)
!3825 = !DILocalVariable(name: "c", arg: 2, scope: !3822, file: !2589, line: 199, type: !2607)
!3826 = !DILocation(line: 0, scope: !3822)
!3827 = !DILocation(line: 201, column: 13, scope: !3822)
!3828 = !DILocation(line: 201, column: 11, scope: !3822)
!3829 = !DILocation(line: 201, column: 2, scope: !3822)
!3830 = distinct !DISubprogram(name: "free_list_add", scope: !3687, file: !3687, line: 98, type: !3743, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3831)
!3831 = !{!3832, !3833, !3834}
!3832 = !DILocalVariable(name: "h", arg: 1, scope: !3830, file: !3687, line: 98, type: !2602)
!3833 = !DILocalVariable(name: "c", arg: 2, scope: !3830, file: !3687, line: 98, type: !2607)
!3834 = !DILocalVariable(name: "bidx", scope: !3835, file: !3687, line: 101, type: !103)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !3687, line: 100, column: 31)
!3836 = distinct !DILexicalBlock(scope: !3830, file: !3687, line: 100, column: 6)
!3837 = !DILocation(line: 0, scope: !3830)
!3838 = !DILocation(line: 101, column: 28, scope: !3835)
!3839 = !DILocation(line: 101, column: 14, scope: !3835)
!3840 = !DILocation(line: 0, scope: !3835)
!3841 = !DILocation(line: 102, column: 3, scope: !3835)
!3842 = !DILocation(line: 104, column: 1, scope: !3830)
!3843 = distinct !DISubprogram(name: "chunk_size", scope: !2589, file: !2589, line: 142, type: !3844, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3846)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!3813, !2602, !2607}
!3846 = !{!3847, !3848}
!3847 = !DILocalVariable(name: "h", arg: 1, scope: !3843, file: !2589, line: 142, type: !2602)
!3848 = !DILocalVariable(name: "c", arg: 2, scope: !3843, file: !2589, line: 142, type: !2607)
!3849 = !DILocation(line: 0, scope: !3843)
!3850 = !DILocation(line: 144, column: 9, scope: !3843)
!3851 = !DILocation(line: 144, column: 42, scope: !3843)
!3852 = !DILocation(line: 144, column: 2, scope: !3843)
!3853 = distinct !DISubprogram(name: "bucket_idx", scope: !2589, file: !2589, line: 250, type: !3854, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3856)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!103, !2602, !3813}
!3856 = !{!3857, !3858, !3859}
!3857 = !DILocalVariable(name: "h", arg: 1, scope: !3853, file: !2589, line: 250, type: !2602)
!3858 = !DILocalVariable(name: "sz", arg: 2, scope: !3853, file: !2589, line: 250, type: !3813)
!3859 = !DILocalVariable(name: "usable_sz", scope: !3853, file: !2589, line: 252, type: !32)
!3860 = !DILocation(line: 0, scope: !3853)
!3861 = !DILocation(line: 252, column: 32, scope: !3853)
!3862 = !DILocation(line: 252, column: 30, scope: !3853)
!3863 = !DILocation(line: 252, column: 50, scope: !3853)
!3864 = !DILocation(line: 253, column: 14, scope: !3853)
!3865 = !{i32 0, i32 33}
!3866 = !DILocation(line: 253, column: 12, scope: !3853)
!3867 = !DILocation(line: 253, column: 2, scope: !3853)
!3868 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3687, file: !3687, line: 68, type: !3869, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3871)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{null, !2602, !2607, !103}
!3871 = !{!3872, !3873, !3874, !3875, !3877, !3880}
!3872 = !DILocalVariable(name: "h", arg: 1, scope: !3868, file: !3687, line: 68, type: !2602)
!3873 = !DILocalVariable(name: "c", arg: 2, scope: !3868, file: !3687, line: 68, type: !2607)
!3874 = !DILocalVariable(name: "bidx", arg: 3, scope: !3868, file: !3687, line: 68, type: !103)
!3875 = !DILocalVariable(name: "b", scope: !3868, file: !3687, line: 70, type: !3876)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!3877 = !DILocalVariable(name: "second", scope: !3878, file: !3687, line: 84, type: !2607)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !3687, line: 80, column: 9)
!3879 = distinct !DILexicalBlock(scope: !3868, file: !3687, line: 72, column: 6)
!3880 = !DILocalVariable(name: "first", scope: !3878, file: !3687, line: 85, type: !2607)
!3881 = !DILocation(line: 0, scope: !3868)
!3882 = !DILocation(line: 72, column: 9, scope: !3879)
!3883 = !DILocation(line: 72, column: 14, scope: !3879)
!3884 = !DILocation(line: 72, column: 6, scope: !3868)
!3885 = !DILocation(line: 76, column: 23, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3879, file: !3687, line: 72, column: 21)
!3887 = !DILocation(line: 76, column: 6, scope: !3886)
!3888 = !DILocation(line: 76, column: 20, scope: !3886)
!3889 = !DILocation(line: 77, column: 11, scope: !3886)
!3890 = !DILocation(line: 78, column: 3, scope: !3886)
!3891 = !DILocation(line: 79, column: 3, scope: !3886)
!3892 = !DILocation(line: 80, column: 2, scope: !3886)
!3893 = !DILocation(line: 0, scope: !3878)
!3894 = !DILocation(line: 85, column: 21, scope: !3878)
!3895 = !{i32 0, i32 65536}
!3896 = !DILocation(line: 87, column: 3, scope: !3878)
!3897 = !DILocation(line: 88, column: 3, scope: !3878)
!3898 = !DILocation(line: 89, column: 3, scope: !3878)
!3899 = !DILocation(line: 90, column: 3, scope: !3878)
!3900 = !DILocation(line: 96, column: 1, scope: !3868)
!3901 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2589, file: !2589, line: 187, type: !3806, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3902)
!3902 = !{!3903, !3904, !3905}
!3903 = !DILocalVariable(name: "h", arg: 1, scope: !3901, file: !2589, line: 187, type: !2602)
!3904 = !DILocalVariable(name: "c", arg: 2, scope: !3901, file: !2589, line: 187, type: !2607)
!3905 = !DILocalVariable(name: "prev", arg: 3, scope: !3901, file: !2589, line: 188, type: !2607)
!3906 = !DILocation(line: 0, scope: !3901)
!3907 = !DILocation(line: 190, column: 2, scope: !3901)
!3908 = !DILocation(line: 191, column: 1, scope: !3901)
!3909 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2589, file: !2589, line: 193, type: !3806, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3910)
!3910 = !{!3911, !3912, !3913}
!3911 = !DILocalVariable(name: "h", arg: 1, scope: !3909, file: !2589, line: 193, type: !2602)
!3912 = !DILocalVariable(name: "c", arg: 2, scope: !3909, file: !2589, line: 193, type: !2607)
!3913 = !DILocalVariable(name: "next", arg: 3, scope: !3909, file: !2589, line: 194, type: !2607)
!3914 = !DILocation(line: 0, scope: !3909)
!3915 = !DILocation(line: 196, column: 2, scope: !3909)
!3916 = !DILocation(line: 197, column: 1, scope: !3909)
!3917 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2589, file: !2589, line: 177, type: !3772, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3918)
!3918 = !{!3919, !3920}
!3919 = !DILocalVariable(name: "h", arg: 1, scope: !3917, file: !2589, line: 177, type: !2602)
!3920 = !DILocalVariable(name: "c", arg: 2, scope: !3917, file: !2589, line: 177, type: !2607)
!3921 = !DILocation(line: 0, scope: !3917)
!3922 = !DILocation(line: 179, column: 9, scope: !3917)
!3923 = !DILocation(line: 179, column: 2, scope: !3917)
!3924 = distinct !DISubprogram(name: "chunk_field", scope: !2589, file: !2589, line: 107, type: !3925, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3927)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{!2607, !2602, !2607, !2588}
!3927 = !{!3928, !3929, !3930, !3931, !3932}
!3928 = !DILocalVariable(name: "h", arg: 1, scope: !3924, file: !2589, line: 107, type: !2602)
!3929 = !DILocalVariable(name: "c", arg: 2, scope: !3924, file: !2589, line: 107, type: !2607)
!3930 = !DILocalVariable(name: "f", arg: 3, scope: !3924, file: !2589, line: 108, type: !2588)
!3931 = !DILocalVariable(name: "buf", scope: !3924, file: !2589, line: 110, type: !2596)
!3932 = !DILocalVariable(name: "cmem", scope: !3924, file: !2589, line: 111, type: !102)
!3933 = !DILocation(line: 0, scope: !3924)
!3934 = !DILocation(line: 110, column: 22, scope: !3924)
!3935 = !DILocation(line: 111, column: 15, scope: !3924)
!3936 = !DILocation(line: 116, column: 11, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !2589, line: 115, column: 9)
!3938 = distinct !DILexicalBlock(scope: !3924, file: !2589, line: 113, column: 6)
!3939 = !DILocation(line: 116, column: 10, scope: !3937)
!3940 = !DILocation(line: 118, column: 1, scope: !3924)
!3941 = distinct !DISubprogram(name: "chunk_buf", scope: !2589, file: !2589, line: 101, type: !3942, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3944)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!2596, !2602}
!3944 = !{!3945}
!3945 = !DILocalVariable(name: "h", arg: 1, scope: !3941, file: !2589, line: 101, type: !2602)
!3946 = !DILocation(line: 0, scope: !3941)
!3947 = !DILocation(line: 104, column: 9, scope: !3941)
!3948 = !DILocation(line: 104, column: 2, scope: !3941)
!3949 = distinct !DISubprogram(name: "chunk_set", scope: !2589, file: !2589, line: 120, type: !3950, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3952)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{null, !2602, !2607, !2588, !2607}
!3952 = !{!3953, !3954, !3955, !3956, !3957, !3958}
!3953 = !DILocalVariable(name: "h", arg: 1, scope: !3949, file: !2589, line: 120, type: !2602)
!3954 = !DILocalVariable(name: "c", arg: 2, scope: !3949, file: !2589, line: 120, type: !2607)
!3955 = !DILocalVariable(name: "f", arg: 3, scope: !3949, file: !2589, line: 121, type: !2588)
!3956 = !DILocalVariable(name: "val", arg: 4, scope: !3949, file: !2589, line: 121, type: !2607)
!3957 = !DILocalVariable(name: "buf", scope: !3949, file: !2589, line: 125, type: !2596)
!3958 = !DILocalVariable(name: "cmem", scope: !3949, file: !2589, line: 126, type: !102)
!3959 = !DILocation(line: 0, scope: !3949)
!3960 = !DILocation(line: 125, column: 22, scope: !3949)
!3961 = !DILocation(line: 126, column: 15, scope: !3949)
!3962 = !DILocation(line: 133, column: 27, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !2589, line: 131, column: 9)
!3964 = distinct !DILexicalBlock(scope: !3949, file: !2589, line: 128, column: 6)
!3965 = !DILocation(line: 133, column: 4, scope: !3963)
!3966 = !DILocation(line: 133, column: 3, scope: !3963)
!3967 = !DILocation(line: 133, column: 25, scope: !3963)
!3968 = !DILocation(line: 135, column: 1, scope: !3949)
!3969 = distinct !DISubprogram(name: "min_chunk_size", scope: !2589, file: !2589, line: 240, type: !3970, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3972)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{!3813, !2602}
!3972 = !{!3973}
!3973 = !DILocalVariable(name: "h", arg: 1, scope: !3969, file: !2589, line: 240, type: !2602)
!3974 = !DILocation(line: 0, scope: !3969)
!3975 = !DILocation(line: 242, column: 9, scope: !3969)
!3976 = !DILocation(line: 242, column: 2, scope: !3969)
!3977 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2589, file: !2589, line: 235, type: !3978, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3980)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{!3813, !2602, !369}
!3980 = !{!3981, !3982}
!3981 = !DILocalVariable(name: "h", arg: 1, scope: !3977, file: !2589, line: 235, type: !2602)
!3982 = !DILocalVariable(name: "bytes", arg: 2, scope: !3977, file: !2589, line: 235, type: !369)
!3983 = !DILocation(line: 0, scope: !3977)
!3984 = !DILocation(line: 237, column: 39, scope: !3977)
!3985 = !DILocation(line: 237, column: 9, scope: !3977)
!3986 = !DILocation(line: 237, column: 2, scope: !3977)
!3987 = distinct !DISubprogram(name: "chunksz", scope: !2589, file: !2589, line: 230, type: !3988, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3990)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!3813, !369}
!3990 = !{!3991}
!3991 = !DILocalVariable(name: "bytes", arg: 1, scope: !3987, file: !2589, line: 230, type: !369)
!3992 = !DILocation(line: 0, scope: !3987)
!3993 = !DILocation(line: 232, column: 29, scope: !3987)
!3994 = !DILocation(line: 232, column: 35, scope: !3987)
!3995 = !DILocation(line: 232, column: 2, scope: !3987)
!3996 = distinct !DISubprogram(name: "set_chunk_size", scope: !2589, file: !2589, line: 172, type: !3997, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !3999)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{null, !2602, !2607, !3813}
!3999 = !{!4000, !4001, !4002}
!4000 = !DILocalVariable(name: "h", arg: 1, scope: !3996, file: !2589, line: 172, type: !2602)
!4001 = !DILocalVariable(name: "c", arg: 2, scope: !3996, file: !2589, line: 172, type: !2607)
!4002 = !DILocalVariable(name: "size", arg: 3, scope: !3996, file: !2589, line: 172, type: !3813)
!4003 = !DILocation(line: 0, scope: !3996)
!4004 = !DILocation(line: 174, column: 38, scope: !3996)
!4005 = !DILocation(line: 174, column: 2, scope: !3996)
!4006 = !DILocation(line: 175, column: 1, scope: !3996)
!4007 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2589, file: !2589, line: 209, type: !3997, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4008)
!4008 = !{!4009, !4010, !4011}
!4009 = !DILocalVariable(name: "h", arg: 1, scope: !4007, file: !2589, line: 209, type: !2602)
!4010 = !DILocalVariable(name: "c", arg: 2, scope: !4007, file: !2589, line: 209, type: !2607)
!4011 = !DILocalVariable(name: "size", arg: 3, scope: !4007, file: !2589, line: 210, type: !3813)
!4012 = !DILocation(line: 0, scope: !4007)
!4013 = !DILocation(line: 212, column: 2, scope: !4007)
!4014 = !DILocation(line: 213, column: 1, scope: !4007)
!4015 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3687, file: !3687, line: 34, type: !3869, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4016)
!4016 = !{!4017, !4018, !4019, !4020, !4021, !4024}
!4017 = !DILocalVariable(name: "h", arg: 1, scope: !4015, file: !3687, line: 34, type: !2602)
!4018 = !DILocalVariable(name: "c", arg: 2, scope: !4015, file: !3687, line: 34, type: !2607)
!4019 = !DILocalVariable(name: "bidx", arg: 3, scope: !4015, file: !3687, line: 34, type: !103)
!4020 = !DILocalVariable(name: "b", scope: !4015, file: !3687, line: 36, type: !3876)
!4021 = !DILocalVariable(name: "first", scope: !4022, file: !3687, line: 47, type: !2607)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !3687, line: 46, column: 9)
!4023 = distinct !DILexicalBlock(scope: !4015, file: !3687, line: 42, column: 6)
!4024 = !DILocalVariable(name: "second", scope: !4022, file: !3687, line: 48, type: !2607)
!4025 = !DILocation(line: 0, scope: !4015)
!4026 = !DILocation(line: 36, column: 29, scope: !4015)
!4027 = !DILocation(line: 42, column: 6, scope: !4023)
!4028 = !DILocation(line: 42, column: 28, scope: !4023)
!4029 = !DILocation(line: 42, column: 6, scope: !4015)
!4030 = !DILocation(line: 44, column: 24, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4023, file: !3687, line: 42, column: 34)
!4032 = !DILocation(line: 44, column: 23, scope: !4031)
!4033 = !DILocation(line: 44, column: 6, scope: !4031)
!4034 = !DILocation(line: 44, column: 20, scope: !4031)
!4035 = !DILocation(line: 45, column: 6, scope: !4031)
!4036 = !DILocation(line: 45, column: 11, scope: !4031)
!4037 = !DILocation(line: 46, column: 2, scope: !4031)
!4038 = !DILocation(line: 47, column: 21, scope: !4022)
!4039 = !DILocation(line: 0, scope: !4022)
!4040 = !DILocation(line: 50, column: 6, scope: !4022)
!4041 = !DILocation(line: 50, column: 11, scope: !4022)
!4042 = !DILocation(line: 51, column: 3, scope: !4022)
!4043 = !DILocation(line: 52, column: 3, scope: !4022)
!4044 = !DILocation(line: 58, column: 1, scope: !4015)
!4045 = distinct !DISubprogram(name: "next_free_chunk", scope: !2589, file: !2589, line: 182, type: !3772, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4046)
!4046 = !{!4047, !4048}
!4047 = !DILocalVariable(name: "h", arg: 1, scope: !4045, file: !2589, line: 182, type: !2602)
!4048 = !DILocalVariable(name: "c", arg: 2, scope: !4045, file: !2589, line: 182, type: !2607)
!4049 = !DILocation(line: 0, scope: !4045)
!4050 = !DILocation(line: 184, column: 9, scope: !4045)
!4051 = !DILocation(line: 184, column: 2, scope: !4045)
!4052 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3687, file: !3687, line: 200, type: !4053, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4055)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!369, !3690, !102}
!4055 = !{!4056, !4057, !4058, !4059, !4060, !4061, !4062}
!4056 = !DILocalVariable(name: "heap", arg: 1, scope: !4052, file: !3687, line: 200, type: !3690)
!4057 = !DILocalVariable(name: "mem", arg: 2, scope: !4052, file: !3687, line: 200, type: !102)
!4058 = !DILocalVariable(name: "h", scope: !4052, file: !3687, line: 202, type: !2602)
!4059 = !DILocalVariable(name: "c", scope: !4052, file: !3687, line: 203, type: !2607)
!4060 = !DILocalVariable(name: "addr", scope: !4052, file: !3687, line: 204, type: !369)
!4061 = !DILocalVariable(name: "chunk_base", scope: !4052, file: !3687, line: 205, type: !369)
!4062 = !DILocalVariable(name: "chunk_sz", scope: !4052, file: !3687, line: 206, type: !369)
!4063 = !DILocation(line: 0, scope: !4052)
!4064 = !DILocation(line: 202, column: 27, scope: !4052)
!4065 = !DILocation(line: 203, column: 16, scope: !4052)
!4066 = !DILocation(line: 204, column: 16, scope: !4052)
!4067 = !DILocation(line: 205, column: 31, scope: !4052)
!4068 = !DILocation(line: 205, column: 22, scope: !4052)
!4069 = !DILocation(line: 206, column: 20, scope: !4052)
!4070 = !DILocation(line: 206, column: 37, scope: !4052)
!4071 = !DILocation(line: 208, column: 26, scope: !4052)
!4072 = !DILocation(line: 208, column: 18, scope: !4052)
!4073 = !DILocation(line: 208, column: 2, scope: !4052)
!4074 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3687, file: !3687, line: 263, type: !4075, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4077)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!102, !3690, !369}
!4077 = !{!4078, !4079, !4080, !4081, !4082, !4083}
!4078 = !DILocalVariable(name: "heap", arg: 1, scope: !4074, file: !3687, line: 263, type: !3690)
!4079 = !DILocalVariable(name: "bytes", arg: 2, scope: !4074, file: !3687, line: 263, type: !369)
!4080 = !DILocalVariable(name: "h", scope: !4074, file: !3687, line: 265, type: !2602)
!4081 = !DILocalVariable(name: "mem", scope: !4074, file: !3687, line: 266, type: !102)
!4082 = !DILocalVariable(name: "chunk_sz", scope: !4074, file: !3687, line: 272, type: !3813)
!4083 = !DILocalVariable(name: "c", scope: !4074, file: !3687, line: 273, type: !2607)
!4084 = !DILocation(line: 0, scope: !4074)
!4085 = !DILocation(line: 265, column: 27, scope: !4074)
!4086 = !DILocation(line: 268, column: 12, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4074, file: !3687, line: 268, column: 6)
!4088 = !DILocation(line: 268, column: 18, scope: !4087)
!4089 = !DILocation(line: 268, column: 21, scope: !4087)
!4090 = !DILocation(line: 268, column: 6, scope: !4074)
!4091 = !DILocation(line: 272, column: 23, scope: !4074)
!4092 = !DILocation(line: 273, column: 16, scope: !4074)
!4093 = !DILocation(line: 274, column: 8, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4074, file: !3687, line: 274, column: 6)
!4095 = !DILocation(line: 274, column: 6, scope: !4074)
!4096 = !DILocation(line: 279, column: 6, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4074, file: !3687, line: 279, column: 6)
!4098 = !DILocation(line: 279, column: 23, scope: !4097)
!4099 = !DILocation(line: 279, column: 6, scope: !4074)
!4100 = !DILocation(line: 280, column: 24, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4097, file: !3687, line: 279, column: 35)
!4102 = !DILocation(line: 280, column: 3, scope: !4101)
!4103 = !DILocation(line: 281, column: 3, scope: !4101)
!4104 = !DILocation(line: 282, column: 2, scope: !4101)
!4105 = !DILocation(line: 284, column: 2, scope: !4074)
!4106 = !DILocation(line: 286, column: 8, scope: !4074)
!4107 = !DILocation(line: 298, column: 2, scope: !4074)
!4108 = !DILocation(line: 299, column: 1, scope: !4074)
!4109 = distinct !DISubprogram(name: "size_too_big", scope: !2589, file: !2589, line: 256, type: !4110, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4112)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!179, !2602, !369}
!4112 = !{!4113, !4114}
!4113 = !DILocalVariable(name: "h", arg: 1, scope: !4109, file: !2589, line: 256, type: !2602)
!4114 = !DILocalVariable(name: "bytes", arg: 2, scope: !4109, file: !2589, line: 256, type: !369)
!4115 = !DILocation(line: 0, scope: !4109)
!4116 = !DILocation(line: 262, column: 16, scope: !4109)
!4117 = !DILocation(line: 262, column: 36, scope: !4109)
!4118 = !DILocation(line: 262, column: 30, scope: !4109)
!4119 = !DILocation(line: 262, column: 2, scope: !4109)
!4120 = distinct !DISubprogram(name: "alloc_chunk", scope: !3687, file: !3687, line: 211, type: !4121, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4123)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{!2607, !2602, !3813}
!4123 = !{!4124, !4125, !4126, !4127, !4128, !4131, !4132, !4134, !4135, !4138}
!4124 = !DILocalVariable(name: "h", arg: 1, scope: !4120, file: !3687, line: 211, type: !2602)
!4125 = !DILocalVariable(name: "sz", arg: 2, scope: !4120, file: !3687, line: 211, type: !3813)
!4126 = !DILocalVariable(name: "bi", scope: !4120, file: !3687, line: 213, type: !103)
!4127 = !DILocalVariable(name: "b", scope: !4120, file: !3687, line: 214, type: !3876)
!4128 = !DILocalVariable(name: "first", scope: !4129, file: !3687, line: 233, type: !2607)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !3687, line: 232, column: 15)
!4130 = distinct !DILexicalBlock(scope: !4120, file: !3687, line: 232, column: 6)
!4131 = !DILocalVariable(name: "i", scope: !4129, file: !3687, line: 234, type: !103)
!4132 = !DILocalVariable(name: "c", scope: !4133, file: !3687, line: 236, type: !2607)
!4133 = distinct !DILexicalBlock(scope: !4129, file: !3687, line: 235, column: 6)
!4134 = !DILocalVariable(name: "bmask", scope: !4120, file: !3687, line: 249, type: !132)
!4135 = !DILocalVariable(name: "minbucket", scope: !4136, file: !3687, line: 252, type: !103)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !3687, line: 251, column: 19)
!4137 = distinct !DILexicalBlock(scope: !4120, file: !3687, line: 251, column: 6)
!4138 = !DILocalVariable(name: "c", scope: !4136, file: !3687, line: 253, type: !2607)
!4139 = !DILocation(line: 0, scope: !4120)
!4140 = !DILocation(line: 213, column: 11, scope: !4120)
!4141 = !DILocation(line: 232, column: 9, scope: !4130)
!4142 = !DILocation(line: 232, column: 6, scope: !4130)
!4143 = !DILocation(line: 232, column: 6, scope: !4120)
!4144 = !DILocation(line: 236, column: 21, scope: !4133)
!4145 = !DILocation(line: 0, scope: !4129)
!4146 = !DILocation(line: 0, scope: !4133)
!4147 = !DILocation(line: 237, column: 8, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4133, file: !3687, line: 237, column: 8)
!4149 = !DILocation(line: 237, column: 25, scope: !4148)
!4150 = !DILocation(line: 237, column: 8, scope: !4133)
!4151 = !DILocation(line: 238, column: 5, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4148, file: !3687, line: 237, column: 32)
!4153 = !DILocation(line: 241, column: 14, scope: !4133)
!4154 = !DILocation(line: 241, column: 12, scope: !4133)
!4155 = !DILocation(line: 243, column: 12, scope: !4129)
!4156 = !DILocation(line: 243, column: 16, scope: !4129)
!4157 = distinct !{!4157, !4158, !4159}
!4158 = !DILocation(line: 235, column: 3, scope: !4129)
!4159 = !DILocation(line: 243, column: 35, scope: !4129)
!4160 = !DILocation(line: 249, column: 22, scope: !4120)
!4161 = !DILocation(line: 249, column: 39, scope: !4120)
!4162 = !DILocation(line: 249, column: 36, scope: !4120)
!4163 = !DILocation(line: 251, column: 12, scope: !4137)
!4164 = !DILocation(line: 251, column: 6, scope: !4120)
!4165 = !DILocation(line: 252, column: 19, scope: !4136)
!4166 = !DILocation(line: 0, scope: !4136)
!4167 = !DILocation(line: 253, column: 39, scope: !4136)
!4168 = !DILocation(line: 255, column: 3, scope: !4136)
!4169 = !DILocation(line: 261, column: 1, scope: !4120)
!4170 = distinct !DISubprogram(name: "split_chunks", scope: !3687, file: !3687, line: 109, type: !3806, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4171)
!4171 = !{!4172, !4173, !4174, !4175, !4176, !4177}
!4172 = !DILocalVariable(name: "h", arg: 1, scope: !4170, file: !3687, line: 109, type: !2602)
!4173 = !DILocalVariable(name: "lc", arg: 2, scope: !4170, file: !3687, line: 109, type: !2607)
!4174 = !DILocalVariable(name: "rc", arg: 3, scope: !4170, file: !3687, line: 109, type: !2607)
!4175 = !DILocalVariable(name: "sz0", scope: !4170, file: !3687, line: 114, type: !3813)
!4176 = !DILocalVariable(name: "lsz", scope: !4170, file: !3687, line: 115, type: !3813)
!4177 = !DILocalVariable(name: "rsz", scope: !4170, file: !3687, line: 116, type: !3813)
!4178 = !DILocation(line: 0, scope: !4170)
!4179 = !DILocation(line: 114, column: 18, scope: !4170)
!4180 = !DILocation(line: 115, column: 21, scope: !4170)
!4181 = !DILocation(line: 116, column: 22, scope: !4170)
!4182 = !DILocation(line: 118, column: 2, scope: !4170)
!4183 = !DILocation(line: 119, column: 2, scope: !4170)
!4184 = !DILocation(line: 120, column: 2, scope: !4170)
!4185 = !DILocation(line: 121, column: 25, scope: !4170)
!4186 = !DILocation(line: 121, column: 2, scope: !4170)
!4187 = !DILocation(line: 122, column: 1, scope: !4170)
!4188 = distinct !DISubprogram(name: "chunk_mem", scope: !3687, file: !3687, line: 24, type: !4189, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4191)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!102, !2602, !2607}
!4191 = !{!4192, !4193, !4194, !4195}
!4192 = !DILocalVariable(name: "h", arg: 1, scope: !4188, file: !3687, line: 24, type: !2602)
!4193 = !DILocalVariable(name: "c", arg: 2, scope: !4188, file: !3687, line: 24, type: !2607)
!4194 = !DILocalVariable(name: "buf", scope: !4188, file: !3687, line: 26, type: !2596)
!4195 = !DILocalVariable(name: "ret", scope: !4188, file: !3687, line: 27, type: !283)
!4196 = !DILocation(line: 0, scope: !4188)
!4197 = !DILocation(line: 26, column: 22, scope: !4188)
!4198 = !DILocation(line: 27, column: 38, scope: !4188)
!4199 = !DILocation(line: 31, column: 2, scope: !4188)
!4200 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3687, file: !3687, line: 301, type: !4201, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4203)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!102, !3690, !369, !369}
!4203 = !{!4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215}
!4204 = !DILocalVariable(name: "heap", arg: 1, scope: !4200, file: !3687, line: 301, type: !3690)
!4205 = !DILocalVariable(name: "align", arg: 2, scope: !4200, file: !3687, line: 301, type: !369)
!4206 = !DILocalVariable(name: "bytes", arg: 3, scope: !4200, file: !3687, line: 301, type: !369)
!4207 = !DILocalVariable(name: "h", scope: !4200, file: !3687, line: 303, type: !2602)
!4208 = !DILocalVariable(name: "gap", scope: !4200, file: !3687, line: 304, type: !369)
!4209 = !DILocalVariable(name: "rew", scope: !4200, file: !3687, line: 304, type: !369)
!4210 = !DILocalVariable(name: "padded_sz", scope: !4200, file: !3687, line: 335, type: !3813)
!4211 = !DILocalVariable(name: "c0", scope: !4200, file: !3687, line: 336, type: !2607)
!4212 = !DILocalVariable(name: "mem", scope: !4200, file: !3687, line: 341, type: !283)
!4213 = !DILocalVariable(name: "end", scope: !4200, file: !3687, line: 345, type: !2596)
!4214 = !DILocalVariable(name: "c", scope: !4200, file: !3687, line: 348, type: !2607)
!4215 = !DILocalVariable(name: "c_end", scope: !4200, file: !3687, line: 349, type: !2607)
!4216 = !DILocation(line: 0, scope: !4200)
!4217 = !DILocation(line: 303, column: 27, scope: !4200)
!4218 = !DILocation(line: 313, column: 16, scope: !4200)
!4219 = !DILocation(line: 313, column: 14, scope: !4200)
!4220 = !DILocation(line: 314, column: 12, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4200, file: !3687, line: 314, column: 6)
!4222 = !DILocation(line: 314, column: 6, scope: !4200)
!4223 = !DILocation(line: 315, column: 9, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4221, file: !3687, line: 314, column: 20)
!4225 = !DILocation(line: 316, column: 9, scope: !4224)
!4226 = !DILocation(line: 318, column: 13, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !3687, line: 318, column: 7)
!4228 = distinct !DILexicalBlock(scope: !4221, file: !3687, line: 317, column: 9)
!4229 = !DILocation(line: 318, column: 7, scope: !4228)
!4230 = !DILocation(line: 319, column: 11, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4227, file: !3687, line: 318, column: 39)
!4232 = !DILocation(line: 319, column: 4, scope: !4231)
!4233 = !DILocation(line: 0, scope: !4221)
!4234 = !DILocation(line: 326, column: 12, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4200, file: !3687, line: 326, column: 6)
!4236 = !DILocation(line: 326, column: 17, scope: !4235)
!4237 = !DILocation(line: 326, column: 20, scope: !4235)
!4238 = !DILocation(line: 326, column: 6, scope: !4200)
!4239 = !DILocation(line: 335, column: 50, scope: !4200)
!4240 = !DILocation(line: 335, column: 58, scope: !4200)
!4241 = !DILocation(line: 335, column: 24, scope: !4200)
!4242 = !DILocation(line: 336, column: 17, scope: !4200)
!4243 = !DILocation(line: 338, column: 9, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4200, file: !3687, line: 338, column: 6)
!4245 = !DILocation(line: 338, column: 6, scope: !4200)
!4246 = !DILocation(line: 341, column: 17, scope: !4200)
!4247 = !DILocation(line: 344, column: 20, scope: !4200)
!4248 = !DILocation(line: 344, column: 8, scope: !4200)
!4249 = !DILocation(line: 344, column: 47, scope: !4200)
!4250 = !DILocation(line: 345, column: 39, scope: !4200)
!4251 = !DILocation(line: 348, column: 16, scope: !4200)
!4252 = !DILocation(line: 349, column: 26, scope: !4200)
!4253 = !DILocation(line: 349, column: 24, scope: !4200)
!4254 = !DILocation(line: 353, column: 8, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4200, file: !3687, line: 353, column: 6)
!4256 = !DILocation(line: 353, column: 6, scope: !4200)
!4257 = !DILocation(line: 354, column: 3, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4255, file: !3687, line: 353, column: 14)
!4259 = !DILocation(line: 355, column: 3, scope: !4258)
!4260 = !DILocation(line: 356, column: 2, scope: !4258)
!4261 = !DILocation(line: 359, column: 6, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4200, file: !3687, line: 359, column: 6)
!4263 = !DILocation(line: 359, column: 24, scope: !4262)
!4264 = !DILocation(line: 359, column: 6, scope: !4200)
!4265 = !DILocation(line: 360, column: 3, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4262, file: !3687, line: 359, column: 33)
!4267 = !DILocation(line: 361, column: 3, scope: !4266)
!4268 = !DILocation(line: 362, column: 2, scope: !4266)
!4269 = !DILocation(line: 364, column: 2, scope: !4200)
!4270 = !DILocation(line: 377, column: 1, scope: !4200)
!4271 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3687, file: !3687, line: 379, type: !4272, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4274)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!102, !3690, !102, !369, !369}
!4274 = !{!4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4290, !4291}
!4275 = !DILocalVariable(name: "heap", arg: 1, scope: !4271, file: !3687, line: 379, type: !3690)
!4276 = !DILocalVariable(name: "ptr", arg: 2, scope: !4271, file: !3687, line: 379, type: !102)
!4277 = !DILocalVariable(name: "align", arg: 3, scope: !4271, file: !3687, line: 380, type: !369)
!4278 = !DILocalVariable(name: "bytes", arg: 4, scope: !4271, file: !3687, line: 380, type: !369)
!4279 = !DILocalVariable(name: "h", scope: !4271, file: !3687, line: 382, type: !2602)
!4280 = !DILocalVariable(name: "c", scope: !4271, file: !3687, line: 399, type: !2607)
!4281 = !DILocalVariable(name: "rc", scope: !4271, file: !3687, line: 400, type: !2607)
!4282 = !DILocalVariable(name: "align_gap", scope: !4271, file: !3687, line: 401, type: !369)
!4283 = !DILocalVariable(name: "chunks_need", scope: !4271, file: !3687, line: 402, type: !3813)
!4284 = !DILocalVariable(name: "split_size", scope: !4285, file: !3687, line: 435, type: !3813)
!4285 = distinct !DILexicalBlock(scope: !4286, file: !3687, line: 433, column: 61)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !3687, line: 432, column: 13)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !3687, line: 409, column: 13)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !3687, line: 406, column: 13)
!4289 = distinct !DILexicalBlock(scope: !4271, file: !3687, line: 404, column: 6)
!4290 = !DILocalVariable(name: "ptr2", scope: !4271, file: !3687, line: 474, type: !102)
!4291 = !DILocalVariable(name: "prev_size", scope: !4292, file: !3687, line: 477, type: !369)
!4292 = distinct !DILexicalBlock(scope: !4293, file: !3687, line: 476, column: 20)
!4293 = distinct !DILexicalBlock(scope: !4271, file: !3687, line: 476, column: 6)
!4294 = !DILocation(line: 0, scope: !4271)
!4295 = !DILocation(line: 382, column: 27, scope: !4271)
!4296 = !DILocation(line: 385, column: 10, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4271, file: !3687, line: 385, column: 6)
!4298 = !DILocation(line: 385, column: 6, scope: !4271)
!4299 = !DILocation(line: 386, column: 10, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4297, file: !3687, line: 385, column: 19)
!4301 = !DILocation(line: 386, column: 3, scope: !4300)
!4302 = !DILocation(line: 388, column: 12, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4271, file: !3687, line: 388, column: 6)
!4304 = !DILocation(line: 388, column: 6, scope: !4271)
!4305 = !DILocation(line: 389, column: 3, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4303, file: !3687, line: 388, column: 18)
!4307 = !DILocation(line: 390, column: 3, scope: !4306)
!4308 = !DILocation(line: 395, column: 6, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4271, file: !3687, line: 395, column: 6)
!4310 = !DILocation(line: 395, column: 6, scope: !4271)
!4311 = !DILocation(line: 399, column: 16, scope: !4271)
!4312 = !DILocation(line: 400, column: 17, scope: !4271)
!4313 = !DILocation(line: 401, column: 49, scope: !4271)
!4314 = !DILocation(line: 401, column: 36, scope: !4271)
!4315 = !DILocation(line: 402, column: 52, scope: !4271)
!4316 = !DILocation(line: 402, column: 26, scope: !4271)
!4317 = !DILocation(line: 404, column: 6, scope: !4289)
!4318 = !DILocation(line: 404, column: 12, scope: !4289)
!4319 = !DILocation(line: 404, column: 40, scope: !4289)
!4320 = !DILocation(line: 404, column: 31, scope: !4289)
!4321 = !DILocation(line: 404, column: 6, scope: !4271)
!4322 = !DILocation(line: 406, column: 13, scope: !4288)
!4323 = !DILocation(line: 406, column: 30, scope: !4288)
!4324 = !DILocation(line: 406, column: 13, scope: !4289)
!4325 = !DILocation(line: 409, column: 30, scope: !4287)
!4326 = !DILocation(line: 409, column: 13, scope: !4288)
!4327 = !DILocation(line: 420, column: 24, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4287, file: !3687, line: 409, column: 45)
!4329 = !DILocation(line: 420, column: 3, scope: !4328)
!4330 = !DILocation(line: 421, column: 3, scope: !4328)
!4331 = !DILocation(line: 422, column: 3, scope: !4328)
!4332 = !DILocation(line: 431, column: 3, scope: !4328)
!4333 = !DILocation(line: 432, column: 14, scope: !4286)
!4334 = !DILocation(line: 432, column: 32, scope: !4286)
!4335 = !DILocation(line: 433, column: 26, scope: !4286)
!4336 = !DILocation(line: 433, column: 24, scope: !4286)
!4337 = !DILocation(line: 433, column: 44, scope: !4286)
!4338 = !DILocation(line: 432, column: 13, scope: !4287)
!4339 = !DILocation(line: 435, column: 38, scope: !4285)
!4340 = !DILocation(line: 0, scope: !4285)
!4341 = !DILocation(line: 445, column: 3, scope: !4285)
!4342 = !DILocation(line: 447, column: 20, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4285, file: !3687, line: 447, column: 7)
!4344 = !DILocation(line: 447, column: 18, scope: !4343)
!4345 = !DILocation(line: 447, column: 7, scope: !4285)
!4346 = !DILocation(line: 448, column: 27, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4343, file: !3687, line: 447, column: 39)
!4348 = !DILocation(line: 448, column: 4, scope: !4347)
!4349 = !DILocation(line: 449, column: 4, scope: !4347)
!4350 = !DILocation(line: 450, column: 3, scope: !4347)
!4351 = !DILocation(line: 452, column: 3, scope: !4285)
!4352 = !DILocation(line: 453, column: 3, scope: !4285)
!4353 = !DILocation(line: 474, column: 15, scope: !4271)
!4354 = !DILocation(line: 476, column: 11, scope: !4293)
!4355 = !DILocation(line: 476, column: 6, scope: !4271)
!4356 = !DILocation(line: 477, column: 42, scope: !4292)
!4357 = !DILocation(line: 477, column: 22, scope: !4292)
!4358 = !DILocation(line: 477, column: 60, scope: !4292)
!4359 = !DILocation(line: 0, scope: !4292)
!4360 = !DILocation(line: 479, column: 21, scope: !4292)
!4361 = !DILocation(line: 479, column: 3, scope: !4292)
!4362 = !DILocation(line: 480, column: 3, scope: !4292)
!4363 = !DILocation(line: 481, column: 2, scope: !4292)
!4364 = !DILocation(line: 483, column: 1, scope: !4271)
!4365 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2589, file: !2589, line: 245, type: !4366, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4368)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{!369, !2602, !3813}
!4368 = !{!4369, !4370}
!4369 = !DILocalVariable(name: "h", arg: 1, scope: !4365, file: !2589, line: 245, type: !2602)
!4370 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4365, file: !2589, line: 245, type: !3813)
!4371 = !DILocation(line: 0, scope: !4365)
!4372 = !DILocation(line: 247, column: 20, scope: !4365)
!4373 = !DILocation(line: 247, column: 33, scope: !4365)
!4374 = !DILocation(line: 247, column: 2, scope: !4365)
!4375 = distinct !DISubprogram(name: "sys_heap_init", scope: !3687, file: !3687, line: 485, type: !4376, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{null, !3690, !102, !369}
!4378 = !{!4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388}
!4379 = !DILocalVariable(name: "heap", arg: 1, scope: !4375, file: !3687, line: 485, type: !3690)
!4380 = !DILocalVariable(name: "mem", arg: 2, scope: !4375, file: !3687, line: 485, type: !102)
!4381 = !DILocalVariable(name: "bytes", arg: 3, scope: !4375, file: !3687, line: 485, type: !369)
!4382 = !DILocalVariable(name: "addr", scope: !4375, file: !3687, line: 502, type: !22)
!4383 = !DILocalVariable(name: "end", scope: !4375, file: !3687, line: 503, type: !22)
!4384 = !DILocalVariable(name: "heap_sz", scope: !4375, file: !3687, line: 504, type: !3813)
!4385 = !DILocalVariable(name: "h", scope: !4375, file: !3687, line: 509, type: !2602)
!4386 = !DILocalVariable(name: "nb_buckets", scope: !4375, file: !3687, line: 520, type: !103)
!4387 = !DILocalVariable(name: "chunk0_size", scope: !4375, file: !3687, line: 521, type: !3813)
!4388 = !DILocalVariable(name: "i", scope: !4389, file: !3687, line: 526, type: !103)
!4389 = distinct !DILexicalBlock(scope: !4375, file: !3687, line: 526, column: 2)
!4390 = !DILocation(line: 0, scope: !4375)
!4391 = !DILocation(line: 499, column: 8, scope: !4375)
!4392 = !DILocation(line: 502, column: 19, scope: !4375)
!4393 = !DILocation(line: 503, column: 18, scope: !4375)
!4394 = !DILocation(line: 504, column: 27, scope: !4375)
!4395 = !DILocation(line: 504, column: 35, scope: !4375)
!4396 = !DILocation(line: 509, column: 21, scope: !4375)
!4397 = !DILocation(line: 510, column: 8, scope: !4375)
!4398 = !DILocation(line: 510, column: 13, scope: !4375)
!4399 = !DILocation(line: 511, column: 5, scope: !4375)
!4400 = !DILocation(line: 511, column: 15, scope: !4375)
!4401 = !DILocation(line: 512, column: 5, scope: !4375)
!4402 = !DILocation(line: 512, column: 19, scope: !4375)
!4403 = !DILocation(line: 520, column: 19, scope: !4375)
!4404 = !DILocation(line: 522, column: 21, scope: !4375)
!4405 = !DILocation(line: 521, column: 56, scope: !4375)
!4406 = !DILocation(line: 521, column: 26, scope: !4375)
!4407 = !DILocation(line: 0, scope: !4389)
!4408 = !DILocation(line: 526, column: 20, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4389, file: !3687, line: 526, column: 2)
!4410 = !DILocation(line: 526, column: 2, scope: !4389)
!4411 = !DILocation(line: 531, column: 2, scope: !4375)
!4412 = !DILocation(line: 532, column: 2, scope: !4375)
!4413 = !DILocation(line: 533, column: 2, scope: !4375)
!4414 = !DILocation(line: 536, column: 41, scope: !4375)
!4415 = !DILocation(line: 536, column: 2, scope: !4375)
!4416 = !DILocation(line: 537, column: 2, scope: !4375)
!4417 = !DILocation(line: 540, column: 2, scope: !4375)
!4418 = !DILocation(line: 541, column: 2, scope: !4375)
!4419 = !DILocation(line: 542, column: 2, scope: !4375)
!4420 = !DILocation(line: 544, column: 2, scope: !4375)
!4421 = !DILocation(line: 545, column: 1, scope: !4375)
!4422 = !DILocation(line: 527, column: 17, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4409, file: !3687, line: 526, column: 39)
!4424 = !DILocation(line: 527, column: 22, scope: !4423)
!4425 = !DILocation(line: 526, column: 35, scope: !4409)
!4426 = distinct !{!4426, !4410, !4427}
!4427 = !DILocation(line: 528, column: 2, scope: !4389)
!4428 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2622, file: !2622, line: 1338, type: !4429, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !4437)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!103, !3417, !102, !168, !4431, !132}
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3383, line: 99, baseType: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3383, line: 40, baseType: !4433)
!4433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2622, baseType: !4434)
!4434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4435)
!4435 = !{!4436}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4434, file: !2622, baseType: !102, size: 32)
!4437 = !{!4438, !4439, !4440, !4441, !4442, !4443, !4447, !4448, !4449, !4451, !4456, !4501, !4504, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4516, !4517, !4518, !4522, !4525, !4527, !4530, !4531, !4532, !4537, !4543, !4546, !4550, !4556, !4560, !4563, !4565, !4568}
!4438 = !DILocalVariable(name: "out", arg: 1, scope: !4428, file: !2622, line: 1338, type: !3417)
!4439 = !DILocalVariable(name: "ctx", arg: 2, scope: !4428, file: !2622, line: 1338, type: !102)
!4440 = !DILocalVariable(name: "fp", arg: 3, scope: !4428, file: !2622, line: 1338, type: !168)
!4441 = !DILocalVariable(name: "ap", arg: 4, scope: !4428, file: !2622, line: 1339, type: !4431)
!4442 = !DILocalVariable(name: "flags", arg: 5, scope: !4428, file: !2622, line: 1339, type: !132)
!4443 = !DILocalVariable(name: "buf", scope: !4428, file: !2622, line: 1341, type: !4444)
!4444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 176, elements: !4445)
!4445 = !{!4446}
!4446 = !DISubrange(count: 22)
!4447 = !DILocalVariable(name: "count", scope: !4428, file: !2622, line: 1342, type: !369)
!4448 = !DILocalVariable(name: "sint", scope: !4428, file: !2622, line: 1343, type: !2641)
!4449 = !DILocalVariable(name: "tagged_ap", scope: !4428, file: !2622, line: 1345, type: !4450)
!4450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!4451 = !DILocalVariable(name: "rc", scope: !4452, file: !2622, line: 1377, type: !103)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !2622, line: 1377, column: 4)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !2622, line: 1376, column: 19)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1376, column: 7)
!4455 = distinct !DILexicalBlock(scope: !4428, file: !2622, line: 1375, column: 19)
!4456 = !DILocalVariable(name: "state", scope: !4455, file: !2622, line: 1395, type: !4457)
!4457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4428, file: !2622, line: 1392, size: 192, elements: !4458)
!4458 = !{!4459, !4469}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4457, file: !2622, line: 1393, baseType: !4460, size: 64)
!4460 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2622, line: 166, size: 64, elements: !4461)
!4461 = !{!4462, !4463, !4464, !4466, !4468}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4460, file: !2622, line: 168, baseType: !2641, size: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4460, file: !2622, line: 171, baseType: !2644, size: 64)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4460, file: !2622, line: 174, baseType: !4465, size: 64)
!4465 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4460, file: !2622, line: 177, baseType: !4467, size: 64)
!4467 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4460, file: !2622, line: 180, baseType: !102, size: 32)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4457, file: !2622, line: 1394, baseType: !4470, size: 96, offset: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2622, line: 189, size: 96, elements: !4471)
!4471 = !{!4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4496}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4470, file: !2622, line: 191, baseType: !179, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4470, file: !2622, line: 194, baseType: !179, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4470, file: !2622, line: 197, baseType: !179, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4470, file: !2622, line: 200, baseType: !179, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4470, file: !2622, line: 203, baseType: !179, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4470, file: !2622, line: 206, baseType: !179, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4470, file: !2622, line: 209, baseType: !179, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4470, file: !2622, line: 212, baseType: !179, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4470, file: !2622, line: 219, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4470, file: !2622, line: 222, baseType: !179, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4470, file: !2622, line: 229, baseType: !179, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4470, file: !2622, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4470, file: !2622, line: 238, baseType: !179, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4470, file: !2622, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4470, file: !2622, line: 244, baseType: !179, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4470, file: !2622, line: 247, baseType: !179, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4470, file: !2622, line: 252, baseType: !179, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4470, file: !2622, line: 257, baseType: !179, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4470, file: !2622, line: 260, baseType: !177, size: 8, offset: 24)
!4491 = !DIDerivedType(tag: DW_TAG_member, scope: !4470, file: !2622, line: 262, baseType: !4492, size: 32, offset: 32)
!4492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4470, file: !2622, line: 262, size: 32, elements: !4493)
!4493 = !{!4494, !4495}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4492, file: !2622, line: 267, baseType: !103, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4492, file: !2622, line: 289, baseType: !103, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, scope: !4470, file: !2622, line: 292, baseType: !4497, size: 32, offset: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4470, file: !2622, line: 292, size: 32, elements: !4498)
!4498 = !{!4499, !4500}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4497, file: !2622, line: 297, baseType: !103, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4497, file: !2622, line: 306, baseType: !103, size: 32)
!4501 = !DILocalVariable(name: "conv", scope: !4455, file: !2622, line: 1400, type: !4502)
!4502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4503)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 32)
!4504 = !DILocalVariable(name: "value", scope: !4455, file: !2622, line: 1401, type: !4505)
!4505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4506)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4460, size: 32)
!4507 = !DILocalVariable(name: "sp", scope: !4455, file: !2622, line: 1402, type: !168)
!4508 = !DILocalVariable(name: "width", scope: !4455, file: !2622, line: 1403, type: !103)
!4509 = !DILocalVariable(name: "precision", scope: !4455, file: !2622, line: 1404, type: !103)
!4510 = !DILocalVariable(name: "bps", scope: !4455, file: !2622, line: 1405, type: !168)
!4511 = !DILocalVariable(name: "bpe", scope: !4455, file: !2622, line: 1406, type: !168)
!4512 = !DILocalVariable(name: "sign", scope: !4455, file: !2622, line: 1407, type: !108)
!4513 = !DILocalVariable(name: "arg", scope: !4514, file: !2622, line: 1432, type: !103)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !2622, line: 1431, column: 24)
!4515 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1431, column: 7)
!4516 = !DILocalVariable(name: "specifier_cat", scope: !4455, file: !2622, line: 1468, type: !2621)
!4517 = !DILocalVariable(name: "length_mod", scope: !4455, file: !2622, line: 1470, type: !2629)
!4518 = !DILocalVariable(name: "rc", scope: !4519, file: !2622, line: 1575, type: !103)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !2622, line: 1575, column: 4)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2622, line: 1574, column: 43)
!4521 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1574, column: 7)
!4522 = !DILocalVariable(name: "rc", scope: !4523, file: !2622, line: 1584, type: !103)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2622, line: 1584, column: 4)
!4524 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1582, column: 28)
!4525 = !DILocalVariable(name: "len", scope: !4526, file: !2622, line: 1589, type: !369)
!4526 = distinct !DILexicalBlock(scope: !4524, file: !2622, line: 1586, column: 13)
!4527 = !DILocalVariable(name: "len", scope: !4528, file: !2622, line: 1641, type: !369)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !2622, line: 1640, column: 24)
!4529 = distinct !DILexicalBlock(scope: !4524, file: !2622, line: 1640, column: 8)
!4530 = !DILocalVariable(name: "nj_len", scope: !4455, file: !2622, line: 1722, type: !369)
!4531 = !DILocalVariable(name: "pad_len", scope: !4455, file: !2622, line: 1723, type: !103)
!4532 = !DILocalVariable(name: "pad", scope: !4533, file: !2622, line: 1751, type: !108)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !2622, line: 1750, column: 26)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2622, line: 1750, column: 8)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2622, line: 1747, column: 18)
!4536 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1747, column: 7)
!4537 = !DILocalVariable(name: "rc", scope: !4538, file: !2622, line: 1758, type: !103)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2622, line: 1758, column: 7)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2622, line: 1757, column: 21)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2622, line: 1757, column: 10)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2622, line: 1756, column: 26)
!4542 = distinct !DILexicalBlock(scope: !4533, file: !2622, line: 1756, column: 9)
!4543 = !DILocalVariable(name: "rc", scope: !4544, file: !2622, line: 1765, type: !103)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !2622, line: 1765, column: 6)
!4545 = distinct !DILexicalBlock(scope: !4533, file: !2622, line: 1764, column: 25)
!4546 = !DILocalVariable(name: "rc", scope: !4547, file: !2622, line: 1774, type: !103)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2622, line: 1774, column: 4)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2622, line: 1773, column: 18)
!4549 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1773, column: 7)
!4550 = !DILocalVariable(name: "rc", scope: !4551, file: !2622, line: 1819, type: !103)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2622, line: 1819, column: 5)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2622, line: 1818, column: 44)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !2622, line: 1818, column: 8)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2622, line: 1817, column: 10)
!4555 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1777, column: 7)
!4556 = !DILocalVariable(name: "rc", scope: !4557, file: !2622, line: 1823, type: !103)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !2622, line: 1823, column: 5)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2622, line: 1822, column: 26)
!4559 = distinct !DILexicalBlock(scope: !4554, file: !2622, line: 1822, column: 8)
!4560 = !DILocalVariable(name: "rc", scope: !4561, file: !2622, line: 1828, type: !103)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2622, line: 1828, column: 5)
!4562 = distinct !DILexicalBlock(scope: !4554, file: !2622, line: 1827, column: 26)
!4563 = !DILocalVariable(name: "rc", scope: !4564, file: !2622, line: 1831, type: !103)
!4564 = distinct !DILexicalBlock(scope: !4554, file: !2622, line: 1831, column: 4)
!4565 = !DILocalVariable(name: "rc", scope: !4566, file: !2622, line: 1836, type: !103)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !2622, line: 1836, column: 4)
!4567 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1835, column: 21)
!4568 = !DILabel(scope: !4524, name: "prec_int_pad0", file: !2622, line: 1634)
!4569 = !DILocation(line: 0, scope: !4428)
!4570 = !DILocation(line: 1341, column: 2, scope: !4428)
!4571 = !DILocation(line: 1341, column: 7, scope: !4428)
!4572 = !DILocation(line: 1375, column: 2, scope: !4428)
!4573 = !DILocation(line: 1342, column: 9, scope: !4428)
!4574 = !DILocation(line: 1375, column: 9, scope: !4428)
!4575 = !DILocation(line: 1377, column: 4, scope: !4452)
!4576 = !DILocation(line: 0, scope: !4452)
!4577 = !DILocation(line: 1377, column: 4, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4452, file: !2622, line: 1377, column: 4)
!4579 = distinct !{!4579, !4572, !4580}
!4580 = !DILocation(line: 1839, column: 2, scope: !4428)
!4581 = !DILocation(line: 1392, column: 3, scope: !4455)
!4582 = !DILocation(line: 1395, column: 5, scope: !4455)
!4583 = !DILocation(line: 0, scope: !4455)
!4584 = !DILocation(line: 1409, column: 8, scope: !4455)
!4585 = !DILocation(line: 1414, column: 13, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1414, column: 7)
!4587 = !DILocation(line: 1414, column: 7, scope: !4455)
!4588 = !DILocation(line: 1415, column: 12, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4586, file: !2622, line: 1414, column: 25)
!4590 = !DILocation(line: 1417, column: 14, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4589, file: !2622, line: 1417, column: 8)
!4592 = !DILocation(line: 1417, column: 8, scope: !4589)
!4593 = !DILocation(line: 1418, column: 21, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4591, file: !2622, line: 1417, column: 19)
!4595 = !DILocation(line: 1419, column: 13, scope: !4594)
!4596 = !DILocation(line: 1420, column: 4, scope: !4594)
!4597 = !DILocation(line: 1421, column: 20, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4586, file: !2622, line: 1421, column: 14)
!4599 = !DILocation(line: 1421, column: 14, scope: !4586)
!4600 = !DILocation(line: 1431, column: 13, scope: !4515)
!4601 = !DILocation(line: 1431, column: 7, scope: !4455)
!4602 = !DILocation(line: 1432, column: 14, scope: !4514)
!4603 = !DILocation(line: 0, scope: !4514)
!4604 = !DILocation(line: 1434, column: 12, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4514, file: !2622, line: 1434, column: 8)
!4606 = !DILocation(line: 1434, column: 8, scope: !4514)
!4607 = !DILocation(line: 1435, column: 24, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4605, file: !2622, line: 1434, column: 17)
!4609 = !DILocation(line: 1436, column: 4, scope: !4608)
!4610 = !DILocation(line: 1439, column: 20, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4515, file: !2622, line: 1439, column: 14)
!4612 = !DILocation(line: 1439, column: 14, scope: !4515)
!4613 = !DILocation(line: 1469, column: 37, scope: !4455)
!4614 = !DILocation(line: 1448, column: 20, scope: !4455)
!4615 = !DILocation(line: 1449, column: 22, scope: !4455)
!4616 = !DILocation(line: 1471, column: 34, scope: !4455)
!4617 = !DILocation(line: 1478, column: 7, scope: !4455)
!4618 = !DILocation(line: 1479, column: 4, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2622, line: 1478, column: 40)
!4620 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1478, column: 7)
!4621 = !DILocation(line: 1484, column: 19, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4619, file: !2622, line: 1479, column: 24)
!4623 = !DILocation(line: 1484, column: 17, scope: !4622)
!4624 = !DILocation(line: 1485, column: 5, scope: !4622)
!4625 = !DILocation(line: 1492, column: 20, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2622, line: 1491, column: 12)
!4627 = distinct !DILexicalBlock(scope: !4622, file: !2622, line: 1487, column: 9)
!4628 = !DILocation(line: 1492, column: 18, scope: !4626)
!4629 = !DILocation(line: 1494, column: 5, scope: !4622)
!4630 = !DILocation(line: 1497, column: 23, scope: !4622)
!4631 = !DILocation(line: 1496, column: 17, scope: !4622)
!4632 = !DILocation(line: 1498, column: 5, scope: !4622)
!4633 = !DILocation(line: 1501, column: 23, scope: !4622)
!4634 = !DILocation(line: 1500, column: 17, scope: !4622)
!4635 = !DILocation(line: 1502, column: 5, scope: !4622)
!4636 = !DILocation(line: 1513, column: 23, scope: !4622)
!4637 = !DILocation(line: 1513, column: 6, scope: !4622)
!4638 = !DILocation(line: 1512, column: 17, scope: !4622)
!4639 = !DILocation(line: 1514, column: 5, scope: !4622)
!4640 = !DILocation(line: 0, scope: !4622)
!4641 = !DILocation(line: 1516, column: 8, scope: !4619)
!4642 = !DILocation(line: 1517, column: 19, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2622, line: 1516, column: 33)
!4644 = distinct !DILexicalBlock(scope: !4619, file: !2622, line: 1516, column: 8)
!4645 = !DILocation(line: 1517, column: 17, scope: !4643)
!4646 = !DILocation(line: 1518, column: 4, scope: !4643)
!4647 = !DILocation(line: 1519, column: 19, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2622, line: 1518, column: 39)
!4649 = distinct !DILexicalBlock(scope: !4644, file: !2622, line: 1518, column: 15)
!4650 = !DILocation(line: 1519, column: 17, scope: !4648)
!4651 = !DILocation(line: 1520, column: 4, scope: !4648)
!4652 = !DILocation(line: 1522, column: 4, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2622, line: 1521, column: 47)
!4654 = distinct !DILexicalBlock(scope: !4620, file: !2622, line: 1521, column: 14)
!4655 = !DILocation(line: 1527, column: 19, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4653, file: !2622, line: 1522, column: 24)
!4657 = !DILocation(line: 1527, column: 17, scope: !4656)
!4658 = !DILocation(line: 1528, column: 5, scope: !4656)
!4659 = !DILocation(line: 0, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4656, file: !2622, line: 1530, column: 9)
!4661 = !DILocation(line: 1540, column: 23, scope: !4656)
!4662 = !DILocation(line: 1539, column: 17, scope: !4656)
!4663 = !DILocation(line: 1542, column: 5, scope: !4656)
!4664 = !DILocation(line: 1545, column: 23, scope: !4656)
!4665 = !DILocation(line: 1544, column: 17, scope: !4656)
!4666 = !DILocation(line: 1547, column: 5, scope: !4656)
!4667 = !DILocation(line: 1551, column: 23, scope: !4656)
!4668 = !DILocation(line: 1551, column: 6, scope: !4656)
!4669 = !DILocation(line: 1550, column: 17, scope: !4656)
!4670 = !DILocation(line: 1552, column: 5, scope: !4656)
!4671 = !DILocation(line: 0, scope: !4656)
!4672 = !DILocation(line: 1554, column: 8, scope: !4653)
!4673 = !DILocation(line: 1555, column: 19, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !2622, line: 1554, column: 33)
!4675 = distinct !DILexicalBlock(scope: !4653, file: !2622, line: 1554, column: 8)
!4676 = !DILocation(line: 1555, column: 17, scope: !4674)
!4677 = !DILocation(line: 1556, column: 4, scope: !4674)
!4678 = !DILocation(line: 1557, column: 19, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !2622, line: 1556, column: 39)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !2622, line: 1556, column: 15)
!4681 = !DILocation(line: 1557, column: 17, scope: !4679)
!4682 = !DILocation(line: 1558, column: 4, scope: !4679)
!4683 = !DILocation(line: 0, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !2622, line: 1560, column: 8)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2622, line: 1559, column: 45)
!4686 = distinct !DILexicalBlock(scope: !4654, file: !2622, line: 1559, column: 14)
!4687 = !DILocation(line: 1566, column: 17, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2622, line: 1565, column: 46)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !2622, line: 1565, column: 14)
!4690 = !DILocation(line: 1566, column: 15, scope: !4688)
!4691 = !DILocation(line: 1567, column: 3, scope: !4688)
!4692 = !DILocation(line: 1574, column: 21, scope: !4521)
!4693 = !DILocation(line: 1575, column: 4, scope: !4519)
!4694 = !DILocation(line: 0, scope: !4519)
!4695 = !DILocation(line: 1575, column: 4, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4519, file: !2622, line: 1575, column: 4)
!4697 = !DILocation(line: 1582, column: 17, scope: !4455)
!4698 = !DILocation(line: 1582, column: 3, scope: !4455)
!4699 = !DILocation(line: 1584, column: 4, scope: !4523)
!4700 = !DILocation(line: 0, scope: !4523)
!4701 = !DILocation(line: 1584, column: 4, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4523, file: !2622, line: 1584, column: 4)
!4703 = !DILocation(line: 1587, column: 31, scope: !4526)
!4704 = !DILocation(line: 1591, column: 18, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4526, file: !2622, line: 1591, column: 8)
!4706 = !DILocation(line: 1591, column: 8, scope: !4526)
!4707 = !DILocation(line: 1592, column: 11, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4705, file: !2622, line: 1591, column: 24)
!4709 = !DILocation(line: 0, scope: !4526)
!4710 = !DILocation(line: 1593, column: 4, scope: !4708)
!4711 = !DILocation(line: 1594, column: 11, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4705, file: !2622, line: 1593, column: 11)
!4713 = !DILocation(line: 1604, column: 51, scope: !4524)
!4714 = !DILocation(line: 1604, column: 13, scope: !4524)
!4715 = !DILocation(line: 1604, column: 11, scope: !4524)
!4716 = !DILocation(line: 1606, column: 4, scope: !4524)
!4717 = !DILocation(line: 1609, column: 14, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4524, file: !2622, line: 1609, column: 8)
!4719 = !DILocation(line: 1609, column: 8, scope: !4524)
!4720 = !DILocation(line: 1619, column: 18, scope: !4524)
!4721 = !DILocation(line: 1620, column: 13, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4524, file: !2622, line: 1620, column: 8)
!4723 = !DILocation(line: 1620, column: 8, scope: !4524)
!4724 = !DILocation(line: 1622, column: 36, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4722, file: !2622, line: 1620, column: 18)
!4726 = !DILocation(line: 1622, column: 17, scope: !4725)
!4727 = !DILocation(line: 1623, column: 4, scope: !4725)
!4728 = !DILocation(line: 1632, column: 29, scope: !4524)
!4729 = !DILocation(line: 1632, column: 10, scope: !4524)
!4730 = !DILocation(line: 1632, column: 4, scope: !4524)
!4731 = !DILocation(line: 1407, column: 8, scope: !4455)
!4732 = !DILocation(line: 0, scope: !4524)
!4733 = !DILocation(line: 1634, column: 3, scope: !4524)
!4734 = !DILocation(line: 1640, column: 18, scope: !4529)
!4735 = !DILocation(line: 1640, column: 8, scope: !4524)
!4736 = !DILocation(line: 1729, column: 13, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1729, column: 7)
!4738 = !DILocation(line: 1641, column: 22, scope: !4528)
!4739 = !DILocation(line: 0, scope: !4528)
!4740 = !DILocation(line: 1646, column: 21, scope: !4528)
!4741 = !DILocation(line: 1649, column: 13, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4528, file: !2622, line: 1649, column: 9)
!4743 = !DILocation(line: 1649, column: 9, scope: !4528)
!4744 = !DILocation(line: 1650, column: 35, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !2622, line: 1649, column: 34)
!4746 = !DILocation(line: 1650, column: 23, scope: !4745)
!4747 = !DILocation(line: 1651, column: 5, scope: !4745)
!4748 = !DILocation(line: 1660, column: 15, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4524, file: !2622, line: 1660, column: 8)
!4750 = !DILocation(line: 1660, column: 19, scope: !4749)
!4751 = !DILocation(line: 1660, column: 8, scope: !4524)
!4752 = !DILocation(line: 1661, column: 23, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4749, file: !2622, line: 1660, column: 28)
!4754 = !DILocation(line: 1661, column: 11, scope: !4753)
!4755 = !DILocation(line: 1665, column: 22, scope: !4753)
!4756 = !DILocation(line: 1666, column: 21, scope: !4753)
!4757 = !DILocation(line: 1668, column: 5, scope: !4753)
!4758 = !DILocation(line: 1677, column: 30, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !2622, line: 1676, column: 49)
!4760 = distinct !DILexicalBlock(scope: !4524, file: !2622, line: 1676, column: 8)
!4761 = !DILocation(line: 1677, column: 5, scope: !4759)
!4762 = !DILocation(line: 1680, column: 4, scope: !4524)
!4763 = !DILocation(line: 0, scope: !4705)
!4764 = !DILocation(line: 1597, column: 14, scope: !4526)
!4765 = !DILocation(line: 1699, column: 11, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1699, column: 7)
!4767 = !DILocation(line: 1699, column: 7, scope: !4455)
!4768 = !DILocation(line: 1725, column: 7, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1725, column: 7)
!4770 = !DILocation(line: 1725, column: 12, scope: !4769)
!4771 = !DILocation(line: 1747, column: 13, scope: !4536)
!4772 = !DILocation(line: 1747, column: 7, scope: !4455)
!4773 = !DILocation(line: 1722, column: 24, scope: !4455)
!4774 = !DILocation(line: 1725, column: 7, scope: !4455)
!4775 = !DILocation(line: 1729, column: 7, scope: !4455)
!4776 = !DILocation(line: 1736, column: 13, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4455, file: !2622, line: 1736, column: 7)
!4778 = !DILocation(line: 1735, column: 19, scope: !4455)
!4779 = !DILocation(line: 1736, column: 7, scope: !4455)
!4780 = !DILocation(line: 1748, column: 10, scope: !4535)
!4781 = !DILocation(line: 1750, column: 15, scope: !4534)
!4782 = !DILocation(line: 1750, column: 8, scope: !4535)
!4783 = !DILocation(line: 0, scope: !4533)
!4784 = !DILocation(line: 1756, column: 15, scope: !4542)
!4785 = !DILocation(line: 1756, column: 9, scope: !4533)
!4786 = !DILocation(line: 1758, column: 7, scope: !4538)
!4787 = !DILocation(line: 0, scope: !4538)
!4788 = !DILocation(line: 1758, column: 7, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4538, file: !2622, line: 1758, column: 7)
!4790 = !DILocation(line: 1764, column: 5, scope: !4533)
!4791 = !DILocation(line: 0, scope: !4535)
!4792 = !DILocation(line: 1764, column: 20, scope: !4533)
!4793 = !DILocation(line: 1764, column: 17, scope: !4533)
!4794 = !DILocation(line: 1765, column: 6, scope: !4544)
!4795 = !DILocation(line: 0, scope: !4544)
!4796 = !DILocation(line: 1765, column: 6, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4544, file: !2622, line: 1765, column: 6)
!4798 = distinct !{!4798, !4790, !4799}
!4799 = !DILocation(line: 1766, column: 5, scope: !4533)
!4800 = !DILocation(line: 1773, column: 12, scope: !4549)
!4801 = !DILocation(line: 1773, column: 7, scope: !4455)
!4802 = !DILocation(line: 1773, column: 7, scope: !4549)
!4803 = !DILocation(line: 1774, column: 4, scope: !4547)
!4804 = !DILocation(line: 0, scope: !4547)
!4805 = !DILocation(line: 1774, column: 4, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4547, file: !2622, line: 1774, column: 4)
!4807 = !DILocation(line: 1818, column: 8, scope: !4553)
!4808 = !DILocation(line: 1818, column: 27, scope: !4553)
!4809 = !DILocation(line: 1818, column: 25, scope: !4553)
!4810 = !DILocation(line: 1818, column: 8, scope: !4554)
!4811 = !DILocation(line: 1819, column: 5, scope: !4551)
!4812 = !DILocation(line: 0, scope: !4551)
!4813 = !DILocation(line: 1819, column: 5, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4551, file: !2622, line: 1819, column: 5)
!4815 = !DILocation(line: 1822, column: 14, scope: !4559)
!4816 = !DILocation(line: 1822, column: 8, scope: !4554)
!4817 = !DILocation(line: 1823, column: 5, scope: !4557)
!4818 = !DILocation(line: 0, scope: !4557)
!4819 = !DILocation(line: 1823, column: 5, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4557, file: !2622, line: 1823, column: 5)
!4821 = !DILocation(line: 1826, column: 20, scope: !4554)
!4822 = !DILocation(line: 1827, column: 4, scope: !4554)
!4823 = !DILocation(line: 0, scope: !4554)
!4824 = !DILocation(line: 1827, column: 21, scope: !4554)
!4825 = !DILocation(line: 1827, column: 18, scope: !4554)
!4826 = !DILocation(line: 1828, column: 5, scope: !4561)
!4827 = !DILocation(line: 0, scope: !4561)
!4828 = !DILocation(line: 1828, column: 5, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4561, file: !2622, line: 1828, column: 5)
!4830 = distinct !{!4830, !4822, !4831}
!4831 = !DILocation(line: 1829, column: 4, scope: !4554)
!4832 = !DILocation(line: 1831, column: 4, scope: !4564)
!4833 = !DILocation(line: 0, scope: !4564)
!4834 = !DILocation(line: 1831, column: 4, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4564, file: !2622, line: 1831, column: 4)
!4836 = !DILocation(line: 1835, column: 16, scope: !4455)
!4837 = !DILocation(line: 1835, column: 3, scope: !4455)
!4838 = !DILocation(line: 1836, column: 4, scope: !4566)
!4839 = !DILocation(line: 0, scope: !4566)
!4840 = !DILocation(line: 1836, column: 4, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4566, file: !2622, line: 1836, column: 4)
!4842 = !DILocation(line: 1837, column: 4, scope: !4567)
!4843 = distinct !{!4843, !4837, !4844}
!4844 = !DILocation(line: 1838, column: 3, scope: !4455)
!4845 = !DILocation(line: 1844, column: 1, scope: !4428)
!4846 = distinct !DISubprogram(name: "extract_conversion", scope: !2622, file: !2622, line: 642, type: !4847, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !4849)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!168, !4503, !168}
!4849 = !{!4850, !4851}
!4850 = !DILocalVariable(name: "conv", arg: 1, scope: !4846, file: !2622, line: 642, type: !4503)
!4851 = !DILocalVariable(name: "sp", arg: 2, scope: !4846, file: !2622, line: 643, type: !168)
!4852 = !DILocation(line: 0, scope: !4846)
!4853 = !DILocation(line: 645, column: 10, scope: !4846)
!4854 = !DILocation(line: 653, column: 2, scope: !4846)
!4855 = !DILocation(line: 654, column: 6, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4846, file: !2622, line: 654, column: 6)
!4857 = !DILocation(line: 654, column: 10, scope: !4856)
!4858 = !DILocation(line: 654, column: 6, scope: !4846)
!4859 = !DILocation(line: 655, column: 24, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4856, file: !2622, line: 654, column: 18)
!4861 = !DILocation(line: 655, column: 19, scope: !4860)
!4862 = !DILocation(line: 656, column: 3, scope: !4860)
!4863 = !DILocation(line: 659, column: 7, scope: !4846)
!4864 = !DILocation(line: 660, column: 7, scope: !4846)
!4865 = !DILocation(line: 661, column: 7, scope: !4846)
!4866 = !DILocation(line: 662, column: 7, scope: !4846)
!4867 = !DILocation(line: 663, column: 7, scope: !4846)
!4868 = !DILocation(line: 665, column: 2, scope: !4846)
!4869 = !DILocation(line: 666, column: 1, scope: !4846)
!4870 = distinct !DISubprogram(name: "outs", scope: !2622, file: !2622, line: 1319, type: !4871, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !4873)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{!103, !3417, !102, !168, !168}
!4873 = !{!4874, !4875, !4876, !4877, !4878, !4879}
!4874 = !DILocalVariable(name: "out", arg: 1, scope: !4870, file: !2622, line: 1319, type: !3417)
!4875 = !DILocalVariable(name: "ctx", arg: 2, scope: !4870, file: !2622, line: 1320, type: !102)
!4876 = !DILocalVariable(name: "sp", arg: 3, scope: !4870, file: !2622, line: 1321, type: !168)
!4877 = !DILocalVariable(name: "ep", arg: 4, scope: !4870, file: !2622, line: 1322, type: !168)
!4878 = !DILocalVariable(name: "count", scope: !4870, file: !2622, line: 1324, type: !369)
!4879 = !DILocalVariable(name: "rc", scope: !4880, file: !2622, line: 1327, type: !103)
!4880 = distinct !DILexicalBlock(scope: !4870, file: !2622, line: 1326, column: 45)
!4881 = !DILocation(line: 0, scope: !4870)
!4882 = !DILocation(line: 1326, column: 2, scope: !4870)
!4883 = !DILocation(line: 1324, column: 9, scope: !4870)
!4884 = !DILocation(line: 1326, column: 13, scope: !4870)
!4885 = !DILocation(line: 1326, column: 19, scope: !4870)
!4886 = !DILocation(line: 1327, column: 21, scope: !4880)
!4887 = !DILocation(line: 1326, column: 36, scope: !4870)
!4888 = !DILocation(line: 1326, column: 39, scope: !4870)
!4889 = !DILocation(line: 1327, column: 24, scope: !4880)
!4890 = !DILocation(line: 1327, column: 16, scope: !4880)
!4891 = !DILocation(line: 1327, column: 12, scope: !4880)
!4892 = !DILocation(line: 0, scope: !4880)
!4893 = !DILocation(line: 1329, column: 10, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4880, file: !2622, line: 1329, column: 7)
!4895 = !DILocation(line: 1329, column: 7, scope: !4880)
!4896 = distinct !{!4896, !4882, !4897}
!4897 = !DILocation(line: 1333, column: 2, scope: !4870)
!4898 = !DILocation(line: 1336, column: 1, scope: !4870)
!4899 = distinct !DISubprogram(name: "encode_uint", scope: !2622, file: !2622, line: 788, type: !4900, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !4902)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{!1142, !2644, !4503, !1142, !168}
!4902 = !{!4903, !4904, !4905, !4906, !4907, !4908, !4910, !4911}
!4903 = !DILocalVariable(name: "value", arg: 1, scope: !4899, file: !2622, line: 788, type: !2644)
!4904 = !DILocalVariable(name: "conv", arg: 2, scope: !4899, file: !2622, line: 789, type: !4503)
!4905 = !DILocalVariable(name: "bps", arg: 3, scope: !4899, file: !2622, line: 790, type: !1142)
!4906 = !DILocalVariable(name: "bpe", arg: 4, scope: !4899, file: !2622, line: 791, type: !168)
!4907 = !DILocalVariable(name: "upcase", scope: !4899, file: !2622, line: 793, type: !179)
!4908 = !DILocalVariable(name: "radix", scope: !4899, file: !2622, line: 794, type: !4909)
!4909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4910 = !DILocalVariable(name: "bp", scope: !4899, file: !2622, line: 795, type: !1142)
!4911 = !DILocalVariable(name: "lsv", scope: !4912, file: !2622, line: 798, type: !32)
!4912 = distinct !DILexicalBlock(scope: !4899, file: !2622, line: 797, column: 5)
!4913 = !DILocation(line: 0, scope: !4899)
!4914 = !DILocation(line: 793, column: 35, scope: !4899)
!4915 = !DILocation(line: 793, column: 24, scope: !4899)
!4916 = !DILocation(line: 793, column: 16, scope: !4899)
!4917 = !DILocation(line: 794, column: 29, scope: !4899)
!4918 = !DILocation(line: 795, column: 24, scope: !4899)
!4919 = !DILocation(line: 795, column: 17, scope: !4899)
!4920 = !DILocation(line: 797, column: 2, scope: !4899)
!4921 = !DILocation(line: 802, column: 9, scope: !4912)
!4922 = !DILocation(line: 798, column: 22, scope: !4912)
!4923 = !DILocation(line: 0, scope: !4912)
!4924 = !DILocation(line: 800, column: 16, scope: !4912)
!4925 = !DILocation(line: 800, column: 11, scope: !4912)
!4926 = !DILocation(line: 800, column: 4, scope: !4912)
!4927 = !DILocation(line: 800, column: 9, scope: !4912)
!4928 = !DILocation(line: 803, column: 18, scope: !4899)
!4929 = !DILocation(line: 803, column: 24, scope: !4899)
!4930 = !DILocation(line: 803, column: 2, scope: !4912)
!4931 = distinct !{!4931, !4920, !4932}
!4932 = !DILocation(line: 803, column: 37, scope: !4899)
!4933 = !DILocation(line: 808, column: 12, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4899, file: !2622, line: 808, column: 6)
!4935 = !DILocation(line: 808, column: 6, scope: !4899)
!4936 = !DILocation(line: 809, column: 7, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4934, file: !2622, line: 808, column: 23)
!4938 = !DILocation(line: 813, column: 3, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !2622, line: 811, column: 27)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !2622, line: 811, column: 14)
!4941 = distinct !DILexicalBlock(scope: !4937, file: !2622, line: 809, column: 7)
!4942 = !DILocation(line: 0, scope: !4941)
!4943 = !DILocation(line: 818, column: 2, scope: !4899)
!4944 = distinct !DISubprogram(name: "store_count", scope: !2622, file: !2622, line: 1280, type: !4945, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !4949)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{null, !4947, !102, !103}
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 32)
!4948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4470)
!4949 = !{!4950, !4951, !4952}
!4950 = !DILocalVariable(name: "conv", arg: 1, scope: !4944, file: !2622, line: 1280, type: !4947)
!4951 = !DILocalVariable(name: "dp", arg: 2, scope: !4944, file: !2622, line: 1281, type: !102)
!4952 = !DILocalVariable(name: "count", arg: 3, scope: !4944, file: !2622, line: 1282, type: !103)
!4953 = !DILocation(line: 0, scope: !4944)
!4954 = !DILocation(line: 1284, column: 38, scope: !4944)
!4955 = !DILocation(line: 1284, column: 2, scope: !4944)
!4956 = !DILocation(line: 1286, column: 4, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4944, file: !2622, line: 1284, column: 50)
!4958 = !DILocation(line: 1286, column: 14, scope: !4957)
!4959 = !DILocation(line: 1287, column: 3, scope: !4957)
!4960 = !DILocation(line: 1289, column: 24, scope: !4957)
!4961 = !DILocation(line: 1289, column: 22, scope: !4957)
!4962 = !DILocation(line: 1290, column: 3, scope: !4957)
!4963 = !DILocation(line: 1292, column: 18, scope: !4957)
!4964 = !DILocation(line: 1292, column: 4, scope: !4957)
!4965 = !DILocation(line: 1292, column: 16, scope: !4957)
!4966 = !DILocation(line: 1293, column: 3, scope: !4957)
!4967 = !DILocation(line: 1295, column: 4, scope: !4957)
!4968 = !DILocation(line: 1295, column: 15, scope: !4957)
!4969 = !DILocation(line: 1296, column: 3, scope: !4957)
!4970 = !DILocation(line: 1298, column: 22, scope: !4957)
!4971 = !DILocation(line: 1298, column: 4, scope: !4957)
!4972 = !DILocation(line: 1298, column: 20, scope: !4957)
!4973 = !DILocation(line: 1299, column: 3, scope: !4957)
!4974 = !DILocation(line: 1301, column: 21, scope: !4957)
!4975 = !DILocation(line: 1301, column: 4, scope: !4957)
!4976 = !DILocation(line: 1301, column: 19, scope: !4957)
!4977 = !DILocation(line: 1302, column: 3, scope: !4957)
!4978 = !DILocation(line: 1304, column: 4, scope: !4957)
!4979 = !DILocation(line: 1304, column: 17, scope: !4957)
!4980 = !DILocation(line: 1305, column: 3, scope: !4957)
!4981 = !DILocation(line: 1307, column: 4, scope: !4957)
!4982 = !DILocation(line: 1307, column: 20, scope: !4957)
!4983 = !DILocation(line: 1308, column: 3, scope: !4957)
!4984 = !DILocation(line: 1316, column: 1, scope: !4944)
!4985 = distinct !DISubprogram(name: "isupper", scope: !4986, file: !4986, line: 16, type: !118, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !4987)
!4986 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4987 = !{!4988}
!4988 = !DILocalVariable(name: "a", arg: 1, scope: !4985, file: !4986, line: 16, type: !103)
!4989 = !DILocation(line: 0, scope: !4985)
!4990 = !DILocation(line: 18, column: 29, scope: !4985)
!4991 = !DILocation(line: 18, column: 45, scope: !4985)
!4992 = !DILocation(line: 18, column: 2, scope: !4985)
!4993 = distinct !DISubprogram(name: "conversion_radix", scope: !2622, file: !2622, line: 761, type: !4994, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !4996)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{!369, !108}
!4996 = !{!4997}
!4997 = !DILocalVariable(name: "specifier", arg: 1, scope: !4993, file: !2622, line: 761, type: !108)
!4998 = !DILocation(line: 0, scope: !4993)
!4999 = !DILocation(line: 763, column: 2, scope: !4993)
!5000 = !DILocation(line: 770, column: 3, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4993, file: !2622, line: 763, column: 21)
!5002 = !DILocation(line: 774, column: 3, scope: !5001)
!5003 = !DILocation(line: 0, scope: !5001)
!5004 = !DILocation(line: 776, column: 1, scope: !4993)
!5005 = distinct !DISubprogram(name: "extract_flags", scope: !2622, file: !2622, line: 339, type: !4847, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5006)
!5006 = !{!5007, !5008, !5009}
!5007 = !DILocalVariable(name: "conv", arg: 1, scope: !5005, file: !2622, line: 339, type: !4503)
!5008 = !DILocalVariable(name: "sp", arg: 2, scope: !5005, file: !2622, line: 340, type: !168)
!5009 = !DILocalVariable(name: "loop", scope: !5005, file: !2622, line: 342, type: !179)
!5010 = !DILocation(line: 0, scope: !5005)
!5011 = !DILocation(line: 344, column: 2, scope: !5005)
!5012 = !DILocation(line: 345, column: 11, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5005, file: !2622, line: 344, column: 5)
!5014 = !DILocation(line: 345, column: 3, scope: !5013)
!5015 = !DILocation(line: 351, column: 4, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5013, file: !2622, line: 345, column: 16)
!5017 = !DILocation(line: 354, column: 4, scope: !5016)
!5018 = !DILocation(line: 357, column: 4, scope: !5016)
!5019 = !DILocation(line: 360, column: 4, scope: !5016)
!5020 = !DILocation(line: 0, scope: !5016)
!5021 = !DILocation(line: 370, column: 12, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5005, file: !2622, line: 370, column: 6)
!5023 = !DILocation(line: 370, column: 22, scope: !5022)
!5024 = !DILocation(line: 371, column: 19, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5022, file: !2622, line: 370, column: 42)
!5026 = !DILocation(line: 372, column: 2, scope: !5025)
!5027 = !DILocation(line: 376, column: 2, scope: !5005)
!5028 = distinct !DISubprogram(name: "extract_width", scope: !2622, file: !2622, line: 388, type: !4847, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5029)
!5029 = !{!5030, !5031, !5032, !5033}
!5030 = !DILocalVariable(name: "conv", arg: 1, scope: !5028, file: !2622, line: 388, type: !4503)
!5031 = !DILocalVariable(name: "sp", arg: 2, scope: !5028, file: !2622, line: 389, type: !168)
!5032 = !DILocalVariable(name: "wp", scope: !5028, file: !2622, line: 398, type: !168)
!5033 = !DILocalVariable(name: "width", scope: !5028, file: !2622, line: 399, type: !369)
!5034 = !DILocation(line: 0, scope: !5028)
!5035 = !DILocation(line: 391, column: 8, scope: !5028)
!5036 = !DILocation(line: 391, column: 22, scope: !5028)
!5037 = !DILocation(line: 393, column: 6, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5028, file: !2622, line: 393, column: 6)
!5039 = !DILocation(line: 393, column: 10, scope: !5038)
!5040 = !DILocation(line: 393, column: 6, scope: !5028)
!5041 = !DILocation(line: 394, column: 20, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5038, file: !2622, line: 393, column: 18)
!5043 = !DILocation(line: 395, column: 10, scope: !5042)
!5044 = !DILocation(line: 395, column: 3, scope: !5042)
!5045 = !DILocation(line: 399, column: 17, scope: !5028)
!5046 = !DILocation(line: 401, column: 6, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5028, file: !2622, line: 401, column: 6)
!5048 = !DILocation(line: 401, column: 9, scope: !5047)
!5049 = !DILocation(line: 401, column: 6, scope: !5028)
!5050 = !DILocation(line: 402, column: 23, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5047, file: !2622, line: 401, column: 16)
!5052 = !DILocation(line: 403, column: 9, scope: !5051)
!5053 = !DILocation(line: 403, column: 21, scope: !5051)
!5054 = !DILocation(line: 405, column: 11, scope: !5051)
!5055 = !DILocation(line: 404, column: 21, scope: !5051)
!5056 = !DILocation(line: 406, column: 2, scope: !5051)
!5057 = !DILocation(line: 409, column: 1, scope: !5028)
!5058 = distinct !DISubprogram(name: "extract_prec", scope: !2622, file: !2622, line: 420, type: !4847, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5059)
!5059 = !{!5060, !5061, !5062}
!5060 = !DILocalVariable(name: "conv", arg: 1, scope: !5058, file: !2622, line: 420, type: !4503)
!5061 = !DILocalVariable(name: "sp", arg: 2, scope: !5058, file: !2622, line: 421, type: !168)
!5062 = !DILocalVariable(name: "prec", scope: !5058, file: !2622, line: 435, type: !369)
!5063 = !DILocation(line: 0, scope: !5058)
!5064 = !DILocation(line: 423, column: 24, scope: !5058)
!5065 = !DILocation(line: 423, column: 28, scope: !5058)
!5066 = !DILocation(line: 423, column: 8, scope: !5058)
!5067 = !DILocation(line: 423, column: 21, scope: !5058)
!5068 = !DILocation(line: 425, column: 6, scope: !5058)
!5069 = !DILocation(line: 428, column: 2, scope: !5058)
!5070 = !DILocation(line: 430, column: 6, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5058, file: !2622, line: 430, column: 6)
!5072 = !DILocation(line: 430, column: 10, scope: !5071)
!5073 = !DILocation(line: 430, column: 6, scope: !5058)
!5074 = !DILocation(line: 431, column: 19, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5071, file: !2622, line: 430, column: 18)
!5076 = !DILocation(line: 432, column: 10, scope: !5075)
!5077 = !DILocation(line: 432, column: 3, scope: !5075)
!5078 = !DILocation(line: 435, column: 16, scope: !5058)
!5079 = !DILocation(line: 437, column: 8, scope: !5058)
!5080 = !DILocation(line: 437, column: 19, scope: !5058)
!5081 = !DILocation(line: 439, column: 10, scope: !5058)
!5082 = !DILocation(line: 438, column: 20, scope: !5058)
!5083 = !DILocation(line: 441, column: 9, scope: !5058)
!5084 = !DILocation(line: 442, column: 1, scope: !5058)
!5085 = distinct !DISubprogram(name: "extract_length", scope: !2622, file: !2622, line: 453, type: !4847, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5086)
!5086 = !{!5087, !5088}
!5087 = !DILocalVariable(name: "conv", arg: 1, scope: !5085, file: !2622, line: 453, type: !4503)
!5088 = !DILocalVariable(name: "sp", arg: 2, scope: !5085, file: !2622, line: 454, type: !168)
!5089 = !DILocation(line: 0, scope: !5085)
!5090 = !DILocation(line: 456, column: 10, scope: !5085)
!5091 = !DILocation(line: 456, column: 2, scope: !5085)
!5092 = !DILocation(line: 458, column: 8, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !2622, line: 458, column: 7)
!5094 = distinct !DILexicalBlock(scope: !5085, file: !2622, line: 456, column: 15)
!5095 = !DILocation(line: 458, column: 7, scope: !5093)
!5096 = !DILocation(line: 458, column: 13, scope: !5093)
!5097 = !DILocation(line: 0, scope: !5093)
!5098 = !DILocation(line: 458, column: 7, scope: !5094)
!5099 = !DILocation(line: 459, column: 21, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5093, file: !2622, line: 458, column: 21)
!5101 = !DILocation(line: 460, column: 4, scope: !5100)
!5102 = !DILocation(line: 461, column: 3, scope: !5100)
!5103 = !DILocation(line: 462, column: 21, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5093, file: !2622, line: 461, column: 10)
!5105 = !DILocation(line: 466, column: 8, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5094, file: !2622, line: 466, column: 7)
!5107 = !DILocation(line: 466, column: 7, scope: !5106)
!5108 = !DILocation(line: 466, column: 13, scope: !5106)
!5109 = !DILocation(line: 0, scope: !5106)
!5110 = !DILocation(line: 466, column: 7, scope: !5094)
!5111 = !DILocation(line: 467, column: 21, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5106, file: !2622, line: 466, column: 21)
!5113 = !DILocation(line: 468, column: 4, scope: !5112)
!5114 = !DILocation(line: 469, column: 3, scope: !5112)
!5115 = !DILocation(line: 470, column: 21, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5106, file: !2622, line: 469, column: 10)
!5117 = !DILocation(line: 474, column: 9, scope: !5094)
!5118 = !DILocation(line: 474, column: 20, scope: !5094)
!5119 = !DILocation(line: 475, column: 3, scope: !5094)
!5120 = !DILocation(line: 476, column: 3, scope: !5094)
!5121 = !DILocation(line: 478, column: 9, scope: !5094)
!5122 = !DILocation(line: 478, column: 20, scope: !5094)
!5123 = !DILocation(line: 479, column: 3, scope: !5094)
!5124 = !DILocation(line: 480, column: 3, scope: !5094)
!5125 = !DILocation(line: 482, column: 9, scope: !5094)
!5126 = !DILocation(line: 482, column: 20, scope: !5094)
!5127 = !DILocation(line: 483, column: 3, scope: !5094)
!5128 = !DILocation(line: 484, column: 3, scope: !5094)
!5129 = !DILocation(line: 486, column: 9, scope: !5094)
!5130 = !DILocation(line: 486, column: 20, scope: !5094)
!5131 = !DILocation(line: 487, column: 3, scope: !5094)
!5132 = !DILocation(line: 492, column: 21, scope: !5094)
!5133 = !DILocation(line: 493, column: 3, scope: !5094)
!5134 = !DILocation(line: 495, column: 9, scope: !5094)
!5135 = !DILocation(line: 495, column: 20, scope: !5094)
!5136 = !DILocation(line: 496, column: 3, scope: !5094)
!5137 = !DILocation(line: 498, column: 2, scope: !5085)
!5138 = distinct !DISubprogram(name: "extract_specifier", scope: !2622, file: !2622, line: 513, type: !4847, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5139)
!5139 = !{!5140, !5141, !5142, !5143}
!5140 = !DILocalVariable(name: "conv", arg: 1, scope: !5138, file: !2622, line: 513, type: !4503)
!5141 = !DILocalVariable(name: "sp", arg: 2, scope: !5138, file: !2622, line: 514, type: !168)
!5142 = !DILocalVariable(name: "unsupported", scope: !5138, file: !2622, line: 516, type: !179)
!5143 = !DILabel(scope: !5144, name: "int_conv", file: !2622, line: 526)
!5144 = distinct !DILexicalBlock(scope: !5138, file: !2622, line: 520, column: 27)
!5145 = !DILocation(line: 0, scope: !5138)
!5146 = !DILocation(line: 518, column: 20, scope: !5138)
!5147 = !DILocation(line: 518, column: 8, scope: !5138)
!5148 = !DILocation(line: 518, column: 18, scope: !5138)
!5149 = !DILocation(line: 520, column: 2, scope: !5138)
!5150 = !DILocation(line: 525, column: 3, scope: !5144)
!5151 = !DILocation(line: 0, scope: !5144)
!5152 = !DILocation(line: 526, column: 1, scope: !5144)
!5153 = !DILocation(line: 528, column: 24, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5144, file: !2622, line: 528, column: 7)
!5155 = !DILocation(line: 528, column: 7, scope: !5144)
!5156 = !DILocation(line: 535, column: 23, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5144, file: !2622, line: 535, column: 7)
!5158 = !DILocation(line: 535, column: 7, scope: !5144)
!5159 = !DILocation(line: 536, column: 36, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5157, file: !2622, line: 535, column: 31)
!5161 = !DILocation(line: 537, column: 3, scope: !5160)
!5162 = !DILocation(line: 570, column: 9, scope: !5144)
!5163 = !DILocation(line: 570, column: 23, scope: !5144)
!5164 = !DILocation(line: 575, column: 4, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !2622, line: 573, column: 48)
!5166 = distinct !DILexicalBlock(scope: !5144, file: !2622, line: 573, column: 7)
!5167 = !DILocation(line: 603, column: 9, scope: !5144)
!5168 = !DILocation(line: 603, column: 23, scope: !5144)
!5169 = !DILocation(line: 605, column: 24, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5144, file: !2622, line: 605, column: 7)
!5171 = !DILocation(line: 605, column: 7, scope: !5144)
!5172 = !DILocation(line: 612, column: 9, scope: !5144)
!5173 = !DILocation(line: 612, column: 23, scope: !5144)
!5174 = !DILocation(line: 619, column: 24, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5144, file: !2622, line: 619, column: 7)
!5176 = !DILocation(line: 619, column: 7, scope: !5144)
!5177 = !DILocation(line: 625, column: 9, scope: !5144)
!5178 = !DILocation(line: 625, column: 17, scope: !5144)
!5179 = !DILocation(line: 626, column: 3, scope: !5144)
!5180 = !DILocation(line: 629, column: 20, scope: !5138)
!5181 = !DILocation(line: 629, column: 8, scope: !5138)
!5182 = !DILocation(line: 518, column: 23, scope: !5138)
!5183 = !DILocation(line: 631, column: 2, scope: !5138)
!5184 = distinct !DISubprogram(name: "extract_decimal", scope: !2622, file: !2622, line: 318, type: !5185, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5188)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!369, !5187}
!5187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!5188 = !{!5189, !5190, !5191}
!5189 = !DILocalVariable(name: "str", arg: 1, scope: !5184, file: !2622, line: 318, type: !5187)
!5190 = !DILocalVariable(name: "sp", scope: !5184, file: !2622, line: 320, type: !168)
!5191 = !DILocalVariable(name: "val", scope: !5184, file: !2622, line: 321, type: !369)
!5192 = !DILocation(line: 0, scope: !5184)
!5193 = !DILocation(line: 320, column: 19, scope: !5184)
!5194 = !DILocation(line: 323, column: 37, scope: !5184)
!5195 = !DILocation(line: 323, column: 17, scope: !5184)
!5196 = !DILocation(line: 323, column: 9, scope: !5184)
!5197 = !DILocation(line: 323, column: 2, scope: !5184)
!5198 = !DILocation(line: 324, column: 13, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5184, file: !2622, line: 323, column: 43)
!5200 = !DILocation(line: 324, column: 24, scope: !5199)
!5201 = !DILocation(line: 324, column: 19, scope: !5199)
!5202 = !DILocation(line: 324, column: 27, scope: !5199)
!5203 = distinct !{!5203, !5197, !5204}
!5204 = !DILocation(line: 325, column: 2, scope: !5184)
!5205 = !DILocation(line: 326, column: 7, scope: !5184)
!5206 = !DILocation(line: 327, column: 2, scope: !5184)
!5207 = distinct !DISubprogram(name: "isdigit", scope: !4986, file: !4986, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5208)
!5208 = !{!5209}
!5209 = !DILocalVariable(name: "a", arg: 1, scope: !5207, file: !4986, line: 43, type: !103)
!5210 = !DILocation(line: 0, scope: !5207)
!5211 = !DILocation(line: 45, column: 29, scope: !5207)
!5212 = !DILocation(line: 45, column: 45, scope: !5207)
!5213 = !DILocation(line: 45, column: 2, scope: !5207)
!5214 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5215, file: !5215, line: 9, type: !3229, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2655, retainedNodes: !486)
!5215 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!5216 = !DILocation(line: 11, column: 1, scope: !5214)
!5217 = !{i64 2147561115, i64 2147561158, i64 2147561198}
!5218 = !DILocation(line: 12, column: 1, scope: !5214)
!5219 = !{i64 2147565342, i64 2147565385, i64 2147565425}
!5220 = !DILocation(line: 13, column: 1, scope: !5214)
!5221 = !{i64 2147565551, i64 2147565594, i64 2147565634}
!5222 = !DILocation(line: 14, column: 1, scope: !5214)
!5223 = !{i64 2147565768, i64 2147565811, i64 2147565851}
!5224 = !DILocation(line: 15, column: 1, scope: !5214)
!5225 = !{i64 2147565937, i64 2147565980, i64 2147566020}
!5226 = !DILocation(line: 16, column: 1, scope: !5214)
!5227 = !{i64 2147566100, i64 2147566143, i64 2147566183}
!5228 = !DILocation(line: 17, column: 1, scope: !5214)
!5229 = !{i64 2147566284, i64 2147566327, i64 2147566367}
!5230 = !DILocation(line: 18, column: 1, scope: !5214)
!5231 = !{i64 2147566463, i64 2147566506, i64 2147566546}
!5232 = !DILocation(line: 19, column: 1, scope: !5214)
!5233 = !{i64 2147566705, i64 2147566748, i64 2147566788}
!5234 = !DILocation(line: 20, column: 1, scope: !5214)
!5235 = !{i64 2147566940, i64 2147566983, i64 2147567023}
!5236 = !DILocation(line: 21, column: 1, scope: !5214)
!5237 = !{i64 2147567126, i64 2147567169, i64 2147567209}
!5238 = !DILocation(line: 22, column: 1, scope: !5214)
!5239 = !{i64 2147567342, i64 2147567385, i64 2147567425}
!5240 = !DILocation(line: 23, column: 1, scope: !5214)
!5241 = !{i64 2147567545, i64 2147567588, i64 2147567628}
!5242 = !DILocation(line: 24, column: 1, scope: !5214)
!5243 = !{i64 2147567748, i64 2147567791, i64 2147567831}
!5244 = !DILocation(line: 25, column: 1, scope: !5214)
!5245 = !{i64 2147567923, i64 2147567966, i64 2147568006}
!5246 = !DILocation(line: 26, column: 1, scope: !5214)
!5247 = !{i64 2147568131, i64 2147568174, i64 2147568214}
!5248 = !DILocation(line: 27, column: 1, scope: !5214)
!5249 = !{i64 2147568335, i64 2147568378, i64 2147568418}
!5250 = !DILocation(line: 28, column: 1, scope: !5214)
!5251 = !{i64 2147568528, i64 2147568571, i64 2147568611}
!5252 = !DILocation(line: 29, column: 1, scope: !5214)
!5253 = !{i64 2147568730, i64 2147568773, i64 2147568813}
!5254 = !DILocation(line: 30, column: 1, scope: !5214)
!5255 = !{i64 2147568957, i64 2147569000, i64 2147569040}
!5256 = !DILocation(line: 31, column: 1, scope: !5214)
!5257 = !{i64 2147569159, i64 2147569202, i64 2147569242}
!5258 = !DILocation(line: 32, column: 1, scope: !5214)
!5259 = !{i64 2147569374, i64 2147569417, i64 2147569457}
!5260 = !DILocation(line: 33, column: 1, scope: !5214)
!5261 = !{i64 2147569546, i64 2147569589, i64 2147569629}
!5262 = !DILocation(line: 34, column: 1, scope: !5214)
!5263 = !{i64 2147569748, i64 2147569791, i64 2147569831}
!5264 = !DILocation(line: 35, column: 1, scope: !5214)
!5265 = !{i64 2147569974, i64 2147570017, i64 2147570057}
!5266 = !DILocation(line: 36, column: 1, scope: !5214)
!5267 = !{i64 2147570173, i64 2147570216, i64 2147570256}
!5268 = !DILocation(line: 37, column: 1, scope: !5214)
!5269 = !{i64 2147570348, i64 2147570391, i64 2147570431}
!5270 = !DILocation(line: 38, column: 1, scope: !5214)
!5271 = !{i64 2147570601, i64 2147570644, i64 2147570684}
!5272 = !DILocation(line: 39, column: 1, scope: !5214)
!5273 = !{i64 2147570839, i64 2147570882, i64 2147570922}
!5274 = !DILocation(line: 40, column: 1, scope: !5214)
!5275 = !{i64 2147571074, i64 2147571117, i64 2147571157}
!5276 = !DILocation(line: 41, column: 1, scope: !5214)
!5277 = !{i64 2147571306, i64 2147571349, i64 2147571389}
!5278 = !DILocation(line: 42, column: 1, scope: !5214)
!5279 = !{i64 2147571532, i64 2147571575, i64 2147571615}
!5280 = !DILocation(line: 43, column: 1, scope: !5214)
!5281 = !{i64 2147571791, i64 2147571834, i64 2147571874}
!5282 = !DILocation(line: 44, column: 1, scope: !5214)
!5283 = !{i64 2147572017, i64 2147572060, i64 2147572100}
!5284 = !DILocation(line: 45, column: 1, scope: !5214)
!5285 = !{i64 2147572258, i64 2147572301, i64 2147572341}
!5286 = !DILocation(line: 46, column: 1, scope: !5214)
!5287 = !{i64 2147572502, i64 2147572545, i64 2147572585}
!5288 = !DILocation(line: 47, column: 1, scope: !5214)
!5289 = !{i64 2147572743, i64 2147572786, i64 2147572826}
!5290 = !DILocation(line: 48, column: 1, scope: !5214)
!5291 = !{i64 2147572978, i64 2147573021, i64 2147573061}
!5292 = !DILocation(line: 49, column: 1, scope: !5214)
!5293 = !{i64 2147573204, i64 2147573247, i64 2147573287}
!5294 = !DILocation(line: 50, column: 1, scope: !5214)
!5295 = !{i64 2147573430, i64 2147573473, i64 2147573513}
!5296 = !DILocation(line: 51, column: 1, scope: !5214)
!5297 = !{i64 2147573674, i64 2147573717, i64 2147573757}
!5298 = !DILocation(line: 52, column: 1, scope: !5214)
!5299 = !{i64 2147573912, i64 2147573955, i64 2147573995}
!5300 = !DILocation(line: 53, column: 1, scope: !5214)
!5301 = !{i64 2147578247, i64 2147578290, i64 2147578330}
!5302 = !DILocation(line: 54, column: 1, scope: !5214)
!5303 = !{i64 2147578485, i64 2147578528, i64 2147578568}
!5304 = !DILocation(line: 55, column: 1, scope: !5214)
!5305 = !{i64 2147578729, i64 2147578772, i64 2147578812}
!5306 = !DILocation(line: 56, column: 1, scope: !5214)
!5307 = !{i64 2147578979, i64 2147579022, i64 2147579062}
!5308 = !DILocation(line: 57, column: 1, scope: !5214)
!5309 = !{i64 2147579226, i64 2147579269, i64 2147579309}
!5310 = !DILocation(line: 58, column: 1, scope: !5214)
!5311 = !{i64 2147579461, i64 2147579504, i64 2147579544}
!5312 = !DILocation(line: 59, column: 1, scope: !5214)
!5313 = !{i64 2147579696, i64 2147579739, i64 2147579779}
!5314 = !DILocation(line: 60, column: 1, scope: !5214)
!5315 = !{i64 2147579931, i64 2147579974, i64 2147580014}
!5316 = !DILocation(line: 61, column: 1, scope: !5214)
!5317 = !{i64 2147580169, i64 2147580212, i64 2147580252}
!5318 = !DILocation(line: 62, column: 1, scope: !5214)
!5319 = !{i64 2147580410, i64 2147580453, i64 2147580493}
!5320 = !DILocation(line: 63, column: 1, scope: !5214)
!5321 = !{i64 2147580669, i64 2147580712, i64 2147580752}
!5322 = !DILocation(line: 64, column: 1, scope: !5214)
!5323 = !{i64 2147580949, i64 2147580992, i64 2147581032}
!5324 = !DILocation(line: 65, column: 1, scope: !5214)
!5325 = !{i64 2147581178, i64 2147581221, i64 2147581261}
!5326 = !DILocation(line: 66, column: 1, scope: !5214)
!5327 = !{i64 2147581386, i64 2147581429, i64 2147581469}
!5328 = !DILocation(line: 67, column: 1, scope: !5214)
!5329 = !{i64 2147581597, i64 2147581640, i64 2147581680}
!5330 = !DILocation(line: 68, column: 1, scope: !5214)
!5331 = !{i64 2147581832, i64 2147581875, i64 2147581915}
!5332 = !DILocation(line: 69, column: 1, scope: !5214)
!5333 = !{i64 2147582061, i64 2147582104, i64 2147582144}
!5334 = !DILocation(line: 70, column: 1, scope: !5214)
!5335 = !{i64 2147582299, i64 2147582342, i64 2147582382}
!5336 = !DILocation(line: 71, column: 1, scope: !5214)
!5337 = !{i64 2147582531, i64 2147582574, i64 2147582614}
!5338 = !DILocation(line: 72, column: 1, scope: !5214)
!5339 = !{i64 2147582757, i64 2147582800, i64 2147582840}
!5340 = !DILocation(line: 73, column: 1, scope: !5214)
!5341 = !{i64 2147582974, i64 2147583017, i64 2147583057}
!5342 = !DILocation(line: 74, column: 1, scope: !5214)
!5343 = !{i64 2147583206, i64 2147583249, i64 2147583289}
!5344 = !DILocation(line: 75, column: 1, scope: !5214)
!5345 = !{i64 2147583432, i64 2147583475, i64 2147583515}
!5346 = !DILocation(line: 76, column: 1, scope: !5214)
!5347 = !{i64 2147583646, i64 2147583689, i64 2147583729}
!5348 = !DILocation(line: 77, column: 1, scope: !5214)
!5349 = !{i64 2147583866, i64 2147583909, i64 2147583949}
!5350 = !DILocation(line: 78, column: 1, scope: !5214)
!5351 = !{i64 2147584098, i64 2147584141, i64 2147584181}
!5352 = !DILocation(line: 79, column: 1, scope: !5214)
!5353 = !{i64 2147584306, i64 2147584349, i64 2147584389}
!5354 = !DILocation(line: 80, column: 1, scope: !5214)
!5355 = !{i64 2147584511, i64 2147584554, i64 2147584594}
!5356 = !DILocation(line: 81, column: 1, scope: !5214)
!5357 = !{i64 2147584728, i64 2147584771, i64 2147584811}
!5358 = !DILocation(line: 82, column: 1, scope: !5214)
!5359 = !{i64 2147584942, i64 2147584985, i64 2147585025}
!5360 = !DILocation(line: 83, column: 1, scope: !5214)
!5361 = !{i64 2147585168, i64 2147585211, i64 2147585251}
!5362 = !DILocation(line: 84, column: 1, scope: !5214)
!5363 = !{i64 2147585388, i64 2147585431, i64 2147585471}
!5364 = !DILocation(line: 85, column: 1, scope: !5214)
!5365 = !{i64 2147585593, i64 2147585636, i64 2147585676}
!5366 = !DILocation(line: 86, column: 1, scope: !5214)
!5367 = !{i64 2147585825, i64 2147585868, i64 2147585908}
!5368 = !DILocation(line: 87, column: 1, scope: !5214)
!5369 = !{i64 2147586060, i64 2147586103, i64 2147586143}
!5370 = !DILocation(line: 88, column: 1, scope: !5214)
!5371 = !{i64 2147590371, i64 2147590414, i64 2147590454}
!5372 = !DILocation(line: 89, column: 1, scope: !5214)
!5373 = !{i64 2147590621, i64 2147590664, i64 2147590704}
!5374 = !DILocation(line: 90, column: 1, scope: !5214)
!5375 = !{i64 2147590859, i64 2147590902, i64 2147590942}
!5376 = !DILocation(line: 91, column: 1, scope: !5214)
!5377 = !{i64 2147591070, i64 2147591113, i64 2147591153}
!5378 = !DILocation(line: 92, column: 1, scope: !5214)
!5379 = !{i64 2147591287, i64 2147591330, i64 2147591370}
!5380 = !DILocation(line: 93, column: 1, scope: !5214)
!5381 = !{i64 2147591483, i64 2147591526, i64 2147591566}
!5382 = !DILocation(line: 94, column: 1, scope: !5214)
!5383 = !{i64 2147591685, i64 2147591728, i64 2147591768}
!5384 = !DILocation(line: 95, column: 1, scope: !5214)
!5385 = !{i64 2147591878, i64 2147591921, i64 2147591961}
!5386 = !DILocation(line: 96, column: 1, scope: !5214)
!5387 = !{i64 2147592086, i64 2147592129, i64 2147592169}
!5388 = !DILocation(line: 97, column: 1, scope: !5214)
!5389 = !{i64 2147592282, i64 2147592325, i64 2147592365}
!5390 = !DILocation(line: 98, column: 1, scope: !5214)
!5391 = !{i64 2147592487, i64 2147592530, i64 2147592570}
!5392 = !DILocation(line: 99, column: 1, scope: !5214)
!5393 = !{i64 2147592698, i64 2147592741, i64 2147592781}
!5394 = !DILocation(line: 100, column: 1, scope: !5214)
!5395 = !{i64 2147592897, i64 2147592940, i64 2147592980}
!5396 = !DILocation(line: 101, column: 1, scope: !5214)
!5397 = !{i64 2147593072, i64 2147593115, i64 2147593155}
!5398 = !DILocation(line: 102, column: 1, scope: !5214)
!5399 = !{i64 2147593256, i64 2147593299, i64 2147593339}
!5400 = !DILocation(line: 103, column: 1, scope: !5214)
!5401 = !{i64 2147593458, i64 2147593501, i64 2147593541}
!5402 = !DILocation(line: 104, column: 1, scope: !5214)
!5403 = !{i64 2147593660, i64 2147593703, i64 2147593743}
!5404 = !DILocation(line: 105, column: 1, scope: !5214)
!5405 = !{i64 2147593826, i64 2147593869, i64 2147593909}
!5406 = !DILocation(line: 106, column: 1, scope: !5214)
!5407 = !{i64 2147594010, i64 2147594053, i64 2147594093}
!5408 = !DILocation(line: 107, column: 1, scope: !5214)
!5409 = !{i64 2147594200, i64 2147594243, i64 2147594283}
!5410 = !DILocation(line: 108, column: 1, scope: !5214)
!5411 = !{i64 2147594384, i64 2147594427, i64 2147594467}
!5412 = !DILocation(line: 109, column: 1, scope: !5214)
!5413 = !{i64 2147594598, i64 2147594641, i64 2147594681}
!5414 = !DILocation(line: 110, column: 1, scope: !5214)
!5415 = !{i64 2147594809, i64 2147594852, i64 2147594892}
!5416 = !DILocation(line: 111, column: 1, scope: !5214)
!5417 = !{i64 2147595032, i64 2147595075, i64 2147595115}
!5418 = !DILocation(line: 112, column: 1, scope: !5214)
!5419 = !{i64 2147595216, i64 2147595259, i64 2147595299}
!5420 = !DILocation(line: 113, column: 1, scope: !5214)
!5421 = !{i64 2147595430, i64 2147595473, i64 2147595513}
!5422 = !DILocation(line: 114, column: 1, scope: !5214)
!5423 = !{i64 2147595596, i64 2147595639, i64 2147595679}
!5424 = !DILocation(line: 115, column: 1, scope: !5214)
!5425 = !{i64 2147595777, i64 2147595820, i64 2147595860}
!5426 = !DILocation(line: 116, column: 1, scope: !5214)
!5427 = !{i64 2147595970, i64 2147596013, i64 2147596053}
!5428 = !DILocation(line: 117, column: 1, scope: !5214)
!5429 = !{i64 2147596196, i64 2147596239, i64 2147596279}
!5430 = !DILocation(line: 118, column: 1, scope: !5214)
!5431 = !{i64 2147596410, i64 2147596453, i64 2147596493}
!5432 = !DILocation(line: 119, column: 1, scope: !5214)
!5433 = !{i64 2147596636, i64 2147596679, i64 2147596719}
!5434 = !DILocation(line: 120, column: 1, scope: !5214)
!5435 = !{i64 2147596853, i64 2147596896, i64 2147596936}
!5436 = !DILocation(line: 121, column: 1, scope: !5214)
!5437 = !{i64 2147597130, i64 2147597173, i64 2147597213}
!5438 = !DILocation(line: 122, column: 1, scope: !5214)
!5439 = !{i64 2147597356, i64 2147597399, i64 2147597439}
!5440 = !DILocation(line: 123, column: 1, scope: !5214)
!5441 = !{i64 2147597552, i64 2147597595, i64 2147597635}
!5442 = !DILocation(line: 124, column: 1, scope: !5214)
!5443 = !{i64 2147597817, i64 2147597860, i64 2147597900}
!5444 = !DILocation(line: 125, column: 1, scope: !5214)
!5445 = !{i64 2147598031, i64 2147598074, i64 2147598114}
!5446 = !DILocation(line: 126, column: 1, scope: !5214)
!5447 = !{i64 2147598206, i64 2147598249, i64 2147598289}
!5448 = !DILocation(line: 127, column: 1, scope: !5214)
!5449 = !{i64 2147598460, i64 2147598503, i64 2147598543}
!5450 = !DILocation(line: 128, column: 1, scope: !5214)
!5451 = !{i64 2147598659, i64 2147598702, i64 2147598742}
!5452 = !DILocation(line: 129, column: 1, scope: !5214)
!5453 = !{i64 2147598901, i64 2147598944, i64 2147598984}
!5454 = !DILocation(line: 130, column: 1, scope: !5214)
!5455 = !{i64 2147599064, i64 2147599107, i64 2147599147}
!5456 = !DILocation(line: 131, column: 1, scope: !5214)
!5457 = !{i64 2147599251, i64 2147599294, i64 2147599334}
!5458 = !DILocation(line: 132, column: 1, scope: !5214)
!5459 = !{i64 2147599444, i64 2147599487, i64 2147599527}
!5460 = !DILocation(line: 133, column: 1, scope: !5214)
!5461 = !{i64 2147603687, i64 2147603730, i64 2147603770}
!5462 = !DILocation(line: 134, column: 1, scope: !5214)
!5463 = !{i64 2147603901, i64 2147603944, i64 2147603984}
!5464 = !DILocation(line: 135, column: 1, scope: !5214)
!5465 = !{i64 2147604112, i64 2147604155, i64 2147604195}
!5466 = !DILocation(line: 136, column: 1, scope: !5214)
!5467 = !{i64 2147604332, i64 2147604375, i64 2147604415}
!5468 = !DILocation(line: 137, column: 1, scope: !5214)
!5469 = !{i64 2147604539, i64 2147604582, i64 2147604622}
!5470 = !DILocation(line: 138, column: 1, scope: !5214)
!5471 = !{i64 2147604812, i64 2147604855, i64 2147604895}
!5472 = !DILocation(line: 139, column: 1, scope: !5214)
!5473 = !{i64 2147605060, i64 2147605103, i64 2147605143}
!5474 = !DILocation(line: 140, column: 1, scope: !5214)
!5475 = !{i64 2147605259, i64 2147605302, i64 2147605342}
!5476 = !DILocation(line: 141, column: 1, scope: !5214)
!5477 = !{i64 2147605494, i64 2147605537, i64 2147605577}
!5478 = !DILocation(line: 142, column: 1, scope: !5214)
!5479 = !{i64 2147605744, i64 2147605787, i64 2147605827}
!5480 = !DILocation(line: 143, column: 1, scope: !5214)
!5481 = !{i64 2147605946, i64 2147605989, i64 2147606029}
!5482 = !DILocation(line: 144, column: 1, scope: !5214)
!5483 = !{i64 2147606169, i64 2147606212, i64 2147606252}
!5484 = !DILocation(line: 145, column: 1, scope: !5214)
!5485 = !{i64 2147606383, i64 2147606426, i64 2147606466}
!5486 = !DILocation(line: 146, column: 1, scope: !5214)
!5487 = !{i64 2147606627, i64 2147606670, i64 2147606710}
!5488 = !DILocation(line: 147, column: 1, scope: !5214)
!5489 = !{i64 2147606856, i64 2147606899, i64 2147606939}
!5490 = !DILocation(line: 148, column: 1, scope: !5214)
!5491 = !{i64 2147607085, i64 2147607128, i64 2147607168}
!5492 = !DILocation(line: 149, column: 1, scope: !5214)
!5493 = !{i64 2147607293, i64 2147607336, i64 2147607376}
!5494 = !DILocation(line: 150, column: 1, scope: !5214)
!5495 = !{i64 2147607531, i64 2147607574, i64 2147607614}
!5496 = !DILocation(line: 151, column: 1, scope: !5214)
!5497 = !{i64 2147607757, i64 2147607800, i64 2147607840}
!5498 = !DILocation(line: 152, column: 1, scope: !5214)
!5499 = !{i64 2147608016, i64 2147608059, i64 2147608099}
!5500 = !DILocation(line: 153, column: 1, scope: !5214)
!5501 = !{i64 2147608236, i64 2147608279, i64 2147608319}
!5502 = !DILocation(line: 154, column: 1, scope: !5214)
!5503 = !{i64 2147608468, i64 2147608511, i64 2147608551}
!5504 = !DILocation(line: 155, column: 1, scope: !5214)
!5505 = !{i64 2147608709, i64 2147608752, i64 2147608792}
!5506 = !DILocation(line: 156, column: 1, scope: !5214)
!5507 = !{i64 2147608950, i64 2147608993, i64 2147609033}
!5508 = !DILocation(line: 157, column: 1, scope: !5214)
!5509 = !{i64 2147609173, i64 2147609216, i64 2147609256}
!5510 = !DILocation(line: 158, column: 1, scope: !5214)
!5511 = !{i64 2147609390, i64 2147609433, i64 2147609473}
!5512 = !DILocation(line: 159, column: 1, scope: !5214)
!5513 = !{i64 2147609631, i64 2147609674, i64 2147609714}
!5514 = !DILocation(line: 160, column: 1, scope: !5214)
!5515 = !{i64 2147609818, i64 2147609861, i64 2147609901}
!5516 = !DILocation(line: 161, column: 1, scope: !5214)
!5517 = !{i64 2147609981, i64 2147610024, i64 2147610064}
!5518 = !DILocation(line: 162, column: 1, scope: !5214)
!5519 = !{i64 2147610240, i64 2147610283, i64 2147610323}
!5520 = !DILocation(line: 163, column: 1, scope: !5214)
!5521 = !{i64 2147610463, i64 2147610506, i64 2147610546}
!5522 = !DILocation(line: 164, column: 1, scope: !5214)
!5523 = !{i64 2147610692, i64 2147610735, i64 2147610775}
!5524 = !DILocation(line: 165, column: 1, scope: !5214)
!5525 = !{i64 2147610888, i64 2147610931, i64 2147610971}
!5526 = !DILocation(line: 166, column: 1, scope: !5214)
!5527 = !{i64 2147611100, i64 2147611143, i64 2147611183}
!5528 = !DILocation(line: 167, column: 1, scope: !5214)
!5529 = !{i64 2147611321, i64 2147611364, i64 2147611404}
!5530 = !DILocation(line: 168, column: 1, scope: !5214)
!5531 = !{i64 2147611535, i64 2147611578, i64 2147611618}
!5532 = !DILocation(line: 169, column: 1, scope: !5214)
!5533 = !{i64 2147611725, i64 2147611768, i64 2147611808}
!5534 = !DILocation(line: 170, column: 1, scope: !5214)
!5535 = !{i64 2147611924, i64 2147611967, i64 2147612007}
!5536 = !DILocation(line: 171, column: 1, scope: !5214)
!5537 = !{i64 2147616190, i64 2147616233, i64 2147616273}
!5538 = !DILocation(line: 172, column: 1, scope: !5214)
!5539 = !{i64 2147616410, i64 2147616453, i64 2147616493}
!5540 = !DILocation(line: 173, column: 1, scope: !5214)
!5541 = !{i64 2147616611, i64 2147616654, i64 2147616694}
!5542 = !DILocation(line: 174, column: 1, scope: !5214)
!5543 = !{i64 2147616810, i64 2147616853, i64 2147616893}
!5544 = !DILocation(line: 175, column: 1, scope: !5214)
!5545 = !{i64 2147617015, i64 2147617058, i64 2147617098}
!5546 = !DILocation(line: 176, column: 1, scope: !5214)
!5547 = !{i64 2147617184, i64 2147617227, i64 2147617267}
!5548 = !DILocation(line: 177, column: 1, scope: !5214)
!5549 = !{i64 2147617368, i64 2147617411, i64 2147617451}
!5550 = !DILocation(line: 178, column: 1, scope: !5214)
!5551 = !{i64 2147617552, i64 2147617595, i64 2147617635}
!5552 = !DILocation(line: 179, column: 1, scope: !5214)
!5553 = !{i64 2147617739, i64 2147617782, i64 2147617822}
!5554 = !DILocation(line: 180, column: 1, scope: !5214)
!5555 = !{i64 2147617923, i64 2147617966, i64 2147618006}
!5556 = !DILocation(line: 181, column: 1, scope: !5214)
!5557 = !{i64 2147618161, i64 2147618204, i64 2147618244}
!5558 = !DILocation(line: 182, column: 1, scope: !5214)
!5559 = !{i64 2147618391, i64 2147618434, i64 2147618474}
!5560 = !DILocation(line: 183, column: 1, scope: !5214)
!5561 = !{i64 2147618620, i64 2147618663, i64 2147618703}
!5562 = !DILocation(line: 184, column: 1, scope: !5214)
!5563 = !{i64 2147618807, i64 2147618850, i64 2147618890}
!5564 = !DILocation(line: 185, column: 1, scope: !5214)
!5565 = !{i64 2147619003, i64 2147619046, i64 2147619086}
!5566 = !DILocation(line: 186, column: 1, scope: !5214)
!5567 = !{i64 2147619211, i64 2147619254, i64 2147619294}
!5568 = !DILocation(line: 187, column: 1, scope: !5214)
!5569 = !{i64 2147619423, i64 2147619466, i64 2147619506}
!5570 = !DILocation(line: 188, column: 1, scope: !5214)
!5571 = !{i64 2147619622, i64 2147619665, i64 2147619705}
!5572 = !DILocation(line: 189, column: 1, scope: !5214)
!5573 = !{i64 2147619860, i64 2147619903, i64 2147619943}
!5574 = !DILocation(line: 190, column: 1, scope: !5214)
!5575 = !{i64 2147620056, i64 2147620099, i64 2147620139}
!5576 = !DILocation(line: 191, column: 1, scope: !5214)
!5577 = !{i64 2147620258, i64 2147620301, i64 2147620341}
!5578 = !DILocation(line: 192, column: 1, scope: !5214)
!5579 = !{i64 2147620451, i64 2147620494, i64 2147620534}
!5580 = !DILocation(line: 193, column: 1, scope: !5214)
!5581 = !{i64 2147620685, i64 2147620728, i64 2147620768}
!5582 = !DILocation(line: 194, column: 1, scope: !5214)
!5583 = !{i64 2147620848, i64 2147620891, i64 2147620931}
!5584 = !DILocation(line: 195, column: 1, scope: !5214)
!5585 = !{i64 2147621087, i64 2147621130, i64 2147621170}
!5586 = !DILocation(line: 196, column: 1, scope: !5214)
!5587 = !{i64 2147621326, i64 2147621369, i64 2147621409}
!5588 = !DILocation(line: 197, column: 1, scope: !5214)
!5589 = !{i64 2147621562, i64 2147621605, i64 2147621645}
!5590 = !DILocation(line: 198, column: 1, scope: !5214)
!5591 = !{i64 2147621792, i64 2147621835, i64 2147621875}
!5592 = !DILocation(line: 199, column: 1, scope: !5214)
!5593 = !{i64 2147621979, i64 2147622022, i64 2147622062}
!5594 = !DILocation(line: 200, column: 1, scope: !5214)
!5595 = !{i64 2147622178, i64 2147622221, i64 2147622261}
!5596 = !DILocation(line: 201, column: 1, scope: !5214)
!5597 = !{i64 2147622449, i64 2147622492, i64 2147622532}
!5598 = !DILocation(line: 202, column: 1, scope: !5214)
!5599 = !{i64 2147622624, i64 2147622667, i64 2147622707}
!5600 = !DILocation(line: 203, column: 1, scope: !5214)
!5601 = !{i64 2147622858, i64 2147622901, i64 2147622941}
!5602 = !DILocation(line: 204, column: 1, scope: !5214)
!5603 = !{i64 2147623066, i64 2147623109, i64 2147623149}
!5604 = !DILocation(line: 205, column: 1, scope: !5214)
!5605 = !{i64 2147623265, i64 2147623308, i64 2147623348}
!5606 = !DILocation(line: 206, column: 1, scope: !5214)
!5607 = !{i64 2147623483, i64 2147623526, i64 2147623566}
!5608 = !DILocation(line: 207, column: 1, scope: !5214)
!5609 = !{i64 2147623673, i64 2147623716, i64 2147623756}
!5610 = !DILocation(line: 208, column: 1, scope: !5214)
!5611 = !{i64 2147623920, i64 2147623963, i64 2147624003}
!5612 = !DILocation(line: 209, column: 1, scope: !5214)
!5613 = !{i64 2147624116, i64 2147624159, i64 2147624199}
!5614 = !DILocation(line: 210, column: 1, scope: !5214)
!5615 = !{i64 2147624322, i64 2147624365, i64 2147624405}
!5616 = !DILocation(line: 211, column: 1, scope: !5214)
!5617 = !{i64 2147624527, i64 2147624570, i64 2147624610}
!5618 = !DILocation(line: 212, column: 1, scope: !5214)
!5619 = !{i64 2147624753, i64 2147624796, i64 2147624836}
!5620 = !DILocation(line: 213, column: 1, scope: !5214)
!5621 = !{i64 2147624985, i64 2147625028, i64 2147625068}
!5622 = !DILocation(line: 214, column: 1, scope: !5214)
!5623 = !{i64 2147625169, i64 2147625212, i64 2147625252}
!5624 = !DILocation(line: 215, column: 1, scope: !5214)
!5625 = !{i64 2147629439, i64 2147629482, i64 2147629522}
!5626 = !DILocation(line: 216, column: 1, scope: !5214)
!5627 = !{i64 2147629623, i64 2147629666, i64 2147629706}
!5628 = !DILocation(line: 217, column: 1, scope: !5214)
!5629 = !{i64 2147629849, i64 2147629892, i64 2147629932}
!5630 = !DILocation(line: 218, column: 1, scope: !5214)
!5631 = !{i64 2147630075, i64 2147630118, i64 2147630158}
!5632 = !DILocation(line: 219, column: 1, scope: !5214)
!5633 = !{i64 2147630301, i64 2147630344, i64 2147630384}
!5634 = !DILocation(line: 220, column: 1, scope: !5214)
!5635 = !{i64 2147630527, i64 2147630570, i64 2147630610}
!5636 = !DILocation(line: 221, column: 1, scope: !5214)
!5637 = !{i64 2147630753, i64 2147630796, i64 2147630836}
!5638 = !DILocation(line: 222, column: 1, scope: !5214)
!5639 = !{i64 2147630985, i64 2147631028, i64 2147631068}
!5640 = !DILocation(line: 223, column: 1, scope: !5214)
!5641 = !{i64 2147631223, i64 2147631266, i64 2147631306}
!5642 = !DILocation(line: 224, column: 1, scope: !5214)
!5643 = !{i64 2147631455, i64 2147631498, i64 2147631538}
!5644 = !DILocation(line: 225, column: 1, scope: !5214)
!5645 = !{i64 2147631657, i64 2147631700, i64 2147631740}
!5646 = !DILocation(line: 226, column: 1, scope: !5214)
!5647 = !{i64 2147631907, i64 2147631950, i64 2147631990}
!5648 = !DILocation(line: 227, column: 1, scope: !5214)
!5649 = !{i64 2147632145, i64 2147632188, i64 2147632228}
!5650 = !DILocation(line: 228, column: 1, scope: !5214)
!5651 = !{i64 2147632329, i64 2147632372, i64 2147632412}
!5652 = !DILocation(line: 229, column: 1, scope: !5214)
!5653 = !{i64 2147632552, i64 2147632595, i64 2147632635}
!5654 = !DILocation(line: 230, column: 1, scope: !5214)
!5655 = !{i64 2147632790, i64 2147632833, i64 2147632873}
!5656 = !DILocation(line: 231, column: 1, scope: !5214)
!5657 = !{i64 2147633028, i64 2147633071, i64 2147633111}
!5658 = !DILocation(line: 232, column: 1, scope: !5214)
!5659 = !{i64 2147633221, i64 2147633264, i64 2147633304}
!5660 = !DILocation(line: 233, column: 1, scope: !5214)
!5661 = !{i64 2147633474, i64 2147633517, i64 2147633557}
!5662 = !DILocation(line: 234, column: 1, scope: !5214)
!5663 = !{i64 2147633688, i64 2147633731, i64 2147633771}
!5664 = !DILocation(line: 235, column: 1, scope: !5214)
!5665 = !{i64 2147633896, i64 2147633939, i64 2147633979}
!5666 = !DILocation(line: 236, column: 1, scope: !5214)
!5667 = !{i64 2147634086, i64 2147634129, i64 2147634169}
!5668 = !DILocation(line: 237, column: 1, scope: !5214)
!5669 = !{i64 2147634300, i64 2147634343, i64 2147634383}
!5670 = !DILocation(line: 238, column: 1, scope: !5214)
!5671 = !{i64 2147634562, i64 2147634605, i64 2147634645}
!5672 = !DILocation(line: 239, column: 1, scope: !5214)
!5673 = !{i64 2147634773, i64 2147634816, i64 2147634856}
!5674 = !DILocation(line: 240, column: 1, scope: !5214)
!5675 = !{i64 2147635017, i64 2147635060, i64 2147635100}
!5676 = !DILocation(line: 241, column: 1, scope: !5214)
!5677 = !{i64 2147635228, i64 2147635271, i64 2147635311}
!5678 = !DILocation(line: 242, column: 1, scope: !5214)
!5679 = !{i64 2147635457, i64 2147635500, i64 2147635540}
!5680 = !DILocation(line: 243, column: 1, scope: !5214)
!5681 = !{i64 2147635722, i64 2147635765, i64 2147635805}
!5682 = !DILocation(line: 244, column: 1, scope: !5214)
!5683 = !{i64 2147635927, i64 2147635970, i64 2147636010}
!5684 = !DILocation(line: 245, column: 1, scope: !5214)
!5685 = !{i64 2147636123, i64 2147636166, i64 2147636206}
!5686 = !DILocation(line: 246, column: 1, scope: !5214)
!5687 = !{i64 2147636346, i64 2147636389, i64 2147636429}
!5688 = !DILocation(line: 247, column: 1, scope: !5214)
!5689 = !{i64 2147636509, i64 2147636552, i64 2147636592}
!5690 = !DILocation(line: 248, column: 1, scope: !5214)
!5691 = !{i64 2147636714, i64 2147636757, i64 2147636797}
!5692 = !DILocation(line: 249, column: 1, scope: !5214)
!5693 = !{i64 2147636934, i64 2147636977, i64 2147637017}
!5694 = !DILocation(line: 250, column: 1, scope: !5214)
!5695 = !{i64 2147637148, i64 2147637191, i64 2147637231}
!5696 = !DILocation(line: 251, column: 1, scope: !5214)
!5697 = !{i64 2147637362, i64 2147637405, i64 2147637445}
!5698 = !DILocation(line: 252, column: 1, scope: !5214)
!5699 = !{i64 2147637573, i64 2147637616, i64 2147637656}
!5700 = !DILocation(line: 253, column: 1, scope: !5214)
!5701 = !{i64 2147637766, i64 2147637809, i64 2147637849}
!5702 = !DILocation(line: 254, column: 1, scope: !5214)
!5703 = !{i64 2147642026, i64 2147642069, i64 2147642109}
!5704 = !DILocation(line: 255, column: 1, scope: !5214)
!5705 = !{i64 2147642222, i64 2147642265, i64 2147642305}
!5706 = !DILocation(line: 256, column: 1, scope: !5214)
!5707 = !{i64 2147642421, i64 2147642464, i64 2147642504}
!5708 = !DILocation(line: 257, column: 1, scope: !5214)
!5709 = !{i64 2147642645, i64 2147642688, i64 2147642728}
!5710 = !DILocation(line: 258, column: 1, scope: !5214)
!5711 = !{i64 2147642870, i64 2147642913, i64 2147642953}
!5712 = !DILocation(line: 259, column: 1, scope: !5214)
!5713 = !{i64 2147643042, i64 2147643085, i64 2147643125}
!5714 = !DILocation(line: 260, column: 1, scope: !5214)
!5715 = !{i64 2147643235, i64 2147643278, i64 2147643318}
!5716 = !DILocation(line: 261, column: 1, scope: !5214)
!5717 = !{i64 2147643431, i64 2147643474, i64 2147643514}
!5718 = !DILocation(line: 262, column: 1, scope: !5214)
!5719 = !{i64 2147643658, i64 2147643701, i64 2147643741}
!5720 = !DILocation(line: 263, column: 1, scope: !5214)
!5721 = !{i64 2147643875, i64 2147643918, i64 2147643958}
!5722 = !DILocation(line: 264, column: 1, scope: !5214)
!5723 = !{i64 2147644167, i64 2147644210, i64 2147644250}
!5724 = !DILocation(line: 265, column: 1, scope: !5214)
!5725 = !{i64 2147644399, i64 2147644442, i64 2147644482}
!5726 = !DILocation(line: 266, column: 1, scope: !5214)
!5727 = !{i64 2147644616, i64 2147644659, i64 2147644699}
!5728 = !DILocation(line: 267, column: 1, scope: !5214)
!5729 = !{i64 2147644823, i64 2147644866, i64 2147644906}
!5730 = !DILocation(line: 268, column: 1, scope: !5214)
!5731 = !{i64 2147645024, i64 2147645067, i64 2147645107}
!5732 = !DILocation(line: 269, column: 1, scope: !5214)
!5733 = !{i64 2147645256, i64 2147645299, i64 2147645339}
!5734 = !DILocation(line: 270, column: 1, scope: !5214)
!5735 = !{i64 2147645464, i64 2147645507, i64 2147645547}
!5736 = !DILocation(line: 271, column: 1, scope: !5214)
!5737 = !{i64 2147645654, i64 2147645697, i64 2147645737}
!5738 = !DILocation(line: 272, column: 1, scope: !5214)
!5739 = !{i64 2147645880, i64 2147645923, i64 2147645963}
!5740 = !DILocation(line: 273, column: 1, scope: !5214)
!5741 = !{i64 2147646069, i64 2147646112, i64 2147646152}
!5742 = !DILocation(line: 274, column: 1, scope: !5214)
!5743 = !{i64 2147646340, i64 2147646383, i64 2147646423}
!5744 = !DILocation(line: 275, column: 1, scope: !5214)
!5745 = !{i64 2147646560, i64 2147646603, i64 2147646643}
!5746 = !DILocation(line: 276, column: 1, scope: !5214)
!5747 = !{i64 2147646813, i64 2147646856, i64 2147646896}
!5748 = !DILocation(line: 277, column: 1, scope: !5214)
!5749 = !{i64 2147647021, i64 2147647064, i64 2147647104}
!5750 = !DILocation(line: 278, column: 1, scope: !5214)
!5751 = !{i64 2147647253, i64 2147647296, i64 2147647336}
!5752 = !DILocation(line: 279, column: 1, scope: !5214)
!5753 = !{i64 2147647464, i64 2147647507, i64 2147647547}
!5754 = !DILocation(line: 280, column: 1, scope: !5214)
!5755 = !{i64 2147647654, i64 2147647697, i64 2147647737}
!5756 = !DILocation(line: 281, column: 1, scope: !5214)
!5757 = !{i64 2147647868, i64 2147647911, i64 2147647951}
!5758 = !DILocation(line: 282, column: 1, scope: !5214)
!5759 = !{i64 2147648067, i64 2147648110, i64 2147648150}
!5760 = !DILocation(line: 283, column: 1, scope: !5214)
!5761 = !{i64 2147648254, i64 2147648297, i64 2147648337}
!5762 = !DILocation(line: 284, column: 1, scope: !5214)
!5763 = !{i64 2147648462, i64 2147648505, i64 2147648545}
!5764 = !DILocation(line: 285, column: 1, scope: !5214)
!5765 = !{i64 2147648691, i64 2147648734, i64 2147648774}
!5766 = !DILocation(line: 286, column: 1, scope: !5214)
!5767 = !{i64 2147648893, i64 2147648936, i64 2147648976}
!5768 = !DILocation(line: 287, column: 1, scope: !5214)
!5769 = !{i64 2147649092, i64 2147649135, i64 2147649175}
!5770 = !DILocation(line: 288, column: 1, scope: !5214)
!5771 = !{i64 2147649309, i64 2147649352, i64 2147649392}
!5772 = !DILocation(line: 290, column: 1, scope: !5214)
!5773 = distinct !DISubprogram(name: "stm32l1_init", scope: !153, file: !153, line: 31, type: !160, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5774)
!5774 = !{!5775, !5776}
!5775 = !DILocalVariable(name: "arg", arg: 1, scope: !5773, file: !153, line: 31, type: !162)
!5776 = !DILocalVariable(name: "key", scope: !5773, file: !153, line: 33, type: !132)
!5777 = !DILocation(line: 0, scope: !5773)
!5778 = !DILocation(line: 55, column: 2, scope: !5779, inlinedAt: !5786)
!5779 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5783)
!5780 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5781 = !DISubroutineType(types: !5782)
!5782 = !{!32}
!5783 = !{!5784, !5785}
!5784 = !DILocalVariable(name: "key", scope: !5779, file: !5780, line: 44, type: !32)
!5785 = !DILocalVariable(name: "tmp", scope: !5779, file: !5780, line: 53, type: !32)
!5786 = distinct !DILocation(line: 37, column: 8, scope: !5773)
!5787 = !{i64 1523549}
!5788 = !DILocation(line: 0, scope: !5779, inlinedAt: !5786)
!5789 = !DILocalVariable(name: "key", arg: 1, scope: !5790, file: !5780, line: 84, type: !32)
!5790 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5793)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{null, !32}
!5793 = !{!5789}
!5794 = !DILocation(line: 0, scope: !5790, inlinedAt: !5795)
!5795 = distinct !DILocation(line: 44, column: 2, scope: !5773)
!5796 = !DILocation(line: 95, column: 2, scope: !5790, inlinedAt: !5795)
!5797 = !{i64 1524366}
!5798 = !DILocation(line: 48, column: 18, scope: !5773)
!5799 = !DILocation(line: 54, column: 2, scope: !5773)
!5800 = !DILocation(line: 55, column: 2, scope: !5773)
!5801 = !DILocation(line: 57, column: 2, scope: !5773)
!5802 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !5803, file: !5803, line: 531, type: !5804, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5806)
!5803 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5804 = !DISubroutineType(types: !5805)
!5805 = !{null, !132}
!5806 = !{!5807, !5808}
!5807 = !DILocalVariable(name: "Periphs", arg: 1, scope: !5802, file: !5803, line: 531, type: !132)
!5808 = !DILocalVariable(name: "tmpreg", scope: !5802, file: !5803, line: 533, type: !131)
!5809 = !DILocation(line: 0, scope: !5802)
!5810 = !DILocation(line: 533, column: 3, scope: !5802)
!5811 = !DILocation(line: 533, column: 17, scope: !5802)
!5812 = !DILocation(line: 534, column: 3, scope: !5802)
!5813 = !DILocation(line: 536, column: 12, scope: !5802)
!5814 = !DILocation(line: 536, column: 10, scope: !5802)
!5815 = !DILocation(line: 537, column: 9, scope: !5802)
!5816 = !DILocation(line: 538, column: 1, scope: !5802)
!5817 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !5818, file: !5818, line: 272, type: !5804, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5819)
!5818 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5819 = !{!5820}
!5820 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !5817, file: !5818, line: 272, type: !132)
!5821 = !DILocation(line: 0, scope: !5817)
!5822 = !DILocation(line: 274, column: 3, scope: !5817)
!5823 = !DILocation(line: 275, column: 1, scope: !5817)
!5824 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !193, file: !193, line: 26, type: !199, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !190, retainedNodes: !5825)
!5825 = !{!5826}
!5826 = !DILocalVariable(name: "dev", arg: 1, scope: !5824, file: !193, line: 26, type: !201)
!5827 = !DILocation(line: 0, scope: !5824)
!5828 = !DILocation(line: 68, column: 2, scope: !5824)
!5829 = distinct !DISubprogram(name: "tty_write", scope: !5830, file: !5830, line: 100, type: !5831, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !5874)
!5830 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5831 = !DISubroutineType(types: !5832)
!5832 = !{!5833, !5835, !13, !369}
!5833 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5834, line: 28, baseType: !103)
!5834 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 32)
!5836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !320, line: 18, size: 544, elements: !5837)
!5837 = !{!5838, !5839, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873}
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5836, file: !320, line: 19, baseType: !2668, size: 32)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5836, file: !320, line: 21, baseType: !5840, size: 128, offset: 32)
!5840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !325, line: 2909, size: 128, elements: !5841)
!5841 = !{!5842, !5861, !5862}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5840, file: !325, line: 2910, baseType: !5843, size: 64)
!5843 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !5844)
!5844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !5845)
!5845 = !{!5846}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5844, file: !329, line: 232, baseType: !5847, size: 64)
!5847 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !5848)
!5848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !5849)
!5849 = !{!5850, !5856}
!5850 = !DIDerivedType(tag: DW_TAG_member, scope: !5848, file: !334, line: 38, baseType: !5851, size: 32)
!5851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5848, file: !334, line: 38, size: 32, elements: !5852)
!5852 = !{!5853, !5855}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5851, file: !334, line: 39, baseType: !5854, size: 32)
!5854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5848, size: 32)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5851, file: !334, line: 40, baseType: !5854, size: 32)
!5856 = !DIDerivedType(tag: DW_TAG_member, scope: !5848, file: !334, line: 42, baseType: !5857, size: 32, offset: 32)
!5857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5848, file: !334, line: 42, size: 32, elements: !5858)
!5858 = !{!5859, !5860}
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5857, file: !334, line: 43, baseType: !5854, size: 32)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5857, file: !334, line: 44, baseType: !5854, size: 32)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5840, file: !325, line: 2911, baseType: !32, size: 32, offset: 64)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5840, file: !325, line: 2912, baseType: !32, size: 32, offset: 96)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5836, file: !320, line: 22, baseType: !283, size: 32, offset: 160)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5836, file: !320, line: 23, baseType: !132, size: 32, offset: 192)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5836, file: !320, line: 24, baseType: !353, size: 16, offset: 224)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5836, file: !320, line: 24, baseType: !353, size: 16, offset: 240)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5836, file: !320, line: 25, baseType: !357, size: 32, offset: 256)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5836, file: !320, line: 27, baseType: !5840, size: 128, offset: 288)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5836, file: !320, line: 28, baseType: !283, size: 32, offset: 416)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5836, file: !320, line: 29, baseType: !132, size: 32, offset: 448)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5836, file: !320, line: 30, baseType: !353, size: 16, offset: 480)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5836, file: !320, line: 30, baseType: !353, size: 16, offset: 496)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5836, file: !320, line: 31, baseType: !357, size: 32, offset: 512)
!5874 = !{!5875, !5876, !5877, !5878, !5879, !5880}
!5875 = !DILocalVariable(name: "tty", arg: 1, scope: !5829, file: !5830, line: 100, type: !5835)
!5876 = !DILocalVariable(name: "buf", arg: 2, scope: !5829, file: !5830, line: 100, type: !13)
!5877 = !DILocalVariable(name: "size", arg: 3, scope: !5829, file: !5830, line: 100, type: !369)
!5878 = !DILocalVariable(name: "p", scope: !5829, file: !5830, line: 102, type: !277)
!5879 = !DILocalVariable(name: "out_size", scope: !5829, file: !5830, line: 103, type: !369)
!5880 = !DILocalVariable(name: "res", scope: !5829, file: !5830, line: 104, type: !103)
!5881 = !DILocation(line: 0, scope: !5829)
!5882 = !DILocation(line: 106, column: 11, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5829, file: !5830, line: 106, column: 6)
!5884 = !DILocation(line: 106, column: 25, scope: !5883)
!5885 = !DILocation(line: 106, column: 6, scope: !5829)
!5886 = !DILocation(line: 117, column: 2, scope: !5829)
!5887 = !DILocation(line: 110, column: 3, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5883, file: !5830, line: 106, column: 32)
!5889 = !DILocation(line: 110, column: 14, scope: !5888)
!5890 = !DILocation(line: 111, column: 23, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5888, file: !5830, line: 110, column: 18)
!5892 = !DILocation(line: 111, column: 35, scope: !5891)
!5893 = !DILocation(line: 111, column: 33, scope: !5891)
!5894 = !DILocation(line: 111, column: 4, scope: !5891)
!5895 = distinct !{!5895, !5887, !5896}
!5896 = !DILocation(line: 112, column: 3, scope: !5888)
!5897 = !DILocation(line: 117, column: 13, scope: !5829)
!5898 = !DILocation(line: 118, column: 26, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5829, file: !5830, line: 117, column: 17)
!5900 = !DILocation(line: 118, column: 9, scope: !5899)
!5901 = !DILocation(line: 119, column: 11, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5899, file: !5830, line: 119, column: 7)
!5903 = !DILocation(line: 119, column: 7, scope: !5899)
!5904 = !DILocation(line: 121, column: 17, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !5830, line: 121, column: 8)
!5906 = distinct !DILexicalBlock(scope: !5902, file: !5830, line: 119, column: 16)
!5907 = !DILocation(line: 121, column: 8, scope: !5906)
!5908 = !DILocation(line: 122, column: 13, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5905, file: !5830, line: 121, column: 23)
!5910 = !DILocation(line: 122, column: 5, scope: !5909)
!5911 = !DILocation(line: 122, column: 11, scope: !5909)
!5912 = !DILocation(line: 123, column: 5, scope: !5909)
!5913 = !DILocation(line: 118, column: 28, scope: !5899)
!5914 = !DILocation(line: 135, column: 11, scope: !5899)
!5915 = distinct !{!5915, !5886, !5916}
!5916 = !DILocation(line: 136, column: 2, scope: !5829)
!5917 = !DILocation(line: 139, column: 1, scope: !5829)
!5918 = distinct !DISubprogram(name: "uart_poll_out", scope: !5919, file: !5919, line: 95, type: !2685, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !5920)
!5919 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!5920 = !{!5921, !5922}
!5921 = !DILocalVariable(name: "dev", arg: 1, scope: !5918, file: !5919, line: 95, type: !2668)
!5922 = !DILocalVariable(name: "out_char", arg: 2, scope: !5918, file: !5919, line: 95, type: !177)
!5923 = !DILocation(line: 0, scope: !5918)
!5924 = !DILocation(line: 105, column: 2, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5918, file: !5919, line: 105, column: 2)
!5926 = !{i64 2152468381}
!5927 = !DILocation(line: 106, column: 2, scope: !5918)
!5928 = !DILocation(line: 107, column: 1, scope: !5918)
!5929 = distinct !DISubprogram(name: "tty_putchar", scope: !5830, file: !5830, line: 69, type: !5930, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !5932)
!5930 = !DISubroutineType(types: !5931)
!5931 = !{!103, !5835, !176}
!5932 = !{!5933, !5934, !5935, !5936, !5937}
!5933 = !DILocalVariable(name: "tty", arg: 1, scope: !5929, file: !5830, line: 69, type: !5835)
!5934 = !DILocalVariable(name: "c", arg: 2, scope: !5929, file: !5830, line: 69, type: !176)
!5935 = !DILocalVariable(name: "key", scope: !5929, file: !5830, line: 71, type: !32)
!5936 = !DILocalVariable(name: "tx_next", scope: !5929, file: !5830, line: 72, type: !103)
!5937 = !DILocalVariable(name: "res", scope: !5929, file: !5830, line: 73, type: !103)
!5938 = !DILocation(line: 0, scope: !5929)
!5939 = !DILocation(line: 75, column: 25, scope: !5929)
!5940 = !DILocation(line: 76, column: 5, scope: !5929)
!5941 = !DILocation(line: 77, column: 7, scope: !5929)
!5942 = !DILocation(line: 75, column: 8, scope: !5929)
!5943 = !DILocation(line: 78, column: 10, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5929, file: !5830, line: 78, column: 6)
!5945 = !DILocation(line: 78, column: 6, scope: !5929)
!5946 = !DILocation(line: 55, column: 2, scope: !5947, inlinedAt: !5951)
!5947 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !5948)
!5948 = !{!5949, !5950}
!5949 = !DILocalVariable(name: "key", scope: !5947, file: !5780, line: 44, type: !32)
!5950 = !DILocalVariable(name: "tmp", scope: !5947, file: !5780, line: 53, type: !32)
!5951 = distinct !DILocation(line: 82, column: 8, scope: !5929)
!5952 = !{i64 1651513}
!5953 = !DILocation(line: 0, scope: !5947, inlinedAt: !5951)
!5954 = !DILocation(line: 83, column: 17, scope: !5929)
!5955 = !DILocation(line: 83, column: 12, scope: !5929)
!5956 = !DILocation(line: 83, column: 24, scope: !5929)
!5957 = !DILocation(line: 84, column: 22, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5929, file: !5830, line: 84, column: 6)
!5959 = !DILocation(line: 84, column: 14, scope: !5958)
!5960 = !DILocation(line: 84, column: 6, scope: !5929)
!5961 = !DILocation(line: 87, column: 22, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5929, file: !5830, line: 87, column: 6)
!5963 = !DILocation(line: 87, column: 17, scope: !5962)
!5964 = !DILocation(line: 87, column: 14, scope: !5962)
!5965 = !DILocation(line: 87, column: 6, scope: !5929)
!5966 = !DILocalVariable(name: "key", arg: 1, scope: !5967, file: !5780, line: 84, type: !32)
!5967 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !5968)
!5968 = !{!5966}
!5969 = !DILocation(line: 0, scope: !5967, inlinedAt: !5970)
!5970 = distinct !DILocation(line: 88, column: 3, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5962, file: !5830, line: 87, column: 30)
!5972 = !DILocation(line: 95, column: 2, scope: !5967, inlinedAt: !5970)
!5973 = !{i64 1652330}
!5974 = !DILocation(line: 89, column: 3, scope: !5971)
!5975 = !DILocation(line: 92, column: 7, scope: !5929)
!5976 = !DILocation(line: 92, column: 2, scope: !5929)
!5977 = !DILocation(line: 92, column: 31, scope: !5929)
!5978 = !DILocation(line: 93, column: 16, scope: !5929)
!5979 = !DILocation(line: 93, column: 14, scope: !5929)
!5980 = !DILocation(line: 0, scope: !5967, inlinedAt: !5981)
!5981 = distinct !DILocation(line: 95, column: 2, scope: !5929)
!5982 = !DILocation(line: 95, column: 2, scope: !5967, inlinedAt: !5981)
!5983 = !DILocation(line: 96, column: 26, scope: !5929)
!5984 = !DILocation(line: 96, column: 2, scope: !5929)
!5985 = !DILocation(line: 97, column: 2, scope: !5929)
!5986 = !DILocation(line: 98, column: 1, scope: !5929)
!5987 = distinct !DISubprogram(name: "z_errno", scope: !5988, file: !5988, line: 24, type: !5989, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !486)
!5988 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!5989 = !DISubroutineType(types: !5990)
!5990 = !{!2646}
!5991 = !DILocation(line: 31, column: 2, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5987, file: !5988, line: 31, column: 2)
!5993 = !{i64 2151741419}
!5994 = !DILocation(line: 32, column: 9, scope: !5987)
!5995 = !DILocation(line: 32, column: 2, scope: !5987)
!5996 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5997, file: !5997, line: 403, type: !5998, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6000)
!5997 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5998 = !DISubroutineType(types: !5999)
!5999 = !{!2355, !2355}
!6000 = !{!6001}
!6001 = !DILocalVariable(name: "t", arg: 1, scope: !5996, file: !5997, line: 403, type: !2355)
!6002 = !DILocation(line: 0, scope: !5996)
!6003 = !DILocalVariable(name: "t", arg: 1, scope: !6004, file: !5997, line: 102, type: !2355)
!6004 = distinct !DISubprogram(name: "z_tmcvt", scope: !5997, file: !5997, line: 102, type: !6005, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6007)
!6005 = !DISubroutineType(types: !6006)
!6006 = !{!2355, !2355, !132, !132, !179, !179, !179, !179}
!6007 = !{!6003, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017}
!6008 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6004, file: !5997, line: 102, type: !132)
!6009 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6004, file: !5997, line: 103, type: !132)
!6010 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6004, file: !5997, line: 103, type: !179)
!6011 = !DILocalVariable(name: "result32", arg: 5, scope: !6004, file: !5997, line: 104, type: !179)
!6012 = !DILocalVariable(name: "round_up", arg: 6, scope: !6004, file: !5997, line: 104, type: !179)
!6013 = !DILocalVariable(name: "round_off", arg: 7, scope: !6004, file: !5997, line: 105, type: !179)
!6014 = !DILocalVariable(name: "mul_ratio", scope: !6004, file: !5997, line: 107, type: !179)
!6015 = !DILocalVariable(name: "div_ratio", scope: !6004, file: !5997, line: 109, type: !179)
!6016 = !DILocalVariable(name: "off", scope: !6004, file: !5997, line: 116, type: !2355)
!6017 = !DILocalVariable(name: "rdivisor", scope: !6018, file: !5997, line: 119, type: !132)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !5997, line: 118, column: 18)
!6019 = distinct !DILexicalBlock(scope: !6004, file: !5997, line: 118, column: 6)
!6020 = !DILocation(line: 0, scope: !6004, inlinedAt: !6021)
!6021 = distinct !DILocation(line: 406, column: 9, scope: !5996)
!6022 = !DILocation(line: 145, column: 13, scope: !6023, inlinedAt: !6021)
!6023 = distinct !DILexicalBlock(scope: !6024, file: !5997, line: 144, column: 10)
!6024 = distinct !DILexicalBlock(scope: !6025, file: !5997, line: 142, column: 7)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !5997, line: 141, column: 24)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !5997, line: 141, column: 13)
!6027 = distinct !DILexicalBlock(scope: !6004, file: !5997, line: 134, column: 6)
!6028 = !DILocation(line: 406, column: 2, scope: !5996)
!6029 = distinct !DISubprogram(name: "k_sem_take", scope: !3669, file: !3669, line: 1044, type: !6030, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6037)
!6030 = !DISubroutineType(types: !6031)
!6031 = !{!103, !6032, !6033}
!6032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 32)
!6033 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1753, line: 67, baseType: !6034)
!6034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1753, line: 65, size: 64, elements: !6035)
!6035 = !{!6036}
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6034, file: !1753, line: 66, baseType: !1752, size: 64)
!6037 = !{!6038, !6039}
!6038 = !DILocalVariable(name: "sem", arg: 1, scope: !6029, file: !3669, line: 1044, type: !6032)
!6039 = !DILocalVariable(name: "timeout", arg: 2, scope: !6029, file: !3669, line: 1044, type: !6033)
!6040 = !DILocation(line: 0, scope: !6029)
!6041 = !DILocation(line: 1053, column: 2, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6029, file: !3669, line: 1053, column: 2)
!6043 = !{i64 2152220607}
!6044 = !DILocation(line: 1054, column: 9, scope: !6029)
!6045 = !DILocation(line: 1054, column: 2, scope: !6029)
!6046 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5919, file: !5919, line: 193, type: !2719, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6047)
!6047 = !{!6048}
!6048 = !DILocalVariable(name: "dev", arg: 1, scope: !6046, file: !5919, line: 193, type: !2668)
!6049 = !DILocation(line: 0, scope: !6046)
!6050 = !DILocation(line: 202, column: 2, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6046, file: !5919, line: 202, column: 2)
!6052 = !{i64 2152468653}
!6053 = !DILocation(line: 203, column: 2, scope: !6046)
!6054 = !DILocation(line: 204, column: 1, scope: !6046)
!6055 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !225, file: !225, line: 857, type: !2719, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6056)
!6056 = !{!6057, !6058}
!6057 = !DILocalVariable(name: "dev", arg: 1, scope: !6055, file: !225, line: 857, type: !2668)
!6058 = !DILocalVariable(name: "api", scope: !6055, file: !225, line: 860, type: !2660)
!6059 = !DILocation(line: 0, scope: !6055)
!6060 = !DILocation(line: 861, column: 40, scope: !6055)
!6061 = !DILocation(line: 863, column: 11, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6055, file: !225, line: 863, column: 6)
!6063 = !DILocation(line: 863, column: 25, scope: !6062)
!6064 = !DILocation(line: 863, column: 6, scope: !6055)
!6065 = !DILocation(line: 864, column: 3, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6062, file: !225, line: 863, column: 34)
!6067 = !DILocation(line: 865, column: 2, scope: !6066)
!6068 = !DILocation(line: 869, column: 1, scope: !6055)
!6069 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !225, file: !225, line: 574, type: !2685, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6070)
!6070 = !{!6071, !6072, !6073}
!6071 = !DILocalVariable(name: "dev", arg: 1, scope: !6069, file: !225, line: 574, type: !2668)
!6072 = !DILocalVariable(name: "out_char", arg: 2, scope: !6069, file: !225, line: 575, type: !177)
!6073 = !DILocalVariable(name: "api", scope: !6069, file: !225, line: 577, type: !2660)
!6074 = !DILocation(line: 0, scope: !6069)
!6075 = !DILocation(line: 578, column: 40, scope: !6069)
!6076 = !DILocation(line: 580, column: 7, scope: !6069)
!6077 = !DILocation(line: 580, column: 2, scope: !6069)
!6078 = !DILocation(line: 581, column: 1, scope: !6069)
!6079 = distinct !DISubprogram(name: "tty_read", scope: !5830, file: !5830, line: 206, type: !6080, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6082)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{!5833, !5835, !102, !369}
!6082 = !{!6083, !6084, !6085, !6086, !6087, !6088}
!6083 = !DILocalVariable(name: "tty", arg: 1, scope: !6079, file: !5830, line: 206, type: !5835)
!6084 = !DILocalVariable(name: "buf", arg: 2, scope: !6079, file: !5830, line: 206, type: !102)
!6085 = !DILocalVariable(name: "size", arg: 3, scope: !6079, file: !5830, line: 206, type: !369)
!6086 = !DILocalVariable(name: "p", scope: !6079, file: !5830, line: 208, type: !283)
!6087 = !DILocalVariable(name: "out_size", scope: !6079, file: !5830, line: 209, type: !369)
!6088 = !DILocalVariable(name: "res", scope: !6079, file: !5830, line: 210, type: !103)
!6089 = !DILocation(line: 0, scope: !6079)
!6090 = !DILocation(line: 212, column: 11, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6079, file: !5830, line: 212, column: 6)
!6092 = !DILocation(line: 212, column: 25, scope: !6091)
!6093 = !DILocation(line: 212, column: 6, scope: !6079)
!6094 = !DILocation(line: 216, column: 2, scope: !6079)
!6095 = !DILocation(line: 213, column: 10, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6091, file: !5830, line: 212, column: 32)
!6097 = !DILocation(line: 213, column: 3, scope: !6096)
!6098 = !DILocation(line: 216, column: 13, scope: !6079)
!6099 = !DILocation(line: 217, column: 9, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6079, file: !5830, line: 216, column: 17)
!6101 = !DILocation(line: 218, column: 11, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6100, file: !5830, line: 218, column: 7)
!6103 = !DILocation(line: 218, column: 7, scope: !6100)
!6104 = !DILocation(line: 220, column: 17, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6106, file: !5830, line: 220, column: 8)
!6106 = distinct !DILexicalBlock(scope: !6102, file: !5830, line: 218, column: 16)
!6107 = !DILocation(line: 220, column: 8, scope: !6106)
!6108 = !DILocation(line: 221, column: 13, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6105, file: !5830, line: 220, column: 23)
!6110 = !DILocation(line: 221, column: 5, scope: !6109)
!6111 = !DILocation(line: 221, column: 11, scope: !6109)
!6112 = !DILocation(line: 222, column: 5, scope: !6109)
!6113 = !DILocation(line: 234, column: 10, scope: !6100)
!6114 = !DILocation(line: 234, column: 5, scope: !6100)
!6115 = !DILocation(line: 234, column: 8, scope: !6100)
!6116 = !DILocation(line: 235, column: 11, scope: !6100)
!6117 = distinct !{!6117, !6094, !6118}
!6118 = !DILocation(line: 236, column: 2, scope: !6079)
!6119 = !DILocation(line: 239, column: 1, scope: !6079)
!6120 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5830, file: !5830, line: 162, type: !6080, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6121)
!6121 = !{!6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129}
!6122 = !DILocalVariable(name: "tty", arg: 1, scope: !6120, file: !5830, line: 162, type: !5835)
!6123 = !DILocalVariable(name: "buf", arg: 2, scope: !6120, file: !5830, line: 162, type: !102)
!6124 = !DILocalVariable(name: "size", arg: 3, scope: !6120, file: !5830, line: 162, type: !369)
!6125 = !DILocalVariable(name: "p", scope: !6120, file: !5830, line: 164, type: !283)
!6126 = !DILocalVariable(name: "out_size", scope: !6120, file: !5830, line: 165, type: !369)
!6127 = !DILocalVariable(name: "res", scope: !6120, file: !5830, line: 166, type: !103)
!6128 = !DILocalVariable(name: "timeout", scope: !6120, file: !5830, line: 167, type: !132)
!6129 = !DILocalVariable(name: "c", scope: !6130, file: !5830, line: 170, type: !176)
!6130 = distinct !DILexicalBlock(scope: !6120, file: !5830, line: 169, column: 15)
!6131 = !DILocation(line: 0, scope: !6120)
!6132 = !DILocation(line: 169, column: 2, scope: !6120)
!6133 = !DILocation(line: 167, column: 26, scope: !6120)
!6134 = !DILocation(line: 170, column: 3, scope: !6130)
!6135 = !DILocation(line: 171, column: 27, scope: !6130)
!6136 = !DILocation(line: 0, scope: !6130)
!6137 = !DILocation(line: 171, column: 9, scope: !6130)
!6138 = !DILocation(line: 172, column: 11, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6130, file: !5830, line: 172, column: 7)
!6140 = !DILocation(line: 172, column: 7, scope: !6130)
!6141 = !DILocation(line: 177, column: 17, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6143, file: !5830, line: 177, column: 8)
!6143 = distinct !DILexicalBlock(scope: !6139, file: !5830, line: 172, column: 18)
!6144 = !DILocation(line: 177, column: 8, scope: !6143)
!6145 = !DILocation(line: 178, column: 5, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6142, file: !5830, line: 177, column: 23)
!6147 = !DILocation(line: 178, column: 11, scope: !6146)
!6148 = !DILocation(line: 201, column: 2, scope: !6120)
!6149 = !DILocation(line: 184, column: 11, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6130, file: !5830, line: 184, column: 7)
!6151 = !DILocation(line: 184, column: 7, scope: !6130)
!6152 = !DILocation(line: 185, column: 11, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6150, file: !5830, line: 184, column: 17)
!6154 = !DILocation(line: 185, column: 6, scope: !6153)
!6155 = !DILocation(line: 185, column: 9, scope: !6153)
!6156 = !DILocation(line: 186, column: 12, scope: !6153)
!6157 = !DILocation(line: 187, column: 8, scope: !6153)
!6158 = !DILocation(line: 190, column: 12, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6130, file: !5830, line: 190, column: 7)
!6160 = !DILocation(line: 190, column: 17, scope: !6159)
!6161 = !DILocation(line: 191, column: 17, scope: !6159)
!6162 = !DILocation(line: 191, column: 36, scope: !6159)
!6163 = !DILocation(line: 191, column: 46, scope: !6159)
!6164 = !DILocation(line: 191, column: 49, scope: !6159)
!6165 = !DILocation(line: 190, column: 7, scope: !6130)
!6166 = !DILocation(line: 198, column: 11, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6130, file: !5830, line: 198, column: 7)
!6168 = !DILocation(line: 198, column: 7, scope: !6130)
!6169 = !DILocation(line: 199, column: 12, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6167, file: !5830, line: 198, column: 18)
!6171 = !DILocation(line: 199, column: 4, scope: !6170)
!6172 = !DILocation(line: 200, column: 3, scope: !6170)
!6173 = !DILocation(line: 204, column: 1, scope: !6120)
!6174 = distinct !DISubprogram(name: "tty_getchar", scope: !5830, file: !5830, line: 141, type: !6175, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6177)
!6175 = !DISubroutineType(types: !6176)
!6176 = !{!103, !5835}
!6177 = !{!6178, !6179, !6180, !6181}
!6178 = !DILocalVariable(name: "tty", arg: 1, scope: !6174, file: !5830, line: 141, type: !5835)
!6179 = !DILocalVariable(name: "key", scope: !6174, file: !5830, line: 143, type: !32)
!6180 = !DILocalVariable(name: "c", scope: !6174, file: !5830, line: 144, type: !176)
!6181 = !DILocalVariable(name: "res", scope: !6174, file: !5830, line: 145, type: !103)
!6182 = !DILocation(line: 0, scope: !6174)
!6183 = !DILocation(line: 147, column: 25, scope: !6174)
!6184 = !DILocation(line: 147, column: 33, scope: !6174)
!6185 = !DILocation(line: 147, column: 8, scope: !6174)
!6186 = !DILocation(line: 148, column: 10, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6174, file: !5830, line: 148, column: 6)
!6188 = !DILocation(line: 148, column: 6, scope: !6174)
!6189 = !DILocation(line: 55, column: 2, scope: !5947, inlinedAt: !6190)
!6190 = distinct !DILocation(line: 152, column: 8, scope: !6174)
!6191 = !DILocation(line: 0, scope: !5947, inlinedAt: !6190)
!6192 = !DILocation(line: 153, column: 11, scope: !6174)
!6193 = !DILocation(line: 153, column: 27, scope: !6174)
!6194 = !DILocation(line: 153, column: 33, scope: !6174)
!6195 = !DILocation(line: 153, column: 6, scope: !6174)
!6196 = !DILocation(line: 154, column: 6, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6174, file: !5830, line: 154, column: 6)
!6198 = !DILocation(line: 154, column: 26, scope: !6197)
!6199 = !DILocation(line: 154, column: 18, scope: !6197)
!6200 = !DILocation(line: 154, column: 6, scope: !6174)
!6201 = !DILocation(line: 0, scope: !5967, inlinedAt: !6202)
!6202 = distinct !DILocation(line: 157, column: 2, scope: !6174)
!6203 = !DILocation(line: 95, column: 2, scope: !5967, inlinedAt: !6202)
!6204 = !DILocation(line: 159, column: 9, scope: !6174)
!6205 = !DILocation(line: 159, column: 2, scope: !6174)
!6206 = !DILocation(line: 160, column: 1, scope: !6174)
!6207 = distinct !DISubprogram(name: "uart_poll_in", scope: !5919, file: !5919, line: 47, type: !2666, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6208)
!6208 = !{!6209, !6210}
!6209 = !DILocalVariable(name: "dev", arg: 1, scope: !6207, file: !5919, line: 47, type: !2668)
!6210 = !DILocalVariable(name: "p_char", arg: 2, scope: !6207, file: !5919, line: 47, type: !246)
!6211 = !DILocation(line: 0, scope: !6207)
!6212 = !DILocation(line: 56, column: 2, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6207, file: !5919, line: 56, column: 2)
!6214 = !{i64 2152468245}
!6215 = !DILocation(line: 57, column: 9, scope: !6207)
!6216 = !DILocation(line: 57, column: 2, scope: !6207)
!6217 = distinct !DISubprogram(name: "k_sleep", scope: !3669, file: !3669, line: 91, type: !6218, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!357, !6033}
!6220 = !{!6221}
!6221 = !DILocalVariable(name: "timeout", arg: 1, scope: !6217, file: !3669, line: 91, type: !6033)
!6222 = !DILocation(line: 0, scope: !6217)
!6223 = !DILocation(line: 99, column: 2, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6217, file: !3669, line: 99, column: 2)
!6225 = !{i64 2152216763}
!6226 = !DILocation(line: 100, column: 9, scope: !6217)
!6227 = !DILocation(line: 100, column: 2, scope: !6217)
!6228 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !225, file: !225, line: 504, type: !2666, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6229)
!6229 = !{!6230, !6231, !6232}
!6230 = !DILocalVariable(name: "dev", arg: 1, scope: !6228, file: !225, line: 504, type: !2668)
!6231 = !DILocalVariable(name: "p_char", arg: 2, scope: !6228, file: !225, line: 505, type: !246)
!6232 = !DILocalVariable(name: "api", scope: !6228, file: !225, line: 507, type: !2660)
!6233 = !DILocation(line: 0, scope: !6228)
!6234 = !DILocation(line: 508, column: 40, scope: !6228)
!6235 = !DILocation(line: 510, column: 11, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6228, file: !225, line: 510, column: 6)
!6237 = !DILocation(line: 510, column: 19, scope: !6236)
!6238 = !DILocation(line: 510, column: 6, scope: !6228)
!6239 = !DILocation(line: 514, column: 9, scope: !6228)
!6240 = !DILocation(line: 514, column: 2, scope: !6228)
!6241 = !DILocation(line: 515, column: 1, scope: !6228)
!6242 = distinct !DISubprogram(name: "tty_init", scope: !5830, file: !5830, line: 241, type: !6243, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6245)
!6243 = !DISubroutineType(types: !6244)
!6244 = !{!103, !5835, !2668}
!6245 = !{!6246, !6247}
!6246 = !DILocalVariable(name: "tty", arg: 1, scope: !6242, file: !5830, line: 241, type: !5835)
!6247 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6242, file: !5830, line: 241, type: !2668)
!6248 = !DILocation(line: 0, scope: !6242)
!6249 = !DILocation(line: 243, column: 7, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6242, file: !5830, line: 243, column: 6)
!6251 = !DILocation(line: 243, column: 6, scope: !6242)
!6252 = !DILocation(line: 247, column: 7, scope: !6242)
!6253 = !DILocation(line: 247, column: 16, scope: !6242)
!6254 = !DILocation(line: 250, column: 7, scope: !6242)
!6255 = !DILocation(line: 250, column: 18, scope: !6242)
!6256 = !DILocation(line: 251, column: 7, scope: !6242)
!6257 = !DILocation(line: 251, column: 21, scope: !6242)
!6258 = !DILocation(line: 252, column: 7, scope: !6242)
!6259 = !DILocation(line: 252, column: 18, scope: !6242)
!6260 = !DILocation(line: 253, column: 7, scope: !6242)
!6261 = !DILocation(line: 253, column: 21, scope: !6242)
!6262 = !DILocation(line: 255, column: 49, scope: !6242)
!6263 = !DILocation(line: 255, column: 56, scope: !6242)
!6264 = !DILocation(line: 255, column: 35, scope: !6242)
!6265 = !DILocation(line: 255, column: 42, scope: !6242)
!6266 = !DILocation(line: 255, column: 21, scope: !6242)
!6267 = !DILocation(line: 255, column: 28, scope: !6242)
!6268 = !DILocation(line: 255, column: 7, scope: !6242)
!6269 = !DILocation(line: 255, column: 14, scope: !6242)
!6270 = !DILocation(line: 257, column: 7, scope: !6242)
!6271 = !DILocation(line: 257, column: 18, scope: !6242)
!6272 = !DILocation(line: 258, column: 7, scope: !6242)
!6273 = !DILocation(line: 258, column: 18, scope: !6242)
!6274 = !DILocation(line: 260, column: 58, scope: !6242)
!6275 = !DILocation(line: 260, column: 2, scope: !6242)
!6276 = !DILocation(line: 262, column: 2, scope: !6242)
!6277 = !DILocation(line: 263, column: 1, scope: !6242)
!6278 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !225, file: !225, line: 1163, type: !2733, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6279)
!6279 = !{!6280, !6281, !6282, !6283}
!6280 = !DILocalVariable(name: "dev", arg: 1, scope: !6278, file: !225, line: 1163, type: !2668)
!6281 = !DILocalVariable(name: "cb", arg: 2, scope: !6278, file: !225, line: 1164, type: !2735)
!6282 = !DILocalVariable(name: "user_data", arg: 3, scope: !6278, file: !225, line: 1165, type: !102)
!6283 = !DILocalVariable(name: "api", scope: !6278, file: !225, line: 1168, type: !2660)
!6284 = !DILocation(line: 0, scope: !6278)
!6285 = !DILocation(line: 1169, column: 40, scope: !6278)
!6286 = !DILocation(line: 1171, column: 11, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6278, file: !225, line: 1171, column: 6)
!6288 = !DILocation(line: 1171, column: 20, scope: !6287)
!6289 = !DILocation(line: 1171, column: 29, scope: !6287)
!6290 = !DILocation(line: 1171, column: 46, scope: !6287)
!6291 = !DILocation(line: 1171, column: 6, scope: !6278)
!6292 = !DILocation(line: 1172, column: 3, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6287, file: !225, line: 1171, column: 56)
!6294 = !DILocation(line: 1173, column: 2, scope: !6293)
!6295 = !DILocation(line: 1179, column: 1, scope: !6278)
!6296 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5830, file: !5830, line: 15, type: !2737, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6297)
!6297 = !{!6298, !6299, !6300, !6301}
!6298 = !DILocalVariable(name: "dev", arg: 1, scope: !6296, file: !5830, line: 15, type: !2668)
!6299 = !DILocalVariable(name: "user_data", arg: 2, scope: !6296, file: !5830, line: 15, type: !102)
!6300 = !DILocalVariable(name: "tty", scope: !6296, file: !5830, line: 17, type: !5835)
!6301 = !DILocalVariable(name: "c", scope: !6302, file: !5830, line: 22, type: !176)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !5830, line: 21, column: 30)
!6303 = distinct !DILexicalBlock(scope: !6296, file: !5830, line: 21, column: 6)
!6304 = !DILocation(line: 0, scope: !6296)
!6305 = !DILocation(line: 17, column: 27, scope: !6296)
!6306 = !DILocation(line: 19, column: 2, scope: !6296)
!6307 = !DILocation(line: 21, column: 6, scope: !6303)
!6308 = !DILocation(line: 21, column: 6, scope: !6296)
!6309 = !DILocation(line: 22, column: 3, scope: !6302)
!6310 = !DILocation(line: 0, scope: !6302)
!6311 = !DILocation(line: 25, column: 8, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !5830, line: 25, column: 8)
!6313 = distinct !DILexicalBlock(scope: !6302, file: !5830, line: 24, column: 13)
!6314 = !DILocation(line: 25, column: 35, scope: !6312)
!6315 = !DILocation(line: 25, column: 8, scope: !6313)
!6316 = !DILocation(line: 28, column: 28, scope: !6313)
!6317 = !DILocation(line: 28, column: 4, scope: !6313)
!6318 = distinct !{!6318, !6319, !6320}
!6319 = !DILocation(line: 24, column: 3, scope: !6302)
!6320 = !DILocation(line: 29, column: 3, scope: !6302)
!6321 = !DILocation(line: 30, column: 2, scope: !6303)
!6322 = !DILocation(line: 30, column: 2, scope: !6302)
!6323 = !DILocation(line: 32, column: 6, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6296, file: !5830, line: 32, column: 6)
!6325 = !DILocation(line: 32, column: 6, scope: !6296)
!6326 = !DILocation(line: 33, column: 12, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !5830, line: 33, column: 7)
!6328 = distinct !DILexicalBlock(scope: !6324, file: !5830, line: 32, column: 30)
!6329 = !DILocation(line: 33, column: 27, scope: !6327)
!6330 = !DILocation(line: 33, column: 19, scope: !6327)
!6331 = !DILocation(line: 33, column: 7, scope: !6328)
!6332 = !DILocation(line: 37, column: 4, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6327, file: !5830, line: 33, column: 35)
!6334 = !DILocation(line: 38, column: 3, scope: !6333)
!6335 = !DILocation(line: 33, column: 7, scope: !6327)
!6336 = !DILocation(line: 39, column: 30, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6327, file: !5830, line: 38, column: 10)
!6338 = !DILocation(line: 39, column: 52, scope: !6337)
!6339 = !DILocation(line: 39, column: 25, scope: !6337)
!6340 = !DILocation(line: 39, column: 4, scope: !6337)
!6341 = !DILocation(line: 40, column: 13, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6337, file: !5830, line: 40, column: 8)
!6343 = !DILocation(line: 40, column: 8, scope: !6342)
!6344 = !DILocation(line: 40, column: 28, scope: !6342)
!6345 = !DILocation(line: 40, column: 20, scope: !6342)
!6346 = !DILocation(line: 40, column: 8, scope: !6337)
!6347 = !DILocation(line: 41, column: 17, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6342, file: !5830, line: 40, column: 43)
!6349 = !DILocation(line: 42, column: 4, scope: !6348)
!6350 = !DILocation(line: 43, column: 21, scope: !6337)
!6351 = !DILocation(line: 43, column: 4, scope: !6337)
!6352 = !DILocation(line: 46, column: 1, scope: !6296)
!6353 = distinct !DISubprogram(name: "uart_irq_update", scope: !5919, file: !5919, line: 360, type: !2689, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6354)
!6354 = !{!6355}
!6355 = !DILocalVariable(name: "dev", arg: 1, scope: !6353, file: !5919, line: 360, type: !2668)
!6356 = !DILocation(line: 0, scope: !6353)
!6357 = !DILocation(line: 368, column: 2, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6353, file: !5919, line: 368, column: 2)
!6359 = !{i64 2152469129}
!6360 = !DILocation(line: 369, column: 9, scope: !6353)
!6361 = !DILocation(line: 369, column: 2, scope: !6353)
!6362 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !225, file: !225, line: 1024, type: !2689, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6363)
!6363 = !{!6364, !6365}
!6364 = !DILocalVariable(name: "dev", arg: 1, scope: !6362, file: !225, line: 1024, type: !2668)
!6365 = !DILocalVariable(name: "api", scope: !6362, file: !225, line: 1027, type: !2660)
!6366 = !DILocation(line: 0, scope: !6362)
!6367 = !DILocation(line: 1028, column: 40, scope: !6362)
!6368 = !DILocation(line: 1030, column: 11, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6362, file: !225, line: 1030, column: 6)
!6370 = !DILocation(line: 1030, column: 24, scope: !6369)
!6371 = !DILocation(line: 1030, column: 6, scope: !6362)
!6372 = !DILocation(line: 1033, column: 9, scope: !6362)
!6373 = !DILocation(line: 1033, column: 2, scope: !6362)
!6374 = !DILocation(line: 1038, column: 1, scope: !6362)
!6375 = distinct !DISubprogram(name: "uart_fifo_read", scope: !225, file: !225, line: 785, type: !2715, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6376)
!6376 = !{!6377, !6378, !6379, !6380}
!6377 = !DILocalVariable(name: "dev", arg: 1, scope: !6375, file: !225, line: 785, type: !2668)
!6378 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6375, file: !225, line: 785, type: !283)
!6379 = !DILocalVariable(name: "size", arg: 3, scope: !6375, file: !225, line: 786, type: !284)
!6380 = !DILocalVariable(name: "api", scope: !6375, file: !225, line: 789, type: !2660)
!6381 = !DILocation(line: 0, scope: !6375)
!6382 = !DILocation(line: 790, column: 40, scope: !6375)
!6383 = !DILocation(line: 792, column: 11, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6375, file: !225, line: 792, column: 6)
!6385 = !DILocation(line: 792, column: 21, scope: !6384)
!6386 = !DILocation(line: 792, column: 6, scope: !6375)
!6387 = !DILocation(line: 796, column: 9, scope: !6375)
!6388 = !DILocation(line: 796, column: 2, scope: !6375)
!6389 = !DILocation(line: 803, column: 1, scope: !6375)
!6390 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5830, file: !5830, line: 48, type: !5930, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6391)
!6391 = !{!6392, !6393, !6394}
!6392 = !DILocalVariable(name: "tty", arg: 1, scope: !6390, file: !5830, line: 48, type: !5835)
!6393 = !DILocalVariable(name: "c", arg: 2, scope: !6390, file: !5830, line: 48, type: !176)
!6394 = !DILocalVariable(name: "rx_next", scope: !6390, file: !5830, line: 50, type: !103)
!6395 = !DILocation(line: 0, scope: !6390)
!6396 = !DILocation(line: 50, column: 21, scope: !6390)
!6397 = !DILocation(line: 50, column: 16, scope: !6390)
!6398 = !DILocation(line: 50, column: 28, scope: !6390)
!6399 = !DILocation(line: 52, column: 22, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6390, file: !5830, line: 52, column: 6)
!6401 = !DILocation(line: 52, column: 14, scope: !6400)
!6402 = !DILocation(line: 52, column: 6, scope: !6390)
!6403 = !DILocation(line: 56, column: 22, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6390, file: !5830, line: 56, column: 6)
!6405 = !DILocation(line: 56, column: 17, scope: !6404)
!6406 = !DILocation(line: 56, column: 14, scope: !6404)
!6407 = !DILocation(line: 56, column: 6, scope: !6390)
!6408 = !DILocation(line: 58, column: 3, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6404, file: !5830, line: 56, column: 30)
!6410 = !DILocation(line: 59, column: 3, scope: !6409)
!6411 = !DILocation(line: 62, column: 7, scope: !6390)
!6412 = !DILocation(line: 62, column: 2, scope: !6390)
!6413 = !DILocation(line: 62, column: 31, scope: !6390)
!6414 = !DILocation(line: 63, column: 16, scope: !6390)
!6415 = !DILocation(line: 63, column: 14, scope: !6390)
!6416 = !DILocation(line: 64, column: 19, scope: !6390)
!6417 = !DILocation(line: 64, column: 2, scope: !6390)
!6418 = !DILocation(line: 66, column: 2, scope: !6390)
!6419 = !DILocation(line: 67, column: 1, scope: !6390)
!6420 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !225, file: !225, line: 910, type: !2689, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6421)
!6421 = !{!6422, !6423}
!6422 = !DILocalVariable(name: "dev", arg: 1, scope: !6420, file: !225, line: 910, type: !2668)
!6423 = !DILocalVariable(name: "api", scope: !6420, file: !225, line: 913, type: !2660)
!6424 = !DILocation(line: 0, scope: !6420)
!6425 = !DILocation(line: 914, column: 40, scope: !6420)
!6426 = !DILocation(line: 916, column: 11, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6420, file: !225, line: 916, column: 6)
!6428 = !DILocation(line: 916, column: 24, scope: !6427)
!6429 = !DILocation(line: 916, column: 6, scope: !6420)
!6430 = !DILocation(line: 920, column: 9, scope: !6420)
!6431 = !DILocation(line: 920, column: 2, scope: !6420)
!6432 = !DILocation(line: 925, column: 1, scope: !6420)
!6433 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5919, file: !5919, line: 217, type: !2719, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6434)
!6434 = !{!6435}
!6435 = !DILocalVariable(name: "dev", arg: 1, scope: !6433, file: !5919, line: 217, type: !2668)
!6436 = !DILocation(line: 0, scope: !6433)
!6437 = !DILocation(line: 226, column: 2, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6433, file: !5919, line: 226, column: 2)
!6439 = !{i64 2152468721}
!6440 = !DILocation(line: 227, column: 2, scope: !6433)
!6441 = !DILocation(line: 228, column: 1, scope: !6433)
!6442 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !225, file: !225, line: 699, type: !2711, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6443)
!6443 = !{!6444, !6445, !6446, !6447}
!6444 = !DILocalVariable(name: "dev", arg: 1, scope: !6442, file: !225, line: 699, type: !2668)
!6445 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6442, file: !225, line: 700, type: !277)
!6446 = !DILocalVariable(name: "size", arg: 3, scope: !6442, file: !225, line: 701, type: !103)
!6447 = !DILocalVariable(name: "api", scope: !6442, file: !225, line: 704, type: !2660)
!6448 = !DILocation(line: 0, scope: !6442)
!6449 = !DILocation(line: 705, column: 40, scope: !6442)
!6450 = !DILocation(line: 707, column: 11, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6442, file: !225, line: 707, column: 6)
!6452 = !DILocation(line: 707, column: 21, scope: !6451)
!6453 = !DILocation(line: 707, column: 6, scope: !6442)
!6454 = !DILocation(line: 711, column: 9, scope: !6442)
!6455 = !DILocation(line: 711, column: 2, scope: !6442)
!6456 = !DILocation(line: 718, column: 1, scope: !6442)
!6457 = distinct !DISubprogram(name: "k_sem_give", scope: !3669, file: !3669, line: 1061, type: !6458, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6460)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{null, !6032}
!6460 = !{!6461}
!6461 = !DILocalVariable(name: "sem", arg: 1, scope: !6457, file: !3669, line: 1061, type: !6032)
!6462 = !DILocation(line: 0, scope: !6457)
!6463 = !DILocation(line: 1070, column: 2, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6457, file: !3669, line: 1070, column: 2)
!6465 = !{i64 2152220675}
!6466 = !DILocation(line: 1071, column: 2, scope: !6457)
!6467 = !DILocation(line: 1072, column: 1, scope: !6457)
!6468 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !225, file: !225, line: 878, type: !2719, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6469)
!6469 = !{!6470, !6471}
!6470 = !DILocalVariable(name: "dev", arg: 1, scope: !6468, file: !225, line: 878, type: !2668)
!6471 = !DILocalVariable(name: "api", scope: !6468, file: !225, line: 881, type: !2660)
!6472 = !DILocation(line: 0, scope: !6468)
!6473 = !DILocation(line: 882, column: 40, scope: !6468)
!6474 = !DILocation(line: 884, column: 11, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6468, file: !225, line: 884, column: 6)
!6476 = !DILocation(line: 884, column: 26, scope: !6475)
!6477 = !DILocation(line: 884, column: 6, scope: !6468)
!6478 = !DILocation(line: 885, column: 3, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6475, file: !225, line: 884, column: 35)
!6480 = !DILocation(line: 886, column: 2, scope: !6479)
!6481 = !DILocation(line: 890, column: 1, scope: !6468)
!6482 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !225, file: !225, line: 1136, type: !2689, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6483)
!6483 = !{!6484, !6485}
!6484 = !DILocalVariable(name: "dev", arg: 1, scope: !6482, file: !225, line: 1136, type: !2668)
!6485 = !DILocalVariable(name: "api", scope: !6482, file: !225, line: 1139, type: !2660)
!6486 = !DILocation(line: 0, scope: !6482)
!6487 = !DILocation(line: 1140, column: 40, scope: !6482)
!6488 = !DILocation(line: 1142, column: 11, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6482, file: !225, line: 1142, column: 6)
!6490 = !DILocation(line: 1142, column: 22, scope: !6489)
!6491 = !DILocation(line: 1142, column: 6, scope: !6482)
!6492 = !DILocation(line: 1145, column: 9, scope: !6482)
!6493 = !DILocation(line: 1145, column: 2, scope: !6482)
!6494 = !DILocation(line: 1150, column: 1, scope: !6482)
!6495 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5830, file: !5830, line: 265, type: !6496, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6498)
!6496 = !DISubroutineType(types: !6497)
!6497 = !{!103, !5835, !102, !369}
!6498 = !{!6499, !6500, !6501}
!6499 = !DILocalVariable(name: "tty", arg: 1, scope: !6495, file: !5830, line: 265, type: !5835)
!6500 = !DILocalVariable(name: "buf", arg: 2, scope: !6495, file: !5830, line: 265, type: !102)
!6501 = !DILocalVariable(name: "size", arg: 3, scope: !6495, file: !5830, line: 265, type: !369)
!6502 = !DILocation(line: 0, scope: !6495)
!6503 = !DILocation(line: 267, column: 27, scope: !6495)
!6504 = !DILocation(line: 267, column: 2, scope: !6495)
!6505 = !DILocation(line: 269, column: 7, scope: !6495)
!6506 = !DILocation(line: 269, column: 18, scope: !6495)
!6507 = !DILocation(line: 270, column: 7, scope: !6495)
!6508 = !DILocation(line: 270, column: 21, scope: !6495)
!6509 = !DILocation(line: 272, column: 11, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6495, file: !5830, line: 272, column: 6)
!6511 = !DILocation(line: 272, column: 6, scope: !6495)
!6512 = !DILocation(line: 273, column: 20, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !5830, line: 272, column: 16)
!6514 = !DILocation(line: 273, column: 3, scope: !6513)
!6515 = !DILocation(line: 274, column: 27, scope: !6513)
!6516 = !DILocation(line: 274, column: 3, scope: !6513)
!6517 = !DILocation(line: 275, column: 2, scope: !6513)
!6518 = !DILocation(line: 277, column: 2, scope: !6495)
!6519 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5919, file: !5919, line: 265, type: !2719, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6520)
!6520 = !{!6521}
!6521 = !DILocalVariable(name: "dev", arg: 1, scope: !6519, file: !5919, line: 265, type: !2668)
!6522 = !DILocation(line: 0, scope: !6519)
!6523 = !DILocation(line: 274, column: 2, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6519, file: !5919, line: 274, column: 2)
!6525 = !{i64 2152468857}
!6526 = !DILocation(line: 275, column: 2, scope: !6519)
!6527 = !DILocation(line: 276, column: 1, scope: !6519)
!6528 = distinct !DISubprogram(name: "k_sem_init", scope: !3669, file: !3669, line: 1026, type: !6529, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6531)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{!103, !6032, !32, !32}
!6531 = !{!6532, !6533, !6534}
!6532 = !DILocalVariable(name: "sem", arg: 1, scope: !6528, file: !3669, line: 1026, type: !6032)
!6533 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6528, file: !3669, line: 1026, type: !32)
!6534 = !DILocalVariable(name: "limit", arg: 3, scope: !6528, file: !3669, line: 1026, type: !32)
!6535 = !DILocation(line: 0, scope: !6528)
!6536 = !DILocation(line: 1036, column: 2, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6528, file: !3669, line: 1036, column: 2)
!6538 = !{i64 2152220539}
!6539 = !DILocation(line: 1037, column: 9, scope: !6528)
!6540 = !DILocation(line: 1037, column: 2, scope: !6528)
!6541 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5919, file: !5919, line: 241, type: !2719, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6542)
!6542 = !{!6543}
!6543 = !DILocalVariable(name: "dev", arg: 1, scope: !6541, file: !5919, line: 241, type: !2668)
!6544 = !DILocation(line: 0, scope: !6541)
!6545 = !DILocation(line: 250, column: 2, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6541, file: !5919, line: 250, column: 2)
!6547 = !{i64 2152468789}
!6548 = !DILocation(line: 251, column: 2, scope: !6541)
!6549 = !DILocation(line: 252, column: 1, scope: !6541)
!6550 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !225, file: !225, line: 934, type: !2719, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6551)
!6551 = !{!6552, !6553}
!6552 = !DILocalVariable(name: "dev", arg: 1, scope: !6550, file: !225, line: 934, type: !2668)
!6553 = !DILocalVariable(name: "api", scope: !6550, file: !225, line: 937, type: !2660)
!6554 = !DILocation(line: 0, scope: !6550)
!6555 = !DILocation(line: 938, column: 40, scope: !6550)
!6556 = !DILocation(line: 940, column: 11, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6550, file: !225, line: 940, column: 6)
!6558 = !DILocation(line: 940, column: 25, scope: !6557)
!6559 = !DILocation(line: 940, column: 6, scope: !6550)
!6560 = !DILocation(line: 941, column: 3, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6557, file: !225, line: 940, column: 34)
!6562 = !DILocation(line: 942, column: 2, scope: !6561)
!6563 = !DILocation(line: 946, column: 1, scope: !6550)
!6564 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !225, file: !225, line: 955, type: !2719, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6565)
!6565 = !{!6566, !6567}
!6566 = !DILocalVariable(name: "dev", arg: 1, scope: !6564, file: !225, line: 955, type: !2668)
!6567 = !DILocalVariable(name: "api", scope: !6564, file: !225, line: 958, type: !2660)
!6568 = !DILocation(line: 0, scope: !6564)
!6569 = !DILocation(line: 959, column: 40, scope: !6564)
!6570 = !DILocation(line: 961, column: 11, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6564, file: !225, line: 961, column: 6)
!6572 = !DILocation(line: 961, column: 26, scope: !6571)
!6573 = !DILocation(line: 961, column: 6, scope: !6564)
!6574 = !DILocation(line: 962, column: 3, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6571, file: !225, line: 961, column: 35)
!6576 = !DILocation(line: 963, column: 2, scope: !6575)
!6577 = !DILocation(line: 967, column: 1, scope: !6564)
!6578 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5830, file: !5830, line: 280, type: !6496, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6579)
!6579 = !{!6580, !6581, !6582}
!6580 = !DILocalVariable(name: "tty", arg: 1, scope: !6578, file: !5830, line: 280, type: !5835)
!6581 = !DILocalVariable(name: "buf", arg: 2, scope: !6578, file: !5830, line: 280, type: !102)
!6582 = !DILocalVariable(name: "size", arg: 3, scope: !6578, file: !5830, line: 280, type: !369)
!6583 = !DILocation(line: 0, scope: !6578)
!6584 = !DILocation(line: 282, column: 27, scope: !6578)
!6585 = !DILocation(line: 282, column: 2, scope: !6578)
!6586 = !DILocation(line: 284, column: 7, scope: !6578)
!6587 = !DILocation(line: 284, column: 18, scope: !6578)
!6588 = !DILocation(line: 285, column: 7, scope: !6578)
!6589 = !DILocation(line: 285, column: 21, scope: !6578)
!6590 = !DILocation(line: 287, column: 19, scope: !6578)
!6591 = !DILocation(line: 287, column: 32, scope: !6578)
!6592 = !DILocation(line: 287, column: 2, scope: !6578)
!6593 = !DILocation(line: 293, column: 2, scope: !6578)
!6594 = distinct !DISubprogram(name: "console_write", scope: !310, file: !310, line: 18, type: !6595, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !6597)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{!5833, !102, !13, !369}
!6597 = !{!6598, !6599, !6600}
!6598 = !DILocalVariable(name: "dummy", arg: 1, scope: !6594, file: !310, line: 18, type: !102)
!6599 = !DILocalVariable(name: "buf", arg: 2, scope: !6594, file: !310, line: 18, type: !13)
!6600 = !DILocalVariable(name: "size", arg: 3, scope: !6594, file: !310, line: 18, type: !369)
!6601 = !DILocation(line: 0, scope: !6594)
!6602 = !DILocation(line: 22, column: 9, scope: !6594)
!6603 = !DILocation(line: 22, column: 2, scope: !6594)
!6604 = distinct !DISubprogram(name: "console_read", scope: !310, file: !310, line: 25, type: !6605, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !6607)
!6605 = !DISubroutineType(types: !6606)
!6606 = !{!5833, !102, !102, !369}
!6607 = !{!6608, !6609, !6610}
!6608 = !DILocalVariable(name: "dummy", arg: 1, scope: !6604, file: !310, line: 25, type: !102)
!6609 = !DILocalVariable(name: "buf", arg: 2, scope: !6604, file: !310, line: 25, type: !102)
!6610 = !DILocalVariable(name: "size", arg: 3, scope: !6604, file: !310, line: 25, type: !369)
!6611 = !DILocation(line: 0, scope: !6604)
!6612 = !DILocation(line: 29, column: 9, scope: !6604)
!6613 = !DILocation(line: 29, column: 2, scope: !6604)
!6614 = distinct !DISubprogram(name: "console_putchar", scope: !310, file: !310, line: 32, type: !1148, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !6615)
!6615 = !{!6616}
!6616 = !DILocalVariable(name: "c", arg: 1, scope: !6614, file: !310, line: 32, type: !108)
!6617 = !DILocation(line: 0, scope: !6614)
!6618 = !DILocation(line: 34, column: 9, scope: !6614)
!6619 = !DILocation(line: 34, column: 2, scope: !6614)
!6620 = distinct !DISubprogram(name: "console_getchar", scope: !310, file: !310, line: 37, type: !6621, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !6623)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{!103}
!6623 = !{!6624, !6625}
!6624 = !DILocalVariable(name: "c", scope: !6620, file: !310, line: 39, type: !176)
!6625 = !DILocalVariable(name: "res", scope: !6620, file: !310, line: 40, type: !103)
!6626 = !DILocation(line: 39, column: 2, scope: !6620)
!6627 = !DILocation(line: 0, scope: !6620)
!6628 = !DILocation(line: 42, column: 8, scope: !6620)
!6629 = !DILocation(line: 43, column: 10, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6620, file: !310, line: 43, column: 6)
!6631 = !DILocation(line: 43, column: 6, scope: !6620)
!6632 = !DILocation(line: 48, column: 1, scope: !6620)
!6633 = distinct !DISubprogram(name: "console_init", scope: !310, file: !310, line: 50, type: !6621, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !6634)
!6634 = !{!6635, !6636, !6637}
!6635 = !DILocalVariable(name: "uart_dev", scope: !6633, file: !310, line: 52, type: !231)
!6636 = !DILocalVariable(name: "ret", scope: !6633, file: !310, line: 53, type: !103)
!6637 = !DILocalVariable(name: "api", scope: !6638, file: !310, line: 68, type: !222)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !310, line: 67, column: 71)
!6639 = distinct !DILexicalBlock(scope: !6633, file: !310, line: 67, column: 6)
!6640 = !DILocation(line: 0, scope: !6633)
!6641 = !DILocation(line: 56, column: 7, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6633, file: !310, line: 56, column: 6)
!6643 = !DILocation(line: 56, column: 6, scope: !6633)
!6644 = !DILocation(line: 60, column: 8, scope: !6633)
!6645 = !DILocation(line: 62, column: 6, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6633, file: !310, line: 62, column: 6)
!6647 = !DILocation(line: 62, column: 6, scope: !6633)
!6648 = !DILocation(line: 69, column: 46, scope: !6638)
!6649 = !DILocation(line: 0, scope: !6638)
!6650 = !DILocation(line: 70, column: 13, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6638, file: !310, line: 70, column: 7)
!6652 = !DILocation(line: 70, column: 8, scope: !6651)
!6653 = !DILocation(line: 75, column: 2, scope: !6633)
!6654 = !DILocation(line: 76, column: 2, scope: !6633)
!6655 = !DILocation(line: 78, column: 2, scope: !6633)
!6656 = !DILocation(line: 79, column: 1, scope: !6633)
!6657 = distinct !DISubprogram(name: "device_is_ready", scope: !6658, file: !6658, line: 47, type: !6659, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !6661)
!6658 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!179, !231}
!6661 = !{!6662}
!6662 = !DILocalVariable(name: "dev", arg: 1, scope: !6657, file: !6658, line: 47, type: !231)
!6663 = !DILocation(line: 0, scope: !6657)
!6664 = !DILocation(line: 55, column: 2, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6657, file: !6658, line: 55, column: 2)
!6666 = !{i64 2152381070}
!6667 = !DILocation(line: 56, column: 9, scope: !6657)
!6668 = !DILocation(line: 56, column: 2, scope: !6657)
!6669 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !165, file: !165, line: 730, type: !6659, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !6670)
!6670 = !{!6671}
!6671 = !DILocalVariable(name: "dev", arg: 1, scope: !6669, file: !165, line: 730, type: !231)
!6672 = !DILocation(line: 0, scope: !6669)
!6673 = !DILocation(line: 732, column: 9, scope: !6669)
!6674 = !DILocation(line: 732, column: 2, scope: !6669)
!6675 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6676, file: !6676, line: 57, type: !6677, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !6723)
!6676 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6677 = !DISubroutineType(types: !6678)
!6678 = !{null, !32, !6679}
!6679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6680, size: 32)
!6680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6681)
!6681 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2859, line: 141, baseType: !6682)
!6682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2859, line: 97, size: 256, elements: !6683)
!6683 = !{!6684}
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6682, file: !2859, line: 107, baseType: !6685, size: 256)
!6685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2859, line: 98, size: 256, elements: !6686)
!6686 = !{!6687, !6692, !6697, !6702, !6707, !6712, !6717, !6722}
!6687 = !DIDerivedType(tag: DW_TAG_member, scope: !6685, file: !2859, line: 99, baseType: !6688, size: 32)
!6688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6685, file: !2859, line: 99, size: 32, elements: !6689)
!6689 = !{!6690, !6691}
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6688, file: !2859, line: 99, baseType: !132, size: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6688, file: !2859, line: 99, baseType: !132, size: 32)
!6692 = !DIDerivedType(tag: DW_TAG_member, scope: !6685, file: !2859, line: 100, baseType: !6693, size: 32, offset: 32)
!6693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6685, file: !2859, line: 100, size: 32, elements: !6694)
!6694 = !{!6695, !6696}
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6693, file: !2859, line: 100, baseType: !132, size: 32)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6693, file: !2859, line: 100, baseType: !132, size: 32)
!6697 = !DIDerivedType(tag: DW_TAG_member, scope: !6685, file: !2859, line: 101, baseType: !6698, size: 32, offset: 64)
!6698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6685, file: !2859, line: 101, size: 32, elements: !6699)
!6699 = !{!6700, !6701}
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6698, file: !2859, line: 101, baseType: !132, size: 32)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6698, file: !2859, line: 101, baseType: !132, size: 32)
!6702 = !DIDerivedType(tag: DW_TAG_member, scope: !6685, file: !2859, line: 102, baseType: !6703, size: 32, offset: 96)
!6703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6685, file: !2859, line: 102, size: 32, elements: !6704)
!6704 = !{!6705, !6706}
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6703, file: !2859, line: 102, baseType: !132, size: 32)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6703, file: !2859, line: 102, baseType: !132, size: 32)
!6707 = !DIDerivedType(tag: DW_TAG_member, scope: !6685, file: !2859, line: 103, baseType: !6708, size: 32, offset: 128)
!6708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6685, file: !2859, line: 103, size: 32, elements: !6709)
!6709 = !{!6710, !6711}
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6708, file: !2859, line: 103, baseType: !132, size: 32)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6708, file: !2859, line: 103, baseType: !132, size: 32)
!6712 = !DIDerivedType(tag: DW_TAG_member, scope: !6685, file: !2859, line: 104, baseType: !6713, size: 32, offset: 160)
!6713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6685, file: !2859, line: 104, size: 32, elements: !6714)
!6714 = !{!6715, !6716}
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6713, file: !2859, line: 104, baseType: !132, size: 32)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6713, file: !2859, line: 104, baseType: !132, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, scope: !6685, file: !2859, line: 105, baseType: !6718, size: 32, offset: 192)
!6718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6685, file: !2859, line: 105, size: 32, elements: !6719)
!6719 = !{!6720, !6721}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6718, file: !2859, line: 105, baseType: !132, size: 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6718, file: !2859, line: 105, baseType: !132, size: 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6685, file: !2859, line: 106, baseType: !132, size: 32, offset: 224)
!6723 = !{!6724, !6725}
!6724 = !DILocalVariable(name: "reason", arg: 1, scope: !6675, file: !6676, line: 57, type: !32)
!6725 = !DILocalVariable(name: "esf", arg: 2, scope: !6675, file: !6676, line: 57, type: !6679)
!6726 = !DILocation(line: 0, scope: !6675)
!6727 = !DILocation(line: 63, column: 2, scope: !6675)
!6728 = !DILocation(line: 64, column: 1, scope: !6675)
!6729 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6676, file: !6676, line: 82, type: !6730, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !6745)
!6730 = !DISubroutineType(types: !6731)
!6731 = !{null, !6679, !6732}
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 32)
!6733 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !449, line: 37, baseType: !6734)
!6734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !6735)
!6735 = !{!6736, !6737, !6738, !6739, !6740, !6741, !6742, !6743, !6744}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6734, file: !449, line: 26, baseType: !132, size: 32)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6734, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6734, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6734, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6734, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6734, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6734, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6734, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6734, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!6745 = !{!6746, !6747, !6748}
!6746 = !DILocalVariable(name: "esf", arg: 1, scope: !6729, file: !6676, line: 82, type: !6679)
!6747 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6729, file: !6676, line: 82, type: !6732)
!6748 = !DILocalVariable(name: "reason", scope: !6729, file: !6676, line: 88, type: !32)
!6749 = !DILocation(line: 0, scope: !6729)
!6750 = !DILocation(line: 88, column: 35, scope: !6729)
!6751 = !DILocation(line: 108, column: 2, scope: !6729)
!6752 = !DILocation(line: 131, column: 1, scope: !6729)
!6753 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6676, file: !6676, line: 133, type: !6754, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !6756)
!6754 = !DISubroutineType(types: !6755)
!6755 = !{null, !102}
!6756 = !{!6757, !6758, !6759}
!6757 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6753, file: !6676, line: 133, type: !102)
!6758 = !DILocalVariable(name: "ssf_contents", scope: !6753, file: !6676, line: 135, type: !916)
!6759 = !DILocalVariable(name: "oops_esf", scope: !6753, file: !6676, line: 136, type: !6681)
!6760 = !DILocation(line: 0, scope: !6753)
!6761 = !DILocation(line: 136, column: 2, scope: !6753)
!6762 = !DILocation(line: 136, column: 15, scope: !6753)
!6763 = !DILocation(line: 139, column: 22, scope: !6753)
!6764 = !DILocation(line: 139, column: 17, scope: !6753)
!6765 = !DILocation(line: 139, column: 20, scope: !6753)
!6766 = !DILocation(line: 141, column: 2, scope: !6753)
!6767 = !DILocation(line: 142, column: 2, scope: !6753)
!6768 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6769, file: !6769, line: 40, type: !5791, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !6770)
!6769 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6770 = !{!6771}
!6771 = !DILocalVariable(name: "irq", arg: 1, scope: !6768, file: !6769, line: 40, type: !32)
!6772 = !DILocation(line: 0, scope: !6768)
!6773 = !DILocation(line: 42, column: 2, scope: !6768)
!6774 = !DILocation(line: 43, column: 1, scope: !6768)
!6775 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !520, file: !520, line: 1508, type: !6776, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !6778)
!6776 = !DISubroutineType(types: !6777)
!6777 = !{null, !843}
!6778 = !{!6779}
!6779 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6775, file: !520, line: 1508, type: !843)
!6780 = !DILocation(line: 0, scope: !6775)
!6781 = !DILocation(line: 1510, column: 23, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6775, file: !520, line: 1510, column: 7)
!6783 = !DILocation(line: 1510, column: 7, scope: !6775)
!6784 = !DILocation(line: 1512, column: 5, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6782, file: !520, line: 1511, column: 3)
!6786 = !{i64 2149969346}
!6787 = !DILocation(line: 1513, column: 81, scope: !6785)
!6788 = !DILocation(line: 1513, column: 60, scope: !6785)
!6789 = !DILocation(line: 1513, column: 34, scope: !6785)
!6790 = !DILocation(line: 1513, column: 5, scope: !6785)
!6791 = !DILocation(line: 1513, column: 43, scope: !6785)
!6792 = !DILocation(line: 1514, column: 5, scope: !6785)
!6793 = !{i64 2149969460}
!6794 = !DILocation(line: 1515, column: 3, scope: !6785)
!6795 = !DILocation(line: 1516, column: 1, scope: !6775)
!6796 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6769, file: !6769, line: 45, type: !5791, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !6797)
!6797 = !{!6798}
!6798 = !DILocalVariable(name: "irq", arg: 1, scope: !6796, file: !6769, line: 45, type: !32)
!6799 = !DILocation(line: 0, scope: !6796)
!6800 = !DILocation(line: 47, column: 2, scope: !6796)
!6801 = !DILocation(line: 48, column: 1, scope: !6796)
!6802 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !520, file: !520, line: 1546, type: !6776, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !6803)
!6803 = !{!6804}
!6804 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6802, file: !520, line: 1546, type: !843)
!6805 = !DILocation(line: 0, scope: !6802)
!6806 = !DILocation(line: 1548, column: 23, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6802, file: !520, line: 1548, column: 7)
!6808 = !DILocation(line: 1548, column: 7, scope: !6802)
!6809 = !DILocation(line: 1550, column: 81, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6807, file: !520, line: 1549, column: 3)
!6811 = !DILocation(line: 1550, column: 60, scope: !6810)
!6812 = !DILocation(line: 1550, column: 34, scope: !6810)
!6813 = !DILocation(line: 1550, column: 5, scope: !6810)
!6814 = !DILocation(line: 1550, column: 43, scope: !6810)
!6815 = !DILocation(line: 271, column: 3, scope: !6816, inlinedAt: !6818)
!6816 = distinct !DISubprogram(name: "__DSB", scope: !6817, file: !6817, line: 269, type: !3229, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !486)
!6817 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6818 = distinct !DILocation(line: 1551, column: 5, scope: !6810)
!6819 = !{i64 2426848}
!6820 = !DILocation(line: 260, column: 3, scope: !6821, inlinedAt: !6822)
!6821 = distinct !DISubprogram(name: "__ISB", scope: !6817, file: !6817, line: 258, type: !3229, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !486)
!6822 = distinct !DILocation(line: 1552, column: 5, scope: !6810)
!6823 = !{i64 2426565}
!6824 = !DILocation(line: 1553, column: 3, scope: !6810)
!6825 = !DILocation(line: 1554, column: 1, scope: !6802)
!6826 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6769, file: !6769, line: 50, type: !6827, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !6829)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{!103, !32}
!6829 = !{!6830}
!6830 = !DILocalVariable(name: "irq", arg: 1, scope: !6826, file: !6769, line: 50, type: !32)
!6831 = !DILocation(line: 0, scope: !6826)
!6832 = !DILocation(line: 52, column: 20, scope: !6826)
!6833 = !DILocation(line: 52, column: 9, scope: !6826)
!6834 = !DILocation(line: 52, column: 41, scope: !6826)
!6835 = !DILocation(line: 52, column: 39, scope: !6826)
!6836 = !DILocation(line: 52, column: 2, scope: !6826)
!6837 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6769, file: !6769, line: 64, type: !6838, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !6840)
!6838 = !DISubroutineType(types: !6839)
!6839 = !{null, !32, !32, !132}
!6840 = !{!6841, !6842, !6843}
!6841 = !DILocalVariable(name: "irq", arg: 1, scope: !6837, file: !6769, line: 64, type: !32)
!6842 = !DILocalVariable(name: "prio", arg: 2, scope: !6837, file: !6769, line: 64, type: !32)
!6843 = !DILocalVariable(name: "flags", arg: 3, scope: !6837, file: !6769, line: 64, type: !132)
!6844 = !DILocation(line: 0, scope: !6837)
!6845 = !DILocation(line: 83, column: 8, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6769, line: 82, column: 9)
!6847 = distinct !DILexicalBlock(scope: !6837, file: !6769, line: 76, column: 6)
!6848 = !DILocation(line: 95, column: 2, scope: !6837)
!6849 = !DILocation(line: 96, column: 1, scope: !6837)
!6850 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !520, file: !520, line: 1638, type: !6851, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !6853)
!6851 = !DISubroutineType(types: !6852)
!6852 = !{null, !843, !132}
!6853 = !{!6854, !6855}
!6854 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6850, file: !520, line: 1638, type: !843)
!6855 = !DILocalVariable(name: "priority", arg: 2, scope: !6850, file: !520, line: 1638, type: !132)
!6856 = !DILocation(line: 0, scope: !6850)
!6857 = !DILocation(line: 0, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6850, file: !520, line: 1640, column: 7)
!6859 = !DILocation(line: 1640, column: 7, scope: !6850)
!6860 = !DILocation(line: 1648, column: 1, scope: !6850)
!6861 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6769, file: !6769, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !6862)
!6862 = !{!6863}
!6863 = !DILocalVariable(name: "unused", arg: 1, scope: !6861, file: !6769, line: 155, type: !13)
!6864 = !DILocation(line: 0, scope: !6861)
!6865 = !DILocation(line: 159, column: 2, scope: !6861)
!6866 = !DILocation(line: 160, column: 1, scope: !6861)
!6867 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6868, file: !6868, line: 87, type: !3229, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !486)
!6868 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6869 = !DILocation(line: 89, column: 2, scope: !6867)
!6870 = !DILocation(line: 90, column: 2, scope: !6867)
!6871 = !DILocation(line: 91, column: 1, scope: !6867)
!6872 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6868, file: !6868, line: 23, type: !3229, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!6873 = !DISubprogram(name: "z_arm_int_exit", scope: !6874, file: !6874, line: 153, type: !3229, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!6874 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6875 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6876, file: !6876, line: 256, type: !3229, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !486)
!6876 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6877 = !DILocation(line: 258, column: 2, scope: !6875)
!6878 = !DILocation(line: 262, column: 2, scope: !6875)
!6879 = !DILocation(line: 263, column: 2, scope: !6875)
!6880 = !DILocation(line: 267, column: 2, scope: !6875)
!6881 = !DILocation(line: 268, column: 2, scope: !6875)
!6882 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6876, file: !6876, line: 53, type: !3229, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !486)
!6883 = !DILocation(line: 55, column: 12, scope: !6882)
!6884 = !DILocation(line: 271, column: 3, scope: !6885, inlinedAt: !6886)
!6885 = distinct !DISubprogram(name: "__DSB", scope: !6817, file: !6817, line: 269, type: !3229, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !486)
!6886 = distinct !DILocation(line: 56, column: 2, scope: !6882)
!6887 = !{i64 2425519}
!6888 = !DILocation(line: 260, column: 3, scope: !6889, inlinedAt: !6890)
!6889 = distinct !DISubprogram(name: "__ISB", scope: !6817, file: !6817, line: 258, type: !3229, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !486)
!6890 = distinct !DILocation(line: 57, column: 2, scope: !6882)
!6891 = !{i64 2425236}
!6892 = !DILocation(line: 58, column: 1, scope: !6882)
!6893 = distinct !DISubprogram(name: "arch_swap", scope: !6894, file: !6894, line: 33, type: !6827, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !6895)
!6894 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6895 = !{!6896}
!6896 = !DILocalVariable(name: "key", arg: 1, scope: !6893, file: !6894, line: 33, type: !32)
!6897 = !DILocation(line: 0, scope: !6893)
!6898 = !DILocation(line: 36, column: 2, scope: !6893)
!6899 = !DILocation(line: 36, column: 17, scope: !6893)
!6900 = !DILocation(line: 36, column: 25, scope: !6893)
!6901 = !DILocation(line: 37, column: 37, scope: !6893)
!6902 = !DILocation(line: 37, column: 17, scope: !6893)
!6903 = !DILocation(line: 37, column: 35, scope: !6893)
!6904 = !DILocation(line: 41, column: 12, scope: !6893)
!6905 = !DILocalVariable(name: "key", arg: 1, scope: !6906, file: !5780, line: 84, type: !32)
!6906 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !6907)
!6907 = !{!6905}
!6908 = !DILocation(line: 0, scope: !6906, inlinedAt: !6909)
!6909 = distinct !DILocation(line: 44, column: 2, scope: !6893)
!6910 = !DILocation(line: 95, column: 2, scope: !6906, inlinedAt: !6909)
!6911 = !{i64 1648519}
!6912 = !DILocation(line: 53, column: 9, scope: !6893)
!6913 = !DILocation(line: 53, column: 24, scope: !6893)
!6914 = !DILocation(line: 53, column: 2, scope: !6893)
!6915 = distinct !DISubprogram(name: "arch_new_thread", scope: !6916, file: !6916, line: 56, type: !6917, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !7024)
!6916 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6917 = !DISubroutineType(types: !6918)
!6918 = !{null, !6919, !7019, !1142, !3547, !102, !102, !102}
!6919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6920, size: 32)
!6920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !6921)
!6921 = !{!6922, !6980, !6992, !6993, !6994, !6995, !7001, !7014}
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6920, file: !380, line: 247, baseType: !6923, size: 384)
!6923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !6924)
!6924 = !{!6925, !6949, !6956, !6957, !6958, !6967, !6968, !6969}
!6925 = !DIDerivedType(tag: DW_TAG_member, scope: !6923, file: !380, line: 60, baseType: !6926, size: 64)
!6926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6923, file: !380, line: 60, size: 64, elements: !6927)
!6927 = !{!6928, !6943}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6926, file: !380, line: 61, baseType: !6929, size: 64)
!6929 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !6930)
!6930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !6931)
!6931 = !{!6932, !6938}
!6932 = !DIDerivedType(tag: DW_TAG_member, scope: !6930, file: !334, line: 38, baseType: !6933, size: 32)
!6933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6930, file: !334, line: 38, size: 32, elements: !6934)
!6934 = !{!6935, !6937}
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6933, file: !334, line: 39, baseType: !6936, size: 32)
!6936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6930, size: 32)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6933, file: !334, line: 40, baseType: !6936, size: 32)
!6938 = !DIDerivedType(tag: DW_TAG_member, scope: !6930, file: !334, line: 42, baseType: !6939, size: 32, offset: 32)
!6939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6930, file: !334, line: 42, size: 32, elements: !6940)
!6940 = !{!6941, !6942}
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6939, file: !334, line: 43, baseType: !6936, size: 32)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6939, file: !334, line: 44, baseType: !6936, size: 32)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6926, file: !380, line: 62, baseType: !6944, size: 64)
!6944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !6945)
!6945 = !{!6946}
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6944, file: !405, line: 50, baseType: !6947, size: 64)
!6947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6948, size: 64, elements: !410)
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6944, size: 32)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6923, file: !380, line: 68, baseType: !6950, size: 32, offset: 64)
!6950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6951, size: 32)
!6951 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !6952)
!6952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !6953)
!6953 = !{!6954}
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6952, file: !329, line: 232, baseType: !6955, size: 64)
!6955 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !6930)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6923, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6923, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!6958 = !DIDerivedType(tag: DW_TAG_member, scope: !6923, file: !380, line: 90, baseType: !6959, size: 16, offset: 112)
!6959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6923, file: !380, line: 90, size: 16, elements: !6960)
!6960 = !{!6961, !6966}
!6961 = !DIDerivedType(tag: DW_TAG_member, scope: !6959, file: !380, line: 91, baseType: !6962, size: 16)
!6962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6959, file: !380, line: 91, size: 16, elements: !6963)
!6963 = !{!6964, !6965}
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6962, file: !380, line: 96, baseType: !428, size: 8)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6962, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6959, file: !380, line: 100, baseType: !353, size: 16)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6923, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6923, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6923, file: !380, line: 131, baseType: !6970, size: 192, offset: 192)
!6970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !6971)
!6971 = !{!6972, !6973, !6979}
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6970, file: !329, line: 245, baseType: !6929, size: 64)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6970, file: !329, line: 246, baseType: !6974, size: 32, offset: 64)
!6974 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !6975)
!6975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6976, size: 32)
!6976 = !DISubroutineType(types: !6977)
!6977 = !{null, !6978}
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6970, size: 32)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6970, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6920, file: !380, line: 250, baseType: !6981, size: 288, offset: 384)
!6981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !6982)
!6982 = !{!6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990, !6991}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6981, file: !449, line: 26, baseType: !132, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6981, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6981, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6981, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6981, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6981, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6981, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6981, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6981, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6920, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6920, file: !380, line: 256, baseType: !6951, size: 64, offset: 704)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6920, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6920, file: !380, line: 300, baseType: !6996, size: 96, offset: 800)
!6996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !6997)
!6997 = !{!6998, !6999, !7000}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6996, file: !380, line: 153, baseType: !22, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6996, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6996, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6920, file: !380, line: 325, baseType: !7002, size: 32, offset: 896)
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 32)
!7003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !7004)
!7004 = !{!7005, !7011, !7012}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7003, file: !325, line: 5074, baseType: !7006, size: 96)
!7006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !7007)
!7007 = !{!7008, !7009, !7010}
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7006, file: !475, line: 57, baseType: !478, size: 32)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7006, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7006, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7003, file: !325, line: 5075, baseType: !6951, size: 64, offset: 96)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7003, file: !325, line: 5076, baseType: !7013, offset: 160)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6920, file: !380, line: 343, baseType: !7015, size: 64, offset: 928)
!7015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !7016)
!7016 = !{!7017, !7018}
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7015, file: !449, line: 63, baseType: !132, size: 32)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7015, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 32)
!7020 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3548, line: 44, baseType: !7021)
!7021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2201, line: 47, size: 8, elements: !7022)
!7022 = !{!7023}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7021, file: !2201, line: 48, baseType: !108, size: 8)
!7024 = !{!7025, !7026, !7027, !7028, !7029, !7030, !7031, !7032}
!7025 = !DILocalVariable(name: "thread", arg: 1, scope: !6915, file: !6916, line: 56, type: !6919)
!7026 = !DILocalVariable(name: "stack", arg: 2, scope: !6915, file: !6916, line: 56, type: !7019)
!7027 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6915, file: !6916, line: 57, type: !1142)
!7028 = !DILocalVariable(name: "entry", arg: 4, scope: !6915, file: !6916, line: 57, type: !3547)
!7029 = !DILocalVariable(name: "p1", arg: 5, scope: !6915, file: !6916, line: 58, type: !102)
!7030 = !DILocalVariable(name: "p2", arg: 6, scope: !6915, file: !6916, line: 58, type: !102)
!7031 = !DILocalVariable(name: "p3", arg: 7, scope: !6915, file: !6916, line: 58, type: !102)
!7032 = !DILocalVariable(name: "iframe", scope: !6915, file: !6916, line: 60, type: !2857)
!7033 = !DILocation(line: 0, scope: !6915)
!7034 = !DILocation(line: 85, column: 11, scope: !6915)
!7035 = !DILocation(line: 93, column: 10, scope: !6915)
!7036 = !DILocation(line: 98, column: 13, scope: !6915)
!7037 = !DILocation(line: 100, column: 15, scope: !6915)
!7038 = !DILocation(line: 100, column: 10, scope: !6915)
!7039 = !DILocation(line: 100, column: 13, scope: !6915)
!7040 = !DILocation(line: 101, column: 15, scope: !6915)
!7041 = !DILocation(line: 101, column: 10, scope: !6915)
!7042 = !DILocation(line: 101, column: 13, scope: !6915)
!7043 = !DILocation(line: 102, column: 15, scope: !6915)
!7044 = !DILocation(line: 102, column: 10, scope: !6915)
!7045 = !DILocation(line: 102, column: 13, scope: !6915)
!7046 = !DILocation(line: 103, column: 15, scope: !6915)
!7047 = !DILocation(line: 103, column: 10, scope: !6915)
!7048 = !DILocation(line: 103, column: 13, scope: !6915)
!7049 = !DILocation(line: 106, column: 10, scope: !6915)
!7050 = !DILocation(line: 106, column: 15, scope: !6915)
!7051 = !DILocation(line: 122, column: 29, scope: !6915)
!7052 = !DILocation(line: 122, column: 23, scope: !6915)
!7053 = !DILocation(line: 122, column: 27, scope: !6915)
!7054 = !DILocation(line: 123, column: 15, scope: !6915)
!7055 = !DILocation(line: 123, column: 23, scope: !6915)
!7056 = !DILocation(line: 143, column: 1, scope: !6915)
!7057 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6916, file: !6916, line: 385, type: !7058, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !7061)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{!132, !7060, !7060}
!7060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!7061 = !{!7062, !7063, !7064, !7067}
!7062 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7057, file: !6916, line: 385, type: !7060)
!7063 = !DILocalVariable(name: "psp", arg: 2, scope: !7057, file: !6916, line: 385, type: !7060)
!7064 = !DILocalVariable(name: "thread", scope: !7057, file: !6916, line: 388, type: !7065)
!7065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7066, size: 32)
!7066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6920)
!7067 = !DILocalVariable(name: "guard_len", scope: !7057, file: !6916, line: 405, type: !132)
!7068 = !DILocation(line: 0, scope: !7057)
!7069 = !DILocation(line: 388, column: 34, scope: !7057)
!7070 = !DILocation(line: 390, column: 13, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7057, file: !6916, line: 390, column: 6)
!7072 = !DILocation(line: 390, column: 6, scope: !7057)
!7073 = !DILocation(line: 438, column: 6, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7057, file: !6916, line: 438, column: 6)
!7075 = !DILocation(line: 438, column: 6, scope: !7057)
!7076 = !DILocation(line: 442, column: 3, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7074, file: !6916, line: 440, column: 22)
!7078 = !DILocation(line: 455, column: 1, scope: !7057)
!7079 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6916, file: !6916, line: 530, type: !7080, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !7082)
!7080 = !DISubroutineType(types: !7081)
!7081 = !{null, !6919, !1142, !3547}
!7082 = !{!7083, !7084, !7085}
!7083 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7079, file: !6916, line: 530, type: !6919)
!7084 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7079, file: !6916, line: 530, type: !1142)
!7085 = !DILocalVariable(name: "_main", arg: 3, scope: !7079, file: !6916, line: 531, type: !3547)
!7086 = !DILocation(line: 0, scope: !7079)
!7087 = !DILocation(line: 535, column: 11, scope: !7079)
!7088 = !DILocation(line: 560, column: 2, scope: !7079)
!7089 = !DILocation(line: 576, column: 2, scope: !7079)
!7090 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7091 = !DILocation(line: 603, column: 2, scope: !7079)
!7092 = distinct !DISubprogram(name: "z_arm_fault", scope: !7093, file: !7093, line: 1036, type: !7094, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7109)
!7093 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7094 = !DISubroutineType(types: !7095)
!7095 = !{null, !132, !132, !132, !7096}
!7096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7097, size: 32)
!7097 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !449, line: 37, baseType: !7098)
!7098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !7099)
!7099 = !{!7100, !7101, !7102, !7103, !7104, !7105, !7106, !7107, !7108}
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7098, file: !449, line: 26, baseType: !132, size: 32)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7098, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7098, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7098, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7098, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7098, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7098, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7098, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7098, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!7109 = !{!7110, !7111, !7112, !7113, !7114, !7115, !7116, !7117, !7118, !7119}
!7110 = !DILocalVariable(name: "msp", arg: 1, scope: !7092, file: !7093, line: 1036, type: !132)
!7111 = !DILocalVariable(name: "psp", arg: 2, scope: !7092, file: !7093, line: 1036, type: !132)
!7112 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7092, file: !7093, line: 1036, type: !132)
!7113 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7092, file: !7093, line: 1037, type: !7096)
!7114 = !DILocalVariable(name: "reason", scope: !7092, file: !7093, line: 1039, type: !132)
!7115 = !DILocalVariable(name: "fault", scope: !7092, file: !7093, line: 1040, type: !103)
!7116 = !DILocalVariable(name: "recoverable", scope: !7092, file: !7093, line: 1041, type: !179)
!7117 = !DILocalVariable(name: "nested_exc", scope: !7092, file: !7093, line: 1041, type: !179)
!7118 = !DILocalVariable(name: "esf", scope: !7092, file: !7093, line: 1042, type: !2925)
!7119 = !DILocalVariable(name: "esf_copy", scope: !7092, file: !7093, line: 1047, type: !2926)
!7120 = !DILocation(line: 0, scope: !7092)
!7121 = !DILocation(line: 1040, column: 19, scope: !7092)
!7122 = !DILocation(line: 1040, column: 24, scope: !7092)
!7123 = !DILocation(line: 1041, column: 2, scope: !7092)
!7124 = !DILocation(line: 1047, column: 2, scope: !7092)
!7125 = !DILocation(line: 1047, column: 15, scope: !7092)
!7126 = !DILocalVariable(name: "key", arg: 1, scope: !7127, file: !5780, line: 84, type: !32)
!7127 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7128)
!7128 = !{!7126}
!7129 = !DILocation(line: 0, scope: !7127, inlinedAt: !7130)
!7130 = distinct !DILocation(line: 1050, column: 2, scope: !7092)
!7131 = !DILocation(line: 95, column: 2, scope: !7127, inlinedAt: !7130)
!7132 = !{i64 1681763}
!7133 = !DILocation(line: 1055, column: 9, scope: !7092)
!7134 = !DILocation(line: 1063, column: 11, scope: !7092)
!7135 = !DILocation(line: 1064, column: 6, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7092, file: !7093, line: 1064, column: 6)
!7137 = !{i8 0, i8 2}
!7138 = !DILocation(line: 1064, column: 6, scope: !7092)
!7139 = !DILocation(line: 1070, column: 20, scope: !7092)
!7140 = !DILocation(line: 1070, column: 2, scope: !7092)
!7141 = !DILocation(line: 1089, column: 6, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7092, file: !7093, line: 1089, column: 6)
!7143 = !DILocation(line: 0, scope: !7142)
!7144 = !DILocation(line: 1089, column: 6, scope: !7092)
!7145 = !DILocation(line: 1090, column: 28, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !7093, line: 1090, column: 7)
!7147 = distinct !DILexicalBlock(scope: !7142, file: !7093, line: 1089, column: 18)
!7148 = !DILocation(line: 1090, column: 44, scope: !7146)
!7149 = !DILocation(line: 1090, column: 7, scope: !7147)
!7150 = !DILocation(line: 1091, column: 24, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7146, file: !7093, line: 1090, column: 50)
!7152 = !DILocation(line: 1092, column: 3, scope: !7151)
!7153 = !DILocation(line: 1094, column: 23, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7142, file: !7093, line: 1093, column: 9)
!7155 = !DILocation(line: 1097, column: 2, scope: !7092)
!7156 = !DILocation(line: 1098, column: 1, scope: !7092)
!7157 = distinct !DISubprogram(name: "get_esf", scope: !7093, file: !7093, line: 894, type: !7158, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7161)
!7158 = !DISubroutineType(types: !7159)
!7159 = !{!2925, !132, !132, !132, !7160}
!7160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!7161 = !{!7162, !7163, !7164, !7165, !7166, !7167}
!7162 = !DILocalVariable(name: "msp", arg: 1, scope: !7157, file: !7093, line: 894, type: !132)
!7163 = !DILocalVariable(name: "psp", arg: 2, scope: !7157, file: !7093, line: 894, type: !132)
!7164 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7157, file: !7093, line: 894, type: !132)
!7165 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7157, file: !7093, line: 895, type: !7160)
!7166 = !DILocalVariable(name: "alternative_state_exc", scope: !7157, file: !7093, line: 897, type: !179)
!7167 = !DILocalVariable(name: "ptr_esf", scope: !7157, file: !7093, line: 898, type: !2925)
!7168 = !DILocation(line: 0, scope: !7157)
!7169 = !DILocation(line: 900, column: 14, scope: !7157)
!7170 = !DILocation(line: 902, column: 49, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7157, file: !7093, line: 902, column: 6)
!7172 = !DILocation(line: 902, column: 6, scope: !7157)
!7173 = !DILocation(line: 983, column: 18, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7157, file: !7093, line: 983, column: 6)
!7175 = !DILocation(line: 991, column: 7, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !7093, line: 990, column: 30)
!7177 = distinct !DILexicalBlock(scope: !7157, file: !7093, line: 990, column: 6)
!7178 = !DILocation(line: 998, column: 16, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !7093, line: 995, column: 10)
!7180 = distinct !DILexicalBlock(scope: !7176, file: !7093, line: 991, column: 7)
!7181 = !DILocation(line: 1002, column: 2, scope: !7157)
!7182 = !DILocation(line: 1003, column: 1, scope: !7157)
!7183 = distinct !DISubprogram(name: "fault_handle", scope: !7093, file: !7093, line: 786, type: !7184, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7186)
!7184 = !DISubroutineType(types: !7185)
!7185 = !{!132, !2925, !103, !7160}
!7186 = !{!7187, !7188, !7189, !7190}
!7187 = !DILocalVariable(name: "esf", arg: 1, scope: !7183, file: !7093, line: 786, type: !2925)
!7188 = !DILocalVariable(name: "fault", arg: 2, scope: !7183, file: !7093, line: 786, type: !103)
!7189 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7183, file: !7093, line: 786, type: !7160)
!7190 = !DILocalVariable(name: "reason", scope: !7183, file: !7093, line: 788, type: !132)
!7191 = !DILocation(line: 0, scope: !7183)
!7192 = !DILocation(line: 790, column: 15, scope: !7183)
!7193 = !DILocation(line: 792, column: 2, scope: !7183)
!7194 = !DILocation(line: 794, column: 12, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7183, file: !7093, line: 792, column: 17)
!7196 = !DILocation(line: 795, column: 3, scope: !7195)
!7197 = !DILocation(line: 800, column: 12, scope: !7195)
!7198 = !DILocation(line: 801, column: 3, scope: !7195)
!7199 = !DILocation(line: 803, column: 12, scope: !7195)
!7200 = !DILocation(line: 804, column: 3, scope: !7195)
!7201 = !DILocation(line: 806, column: 12, scope: !7195)
!7202 = !DILocation(line: 807, column: 3, scope: !7195)
!7203 = !DILocation(line: 814, column: 3, scope: !7195)
!7204 = !DILocation(line: 815, column: 3, scope: !7195)
!7205 = !DILocation(line: 829, column: 2, scope: !7183)
!7206 = distinct !DISubprogram(name: "hard_fault", scope: !7093, file: !7093, line: 709, type: !7207, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7209)
!7207 = !DISubroutineType(types: !7208)
!7208 = !{!132, !2925, !7160}
!7209 = !{!7210, !7211, !7212}
!7210 = !DILocalVariable(name: "esf", arg: 1, scope: !7206, file: !7093, line: 709, type: !2925)
!7211 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7206, file: !7093, line: 709, type: !7160)
!7212 = !DILocalVariable(name: "reason", scope: !7206, file: !7093, line: 711, type: !132)
!7213 = !DILocation(line: 0, scope: !7206)
!7214 = !DILocation(line: 732, column: 15, scope: !7206)
!7215 = !DILocation(line: 734, column: 12, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7206, file: !7093, line: 734, column: 6)
!7217 = !DILocation(line: 734, column: 17, scope: !7216)
!7218 = !DILocation(line: 734, column: 41, scope: !7216)
!7219 = !DILocation(line: 734, column: 6, scope: !7206)
!7220 = !DILocation(line: 736, column: 19, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7216, file: !7093, line: 736, column: 13)
!7222 = !DILocation(line: 736, column: 49, scope: !7221)
!7223 = !DILocation(line: 736, column: 13, scope: !7216)
!7224 = !DILocation(line: 738, column: 19, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7221, file: !7093, line: 738, column: 13)
!7226 = !DILocation(line: 738, column: 24, scope: !7225)
!7227 = !DILocation(line: 738, column: 47, scope: !7225)
!7228 = !DILocation(line: 738, column: 13, scope: !7221)
!7229 = !DILocation(line: 740, column: 7, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !7093, line: 740, column: 7)
!7231 = distinct !DILexicalBlock(scope: !7225, file: !7093, line: 738, column: 53)
!7232 = !DILocation(line: 740, column: 7, scope: !7231)
!7233 = !DILocation(line: 742, column: 24, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7230, file: !7093, line: 740, column: 38)
!7235 = !DILocation(line: 743, column: 3, scope: !7234)
!7236 = !DILocation(line: 743, column: 20, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7230, file: !7093, line: 743, column: 14)
!7238 = !DILocation(line: 743, column: 25, scope: !7237)
!7239 = !DILocation(line: 743, column: 52, scope: !7237)
!7240 = !DILocation(line: 743, column: 14, scope: !7230)
!7241 = !DILocation(line: 744, column: 13, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7237, file: !7093, line: 743, column: 58)
!7243 = !DILocation(line: 745, column: 3, scope: !7242)
!7244 = !DILocation(line: 745, column: 20, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7237, file: !7093, line: 745, column: 14)
!7246 = !DILocation(line: 745, column: 25, scope: !7245)
!7247 = !DILocation(line: 745, column: 52, scope: !7245)
!7248 = !DILocation(line: 745, column: 14, scope: !7237)
!7249 = !DILocation(line: 746, column: 13, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7245, file: !7093, line: 745, column: 58)
!7251 = !DILocation(line: 747, column: 3, scope: !7250)
!7252 = !DILocation(line: 747, column: 20, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7245, file: !7093, line: 747, column: 14)
!7254 = !DILocation(line: 747, column: 52, scope: !7253)
!7255 = !DILocation(line: 747, column: 14, scope: !7245)
!7256 = !DILocation(line: 748, column: 13, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7253, file: !7093, line: 747, column: 58)
!7258 = !DILocation(line: 753, column: 3, scope: !7257)
!7259 = !DILocation(line: 766, column: 2, scope: !7206)
!7260 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7093, file: !7093, line: 229, type: !7184, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7261)
!7261 = !{!7262, !7263, !7264, !7265, !7266, !7267, !7270}
!7262 = !DILocalVariable(name: "esf", arg: 1, scope: !7260, file: !7093, line: 229, type: !2925)
!7263 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7260, file: !7093, line: 229, type: !103)
!7264 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7260, file: !7093, line: 230, type: !7160)
!7265 = !DILocalVariable(name: "reason", scope: !7260, file: !7093, line: 232, type: !132)
!7266 = !DILocalVariable(name: "mmfar", scope: !7260, file: !7093, line: 233, type: !132)
!7267 = !DILocalVariable(name: "temp", scope: !7268, file: !7093, line: 254, type: !132)
!7268 = distinct !DILexicalBlock(scope: !7269, file: !7093, line: 244, column: 48)
!7269 = distinct !DILexicalBlock(scope: !7260, file: !7093, line: 244, column: 6)
!7270 = !DILocalVariable(name: "min_stack_ptr", scope: !7271, file: !7093, line: 309, type: !132)
!7271 = distinct !DILexicalBlock(scope: !7272, file: !7093, line: 308, column: 43)
!7272 = distinct !DILexicalBlock(scope: !7273, file: !7093, line: 308, column: 7)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !7093, line: 289, column: 40)
!7274 = distinct !DILexicalBlock(scope: !7260, file: !7093, line: 288, column: 6)
!7275 = !DILocation(line: 0, scope: !7260)
!7276 = !DILocation(line: 237, column: 12, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7260, file: !7093, line: 237, column: 6)
!7278 = !DILocation(line: 241, column: 12, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7260, file: !7093, line: 241, column: 6)
!7280 = !DILocation(line: 244, column: 12, scope: !7269)
!7281 = !DILocation(line: 244, column: 17, scope: !7269)
!7282 = !DILocation(line: 244, column: 42, scope: !7269)
!7283 = !DILocation(line: 244, column: 6, scope: !7260)
!7284 = !DILocation(line: 254, column: 24, scope: !7268)
!7285 = !DILocation(line: 0, scope: !7268)
!7286 = !DILocation(line: 256, column: 13, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7268, file: !7093, line: 256, column: 7)
!7288 = !DILocation(line: 256, column: 18, scope: !7287)
!7289 = !DILocation(line: 256, column: 44, scope: !7287)
!7290 = !DILocation(line: 256, column: 7, scope: !7268)
!7291 = !DILocation(line: 259, column: 24, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !7093, line: 259, column: 8)
!7293 = distinct !DILexicalBlock(scope: !7287, file: !7093, line: 256, column: 50)
!7294 = !DILocation(line: 259, column: 8, scope: !7293)
!7295 = !DILocation(line: 261, column: 15, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7292, file: !7093, line: 259, column: 30)
!7297 = !DILocation(line: 262, column: 4, scope: !7296)
!7298 = !DILocation(line: 265, column: 12, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7260, file: !7093, line: 265, column: 6)
!7300 = !DILocation(line: 288, column: 12, scope: !7274)
!7301 = !DILocation(line: 288, column: 17, scope: !7274)
!7302 = !DILocation(line: 288, column: 41, scope: !7274)
!7303 = !DILocation(line: 289, column: 9, scope: !7274)
!7304 = !DILocation(line: 289, column: 14, scope: !7274)
!7305 = !DILocation(line: 288, column: 6, scope: !7260)
!7306 = !DILocation(line: 308, column: 12, scope: !7272)
!7307 = !DILocation(line: 308, column: 17, scope: !7272)
!7308 = !DILocation(line: 308, column: 7, scope: !7273)
!7309 = !DILocation(line: 310, column: 6, scope: !7271)
!7310 = !DILocation(line: 309, column: 29, scope: !7271)
!7311 = !DILocation(line: 0, scope: !7271)
!7312 = !DILocation(line: 312, column: 8, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7271, file: !7093, line: 312, column: 8)
!7314 = !DILocation(line: 312, column: 8, scope: !7271)
!7315 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7316, file: !6817, line: 1099, type: !132)
!7316 = distinct !DISubprogram(name: "__set_PSP", scope: !6817, file: !6817, line: 1099, type: !5804, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7317)
!7317 = !{!7315}
!7318 = !DILocation(line: 0, scope: !7316, inlinedAt: !7319)
!7319 = distinct !DILocation(line: 338, column: 5, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7313, file: !7093, line: 312, column: 23)
!7321 = !DILocation(line: 1101, column: 3, scope: !7316, inlinedAt: !7319)
!7322 = !{i64 2476488}
!7323 = !DILocation(line: 341, column: 4, scope: !7320)
!7324 = !DILocation(line: 366, column: 12, scope: !7260)
!7325 = !DILocation(line: 369, column: 15, scope: !7260)
!7326 = !DILocation(line: 371, column: 2, scope: !7260)
!7327 = distinct !DISubprogram(name: "bus_fault", scope: !7093, file: !7093, line: 383, type: !7328, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7330)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{!103, !2925, !103, !7160}
!7330 = !{!7331, !7332, !7333, !7334, !7335}
!7331 = !DILocalVariable(name: "esf", arg: 1, scope: !7327, file: !7093, line: 383, type: !2925)
!7332 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7327, file: !7093, line: 383, type: !103)
!7333 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7327, file: !7093, line: 383, type: !7160)
!7334 = !DILocalVariable(name: "reason", scope: !7327, file: !7093, line: 385, type: !132)
!7335 = !DILocalVariable(name: "bfar", scope: !7336, file: !7093, line: 405, type: !132)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !7093, line: 395, column: 42)
!7337 = distinct !DILexicalBlock(scope: !7327, file: !7093, line: 395, column: 6)
!7338 = !DILocation(line: 0, scope: !7327)
!7339 = !DILocation(line: 389, column: 11, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7327, file: !7093, line: 389, column: 6)
!7341 = !DILocation(line: 392, column: 11, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7327, file: !7093, line: 392, column: 6)
!7343 = !DILocation(line: 395, column: 11, scope: !7337)
!7344 = !DILocation(line: 395, column: 16, scope: !7337)
!7345 = !DILocation(line: 395, column: 6, scope: !7327)
!7346 = !DILocation(line: 405, column: 3, scope: !7336)
!7347 = !DILocation(line: 0, scope: !7336)
!7348 = !DILocation(line: 407, column: 13, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7336, file: !7093, line: 407, column: 7)
!7350 = !DILocation(line: 407, column: 18, scope: !7349)
!7351 = !DILocation(line: 407, column: 44, scope: !7349)
!7352 = !DILocation(line: 407, column: 7, scope: !7336)
!7353 = !DILocation(line: 411, column: 15, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !7093, line: 409, column: 30)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !7093, line: 409, column: 8)
!7356 = distinct !DILexicalBlock(scope: !7349, file: !7093, line: 407, column: 50)
!7357 = !DILocation(line: 412, column: 4, scope: !7354)
!7358 = !DILocation(line: 415, column: 11, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7327, file: !7093, line: 415, column: 6)
!7360 = !DILocation(line: 418, column: 12, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7327, file: !7093, line: 418, column: 6)
!7362 = !DILocation(line: 524, column: 12, scope: !7327)
!7363 = !DILocation(line: 526, column: 15, scope: !7327)
!7364 = !DILocation(line: 528, column: 2, scope: !7327)
!7365 = distinct !DISubprogram(name: "usage_fault", scope: !7093, file: !7093, line: 539, type: !7366, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7370)
!7366 = !DISubroutineType(types: !7367)
!7367 = !{!132, !7368}
!7368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7369, size: 32)
!7369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2926)
!7370 = !{!7371, !7372}
!7371 = !DILocalVariable(name: "esf", arg: 1, scope: !7365, file: !7093, line: 539, type: !7368)
!7372 = !DILocalVariable(name: "reason", scope: !7365, file: !7093, line: 541, type: !132)
!7373 = !DILocation(line: 0, scope: !7365)
!7374 = !DILocation(line: 546, column: 12, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7365, file: !7093, line: 546, column: 6)
!7376 = !DILocation(line: 549, column: 12, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7365, file: !7093, line: 549, column: 6)
!7378 = !DILocation(line: 567, column: 12, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7365, file: !7093, line: 567, column: 6)
!7380 = !DILocation(line: 570, column: 12, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7365, file: !7093, line: 570, column: 6)
!7382 = !DILocation(line: 573, column: 12, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7365, file: !7093, line: 573, column: 6)
!7384 = !DILocation(line: 576, column: 12, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7365, file: !7093, line: 576, column: 6)
!7386 = !DILocation(line: 581, column: 12, scope: !7365)
!7387 = !DILocation(line: 583, column: 2, scope: !7365)
!7388 = distinct !DISubprogram(name: "debug_monitor", scope: !7093, file: !7093, line: 632, type: !7389, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7391)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{null, !2925, !7160}
!7391 = !{!7392, !7393}
!7392 = !DILocalVariable(name: "esf", arg: 1, scope: !7388, file: !7093, line: 632, type: !2925)
!7393 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7388, file: !7093, line: 632, type: !7160)
!7394 = !DILocation(line: 0, scope: !7388)
!7395 = !DILocation(line: 634, column: 15, scope: !7388)
!7396 = !DILocation(line: 652, column: 1, scope: !7388)
!7397 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7093, file: !7093, line: 658, type: !7398, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7400)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{!179, !2925}
!7400 = !{!7401, !7402, !7403}
!7401 = !DILocalVariable(name: "esf", arg: 1, scope: !7397, file: !7093, line: 658, type: !2925)
!7402 = !DILocalVariable(name: "ret_addr", scope: !7397, file: !7093, line: 660, type: !2617)
!7403 = !DILocalVariable(name: "fault_insn", scope: !7397, file: !7093, line: 686, type: !353)
!7404 = !DILocation(line: 0, scope: !7397)
!7405 = !DILocation(line: 660, column: 46, scope: !7397)
!7406 = !DILocation(line: 660, column: 23, scope: !7397)
!7407 = !DILocation(line: 682, column: 11, scope: !7397)
!7408 = !DILocation(line: 271, column: 3, scope: !7409, inlinedAt: !7410)
!7409 = distinct !DISubprogram(name: "__DSB", scope: !6817, file: !6817, line: 269, type: !3229, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !486)
!7410 = distinct !DILocation(line: 683, column: 2, scope: !7397)
!7411 = !{i64 2452623}
!7412 = !DILocation(line: 260, column: 3, scope: !7413, inlinedAt: !7414)
!7413 = distinct !DISubprogram(name: "__ISB", scope: !6817, file: !6817, line: 258, type: !3229, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !486)
!7414 = distinct !DILocation(line: 684, column: 2, scope: !7397)
!7415 = !{i64 2452340}
!7416 = !DILocation(line: 686, column: 35, scope: !7397)
!7417 = !DILocation(line: 686, column: 24, scope: !7397)
!7418 = !DILocation(line: 688, column: 11, scope: !7397)
!7419 = !DILocation(line: 271, column: 3, scope: !7409, inlinedAt: !7420)
!7420 = distinct !DILocation(line: 689, column: 2, scope: !7397)
!7421 = !DILocation(line: 260, column: 3, scope: !7413, inlinedAt: !7422)
!7422 = distinct !DILocation(line: 690, column: 2, scope: !7397)
!7423 = !DILocation(line: 693, column: 45, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7397, file: !7093, line: 693, column: 6)
!7425 = !DILocation(line: 699, column: 1, scope: !7397)
!7426 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7093, file: !7093, line: 1107, type: !3229, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !486)
!7427 = !DILocation(line: 1111, column: 11, scope: !7426)
!7428 = !DILocation(line: 1136, column: 1, scope: !7426)
!7429 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7430, file: !7430, line: 26, type: !3229, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !7431)
!7430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7431 = !{!7432}
!7432 = !DILocalVariable(name: "irq", scope: !7429, file: !7430, line: 28, type: !103)
!7433 = !DILocation(line: 0, scope: !7429)
!7434 = !DILocation(line: 30, column: 2, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7429, file: !7430, line: 30, column: 2)
!7436 = !DILocation(line: 31, column: 3, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !7430, line: 30, column: 39)
!7438 = distinct !DILexicalBlock(scope: !7435, file: !7430, line: 30, column: 2)
!7439 = !DILocation(line: 30, column: 35, scope: !7438)
!7440 = !DILocation(line: 30, column: 13, scope: !7438)
!7441 = distinct !{!7441, !7434, !7442}
!7442 = !DILocation(line: 32, column: 2, scope: !7435)
!7443 = !DILocation(line: 33, column: 1, scope: !7429)
!7444 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !520, file: !520, line: 1638, type: !6851, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !7445)
!7445 = !{!7446, !7447}
!7446 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7444, file: !520, line: 1638, type: !843)
!7447 = !DILocalVariable(name: "priority", arg: 2, scope: !7444, file: !520, line: 1638, type: !132)
!7448 = !DILocation(line: 0, scope: !7444)
!7449 = !DILocation(line: 1640, column: 7, scope: !7444)
!7450 = !DILocation(line: 0, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7444, file: !520, line: 1640, column: 7)
!7452 = !DILocation(line: 1648, column: 1, scope: !7444)
!7453 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7454, file: !7454, line: 27, type: !7455, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !7558)
!7454 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7455 = !DISubroutineType(types: !7456)
!7456 = !{null, !7457}
!7457 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !380, line: 347, baseType: !7458)
!7458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7459, size: 32)
!7459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !7460)
!7460 = !{!7461, !7519, !7531, !7532, !7533, !7534, !7540, !7553}
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7459, file: !380, line: 247, baseType: !7462, size: 384)
!7462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !7463)
!7463 = !{!7464, !7488, !7495, !7496, !7497, !7506, !7507, !7508}
!7464 = !DIDerivedType(tag: DW_TAG_member, scope: !7462, file: !380, line: 60, baseType: !7465, size: 64)
!7465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7462, file: !380, line: 60, size: 64, elements: !7466)
!7466 = !{!7467, !7482}
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7465, file: !380, line: 61, baseType: !7468, size: 64)
!7468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !7469)
!7469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !7470)
!7470 = !{!7471, !7477}
!7471 = !DIDerivedType(tag: DW_TAG_member, scope: !7469, file: !334, line: 38, baseType: !7472, size: 32)
!7472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7469, file: !334, line: 38, size: 32, elements: !7473)
!7473 = !{!7474, !7476}
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7472, file: !334, line: 39, baseType: !7475, size: 32)
!7475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7469, size: 32)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7472, file: !334, line: 40, baseType: !7475, size: 32)
!7477 = !DIDerivedType(tag: DW_TAG_member, scope: !7469, file: !334, line: 42, baseType: !7478, size: 32, offset: 32)
!7478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7469, file: !334, line: 42, size: 32, elements: !7479)
!7479 = !{!7480, !7481}
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7478, file: !334, line: 43, baseType: !7475, size: 32)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7478, file: !334, line: 44, baseType: !7475, size: 32)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7465, file: !380, line: 62, baseType: !7483, size: 64)
!7483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !7484)
!7484 = !{!7485}
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7483, file: !405, line: 50, baseType: !7486, size: 64)
!7486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7487, size: 64, elements: !410)
!7487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7483, size: 32)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7462, file: !380, line: 68, baseType: !7489, size: 32, offset: 64)
!7489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7490, size: 32)
!7490 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !7491)
!7491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !7492)
!7492 = !{!7493}
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7491, file: !329, line: 232, baseType: !7494, size: 64)
!7494 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !7469)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7462, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7462, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!7497 = !DIDerivedType(tag: DW_TAG_member, scope: !7462, file: !380, line: 90, baseType: !7498, size: 16, offset: 112)
!7498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7462, file: !380, line: 90, size: 16, elements: !7499)
!7499 = !{!7500, !7505}
!7500 = !DIDerivedType(tag: DW_TAG_member, scope: !7498, file: !380, line: 91, baseType: !7501, size: 16)
!7501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7498, file: !380, line: 91, size: 16, elements: !7502)
!7502 = !{!7503, !7504}
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7501, file: !380, line: 96, baseType: !428, size: 8)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7501, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7498, file: !380, line: 100, baseType: !353, size: 16)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7462, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7462, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7462, file: !380, line: 131, baseType: !7509, size: 192, offset: 192)
!7509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !7510)
!7510 = !{!7511, !7512, !7518}
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7509, file: !329, line: 245, baseType: !7468, size: 64)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7509, file: !329, line: 246, baseType: !7513, size: 32, offset: 64)
!7513 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !7514)
!7514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7515, size: 32)
!7515 = !DISubroutineType(types: !7516)
!7516 = !{null, !7517}
!7517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7509, size: 32)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7509, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7459, file: !380, line: 250, baseType: !7520, size: 288, offset: 384)
!7520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !7521)
!7521 = !{!7522, !7523, !7524, !7525, !7526, !7527, !7528, !7529, !7530}
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7520, file: !449, line: 26, baseType: !132, size: 32)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7520, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7520, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7520, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7520, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7520, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7520, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7520, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7520, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7459, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7459, file: !380, line: 256, baseType: !7490, size: 64, offset: 704)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7459, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7459, file: !380, line: 300, baseType: !7535, size: 96, offset: 800)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !7536)
!7536 = !{!7537, !7538, !7539}
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7535, file: !380, line: 153, baseType: !22, size: 32)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7535, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7535, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7459, file: !380, line: 325, baseType: !7541, size: 32, offset: 896)
!7541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7542, size: 32)
!7542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !7543)
!7543 = !{!7544, !7550, !7551}
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7542, file: !325, line: 5074, baseType: !7545, size: 96)
!7545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !7546)
!7546 = !{!7547, !7548, !7549}
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7545, file: !475, line: 57, baseType: !478, size: 32)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7545, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7545, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7542, file: !325, line: 5075, baseType: !7490, size: 64, offset: 96)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7542, file: !325, line: 5076, baseType: !7552, offset: 160)
!7552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7459, file: !380, line: 343, baseType: !7554, size: 64, offset: 928)
!7554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !7555)
!7555 = !{!7556, !7557}
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7554, file: !449, line: 63, baseType: !132, size: 32)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7554, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!7558 = !{!7559}
!7559 = !DILocalVariable(name: "thread", arg: 1, scope: !7453, file: !7454, line: 27, type: !7457)
!7560 = !DILocation(line: 0, scope: !7453)
!7561 = !DILocation(line: 29, column: 6, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7453, file: !7454, line: 29, column: 6)
!7563 = !DILocation(line: 29, column: 15, scope: !7562)
!7564 = !DILocation(line: 29, column: 6, scope: !7453)
!7565 = !DILocation(line: 1031, column: 3, scope: !7566, inlinedAt: !7571)
!7566 = distinct !DISubprogram(name: "__get_IPSR", scope: !6817, file: !6817, line: 1027, type: !7567, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !7569)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!132}
!7569 = !{!7570}
!7570 = !DILocalVariable(name: "result", scope: !7566, file: !6817, line: 1029, type: !132)
!7571 = distinct !DILocation(line: 48, column: 10, scope: !7572, inlinedAt: !7576)
!7572 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7573, file: !7573, line: 46, type: !7574, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !486)
!7573 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7574 = !DISubroutineType(types: !7575)
!7575 = !{!179}
!7576 = distinct !DILocation(line: 30, column: 7, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !7454, line: 30, column: 7)
!7578 = distinct !DILexicalBlock(scope: !7562, file: !7454, line: 29, column: 26)
!7579 = !{i64 2441471}
!7580 = !DILocation(line: 0, scope: !7566, inlinedAt: !7571)
!7581 = !DILocation(line: 48, column: 9, scope: !7572, inlinedAt: !7576)
!7582 = !DILocation(line: 30, column: 7, scope: !7578)
!7583 = !DILocation(line: 42, column: 14, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7577, file: !7454, line: 30, column: 25)
!7585 = !DILocation(line: 48, column: 15, scope: !7584)
!7586 = !DILocation(line: 49, column: 3, scope: !7584)
!7587 = !DILocation(line: 52, column: 2, scope: !7453)
!7588 = !DILocation(line: 53, column: 1, scope: !7453)
!7589 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !375, file: !375, line: 127, type: !3229, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !486)
!7590 = !DILocation(line: 134, column: 2, scope: !7589)
!7591 = !DILocation(line: 156, column: 1, scope: !7589)
!7592 = !DILocation(line: 0, scope: !374)
!7593 = !DILocation(line: 289, column: 36, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !374, file: !375, line: 285, column: 2)
!7595 = !DILocation(line: 289, column: 42, scope: !7594)
!7596 = !DILocation(line: 300, column: 36, scope: !374)
!7597 = !DILocation(line: 301, column: 35, scope: !374)
!7598 = !DILocation(line: 302, column: 37, scope: !374)
!7599 = !DILocation(line: 311, column: 2, scope: !374)
!7600 = !DILocation(line: 316, column: 1, scope: !374)
!7601 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !548, file: !548, line: 180, type: !3229, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !486)
!7602 = !DILocation(line: 188, column: 12, scope: !7601)
!7603 = !DILocation(line: 271, column: 3, scope: !7604, inlinedAt: !7605)
!7604 = distinct !DISubprogram(name: "__DSB", scope: !6817, file: !6817, line: 269, type: !3229, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !486)
!7605 = distinct !DILocation(line: 192, column: 2, scope: !7601)
!7606 = !{i64 2597322}
!7607 = !DILocation(line: 260, column: 3, scope: !7608, inlinedAt: !7609)
!7608 = distinct !DISubprogram(name: "__ISB", scope: !6817, file: !6817, line: 258, type: !3229, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !486)
!7609 = distinct !DILocation(line: 193, column: 2, scope: !7601)
!7610 = !{i64 2597039}
!7611 = !DILocation(line: 194, column: 1, scope: !7601)
!7612 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !548, file: !548, line: 199, type: !3229, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !486)
!7613 = !DILocation(line: 282, column: 3, scope: !7614, inlinedAt: !7615)
!7614 = distinct !DISubprogram(name: "__DMB", scope: !6817, file: !6817, line: 280, type: !3229, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !486)
!7615 = distinct !DILocation(line: 202, column: 2, scope: !7612)
!7616 = !{i64 2597598}
!7617 = !DILocation(line: 205, column: 12, scope: !7612)
!7618 = !DILocation(line: 206, column: 1, scope: !7612)
!7619 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !548, file: !548, line: 275, type: !7620, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7633)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{null, !7622, !278, !7060, !7060}
!7622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7623, size: 32)
!7623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7624)
!7624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !499, line: 52, size: 96, elements: !7625)
!7625 = !{!7626, !7627, !7628}
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7624, file: !499, line: 53, baseType: !22, size: 32)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7624, file: !499, line: 54, baseType: !369, size: 32, offset: 32)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7624, file: !499, line: 55, baseType: !7629, size: 32, offset: 64)
!7629 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !505, line: 151, baseType: !7630)
!7630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !505, line: 149, size: 32, elements: !7631)
!7631 = !{!7632}
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7630, file: !505, line: 150, baseType: !132, size: 32)
!7633 = !{!7634, !7635, !7636, !7637}
!7634 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7619, file: !548, line: 276, type: !7622)
!7635 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7619, file: !548, line: 276, type: !278)
!7636 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7619, file: !548, line: 277, type: !7060)
!7637 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7619, file: !548, line: 277, type: !7060)
!7638 = !DILocation(line: 0, scope: !7619)
!7639 = !DILocation(line: 279, column: 6, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7619, file: !548, line: 279, column: 6)
!7641 = !DILocation(line: 285, column: 1, scope: !7619)
!7642 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7643, file: !7643, line: 220, type: !7644, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7646)
!7643 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7644 = !DISubroutineType(types: !7645)
!7645 = !{!103, !7622, !278, !7060, !7060}
!7646 = !{!7647, !7648, !7649, !7650, !7651}
!7647 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7642, file: !7643, line: 221, type: !7622)
!7648 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7642, file: !7643, line: 221, type: !278)
!7649 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7642, file: !7643, line: 222, type: !7060)
!7650 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7642, file: !7643, line: 223, type: !7060)
!7651 = !DILocalVariable(name: "mpu_reg_index", scope: !7642, file: !7643, line: 225, type: !103)
!7652 = !DILocation(line: 0, scope: !7642)
!7653 = !DILocation(line: 225, column: 22, scope: !7642)
!7654 = !DILocation(line: 233, column: 18, scope: !7642)
!7655 = !DILocation(line: 236, column: 23, scope: !7642)
!7656 = !DILocation(line: 236, column: 21, scope: !7642)
!7657 = !DILocation(line: 238, column: 2, scope: !7642)
!7658 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !548, file: !548, line: 105, type: !7659, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7661)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{!103, !7622, !176, !176, !179}
!7661 = !{!7662, !7663, !7664, !7665, !7666, !7667}
!7662 = !DILocalVariable(name: "regions", arg: 1, scope: !7658, file: !548, line: 106, type: !7622)
!7663 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7658, file: !548, line: 106, type: !176)
!7664 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7658, file: !548, line: 106, type: !176)
!7665 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7658, file: !548, line: 107, type: !179)
!7666 = !DILocalVariable(name: "i", scope: !7658, file: !548, line: 109, type: !103)
!7667 = !DILocalVariable(name: "reg_index", scope: !7658, file: !548, line: 110, type: !103)
!7668 = !DILocation(line: 0, scope: !7658)
!7669 = !DILocation(line: 110, column: 18, scope: !7658)
!7670 = !DILocation(line: 112, column: 16, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !548, line: 112, column: 2)
!7672 = distinct !DILexicalBlock(scope: !7658, file: !548, line: 112, column: 2)
!7673 = !DILocation(line: 112, column: 2, scope: !7672)
!7674 = !DILocation(line: 113, column: 7, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !548, line: 113, column: 7)
!7676 = distinct !DILexicalBlock(scope: !7671, file: !548, line: 112, column: 36)
!7677 = !DILocation(line: 113, column: 18, scope: !7675)
!7678 = !DILocation(line: 113, column: 23, scope: !7675)
!7679 = !DILocation(line: 113, column: 7, scope: !7676)
!7680 = !DILocation(line: 118, column: 23, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7676, file: !548, line: 118, column: 7)
!7682 = !DILocation(line: 119, column: 7, scope: !7681)
!7683 = !DILocation(line: 118, column: 7, scope: !7676)
!7684 = !DILocation(line: 124, column: 36, scope: !7676)
!7685 = !DILocation(line: 124, column: 15, scope: !7676)
!7686 = !DILocation(line: 126, column: 17, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7676, file: !548, line: 126, column: 7)
!7688 = !DILocation(line: 126, column: 7, scope: !7676)
!7689 = !DILocation(line: 131, column: 12, scope: !7676)
!7690 = !DILocation(line: 132, column: 2, scope: !7676)
!7691 = !DILocation(line: 112, column: 32, scope: !7671)
!7692 = distinct !{!7692, !7673, !7693}
!7693 = !DILocation(line: 132, column: 2, scope: !7672)
!7694 = !DILocation(line: 135, column: 1, scope: !7658)
!7695 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7643, file: !7643, line: 63, type: !7696, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7698)
!7696 = !DISubroutineType(types: !7697)
!7697 = !{!103, !7622}
!7698 = !{!7699, !7700}
!7699 = !DILocalVariable(name: "part", arg: 1, scope: !7695, file: !7643, line: 63, type: !7622)
!7700 = !DILocalVariable(name: "partition_is_valid", scope: !7695, file: !7643, line: 70, type: !103)
!7701 = !DILocation(line: 0, scope: !7695)
!7702 = !DILocation(line: 71, column: 11, scope: !7695)
!7703 = !DILocation(line: 71, column: 37, scope: !7695)
!7704 = !DILocation(line: 72, column: 3, scope: !7695)
!7705 = !DILocation(line: 71, column: 30, scope: !7695)
!7706 = !DILocation(line: 75, column: 11, scope: !7695)
!7707 = !DILocation(line: 75, column: 17, scope: !7695)
!7708 = !DILocation(line: 75, column: 38, scope: !7695)
!7709 = !DILocation(line: 77, column: 2, scope: !7695)
!7710 = distinct !DISubprogram(name: "mpu_configure_region", scope: !548, file: !548, line: 79, type: !7711, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7713)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{!103, !278, !7622}
!7713 = !{!7714, !7715, !7716}
!7714 = !DILocalVariable(name: "index", arg: 1, scope: !7710, file: !548, line: 79, type: !278)
!7715 = !DILocalVariable(name: "new_region", arg: 2, scope: !7710, file: !548, line: 80, type: !7622)
!7716 = !DILocalVariable(name: "region_conf", scope: !7710, file: !548, line: 82, type: !537)
!7717 = !DILocation(line: 0, scope: !7710)
!7718 = !DILocation(line: 82, column: 2, scope: !7710)
!7719 = !DILocation(line: 82, column: 24, scope: !7710)
!7720 = !DILocation(line: 87, column: 33, scope: !7710)
!7721 = !DILocation(line: 87, column: 14, scope: !7710)
!7722 = !DILocation(line: 87, column: 19, scope: !7710)
!7723 = !DILocation(line: 91, column: 55, scope: !7710)
!7724 = !DILocation(line: 92, column: 16, scope: !7710)
!7725 = !DILocation(line: 92, column: 53, scope: !7710)
!7726 = !DILocation(line: 91, column: 2, scope: !7710)
!7727 = !DILocation(line: 95, column: 9, scope: !7710)
!7728 = !DILocation(line: 97, column: 1, scope: !7710)
!7729 = !DILocation(line: 95, column: 2, scope: !7710)
!7730 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7643, file: !7643, line: 113, type: !7731, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7736)
!7731 = !DISubroutineType(types: !7732)
!7732 = !{null, !7733, !7734, !132, !132}
!7733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!7734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7735, size: 32)
!7735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7629)
!7736 = !{!7737, !7738, !7739, !7740}
!7737 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7730, file: !7643, line: 114, type: !7733)
!7738 = !DILocalVariable(name: "attr", arg: 2, scope: !7730, file: !7643, line: 115, type: !7734)
!7739 = !DILocalVariable(name: "base", arg: 3, scope: !7730, file: !7643, line: 115, type: !132)
!7740 = !DILocalVariable(name: "size", arg: 4, scope: !7730, file: !7643, line: 115, type: !132)
!7741 = !DILocation(line: 0, scope: !7730)
!7742 = !DILocation(line: 127, column: 23, scope: !7730)
!7743 = !DILocation(line: 127, column: 35, scope: !7730)
!7744 = !DILocation(line: 127, column: 33, scope: !7730)
!7745 = !DILocation(line: 127, column: 10, scope: !7730)
!7746 = !DILocation(line: 127, column: 15, scope: !7730)
!7747 = !DILocation(line: 129, column: 1, scope: !7730)
!7748 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !548, file: !548, line: 57, type: !7749, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7751)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{!103, !278, !535}
!7751 = !{!7752, !7753}
!7752 = !DILocalVariable(name: "index", arg: 1, scope: !7748, file: !548, line: 57, type: !278)
!7753 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7748, file: !548, line: 58, type: !535)
!7754 = !DILocation(line: 0, scope: !7748)
!7755 = !DILocation(line: 61, column: 6, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7748, file: !548, line: 61, column: 6)
!7757 = !DILocation(line: 61, column: 12, scope: !7756)
!7758 = !DILocation(line: 61, column: 6, scope: !7748)
!7759 = !DILocation(line: 71, column: 2, scope: !7748)
!7760 = !DILocation(line: 73, column: 2, scope: !7748)
!7761 = !DILocation(line: 74, column: 1, scope: !7748)
!7762 = distinct !DISubprogram(name: "region_init", scope: !7643, file: !7643, line: 29, type: !7763, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7765)
!7763 = !DISubroutineType(types: !7764)
!7764 = !{null, !7060, !535}
!7765 = !{!7766, !7767}
!7766 = !DILocalVariable(name: "index", arg: 1, scope: !7762, file: !7643, line: 29, type: !7060)
!7767 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7762, file: !7643, line: 30, type: !535)
!7768 = !DILocation(line: 0, scope: !7762)
!7769 = !DILocation(line: 33, column: 2, scope: !7762)
!7770 = !DILocation(line: 47, column: 28, scope: !7762)
!7771 = !DILocation(line: 47, column: 33, scope: !7762)
!7772 = !DILocation(line: 48, column: 26, scope: !7762)
!7773 = !DILocation(line: 47, column: 12, scope: !7762)
!7774 = !DILocation(line: 49, column: 32, scope: !7762)
!7775 = !DILocation(line: 49, column: 37, scope: !7762)
!7776 = !DILocation(line: 49, column: 12, scope: !7762)
!7777 = !DILocation(line: 53, column: 1, scope: !7762)
!7778 = distinct !DISubprogram(name: "set_region_number", scope: !7779, file: !7779, line: 32, type: !5804, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7780)
!7779 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7780 = !{!7781}
!7781 = !DILocalVariable(name: "index", arg: 1, scope: !7778, file: !7779, line: 32, type: !132)
!7782 = !DILocation(line: 0, scope: !7778)
!7783 = !DILocation(line: 34, column: 11, scope: !7778)
!7784 = !DILocation(line: 35, column: 1, scope: !7778)
!7785 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7643, file: !7643, line: 88, type: !7786, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7788)
!7786 = !DISubroutineType(types: !7787)
!7787 = !{!132, !132}
!7788 = !{!7789}
!7789 = !DILocalVariable(name: "size", arg: 1, scope: !7785, file: !7643, line: 88, type: !132)
!7790 = !DILocation(line: 0, scope: !7785)
!7791 = !DILocation(line: 91, column: 11, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7785, file: !7643, line: 91, column: 6)
!7793 = !DILocation(line: 91, column: 6, scope: !7785)
!7794 = !DILocation(line: 100, column: 11, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7785, file: !7643, line: 100, column: 6)
!7796 = !DILocation(line: 100, column: 6, scope: !7785)
!7797 = !DILocation(line: 104, column: 35, scope: !7785)
!7798 = !DILocation(line: 104, column: 16, scope: !7785)
!7799 = !DILocation(line: 104, column: 50, scope: !7785)
!7800 = !DILocation(line: 104, column: 72, scope: !7785)
!7801 = !DILocation(line: 104, column: 2, scope: !7785)
!7802 = !DILocation(line: 106, column: 1, scope: !7785)
!7803 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !548, file: !548, line: 307, type: !7804, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7806)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{null, !7622, !176}
!7806 = !{!7807, !7808}
!7807 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7803, file: !548, line: 308, type: !7622)
!7808 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7803, file: !548, line: 308, type: !176)
!7809 = !DILocation(line: 0, scope: !7803)
!7810 = !DILocation(line: 310, column: 6, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7803, file: !548, line: 310, column: 6)
!7812 = !DILocation(line: 316, column: 1, scope: !7803)
!7813 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7643, file: !7643, line: 249, type: !7814, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7816)
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!103, !7622, !176}
!7816 = !{!7817, !7818, !7819, !7820}
!7817 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7813, file: !7643, line: 250, type: !7622)
!7818 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7813, file: !7643, line: 250, type: !176)
!7819 = !DILocalVariable(name: "mpu_reg_index", scope: !7813, file: !7643, line: 252, type: !103)
!7820 = !DILocalVariable(name: "i", scope: !7821, file: !7643, line: 264, type: !103)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7643, line: 264, column: 3)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7643, line: 261, column: 32)
!7823 = distinct !DILexicalBlock(scope: !7813, file: !7643, line: 261, column: 6)
!7824 = !DILocation(line: 0, scope: !7813)
!7825 = !DILocation(line: 252, column: 22, scope: !7813)
!7826 = !DILocation(line: 258, column: 18, scope: !7813)
!7827 = !DILocation(line: 261, column: 20, scope: !7823)
!7828 = !DILocation(line: 261, column: 6, scope: !7813)
!7829 = !DILocation(line: 0, scope: !7821)
!7830 = !DILocation(line: 265, column: 4, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !7643, line: 264, column: 59)
!7832 = distinct !DILexicalBlock(scope: !7821, file: !7643, line: 264, column: 3)
!7833 = !DILocation(line: 264, column: 55, scope: !7832)
!7834 = !DILocation(line: 264, column: 33, scope: !7832)
!7835 = !DILocation(line: 264, column: 3, scope: !7821)
!7836 = distinct !{!7836, !7835, !7837}
!7837 = !DILocation(line: 266, column: 3, scope: !7821)
!7838 = !DILocation(line: 269, column: 2, scope: !7813)
!7839 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7840, file: !7840, line: 218, type: !5804, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7841)
!7840 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7841 = !{!7842}
!7842 = !DILocalVariable(name: "rnr", arg: 1, scope: !7839, file: !7840, line: 218, type: !132)
!7843 = !DILocation(line: 0, scope: !7839)
!7844 = !DILocation(line: 220, column: 12, scope: !7839)
!7845 = !DILocation(line: 221, column: 13, scope: !7839)
!7846 = !DILocation(line: 222, column: 1, scope: !7839)
!7847 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !548, file: !548, line: 326, type: !6621, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !7848)
!7848 = !{!7849}
!7849 = !DILocalVariable(name: "r_index", scope: !7847, file: !548, line: 328, type: !132)
!7850 = !DILocation(line: 330, column: 17, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7847, file: !548, line: 330, column: 6)
!7852 = !DILocation(line: 330, column: 29, scope: !7851)
!7853 = !DILocation(line: 330, column: 6, scope: !7847)
!7854 = !DILocation(line: 347, column: 2, scope: !7847)
!7855 = !DILocation(line: 0, scope: !7847)
!7856 = !DILocation(line: 364, column: 29, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !548, line: 364, column: 2)
!7858 = distinct !DILexicalBlock(scope: !7847, file: !548, line: 364, column: 2)
!7859 = !DILocation(line: 364, column: 2, scope: !7858)
!7860 = !DILocation(line: 365, column: 25, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7857, file: !548, line: 364, column: 66)
!7862 = !DILocation(line: 365, column: 3, scope: !7861)
!7863 = !DILocation(line: 364, column: 62, scope: !7857)
!7864 = distinct !{!7864, !7859, !7865}
!7865 = !DILocation(line: 366, column: 2, scope: !7858)
!7866 = !DILocation(line: 369, column: 23, scope: !7847)
!7867 = !DILocation(line: 369, column: 21, scope: !7847)
!7868 = !DILocation(line: 372, column: 2, scope: !7847)
!7869 = !DILocation(line: 443, column: 2, scope: !7847)
!7870 = !DILocation(line: 444, column: 1, scope: !7847)
!7871 = distinct !DISubprogram(name: "strcpy", scope: !7872, file: !7872, line: 20, type: !7873, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !7877)
!7872 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7873 = !DISubroutineType(types: !7874)
!7874 = !{!1142, !7875, !7876}
!7875 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1142)
!7876 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !168)
!7877 = !{!7878, !7879, !7880}
!7878 = !DILocalVariable(name: "d", arg: 1, scope: !7871, file: !7872, line: 20, type: !7875)
!7879 = !DILocalVariable(name: "s", arg: 2, scope: !7871, file: !7872, line: 20, type: !7876)
!7880 = !DILocalVariable(name: "dest", scope: !7871, file: !7872, line: 22, type: !1142)
!7881 = !DILocation(line: 0, scope: !7871)
!7882 = !DILocation(line: 24, column: 9, scope: !7871)
!7883 = !DILocation(line: 24, column: 12, scope: !7871)
!7884 = !DILocation(line: 24, column: 2, scope: !7871)
!7885 = !DILocation(line: 25, column: 6, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7871, file: !7872, line: 24, column: 21)
!7887 = !DILocation(line: 26, column: 4, scope: !7886)
!7888 = !DILocation(line: 27, column: 4, scope: !7886)
!7889 = distinct !{!7889, !7884, !7890}
!7890 = !DILocation(line: 28, column: 2, scope: !7871)
!7891 = !DILocation(line: 30, column: 5, scope: !7871)
!7892 = !DILocation(line: 32, column: 2, scope: !7871)
!7893 = distinct !DISubprogram(name: "strncpy", scope: !7872, file: !7872, line: 42, type: !7894, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !7896)
!7894 = !DISubroutineType(types: !7895)
!7895 = !{!1142, !7875, !7876, !369}
!7896 = !{!7897, !7898, !7899, !7900}
!7897 = !DILocalVariable(name: "d", arg: 1, scope: !7893, file: !7872, line: 42, type: !7875)
!7898 = !DILocalVariable(name: "s", arg: 2, scope: !7893, file: !7872, line: 42, type: !7876)
!7899 = !DILocalVariable(name: "n", arg: 3, scope: !7893, file: !7872, line: 42, type: !369)
!7900 = !DILocalVariable(name: "dest", scope: !7893, file: !7872, line: 44, type: !1142)
!7901 = !DILocation(line: 0, scope: !7893)
!7902 = !DILocation(line: 46, column: 12, scope: !7893)
!7903 = !DILocation(line: 46, column: 17, scope: !7893)
!7904 = !DILocation(line: 46, column: 20, scope: !7893)
!7905 = !DILocation(line: 46, column: 23, scope: !7893)
!7906 = !DILocation(line: 46, column: 2, scope: !7893)
!7907 = !DILocation(line: 47, column: 6, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7893, file: !7872, line: 46, column: 32)
!7909 = !DILocation(line: 48, column: 4, scope: !7908)
!7910 = !DILocation(line: 49, column: 4, scope: !7908)
!7911 = !DILocation(line: 50, column: 4, scope: !7908)
!7912 = distinct !{!7912, !7906, !7913}
!7913 = !DILocation(line: 51, column: 2, scope: !7893)
!7914 = !DILocation(line: 54, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7893, file: !7872, line: 53, column: 16)
!7916 = !DILocation(line: 55, column: 4, scope: !7915)
!7917 = !DILocation(line: 56, column: 4, scope: !7915)
!7918 = !DILocation(line: 53, column: 11, scope: !7893)
!7919 = !DILocation(line: 53, column: 2, scope: !7893)
!7920 = distinct !{!7920, !7919, !7921}
!7921 = !DILocation(line: 57, column: 2, scope: !7893)
!7922 = !DILocation(line: 59, column: 2, scope: !7893)
!7923 = distinct !DISubprogram(name: "strchr", scope: !7872, file: !7872, line: 69, type: !7924, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !7926)
!7924 = !DISubroutineType(types: !7925)
!7925 = !{!1142, !168, !103}
!7926 = !{!7927, !7928, !7929}
!7927 = !DILocalVariable(name: "s", arg: 1, scope: !7923, file: !7872, line: 69, type: !168)
!7928 = !DILocalVariable(name: "c", arg: 2, scope: !7923, file: !7872, line: 69, type: !103)
!7929 = !DILocalVariable(name: "tmp", scope: !7923, file: !7872, line: 71, type: !108)
!7930 = !DILocation(line: 0, scope: !7923)
!7931 = !DILocation(line: 73, column: 2, scope: !7923)
!7932 = !DILocation(line: 73, column: 10, scope: !7923)
!7933 = !DILocation(line: 73, column: 13, scope: !7923)
!7934 = !DILocation(line: 73, column: 21, scope: !7923)
!7935 = !DILocation(line: 74, column: 4, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7923, file: !7872, line: 73, column: 38)
!7937 = distinct !{!7937, !7931, !7938}
!7938 = !DILocation(line: 75, column: 2, scope: !7923)
!7939 = !DILocation(line: 77, column: 9, scope: !7923)
!7940 = !DILocation(line: 77, column: 2, scope: !7923)
!7941 = distinct !DISubprogram(name: "strrchr", scope: !7872, file: !7872, line: 87, type: !7924, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !7942)
!7942 = !{!7943, !7944, !7945}
!7943 = !DILocalVariable(name: "s", arg: 1, scope: !7941, file: !7872, line: 87, type: !168)
!7944 = !DILocalVariable(name: "c", arg: 2, scope: !7941, file: !7872, line: 87, type: !103)
!7945 = !DILocalVariable(name: "match", scope: !7941, file: !7872, line: 89, type: !1142)
!7946 = !DILocation(line: 0, scope: !7941)
!7947 = !DILocation(line: 91, column: 2, scope: !7941)
!7948 = !DILocation(line: 92, column: 7, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !7872, line: 92, column: 7)
!7950 = distinct !DILexicalBlock(scope: !7941, file: !7872, line: 91, column: 5)
!7951 = !DILocation(line: 92, column: 10, scope: !7949)
!7952 = !DILocation(line: 92, column: 7, scope: !7950)
!7953 = !DILocation(line: 95, column: 13, scope: !7941)
!7954 = !DILocation(line: 95, column: 2, scope: !7950)
!7955 = distinct !{!7955, !7947, !7956}
!7956 = !DILocation(line: 95, column: 15, scope: !7941)
!7957 = !DILocation(line: 97, column: 2, scope: !7941)
!7958 = distinct !DISubprogram(name: "strlen", scope: !7872, file: !7872, line: 107, type: !7959, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !7961)
!7959 = !DISubroutineType(types: !7960)
!7960 = !{!369, !168}
!7961 = !{!7962, !7963}
!7962 = !DILocalVariable(name: "s", arg: 1, scope: !7958, file: !7872, line: 107, type: !168)
!7963 = !DILocalVariable(name: "n", scope: !7958, file: !7872, line: 109, type: !369)
!7964 = !DILocation(line: 0, scope: !7958)
!7965 = !DILocation(line: 111, column: 9, scope: !7958)
!7966 = !DILocation(line: 111, column: 12, scope: !7958)
!7967 = !DILocation(line: 111, column: 2, scope: !7958)
!7968 = !DILocation(line: 112, column: 4, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7958, file: !7872, line: 111, column: 21)
!7970 = !DILocation(line: 113, column: 4, scope: !7969)
!7971 = distinct !{!7971, !7967, !7972}
!7972 = !DILocation(line: 114, column: 2, scope: !7958)
!7973 = !DILocation(line: 116, column: 2, scope: !7958)
!7974 = distinct !DISubprogram(name: "strnlen", scope: !7872, file: !7872, line: 126, type: !7975, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !7977)
!7975 = !DISubroutineType(types: !7976)
!7976 = !{!369, !168, !369}
!7977 = !{!7978, !7979, !7980}
!7978 = !DILocalVariable(name: "s", arg: 1, scope: !7974, file: !7872, line: 126, type: !168)
!7979 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7974, file: !7872, line: 126, type: !369)
!7980 = !DILocalVariable(name: "n", scope: !7974, file: !7872, line: 128, type: !369)
!7981 = !DILocation(line: 0, scope: !7974)
!7982 = !DILocation(line: 130, column: 9, scope: !7974)
!7983 = !DILocation(line: 130, column: 12, scope: !7974)
!7984 = !DILocation(line: 130, column: 20, scope: !7974)
!7985 = !DILocation(line: 130, column: 2, scope: !7974)
!7986 = !DILocation(line: 131, column: 4, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7974, file: !7872, line: 130, column: 35)
!7988 = !DILocation(line: 132, column: 4, scope: !7987)
!7989 = distinct !{!7989, !7985, !7990}
!7990 = !DILocation(line: 133, column: 2, scope: !7974)
!7991 = !DILocation(line: 135, column: 2, scope: !7974)
!7992 = distinct !DISubprogram(name: "strcmp", scope: !7872, file: !7872, line: 145, type: !7993, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !7995)
!7993 = !DISubroutineType(types: !7994)
!7994 = !{!103, !168, !168}
!7995 = !{!7996, !7997}
!7996 = !DILocalVariable(name: "s1", arg: 1, scope: !7992, file: !7872, line: 145, type: !168)
!7997 = !DILocalVariable(name: "s2", arg: 2, scope: !7992, file: !7872, line: 145, type: !168)
!7998 = !DILocation(line: 0, scope: !7992)
!7999 = !DILocation(line: 147, column: 10, scope: !7992)
!8000 = !DILocation(line: 147, column: 17, scope: !7992)
!8001 = !DILocation(line: 147, column: 14, scope: !7992)
!8002 = !DILocation(line: 147, column: 22, scope: !7992)
!8003 = !DILocation(line: 148, column: 5, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7992, file: !7872, line: 147, column: 40)
!8005 = !DILocation(line: 149, column: 5, scope: !8004)
!8006 = distinct !{!8006, !8007, !8008}
!8007 = !DILocation(line: 147, column: 2, scope: !7992)
!8008 = !DILocation(line: 150, column: 2, scope: !7992)
!8009 = !DILocation(line: 152, column: 9, scope: !7992)
!8010 = !DILocation(line: 152, column: 15, scope: !7992)
!8011 = !DILocation(line: 152, column: 13, scope: !7992)
!8012 = !DILocation(line: 152, column: 2, scope: !7992)
!8013 = distinct !DISubprogram(name: "strncmp", scope: !7872, file: !7872, line: 162, type: !8014, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8016)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!103, !168, !168, !369}
!8016 = !{!8017, !8018, !8019}
!8017 = !DILocalVariable(name: "s1", arg: 1, scope: !8013, file: !7872, line: 162, type: !168)
!8018 = !DILocalVariable(name: "s2", arg: 2, scope: !8013, file: !7872, line: 162, type: !168)
!8019 = !DILocalVariable(name: "n", arg: 3, scope: !8013, file: !7872, line: 162, type: !369)
!8020 = !DILocation(line: 0, scope: !8013)
!8021 = !DILocation(line: 164, column: 17, scope: !8013)
!8022 = !DILocation(line: 164, column: 21, scope: !8013)
!8023 = !DILocation(line: 164, column: 28, scope: !8013)
!8024 = !DILocation(line: 164, column: 25, scope: !8013)
!8025 = !DILocation(line: 164, column: 33, scope: !8013)
!8026 = !DILocation(line: 165, column: 5, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8013, file: !7872, line: 164, column: 51)
!8028 = !DILocation(line: 166, column: 5, scope: !8027)
!8029 = !DILocation(line: 167, column: 4, scope: !8027)
!8030 = distinct !{!8030, !8031, !8032}
!8031 = !DILocation(line: 164, column: 2, scope: !8013)
!8032 = !DILocation(line: 168, column: 2, scope: !8013)
!8033 = !DILocation(line: 170, column: 25, scope: !8013)
!8034 = !DILocation(line: 170, column: 31, scope: !8013)
!8035 = !DILocation(line: 170, column: 29, scope: !8013)
!8036 = !DILocation(line: 170, column: 9, scope: !8013)
!8037 = !DILocation(line: 170, column: 2, scope: !8013)
!8038 = distinct !DISubprogram(name: "strtok_r", scope: !7872, file: !7872, line: 180, type: !8039, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8042)
!8039 = !DISubroutineType(types: !8040)
!8040 = !{!1142, !1142, !168, !8041}
!8041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!8042 = !{!8043, !8044, !8045, !8046, !8047}
!8043 = !DILocalVariable(name: "str", arg: 1, scope: !8038, file: !7872, line: 180, type: !1142)
!8044 = !DILocalVariable(name: "sep", arg: 2, scope: !8038, file: !7872, line: 180, type: !168)
!8045 = !DILocalVariable(name: "state", arg: 3, scope: !8038, file: !7872, line: 180, type: !8041)
!8046 = !DILocalVariable(name: "start", scope: !8038, file: !7872, line: 182, type: !1142)
!8047 = !DILocalVariable(name: "end", scope: !8038, file: !7872, line: 182, type: !1142)
!8048 = !DILocation(line: 0, scope: !8038)
!8049 = !DILocation(line: 184, column: 10, scope: !8038)
!8050 = !DILocation(line: 184, column: 22, scope: !8038)
!8051 = !DILocation(line: 187, column: 9, scope: !8038)
!8052 = !DILocation(line: 187, column: 16, scope: !8038)
!8053 = !DILocation(line: 187, column: 19, scope: !8038)
!8054 = !DILocation(line: 187, column: 2, scope: !8038)
!8055 = !DILocation(line: 188, column: 8, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8038, file: !7872, line: 187, column: 40)
!8057 = distinct !{!8057, !8054, !8058}
!8058 = !DILocation(line: 189, column: 2, scope: !8038)
!8059 = !DILocation(line: 198, column: 9, scope: !8038)
!8060 = !DILocation(line: 198, column: 18, scope: !8038)
!8061 = !DILocation(line: 198, column: 17, scope: !8038)
!8062 = !DILocation(line: 198, column: 2, scope: !8038)
!8063 = !DILocation(line: 199, column: 6, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8038, file: !7872, line: 198, column: 37)
!8065 = !DILocation(line: 198, column: 14, scope: !8038)
!8066 = distinct !{!8066, !8062, !8067}
!8067 = !DILocation(line: 200, column: 2, scope: !8038)
!8068 = !DILocation(line: 203, column: 8, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !7872, line: 202, column: 20)
!8070 = distinct !DILexicalBlock(scope: !8038, file: !7872, line: 202, column: 6)
!8071 = !DILocation(line: 204, column: 16, scope: !8069)
!8072 = !DILocation(line: 205, column: 2, scope: !8069)
!8073 = !DILocation(line: 210, column: 1, scope: !8038)
!8074 = distinct !DISubprogram(name: "strcat", scope: !7872, file: !7872, line: 212, type: !7873, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8075)
!8075 = !{!8076, !8077}
!8076 = !DILocalVariable(name: "dest", arg: 1, scope: !8074, file: !7872, line: 212, type: !7875)
!8077 = !DILocalVariable(name: "src", arg: 2, scope: !8074, file: !7872, line: 212, type: !7876)
!8078 = !DILocation(line: 0, scope: !8074)
!8079 = !DILocation(line: 214, column: 16, scope: !8074)
!8080 = !DILocation(line: 214, column: 14, scope: !8074)
!8081 = !DILocation(line: 214, column: 2, scope: !8074)
!8082 = !DILocation(line: 215, column: 2, scope: !8074)
!8083 = distinct !DISubprogram(name: "strncat", scope: !7872, file: !7872, line: 218, type: !7894, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8084)
!8084 = !{!8085, !8086, !8087, !8088, !8089}
!8085 = !DILocalVariable(name: "dest", arg: 1, scope: !8083, file: !7872, line: 218, type: !7875)
!8086 = !DILocalVariable(name: "src", arg: 2, scope: !8083, file: !7872, line: 218, type: !7876)
!8087 = !DILocalVariable(name: "n", arg: 3, scope: !8083, file: !7872, line: 219, type: !369)
!8088 = !DILocalVariable(name: "orig_dest", scope: !8083, file: !7872, line: 221, type: !1142)
!8089 = !DILocalVariable(name: "len", scope: !8083, file: !7872, line: 222, type: !369)
!8090 = !DILocation(line: 0, scope: !8083)
!8091 = !DILocation(line: 222, column: 15, scope: !8083)
!8092 = !DILocation(line: 224, column: 7, scope: !8083)
!8093 = !DILocation(line: 225, column: 14, scope: !8083)
!8094 = !DILocation(line: 225, column: 19, scope: !8083)
!8095 = !DILocation(line: 225, column: 11, scope: !8083)
!8096 = !DILocation(line: 225, column: 23, scope: !8083)
!8097 = !DILocation(line: 225, column: 28, scope: !8083)
!8098 = !DILocation(line: 225, column: 2, scope: !8083)
!8099 = !DILocation(line: 226, column: 17, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8083, file: !7872, line: 225, column: 38)
!8101 = !DILocation(line: 226, column: 8, scope: !8100)
!8102 = !DILocation(line: 226, column: 11, scope: !8100)
!8103 = distinct !{!8103, !8098, !8104}
!8104 = !DILocation(line: 227, column: 2, scope: !8083)
!8105 = !DILocation(line: 228, column: 8, scope: !8083)
!8106 = !DILocation(line: 230, column: 2, scope: !8083)
!8107 = distinct !DISubprogram(name: "memcmp", scope: !7872, file: !7872, line: 239, type: !8108, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8110)
!8108 = !DISubroutineType(types: !8109)
!8109 = !{!103, !13, !13, !369}
!8110 = !{!8111, !8112, !8113, !8114, !8115}
!8111 = !DILocalVariable(name: "m1", arg: 1, scope: !8107, file: !7872, line: 239, type: !13)
!8112 = !DILocalVariable(name: "m2", arg: 2, scope: !8107, file: !7872, line: 239, type: !13)
!8113 = !DILocalVariable(name: "n", arg: 3, scope: !8107, file: !7872, line: 239, type: !369)
!8114 = !DILocalVariable(name: "c1", scope: !8107, file: !7872, line: 241, type: !168)
!8115 = !DILocalVariable(name: "c2", scope: !8107, file: !7872, line: 242, type: !168)
!8116 = !DILocation(line: 0, scope: !8107)
!8117 = !DILocation(line: 244, column: 7, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8107, file: !7872, line: 244, column: 6)
!8119 = !DILocation(line: 244, column: 6, scope: !8107)
!8120 = !DILocation(line: 248, column: 10, scope: !8107)
!8121 = !DILocation(line: 248, column: 14, scope: !8107)
!8122 = !DILocation(line: 248, column: 19, scope: !8107)
!8123 = !DILocation(line: 248, column: 2, scope: !8107)
!8124 = !DILocation(line: 248, column: 23, scope: !8107)
!8125 = !DILocation(line: 248, column: 30, scope: !8107)
!8126 = !DILocation(line: 248, column: 27, scope: !8107)
!8127 = !DILocation(line: 249, column: 5, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8107, file: !7872, line: 248, column: 36)
!8129 = !DILocation(line: 250, column: 5, scope: !8128)
!8130 = distinct !{!8130, !8123, !8131}
!8131 = !DILocation(line: 251, column: 2, scope: !8107)
!8132 = !DILocation(line: 253, column: 9, scope: !8107)
!8133 = !DILocation(line: 253, column: 15, scope: !8107)
!8134 = !DILocation(line: 253, column: 13, scope: !8107)
!8135 = !DILocation(line: 253, column: 2, scope: !8107)
!8136 = !DILocation(line: 254, column: 1, scope: !8107)
!8137 = distinct !DISubprogram(name: "memmove", scope: !7872, file: !7872, line: 263, type: !8138, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8140)
!8138 = !DISubroutineType(types: !8139)
!8139 = !{!102, !102, !13, !369}
!8140 = !{!8141, !8142, !8143, !8144, !8145}
!8141 = !DILocalVariable(name: "d", arg: 1, scope: !8137, file: !7872, line: 263, type: !102)
!8142 = !DILocalVariable(name: "s", arg: 2, scope: !8137, file: !7872, line: 263, type: !13)
!8143 = !DILocalVariable(name: "n", arg: 3, scope: !8137, file: !7872, line: 263, type: !369)
!8144 = !DILocalVariable(name: "dest", scope: !8137, file: !7872, line: 265, type: !1142)
!8145 = !DILocalVariable(name: "src", scope: !8137, file: !7872, line: 266, type: !168)
!8146 = !DILocation(line: 0, scope: !8137)
!8147 = !DILocation(line: 268, column: 21, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8137, file: !7872, line: 268, column: 6)
!8149 = !DILocation(line: 268, column: 28, scope: !8148)
!8150 = !DILocation(line: 268, column: 6, scope: !8137)
!8151 = !DILocation(line: 280, column: 12, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !7872, line: 278, column: 9)
!8153 = !DILocation(line: 280, column: 3, scope: !8152)
!8154 = !DILocation(line: 275, column: 5, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8156, file: !7872, line: 274, column: 17)
!8156 = distinct !DILexicalBlock(scope: !8148, file: !7872, line: 268, column: 33)
!8157 = !DILocation(line: 276, column: 14, scope: !8155)
!8158 = !DILocation(line: 276, column: 4, scope: !8155)
!8159 = !DILocation(line: 276, column: 12, scope: !8155)
!8160 = !DILocation(line: 274, column: 12, scope: !8156)
!8161 = !DILocation(line: 274, column: 3, scope: !8156)
!8162 = distinct !{!8162, !8161, !8163}
!8163 = !DILocation(line: 277, column: 3, scope: !8156)
!8164 = !DILocation(line: 281, column: 12, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8152, file: !7872, line: 280, column: 17)
!8166 = !DILocation(line: 281, column: 10, scope: !8165)
!8167 = !DILocation(line: 282, column: 8, scope: !8165)
!8168 = !DILocation(line: 283, column: 7, scope: !8165)
!8169 = !DILocation(line: 284, column: 5, scope: !8165)
!8170 = distinct !{!8170, !8153, !8171}
!8171 = !DILocation(line: 285, column: 3, scope: !8152)
!8172 = !DILocation(line: 288, column: 2, scope: !8137)
!8173 = distinct !DISubprogram(name: "memcpy", scope: !7872, file: !7872, line: 298, type: !8174, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8178)
!8174 = !DISubroutineType(types: !8175)
!8175 = !{!102, !8176, !8177, !369}
!8176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8177 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8178 = !{!8179, !8180, !8181, !8182, !8183}
!8179 = !DILocalVariable(name: "d", arg: 1, scope: !8173, file: !7872, line: 298, type: !8176)
!8180 = !DILocalVariable(name: "s", arg: 2, scope: !8173, file: !7872, line: 298, type: !8177)
!8181 = !DILocalVariable(name: "n", arg: 3, scope: !8173, file: !7872, line: 298, type: !369)
!8182 = !DILocalVariable(name: "d_byte", scope: !8173, file: !7872, line: 302, type: !246)
!8183 = !DILocalVariable(name: "s_byte", scope: !8173, file: !7872, line: 303, type: !3044)
!8184 = !DILocation(line: 0, scope: !8173)
!8185 = !DILocation(line: 337, column: 11, scope: !8173)
!8186 = !DILocation(line: 337, column: 2, scope: !8173)
!8187 = !DILocation(line: 338, column: 25, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8173, file: !7872, line: 337, column: 16)
!8189 = !DILocation(line: 338, column: 17, scope: !8188)
!8190 = !DILocation(line: 338, column: 11, scope: !8188)
!8191 = !DILocation(line: 338, column: 15, scope: !8188)
!8192 = !DILocation(line: 339, column: 4, scope: !8188)
!8193 = distinct !{!8193, !8186, !8194}
!8194 = !DILocation(line: 340, column: 2, scope: !8173)
!8195 = !DILocation(line: 342, column: 2, scope: !8173)
!8196 = distinct !DISubprogram(name: "memset", scope: !7872, file: !7872, line: 352, type: !8197, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8199)
!8197 = !DISubroutineType(types: !8198)
!8198 = !{!102, !102, !103, !369}
!8199 = !{!8200, !8201, !8202, !8203, !8204}
!8200 = !DILocalVariable(name: "buf", arg: 1, scope: !8196, file: !7872, line: 352, type: !102)
!8201 = !DILocalVariable(name: "c", arg: 2, scope: !8196, file: !7872, line: 352, type: !103)
!8202 = !DILocalVariable(name: "n", arg: 3, scope: !8196, file: !7872, line: 352, type: !369)
!8203 = !DILocalVariable(name: "d_byte", scope: !8196, file: !7872, line: 356, type: !246)
!8204 = !DILocalVariable(name: "c_byte", scope: !8196, file: !7872, line: 357, type: !177)
!8205 = !DILocation(line: 0, scope: !8196)
!8206 = !DILocation(line: 357, column: 25, scope: !8196)
!8207 = !DILocation(line: 389, column: 11, scope: !8196)
!8208 = !DILocation(line: 389, column: 2, scope: !8196)
!8209 = !DILocation(line: 390, column: 11, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8196, file: !7872, line: 389, column: 16)
!8211 = !DILocation(line: 390, column: 15, scope: !8210)
!8212 = !DILocation(line: 391, column: 4, scope: !8210)
!8213 = distinct !{!8213, !8208, !8214}
!8214 = !DILocation(line: 392, column: 2, scope: !8196)
!8215 = !DILocation(line: 394, column: 2, scope: !8196)
!8216 = distinct !DISubprogram(name: "memchr", scope: !7872, file: !7872, line: 404, type: !8217, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8219)
!8217 = !DISubroutineType(types: !8218)
!8218 = !{!102, !13, !103, !369}
!8219 = !{!8220, !8221, !8222, !8223}
!8220 = !DILocalVariable(name: "s", arg: 1, scope: !8216, file: !7872, line: 404, type: !13)
!8221 = !DILocalVariable(name: "c", arg: 2, scope: !8216, file: !7872, line: 404, type: !103)
!8222 = !DILocalVariable(name: "n", arg: 3, scope: !8216, file: !7872, line: 404, type: !369)
!8223 = !DILocalVariable(name: "p", scope: !8224, file: !7872, line: 407, type: !3044)
!8224 = distinct !DILexicalBlock(scope: !8225, file: !7872, line: 406, column: 14)
!8225 = distinct !DILexicalBlock(scope: !8216, file: !7872, line: 406, column: 6)
!8226 = !DILocation(line: 0, scope: !8216)
!8227 = !DILocation(line: 406, column: 8, scope: !8225)
!8228 = !DILocation(line: 406, column: 6, scope: !8216)
!8229 = !DILocation(line: 409, column: 3, scope: !8224)
!8230 = !DILocation(line: 0, scope: !8224)
!8231 = !DILocation(line: 410, column: 8, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !7872, line: 410, column: 8)
!8233 = distinct !DILexicalBlock(scope: !8224, file: !7872, line: 409, column: 6)
!8234 = !DILocation(line: 410, column: 13, scope: !8232)
!8235 = !DILocation(line: 410, column: 8, scope: !8233)
!8236 = distinct !{!8236, !8229, !8237}
!8237 = !DILocation(line: 414, column: 20, scope: !8224)
!8238 = !DILocation(line: 417, column: 2, scope: !8216)
!8239 = !DILocation(line: 418, column: 1, scope: !8216)
!8240 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !558, file: !558, line: 23, type: !3367, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8241)
!8241 = !{!8242}
!8242 = !DILocalVariable(name: "hook", arg: 1, scope: !8240, file: !558, line: 23, type: !117)
!8243 = !DILocation(line: 0, scope: !8240)
!8244 = !DILocation(line: 25, column: 15, scope: !8240)
!8245 = !DILocation(line: 26, column: 1, scope: !8240)
!8246 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !558, file: !558, line: 14, type: !118, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8247)
!8247 = !{!8248}
!8248 = !DILocalVariable(name: "c", arg: 1, scope: !8246, file: !558, line: 14, type: !103)
!8249 = !DILocation(line: 0, scope: !8246)
!8250 = !DILocation(line: 18, column: 2, scope: !8246)
!8251 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !558, file: !558, line: 28, type: !8252, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8254)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{!103, !103, !554}
!8254 = !{!8255, !8256}
!8255 = !DILocalVariable(name: "c", arg: 1, scope: !8251, file: !558, line: 28, type: !103)
!8256 = !DILocalVariable(name: "stream", arg: 2, scope: !8251, file: !558, line: 28, type: !554)
!8257 = !DILocation(line: 0, scope: !8251)
!8258 = !DILocation(line: 30, column: 27, scope: !8251)
!8259 = !DILocation(line: 30, column: 50, scope: !8251)
!8260 = !DILocation(line: 30, column: 9, scope: !8251)
!8261 = !DILocation(line: 30, column: 2, scope: !8251)
!8262 = distinct !DISubprogram(name: "fputc", scope: !558, file: !558, line: 41, type: !8252, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8263)
!8263 = !{!8264, !8265}
!8264 = !DILocalVariable(name: "c", arg: 1, scope: !8262, file: !558, line: 41, type: !103)
!8265 = !DILocalVariable(name: "stream", arg: 2, scope: !8262, file: !558, line: 41, type: !554)
!8266 = !DILocation(line: 0, scope: !8262)
!8267 = !DILocation(line: 43, column: 9, scope: !8262)
!8268 = !DILocation(line: 43, column: 2, scope: !8262)
!8269 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8270, file: !8270, line: 72, type: !8252, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8271)
!8270 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!8271 = !{!8272, !8273}
!8272 = !DILocalVariable(name: "c", arg: 1, scope: !8269, file: !8270, line: 72, type: !103)
!8273 = !DILocalVariable(name: "stream", arg: 2, scope: !8269, file: !8270, line: 72, type: !554)
!8274 = !DILocation(line: 0, scope: !8269)
!8275 = !DILocation(line: 81, column: 2, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8269, file: !8270, line: 81, column: 2)
!8277 = !{i64 2152278182}
!8278 = !DILocation(line: 82, column: 9, scope: !8269)
!8279 = !DILocation(line: 82, column: 2, scope: !8269)
!8280 = distinct !DISubprogram(name: "fputs", scope: !558, file: !558, line: 46, type: !8281, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8284)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{!103, !7876, !8283}
!8283 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !554)
!8284 = !{!8285, !8286, !8287, !8288}
!8285 = !DILocalVariable(name: "s", arg: 1, scope: !8280, file: !558, line: 46, type: !7876)
!8286 = !DILocalVariable(name: "stream", arg: 2, scope: !8280, file: !558, line: 46, type: !8283)
!8287 = !DILocalVariable(name: "len", scope: !8280, file: !558, line: 48, type: !103)
!8288 = !DILocalVariable(name: "ret", scope: !8280, file: !558, line: 49, type: !103)
!8289 = !DILocation(line: 0, scope: !8280)
!8290 = !DILocation(line: 48, column: 12, scope: !8280)
!8291 = !DILocation(line: 51, column: 8, scope: !8280)
!8292 = !DILocation(line: 53, column: 13, scope: !8280)
!8293 = !DILocation(line: 53, column: 9, scope: !8280)
!8294 = !DILocation(line: 53, column: 2, scope: !8280)
!8295 = distinct !DISubprogram(name: "fwrite", scope: !558, file: !558, line: 99, type: !8296, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8298)
!8296 = !DISubroutineType(types: !8297)
!8297 = !{!369, !8177, !369, !369, !8283}
!8298 = !{!8299, !8300, !8301, !8302}
!8299 = !DILocalVariable(name: "ptr", arg: 1, scope: !8295, file: !558, line: 99, type: !8177)
!8300 = !DILocalVariable(name: "size", arg: 2, scope: !8295, file: !558, line: 99, type: !369)
!8301 = !DILocalVariable(name: "nitems", arg: 3, scope: !8295, file: !558, line: 99, type: !369)
!8302 = !DILocalVariable(name: "stream", arg: 4, scope: !8295, file: !558, line: 100, type: !8283)
!8303 = !DILocation(line: 0, scope: !8295)
!8304 = !DILocation(line: 102, column: 9, scope: !8295)
!8305 = !DILocation(line: 102, column: 2, scope: !8295)
!8306 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8270, file: !8270, line: 96, type: !8296, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8307)
!8307 = !{!8308, !8309, !8310, !8311}
!8308 = !DILocalVariable(name: "ptr", arg: 1, scope: !8306, file: !8270, line: 96, type: !8177)
!8309 = !DILocalVariable(name: "size", arg: 2, scope: !8306, file: !8270, line: 96, type: !369)
!8310 = !DILocalVariable(name: "nitems", arg: 3, scope: !8306, file: !8270, line: 96, type: !369)
!8311 = !DILocalVariable(name: "stream", arg: 4, scope: !8306, file: !8270, line: 96, type: !8283)
!8312 = !DILocation(line: 0, scope: !8306)
!8313 = !DILocation(line: 107, column: 2, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8306, file: !8270, line: 107, column: 2)
!8315 = !{i64 2152278286}
!8316 = !DILocation(line: 108, column: 9, scope: !8306)
!8317 = !DILocation(line: 108, column: 2, scope: !8306)
!8318 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !558, file: !558, line: 56, type: !8296, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8319)
!8319 = !{!8320, !8321, !8322, !8323, !8324, !8325, !8326, !8327}
!8320 = !DILocalVariable(name: "ptr", arg: 1, scope: !8318, file: !558, line: 56, type: !8177)
!8321 = !DILocalVariable(name: "size", arg: 2, scope: !8318, file: !558, line: 56, type: !369)
!8322 = !DILocalVariable(name: "nitems", arg: 3, scope: !8318, file: !558, line: 57, type: !369)
!8323 = !DILocalVariable(name: "stream", arg: 4, scope: !8318, file: !558, line: 57, type: !8283)
!8324 = !DILocalVariable(name: "i", scope: !8318, file: !558, line: 59, type: !369)
!8325 = !DILocalVariable(name: "j", scope: !8318, file: !558, line: 60, type: !369)
!8326 = !DILocalVariable(name: "p", scope: !8318, file: !558, line: 61, type: !3044)
!8327 = !DILabel(scope: !8318, name: "done", file: !558, line: 82)
!8328 = !DILocation(line: 0, scope: !8318)
!8329 = !DILocation(line: 63, column: 14, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8318, file: !558, line: 63, column: 6)
!8331 = !DILocation(line: 63, column: 24, scope: !8330)
!8332 = !DILocation(line: 72, column: 3, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8318, file: !558, line: 70, column: 5)
!8334 = !DILocation(line: 0, scope: !8333)
!8335 = !DILocation(line: 73, column: 8, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !558, line: 73, column: 8)
!8337 = distinct !DILexicalBlock(scope: !8333, file: !558, line: 72, column: 6)
!8338 = !DILocation(line: 73, column: 29, scope: !8336)
!8339 = !DILocation(line: 73, column: 27, scope: !8336)
!8340 = !DILocation(line: 73, column: 21, scope: !8336)
!8341 = !DILocation(line: 73, column: 33, scope: !8336)
!8342 = !DILocation(line: 73, column: 8, scope: !8337)
!8343 = !DILocation(line: 76, column: 5, scope: !8337)
!8344 = !DILocation(line: 77, column: 14, scope: !8333)
!8345 = !DILocation(line: 77, column: 3, scope: !8337)
!8346 = distinct !{!8346, !8332, !8347}
!8347 = !DILocation(line: 77, column: 17, scope: !8333)
!8348 = !DILocation(line: 79, column: 4, scope: !8333)
!8349 = !DILocation(line: 80, column: 13, scope: !8318)
!8350 = !DILocation(line: 80, column: 2, scope: !8333)
!8351 = distinct !{!8351, !8352, !8353}
!8352 = !DILocation(line: 70, column: 2, scope: !8318)
!8353 = !DILocation(line: 80, column: 16, scope: !8318)
!8354 = !DILocation(line: 82, column: 1, scope: !8318)
!8355 = !DILocation(line: 83, column: 17, scope: !8318)
!8356 = !DILocation(line: 83, column: 2, scope: !8318)
!8357 = !DILocation(line: 84, column: 1, scope: !8318)
!8358 = distinct !DISubprogram(name: "puts", scope: !558, file: !558, line: 106, type: !8359, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !8361)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{!103, !168}
!8361 = !{!8362}
!8362 = !DILocalVariable(name: "s", arg: 1, scope: !8358, file: !558, line: 106, type: !168)
!8363 = !DILocation(line: 0, scope: !8358)
!8364 = !DILocation(line: 108, column: 6, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8358, file: !558, line: 108, column: 6)
!8366 = !DILocation(line: 108, column: 23, scope: !8365)
!8367 = !DILocation(line: 108, column: 6, scope: !8358)
!8368 = !DILocation(line: 112, column: 9, scope: !8358)
!8369 = !DILocation(line: 112, column: 29, scope: !8358)
!8370 = !DILocation(line: 112, column: 2, scope: !8358)
!8371 = !DILocation(line: 113, column: 1, scope: !8358)
!8372 = distinct !DISubprogram(name: "rf_init", scope: !683, file: !683, line: 10, type: !689, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !586, retainedNodes: !8373)
!8373 = !{!8374, !8375, !8383, !8384}
!8374 = !DILocalVariable(name: "dev", arg: 1, scope: !8372, file: !683, line: 10, type: !609)
!8375 = !DILocalVariable(name: "rf1", scope: !8372, file: !683, line: 12, type: !8376)
!8376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8377)
!8377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !590, line: 271, size: 64, elements: !8378)
!8378 = !{!8379, !8380, !8381}
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8377, file: !590, line: 273, baseType: !609, size: 32)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8377, file: !590, line: 275, baseType: !624, size: 8, offset: 32)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !8377, file: !590, line: 277, baseType: !8382, size: 16, offset: 48)
!8382 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !590, line: 249, baseType: !353)
!8383 = !DILocalVariable(name: "rf2", scope: !8372, file: !683, line: 14, type: !8376)
!8384 = !DILocalVariable(name: "rf3", scope: !8372, file: !683, line: 16, type: !8376)
!8385 = !DILocation(line: 0, scope: !8372)
!8386 = !DILocation(line: 12, column: 2, scope: !8372)
!8387 = !DILocation(line: 12, column: 28, scope: !8372)
!8388 = !DILocation(line: 14, column: 2, scope: !8372)
!8389 = !DILocation(line: 14, column: 28, scope: !8372)
!8390 = !DILocation(line: 16, column: 2, scope: !8372)
!8391 = !DILocation(line: 16, column: 28, scope: !8372)
!8392 = !DILocation(line: 22, column: 27, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8372, file: !683, line: 22, column: 6)
!8394 = !DILocation(line: 22, column: 7, scope: !8393)
!8395 = !DILocation(line: 22, column: 33, scope: !8393)
!8396 = !DILocation(line: 23, column: 7, scope: !8393)
!8397 = !DILocation(line: 23, column: 33, scope: !8393)
!8398 = !DILocation(line: 24, column: 7, scope: !8393)
!8399 = !DILocation(line: 22, column: 6, scope: !8372)
!8400 = !DILocation(line: 28, column: 8, scope: !8372)
!8401 = !DILocation(line: 29, column: 8, scope: !8372)
!8402 = !DILocation(line: 30, column: 8, scope: !8372)
!8403 = !DILocation(line: 32, column: 2, scope: !8372)
!8404 = !DILocation(line: 33, column: 1, scope: !8372)
!8405 = distinct !DISubprogram(name: "device_is_ready", scope: !6658, file: !6658, line: 47, type: !8406, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !586, retainedNodes: !8408)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{!179, !609}
!8408 = !{!8409}
!8409 = !DILocalVariable(name: "dev", arg: 1, scope: !8405, file: !6658, line: 47, type: !609)
!8410 = !DILocation(line: 0, scope: !8405)
!8411 = !DILocation(line: 55, column: 2, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8405, file: !6658, line: 55, column: 2)
!8413 = !{i64 2148925959}
!8414 = !DILocation(line: 56, column: 9, scope: !8405)
!8415 = !DILocation(line: 56, column: 2, scope: !8405)
!8416 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !590, file: !590, line: 731, type: !8417, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !586, retainedNodes: !8420)
!8417 = !DISubroutineType(types: !8418)
!8418 = !{!103, !8419, !625}
!8419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8376, size: 32)
!8420 = !{!8421, !8422}
!8421 = !DILocalVariable(name: "spec", arg: 1, scope: !8416, file: !590, line: 731, type: !8419)
!8422 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !8416, file: !590, line: 732, type: !625)
!8423 = !DILocation(line: 0, scope: !8416)
!8424 = !DILocation(line: 734, column: 34, scope: !8416)
!8425 = !DILocation(line: 735, column: 13, scope: !8416)
!8426 = !DILocation(line: 736, column: 13, scope: !8416)
!8427 = !DILocation(line: 736, column: 7, scope: !8416)
!8428 = !DILocation(line: 736, column: 22, scope: !8416)
!8429 = !DILocation(line: 734, column: 9, scope: !8416)
!8430 = !DILocation(line: 734, column: 2, scope: !8416)
!8431 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !8432, file: !8432, line: 49, type: !607, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !586, retainedNodes: !8433)
!8432 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/subsys/console/echo")
!8433 = !{!8434, !8435, !8436}
!8434 = !DILocalVariable(name: "port", arg: 1, scope: !8431, file: !8432, line: 49, type: !609)
!8435 = !DILocalVariable(name: "pin", arg: 2, scope: !8431, file: !8432, line: 49, type: !624)
!8436 = !DILocalVariable(name: "flags", arg: 3, scope: !8431, file: !8432, line: 49, type: !625)
!8437 = !DILocation(line: 0, scope: !8431)
!8438 = !DILocation(line: 59, column: 2, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8431, file: !8432, line: 59, column: 2)
!8440 = !{i64 2148940329}
!8441 = !DILocation(line: 60, column: 9, scope: !8431)
!8442 = !DILocation(line: 60, column: 2, scope: !8431)
!8443 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !590, file: !590, line: 667, type: !607, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !586, retainedNodes: !8444)
!8444 = !{!8445, !8446, !8447, !8448, !8449, !8451}
!8445 = !DILocalVariable(name: "port", arg: 1, scope: !8443, file: !590, line: 667, type: !609)
!8446 = !DILocalVariable(name: "pin", arg: 2, scope: !8443, file: !590, line: 668, type: !624)
!8447 = !DILocalVariable(name: "flags", arg: 3, scope: !8443, file: !590, line: 669, type: !625)
!8448 = !DILocalVariable(name: "api", scope: !8443, file: !590, line: 671, type: !601)
!8449 = !DILocalVariable(name: "cfg", scope: !8443, file: !590, line: 673, type: !8450)
!8450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !671)
!8451 = !DILocalVariable(name: "data", scope: !8443, file: !590, line: 675, type: !681)
!8452 = !DILocation(line: 0, scope: !8443)
!8453 = !DILocation(line: 672, column: 41, scope: !8443)
!8454 = !DILocation(line: 676, column: 36, scope: !8443)
!8455 = !DILocation(line: 701, column: 6, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8443, file: !590, line: 700, column: 6)
!8457 = !DILocation(line: 711, column: 13, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8443, file: !590, line: 711, column: 6)
!8459 = !DILocation(line: 711, column: 32, scope: !8458)
!8460 = !DILocation(line: 0, scope: !8458)
!8461 = !DILocation(line: 711, column: 6, scope: !8443)
!8462 = !DILocation(line: 712, column: 9, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8458, file: !590, line: 711, column: 38)
!8464 = !DILocation(line: 712, column: 16, scope: !8463)
!8465 = !DILocation(line: 713, column: 2, scope: !8463)
!8466 = !DILocation(line: 714, column: 19, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8458, file: !590, line: 713, column: 9)
!8468 = !DILocation(line: 714, column: 9, scope: !8467)
!8469 = !DILocation(line: 714, column: 16, scope: !8467)
!8470 = !DILocation(line: 706, column: 8, scope: !8443)
!8471 = !DILocation(line: 717, column: 14, scope: !8443)
!8472 = !DILocation(line: 717, column: 9, scope: !8443)
!8473 = !DILocation(line: 717, column: 2, scope: !8443)
!8474 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !165, file: !165, line: 730, type: !8406, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !586, retainedNodes: !8475)
!8475 = !{!8476}
!8476 = !DILocalVariable(name: "dev", arg: 1, scope: !8474, file: !165, line: 730, type: !609)
!8477 = !DILocation(line: 0, scope: !8474)
!8478 = !DILocation(line: 732, column: 9, scope: !8474)
!8479 = !DILocation(line: 732, column: 2, scope: !8474)
!8480 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !766, file: !766, line: 368, type: !819, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8481)
!8481 = !{!8482}
!8482 = !DILocalVariable(name: "dev", arg: 1, scope: !8480, file: !766, line: 368, type: !795)
!8483 = !DILocation(line: 0, scope: !8480)
!8484 = !DILocation(line: 370, column: 2, scope: !8480)
!8485 = !DILocation(line: 371, column: 1, scope: !8480)
!8486 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !766, file: !766, line: 243, type: !8487, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8489)
!8487 = !DISubroutineType(types: !8488)
!8488 = !{null, !103, !103, !795}
!8489 = !{!8490, !8491, !8492, !8493, !8495}
!8490 = !DILocalVariable(name: "min", arg: 1, scope: !8486, file: !766, line: 243, type: !103)
!8491 = !DILocalVariable(name: "max", arg: 2, scope: !8486, file: !766, line: 243, type: !103)
!8492 = !DILocalVariable(name: "dev", arg: 3, scope: !8486, file: !766, line: 243, type: !795)
!8493 = !DILocalVariable(name: "data", scope: !8486, file: !766, line: 245, type: !8494)
!8494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!8495 = !DILocalVariable(name: "line", scope: !8486, file: !766, line: 246, type: !103)
!8496 = !DILocation(line: 0, scope: !8486)
!8497 = !DILocation(line: 245, column: 38, scope: !8486)
!8498 = !DILocation(line: 249, column: 24, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !766, line: 249, column: 2)
!8500 = distinct !DILexicalBlock(scope: !8486, file: !766, line: 249, column: 2)
!8501 = !DILocation(line: 249, column: 2, scope: !8500)
!8502 = !DILocation(line: 251, column: 7, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8504, file: !766, line: 251, column: 7)
!8504 = distinct !DILexicalBlock(scope: !8499, file: !766, line: 249, column: 39)
!8505 = !DILocation(line: 251, column: 7, scope: !8504)
!8506 = !DILocation(line: 253, column: 4, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8503, file: !766, line: 251, column: 36)
!8508 = !DILocation(line: 256, column: 24, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8507, file: !766, line: 256, column: 8)
!8510 = !DILocation(line: 256, column: 9, scope: !8509)
!8511 = !DILocation(line: 256, column: 8, scope: !8507)
!8512 = !DILocation(line: 260, column: 43, scope: !8507)
!8513 = !DILocation(line: 260, column: 4, scope: !8507)
!8514 = !DILocation(line: 261, column: 3, scope: !8507)
!8515 = !DILocation(line: 249, column: 35, scope: !8499)
!8516 = distinct !{!8516, !8501, !8517}
!8517 = !DILocation(line: 262, column: 2, scope: !8500)
!8518 = !DILocation(line: 263, column: 1, scope: !8486)
!8519 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !766, file: !766, line: 158, type: !118, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8520)
!8520 = !{!8521}
!8521 = !DILocalVariable(name: "line", arg: 1, scope: !8519, file: !766, line: 158, type: !103)
!8522 = !DILocation(line: 0, scope: !8519)
!8523 = !DILocation(line: 170, column: 38, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !766, line: 160, column: 17)
!8525 = distinct !DILexicalBlock(scope: !8519, file: !766, line: 160, column: 6)
!8526 = !DILocation(line: 170, column: 10, scope: !8524)
!8527 = !DILocation(line: 176, column: 1, scope: !8519)
!8528 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !766, file: !766, line: 183, type: !8529, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8531)
!8529 = !DISubroutineType(types: !8530)
!8530 = !{null, !103}
!8531 = !{!8532}
!8532 = !DILocalVariable(name: "line", arg: 1, scope: !8528, file: !766, line: 183, type: !103)
!8533 = !DILocation(line: 0, scope: !8528)
!8534 = !DILocation(line: 195, column: 28, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8536, file: !766, line: 185, column: 17)
!8536 = distinct !DILexicalBlock(scope: !8528, file: !766, line: 185, column: 6)
!8537 = !DILocation(line: 195, column: 3, scope: !8535)
!8538 = !DILocation(line: 200, column: 1, scope: !8528)
!8539 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8540, file: !8540, line: 971, type: !5804, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8541)
!8540 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8541 = !{!8542}
!8542 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8539, file: !8540, line: 971, type: !132)
!8543 = !DILocation(line: 0, scope: !8539)
!8544 = !DILocation(line: 973, column: 3, scope: !8539)
!8545 = !DILocation(line: 974, column: 1, scope: !8539)
!8546 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8540, file: !8540, line: 891, type: !7786, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8547)
!8547 = !{!8548}
!8548 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8546, file: !8540, line: 891, type: !132)
!8549 = !DILocation(line: 0, scope: !8546)
!8550 = !DILocation(line: 893, column: 11, scope: !8546)
!8551 = !DILocation(line: 893, column: 40, scope: !8546)
!8552 = !DILocation(line: 893, column: 3, scope: !8546)
!8553 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !766, file: !766, line: 304, type: !819, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8554)
!8554 = !{!8555}
!8555 = !DILocalVariable(name: "dev", arg: 1, scope: !8553, file: !766, line: 304, type: !795)
!8556 = !DILocation(line: 0, scope: !8553)
!8557 = !DILocation(line: 306, column: 2, scope: !8553)
!8558 = !DILocation(line: 307, column: 1, scope: !8553)
!8559 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !766, file: !766, line: 299, type: !819, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8560)
!8560 = !{!8561}
!8561 = !DILocalVariable(name: "dev", arg: 1, scope: !8559, file: !766, line: 299, type: !795)
!8562 = !DILocation(line: 0, scope: !8559)
!8563 = !DILocation(line: 301, column: 2, scope: !8559)
!8564 = !DILocation(line: 302, column: 1, scope: !8559)
!8565 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !766, file: !766, line: 294, type: !819, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8566)
!8566 = !{!8567}
!8567 = !DILocalVariable(name: "dev", arg: 1, scope: !8565, file: !766, line: 294, type: !795)
!8568 = !DILocation(line: 0, scope: !8565)
!8569 = !DILocation(line: 296, column: 2, scope: !8565)
!8570 = !DILocation(line: 297, column: 1, scope: !8565)
!8571 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !766, file: !766, line: 289, type: !819, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8572)
!8572 = !{!8573}
!8573 = !DILocalVariable(name: "dev", arg: 1, scope: !8571, file: !766, line: 289, type: !795)
!8574 = !DILocation(line: 0, scope: !8571)
!8575 = !DILocation(line: 291, column: 2, scope: !8571)
!8576 = !DILocation(line: 292, column: 1, scope: !8571)
!8577 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !766, file: !766, line: 373, type: !819, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8578)
!8578 = !{!8579}
!8579 = !DILocalVariable(name: "dev", arg: 1, scope: !8577, file: !766, line: 373, type: !795)
!8580 = !DILocation(line: 0, scope: !8577)
!8581 = !DILocation(line: 375, column: 2, scope: !8577)
!8582 = !DILocation(line: 376, column: 1, scope: !8577)
!8583 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !766, file: !766, line: 284, type: !819, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8584)
!8584 = !{!8585}
!8585 = !DILocalVariable(name: "dev", arg: 1, scope: !8583, file: !766, line: 284, type: !795)
!8586 = !DILocation(line: 0, scope: !8583)
!8587 = !DILocation(line: 286, column: 2, scope: !8583)
!8588 = !DILocation(line: 287, column: 1, scope: !8583)
!8589 = distinct !DISubprogram(name: "stm32_exti_init", scope: !766, file: !766, line: 416, type: !793, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8590)
!8590 = !{!8591}
!8591 = !DILocalVariable(name: "dev", arg: 1, scope: !8589, file: !766, line: 416, type: !795)
!8592 = !DILocation(line: 0, scope: !8589)
!8593 = !DILocation(line: 418, column: 2, scope: !8589)
!8594 = !DILocation(line: 420, column: 2, scope: !8589)
!8595 = !DILocation(line: 0, scope: !818)
!8596 = !DILocation(line: 493, column: 2, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !818, file: !766, line: 493, column: 2)
!8598 = !DILocation(line: 497, column: 2, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !818, file: !766, line: 497, column: 2)
!8600 = !DILocation(line: 507, column: 2, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !818, file: !766, line: 507, column: 2)
!8602 = !DILocation(line: 512, column: 2, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !818, file: !766, line: 512, column: 2)
!8604 = !DILocation(line: 516, column: 2, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !818, file: !766, line: 516, column: 2)
!8606 = !DILocation(line: 523, column: 2, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !818, file: !766, line: 523, column: 2)
!8608 = !DILocation(line: 527, column: 2, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !818, file: !766, line: 527, column: 2)
!8610 = !DILocation(line: 607, column: 1, scope: !818)
!8611 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !766, file: !766, line: 112, type: !8529, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8612)
!8612 = !{!8613, !8614}
!8613 = !DILocalVariable(name: "line", arg: 1, scope: !8611, file: !766, line: 112, type: !103)
!8614 = !DILocalVariable(name: "irqnum", scope: !8611, file: !766, line: 114, type: !103)
!8615 = !DILocation(line: 0, scope: !8611)
!8616 = !DILocation(line: 121, column: 11, scope: !8611)
!8617 = !DILocation(line: 130, column: 26, scope: !8611)
!8618 = !DILocation(line: 130, column: 2, scope: !8611)
!8619 = !DILocation(line: 134, column: 2, scope: !8611)
!8620 = !DILocation(line: 135, column: 1, scope: !8611)
!8621 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8540, file: !8540, line: 274, type: !5804, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8622)
!8622 = !{!8623}
!8623 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8621, file: !8540, line: 274, type: !132)
!8624 = !DILocation(line: 0, scope: !8621)
!8625 = !DILocation(line: 276, column: 3, scope: !8621)
!8626 = !DILocation(line: 277, column: 1, scope: !8621)
!8627 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !766, file: !766, line: 137, type: !8529, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8628)
!8628 = !{!8629}
!8629 = !DILocalVariable(name: "line", arg: 1, scope: !8627, file: !766, line: 137, type: !103)
!8630 = !DILocation(line: 0, scope: !8627)
!8631 = !DILocation(line: 141, column: 11, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8627, file: !766, line: 141, column: 6)
!8633 = !DILocation(line: 141, column: 6, scope: !8627)
!8634 = !DILocation(line: 145, column: 28, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8632, file: !766, line: 141, column: 17)
!8636 = !DILocation(line: 145, column: 3, scope: !8635)
!8637 = !DILocation(line: 147, column: 2, scope: !8635)
!8638 = !DILocation(line: 151, column: 1, scope: !8627)
!8639 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8540, file: !8540, line: 322, type: !5804, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8640)
!8640 = !{!8641}
!8641 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8639, file: !8540, line: 322, type: !132)
!8642 = !DILocation(line: 0, scope: !8639)
!8643 = !DILocation(line: 324, column: 3, scope: !8639)
!8644 = !DILocation(line: 325, column: 1, scope: !8639)
!8645 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !766, file: !766, line: 202, type: !8646, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8648)
!8646 = !DISubroutineType(types: !8647)
!8647 = !{null, !103, !103}
!8648 = !{!8649, !8650}
!8649 = !DILocalVariable(name: "line", arg: 1, scope: !8645, file: !766, line: 202, type: !103)
!8650 = !DILocalVariable(name: "trigger", arg: 2, scope: !8645, file: !766, line: 202, type: !103)
!8651 = !DILocation(line: 0, scope: !8645)
!8652 = !DILocation(line: 211, column: 2, scope: !8645)
!8653 = !DILocation(line: 213, column: 36, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8645, file: !766, line: 211, column: 19)
!8655 = !DILocation(line: 213, column: 3, scope: !8654)
!8656 = !DILocation(line: 214, column: 3, scope: !8654)
!8657 = !DILocation(line: 215, column: 3, scope: !8654)
!8658 = !DILocation(line: 217, column: 35, scope: !8654)
!8659 = !DILocation(line: 217, column: 3, scope: !8654)
!8660 = !DILocation(line: 218, column: 3, scope: !8654)
!8661 = !DILocation(line: 219, column: 3, scope: !8654)
!8662 = !DILocation(line: 221, column: 36, scope: !8654)
!8663 = !DILocation(line: 221, column: 3, scope: !8654)
!8664 = !DILocation(line: 222, column: 3, scope: !8654)
!8665 = !DILocation(line: 223, column: 3, scope: !8654)
!8666 = !DILocation(line: 225, column: 35, scope: !8654)
!8667 = !DILocation(line: 225, column: 3, scope: !8654)
!8668 = !DILocation(line: 226, column: 3, scope: !8654)
!8669 = !DILocation(line: 227, column: 3, scope: !8654)
!8670 = !DILocation(line: 232, column: 1, scope: !8645)
!8671 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8540, file: !8540, line: 618, type: !5804, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8672)
!8672 = !{!8673}
!8673 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8671, file: !8540, line: 618, type: !132)
!8674 = !DILocation(line: 0, scope: !8671)
!8675 = !DILocation(line: 620, column: 3, scope: !8671)
!8676 = !DILocation(line: 622, column: 1, scope: !8671)
!8677 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8540, file: !8540, line: 754, type: !5804, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8678)
!8678 = !{!8679}
!8679 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8677, file: !8540, line: 754, type: !132)
!8680 = !DILocation(line: 0, scope: !8677)
!8681 = !DILocation(line: 756, column: 3, scope: !8677)
!8682 = !DILocation(line: 757, column: 1, scope: !8677)
!8683 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8540, file: !8540, line: 572, type: !5804, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8684)
!8684 = !{!8685}
!8685 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8683, file: !8540, line: 572, type: !132)
!8686 = !DILocation(line: 0, scope: !8683)
!8687 = !DILocation(line: 574, column: 3, scope: !8683)
!8688 = !DILocation(line: 576, column: 1, scope: !8683)
!8689 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8540, file: !8540, line: 710, type: !5804, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8690)
!8690 = !{!8691}
!8691 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8689, file: !8540, line: 710, type: !132)
!8692 = !DILocation(line: 0, scope: !8689)
!8693 = !DILocation(line: 712, column: 3, scope: !8689)
!8694 = !DILocation(line: 713, column: 1, scope: !8689)
!8695 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !766, file: !766, line: 433, type: !8696, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8698)
!8696 = !DISubroutineType(types: !8697)
!8697 = !{!103, !103, !806, !102}
!8698 = !{!8699, !8700, !8701, !8702, !8704}
!8699 = !DILocalVariable(name: "line", arg: 1, scope: !8695, file: !766, line: 433, type: !103)
!8700 = !DILocalVariable(name: "cb", arg: 2, scope: !8695, file: !766, line: 433, type: !806)
!8701 = !DILocalVariable(name: "arg", arg: 3, scope: !8695, file: !766, line: 433, type: !102)
!8702 = !DILocalVariable(name: "dev", scope: !8695, file: !766, line: 435, type: !8703)
!8703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!8704 = !DILocalVariable(name: "data", scope: !8695, file: !766, line: 436, type: !8494)
!8705 = !DILocation(line: 0, scope: !8695)
!8706 = !DILocation(line: 438, column: 21, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8695, file: !766, line: 438, column: 6)
!8708 = !DILocation(line: 438, column: 6, scope: !8707)
!8709 = !DILocation(line: 438, column: 6, scope: !8695)
!8710 = !DILocation(line: 442, column: 20, scope: !8695)
!8711 = !DILocation(line: 443, column: 17, scope: !8695)
!8712 = !DILocation(line: 443, column: 22, scope: !8695)
!8713 = !DILocation(line: 445, column: 2, scope: !8695)
!8714 = !DILocation(line: 446, column: 1, scope: !8695)
!8715 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !766, file: !766, line: 448, type: !8529, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !8716)
!8716 = !{!8717, !8718, !8719}
!8717 = !DILocalVariable(name: "line", arg: 1, scope: !8715, file: !766, line: 448, type: !103)
!8718 = !DILocalVariable(name: "dev", scope: !8715, file: !766, line: 450, type: !8703)
!8719 = !DILocalVariable(name: "data", scope: !8715, file: !766, line: 451, type: !8494)
!8720 = !DILocation(line: 0, scope: !8715)
!8721 = !DILocation(line: 453, column: 17, scope: !8715)
!8722 = !DILocation(line: 453, column: 20, scope: !8715)
!8723 = !DILocation(line: 454, column: 17, scope: !8715)
!8724 = !DILocation(line: 454, column: 22, scope: !8715)
!8725 = !DILocation(line: 455, column: 1, scope: !8715)
!8726 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !920, file: !920, line: 183, type: !958, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8727)
!8727 = !{!8728, !8729, !8730, !8731, !8732}
!8728 = !DILocalVariable(name: "dev", arg: 1, scope: !8726, file: !920, line: 183, type: !949)
!8729 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8726, file: !920, line: 184, type: !960)
!8730 = !DILocalVariable(name: "pclken", scope: !8726, file: !920, line: 186, type: !910)
!8731 = !DILocalVariable(name: "reg", scope: !8726, file: !920, line: 187, type: !3106)
!8732 = !DILocalVariable(name: "reg_val", scope: !8726, file: !920, line: 188, type: !132)
!8733 = !DILocation(line: 0, scope: !8726)
!8734 = !DILocation(line: 192, column: 6, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8726, file: !920, line: 192, column: 6)
!8736 = !DILocation(line: 192, column: 6, scope: !8726)
!8737 = !DILocation(line: 197, column: 52, scope: !8726)
!8738 = !DILocation(line: 197, column: 8, scope: !8726)
!8739 = !DILocation(line: 198, column: 12, scope: !8726)
!8740 = !DILocation(line: 199, column: 21, scope: !8726)
!8741 = !DILocation(line: 199, column: 10, scope: !8726)
!8742 = !DILocation(line: 200, column: 7, scope: !8726)
!8743 = !DILocation(line: 202, column: 2, scope: !8726)
!8744 = !DILocation(line: 203, column: 1, scope: !8726)
!8745 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !920, file: !920, line: 205, type: !958, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8746)
!8746 = !{!8747, !8748, !8749, !8750, !8751}
!8747 = !DILocalVariable(name: "dev", arg: 1, scope: !8745, file: !920, line: 205, type: !949)
!8748 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8745, file: !920, line: 206, type: !960)
!8749 = !DILocalVariable(name: "pclken", scope: !8745, file: !920, line: 208, type: !910)
!8750 = !DILocalVariable(name: "reg", scope: !8745, file: !920, line: 209, type: !3106)
!8751 = !DILocalVariable(name: "reg_val", scope: !8745, file: !920, line: 210, type: !132)
!8752 = !DILocation(line: 0, scope: !8745)
!8753 = !DILocation(line: 214, column: 6, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8745, file: !920, line: 214, column: 6)
!8755 = !DILocation(line: 214, column: 6, scope: !8745)
!8756 = !DILocation(line: 219, column: 52, scope: !8745)
!8757 = !DILocation(line: 219, column: 8, scope: !8745)
!8758 = !DILocation(line: 220, column: 12, scope: !8745)
!8759 = !DILocation(line: 221, column: 22, scope: !8745)
!8760 = !DILocation(line: 221, column: 13, scope: !8745)
!8761 = !DILocation(line: 221, column: 10, scope: !8745)
!8762 = !DILocation(line: 222, column: 7, scope: !8745)
!8763 = !DILocation(line: 224, column: 2, scope: !8745)
!8764 = !DILocation(line: 225, column: 1, scope: !8745)
!8765 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !920, file: !920, line: 262, type: !974, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8766)
!8766 = !{!8767, !8768, !8769, !8770, !8771, !8772, !8773}
!8767 = !DILocalVariable(name: "clock", arg: 1, scope: !8765, file: !920, line: 262, type: !949)
!8768 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8765, file: !920, line: 263, type: !960)
!8769 = !DILocalVariable(name: "rate", arg: 3, scope: !8765, file: !920, line: 264, type: !916)
!8770 = !DILocalVariable(name: "pclken", scope: !8765, file: !920, line: 266, type: !910)
!8771 = !DILocalVariable(name: "ahb_clock", scope: !8765, file: !920, line: 273, type: !132)
!8772 = !DILocalVariable(name: "apb1_clock", scope: !8765, file: !920, line: 274, type: !132)
!8773 = !DILocalVariable(name: "apb2_clock", scope: !8765, file: !920, line: 276, type: !132)
!8774 = !DILocation(line: 0, scope: !8765)
!8775 = !DILocation(line: 273, column: 23, scope: !8765)
!8776 = !DILocation(line: 299, column: 18, scope: !8765)
!8777 = !DILocation(line: 299, column: 2, scope: !8765)
!8778 = !DILocation(line: 374, column: 3, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8765, file: !920, line: 299, column: 23)
!8780 = !DILocation(line: 379, column: 3, scope: !8779)
!8781 = !DILocation(line: 389, column: 3, scope: !8779)
!8782 = !DILocation(line: 0, scope: !8779)
!8783 = !DILocation(line: 396, column: 1, scope: !8765)
!8784 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !920, file: !920, line: 227, type: !990, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8785)
!8785 = !{!8786, !8787, !8788, !8789, !8790, !8791, !8792, !8793}
!8786 = !DILocalVariable(name: "dev", arg: 1, scope: !8784, file: !920, line: 227, type: !949)
!8787 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8784, file: !920, line: 228, type: !960)
!8788 = !DILocalVariable(name: "data", arg: 3, scope: !8784, file: !920, line: 229, type: !102)
!8789 = !DILocalVariable(name: "pclken", scope: !8784, file: !920, line: 233, type: !910)
!8790 = !DILocalVariable(name: "reg", scope: !8784, file: !920, line: 234, type: !3106)
!8791 = !DILocalVariable(name: "reg_val", scope: !8784, file: !920, line: 235, type: !132)
!8792 = !DILocalVariable(name: "dt_val", scope: !8784, file: !920, line: 235, type: !132)
!8793 = !DILocalVariable(name: "err", scope: !8784, file: !920, line: 236, type: !103)
!8794 = !DILocation(line: 0, scope: !8784)
!8795 = !DILocation(line: 241, column: 30, scope: !8784)
!8796 = !DILocation(line: 241, column: 8, scope: !8784)
!8797 = !DILocation(line: 242, column: 10, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8784, file: !920, line: 242, column: 6)
!8799 = !DILocation(line: 242, column: 6, scope: !8784)
!8800 = !DILocation(line: 247, column: 11, scope: !8784)
!8801 = !DILocation(line: 248, column: 6, scope: !8784)
!8802 = !DILocation(line: 247, column: 44, scope: !8784)
!8803 = !DILocation(line: 250, column: 6, scope: !8784)
!8804 = !DILocation(line: 249, column: 52, scope: !8784)
!8805 = !DILocation(line: 249, column: 8, scope: !8784)
!8806 = !DILocation(line: 251, column: 12, scope: !8784)
!8807 = !DILocation(line: 252, column: 10, scope: !8784)
!8808 = !DILocation(line: 253, column: 7, scope: !8784)
!8809 = !DILocation(line: 255, column: 2, scope: !8784)
!8810 = !DILocation(line: 260, column: 1, scope: !8784)
!8811 = distinct !DISubprogram(name: "enabled_clock", scope: !920, file: !920, line: 100, type: !8812, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8814)
!8812 = !DISubroutineType(types: !8813)
!8813 = !{!103, !132}
!8814 = !{!8815, !8816}
!8815 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8811, file: !920, line: 100, type: !132)
!8816 = !DILocalVariable(name: "r", scope: !8811, file: !920, line: 102, type: !103)
!8817 = !DILocation(line: 0, scope: !8811)
!8818 = !DILocation(line: 104, column: 2, scope: !8811)
!8819 = !DILocation(line: 180, column: 2, scope: !8811)
!8820 = !DILocation(line: 181, column: 1, scope: !8811)
!8821 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !920, file: !920, line: 641, type: !947, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8822)
!8822 = !{!8823, !8824, !8825}
!8823 = !DILocalVariable(name: "dev", arg: 1, scope: !8821, file: !920, line: 641, type: !949)
!8824 = !DILocalVariable(name: "old_flash_freq", scope: !8821, file: !920, line: 664, type: !132)
!8825 = !DILocalVariable(name: "new_flash_freq", scope: !8821, file: !920, line: 665, type: !132)
!8826 = !DILocation(line: 0, scope: !8821)
!8827 = !DILocation(line: 646, column: 2, scope: !8821)
!8828 = !DILocation(line: 667, column: 19, scope: !8821)
!8829 = !DILocation(line: 674, column: 21, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8821, file: !920, line: 674, column: 6)
!8831 = !DILocation(line: 674, column: 6, scope: !8821)
!8832 = !DILocation(line: 675, column: 3, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8830, file: !920, line: 674, column: 59)
!8834 = !DILocation(line: 676, column: 2, scope: !8833)
!8835 = !DILocation(line: 680, column: 2, scope: !8821)
!8836 = !DILocation(line: 683, column: 2, scope: !8821)
!8837 = !DILocation(line: 690, column: 3, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !920, line: 689, column: 9)
!8839 = distinct !DILexicalBlock(scope: !8821, file: !920, line: 685, column: 6)
!8840 = !DILocation(line: 695, column: 2, scope: !8821)
!8841 = !DILocation(line: 696, column: 2, scope: !8821)
!8842 = !DILocation(line: 696, column: 9, scope: !8821)
!8843 = !DILocation(line: 696, column: 34, scope: !8821)
!8844 = distinct !{!8844, !8841, !8845}
!8845 = !DILocation(line: 697, column: 2, scope: !8821)
!8846 = !DILocation(line: 720, column: 21, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8821, file: !920, line: 720, column: 6)
!8848 = !DILocation(line: 720, column: 6, scope: !8821)
!8849 = !DILocation(line: 721, column: 3, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8847, file: !920, line: 720, column: 60)
!8851 = !DILocation(line: 722, column: 2, scope: !8850)
!8852 = !DILocation(line: 725, column: 18, scope: !8821)
!8853 = !DILocation(line: 728, column: 2, scope: !8821)
!8854 = !DILocation(line: 730, column: 2, scope: !8821)
!8855 = !DILocation(line: 745, column: 2, scope: !8821)
!8856 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8857, file: !8857, line: 995, type: !7567, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8857 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8858 = !DILocation(line: 997, column: 21, scope: !8856)
!8859 = !DILocation(line: 997, column: 3, scope: !8856)
!8860 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !920, file: !920, line: 507, type: !3229, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8861 = !DILocation(line: 534, column: 7, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8863, file: !920, line: 534, column: 7)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !920, line: 532, column: 37)
!8864 = distinct !DILexicalBlock(scope: !8860, file: !920, line: 532, column: 6)
!8865 = !DILocation(line: 534, column: 28, scope: !8862)
!8866 = !DILocation(line: 534, column: 7, scope: !8863)
!8867 = !DILocation(line: 536, column: 4, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8862, file: !920, line: 534, column: 34)
!8869 = !DILocation(line: 537, column: 4, scope: !8868)
!8870 = !DILocation(line: 537, column: 11, scope: !8868)
!8871 = !DILocation(line: 537, column: 32, scope: !8868)
!8872 = distinct !{!8872, !8869, !8873}
!8873 = !DILocation(line: 539, column: 4, scope: !8868)
!8874 = !DILocation(line: 583, column: 3, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8876, file: !920, line: 577, column: 37)
!8876 = distinct !DILexicalBlock(scope: !8860, file: !920, line: 577, column: 6)
!8877 = !DILocation(line: 584, column: 3, scope: !8875)
!8878 = !DILocation(line: 584, column: 10, scope: !8875)
!8879 = !DILocation(line: 584, column: 31, scope: !8875)
!8880 = distinct !{!8880, !8877, !8881}
!8881 = !DILocation(line: 585, column: 3, scope: !8875)
!8882 = !DILocation(line: 627, column: 1, scope: !8860)
!8883 = distinct !DISubprogram(name: "set_up_plls", scope: !920, file: !920, line: 448, type: !3229, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8884 = !DILocation(line: 460, column: 6, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8883, file: !920, line: 460, column: 6)
!8886 = !DILocation(line: 460, column: 31, scope: !8885)
!8887 = !DILocation(line: 460, column: 6, scope: !8883)
!8888 = !DILocation(line: 461, column: 3, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8885, file: !920, line: 460, column: 67)
!8890 = !DILocation(line: 462, column: 3, scope: !8889)
!8891 = !DILocation(line: 463, column: 2, scope: !8889)
!8892 = !DILocation(line: 464, column: 2, scope: !8883)
!8893 = !DILocation(line: 496, column: 2, scope: !8883)
!8894 = !DILocation(line: 499, column: 2, scope: !8883)
!8895 = !DILocation(line: 500, column: 2, scope: !8883)
!8896 = !DILocation(line: 500, column: 9, scope: !8883)
!8897 = !DILocation(line: 500, column: 30, scope: !8883)
!8898 = distinct !{!8898, !8895, !8899}
!8899 = !DILocation(line: 502, column: 2, scope: !8883)
!8900 = !DILocation(line: 505, column: 1, scope: !8883)
!8901 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8857, file: !8857, line: 944, type: !5804, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8902)
!8902 = !{!8903}
!8903 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8901, file: !8857, line: 944, type: !132)
!8904 = !DILocation(line: 0, scope: !8901)
!8905 = !DILocation(line: 946, column: 3, scope: !8901)
!8906 = !DILocation(line: 947, column: 1, scope: !8901)
!8907 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8857, file: !8857, line: 910, type: !5804, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8908)
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "Source", arg: 1, scope: !8907, file: !8857, line: 910, type: !132)
!8910 = !DILocation(line: 0, scope: !8907)
!8911 = !DILocation(line: 912, column: 3, scope: !8907)
!8912 = !DILocation(line: 913, column: 1, scope: !8907)
!8913 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8857, file: !8857, line: 924, type: !7567, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8914 = !DILocation(line: 926, column: 21, scope: !8913)
!8915 = !DILocation(line: 926, column: 3, scope: !8913)
!8916 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8857, file: !8857, line: 960, type: !5804, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8917)
!8917 = !{!8918}
!8918 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8916, file: !8857, line: 960, type: !132)
!8919 = !DILocation(line: 0, scope: !8916)
!8920 = !DILocation(line: 962, column: 3, scope: !8916)
!8921 = !DILocation(line: 963, column: 1, scope: !8916)
!8922 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8857, file: !8857, line: 976, type: !5804, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !8923)
!8923 = !{!8924}
!8924 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8922, file: !8857, line: 976, type: !132)
!8925 = !DILocation(line: 0, scope: !8922)
!8926 = !DILocation(line: 978, column: 3, scope: !8922)
!8927 = !DILocation(line: 979, column: 1, scope: !8922)
!8928 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !920, file: !920, line: 409, type: !3229, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8929 = !DILocation(line: 412, column: 6, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8928, file: !920, line: 412, column: 6)
!8931 = !DILocation(line: 412, column: 27, scope: !8930)
!8932 = !DILocation(line: 412, column: 6, scope: !8928)
!8933 = !DILocation(line: 414, column: 3, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8930, file: !920, line: 412, column: 33)
!8935 = !DILocation(line: 415, column: 3, scope: !8934)
!8936 = !DILocation(line: 415, column: 10, scope: !8934)
!8937 = !DILocation(line: 415, column: 31, scope: !8934)
!8938 = distinct !{!8938, !8935, !8939}
!8939 = !DILocation(line: 417, column: 3, scope: !8934)
!8940 = !DILocation(line: 421, column: 2, scope: !8928)
!8941 = !DILocation(line: 422, column: 2, scope: !8928)
!8942 = !DILocation(line: 422, column: 9, scope: !8928)
!8943 = !DILocation(line: 422, column: 34, scope: !8928)
!8944 = distinct !{!8944, !8941, !8945}
!8945 = !DILocation(line: 423, column: 2, scope: !8928)
!8946 = !DILocation(line: 424, column: 1, scope: !8928)
!8947 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8857, file: !8857, line: 1180, type: !3229, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8948 = !DILocation(line: 1182, column: 3, scope: !8947)
!8949 = !DILocation(line: 1183, column: 1, scope: !8947)
!8950 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8857, file: !8857, line: 1169, type: !3229, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8951 = !DILocation(line: 1171, column: 3, scope: !8950)
!8952 = !DILocation(line: 1172, column: 1, scope: !8950)
!8953 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8857, file: !8857, line: 1190, type: !7567, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8954 = !DILocation(line: 1192, column: 12, scope: !8953)
!8955 = !DILocation(line: 1192, column: 11, scope: !8953)
!8956 = !DILocation(line: 1192, column: 3, scope: !8953)
!8957 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8857, file: !8857, line: 612, type: !7567, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8958 = !DILocation(line: 614, column: 12, scope: !8957)
!8959 = !DILocation(line: 614, column: 11, scope: !8957)
!8960 = !DILocation(line: 614, column: 3, scope: !8957)
!8961 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8857, file: !8857, line: 592, type: !3229, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8962 = !DILocation(line: 594, column: 3, scope: !8961)
!8963 = !DILocation(line: 595, column: 1, scope: !8961)
!8964 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8857, file: !8857, line: 760, type: !3229, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8965 = !DILocation(line: 762, column: 3, scope: !8964)
!8966 = !DILocation(line: 763, column: 1, scope: !8964)
!8967 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8857, file: !8857, line: 780, type: !7567, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !486)
!8968 = !DILocation(line: 782, column: 12, scope: !8967)
!8969 = !DILocation(line: 782, column: 11, scope: !8967)
!8970 = !DILocation(line: 782, column: 3, scope: !8967)
!8971 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8972, file: !8972, line: 48, type: !7567, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !486)
!8972 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8973 = !DILocation(line: 51, column: 3, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !8972, line: 50, column: 37)
!8975 = distinct !DILexicalBlock(scope: !8971, file: !8972, line: 50, column: 6)
!8976 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8972, file: !8972, line: 64, type: !3229, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !486)
!8977 = !DILocation(line: 66, column: 2, scope: !8976)
!8978 = !DILocation(line: 69, column: 1, scope: !8976)
!8979 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8857, file: !8857, line: 1219, type: !8980, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !8982)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{null, !132, !132, !132}
!8982 = !{!8983, !8984, !8985}
!8983 = !DILocalVariable(name: "Source", arg: 1, scope: !8979, file: !8857, line: 1219, type: !132)
!8984 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !8979, file: !8857, line: 1219, type: !132)
!8985 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !8979, file: !8857, line: 1219, type: !132)
!8986 = !DILocation(line: 0, scope: !8979)
!8987 = !DILocation(line: 1221, column: 3, scope: !8979)
!8988 = !DILocation(line: 1222, column: 1, scope: !8979)
!8989 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !8972, file: !8972, line: 75, type: !7567, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !486)
!8990 = !DILocation(line: 77, column: 9, scope: !8989)
!8991 = !DILocation(line: 77, column: 2, scope: !8989)
!8992 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8972, file: !8972, line: 87, type: !3229, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !486)
!8993 = !DILocation(line: 93, column: 2, scope: !8992)
!8994 = !DILocation(line: 95, column: 1, scope: !8992)
!8995 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !5803, file: !5803, line: 895, type: !5804, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !8996)
!8996 = !{!8997, !8998}
!8997 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8995, file: !5803, line: 895, type: !132)
!8998 = !DILocalVariable(name: "tmpreg", scope: !8995, file: !5803, line: 897, type: !131)
!8999 = !DILocation(line: 0, scope: !8995)
!9000 = !DILocation(line: 897, column: 3, scope: !8995)
!9001 = !DILocation(line: 897, column: 17, scope: !8995)
!9002 = !DILocation(line: 898, column: 3, scope: !8995)
!9003 = !DILocation(line: 900, column: 12, scope: !8995)
!9004 = !DILocation(line: 900, column: 10, scope: !8995)
!9005 = !DILocation(line: 901, column: 9, scope: !8995)
!9006 = !DILocation(line: 902, column: 1, scope: !8995)
!9007 = distinct !DISubprogram(name: "uart_console_init", scope: !998, file: !998, line: 588, type: !1035, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9008)
!9008 = !{!9009}
!9009 = !DILocalVariable(name: "arg", arg: 1, scope: !9007, file: !998, line: 588, type: !1014)
!9010 = !DILocation(line: 0, scope: !9007)
!9011 = !DILocation(line: 593, column: 7, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9007, file: !998, line: 593, column: 6)
!9013 = !DILocation(line: 593, column: 6, scope: !9007)
!9014 = !DILocation(line: 597, column: 2, scope: !9007)
!9015 = !DILocation(line: 599, column: 2, scope: !9007)
!9016 = !DILocation(line: 600, column: 1, scope: !9007)
!9017 = distinct !DISubprogram(name: "device_is_ready", scope: !6658, file: !6658, line: 47, type: !9018, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9020)
!9018 = !DISubroutineType(types: !9019)
!9019 = !{!179, !1014}
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "dev", arg: 1, scope: !9017, file: !6658, line: 47, type: !1014)
!9022 = !DILocation(line: 0, scope: !9017)
!9023 = !DILocation(line: 55, column: 2, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9017, file: !6658, line: 55, column: 2)
!9025 = !{i64 2152409224}
!9026 = !DILocation(line: 56, column: 9, scope: !9017)
!9027 = !DILocation(line: 56, column: 2, scope: !9017)
!9028 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !998, file: !998, line: 573, type: !3229, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !486)
!9029 = !DILocation(line: 576, column: 2, scope: !9028)
!9030 = !DILocation(line: 579, column: 2, scope: !9028)
!9031 = !DILocation(line: 581, column: 1, scope: !9028)
!9032 = distinct !DISubprogram(name: "console_out", scope: !998, file: !998, line: 77, type: !118, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9033)
!9033 = !{!9034, !9035}
!9034 = !DILocalVariable(name: "c", arg: 1, scope: !9032, file: !998, line: 77, type: !103)
!9035 = !DILocalVariable(name: "handled_by_debug_server", scope: !9032, file: !998, line: 81, type: !103)
!9036 = !DILocation(line: 0, scope: !9032)
!9037 = !DILocation(line: 81, column: 32, scope: !9032)
!9038 = !DILocation(line: 83, column: 6, scope: !9032)
!9039 = !DILocation(line: 89, column: 11, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9032, file: !998, line: 89, column: 6)
!9041 = !DILocation(line: 89, column: 6, scope: !9032)
!9042 = !DILocation(line: 90, column: 3, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9040, file: !998, line: 89, column: 17)
!9044 = !DILocation(line: 91, column: 2, scope: !9043)
!9045 = !DILocation(line: 92, column: 2, scope: !9032)
!9046 = !DILocation(line: 94, column: 2, scope: !9032)
!9047 = !DILocation(line: 95, column: 1, scope: !9032)
!9048 = distinct !DISubprogram(name: "uart_poll_out", scope: !5919, file: !5919, line: 95, type: !1031, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9049)
!9049 = !{!9050, !9051}
!9050 = !DILocalVariable(name: "dev", arg: 1, scope: !9048, file: !5919, line: 95, type: !1014)
!9051 = !DILocalVariable(name: "out_char", arg: 2, scope: !9048, file: !5919, line: 95, type: !177)
!9052 = !DILocation(line: 0, scope: !9048)
!9053 = !DILocation(line: 105, column: 2, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9048, file: !5919, line: 105, column: 2)
!9055 = !{i64 2152492469}
!9056 = !DILocation(line: 106, column: 2, scope: !9048)
!9057 = !DILocation(line: 107, column: 1, scope: !9048)
!9058 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !225, file: !225, line: 574, type: !1031, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9059)
!9059 = !{!9060, !9061, !9062}
!9060 = !DILocalVariable(name: "dev", arg: 1, scope: !9058, file: !225, line: 574, type: !1014)
!9061 = !DILocalVariable(name: "out_char", arg: 2, scope: !9058, file: !225, line: 575, type: !177)
!9062 = !DILocalVariable(name: "api", scope: !9058, file: !225, line: 577, type: !1006)
!9063 = !DILocation(line: 0, scope: !9058)
!9064 = !DILocation(line: 578, column: 40, scope: !9058)
!9065 = !DILocation(line: 580, column: 7, scope: !9058)
!9066 = !DILocation(line: 580, column: 2, scope: !9058)
!9067 = !DILocation(line: 581, column: 1, scope: !9058)
!9068 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !998, file: !998, line: 49, type: !1148, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9069)
!9069 = !{!9070}
!9070 = !DILocalVariable(name: "c", arg: 1, scope: !9068, file: !998, line: 49, type: !108)
!9071 = !DILocation(line: 0, scope: !9068)
!9072 = !DILocation(line: 51, column: 2, scope: !9068)
!9073 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !165, file: !165, line: 730, type: !9018, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9074)
!9074 = !{!9075}
!9075 = !DILocalVariable(name: "dev", arg: 1, scope: !9073, file: !165, line: 730, type: !1014)
!9076 = !DILocation(line: 0, scope: !9073)
!9077 = !DILocation(line: 732, column: 9, scope: !9073)
!9078 = !DILocation(line: 732, column: 2, scope: !9073)
!9079 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !998, file: !998, line: 44, type: !9080, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9082)
!9080 = !DISubroutineType(types: !9081)
!9081 = !{null, !1190}
!9082 = !{!9083}
!9083 = !DILocalVariable(name: "hook", arg: 1, scope: !9079, file: !998, line: 44, type: !1190)
!9084 = !DILocation(line: 0, scope: !9079)
!9085 = !DILocation(line: 46, column: 16, scope: !9079)
!9086 = !DILocation(line: 47, column: 1, scope: !9079)
!9087 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !998, file: !998, line: 55, type: !9088, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9090)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{null, !1145}
!9090 = !{!9091}
!9091 = !DILocalVariable(name: "hook", arg: 1, scope: !9087, file: !998, line: 55, type: !1145)
!9092 = !DILocation(line: 0, scope: !9087)
!9093 = !DILocation(line: 57, column: 17, scope: !9087)
!9094 = !DILocation(line: 58, column: 1, scope: !9087)
!9095 = distinct !DISubprogram(name: "uart_register_input", scope: !998, file: !998, line: 549, type: !9096, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9098)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{null, !1095, !1095, !1139}
!9098 = !{!9099, !9100, !9101}
!9099 = !DILocalVariable(name: "avail", arg: 1, scope: !9095, file: !998, line: 549, type: !1095)
!9100 = !DILocalVariable(name: "lines", arg: 2, scope: !9095, file: !998, line: 549, type: !1095)
!9101 = !DILocalVariable(name: "completion", arg: 3, scope: !9095, file: !998, line: 550, type: !1139)
!9102 = !DILocation(line: 0, scope: !9095)
!9103 = !DILocation(line: 552, column: 14, scope: !9095)
!9104 = !DILocation(line: 553, column: 14, scope: !9095)
!9105 = !DILocation(line: 554, column: 16, scope: !9095)
!9106 = !DILocation(line: 556, column: 2, scope: !9095)
!9107 = !DILocation(line: 557, column: 1, scope: !9095)
!9108 = distinct !DISubprogram(name: "console_input_init", scope: !998, file: !998, line: 532, type: !3229, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9109)
!9109 = !{!9110}
!9110 = !DILocalVariable(name: "c", scope: !9108, file: !998, line: 534, type: !176)
!9111 = !DILocation(line: 534, column: 2, scope: !9108)
!9112 = !DILocation(line: 536, column: 2, scope: !9108)
!9113 = !DILocation(line: 537, column: 2, scope: !9108)
!9114 = !DILocation(line: 539, column: 2, scope: !9108)
!9115 = !DILocation(line: 542, column: 9, scope: !9108)
!9116 = !DILocation(line: 542, column: 2, scope: !9108)
!9117 = !DILocation(line: 0, scope: !9108)
!9118 = !DILocation(line: 543, column: 3, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9108, file: !998, line: 542, column: 46)
!9120 = distinct !{!9120, !9116, !9121}
!9121 = !DILocation(line: 544, column: 2, scope: !9108)
!9122 = !DILocation(line: 546, column: 2, scope: !9108)
!9123 = !DILocation(line: 547, column: 1, scope: !9108)
!9124 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5919, file: !5919, line: 265, type: !1065, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9125)
!9125 = !{!9126}
!9126 = !DILocalVariable(name: "dev", arg: 1, scope: !9124, file: !5919, line: 265, type: !1014)
!9127 = !DILocation(line: 0, scope: !9124)
!9128 = !DILocation(line: 274, column: 2, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9124, file: !5919, line: 274, column: 2)
!9130 = !{i64 2152492945}
!9131 = !DILocation(line: 275, column: 2, scope: !9124)
!9132 = !DILocation(line: 276, column: 1, scope: !9124)
!9133 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5919, file: !5919, line: 217, type: !1065, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9134)
!9134 = !{!9135}
!9135 = !DILocalVariable(name: "dev", arg: 1, scope: !9133, file: !5919, line: 217, type: !1014)
!9136 = !DILocation(line: 0, scope: !9133)
!9137 = !DILocation(line: 226, column: 2, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9133, file: !5919, line: 226, column: 2)
!9139 = !{i64 2152492809}
!9140 = !DILocation(line: 227, column: 2, scope: !9133)
!9141 = !DILocation(line: 228, column: 1, scope: !9133)
!9142 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !225, file: !225, line: 1190, type: !9143, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9145)
!9143 = !DISubroutineType(types: !9144)
!9144 = !{null, !1014, !1081}
!9145 = !{!9146, !9147}
!9146 = !DILocalVariable(name: "dev", arg: 1, scope: !9142, file: !225, line: 1190, type: !1014)
!9147 = !DILocalVariable(name: "cb", arg: 2, scope: !9142, file: !225, line: 1191, type: !1081)
!9148 = !DILocation(line: 0, scope: !9142)
!9149 = !DILocation(line: 1193, column: 2, scope: !9142)
!9150 = !DILocation(line: 1194, column: 1, scope: !9142)
!9151 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !225, file: !225, line: 1024, type: !1035, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9152)
!9152 = !{!9153, !9154}
!9153 = !DILocalVariable(name: "dev", arg: 1, scope: !9151, file: !225, line: 1024, type: !1014)
!9154 = !DILocalVariable(name: "api", scope: !9151, file: !225, line: 1027, type: !1006)
!9155 = !DILocation(line: 0, scope: !9151)
!9156 = !DILocation(line: 1028, column: 40, scope: !9151)
!9157 = !DILocation(line: 1030, column: 11, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9151, file: !225, line: 1030, column: 6)
!9159 = !DILocation(line: 1030, column: 24, scope: !9158)
!9160 = !DILocation(line: 1030, column: 6, scope: !9151)
!9161 = !DILocation(line: 1033, column: 9, scope: !9151)
!9162 = !DILocation(line: 1033, column: 2, scope: !9151)
!9163 = !DILocation(line: 1038, column: 1, scope: !9151)
!9164 = distinct !DISubprogram(name: "uart_fifo_read", scope: !225, file: !225, line: 785, type: !1061, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9165)
!9165 = !{!9166, !9167, !9168, !9169}
!9166 = !DILocalVariable(name: "dev", arg: 1, scope: !9164, file: !225, line: 785, type: !1014)
!9167 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9164, file: !225, line: 785, type: !283)
!9168 = !DILocalVariable(name: "size", arg: 3, scope: !9164, file: !225, line: 786, type: !284)
!9169 = !DILocalVariable(name: "api", scope: !9164, file: !225, line: 789, type: !1006)
!9170 = !DILocation(line: 0, scope: !9164)
!9171 = !DILocation(line: 790, column: 40, scope: !9164)
!9172 = !DILocation(line: 792, column: 11, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9164, file: !225, line: 792, column: 6)
!9174 = !DILocation(line: 792, column: 21, scope: !9173)
!9175 = !DILocation(line: 792, column: 6, scope: !9164)
!9176 = !DILocation(line: 796, column: 9, scope: !9164)
!9177 = !DILocation(line: 796, column: 2, scope: !9164)
!9178 = !DILocation(line: 803, column: 1, scope: !9164)
!9179 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5919, file: !5919, line: 241, type: !1065, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9180)
!9180 = !{!9181}
!9181 = !DILocalVariable(name: "dev", arg: 1, scope: !9179, file: !5919, line: 241, type: !1014)
!9182 = !DILocation(line: 0, scope: !9179)
!9183 = !DILocation(line: 250, column: 2, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9179, file: !5919, line: 250, column: 2)
!9185 = !{i64 2152492877}
!9186 = !DILocation(line: 251, column: 2, scope: !9179)
!9187 = !DILocation(line: 252, column: 1, scope: !9179)
!9188 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !225, file: !225, line: 934, type: !1065, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9189)
!9189 = !{!9190, !9191}
!9190 = !DILocalVariable(name: "dev", arg: 1, scope: !9188, file: !225, line: 934, type: !1014)
!9191 = !DILocalVariable(name: "api", scope: !9188, file: !225, line: 937, type: !1006)
!9192 = !DILocation(line: 0, scope: !9188)
!9193 = !DILocation(line: 938, column: 40, scope: !9188)
!9194 = !DILocation(line: 940, column: 11, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9188, file: !225, line: 940, column: 6)
!9196 = !DILocation(line: 940, column: 25, scope: !9195)
!9197 = !DILocation(line: 940, column: 6, scope: !9188)
!9198 = !DILocation(line: 941, column: 3, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !225, line: 940, column: 34)
!9200 = !DILocation(line: 942, column: 2, scope: !9199)
!9201 = !DILocation(line: 946, column: 1, scope: !9188)
!9202 = !DILocation(line: 0, scope: !1155)
!9203 = !DILocation(line: 433, column: 9, scope: !1155)
!9204 = !DILocation(line: 433, column: 43, scope: !1155)
!9205 = !DILocation(line: 434, column: 9, scope: !1155)
!9206 = !DILocation(line: 433, column: 2, scope: !1155)
!9207 = !DILocation(line: 436, column: 3, scope: !1160)
!9208 = !DILocation(line: 439, column: 8, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !1160, file: !998, line: 439, column: 7)
!9210 = !DILocation(line: 439, column: 7, scope: !1160)
!9211 = distinct !{!9211, !9206, !9212}
!9212 = !DILocation(line: 529, column: 2, scope: !1155)
!9213 = !DILocation(line: 0, scope: !1160)
!9214 = !DILocation(line: 445, column: 8, scope: !1160)
!9215 = !DILocation(line: 446, column: 10, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !1160, file: !998, line: 446, column: 7)
!9217 = !DILocation(line: 446, column: 7, scope: !1160)
!9218 = !DILocation(line: 451, column: 7, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !1160, file: !998, line: 451, column: 7)
!9220 = !DILocation(line: 451, column: 21, scope: !9219)
!9221 = !DILocation(line: 451, column: 29, scope: !9219)
!9222 = !DILocation(line: 451, column: 46, scope: !9219)
!9223 = !DILocation(line: 451, column: 32, scope: !9219)
!9224 = !DILocation(line: 451, column: 52, scope: !9219)
!9225 = !DILocation(line: 451, column: 7, scope: !1160)
!9226 = !DILocation(line: 460, column: 8, scope: !1165)
!9227 = !DILocation(line: 460, column: 7, scope: !1160)
!9228 = !DILocation(line: 461, column: 10, scope: !1163)
!9229 = !DILocation(line: 0, scope: !1163)
!9230 = !DILocation(line: 461, column: 8, scope: !1164)
!9231 = !DILocation(line: 462, column: 9, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !1164, file: !998, line: 462, column: 8)
!9233 = !DILocation(line: 462, column: 8, scope: !1164)
!9234 = !DILocation(line: 477, column: 7, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !1160, file: !998, line: 477, column: 7)
!9236 = !DILocation(line: 477, column: 7, scope: !1160)
!9237 = !DILocation(line: 478, column: 16, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9235, file: !998, line: 477, column: 46)
!9239 = !DILocation(line: 478, column: 22, scope: !9238)
!9240 = !DILocation(line: 478, column: 4, scope: !9238)
!9241 = !DILocation(line: 479, column: 4, scope: !9238)
!9242 = !DILocation(line: 483, column: 7, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !1160, file: !998, line: 483, column: 7)
!9244 = !DILocation(line: 483, column: 7, scope: !1160)
!9245 = !DILocation(line: 484, column: 13, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9247, file: !998, line: 484, column: 8)
!9247 = distinct !DILexicalBlock(scope: !9243, file: !998, line: 483, column: 55)
!9248 = !DILocation(line: 484, column: 8, scope: !9247)
!9249 = !DILocation(line: 485, column: 5, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9246, file: !998, line: 484, column: 26)
!9251 = !DILocation(line: 486, column: 5, scope: !9250)
!9252 = !DILocation(line: 487, column: 4, scope: !9250)
!9253 = !DILocation(line: 493, column: 16, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !1160, file: !998, line: 493, column: 7)
!9255 = !DILocation(line: 493, column: 8, scope: !9254)
!9256 = !DILocation(line: 493, column: 7, scope: !1160)
!9257 = !DILocation(line: 494, column: 4, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9254, file: !998, line: 493, column: 23)
!9259 = !DILocation(line: 497, column: 9, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9261, file: !998, line: 497, column: 9)
!9261 = distinct !DILexicalBlock(scope: !9258, file: !998, line: 494, column: 18)
!9262 = !DILocation(line: 497, column: 13, scope: !9260)
!9263 = !DILocation(line: 497, column: 9, scope: !9261)
!9264 = !DILocation(line: 498, column: 16, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9260, file: !998, line: 497, column: 18)
!9266 = !DILocation(line: 498, column: 26, scope: !9265)
!9267 = !DILocation(line: 498, column: 34, scope: !9265)
!9268 = !DILocation(line: 498, column: 6, scope: !9265)
!9269 = !DILocation(line: 499, column: 5, scope: !9265)
!9270 = !DILocation(line: 502, column: 5, scope: !9261)
!9271 = !DILocation(line: 503, column: 5, scope: !9261)
!9272 = !DILocation(line: 505, column: 5, scope: !9261)
!9273 = !DILocation(line: 505, column: 15, scope: !9261)
!9274 = !DILocation(line: 505, column: 21, scope: !9261)
!9275 = !DILocation(line: 505, column: 19, scope: !9261)
!9276 = !DILocation(line: 505, column: 26, scope: !9261)
!9277 = !DILocation(line: 506, column: 5, scope: !9261)
!9278 = !DILocation(line: 507, column: 5, scope: !9261)
!9279 = !DILocation(line: 508, column: 9, scope: !9261)
!9280 = !DILocation(line: 509, column: 9, scope: !9261)
!9281 = !DILocation(line: 510, column: 5, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9261, file: !998, line: 510, column: 5)
!9283 = !DILocation(line: 511, column: 9, scope: !9261)
!9284 = !DILocation(line: 512, column: 5, scope: !9261)
!9285 = !DILocation(line: 514, column: 9, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9261, file: !998, line: 514, column: 9)
!9287 = !DILocation(line: 514, column: 23, scope: !9286)
!9288 = !DILocation(line: 515, column: 27, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9286, file: !998, line: 514, column: 32)
!9290 = !DILocation(line: 515, column: 38, scope: !9289)
!9291 = !DILocation(line: 515, column: 13, scope: !9289)
!9292 = !DILocation(line: 515, column: 10, scope: !9289)
!9293 = !DILocation(line: 516, column: 5, scope: !9289)
!9294 = !DILocation(line: 526, column: 7, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !1160, file: !998, line: 526, column: 7)
!9296 = !DILocation(line: 526, column: 13, scope: !9295)
!9297 = !DILocation(line: 526, column: 11, scope: !9295)
!9298 = !DILocation(line: 526, column: 17, scope: !9295)
!9299 = !DILocation(line: 526, column: 7, scope: !1160)
!9300 = !DILocation(line: 527, column: 17, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9295, file: !998, line: 526, column: 42)
!9302 = !DILocation(line: 527, column: 30, scope: !9301)
!9303 = !DILocation(line: 527, column: 4, scope: !9301)
!9304 = !DILocation(line: 528, column: 3, scope: !9301)
!9305 = !DILocation(line: 530, column: 1, scope: !1155)
!9306 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !225, file: !225, line: 1163, type: !1079, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9307)
!9307 = !{!9308, !9309, !9310, !9311}
!9308 = !DILocalVariable(name: "dev", arg: 1, scope: !9306, file: !225, line: 1163, type: !1014)
!9309 = !DILocalVariable(name: "cb", arg: 2, scope: !9306, file: !225, line: 1164, type: !1081)
!9310 = !DILocalVariable(name: "user_data", arg: 3, scope: !9306, file: !225, line: 1165, type: !102)
!9311 = !DILocalVariable(name: "api", scope: !9306, file: !225, line: 1168, type: !1006)
!9312 = !DILocation(line: 0, scope: !9306)
!9313 = !DILocation(line: 1169, column: 40, scope: !9306)
!9314 = !DILocation(line: 1171, column: 11, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9306, file: !225, line: 1171, column: 6)
!9316 = !DILocation(line: 1171, column: 20, scope: !9315)
!9317 = !DILocation(line: 1171, column: 29, scope: !9315)
!9318 = !DILocation(line: 1171, column: 46, scope: !9315)
!9319 = !DILocation(line: 1171, column: 6, scope: !9306)
!9320 = !DILocation(line: 1172, column: 3, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9315, file: !225, line: 1171, column: 56)
!9322 = !DILocation(line: 1173, column: 2, scope: !9321)
!9323 = !DILocation(line: 1179, column: 1, scope: !9306)
!9324 = distinct !DISubprogram(name: "uart_irq_update", scope: !5919, file: !5919, line: 360, type: !1035, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9325)
!9325 = !{!9326}
!9326 = !DILocalVariable(name: "dev", arg: 1, scope: !9324, file: !5919, line: 360, type: !1014)
!9327 = !DILocation(line: 0, scope: !9324)
!9328 = !DILocation(line: 368, column: 2, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9324, file: !5919, line: 368, column: 2)
!9330 = !{i64 2152493217}
!9331 = !DILocation(line: 369, column: 9, scope: !9324)
!9332 = !DILocation(line: 369, column: 2, scope: !9324)
!9333 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5919, file: !5919, line: 337, type: !1035, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9334)
!9334 = !{!9335}
!9335 = !DILocalVariable(name: "dev", arg: 1, scope: !9333, file: !5919, line: 337, type: !1014)
!9336 = !DILocation(line: 0, scope: !9333)
!9337 = !DILocation(line: 345, column: 2, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9333, file: !5919, line: 345, column: 2)
!9339 = !{i64 2152493149}
!9340 = !DILocation(line: 346, column: 9, scope: !9333)
!9341 = !DILocation(line: 346, column: 2, scope: !9333)
!9342 = distinct !DISubprogram(name: "read_uart", scope: !998, file: !998, line: 127, type: !9343, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9345)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{!103, !1014, !283, !32}
!9345 = !{!9346, !9347, !9348, !9349}
!9346 = !DILocalVariable(name: "uart", arg: 1, scope: !9342, file: !998, line: 127, type: !1014)
!9347 = !DILocalVariable(name: "buf", arg: 2, scope: !9342, file: !998, line: 127, type: !283)
!9348 = !DILocalVariable(name: "size", arg: 3, scope: !9342, file: !998, line: 128, type: !32)
!9349 = !DILocalVariable(name: "rx", scope: !9342, file: !998, line: 130, type: !103)
!9350 = !DILocation(line: 0, scope: !9342)
!9351 = !DILocation(line: 132, column: 7, scope: !9342)
!9352 = !DILocation(line: 133, column: 9, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9342, file: !998, line: 133, column: 6)
!9354 = !DILocation(line: 133, column: 6, scope: !9342)
!9355 = !DILocation(line: 135, column: 3, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9353, file: !998, line: 133, column: 14)
!9357 = !DILocation(line: 137, column: 3, scope: !9356)
!9358 = !DILocation(line: 141, column: 1, scope: !9342)
!9359 = distinct !DISubprogram(name: "k_queue_get", scope: !3669, file: !3669, line: 649, type: !9360, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9367)
!9360 = !DISubroutineType(types: !9361)
!9361 = !{!102, !9362, !9363}
!9362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!9363 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1753, line: 67, baseType: !9364)
!9364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1753, line: 65, size: 64, elements: !9365)
!9365 = !{!9366}
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9364, file: !1753, line: 66, baseType: !1752, size: 64)
!9367 = !{!9368, !9369}
!9368 = !DILocalVariable(name: "queue", arg: 1, scope: !9359, file: !3669, line: 649, type: !9362)
!9369 = !DILocalVariable(name: "timeout", arg: 2, scope: !9359, file: !3669, line: 649, type: !9363)
!9370 = !DILocation(line: 0, scope: !9359)
!9371 = !DILocation(line: 658, column: 2, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9359, file: !3669, line: 658, column: 2)
!9373 = !{i64 2152225952}
!9374 = !DILocation(line: 659, column: 9, scope: !9359)
!9375 = !DILocation(line: 659, column: 2, scope: !9359)
!9376 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1181, file: !1181, line: 131, type: !9377, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9381)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{!179, !9379, !103}
!9379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9380, size: 32)
!9380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!9381 = !{!9382, !9383, !9384}
!9382 = !DILocalVariable(name: "target", arg: 1, scope: !9376, file: !1181, line: 131, type: !9379)
!9383 = !DILocalVariable(name: "bit", arg: 2, scope: !9376, file: !1181, line: 131, type: !103)
!9384 = !DILocalVariable(name: "val", scope: !9376, file: !1181, line: 133, type: !9385)
!9385 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1181, line: 23, baseType: !1180)
!9386 = !DILocation(line: 0, scope: !9376)
!9387 = !DILocation(line: 133, column: 21, scope: !9376)
!9388 = !DILocation(line: 135, column: 27, scope: !9376)
!9389 = !DILocation(line: 135, column: 50, scope: !9376)
!9390 = !DILocation(line: 135, column: 2, scope: !9376)
!9391 = distinct !DISubprogram(name: "handle_ansi", scope: !998, file: !998, line: 232, type: !9392, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9394)
!9392 = !DISubroutineType(types: !9393)
!9393 = !{null, !176, !1142}
!9394 = !{!9395, !9396, !9397}
!9395 = !DILocalVariable(name: "byte", arg: 1, scope: !9391, file: !998, line: 232, type: !176)
!9396 = !DILocalVariable(name: "line", arg: 2, scope: !9391, file: !998, line: 232, type: !1142)
!9397 = !DILabel(scope: !9391, name: "ansi_cmd", file: !998, line: 268)
!9398 = !DILocation(line: 0, scope: !9391)
!9399 = !DILocation(line: 234, column: 6, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9391, file: !998, line: 234, column: 6)
!9401 = !DILocation(line: 234, column: 6, scope: !9391)
!9402 = !DILocation(line: 235, column: 16, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !998, line: 235, column: 7)
!9404 = distinct !DILexicalBlock(scope: !9400, file: !998, line: 234, column: 61)
!9405 = !DILocation(line: 235, column: 8, scope: !9403)
!9406 = !DILocation(line: 235, column: 7, scope: !9404)
!9407 = !DILocation(line: 236, column: 13, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9403, file: !998, line: 235, column: 23)
!9409 = !DILocation(line: 237, column: 4, scope: !9408)
!9410 = !DILocation(line: 240, column: 3, scope: !9404)
!9411 = !DILocation(line: 241, column: 19, scope: !9404)
!9412 = !DILocation(line: 241, column: 12, scope: !9404)
!9413 = !DILocation(line: 242, column: 14, scope: !9404)
!9414 = !DILocation(line: 243, column: 3, scope: !9404)
!9415 = !DILocation(line: 246, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9391, file: !998, line: 246, column: 6)
!9417 = !DILocation(line: 246, column: 6, scope: !9391)
!9418 = !DILocation(line: 247, column: 15, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9420, file: !998, line: 247, column: 7)
!9420 = distinct !DILexicalBlock(scope: !9416, file: !998, line: 246, column: 49)
!9421 = !DILocation(line: 247, column: 7, scope: !9419)
!9422 = !DILocation(line: 247, column: 7, scope: !9420)
!9423 = !DILocation(line: 248, column: 8, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9425, file: !998, line: 248, column: 8)
!9425 = distinct !DILexicalBlock(scope: !9419, file: !998, line: 247, column: 22)
!9426 = !DILocation(line: 248, column: 8, scope: !9425)
!9427 = !DILocation(line: 249, column: 16, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9424, file: !998, line: 248, column: 53)
!9429 = !DILocation(line: 250, column: 24, scope: !9428)
!9430 = !DILocation(line: 250, column: 16, scope: !9428)
!9431 = !DILocation(line: 251, column: 4, scope: !9428)
!9432 = !DILocation(line: 252, column: 14, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9424, file: !998, line: 251, column: 11)
!9434 = !DILocation(line: 253, column: 22, scope: !9433)
!9435 = !DILocation(line: 253, column: 14, scope: !9433)
!9436 = !DILocation(line: 259, column: 12, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9420, file: !998, line: 259, column: 7)
!9438 = !DILocation(line: 259, column: 19, scope: !9437)
!9439 = !DILocation(line: 260, column: 8, scope: !9437)
!9440 = !DILocation(line: 259, column: 7, scope: !9420)
!9441 = !DILocation(line: 264, column: 3, scope: !9420)
!9442 = !DILocation(line: 265, column: 3, scope: !9420)
!9443 = !DILocation(line: 266, column: 2, scope: !9420)
!9444 = !DILocation(line: 268, column: 1, scope: !9391)
!9445 = !DILocation(line: 269, column: 2, scope: !9391)
!9446 = !DILocation(line: 271, column: 7, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !998, line: 271, column: 7)
!9448 = distinct !DILexicalBlock(scope: !9391, file: !998, line: 269, column: 16)
!9449 = !DILocation(line: 271, column: 18, scope: !9447)
!9450 = !DILocation(line: 271, column: 16, scope: !9447)
!9451 = !DILocation(line: 271, column: 7, scope: !9448)
!9452 = !DILocation(line: 275, column: 7, scope: !9448)
!9453 = !DILocation(line: 276, column: 7, scope: !9448)
!9454 = !DILocation(line: 277, column: 3, scope: !9448)
!9455 = !DILocation(line: 278, column: 3, scope: !9448)
!9456 = !DILocation(line: 280, column: 7, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9448, file: !998, line: 280, column: 7)
!9458 = !DILocation(line: 280, column: 18, scope: !9457)
!9459 = !DILocation(line: 280, column: 16, scope: !9457)
!9460 = !DILocation(line: 280, column: 7, scope: !9448)
!9461 = !DILocation(line: 284, column: 7, scope: !9448)
!9462 = !DILocation(line: 285, column: 7, scope: !9448)
!9463 = !DILocation(line: 286, column: 3, scope: !9448)
!9464 = !DILocation(line: 287, column: 3, scope: !9448)
!9465 = !DILocation(line: 289, column: 8, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9448, file: !998, line: 289, column: 7)
!9467 = !DILocation(line: 289, column: 7, scope: !9448)
!9468 = !DILocation(line: 293, column: 19, scope: !9448)
!9469 = !DILocation(line: 293, column: 3, scope: !9448)
!9470 = !DILocation(line: 294, column: 10, scope: !9448)
!9471 = !DILocation(line: 294, column: 7, scope: !9448)
!9472 = !DILocation(line: 295, column: 7, scope: !9448)
!9473 = !DILocation(line: 296, column: 3, scope: !9448)
!9474 = !DILocation(line: 298, column: 8, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9448, file: !998, line: 298, column: 7)
!9476 = !DILocation(line: 298, column: 7, scope: !9448)
!9477 = !DILocation(line: 302, column: 18, scope: !9448)
!9478 = !DILocation(line: 302, column: 3, scope: !9448)
!9479 = !DILocation(line: 303, column: 10, scope: !9448)
!9480 = !DILocation(line: 303, column: 7, scope: !9448)
!9481 = !DILocation(line: 304, column: 7, scope: !9448)
!9482 = !DILocation(line: 305, column: 3, scope: !9448)
!9483 = !DILocation(line: 307, column: 8, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9448, file: !998, line: 307, column: 7)
!9485 = !DILocation(line: 307, column: 7, scope: !9448)
!9486 = !DILocation(line: 311, column: 3, scope: !9448)
!9487 = !DILocation(line: 312, column: 18, scope: !9448)
!9488 = !DILocation(line: 312, column: 13, scope: !9448)
!9489 = !DILocation(line: 312, column: 24, scope: !9448)
!9490 = !DILocation(line: 312, column: 3, scope: !9448)
!9491 = !DILocation(line: 313, column: 3, scope: !9448)
!9492 = !DILocation(line: 318, column: 2, scope: !9391)
!9493 = !DILocation(line: 319, column: 1, scope: !9391)
!9494 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1181, file: !1181, line: 152, type: !9495, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9498)
!9495 = !DISubroutineType(types: !9496)
!9496 = !{!179, !9497, !103}
!9497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!9498 = !{!9499, !9500, !9501, !9502}
!9499 = !DILocalVariable(name: "target", arg: 1, scope: !9494, file: !1181, line: 152, type: !9497)
!9500 = !DILocalVariable(name: "bit", arg: 2, scope: !9494, file: !1181, line: 152, type: !103)
!9501 = !DILocalVariable(name: "mask", scope: !9494, file: !1181, line: 154, type: !9385)
!9502 = !DILocalVariable(name: "old", scope: !9494, file: !1181, line: 155, type: !9385)
!9503 = !DILocation(line: 0, scope: !9494)
!9504 = !DILocation(line: 154, column: 22, scope: !9494)
!9505 = !DILocation(line: 157, column: 45, scope: !9494)
!9506 = !DILocation(line: 157, column: 8, scope: !9494)
!9507 = !DILocation(line: 159, column: 14, scope: !9494)
!9508 = !DILocation(line: 159, column: 22, scope: !9494)
!9509 = !DILocation(line: 159, column: 2, scope: !9494)
!9510 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1181, file: !1181, line: 217, type: !9511, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9513)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{null, !9497, !103}
!9513 = !{!9514, !9515, !9516}
!9514 = !DILocalVariable(name: "target", arg: 1, scope: !9510, file: !1181, line: 217, type: !9497)
!9515 = !DILocalVariable(name: "bit", arg: 2, scope: !9510, file: !1181, line: 217, type: !103)
!9516 = !DILocalVariable(name: "mask", scope: !9510, file: !1181, line: 219, type: !9385)
!9517 = !DILocation(line: 0, scope: !9510)
!9518 = !DILocation(line: 219, column: 22, scope: !9510)
!9519 = !DILocation(line: 221, column: 8, scope: !9510)
!9520 = !DILocation(line: 222, column: 1, scope: !9510)
!9521 = distinct !DISubprogram(name: "isprint", scope: !4986, file: !4986, line: 37, type: !118, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9522)
!9522 = !{!9523}
!9523 = !DILocalVariable(name: "c", arg: 1, scope: !9521, file: !4986, line: 37, type: !103)
!9524 = !DILocation(line: 0, scope: !9521)
!9525 = !DILocation(line: 39, column: 38, scope: !9521)
!9526 = !DILocation(line: 39, column: 2, scope: !9521)
!9527 = distinct !DISubprogram(name: "del_char", scope: !998, file: !998, line: 191, type: !9528, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9530)
!9528 = !DISubroutineType(types: !9529)
!9529 = !{null, !1142, !176}
!9530 = !{!9531, !9532}
!9531 = !DILocalVariable(name: "pos", arg: 1, scope: !9527, file: !998, line: 191, type: !1142)
!9532 = !DILocalVariable(name: "end", arg: 2, scope: !9527, file: !998, line: 191, type: !176)
!9533 = !DILocation(line: 0, scope: !9527)
!9534 = !DILocation(line: 193, column: 2, scope: !9527)
!9535 = !DILocation(line: 195, column: 10, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9527, file: !998, line: 195, column: 6)
!9537 = !DILocation(line: 195, column: 6, scope: !9527)
!9538 = !DILocation(line: 196, column: 3, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9536, file: !998, line: 195, column: 17)
!9540 = !DILocation(line: 197, column: 3, scope: !9539)
!9541 = !DILocation(line: 198, column: 3, scope: !9539)
!9542 = !DILocation(line: 201, column: 2, scope: !9527)
!9543 = !DILocation(line: 203, column: 2, scope: !9527)
!9544 = !DILocation(line: 203, column: 12, scope: !9527)
!9545 = !DILocation(line: 204, column: 16, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9527, file: !998, line: 203, column: 20)
!9547 = !DILocation(line: 204, column: 10, scope: !9546)
!9548 = !DILocation(line: 204, column: 8, scope: !9546)
!9549 = !DILocation(line: 205, column: 3, scope: !9546)
!9550 = !DILocation(line: 203, column: 15, scope: !9527)
!9551 = distinct !{!9551, !9543, !9552}
!9552 = !DILocation(line: 206, column: 2, scope: !9527)
!9553 = !DILocation(line: 208, column: 2, scope: !9527)
!9554 = !DILocation(line: 211, column: 2, scope: !9527)
!9555 = !DILocation(line: 212, column: 1, scope: !9527)
!9556 = !DISubprogram(name: "k_queue_append", scope: !325, file: !325, line: 1775, type: !9557, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!9557 = !DISubroutineType(types: !9558)
!9558 = !{null, !9362, !102}
!9559 = distinct !DISubprogram(name: "insert_char", scope: !998, file: !998, line: 163, type: !9560, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9562)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{null, !1142, !108, !176}
!9562 = !{!9563, !9564, !9565, !9566}
!9563 = !DILocalVariable(name: "pos", arg: 1, scope: !9559, file: !998, line: 163, type: !1142)
!9564 = !DILocalVariable(name: "c", arg: 2, scope: !9559, file: !998, line: 163, type: !108)
!9565 = !DILocalVariable(name: "end", arg: 3, scope: !9559, file: !998, line: 163, type: !176)
!9566 = !DILocalVariable(name: "tmp", scope: !9559, file: !998, line: 165, type: !108)
!9567 = !DILocation(line: 0, scope: !9559)
!9568 = !DILocation(line: 168, column: 2, scope: !9559)
!9569 = !DILocation(line: 170, column: 10, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9559, file: !998, line: 170, column: 6)
!9571 = !DILocation(line: 170, column: 6, scope: !9559)
!9572 = !DILocation(line: 171, column: 8, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9570, file: !998, line: 170, column: 17)
!9574 = !DILocation(line: 172, column: 3, scope: !9573)
!9575 = !DILocation(line: 175, column: 8, scope: !9559)
!9576 = !DILocation(line: 176, column: 11, scope: !9559)
!9577 = !DILocation(line: 178, column: 2, scope: !9559)
!9578 = !DILocation(line: 180, column: 2, scope: !9559)
!9579 = !DILocation(line: 180, column: 12, scope: !9559)
!9580 = !DILocation(line: 181, column: 3, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9559, file: !998, line: 180, column: 20)
!9582 = !DILocation(line: 182, column: 7, scope: !9581)
!9583 = !DILocation(line: 183, column: 12, scope: !9581)
!9584 = !DILocation(line: 180, column: 15, scope: !9559)
!9585 = distinct !{!9585, !9578, !9586}
!9586 = !DILocation(line: 185, column: 2, scope: !9559)
!9587 = !DILocation(line: 188, column: 2, scope: !9559)
!9588 = !DILocation(line: 189, column: 1, scope: !9559)
!9589 = distinct !DISubprogram(name: "cursor_save", scope: !998, file: !998, line: 153, type: !3229, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !486)
!9590 = !DILocation(line: 155, column: 2, scope: !9589)
!9591 = !DILocation(line: 156, column: 1, scope: !9589)
!9592 = distinct !DISubprogram(name: "cursor_restore", scope: !998, file: !998, line: 158, type: !3229, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !486)
!9593 = !DILocation(line: 160, column: 2, scope: !9592)
!9594 = !DILocation(line: 161, column: 1, scope: !9592)
!9595 = distinct !DISubprogram(name: "atomic_or", scope: !9596, file: !9596, line: 279, type: !9597, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9599)
!9596 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9597 = !DISubroutineType(types: !9598)
!9598 = !{!9385, !9497, !9385}
!9599 = !{!9600, !9601}
!9600 = !DILocalVariable(name: "target", arg: 1, scope: !9595, file: !9596, line: 279, type: !9497)
!9601 = !DILocalVariable(name: "value", arg: 2, scope: !9595, file: !9596, line: 279, type: !9385)
!9602 = !DILocation(line: 0, scope: !9595)
!9603 = !DILocation(line: 281, column: 9, scope: !9595)
!9604 = !DILocation(line: 281, column: 2, scope: !9595)
!9605 = distinct !DISubprogram(name: "atomic_and", scope: !9596, file: !9596, line: 319, type: !9597, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9606)
!9606 = !{!9607, !9608}
!9607 = !DILocalVariable(name: "target", arg: 1, scope: !9605, file: !9596, line: 319, type: !9497)
!9608 = !DILocalVariable(name: "value", arg: 2, scope: !9605, file: !9596, line: 319, type: !9385)
!9609 = !DILocation(line: 0, scope: !9605)
!9610 = !DILocation(line: 321, column: 9, scope: !9605)
!9611 = !DILocation(line: 321, column: 2, scope: !9605)
!9612 = distinct !DISubprogram(name: "isdigit", scope: !4986, file: !4986, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9613)
!9613 = !{!9614}
!9614 = !DILocalVariable(name: "a", arg: 1, scope: !9612, file: !4986, line: 43, type: !103)
!9615 = !DILocation(line: 0, scope: !9612)
!9616 = !DILocation(line: 45, column: 29, scope: !9612)
!9617 = !DILocation(line: 45, column: 45, scope: !9612)
!9618 = !DILocation(line: 45, column: 2, scope: !9612)
!9619 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1181, file: !1181, line: 176, type: !9495, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9620)
!9620 = !{!9621, !9622, !9623, !9624}
!9621 = !DILocalVariable(name: "target", arg: 1, scope: !9619, file: !1181, line: 176, type: !9497)
!9622 = !DILocalVariable(name: "bit", arg: 2, scope: !9619, file: !1181, line: 176, type: !103)
!9623 = !DILocalVariable(name: "mask", scope: !9619, file: !1181, line: 178, type: !9385)
!9624 = !DILocalVariable(name: "old", scope: !9619, file: !1181, line: 179, type: !9385)
!9625 = !DILocation(line: 0, scope: !9619)
!9626 = !DILocation(line: 181, column: 8, scope: !9619)
!9627 = !DILocation(line: 183, column: 14, scope: !9619)
!9628 = !DILocation(line: 183, column: 22, scope: !9619)
!9629 = !DILocation(line: 183, column: 2, scope: !9619)
!9630 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1181, file: !1181, line: 198, type: !9511, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9631)
!9631 = !{!9632, !9633, !9634}
!9632 = !DILocalVariable(name: "target", arg: 1, scope: !9630, file: !1181, line: 198, type: !9497)
!9633 = !DILocalVariable(name: "bit", arg: 2, scope: !9630, file: !1181, line: 198, type: !103)
!9634 = !DILocalVariable(name: "mask", scope: !9630, file: !1181, line: 200, type: !9385)
!9635 = !DILocation(line: 0, scope: !9630)
!9636 = !DILocation(line: 200, column: 22, scope: !9630)
!9637 = !DILocation(line: 202, column: 45, scope: !9630)
!9638 = !DILocation(line: 202, column: 8, scope: !9630)
!9639 = !DILocation(line: 203, column: 1, scope: !9630)
!9640 = distinct !DISubprogram(name: "cursor_backward", scope: !998, file: !998, line: 148, type: !5791, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9641)
!9641 = !{!9642}
!9642 = !DILocalVariable(name: "count", arg: 1, scope: !9640, file: !998, line: 148, type: !32)
!9643 = !DILocation(line: 0, scope: !9640)
!9644 = !DILocation(line: 150, column: 2, scope: !9640)
!9645 = !DILocation(line: 151, column: 1, scope: !9640)
!9646 = distinct !DISubprogram(name: "cursor_forward", scope: !998, file: !998, line: 143, type: !5791, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9647)
!9647 = !{!9648}
!9648 = !DILocalVariable(name: "count", arg: 1, scope: !9646, file: !998, line: 143, type: !32)
!9649 = !DILocation(line: 0, scope: !9646)
!9650 = !DILocation(line: 145, column: 2, scope: !9646)
!9651 = !DILocation(line: 146, column: 1, scope: !9646)
!9652 = distinct !DISubprogram(name: "atomic_get", scope: !9596, file: !9596, line: 159, type: !9653, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9655)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!9385, !9379}
!9655 = !{!9656}
!9656 = !DILocalVariable(name: "target", arg: 1, scope: !9652, file: !9596, line: 159, type: !9379)
!9657 = !DILocation(line: 0, scope: !9652)
!9658 = !DILocation(line: 161, column: 9, scope: !9652)
!9659 = !DILocation(line: 161, column: 2, scope: !9652)
!9660 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3669, file: !3669, line: 646, type: !9360, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!9661 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !225, file: !225, line: 1093, type: !1035, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9662)
!9662 = !{!9663, !9664}
!9663 = !DILocalVariable(name: "dev", arg: 1, scope: !9661, file: !225, line: 1093, type: !1014)
!9664 = !DILocalVariable(name: "api", scope: !9661, file: !225, line: 1096, type: !1006)
!9665 = !DILocation(line: 0, scope: !9661)
!9666 = !DILocation(line: 1097, column: 40, scope: !9661)
!9667 = !DILocation(line: 1099, column: 11, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9661, file: !225, line: 1099, column: 6)
!9669 = !DILocation(line: 1099, column: 26, scope: !9668)
!9670 = !DILocation(line: 1099, column: 6, scope: !9661)
!9671 = !DILocation(line: 1102, column: 9, scope: !9661)
!9672 = !DILocation(line: 1102, column: 2, scope: !9661)
!9673 = !DILocation(line: 1107, column: 1, scope: !9661)
!9674 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !225, file: !225, line: 1136, type: !1035, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9675)
!9675 = !{!9676, !9677}
!9676 = !DILocalVariable(name: "dev", arg: 1, scope: !9674, file: !225, line: 1136, type: !1014)
!9677 = !DILocalVariable(name: "api", scope: !9674, file: !225, line: 1139, type: !1006)
!9678 = !DILocation(line: 0, scope: !9674)
!9679 = !DILocation(line: 1140, column: 40, scope: !9674)
!9680 = !DILocation(line: 1142, column: 11, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9674, file: !225, line: 1142, column: 6)
!9682 = !DILocation(line: 1142, column: 22, scope: !9681)
!9683 = !DILocation(line: 1142, column: 6, scope: !9674)
!9684 = !DILocation(line: 1145, column: 9, scope: !9674)
!9685 = !DILocation(line: 1145, column: 2, scope: !9674)
!9686 = !DILocation(line: 1150, column: 1, scope: !9674)
!9687 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !225, file: !225, line: 878, type: !1065, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9688)
!9688 = !{!9689, !9690}
!9689 = !DILocalVariable(name: "dev", arg: 1, scope: !9687, file: !225, line: 878, type: !1014)
!9690 = !DILocalVariable(name: "api", scope: !9687, file: !225, line: 881, type: !1006)
!9691 = !DILocation(line: 0, scope: !9687)
!9692 = !DILocation(line: 882, column: 40, scope: !9687)
!9693 = !DILocation(line: 884, column: 11, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9687, file: !225, line: 884, column: 6)
!9695 = !DILocation(line: 884, column: 26, scope: !9694)
!9696 = !DILocation(line: 884, column: 6, scope: !9687)
!9697 = !DILocation(line: 885, column: 3, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9694, file: !225, line: 884, column: 35)
!9699 = !DILocation(line: 886, column: 2, scope: !9698)
!9700 = !DILocation(line: 890, column: 1, scope: !9687)
!9701 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !225, file: !225, line: 955, type: !1065, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !994, retainedNodes: !9702)
!9702 = !{!9703, !9704}
!9703 = !DILocalVariable(name: "dev", arg: 1, scope: !9701, file: !225, line: 955, type: !1014)
!9704 = !DILocalVariable(name: "api", scope: !9701, file: !225, line: 958, type: !1006)
!9705 = !DILocation(line: 0, scope: !9701)
!9706 = !DILocation(line: 959, column: 40, scope: !9701)
!9707 = !DILocation(line: 961, column: 11, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9701, file: !225, line: 961, column: 6)
!9709 = !DILocation(line: 961, column: 26, scope: !9708)
!9710 = !DILocation(line: 961, column: 6, scope: !9701)
!9711 = !DILocation(line: 962, column: 3, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9708, file: !225, line: 961, column: 35)
!9713 = !DILocation(line: 963, column: 2, scope: !9712)
!9714 = !DILocation(line: 967, column: 1, scope: !9701)
!9715 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1346, file: !1346, line: 523, type: !1212, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9716)
!9716 = !{!9717, !9718, !9719, !9720, !9721}
!9717 = !DILocalVariable(name: "dev", arg: 1, scope: !9715, file: !1346, line: 523, type: !1214)
!9718 = !DILocalVariable(name: "pin", arg: 2, scope: !9715, file: !1346, line: 524, type: !624)
!9719 = !DILocalVariable(name: "flags", arg: 3, scope: !9715, file: !1346, line: 524, type: !625)
!9720 = !DILocalVariable(name: "err", scope: !9715, file: !1346, line: 526, type: !103)
!9721 = !DILocalVariable(name: "pincfg", scope: !9715, file: !1346, line: 527, type: !103)
!9722 = !DILocation(line: 0, scope: !9715)
!9723 = !DILocation(line: 527, column: 2, scope: !9715)
!9724 = !DILocation(line: 532, column: 8, scope: !9715)
!9725 = !DILocation(line: 533, column: 10, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9715, file: !1346, line: 533, column: 6)
!9727 = !DILocation(line: 533, column: 6, scope: !9715)
!9728 = !DILocation(line: 543, column: 13, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9715, file: !1346, line: 543, column: 6)
!9730 = !DILocation(line: 543, column: 28, scope: !9729)
!9731 = !DILocation(line: 543, column: 6, scope: !9715)
!9732 = !DILocation(line: 544, column: 14, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9734, file: !1346, line: 544, column: 7)
!9734 = distinct !DILexicalBlock(scope: !9729, file: !1346, line: 543, column: 34)
!9735 = !DILocation(line: 544, column: 39, scope: !9733)
!9736 = !DILocation(line: 544, column: 7, scope: !9734)
!9737 = !DILocation(line: 545, column: 38, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9733, file: !1346, line: 544, column: 45)
!9739 = !DILocation(line: 545, column: 4, scope: !9738)
!9740 = !DILocation(line: 546, column: 3, scope: !9738)
!9741 = !DILocation(line: 546, column: 21, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9733, file: !1346, line: 546, column: 14)
!9743 = !DILocation(line: 546, column: 45, scope: !9742)
!9744 = !DILocation(line: 546, column: 14, scope: !9733)
!9745 = !DILocation(line: 547, column: 40, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9742, file: !1346, line: 546, column: 51)
!9747 = !DILocation(line: 547, column: 4, scope: !9746)
!9748 = !DILocation(line: 548, column: 3, scope: !9746)
!9749 = !DILocation(line: 551, column: 32, scope: !9715)
!9750 = !DILocation(line: 551, column: 37, scope: !9715)
!9751 = !DILocation(line: 551, column: 2, scope: !9715)
!9752 = !DILocation(line: 554, column: 6, scope: !9715)
!9753 = !DILocation(line: 562, column: 1, scope: !9715)
!9754 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1346, file: !1346, line: 410, type: !9755, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9757)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{!103, !1214, !916}
!9757 = !{!9758, !9759, !9760, !9762}
!9758 = !DILocalVariable(name: "dev", arg: 1, scope: !9754, file: !1346, line: 410, type: !1214)
!9759 = !DILocalVariable(name: "value", arg: 2, scope: !9754, file: !1346, line: 410, type: !916)
!9760 = !DILocalVariable(name: "cfg", scope: !9754, file: !1346, line: 412, type: !9761)
!9761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!9762 = !DILocalVariable(name: "gpio", scope: !9754, file: !1346, line: 413, type: !1281)
!9763 = !DILocation(line: 0, scope: !9754)
!9764 = !DILocation(line: 412, column: 45, scope: !9754)
!9765 = !DILocation(line: 413, column: 44, scope: !9754)
!9766 = !DILocation(line: 415, column: 11, scope: !9754)
!9767 = !DILocation(line: 415, column: 9, scope: !9754)
!9768 = !DILocation(line: 417, column: 2, scope: !9754)
!9769 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1346, file: !1346, line: 420, type: !1235, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9770)
!9770 = !{!9771, !9772, !9773, !9774, !9775, !9776}
!9771 = !DILocalVariable(name: "dev", arg: 1, scope: !9769, file: !1346, line: 420, type: !1214)
!9772 = !DILocalVariable(name: "mask", arg: 2, scope: !9769, file: !1346, line: 421, type: !636)
!9773 = !DILocalVariable(name: "value", arg: 3, scope: !9769, file: !1346, line: 422, type: !631)
!9774 = !DILocalVariable(name: "cfg", scope: !9769, file: !1346, line: 424, type: !9761)
!9775 = !DILocalVariable(name: "gpio", scope: !9769, file: !1346, line: 425, type: !1281)
!9776 = !DILocalVariable(name: "port_value", scope: !9769, file: !1346, line: 426, type: !132)
!9777 = !DILocation(line: 0, scope: !9769)
!9778 = !DILocation(line: 424, column: 45, scope: !9769)
!9779 = !DILocation(line: 425, column: 44, scope: !9769)
!9780 = !DILocation(line: 430, column: 15, scope: !9769)
!9781 = !DILocation(line: 431, column: 46, scope: !9769)
!9782 = !DILocation(line: 431, column: 44, scope: !9769)
!9783 = !DILocation(line: 431, column: 61, scope: !9769)
!9784 = !DILocation(line: 431, column: 53, scope: !9769)
!9785 = !DILocation(line: 431, column: 2, scope: !9769)
!9786 = !DILocation(line: 435, column: 2, scope: !9769)
!9787 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1346, file: !1346, line: 438, type: !1239, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9788)
!9788 = !{!9789, !9790, !9791, !9792}
!9789 = !DILocalVariable(name: "dev", arg: 1, scope: !9787, file: !1346, line: 438, type: !1214)
!9790 = !DILocalVariable(name: "pins", arg: 2, scope: !9787, file: !1346, line: 439, type: !636)
!9791 = !DILocalVariable(name: "cfg", scope: !9787, file: !1346, line: 441, type: !9761)
!9792 = !DILocalVariable(name: "gpio", scope: !9787, file: !1346, line: 442, type: !1281)
!9793 = !DILocation(line: 0, scope: !9787)
!9794 = !DILocation(line: 441, column: 45, scope: !9787)
!9795 = !DILocation(line: 442, column: 44, scope: !9787)
!9796 = !DILocation(line: 448, column: 2, scope: !9787)
!9797 = !DILocation(line: 450, column: 2, scope: !9787)
!9798 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1346, file: !1346, line: 453, type: !1239, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9799)
!9799 = !{!9800, !9801, !9802, !9803}
!9800 = !DILocalVariable(name: "dev", arg: 1, scope: !9798, file: !1346, line: 453, type: !1214)
!9801 = !DILocalVariable(name: "pins", arg: 2, scope: !9798, file: !1346, line: 454, type: !636)
!9802 = !DILocalVariable(name: "cfg", scope: !9798, file: !1346, line: 456, type: !9761)
!9803 = !DILocalVariable(name: "gpio", scope: !9798, file: !1346, line: 457, type: !1281)
!9804 = !DILocation(line: 0, scope: !9798)
!9805 = !DILocation(line: 456, column: 45, scope: !9798)
!9806 = !DILocation(line: 457, column: 44, scope: !9798)
!9807 = !DILocation(line: 467, column: 2, scope: !9798)
!9808 = !DILocation(line: 470, column: 2, scope: !9798)
!9809 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1346, file: !1346, line: 473, type: !1239, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9810)
!9810 = !{!9811, !9812, !9813, !9814}
!9811 = !DILocalVariable(name: "dev", arg: 1, scope: !9809, file: !1346, line: 473, type: !1214)
!9812 = !DILocalVariable(name: "pins", arg: 2, scope: !9809, file: !1346, line: 474, type: !636)
!9813 = !DILocalVariable(name: "cfg", scope: !9809, file: !1346, line: 476, type: !9761)
!9814 = !DILocalVariable(name: "gpio", scope: !9809, file: !1346, line: 477, type: !1281)
!9815 = !DILocation(line: 0, scope: !9809)
!9816 = !DILocation(line: 476, column: 45, scope: !9809)
!9817 = !DILocation(line: 477, column: 44, scope: !9809)
!9818 = !DILocation(line: 484, column: 2, scope: !9809)
!9819 = !DILocation(line: 487, column: 2, scope: !9809)
!9820 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1346, file: !1346, line: 594, type: !1245, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9821)
!9821 = !{!9822, !9823, !9824, !9825, !9826, !9827, !9829, !9830, !9831}
!9822 = !DILocalVariable(name: "dev", arg: 1, scope: !9820, file: !1346, line: 594, type: !1214)
!9823 = !DILocalVariable(name: "pin", arg: 2, scope: !9820, file: !1346, line: 595, type: !624)
!9824 = !DILocalVariable(name: "mode", arg: 3, scope: !9820, file: !1346, line: 596, type: !589)
!9825 = !DILocalVariable(name: "trig", arg: 4, scope: !9820, file: !1346, line: 597, type: !595)
!9826 = !DILocalVariable(name: "cfg", scope: !9820, file: !1346, line: 599, type: !9761)
!9827 = !DILocalVariable(name: "data", scope: !9820, file: !1346, line: 600, type: !9828)
!9828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!9829 = !DILocalVariable(name: "edge", scope: !9820, file: !1346, line: 601, type: !103)
!9830 = !DILocalVariable(name: "err", scope: !9820, file: !1346, line: 602, type: !103)
!9831 = !DILabel(scope: !9820, name: "exit", file: !1346, line: 643)
!9832 = !DILocation(line: 0, scope: !9820)
!9833 = !DILocation(line: 599, column: 45, scope: !9820)
!9834 = !DILocation(line: 604, column: 6, scope: !9820)
!9835 = !DILocation(line: 605, column: 34, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !1346, line: 605, column: 7)
!9837 = distinct !DILexicalBlock(scope: !9838, file: !1346, line: 604, column: 38)
!9838 = distinct !DILexicalBlock(scope: !9820, file: !1346, line: 604, column: 6)
!9839 = !DILocation(line: 605, column: 7, scope: !9836)
!9840 = !DILocation(line: 605, column: 47, scope: !9836)
!9841 = !DILocation(line: 605, column: 39, scope: !9836)
!9842 = !DILocation(line: 605, column: 7, scope: !9837)
!9843 = !DILocation(line: 606, column: 4, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9836, file: !1346, line: 605, column: 53)
!9845 = !DILocation(line: 607, column: 4, scope: !9844)
!9846 = !DILocation(line: 608, column: 4, scope: !9844)
!9847 = !DILocation(line: 609, column: 3, scope: !9844)
!9848 = !DILocation(line: 600, column: 38, scope: !9820)
!9849 = !DILocation(line: 620, column: 30, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9820, file: !1346, line: 620, column: 6)
!9851 = !DILocation(line: 620, column: 6, scope: !9850)
!9852 = !DILocation(line: 620, column: 57, scope: !9850)
!9853 = !DILocation(line: 620, column: 6, scope: !9820)
!9854 = !DILocation(line: 625, column: 29, scope: !9820)
!9855 = !DILocation(line: 625, column: 2, scope: !9820)
!9856 = !DILocation(line: 627, column: 2, scope: !9820)
!9857 = !DILocation(line: 630, column: 3, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9820, file: !1346, line: 627, column: 16)
!9859 = !DILocation(line: 633, column: 3, scope: !9858)
!9860 = !DILocation(line: 636, column: 3, scope: !9858)
!9861 = !DILocation(line: 639, column: 2, scope: !9820)
!9862 = !DILocation(line: 641, column: 2, scope: !9820)
!9863 = !DILocation(line: 643, column: 1, scope: !9820)
!9864 = !DILocation(line: 644, column: 2, scope: !9820)
!9865 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1346, file: !1346, line: 647, type: !1249, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9866)
!9866 = !{!9867, !9868, !9869, !9870}
!9867 = !DILocalVariable(name: "dev", arg: 1, scope: !9865, file: !1346, line: 647, type: !1214)
!9868 = !DILocalVariable(name: "callback", arg: 2, scope: !9865, file: !1346, line: 648, type: !1251)
!9869 = !DILocalVariable(name: "set", arg: 3, scope: !9865, file: !1346, line: 649, type: !179)
!9870 = !DILocalVariable(name: "data", scope: !9865, file: !1346, line: 651, type: !9828)
!9871 = !DILocation(line: 0, scope: !9865)
!9872 = !DILocation(line: 651, column: 38, scope: !9865)
!9873 = !DILocation(line: 653, column: 37, scope: !9865)
!9874 = !DILocation(line: 653, column: 9, scope: !9865)
!9875 = !DILocation(line: 653, column: 2, scope: !9865)
!9876 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9877, file: !9877, line: 38, type: !9878, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9881)
!9877 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9878 = !DISubroutineType(types: !9879)
!9879 = !{!103, !9880, !1251, !179}
!9880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!9881 = !{!9882, !9883, !9884}
!9882 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9876, file: !9877, line: 38, type: !9880)
!9883 = !DILocalVariable(name: "callback", arg: 2, scope: !9876, file: !9877, line: 39, type: !1251)
!9884 = !DILocalVariable(name: "set", arg: 3, scope: !9876, file: !9877, line: 40, type: !179)
!9885 = !DILocation(line: 0, scope: !9876)
!9886 = !DILocation(line: 45, column: 7, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9876, file: !9877, line: 45, column: 6)
!9888 = !DILocation(line: 45, column: 6, scope: !9876)
!9889 = !DILocation(line: 46, column: 56, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9891, file: !9877, line: 46, column: 7)
!9891 = distinct !DILexicalBlock(scope: !9887, file: !9877, line: 45, column: 38)
!9892 = !DILocation(line: 46, column: 8, scope: !9890)
!9893 = !DILocation(line: 46, column: 7, scope: !9891)
!9894 = !DILocation(line: 51, column: 13, scope: !9887)
!9895 = !DILocation(line: 56, column: 43, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !9877, line: 55, column: 11)
!9897 = distinct !DILexicalBlock(scope: !9876, file: !9877, line: 55, column: 6)
!9898 = !DILocation(line: 56, column: 3, scope: !9896)
!9899 = !DILocation(line: 57, column: 2, scope: !9896)
!9900 = !DILocation(line: 60, column: 1, scope: !9876)
!9901 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !656, file: !656, line: 261, type: !9902, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9904)
!9902 = !DISubroutineType(types: !9903)
!9903 = !{!179, !9880}
!9904 = !{!9905}
!9905 = !DILocalVariable(name: "list", arg: 1, scope: !9901, file: !656, line: 261, type: !9880)
!9906 = !DILocation(line: 0, scope: !9901)
!9907 = !DILocation(line: 261, column: 1, scope: !9901)
!9908 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !656, file: !656, line: 417, type: !9909, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9911)
!9909 = !DISubroutineType(types: !9910)
!9910 = !{!179, !9880, !1416}
!9911 = !{!9912, !9913, !9914, !9915}
!9912 = !DILocalVariable(name: "list", arg: 1, scope: !9908, file: !656, line: 417, type: !9880)
!9913 = !DILocalVariable(name: "node", arg: 2, scope: !9908, file: !656, line: 417, type: !1416)
!9914 = !DILocalVariable(name: "prev", scope: !9908, file: !656, line: 417, type: !1416)
!9915 = !DILocalVariable(name: "test", scope: !9908, file: !656, line: 417, type: !1416)
!9916 = !DILocation(line: 0, scope: !9908)
!9917 = !DILocation(line: 417, column: 1, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9908, file: !656, line: 417, column: 1)
!9919 = !DILocation(line: 417, column: 1, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9918, file: !656, line: 417, column: 1)
!9921 = !DILocation(line: 417, column: 1, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !656, line: 417, column: 1)
!9923 = distinct !DILexicalBlock(scope: !9920, file: !656, line: 417, column: 1)
!9924 = !DILocation(line: 417, column: 1, scope: !9923)
!9925 = distinct !{!9925, !9917, !9917}
!9926 = !DILocation(line: 417, column: 1, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9922, file: !656, line: 417, column: 1)
!9928 = !DILocation(line: 417, column: 1, scope: !9908)
!9929 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !656, file: !656, line: 298, type: !9930, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9932)
!9930 = !DISubroutineType(types: !9931)
!9931 = !{null, !9880, !1416}
!9932 = !{!9933, !9934}
!9933 = !DILocalVariable(name: "list", arg: 1, scope: !9929, file: !656, line: 298, type: !9880)
!9934 = !DILocalVariable(name: "node", arg: 2, scope: !9929, file: !656, line: 298, type: !1416)
!9935 = !DILocation(line: 0, scope: !9929)
!9936 = !DILocation(line: 298, column: 1, scope: !9929)
!9937 = !DILocation(line: 298, column: 1, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9929, file: !656, line: 298, column: 1)
!9939 = !DILocation(line: 298, column: 1, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9938, file: !656, line: 298, column: 1)
!9941 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !656, file: !656, line: 231, type: !9942, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9944)
!9942 = !DISubroutineType(types: !9943)
!9943 = !{!1416, !9880}
!9944 = !{!9945}
!9945 = !DILocalVariable(name: "list", arg: 1, scope: !9941, file: !656, line: 231, type: !9880)
!9946 = !DILocation(line: 0, scope: !9941)
!9947 = !DILocation(line: 233, column: 15, scope: !9941)
!9948 = !DILocation(line: 233, column: 2, scope: !9941)
!9949 = distinct !DISubprogram(name: "z_snode_next_set", scope: !656, file: !656, line: 209, type: !9950, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9952)
!9950 = !DISubroutineType(types: !9951)
!9951 = !{null, !1416, !1416}
!9952 = !{!9953, !9954}
!9953 = !DILocalVariable(name: "parent", arg: 1, scope: !9949, file: !656, line: 209, type: !1416)
!9954 = !DILocalVariable(name: "child", arg: 2, scope: !9949, file: !656, line: 209, type: !1416)
!9955 = !DILocation(line: 0, scope: !9949)
!9956 = !DILocation(line: 211, column: 10, scope: !9949)
!9957 = !DILocation(line: 211, column: 15, scope: !9949)
!9958 = !DILocation(line: 212, column: 1, scope: !9949)
!9959 = distinct !DISubprogram(name: "z_slist_head_set", scope: !656, file: !656, line: 214, type: !9930, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9960)
!9960 = !{!9961, !9962}
!9961 = !DILocalVariable(name: "list", arg: 1, scope: !9959, file: !656, line: 214, type: !9880)
!9962 = !DILocalVariable(name: "node", arg: 2, scope: !9959, file: !656, line: 214, type: !1416)
!9963 = !DILocation(line: 0, scope: !9959)
!9964 = !DILocation(line: 216, column: 8, scope: !9959)
!9965 = !DILocation(line: 216, column: 13, scope: !9959)
!9966 = !DILocation(line: 217, column: 1, scope: !9959)
!9967 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !656, file: !656, line: 243, type: !9942, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9968)
!9968 = !{!9969}
!9969 = !DILocalVariable(name: "list", arg: 1, scope: !9967, file: !656, line: 243, type: !9880)
!9970 = !DILocation(line: 0, scope: !9967)
!9971 = !DILocation(line: 245, column: 15, scope: !9967)
!9972 = !DILocation(line: 245, column: 2, scope: !9967)
!9973 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !656, file: !656, line: 219, type: !9930, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9974)
!9974 = !{!9975, !9976}
!9975 = !DILocalVariable(name: "list", arg: 1, scope: !9973, file: !656, line: 219, type: !9880)
!9976 = !DILocalVariable(name: "node", arg: 2, scope: !9973, file: !656, line: 219, type: !1416)
!9977 = !DILocation(line: 0, scope: !9973)
!9978 = !DILocation(line: 221, column: 8, scope: !9973)
!9979 = !DILocation(line: 221, column: 13, scope: !9973)
!9980 = !DILocation(line: 222, column: 1, scope: !9973)
!9981 = distinct !DISubprogram(name: "sys_slist_remove", scope: !656, file: !656, line: 401, type: !9982, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !9984)
!9982 = !DISubroutineType(types: !9983)
!9983 = !{null, !9880, !1416, !1416}
!9984 = !{!9985, !9986, !9987}
!9985 = !DILocalVariable(name: "list", arg: 1, scope: !9981, file: !656, line: 401, type: !9880)
!9986 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9981, file: !656, line: 401, type: !1416)
!9987 = !DILocalVariable(name: "node", arg: 3, scope: !9981, file: !656, line: 401, type: !1416)
!9988 = !DILocation(line: 0, scope: !9981)
!9989 = !DILocation(line: 401, column: 1, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9981, file: !656, line: 401, column: 1)
!9991 = !DILocation(line: 0, scope: !9990)
!9992 = !DILocation(line: 401, column: 1, scope: !9981)
!9993 = !DILocation(line: 401, column: 1, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9990, file: !656, line: 401, column: 1)
!9995 = !DILocation(line: 401, column: 1, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9994, file: !656, line: 401, column: 1)
!9997 = !DILocation(line: 401, column: 1, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9996, file: !656, line: 401, column: 1)
!9999 = !DILocation(line: 401, column: 1, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9990, file: !656, line: 401, column: 1)
!10001 = !DILocation(line: 401, column: 1, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !10000, file: !656, line: 401, column: 1)
!10003 = !DILocation(line: 401, column: 1, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10002, file: !656, line: 401, column: 1)
!10005 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !656, file: !656, line: 285, type: !10006, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10008)
!10006 = !DISubroutineType(types: !10007)
!10007 = !{!1416, !1416}
!10008 = !{!10009}
!10009 = !DILocalVariable(name: "node", arg: 1, scope: !10005, file: !656, line: 285, type: !1416)
!10010 = !DILocation(line: 0, scope: !10005)
!10011 = !DILocation(line: 285, column: 1, scope: !10005)
!10012 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !656, file: !656, line: 274, type: !10006, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10013)
!10013 = !{!10014}
!10014 = !DILocalVariable(name: "node", arg: 1, scope: !10012, file: !656, line: 274, type: !1416)
!10015 = !DILocation(line: 0, scope: !10012)
!10016 = !DILocation(line: 274, column: 1, scope: !10012)
!10017 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !656, file: !656, line: 204, type: !10006, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10018)
!10018 = !{!10019}
!10019 = !DILocalVariable(name: "node", arg: 1, scope: !10017, file: !656, line: 204, type: !1416)
!10020 = !DILocation(line: 0, scope: !10017)
!10021 = !DILocation(line: 206, column: 15, scope: !10017)
!10022 = !DILocation(line: 206, column: 2, scope: !10017)
!10023 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1346, file: !1346, line: 342, type: !118, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10024)
!10024 = !{!10025, !10026, !10027}
!10025 = !DILocalVariable(name: "pin", arg: 1, scope: !10023, file: !1346, line: 342, type: !103)
!10026 = !DILocalVariable(name: "line", scope: !10023, file: !1346, line: 344, type: !132)
!10027 = !DILocalVariable(name: "port", scope: !10023, file: !1346, line: 345, type: !103)
!10028 = !DILocation(line: 0, scope: !10023)
!10029 = !DILocation(line: 344, column: 18, scope: !10023)
!10030 = !{i32 983040, i32 0}
!10031 = !DILocation(line: 356, column: 9, scope: !10023)
!10032 = !DILocation(line: 370, column: 2, scope: !10023)
!10033 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1346, file: !1346, line: 37, type: !809, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10034)
!10034 = !{!10035, !10036, !10037}
!10035 = !DILocalVariable(name: "line", arg: 1, scope: !10033, file: !1346, line: 37, type: !103)
!10036 = !DILocalVariable(name: "arg", arg: 2, scope: !10033, file: !1346, line: 37, type: !102)
!10037 = !DILocalVariable(name: "data", scope: !10033, file: !1346, line: 39, type: !9828)
!10038 = !DILocation(line: 0, scope: !10033)
!10039 = !DILocation(line: 41, column: 29, scope: !10033)
!10040 = !DILocation(line: 41, column: 39, scope: !10033)
!10041 = !DILocation(line: 41, column: 44, scope: !10033)
!10042 = !DILocation(line: 41, column: 2, scope: !10033)
!10043 = !DILocation(line: 42, column: 1, scope: !10033)
!10044 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1346, file: !1346, line: 376, type: !10045, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10047)
!10045 = !DISubroutineType(types: !10046)
!10046 = !{!103, !103, !103}
!10047 = !{!10048, !10049, !10050, !10052, !10053}
!10048 = !DILocalVariable(name: "port", arg: 1, scope: !10044, file: !1346, line: 376, type: !103)
!10049 = !DILocalVariable(name: "pin", arg: 2, scope: !10044, file: !1346, line: 376, type: !103)
!10050 = !DILocalVariable(name: "clk", scope: !10044, file: !1346, line: 386, type: !10051)
!10051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1214)
!10052 = !DILocalVariable(name: "pclken", scope: !10044, file: !1346, line: 387, type: !1451)
!10053 = !DILocalVariable(name: "ret", scope: !10044, file: !1346, line: 396, type: !103)
!10054 = !DILocation(line: 0, scope: !10044)
!10055 = !DILocation(line: 387, column: 2, scope: !10044)
!10056 = !DILocation(line: 387, column: 22, scope: !10044)
!10057 = !DILocation(line: 399, column: 8, scope: !10044)
!10058 = !DILocation(line: 400, column: 10, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10044, file: !1346, line: 400, column: 6)
!10060 = !DILocation(line: 400, column: 6, scope: !10044)
!10061 = !DILocation(line: 405, column: 2, scope: !10044)
!10062 = !DILocation(line: 407, column: 2, scope: !10044)
!10063 = !DILocation(line: 408, column: 1, scope: !10044)
!10064 = distinct !DISubprogram(name: "clock_control_on", scope: !885, file: !885, line: 123, type: !1311, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10065)
!10065 = !{!10066, !10067, !10068}
!10066 = !DILocalVariable(name: "dev", arg: 1, scope: !10064, file: !885, line: 123, type: !1214)
!10067 = !DILocalVariable(name: "sys", arg: 2, scope: !10064, file: !885, line: 124, type: !960)
!10068 = !DILocalVariable(name: "api", scope: !10064, file: !885, line: 126, type: !1304)
!10069 = !DILocation(line: 0, scope: !10064)
!10070 = !DILocation(line: 127, column: 49, scope: !10064)
!10071 = !DILocation(line: 129, column: 14, scope: !10064)
!10072 = !DILocation(line: 129, column: 9, scope: !10064)
!10073 = !DILocation(line: 129, column: 2, scope: !10064)
!10074 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1346, file: !1346, line: 311, type: !8646, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10075)
!10075 = !{!10076, !10077, !10078}
!10076 = !DILocalVariable(name: "port", arg: 1, scope: !10074, file: !1346, line: 311, type: !103)
!10077 = !DILocalVariable(name: "pin", arg: 2, scope: !10074, file: !1346, line: 311, type: !103)
!10078 = !DILocalVariable(name: "line", scope: !10074, file: !1346, line: 313, type: !132)
!10079 = !DILocation(line: 0, scope: !10074)
!10080 = !DILocation(line: 313, column: 18, scope: !10074)
!10081 = !DILocation(line: 337, column: 2, scope: !10074)
!10082 = !DILocation(line: 340, column: 1, scope: !10074)
!10083 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1346, file: !1346, line: 295, type: !10084, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10086)
!10084 = !DISubroutineType(types: !10085)
!10085 = !{!132, !103}
!10086 = !{!10087}
!10087 = !DILocalVariable(name: "pin", arg: 1, scope: !10083, file: !1346, line: 295, type: !103)
!10088 = !DILocation(line: 0, scope: !10083)
!10089 = !DILocation(line: 307, column: 46, scope: !10083)
!10090 = !DILocation(line: 307, column: 27, scope: !10083)
!10091 = !DILocation(line: 307, column: 32, scope: !10083)
!10092 = !DILocation(line: 307, column: 14, scope: !10083)
!10093 = !DILocation(line: 307, column: 39, scope: !10083)
!10094 = !DILocation(line: 307, column: 2, scope: !10083)
!10095 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !10096, file: !10096, line: 621, type: !10097, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10099)
!10096 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10097 = !DISubroutineType(types: !10098)
!10098 = !{null, !132, !132}
!10099 = !{!10100, !10101}
!10100 = !DILocalVariable(name: "Port", arg: 1, scope: !10095, file: !10096, line: 621, type: !132)
!10101 = !DILocalVariable(name: "Line", arg: 2, scope: !10095, file: !10096, line: 621, type: !132)
!10102 = !DILocation(line: 0, scope: !10095)
!10103 = !DILocation(line: 623, column: 3, scope: !10095)
!10104 = !DILocalVariable(name: "value", arg: 1, scope: !10105, file: !6817, line: 373, type: !132)
!10105 = distinct !DISubprogram(name: "__RBIT", scope: !6817, file: !6817, line: 373, type: !7786, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10106)
!10106 = !{!10104, !10107}
!10107 = !DILocalVariable(name: "result", scope: !10105, file: !6817, line: 375, type: !132)
!10108 = !DILocation(line: 0, scope: !10105, inlinedAt: !10109)
!10109 = distinct !DILocation(line: 623, column: 3, scope: !10095)
!10110 = !DILocation(line: 380, column: 4, scope: !10105, inlinedAt: !10109)
!10111 = !{i64 2448771}
!10112 = !DILocalVariable(name: "value", arg: 1, scope: !10113, file: !6817, line: 403, type: !132)
!10113 = distinct !DISubprogram(name: "__CLZ", scope: !6817, file: !6817, line: 403, type: !10114, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!176, !132}
!10116 = !{!10112}
!10117 = !DILocation(line: 0, scope: !10113, inlinedAt: !10118)
!10118 = distinct !DILocation(line: 623, column: 3, scope: !10095)
!10119 = !DILocation(line: 414, column: 7, scope: !10113, inlinedAt: !10118)
!10120 = !DILocation(line: 624, column: 1, scope: !10095)
!10121 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9877, file: !9877, line: 69, type: !10122, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10124)
!10122 = !DISubroutineType(types: !10123)
!10123 = !{null, !9880, !1214, !132}
!10124 = !{!10125, !10126, !10127, !10128, !10129}
!10125 = !DILocalVariable(name: "list", arg: 1, scope: !10121, file: !9877, line: 69, type: !9880)
!10126 = !DILocalVariable(name: "port", arg: 2, scope: !10121, file: !9877, line: 70, type: !1214)
!10127 = !DILocalVariable(name: "pins", arg: 3, scope: !10121, file: !9877, line: 71, type: !132)
!10128 = !DILocalVariable(name: "cb", scope: !10121, file: !9877, line: 73, type: !1251)
!10129 = !DILocalVariable(name: "tmp", scope: !10121, file: !9877, line: 73, type: !1251)
!10130 = !DILocation(line: 0, scope: !10121)
!10131 = !DILocation(line: 75, column: 2, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10121, file: !9877, line: 75, column: 2)
!10133 = !DILocation(line: 0, scope: !10132)
!10134 = !DILocation(line: 76, column: 11, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10136, file: !9877, line: 76, column: 7)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !9877, line: 75, column: 57)
!10137 = distinct !DILexicalBlock(scope: !10132, file: !9877, line: 75, column: 2)
!10138 = !DILocation(line: 76, column: 20, scope: !10135)
!10139 = !DILocation(line: 76, column: 7, scope: !10136)
!10140 = !DILocation(line: 78, column: 8, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10135, file: !9877, line: 76, column: 28)
!10142 = !DILocation(line: 78, column: 4, scope: !10141)
!10143 = !DILocation(line: 79, column: 3, scope: !10141)
!10144 = !DILocation(line: 75, column: 2, scope: !10137)
!10145 = !DILocation(line: 81, column: 1, scope: !10121)
!10146 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !10096, file: !10096, line: 721, type: !7786, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10147)
!10147 = !{!10148}
!10148 = !DILocalVariable(name: "Line", arg: 1, scope: !10146, file: !10096, line: 721, type: !132)
!10149 = !DILocation(line: 0, scope: !10146)
!10150 = !DILocation(line: 723, column: 21, scope: !10146)
!10151 = !DILocation(line: 0, scope: !10105, inlinedAt: !10152)
!10152 = distinct !DILocation(line: 723, column: 76, scope: !10146)
!10153 = !DILocation(line: 380, column: 4, scope: !10105, inlinedAt: !10152)
!10154 = !DILocation(line: 0, scope: !10113, inlinedAt: !10155)
!10155 = distinct !DILocation(line: 723, column: 76, scope: !10146)
!10156 = !DILocation(line: 414, column: 7, scope: !10113, inlinedAt: !10155)
!10157 = !DILocation(line: 723, column: 73, scope: !10146)
!10158 = !DILocation(line: 723, column: 3, scope: !10146)
!10159 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10160, file: !10160, line: 913, type: !10161, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10163)
!10160 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10161 = !DISubroutineType(types: !10162)
!10162 = !{null, !1281, !132}
!10163 = !{!10164, !10165}
!10164 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10159, file: !10160, line: 913, type: !1281)
!10165 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10159, file: !10160, line: 913, type: !132)
!10166 = !DILocation(line: 0, scope: !10159)
!10167 = !DILocation(line: 918, column: 3, scope: !10159)
!10168 = !DILocation(line: 920, column: 1, scope: !10159)
!10169 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10160, file: !10160, line: 825, type: !10170, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10172)
!10170 = !DISubroutineType(types: !10171)
!10171 = !{!132, !1281}
!10172 = !{!10173}
!10173 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10169, file: !10160, line: 825, type: !1281)
!10174 = !DILocation(line: 0, scope: !10169)
!10175 = !DILocation(line: 827, column: 21, scope: !10169)
!10176 = !DILocation(line: 827, column: 3, scope: !10169)
!10177 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10160, file: !10160, line: 814, type: !10161, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10178)
!10178 = !{!10179, !10180}
!10179 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10177, file: !10160, line: 814, type: !1281)
!10180 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10177, file: !10160, line: 814, type: !132)
!10181 = !DILocation(line: 0, scope: !10177)
!10182 = !DILocation(line: 816, column: 3, scope: !10177)
!10183 = !DILocation(line: 817, column: 1, scope: !10177)
!10184 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10160, file: !10160, line: 773, type: !10170, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10185)
!10185 = !{!10186}
!10186 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10184, file: !10160, line: 773, type: !1281)
!10187 = !DILocation(line: 0, scope: !10184)
!10188 = !DILocation(line: 775, column: 21, scope: !10184)
!10189 = !DILocation(line: 775, column: 3, scope: !10184)
!10190 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1346, file: !1346, line: 47, type: !10191, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10193)
!10191 = !DISubroutineType(types: !10192)
!10192 = !{!103, !625, !2646}
!10193 = !{!10194, !10195}
!10194 = !DILocalVariable(name: "flags", arg: 1, scope: !10190, file: !1346, line: 47, type: !625)
!10195 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10190, file: !1346, line: 47, type: !2646)
!10196 = !DILocation(line: 0, scope: !10190)
!10197 = !DILocation(line: 50, column: 13, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10190, file: !1346, line: 50, column: 6)
!10199 = !DILocation(line: 50, column: 28, scope: !10198)
!10200 = !DILocation(line: 50, column: 6, scope: !10190)
!10201 = !DILocation(line: 53, column: 11, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10198, file: !1346, line: 50, column: 34)
!10203 = !DILocation(line: 55, column: 14, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10202, file: !1346, line: 55, column: 7)
!10205 = !DILocation(line: 55, column: 35, scope: !10204)
!10206 = !DILocation(line: 55, column: 7, scope: !10202)
!10207 = !DILocation(line: 56, column: 14, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10209, file: !1346, line: 56, column: 8)
!10209 = distinct !DILexicalBlock(scope: !10204, file: !1346, line: 55, column: 41)
!10210 = !DILocation(line: 56, column: 8, scope: !10209)
!10211 = !DILocation(line: 0, scope: !10204)
!10212 = !DILocation(line: 66, column: 14, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10202, file: !1346, line: 66, column: 7)
!10214 = !DILocation(line: 66, column: 30, scope: !10213)
!10215 = !DILocation(line: 66, column: 7, scope: !10202)
!10216 = !DILocation(line: 67, column: 12, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10213, file: !1346, line: 66, column: 36)
!10218 = !DILocation(line: 68, column: 3, scope: !10217)
!10219 = !DILocation(line: 68, column: 21, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10213, file: !1346, line: 68, column: 14)
!10221 = !DILocation(line: 68, column: 39, scope: !10220)
!10222 = !DILocation(line: 68, column: 14, scope: !10213)
!10223 = !DILocation(line: 69, column: 12, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10220, file: !1346, line: 68, column: 45)
!10225 = !DILocation(line: 70, column: 3, scope: !10224)
!10226 = !DILocation(line: 72, column: 21, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10198, file: !1346, line: 72, column: 14)
!10228 = !DILocation(line: 72, column: 35, scope: !10227)
!10229 = !DILocation(line: 72, column: 14, scope: !10198)
!10230 = !DILocation(line: 77, column: 14, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !1346, line: 77, column: 7)
!10232 = distinct !DILexicalBlock(scope: !10227, file: !1346, line: 72, column: 41)
!10233 = !DILocation(line: 77, column: 30, scope: !10231)
!10234 = !DILocation(line: 77, column: 7, scope: !10232)
!10235 = !DILocation(line: 0, scope: !10198)
!10236 = !DILocation(line: 90, column: 1, scope: !10190)
!10237 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1346, file: !1346, line: 157, type: !10238, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10240)
!10238 = !DISubroutineType(types: !10239)
!10239 = !{null, !1214, !103, !103, !103}
!10240 = !{!10241, !10242, !10243, !10244, !10245, !10246, !10247, !10248, !10249, !10250, !10251}
!10241 = !DILocalVariable(name: "dev", arg: 1, scope: !10237, file: !1346, line: 157, type: !1214)
!10242 = !DILocalVariable(name: "pin", arg: 2, scope: !10237, file: !1346, line: 157, type: !103)
!10243 = !DILocalVariable(name: "conf", arg: 3, scope: !10237, file: !1346, line: 158, type: !103)
!10244 = !DILocalVariable(name: "func", arg: 4, scope: !10237, file: !1346, line: 158, type: !103)
!10245 = !DILocalVariable(name: "cfg", scope: !10237, file: !1346, line: 160, type: !9761)
!10246 = !DILocalVariable(name: "gpio", scope: !10237, file: !1346, line: 161, type: !1281)
!10247 = !DILocalVariable(name: "pin_ll", scope: !10237, file: !1346, line: 163, type: !103)
!10248 = !DILocalVariable(name: "mode", scope: !10237, file: !1346, line: 227, type: !32)
!10249 = !DILocalVariable(name: "otype", scope: !10237, file: !1346, line: 227, type: !32)
!10250 = !DILocalVariable(name: "ospeed", scope: !10237, file: !1346, line: 227, type: !32)
!10251 = !DILocalVariable(name: "pupd", scope: !10237, file: !1346, line: 227, type: !32)
!10252 = !DILocation(line: 0, scope: !10237)
!10253 = !DILocation(line: 160, column: 45, scope: !10237)
!10254 = !DILocation(line: 161, column: 44, scope: !10237)
!10255 = !DILocation(line: 163, column: 15, scope: !10237)
!10256 = !DILocation(line: 229, column: 14, scope: !10237)
!10257 = !DILocation(line: 246, column: 47, scope: !10237)
!10258 = !DILocation(line: 246, column: 2, scope: !10237)
!10259 = !DILocation(line: 248, column: 43, scope: !10237)
!10260 = !DILocation(line: 248, column: 2, scope: !10237)
!10261 = !DILocation(line: 250, column: 40, scope: !10237)
!10262 = !DILocation(line: 250, column: 2, scope: !10237)
!10263 = !DILocation(line: 252, column: 11, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10237, file: !1346, line: 252, column: 6)
!10265 = !DILocation(line: 252, column: 6, scope: !10237)
!10266 = !DILocation(line: 253, column: 11, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10268, file: !1346, line: 253, column: 7)
!10268 = distinct !DILexicalBlock(scope: !10264, file: !1346, line: 252, column: 36)
!10269 = !DILocation(line: 253, column: 7, scope: !10268)
!10270 = !DILocation(line: 254, column: 4, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10267, file: !1346, line: 253, column: 16)
!10272 = !DILocation(line: 255, column: 3, scope: !10271)
!10273 = !DILocation(line: 256, column: 4, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10267, file: !1346, line: 255, column: 10)
!10275 = !DILocation(line: 260, column: 40, scope: !10237)
!10276 = !DILocation(line: 260, column: 2, scope: !10237)
!10277 = !DILocation(line: 265, column: 1, scope: !10237)
!10278 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1346, file: !1346, line: 137, type: !10084, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10279)
!10279 = !{!10280, !10281}
!10280 = !DILocalVariable(name: "pin", arg: 1, scope: !10278, file: !1346, line: 137, type: !103)
!10281 = !DILocalVariable(name: "pinval", scope: !10278, file: !1346, line: 139, type: !132)
!10282 = !DILocation(line: 0, scope: !10278)
!10283 = !DILocation(line: 149, column: 13, scope: !10278)
!10284 = !DILocation(line: 151, column: 2, scope: !10278)
!10285 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10160, file: !10160, line: 343, type: !10286, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10288)
!10286 = !DISubroutineType(types: !10287)
!10287 = !{null, !1281, !132, !132}
!10288 = !{!10289, !10290, !10291}
!10289 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10285, file: !10160, line: 343, type: !1281)
!10290 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10285, file: !10160, line: 343, type: !132)
!10291 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10285, file: !10160, line: 343, type: !132)
!10292 = !DILocation(line: 0, scope: !10285)
!10293 = !DILocation(line: 345, column: 3, scope: !10285)
!10294 = !DILocation(line: 346, column: 1, scope: !10285)
!10295 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10160, file: !10160, line: 414, type: !10286, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10296)
!10296 = !{!10297, !10298, !10299}
!10297 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10295, file: !10160, line: 414, type: !1281)
!10298 = !DILocalVariable(name: "Pin", arg: 2, scope: !10295, file: !10160, line: 414, type: !132)
!10299 = !DILocalVariable(name: "Speed", arg: 3, scope: !10295, file: !10160, line: 414, type: !132)
!10300 = !DILocation(line: 0, scope: !10295)
!10301 = !DILocation(line: 416, column: 3, scope: !10295)
!10302 = !DILocation(line: 0, scope: !10105, inlinedAt: !10303)
!10303 = distinct !DILocation(line: 416, column: 3, scope: !10295)
!10304 = !DILocation(line: 380, column: 4, scope: !10105, inlinedAt: !10303)
!10305 = !DILocation(line: 0, scope: !10113, inlinedAt: !10306)
!10306 = distinct !DILocation(line: 416, column: 3, scope: !10295)
!10307 = !DILocation(line: 414, column: 7, scope: !10113, inlinedAt: !10306)
!10308 = !DILocation(line: 0, scope: !10105, inlinedAt: !10309)
!10309 = distinct !DILocation(line: 416, column: 3, scope: !10295)
!10310 = !DILocation(line: 0, scope: !10113, inlinedAt: !10311)
!10311 = distinct !DILocation(line: 416, column: 3, scope: !10295)
!10312 = !DILocation(line: 418, column: 1, scope: !10295)
!10313 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10160, file: !10160, line: 485, type: !10286, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10314)
!10314 = !{!10315, !10316, !10317}
!10315 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10313, file: !10160, line: 485, type: !1281)
!10316 = !DILocalVariable(name: "Pin", arg: 2, scope: !10313, file: !10160, line: 485, type: !132)
!10317 = !DILocalVariable(name: "Pull", arg: 3, scope: !10313, file: !10160, line: 485, type: !132)
!10318 = !DILocation(line: 0, scope: !10313)
!10319 = !DILocation(line: 487, column: 3, scope: !10313)
!10320 = !DILocation(line: 0, scope: !10105, inlinedAt: !10321)
!10321 = distinct !DILocation(line: 487, column: 3, scope: !10313)
!10322 = !DILocation(line: 380, column: 4, scope: !10105, inlinedAt: !10321)
!10323 = !DILocation(line: 0, scope: !10113, inlinedAt: !10324)
!10324 = distinct !DILocation(line: 487, column: 3, scope: !10313)
!10325 = !DILocation(line: 414, column: 7, scope: !10113, inlinedAt: !10324)
!10326 = !DILocation(line: 0, scope: !10105, inlinedAt: !10327)
!10327 = distinct !DILocation(line: 487, column: 3, scope: !10313)
!10328 = !DILocation(line: 0, scope: !10113, inlinedAt: !10329)
!10329 = distinct !DILocation(line: 487, column: 3, scope: !10313)
!10330 = !DILocation(line: 488, column: 1, scope: !10313)
!10331 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10160, file: !10160, line: 557, type: !10286, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10332)
!10332 = !{!10333, !10334, !10335}
!10333 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10331, file: !10160, line: 557, type: !1281)
!10334 = !DILocalVariable(name: "Pin", arg: 2, scope: !10331, file: !10160, line: 557, type: !132)
!10335 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10331, file: !10160, line: 557, type: !132)
!10336 = !DILocation(line: 0, scope: !10331)
!10337 = !DILocation(line: 559, column: 3, scope: !10331)
!10338 = !DILocation(line: 0, scope: !10105, inlinedAt: !10339)
!10339 = distinct !DILocation(line: 559, column: 3, scope: !10331)
!10340 = !DILocation(line: 380, column: 4, scope: !10105, inlinedAt: !10339)
!10341 = !DILocation(line: 0, scope: !10113, inlinedAt: !10342)
!10342 = distinct !DILocation(line: 559, column: 3, scope: !10331)
!10343 = !DILocation(line: 414, column: 7, scope: !10113, inlinedAt: !10342)
!10344 = !DILocation(line: 0, scope: !10105, inlinedAt: !10345)
!10345 = distinct !DILocation(line: 559, column: 3, scope: !10331)
!10346 = !DILocation(line: 0, scope: !10113, inlinedAt: !10347)
!10347 = distinct !DILocation(line: 559, column: 3, scope: !10331)
!10348 = !DILocation(line: 561, column: 1, scope: !10331)
!10349 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10160, file: !10160, line: 634, type: !10286, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10350)
!10350 = !{!10351, !10352, !10353}
!10351 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10349, file: !10160, line: 634, type: !1281)
!10352 = !DILocalVariable(name: "Pin", arg: 2, scope: !10349, file: !10160, line: 634, type: !132)
!10353 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10349, file: !10160, line: 634, type: !132)
!10354 = !DILocation(line: 0, scope: !10349)
!10355 = !DILocation(line: 636, column: 3, scope: !10349)
!10356 = !DILocation(line: 0, scope: !10105, inlinedAt: !10357)
!10357 = distinct !DILocation(line: 636, column: 3, scope: !10349)
!10358 = !DILocation(line: 380, column: 4, scope: !10105, inlinedAt: !10357)
!10359 = !DILocation(line: 0, scope: !10113, inlinedAt: !10360)
!10360 = distinct !DILocation(line: 636, column: 3, scope: !10349)
!10361 = !DILocation(line: 414, column: 7, scope: !10113, inlinedAt: !10360)
!10362 = !DILocation(line: 0, scope: !10105, inlinedAt: !10363)
!10363 = distinct !DILocation(line: 636, column: 3, scope: !10349)
!10364 = !DILocation(line: 0, scope: !10113, inlinedAt: !10365)
!10365 = distinct !DILocation(line: 636, column: 3, scope: !10349)
!10366 = !DILocation(line: 638, column: 1, scope: !10349)
!10367 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10160, file: !10160, line: 274, type: !10286, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10368)
!10368 = !{!10369, !10370, !10371}
!10369 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10367, file: !10160, line: 274, type: !1281)
!10370 = !DILocalVariable(name: "Pin", arg: 2, scope: !10367, file: !10160, line: 274, type: !132)
!10371 = !DILocalVariable(name: "Mode", arg: 3, scope: !10367, file: !10160, line: 274, type: !132)
!10372 = !DILocation(line: 0, scope: !10367)
!10373 = !DILocation(line: 276, column: 3, scope: !10367)
!10374 = !DILocation(line: 0, scope: !10105, inlinedAt: !10375)
!10375 = distinct !DILocation(line: 276, column: 3, scope: !10367)
!10376 = !DILocation(line: 380, column: 4, scope: !10105, inlinedAt: !10375)
!10377 = !DILocation(line: 0, scope: !10113, inlinedAt: !10378)
!10378 = distinct !DILocation(line: 276, column: 3, scope: !10367)
!10379 = !DILocation(line: 414, column: 7, scope: !10113, inlinedAt: !10378)
!10380 = !DILocation(line: 0, scope: !10105, inlinedAt: !10381)
!10381 = distinct !DILocation(line: 276, column: 3, scope: !10367)
!10382 = !DILocation(line: 0, scope: !10113, inlinedAt: !10383)
!10383 = distinct !DILocation(line: 276, column: 3, scope: !10367)
!10384 = !DILocation(line: 277, column: 1, scope: !10367)
!10385 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1346, file: !1346, line: 698, type: !1359, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10386)
!10386 = !{!10387, !10388, !10389}
!10387 = !DILocalVariable(name: "dev", arg: 1, scope: !10385, file: !1346, line: 698, type: !1214)
!10388 = !DILocalVariable(name: "data", scope: !10385, file: !1346, line: 700, type: !9828)
!10389 = !DILocalVariable(name: "ret", scope: !10385, file: !1346, line: 701, type: !103)
!10390 = !DILocation(line: 0, scope: !10385)
!10391 = !DILocation(line: 700, column: 38, scope: !10385)
!10392 = !DILocation(line: 703, column: 8, scope: !10385)
!10393 = !DILocation(line: 703, column: 12, scope: !10385)
!10394 = !DILocation(line: 705, column: 7, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10385, file: !1346, line: 705, column: 6)
!10396 = !DILocation(line: 705, column: 6, scope: !10385)
!10397 = !DILocation(line: 722, column: 8, scope: !10385)
!10398 = !DILocation(line: 723, column: 10, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10385, file: !1346, line: 723, column: 6)
!10400 = !DILocation(line: 723, column: 6, scope: !10385)
!10401 = !DILocation(line: 731, column: 1, scope: !10385)
!10402 = distinct !DISubprogram(name: "device_is_ready", scope: !6658, file: !6658, line: 47, type: !10403, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10405)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{!179, !1214}
!10405 = !{!10406}
!10406 = !DILocalVariable(name: "dev", arg: 1, scope: !10402, file: !6658, line: 47, type: !1214)
!10407 = !DILocation(line: 0, scope: !10402)
!10408 = !DILocation(line: 55, column: 2, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10402, file: !6658, line: 55, column: 2)
!10410 = !{i64 2152400431}
!10411 = !DILocation(line: 56, column: 9, scope: !10402)
!10412 = !DILocation(line: 56, column: 2, scope: !10402)
!10413 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1346, file: !1346, line: 270, type: !10414, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10416)
!10414 = !DISubroutineType(types: !10415)
!10415 = !{!103, !1214, !179}
!10416 = !{!10417, !10418, !10419, !10420, !10421}
!10417 = !DILocalVariable(name: "dev", arg: 1, scope: !10413, file: !1346, line: 270, type: !1214)
!10418 = !DILocalVariable(name: "on", arg: 2, scope: !10413, file: !1346, line: 270, type: !179)
!10419 = !DILocalVariable(name: "cfg", scope: !10413, file: !1346, line: 272, type: !9761)
!10420 = !DILocalVariable(name: "ret", scope: !10413, file: !1346, line: 273, type: !103)
!10421 = !DILocalVariable(name: "clk", scope: !10413, file: !1346, line: 278, type: !10051)
!10422 = !DILocation(line: 0, scope: !10413)
!10423 = !DILocation(line: 272, column: 45, scope: !10413)
!10424 = !DILocation(line: 282, column: 38, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10426, file: !1346, line: 280, column: 10)
!10426 = distinct !DILexicalBlock(scope: !10413, file: !1346, line: 280, column: 6)
!10427 = !DILocation(line: 282, column: 6, scope: !10425)
!10428 = !DILocation(line: 281, column: 9, scope: !10425)
!10429 = !DILocation(line: 293, column: 1, scope: !10413)
!10430 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !165, file: !165, line: 730, type: !10403, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10431)
!10431 = !{!10432}
!10432 = !DILocalVariable(name: "dev", arg: 1, scope: !10430, file: !165, line: 730, type: !1214)
!10433 = !DILocation(line: 0, scope: !10430)
!10434 = !DILocation(line: 732, column: 9, scope: !10430)
!10435 = !DILocation(line: 732, column: 2, scope: !10430)
!10436 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1346, file: !1346, line: 496, type: !10437, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10439)
!10437 = !DISubroutineType(types: !10438)
!10438 = !{!103, !1214, !103, !103, !103}
!10439 = !{!10440, !10441, !10442, !10443, !10444, !10445}
!10440 = !DILocalVariable(name: "dev", arg: 1, scope: !10436, file: !1346, line: 496, type: !1214)
!10441 = !DILocalVariable(name: "pin", arg: 2, scope: !10436, file: !1346, line: 496, type: !103)
!10442 = !DILocalVariable(name: "conf", arg: 3, scope: !10436, file: !1346, line: 496, type: !103)
!10443 = !DILocalVariable(name: "func", arg: 4, scope: !10436, file: !1346, line: 496, type: !103)
!10444 = !DILocalVariable(name: "ret", scope: !10436, file: !1346, line: 498, type: !103)
!10445 = !DILocalVariable(name: "gpio_out", scope: !10446, file: !1346, line: 508, type: !132)
!10446 = distinct !DILexicalBlock(scope: !10447, file: !1346, line: 507, column: 27)
!10447 = distinct !DILexicalBlock(scope: !10436, file: !1346, line: 507, column: 6)
!10448 = !DILocation(line: 0, scope: !10436)
!10449 = !DILocation(line: 505, column: 2, scope: !10436)
!10450 = !DILocation(line: 507, column: 11, scope: !10447)
!10451 = !DILocation(line: 507, column: 6, scope: !10436)
!10452 = !DILocation(line: 508, column: 28, scope: !10446)
!10453 = !DILocation(line: 0, scope: !10446)
!10454 = !DILocation(line: 510, column: 16, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10446, file: !1346, line: 510, column: 7)
!10456 = !DILocation(line: 0, scope: !10455)
!10457 = !DILocation(line: 510, column: 7, scope: !10446)
!10458 = !DILocation(line: 511, column: 4, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10455, file: !1346, line: 510, column: 32)
!10460 = !DILocation(line: 512, column: 3, scope: !10459)
!10461 = !DILocation(line: 513, column: 4, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !1346, line: 512, column: 39)
!10463 = distinct !DILexicalBlock(scope: !10455, file: !1346, line: 512, column: 14)
!10464 = !DILocation(line: 514, column: 3, scope: !10462)
!10465 = !DILocation(line: 518, column: 1, scope: !10436)
!10466 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1633, file: !1633, line: 526, type: !1507, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10467)
!10467 = !{!10468, !10469, !10470}
!10468 = !DILocalVariable(name: "dev", arg: 1, scope: !10466, file: !1633, line: 526, type: !1509)
!10469 = !DILocalVariable(name: "c", arg: 2, scope: !10466, file: !1633, line: 526, type: !246)
!10470 = !DILocalVariable(name: "config", scope: !10466, file: !1633, line: 528, type: !10471)
!10471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!10472 = !DILocation(line: 0, scope: !10466)
!10473 = !DILocation(line: 528, column: 48, scope: !10466)
!10474 = !DILocation(line: 531, column: 40, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10466, file: !1633, line: 531, column: 6)
!10476 = !DILocation(line: 531, column: 6, scope: !10475)
!10477 = !DILocation(line: 531, column: 6, scope: !10466)
!10478 = !DILocation(line: 532, column: 34, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10475, file: !1633, line: 531, column: 48)
!10480 = !DILocation(line: 532, column: 3, scope: !10479)
!10481 = !DILocation(line: 533, column: 2, scope: !10479)
!10482 = !DILocation(line: 539, column: 42, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10466, file: !1633, line: 539, column: 6)
!10484 = !DILocation(line: 539, column: 7, scope: !10483)
!10485 = !DILocation(line: 539, column: 6, scope: !10466)
!10486 = !DILocation(line: 543, column: 52, scope: !10466)
!10487 = !DILocation(line: 543, column: 22, scope: !10466)
!10488 = !DILocation(line: 543, column: 5, scope: !10466)
!10489 = !DILocation(line: 545, column: 2, scope: !10466)
!10490 = !DILocation(line: 546, column: 1, scope: !10466)
!10491 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1633, file: !1633, line: 548, type: !1526, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10492)
!10492 = !{!10493, !10494, !10495, !10496}
!10493 = !DILocalVariable(name: "dev", arg: 1, scope: !10491, file: !1633, line: 548, type: !1509)
!10494 = !DILocalVariable(name: "c", arg: 2, scope: !10491, file: !1633, line: 549, type: !177)
!10495 = !DILocalVariable(name: "config", scope: !10491, file: !1633, line: 551, type: !10471)
!10496 = !DILocalVariable(name: "key", scope: !10491, file: !1633, line: 555, type: !32)
!10497 = !DILocation(line: 0, scope: !10491)
!10498 = !DILocation(line: 551, column: 48, scope: !10491)
!10499 = !DILocation(line: 562, column: 2, scope: !10491)
!10500 = !DILocation(line: 563, column: 41, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10502, file: !1633, line: 563, column: 7)
!10502 = distinct !DILexicalBlock(scope: !10491, file: !1633, line: 562, column: 12)
!10503 = !DILocation(line: 563, column: 7, scope: !10501)
!10504 = !DILocation(line: 563, column: 7, scope: !10502)
!10505 = !DILocation(line: 55, column: 2, scope: !10506, inlinedAt: !10510)
!10506 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10507)
!10507 = !{!10508, !10509}
!10508 = !DILocalVariable(name: "key", scope: !10506, file: !5780, line: 44, type: !32)
!10509 = !DILocalVariable(name: "tmp", scope: !10506, file: !5780, line: 53, type: !32)
!10510 = distinct !DILocation(line: 564, column: 10, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10501, file: !1633, line: 563, column: 49)
!10512 = !{i64 1698120}
!10513 = !DILocation(line: 0, scope: !10506, inlinedAt: !10510)
!10514 = !DILocation(line: 565, column: 42, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10511, file: !1633, line: 565, column: 8)
!10516 = !DILocation(line: 565, column: 8, scope: !10515)
!10517 = !DILocation(line: 565, column: 8, scope: !10511)
!10518 = !DILocalVariable(name: "key", arg: 1, scope: !10519, file: !5780, line: 84, type: !32)
!10519 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10520)
!10520 = !{!10518}
!10521 = !DILocation(line: 0, scope: !10519, inlinedAt: !10522)
!10522 = distinct !DILocation(line: 568, column: 4, scope: !10511)
!10523 = !DILocation(line: 95, column: 2, scope: !10519, inlinedAt: !10522)
!10524 = !{i64 1698937}
!10525 = !DILocation(line: 569, column: 3, scope: !10511)
!10526 = distinct !{!10526, !10499, !10527}
!10527 = !DILocation(line: 570, column: 2, scope: !10491)
!10528 = !DILocation(line: 592, column: 33, scope: !10491)
!10529 = !DILocation(line: 592, column: 2, scope: !10491)
!10530 = !DILocation(line: 0, scope: !10519, inlinedAt: !10531)
!10531 = distinct !DILocation(line: 593, column: 2, scope: !10491)
!10532 = !DILocation(line: 95, column: 2, scope: !10519, inlinedAt: !10531)
!10533 = !DILocation(line: 594, column: 1, scope: !10491)
!10534 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1633, file: !1633, line: 596, type: !1530, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10535)
!10535 = !{!10536, !10537, !10538}
!10536 = !DILocalVariable(name: "dev", arg: 1, scope: !10534, file: !1633, line: 596, type: !1509)
!10537 = !DILocalVariable(name: "config", scope: !10534, file: !1633, line: 598, type: !10471)
!10538 = !DILocalVariable(name: "err", scope: !10534, file: !1633, line: 599, type: !132)
!10539 = !DILocation(line: 0, scope: !10534)
!10540 = !DILocation(line: 598, column: 48, scope: !10534)
!10541 = !DILocation(line: 606, column: 40, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10534, file: !1633, line: 606, column: 6)
!10543 = !DILocation(line: 606, column: 6, scope: !10542)
!10544 = !DILocation(line: 606, column: 6, scope: !10534)
!10545 = !DILocation(line: 610, column: 39, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10534, file: !1633, line: 610, column: 6)
!10547 = !DILocation(line: 610, column: 6, scope: !10546)
!10548 = !DILocation(line: 610, column: 6, scope: !10534)
!10549 = !DILocation(line: 614, column: 39, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10534, file: !1633, line: 614, column: 6)
!10551 = !DILocation(line: 614, column: 6, scope: !10550)
!10552 = !DILocation(line: 614, column: 6, scope: !10534)
!10553 = !DILocation(line: 619, column: 40, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10534, file: !1633, line: 619, column: 6)
!10555 = !DILocation(line: 619, column: 6, scope: !10554)
!10556 = !DILocation(line: 619, column: 6, scope: !10534)
!10557 = !DILocation(line: 623, column: 10, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10534, file: !1633, line: 623, column: 6)
!10559 = !DILocation(line: 623, column: 6, scope: !10534)
!10560 = !DILocation(line: 624, column: 34, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10558, file: !1633, line: 623, column: 24)
!10562 = !DILocation(line: 624, column: 3, scope: !10561)
!10563 = !DILocation(line: 625, column: 2, scope: !10561)
!10564 = !DILocation(line: 632, column: 10, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10534, file: !1633, line: 632, column: 6)
!10566 = !DILocation(line: 632, column: 6, scope: !10534)
!10567 = !DILocation(line: 633, column: 34, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10565, file: !1633, line: 632, column: 32)
!10569 = !DILocation(line: 633, column: 3, scope: !10568)
!10570 = !DILocation(line: 634, column: 2, scope: !10568)
!10571 = !DILocation(line: 636, column: 10, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10534, file: !1633, line: 636, column: 6)
!10573 = !DILocation(line: 636, column: 6, scope: !10534)
!10574 = !DILocation(line: 637, column: 33, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10572, file: !1633, line: 636, column: 31)
!10576 = !DILocation(line: 637, column: 3, scope: !10575)
!10577 = !DILocation(line: 638, column: 2, scope: !10575)
!10578 = !DILocation(line: 640, column: 10, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10534, file: !1633, line: 640, column: 6)
!10580 = !DILocation(line: 640, column: 6, scope: !10534)
!10581 = !DILocation(line: 641, column: 33, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10579, file: !1633, line: 640, column: 32)
!10583 = !DILocation(line: 641, column: 3, scope: !10582)
!10584 = !DILocation(line: 642, column: 2, scope: !10582)
!10585 = !DILocation(line: 646, column: 32, scope: !10534)
!10586 = !DILocation(line: 646, column: 2, scope: !10534)
!10587 = !DILocation(line: 648, column: 2, scope: !10534)
!10588 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1633, file: !1633, line: 419, type: !1534, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10589)
!10589 = !{!10590, !10591, !10592, !10593, !10595, !10596, !10597, !10598}
!10590 = !DILocalVariable(name: "dev", arg: 1, scope: !10588, file: !1633, line: 419, type: !1509)
!10591 = !DILocalVariable(name: "cfg", arg: 2, scope: !10588, file: !1633, line: 420, type: !1536)
!10592 = !DILocalVariable(name: "config", scope: !10588, file: !1633, line: 422, type: !10471)
!10593 = !DILocalVariable(name: "data", scope: !10588, file: !1633, line: 423, type: !10594)
!10594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32)
!10595 = !DILocalVariable(name: "parity", scope: !10588, file: !1633, line: 424, type: !7060)
!10596 = !DILocalVariable(name: "stopbits", scope: !10588, file: !1633, line: 425, type: !7060)
!10597 = !DILocalVariable(name: "databits", scope: !10588, file: !1633, line: 426, type: !7060)
!10598 = !DILocalVariable(name: "flowctrl", scope: !10588, file: !1633, line: 428, type: !7060)
!10599 = !DILocation(line: 0, scope: !10588)
!10600 = !DILocation(line: 422, column: 48, scope: !10588)
!10601 = !DILocation(line: 423, column: 38, scope: !10588)
!10602 = !DILocation(line: 424, column: 56, scope: !10588)
!10603 = !DILocation(line: 424, column: 51, scope: !10588)
!10604 = !DILocation(line: 424, column: 26, scope: !10588)
!10605 = !DILocation(line: 425, column: 60, scope: !10588)
!10606 = !DILocation(line: 425, column: 55, scope: !10588)
!10607 = !DILocation(line: 425, column: 28, scope: !10588)
!10608 = !DILocation(line: 426, column: 60, scope: !10588)
!10609 = !DILocation(line: 426, column: 55, scope: !10588)
!10610 = !DILocation(line: 426, column: 28, scope: !10588)
!10611 = !DILocation(line: 428, column: 58, scope: !10588)
!10612 = !DILocation(line: 428, column: 53, scope: !10588)
!10613 = !DILocation(line: 428, column: 28, scope: !10588)
!10614 = !DILocation(line: 431, column: 44, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 431, column: 6)
!10616 = !DILocation(line: 438, column: 22, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 437, column: 6)
!10618 = !DILocation(line: 437, column: 6, scope: !10588)
!10619 = !DILocation(line: 448, column: 6, scope: !10588)
!10620 = !DILocation(line: 465, column: 47, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 465, column: 6)
!10622 = !DILocation(line: 475, column: 21, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 475, column: 6)
!10624 = !DILocation(line: 475, column: 6, scope: !10588)
!10625 = !DILocation(line: 476, column: 8, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !1633, line: 476, column: 7)
!10627 = distinct !DILexicalBlock(scope: !10623, file: !1633, line: 475, column: 49)
!10628 = !DILocation(line: 477, column: 34, scope: !10626)
!10629 = !DILocation(line: 476, column: 7, scope: !10627)
!10630 = !DILocation(line: 482, column: 27, scope: !10588)
!10631 = !DILocation(line: 482, column: 2, scope: !10588)
!10632 = !DILocation(line: 484, column: 16, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 484, column: 6)
!10634 = !DILocation(line: 484, column: 13, scope: !10633)
!10635 = !DILocation(line: 484, column: 6, scope: !10588)
!10636 = !DILocation(line: 485, column: 3, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10633, file: !1633, line: 484, column: 44)
!10638 = !DILocation(line: 486, column: 2, scope: !10637)
!10639 = !DILocation(line: 488, column: 18, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 488, column: 6)
!10641 = !DILocation(line: 488, column: 15, scope: !10640)
!10642 = !DILocation(line: 488, column: 6, scope: !10588)
!10643 = !DILocation(line: 489, column: 3, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10640, file: !1633, line: 488, column: 48)
!10645 = !DILocation(line: 490, column: 2, scope: !10644)
!10646 = !DILocation(line: 492, column: 18, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 492, column: 6)
!10648 = !DILocation(line: 492, column: 15, scope: !10647)
!10649 = !DILocation(line: 492, column: 6, scope: !10588)
!10650 = !DILocation(line: 493, column: 3, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10647, file: !1633, line: 492, column: 48)
!10652 = !DILocation(line: 494, column: 2, scope: !10651)
!10653 = !DILocation(line: 496, column: 18, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 496, column: 6)
!10655 = !DILocation(line: 496, column: 15, scope: !10654)
!10656 = !DILocation(line: 496, column: 6, scope: !10588)
!10657 = !DILocation(line: 497, column: 3, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10654, file: !1633, line: 496, column: 46)
!10659 = !DILocation(line: 498, column: 2, scope: !10658)
!10660 = !DILocation(line: 500, column: 11, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10588, file: !1633, line: 500, column: 6)
!10662 = !DILocation(line: 500, column: 29, scope: !10661)
!10663 = !DILocation(line: 500, column: 20, scope: !10661)
!10664 = !DILocation(line: 500, column: 6, scope: !10588)
!10665 = !DILocation(line: 501, column: 3, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10661, file: !1633, line: 500, column: 40)
!10667 = !DILocation(line: 502, column: 26, scope: !10666)
!10668 = !DILocation(line: 502, column: 19, scope: !10666)
!10669 = !DILocation(line: 503, column: 2, scope: !10666)
!10670 = !DILocation(line: 505, column: 26, scope: !10588)
!10671 = !DILocation(line: 505, column: 2, scope: !10588)
!10672 = !DILocation(line: 506, column: 2, scope: !10588)
!10673 = !DILocation(line: 507, column: 1, scope: !10588)
!10674 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1633, file: !1633, line: 509, type: !1547, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10675)
!10675 = !{!10676, !10677, !10678}
!10676 = !DILocalVariable(name: "dev", arg: 1, scope: !10674, file: !1633, line: 509, type: !1509)
!10677 = !DILocalVariable(name: "cfg", arg: 2, scope: !10674, file: !1633, line: 510, type: !1549)
!10678 = !DILocalVariable(name: "data", scope: !10674, file: !1633, line: 512, type: !10594)
!10679 = !DILocation(line: 0, scope: !10674)
!10680 = !DILocation(line: 512, column: 38, scope: !10674)
!10681 = !DILocation(line: 514, column: 24, scope: !10674)
!10682 = !DILocation(line: 514, column: 7, scope: !10674)
!10683 = !DILocation(line: 514, column: 16, scope: !10674)
!10684 = !DILocation(line: 515, column: 41, scope: !10674)
!10685 = !{i32 0, i32 1537}
!10686 = !DILocation(line: 515, column: 16, scope: !10674)
!10687 = !DILocation(line: 515, column: 7, scope: !10674)
!10688 = !DILocation(line: 515, column: 14, scope: !10674)
!10689 = !DILocation(line: 517, column: 3, scope: !10674)
!10690 = !{i32 0, i32 12289}
!10691 = !DILocation(line: 516, column: 19, scope: !10674)
!10692 = !DILocation(line: 516, column: 7, scope: !10674)
!10693 = !DILocation(line: 516, column: 17, scope: !10674)
!10694 = !DILocation(line: 519, column: 3, scope: !10674)
!10695 = !DILocation(line: 519, column: 33, scope: !10674)
!10696 = !DILocation(line: 518, column: 19, scope: !10674)
!10697 = !DILocation(line: 518, column: 7, scope: !10674)
!10698 = !DILocation(line: 518, column: 17, scope: !10674)
!10699 = !DILocation(line: 521, column: 3, scope: !10674)
!10700 = !{i32 0, i32 769}
!10701 = !DILocation(line: 520, column: 19, scope: !10674)
!10702 = !DILocation(line: 520, column: 7, scope: !10674)
!10703 = !DILocation(line: 520, column: 17, scope: !10674)
!10704 = !DILocation(line: 522, column: 2, scope: !10674)
!10705 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1633, file: !1633, line: 661, type: !1552, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10706)
!10706 = !{!10707, !10708, !10709, !10710, !10711, !10712}
!10707 = !DILocalVariable(name: "dev", arg: 1, scope: !10705, file: !1633, line: 661, type: !1509)
!10708 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10705, file: !1633, line: 662, type: !277)
!10709 = !DILocalVariable(name: "size", arg: 3, scope: !10705, file: !1633, line: 663, type: !103)
!10710 = !DILocalVariable(name: "config", scope: !10705, file: !1633, line: 665, type: !10471)
!10711 = !DILocalVariable(name: "num_tx", scope: !10705, file: !1633, line: 666, type: !176)
!10712 = !DILocalVariable(name: "key", scope: !10705, file: !1633, line: 667, type: !32)
!10713 = !DILocation(line: 0, scope: !10705)
!10714 = !DILocation(line: 665, column: 48, scope: !10705)
!10715 = !DILocation(line: 669, column: 41, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10705, file: !1633, line: 669, column: 6)
!10717 = !DILocation(line: 669, column: 7, scope: !10716)
!10718 = !DILocation(line: 669, column: 6, scope: !10705)
!10719 = !DILocation(line: 55, column: 2, scope: !10506, inlinedAt: !10720)
!10720 = distinct !DILocation(line: 674, column: 8, scope: !10705)
!10721 = !DILocation(line: 0, scope: !10506, inlinedAt: !10720)
!10722 = !DILocation(line: 676, column: 24, scope: !10705)
!10723 = !DILocation(line: 676, column: 29, scope: !10705)
!10724 = !DILocation(line: 677, column: 43, scope: !10705)
!10725 = !DILocation(line: 677, column: 9, scope: !10705)
!10726 = !DILocation(line: 676, column: 2, scope: !10705)
!10727 = !DILocation(line: 681, column: 34, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10705, file: !1633, line: 677, column: 51)
!10729 = !DILocation(line: 681, column: 55, scope: !10728)
!10730 = !DILocation(line: 681, column: 41, scope: !10728)
!10731 = !DILocation(line: 681, column: 3, scope: !10728)
!10732 = !DILocation(line: 676, column: 17, scope: !10705)
!10733 = distinct !{!10733, !10726, !10734}
!10734 = !DILocation(line: 682, column: 2, scope: !10705)
!10735 = !DILocation(line: 0, scope: !10519, inlinedAt: !10736)
!10736 = distinct !DILocation(line: 684, column: 2, scope: !10705)
!10737 = !DILocation(line: 95, column: 2, scope: !10519, inlinedAt: !10736)
!10738 = !DILocation(line: 686, column: 2, scope: !10705)
!10739 = !DILocation(line: 687, column: 1, scope: !10705)
!10740 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1633, file: !1633, line: 689, type: !1556, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10741)
!10741 = !{!10742, !10743, !10744, !10745, !10746}
!10742 = !DILocalVariable(name: "dev", arg: 1, scope: !10740, file: !1633, line: 689, type: !1509)
!10743 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10740, file: !1633, line: 689, type: !283)
!10744 = !DILocalVariable(name: "size", arg: 3, scope: !10740, file: !1633, line: 690, type: !284)
!10745 = !DILocalVariable(name: "config", scope: !10740, file: !1633, line: 692, type: !10471)
!10746 = !DILocalVariable(name: "num_rx", scope: !10740, file: !1633, line: 693, type: !176)
!10747 = !DILocation(line: 0, scope: !10740)
!10748 = !DILocation(line: 692, column: 48, scope: !10740)
!10749 = !DILocation(line: 696, column: 44, scope: !10740)
!10750 = !DILocation(line: 695, column: 24, scope: !10740)
!10751 = !DILocation(line: 695, column: 29, scope: !10740)
!10752 = !DILocation(line: 696, column: 9, scope: !10740)
!10753 = !DILocation(line: 695, column: 2, scope: !10740)
!10754 = !DILocation(line: 700, column: 53, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10740, file: !1633, line: 696, column: 52)
!10756 = !DILocation(line: 700, column: 23, scope: !10755)
!10757 = !DILocation(line: 700, column: 17, scope: !10755)
!10758 = !DILocation(line: 700, column: 3, scope: !10755)
!10759 = !DILocation(line: 700, column: 21, scope: !10755)
!10760 = !DILocation(line: 703, column: 41, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10755, file: !1633, line: 703, column: 7)
!10762 = !DILocation(line: 703, column: 7, scope: !10761)
!10763 = !DILocation(line: 703, column: 7, scope: !10755)
!10764 = !DILocation(line: 704, column: 35, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10761, file: !1633, line: 703, column: 49)
!10766 = !DILocation(line: 704, column: 4, scope: !10765)
!10767 = !DILocation(line: 709, column: 3, scope: !10765)
!10768 = !DILocation(line: 695, column: 17, scope: !10740)
!10769 = distinct !{!10769, !10753, !10770}
!10770 = !DILocation(line: 710, column: 2, scope: !10740)
!10771 = !DILocation(line: 712, column: 2, scope: !10740)
!10772 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1633, file: !1633, line: 715, type: !1560, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10773)
!10773 = !{!10774, !10775}
!10774 = !DILocalVariable(name: "dev", arg: 1, scope: !10772, file: !1633, line: 715, type: !1509)
!10775 = !DILocalVariable(name: "config", scope: !10772, file: !1633, line: 717, type: !10471)
!10776 = !DILocation(line: 0, scope: !10772)
!10777 = !DILocation(line: 717, column: 48, scope: !10772)
!10778 = !DILocation(line: 729, column: 31, scope: !10772)
!10779 = !DILocation(line: 729, column: 2, scope: !10772)
!10780 = !DILocation(line: 734, column: 1, scope: !10772)
!10781 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1633, file: !1633, line: 736, type: !1560, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10782)
!10782 = !{!10783, !10784}
!10783 = !DILocalVariable(name: "dev", arg: 1, scope: !10781, file: !1633, line: 736, type: !1509)
!10784 = !DILocalVariable(name: "config", scope: !10781, file: !1633, line: 738, type: !10471)
!10785 = !DILocation(line: 0, scope: !10781)
!10786 = !DILocation(line: 738, column: 48, scope: !10781)
!10787 = !DILocation(line: 746, column: 32, scope: !10781)
!10788 = !DILocation(line: 746, column: 2, scope: !10781)
!10789 = !DILocation(line: 756, column: 1, scope: !10781)
!10790 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1633, file: !1633, line: 758, type: !1530, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10791)
!10791 = !{!10792, !10793}
!10792 = !DILocalVariable(name: "dev", arg: 1, scope: !10790, file: !1633, line: 758, type: !1509)
!10793 = !DILocalVariable(name: "config", scope: !10790, file: !1633, line: 760, type: !10471)
!10794 = !DILocation(line: 0, scope: !10790)
!10795 = !DILocation(line: 760, column: 48, scope: !10790)
!10796 = !DILocation(line: 762, column: 43, scope: !10790)
!10797 = !DILocation(line: 762, column: 9, scope: !10790)
!10798 = !DILocation(line: 762, column: 50, scope: !10790)
!10799 = !DILocation(line: 763, column: 35, scope: !10790)
!10800 = !DILocation(line: 763, column: 3, scope: !10790)
!10801 = !DILocation(line: 762, column: 2, scope: !10790)
!10802 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1633, file: !1633, line: 773, type: !1560, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10803)
!10803 = !{!10804, !10805}
!10804 = !DILocalVariable(name: "dev", arg: 1, scope: !10802, file: !1633, line: 773, type: !1509)
!10805 = !DILocalVariable(name: "config", scope: !10802, file: !1633, line: 775, type: !10471)
!10806 = !DILocation(line: 0, scope: !10802)
!10807 = !DILocation(line: 775, column: 48, scope: !10802)
!10808 = !DILocation(line: 777, column: 33, scope: !10802)
!10809 = !DILocation(line: 777, column: 2, scope: !10802)
!10810 = !DILocation(line: 778, column: 1, scope: !10802)
!10811 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1633, file: !1633, line: 780, type: !1560, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10812)
!10812 = !{!10813, !10814}
!10813 = !DILocalVariable(name: "dev", arg: 1, scope: !10811, file: !1633, line: 780, type: !1509)
!10814 = !DILocalVariable(name: "config", scope: !10811, file: !1633, line: 782, type: !10471)
!10815 = !DILocation(line: 0, scope: !10811)
!10816 = !DILocation(line: 782, column: 48, scope: !10811)
!10817 = !DILocation(line: 784, column: 34, scope: !10811)
!10818 = !DILocation(line: 784, column: 2, scope: !10811)
!10819 = !DILocation(line: 785, column: 1, scope: !10811)
!10820 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1633, file: !1633, line: 766, type: !1530, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10821)
!10821 = !{!10822, !10823}
!10822 = !DILocalVariable(name: "dev", arg: 1, scope: !10820, file: !1633, line: 766, type: !1509)
!10823 = !DILocalVariable(name: "config", scope: !10820, file: !1633, line: 768, type: !10471)
!10824 = !DILocation(line: 0, scope: !10820)
!10825 = !DILocation(line: 768, column: 48, scope: !10820)
!10826 = !DILocation(line: 770, column: 42, scope: !10820)
!10827 = !DILocation(line: 770, column: 9, scope: !10820)
!10828 = !DILocation(line: 770, column: 2, scope: !10820)
!10829 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1633, file: !1633, line: 787, type: !1530, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10830)
!10830 = !{!10831, !10832}
!10831 = !DILocalVariable(name: "dev", arg: 1, scope: !10829, file: !1633, line: 787, type: !1509)
!10832 = !DILocalVariable(name: "config", scope: !10829, file: !1633, line: 789, type: !10471)
!10833 = !DILocation(line: 0, scope: !10829)
!10834 = !DILocation(line: 789, column: 48, scope: !10829)
!10835 = !DILocation(line: 794, column: 44, scope: !10829)
!10836 = !DILocation(line: 794, column: 9, scope: !10829)
!10837 = !DILocation(line: 794, column: 2, scope: !10829)
!10838 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1633, file: !1633, line: 797, type: !1560, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10839)
!10839 = !{!10840, !10841}
!10840 = !DILocalVariable(name: "dev", arg: 1, scope: !10838, file: !1633, line: 797, type: !1509)
!10841 = !DILocalVariable(name: "config", scope: !10838, file: !1633, line: 799, type: !10471)
!10842 = !DILocation(line: 0, scope: !10838)
!10843 = !DILocation(line: 799, column: 48, scope: !10838)
!10844 = !DILocation(line: 802, column: 34, scope: !10838)
!10845 = !DILocation(line: 802, column: 2, scope: !10838)
!10846 = !DILocation(line: 805, column: 6, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10838, file: !1633, line: 805, column: 6)
!10848 = !DILocation(line: 806, column: 3, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10847, file: !1633, line: 805, column: 43)
!10850 = !DILocation(line: 810, column: 31, scope: !10838)
!10851 = !DILocation(line: 807, column: 2, scope: !10849)
!10852 = !DILocation(line: 810, column: 2, scope: !10838)
!10853 = !DILocation(line: 811, column: 1, scope: !10838)
!10854 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1633, file: !1633, line: 813, type: !1560, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10855)
!10855 = !{!10856, !10857}
!10856 = !DILocalVariable(name: "dev", arg: 1, scope: !10854, file: !1633, line: 813, type: !1509)
!10857 = !DILocalVariable(name: "config", scope: !10854, file: !1633, line: 815, type: !10471)
!10858 = !DILocation(line: 0, scope: !10854)
!10859 = !DILocation(line: 815, column: 48, scope: !10854)
!10860 = !DILocation(line: 818, column: 35, scope: !10854)
!10861 = !DILocation(line: 818, column: 2, scope: !10854)
!10862 = !DILocation(line: 821, column: 6, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10854, file: !1633, line: 821, column: 6)
!10864 = !DILocation(line: 822, column: 3, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10863, file: !1633, line: 821, column: 43)
!10866 = !DILocation(line: 826, column: 32, scope: !10854)
!10867 = !DILocation(line: 823, column: 2, scope: !10865)
!10868 = !DILocation(line: 826, column: 2, scope: !10854)
!10869 = !DILocation(line: 827, column: 1, scope: !10854)
!10870 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1633, file: !1633, line: 829, type: !1530, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10871)
!10871 = !{!10872, !10873}
!10872 = !DILocalVariable(name: "dev", arg: 1, scope: !10870, file: !1633, line: 829, type: !1509)
!10873 = !DILocalVariable(name: "config", scope: !10870, file: !1633, line: 831, type: !10471)
!10874 = !DILocation(line: 0, scope: !10870)
!10875 = !DILocation(line: 831, column: 48, scope: !10870)
!10876 = !DILocation(line: 833, column: 46, scope: !10870)
!10877 = !DILocation(line: 833, column: 11, scope: !10870)
!10878 = !DILocation(line: 833, column: 53, scope: !10870)
!10879 = !DILocation(line: 834, column: 38, scope: !10870)
!10880 = !DILocation(line: 834, column: 4, scope: !10870)
!10881 = !DILocation(line: 834, column: 46, scope: !10870)
!10882 = !DILocation(line: 835, column: 37, scope: !10870)
!10883 = !DILocation(line: 835, column: 4, scope: !10870)
!10884 = !DILocation(line: 835, column: 44, scope: !10870)
!10885 = !DILocation(line: 836, column: 36, scope: !10870)
!10886 = !DILocation(line: 836, column: 4, scope: !10870)
!10887 = !DILocation(line: 833, column: 2, scope: !10870)
!10888 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1633, file: !1633, line: 839, type: !1530, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10889)
!10889 = !{!10890}
!10890 = !DILocalVariable(name: "dev", arg: 1, scope: !10888, file: !1633, line: 839, type: !1509)
!10891 = !DILocation(line: 0, scope: !10888)
!10892 = !DILocation(line: 841, column: 2, scope: !10888)
!10893 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1633, file: !1633, line: 844, type: !1574, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10894)
!10894 = !{!10895, !10896, !10897, !10898}
!10895 = !DILocalVariable(name: "dev", arg: 1, scope: !10893, file: !1633, line: 844, type: !1509)
!10896 = !DILocalVariable(name: "cb", arg: 2, scope: !10893, file: !1633, line: 845, type: !1576)
!10897 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10893, file: !1633, line: 846, type: !102)
!10898 = !DILocalVariable(name: "data", scope: !10893, file: !1633, line: 848, type: !10594)
!10899 = !DILocation(line: 0, scope: !10893)
!10900 = !DILocation(line: 848, column: 38, scope: !10893)
!10901 = !DILocation(line: 850, column: 8, scope: !10893)
!10902 = !DILocation(line: 850, column: 16, scope: !10893)
!10903 = !DILocation(line: 851, column: 8, scope: !10893)
!10904 = !DILocation(line: 851, column: 18, scope: !10893)
!10905 = !DILocation(line: 852, column: 1, scope: !10893)
!10906 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10907, file: !10907, line: 1791, type: !10908, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10910)
!10907 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10908 = !DISubroutineType(types: !10909)
!10909 = !{!132, !1580}
!10910 = !{!10911}
!10911 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10906, file: !10907, line: 1791, type: !1580)
!10912 = !DILocation(line: 0, scope: !10906)
!10913 = !DILocation(line: 1793, column: 11, scope: !10906)
!10914 = !DILocation(line: 1793, column: 47, scope: !10906)
!10915 = !DILocation(line: 1793, column: 3, scope: !10906)
!10916 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10907, file: !10907, line: 2226, type: !10908, scopeLine: 2227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10917)
!10917 = !{!10918}
!10918 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10916, file: !10907, line: 2226, type: !1580)
!10919 = !DILocation(line: 0, scope: !10916)
!10920 = !DILocation(line: 2228, column: 11, scope: !10916)
!10921 = !DILocation(line: 2228, column: 51, scope: !10916)
!10922 = !DILocation(line: 2228, column: 3, scope: !10916)
!10923 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10907, file: !10907, line: 1802, type: !10908, scopeLine: 1803, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10924)
!10924 = !{!10925}
!10925 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10923, file: !10907, line: 1802, type: !1580)
!10926 = !DILocation(line: 0, scope: !10923)
!10927 = !DILocation(line: 1804, column: 11, scope: !10923)
!10928 = !DILocation(line: 1804, column: 45, scope: !10923)
!10929 = !DILocation(line: 1804, column: 3, scope: !10923)
!10930 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10907, file: !10907, line: 2237, type: !10908, scopeLine: 2238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10931)
!10931 = !{!10932}
!10932 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10930, file: !10907, line: 2237, type: !1580)
!10933 = !DILocation(line: 0, scope: !10930)
!10934 = !DILocation(line: 2239, column: 11, scope: !10930)
!10935 = !DILocation(line: 2239, column: 49, scope: !10930)
!10936 = !DILocation(line: 2239, column: 3, scope: !10930)
!10937 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10907, file: !10907, line: 2191, type: !10938, scopeLine: 2192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10940)
!10938 = !DISubroutineType(types: !10939)
!10939 = !{null, !1580}
!10940 = !{!10941}
!10941 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10937, file: !10907, line: 2191, type: !1580)
!10942 = !DILocation(line: 0, scope: !10937)
!10943 = !DILocation(line: 2193, column: 3, scope: !10937)
!10944 = !DILocation(line: 2194, column: 1, scope: !10937)
!10945 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10907, file: !10907, line: 2176, type: !10938, scopeLine: 2177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10946)
!10946 = !{!10947}
!10947 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10945, file: !10907, line: 2176, type: !1580)
!10948 = !DILocation(line: 0, scope: !10945)
!10949 = !DILocation(line: 2178, column: 3, scope: !10945)
!10950 = !DILocation(line: 2179, column: 1, scope: !10945)
!10951 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10907, file: !10907, line: 2163, type: !10938, scopeLine: 2164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10952)
!10952 = !{!10953}
!10953 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10951, file: !10907, line: 2163, type: !1580)
!10954 = !DILocation(line: 0, scope: !10951)
!10955 = !DILocation(line: 2165, column: 3, scope: !10951)
!10956 = !DILocation(line: 2166, column: 1, scope: !10951)
!10957 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10907, file: !10907, line: 2095, type: !10938, scopeLine: 2096, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10958)
!10958 = !{!10959}
!10959 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10957, file: !10907, line: 2095, type: !1580)
!10960 = !DILocation(line: 0, scope: !10957)
!10961 = !DILocation(line: 2097, column: 3, scope: !10957)
!10962 = !DILocation(line: 2098, column: 1, scope: !10957)
!10963 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10907, file: !10907, line: 2080, type: !10938, scopeLine: 2081, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10964)
!10964 = !{!10965}
!10965 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10963, file: !10907, line: 2080, type: !1580)
!10966 = !DILocation(line: 0, scope: !10963)
!10967 = !DILocation(line: 2082, column: 3, scope: !10963)
!10968 = !DILocation(line: 2083, column: 1, scope: !10963)
!10969 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10907, file: !10907, line: 2067, type: !10938, scopeLine: 2068, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10970)
!10970 = !{!10971}
!10971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10969, file: !10907, line: 2067, type: !1580)
!10972 = !DILocation(line: 0, scope: !10969)
!10973 = !DILocation(line: 2069, column: 3, scope: !10969)
!10974 = !DILocation(line: 2070, column: 1, scope: !10969)
!10975 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10907, file: !10907, line: 2130, type: !10938, scopeLine: 2131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10976)
!10976 = !{!10977}
!10977 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10975, file: !10907, line: 2130, type: !1580)
!10978 = !DILocation(line: 0, scope: !10975)
!10979 = !DILocation(line: 2132, column: 3, scope: !10975)
!10980 = !DILocation(line: 2133, column: 1, scope: !10975)
!10981 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10907, file: !10907, line: 2034, type: !10938, scopeLine: 2035, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10982)
!10982 = !{!10983}
!10983 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10981, file: !10907, line: 2034, type: !1580)
!10984 = !DILocation(line: 0, scope: !10981)
!10985 = !DILocation(line: 2036, column: 3, scope: !10981)
!10986 = !DILocation(line: 2037, column: 1, scope: !10981)
!10987 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10907, file: !10907, line: 1813, type: !10908, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10988)
!10988 = !{!10989}
!10989 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10987, file: !10907, line: 1813, type: !1580)
!10990 = !DILocation(line: 0, scope: !10987)
!10991 = !DILocation(line: 1815, column: 11, scope: !10987)
!10992 = !DILocation(line: 1815, column: 46, scope: !10987)
!10993 = !DILocation(line: 1815, column: 3, scope: !10987)
!10994 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10907, file: !10907, line: 2141, type: !10938, scopeLine: 2142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !10995)
!10995 = !{!10996}
!10996 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10994, file: !10907, line: 2141, type: !1580)
!10997 = !DILocation(line: 0, scope: !10994)
!10998 = !DILocation(line: 2143, column: 3, scope: !10994)
!10999 = !DILocation(line: 2144, column: 1, scope: !10994)
!11000 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10907, file: !10907, line: 2045, type: !10938, scopeLine: 2046, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11001)
!11001 = !{!11002}
!11002 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11000, file: !10907, line: 2045, type: !1580)
!11003 = !DILocation(line: 0, scope: !11000)
!11004 = !DILocation(line: 2047, column: 3, scope: !11000)
!11005 = !DILocation(line: 2048, column: 1, scope: !11000)
!11006 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10907, file: !10907, line: 2402, type: !11007, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11009)
!11007 = !DISubroutineType(types: !11008)
!11008 = !{!176, !1580}
!11009 = !{!11010}
!11010 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11006, file: !10907, line: 2402, type: !1580)
!11011 = !DILocation(line: 0, scope: !11006)
!11012 = !DILocation(line: 2404, column: 20, scope: !11006)
!11013 = !DILocation(line: 2404, column: 10, scope: !11006)
!11014 = !DILocation(line: 2404, column: 3, scope: !11006)
!11015 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10907, file: !10907, line: 1769, type: !10908, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11016)
!11016 = !{!11017}
!11017 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11015, file: !10907, line: 1769, type: !1580)
!11018 = !DILocation(line: 0, scope: !11015)
!11019 = !DILocation(line: 1771, column: 11, scope: !11015)
!11020 = !DILocation(line: 1771, column: 46, scope: !11015)
!11021 = !DILocation(line: 1771, column: 3, scope: !11015)
!11022 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10907, file: !10907, line: 1933, type: !10938, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11023)
!11023 = !{!11024, !11025}
!11024 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11022, file: !10907, line: 1933, type: !1580)
!11025 = !DILocalVariable(name: "tmpreg", scope: !11022, file: !10907, line: 1935, type: !131)
!11026 = !DILocation(line: 0, scope: !11022)
!11027 = !DILocation(line: 1935, column: 3, scope: !11022)
!11028 = !DILocation(line: 1935, column: 17, scope: !11022)
!11029 = !DILocation(line: 1936, column: 20, scope: !11022)
!11030 = !DILocation(line: 1936, column: 10, scope: !11022)
!11031 = !DILocation(line: 1937, column: 10, scope: !11022)
!11032 = !DILocation(line: 1938, column: 20, scope: !11022)
!11033 = !DILocation(line: 1938, column: 10, scope: !11022)
!11034 = !DILocation(line: 1939, column: 10, scope: !11022)
!11035 = !DILocation(line: 1940, column: 1, scope: !11022)
!11036 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10907, file: !10907, line: 2425, type: !11037, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11039)
!11037 = !DISubroutineType(types: !11038)
!11038 = !{null, !1580, !176}
!11039 = !{!11040, !11041}
!11040 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11036, file: !10907, line: 2425, type: !1580)
!11041 = !DILocalVariable(name: "Value", arg: 2, scope: !11036, file: !10907, line: 2425, type: !176)
!11042 = !DILocation(line: 0, scope: !11036)
!11043 = !DILocation(line: 2427, column: 16, scope: !11036)
!11044 = !DILocation(line: 2427, column: 11, scope: !11036)
!11045 = !DILocation(line: 2427, column: 14, scope: !11036)
!11046 = !DILocation(line: 2428, column: 1, scope: !11036)
!11047 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1633, file: !1633, line: 205, type: !11048, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11050)
!11048 = !DISubroutineType(types: !11049)
!11049 = !{!132, !1509}
!11050 = !{!11051, !11052}
!11051 = !DILocalVariable(name: "dev", arg: 1, scope: !11047, file: !1633, line: 205, type: !1509)
!11052 = !DILocalVariable(name: "config", scope: !11047, file: !1633, line: 207, type: !10471)
!11053 = !DILocation(line: 0, scope: !11047)
!11054 = !DILocation(line: 207, column: 48, scope: !11047)
!11055 = !DILocation(line: 209, column: 36, scope: !11047)
!11056 = !DILocation(line: 209, column: 9, scope: !11047)
!11057 = !DILocation(line: 209, column: 2, scope: !11047)
!11058 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1633, file: !1633, line: 270, type: !11059, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11061)
!11059 = !DISubroutineType(types: !11060)
!11060 = !{!1475, !132}
!11061 = !{!11062}
!11062 = !DILocalVariable(name: "parity", arg: 1, scope: !11058, file: !1633, line: 270, type: !132)
!11063 = !DILocation(line: 0, scope: !11058)
!11064 = !DILocation(line: 272, column: 2, scope: !11058)
!11065 = !DILocation(line: 281, column: 1, scope: !11058)
!11066 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1633, file: !1633, line: 220, type: !11048, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11067)
!11067 = !{!11068, !11069}
!11068 = !DILocalVariable(name: "dev", arg: 1, scope: !11066, file: !1633, line: 220, type: !1509)
!11069 = !DILocalVariable(name: "config", scope: !11066, file: !1633, line: 222, type: !10471)
!11070 = !DILocation(line: 0, scope: !11066)
!11071 = !DILocation(line: 222, column: 48, scope: !11066)
!11072 = !DILocation(line: 224, column: 44, scope: !11066)
!11073 = !DILocation(line: 224, column: 9, scope: !11066)
!11074 = !DILocation(line: 224, column: 2, scope: !11066)
!11075 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1633, file: !1633, line: 304, type: !11076, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11078)
!11076 = !DISubroutineType(types: !11077)
!11077 = !{!1489, !132}
!11078 = !{!11079}
!11079 = !DILocalVariable(name: "sb", arg: 1, scope: !11075, file: !1633, line: 304, type: !132)
!11080 = !DILocation(line: 0, scope: !11075)
!11081 = !DILocation(line: 306, column: 2, scope: !11075)
!11082 = !DILocation(line: 0, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11075, file: !1633, line: 306, column: 14)
!11084 = !DILocation(line: 323, column: 1, scope: !11075)
!11085 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1633, file: !1633, line: 235, type: !11048, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11086)
!11086 = !{!11087, !11088}
!11087 = !DILocalVariable(name: "dev", arg: 1, scope: !11085, file: !1633, line: 235, type: !1509)
!11088 = !DILocalVariable(name: "config", scope: !11085, file: !1633, line: 237, type: !10471)
!11089 = !DILocation(line: 0, scope: !11085)
!11090 = !DILocation(line: 237, column: 48, scope: !11085)
!11091 = !DILocation(line: 239, column: 39, scope: !11085)
!11092 = !DILocation(line: 239, column: 9, scope: !11085)
!11093 = !DILocation(line: 239, column: 2, scope: !11085)
!11094 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1633, file: !1633, line: 355, type: !11095, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11097)
!11095 = !DISubroutineType(types: !11096)
!11096 = !{!1482, !132, !132}
!11097 = !{!11098, !11099}
!11098 = !DILocalVariable(name: "db", arg: 1, scope: !11094, file: !1633, line: 355, type: !132)
!11099 = !DILocalVariable(name: "p", arg: 2, scope: !11094, file: !1633, line: 356, type: !132)
!11100 = !DILocation(line: 0, scope: !11094)
!11101 = !DILocation(line: 358, column: 2, scope: !11094)
!11102 = !DILocation(line: 384, column: 1, scope: !11094)
!11103 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1633, file: !1633, line: 250, type: !11048, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11104)
!11104 = !{!11105, !11106}
!11105 = !DILocalVariable(name: "dev", arg: 1, scope: !11103, file: !1633, line: 250, type: !1509)
!11106 = !DILocalVariable(name: "config", scope: !11103, file: !1633, line: 252, type: !10471)
!11107 = !DILocation(line: 0, scope: !11103)
!11108 = !DILocation(line: 252, column: 48, scope: !11103)
!11109 = !DILocation(line: 254, column: 40, scope: !11103)
!11110 = !DILocation(line: 254, column: 9, scope: !11103)
!11111 = !DILocation(line: 254, column: 2, scope: !11103)
!11112 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1633, file: !1633, line: 409, type: !11113, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11115)
!11113 = !DISubroutineType(types: !11114)
!11114 = !{!1495, !132}
!11115 = !{!11116}
!11116 = !DILocalVariable(name: "fc", arg: 1, scope: !11112, file: !1633, line: 409, type: !132)
!11117 = !DILocation(line: 0, scope: !11112)
!11118 = !DILocation(line: 411, column: 9, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11112, file: !1633, line: 411, column: 6)
!11120 = !DILocation(line: 416, column: 1, scope: !11112)
!11121 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10907, file: !10907, line: 966, type: !10908, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11122)
!11122 = !{!11123}
!11123 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11121, file: !10907, line: 966, type: !1580)
!11124 = !DILocation(line: 0, scope: !11121)
!11125 = !DILocation(line: 968, column: 21, scope: !11121)
!11126 = !DILocation(line: 968, column: 3, scope: !11121)
!11127 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10907, file: !10907, line: 600, type: !10908, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11128)
!11128 = !{!11129}
!11129 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11127, file: !10907, line: 600, type: !1580)
!11130 = !DILocation(line: 0, scope: !11127)
!11131 = !DILocation(line: 602, column: 21, scope: !11127)
!11132 = !DILocation(line: 602, column: 3, scope: !11127)
!11133 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10907, file: !10907, line: 819, type: !10908, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11134)
!11134 = !{!11135}
!11135 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11133, file: !10907, line: 819, type: !1580)
!11136 = !DILocation(line: 0, scope: !11133)
!11137 = !DILocation(line: 821, column: 21, scope: !11133)
!11138 = !DILocation(line: 821, column: 3, scope: !11133)
!11139 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10907, file: !10907, line: 546, type: !10908, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11140)
!11140 = !{!11141}
!11141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11139, file: !10907, line: 546, type: !1580)
!11142 = !DILocation(line: 0, scope: !11139)
!11143 = !DILocation(line: 548, column: 21, scope: !11139)
!11144 = !DILocation(line: 548, column: 3, scope: !11139)
!11145 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1633, file: !1633, line: 257, type: !11146, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11148)
!11146 = !DISubroutineType(types: !11147)
!11147 = !{!132, !1475}
!11148 = !{!11149}
!11149 = !DILocalVariable(name: "parity", arg: 1, scope: !11145, file: !1633, line: 257, type: !1475)
!11150 = !DILocation(line: 0, scope: !11145)
!11151 = !DILocation(line: 259, column: 2, scope: !11145)
!11152 = !DILocation(line: 268, column: 1, scope: !11145)
!11153 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1633, file: !1633, line: 283, type: !11154, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11156)
!11154 = !DISubroutineType(types: !11155)
!11155 = !{!132, !1489}
!11156 = !{!11157}
!11157 = !DILocalVariable(name: "sb", arg: 1, scope: !11153, file: !1633, line: 283, type: !1489)
!11158 = !DILocation(line: 0, scope: !11153)
!11159 = !DILocation(line: 285, column: 2, scope: !11153)
!11160 = !DILocation(line: 0, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11153, file: !1633, line: 285, column: 14)
!11162 = !DILocation(line: 302, column: 1, scope: !11153)
!11163 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1633, file: !1633, line: 325, type: !11164, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11166)
!11164 = !DISubroutineType(types: !11165)
!11165 = !{!132, !1482, !1475}
!11166 = !{!11167, !11168}
!11167 = !DILocalVariable(name: "db", arg: 1, scope: !11163, file: !1633, line: 325, type: !1482)
!11168 = !DILocalVariable(name: "p", arg: 2, scope: !11163, file: !1633, line: 326, type: !1475)
!11169 = !DILocation(line: 0, scope: !11163)
!11170 = !DILocation(line: 328, column: 2, scope: !11163)
!11171 = !DILocation(line: 353, column: 1, scope: !11163)
!11172 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1633, file: !1633, line: 393, type: !11173, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11175)
!11173 = !DISubroutineType(types: !11174)
!11174 = !{!132, !1495}
!11175 = !{!11176}
!11176 = !DILocalVariable(name: "fc", arg: 1, scope: !11172, file: !1633, line: 393, type: !1495)
!11177 = !DILocation(line: 0, scope: !11172)
!11178 = !DILocation(line: 395, column: 9, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11172, file: !1633, line: 395, column: 6)
!11180 = !DILocation(line: 400, column: 1, scope: !11172)
!11181 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10907, file: !10907, line: 423, type: !10938, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11182)
!11182 = !{!11183}
!11183 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11181, file: !10907, line: 423, type: !1580)
!11184 = !DILocation(line: 0, scope: !11181)
!11185 = !DILocation(line: 425, column: 3, scope: !11181)
!11186 = !DILocation(line: 426, column: 1, scope: !11181)
!11187 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1633, file: !1633, line: 197, type: !11188, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11190)
!11188 = !DISubroutineType(types: !11189)
!11189 = !{null, !1509, !132}
!11190 = !{!11191, !11192, !11193}
!11191 = !DILocalVariable(name: "dev", arg: 1, scope: !11187, file: !1633, line: 197, type: !1509)
!11192 = !DILocalVariable(name: "parity", arg: 2, scope: !11187, file: !1633, line: 198, type: !132)
!11193 = !DILocalVariable(name: "config", scope: !11187, file: !1633, line: 200, type: !10471)
!11194 = !DILocation(line: 0, scope: !11187)
!11195 = !DILocation(line: 200, column: 48, scope: !11187)
!11196 = !DILocation(line: 202, column: 29, scope: !11187)
!11197 = !DILocation(line: 202, column: 2, scope: !11187)
!11198 = !DILocation(line: 203, column: 1, scope: !11187)
!11199 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1633, file: !1633, line: 212, type: !11188, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11200)
!11200 = !{!11201, !11202, !11203}
!11201 = !DILocalVariable(name: "dev", arg: 1, scope: !11199, file: !1633, line: 212, type: !1509)
!11202 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11199, file: !1633, line: 213, type: !132)
!11203 = !DILocalVariable(name: "config", scope: !11199, file: !1633, line: 215, type: !10471)
!11204 = !DILocation(line: 0, scope: !11199)
!11205 = !DILocation(line: 215, column: 48, scope: !11199)
!11206 = !DILocation(line: 217, column: 37, scope: !11199)
!11207 = !DILocation(line: 217, column: 2, scope: !11199)
!11208 = !DILocation(line: 218, column: 1, scope: !11199)
!11209 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1633, file: !1633, line: 227, type: !11188, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11210)
!11210 = !{!11211, !11212, !11213}
!11211 = !DILocalVariable(name: "dev", arg: 1, scope: !11209, file: !1633, line: 227, type: !1509)
!11212 = !DILocalVariable(name: "databits", arg: 2, scope: !11209, file: !1633, line: 228, type: !132)
!11213 = !DILocalVariable(name: "config", scope: !11209, file: !1633, line: 230, type: !10471)
!11214 = !DILocation(line: 0, scope: !11209)
!11215 = !DILocation(line: 230, column: 48, scope: !11209)
!11216 = !DILocation(line: 232, column: 32, scope: !11209)
!11217 = !DILocation(line: 232, column: 2, scope: !11209)
!11218 = !DILocation(line: 233, column: 1, scope: !11209)
!11219 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1633, file: !1633, line: 242, type: !11188, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11220)
!11220 = !{!11221, !11222, !11223}
!11221 = !DILocalVariable(name: "dev", arg: 1, scope: !11219, file: !1633, line: 242, type: !1509)
!11222 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11219, file: !1633, line: 243, type: !132)
!11223 = !DILocalVariable(name: "config", scope: !11219, file: !1633, line: 245, type: !10471)
!11224 = !DILocation(line: 0, scope: !11219)
!11225 = !DILocation(line: 245, column: 48, scope: !11219)
!11226 = !DILocation(line: 247, column: 33, scope: !11219)
!11227 = !DILocation(line: 247, column: 2, scope: !11219)
!11228 = !DILocation(line: 248, column: 1, scope: !11219)
!11229 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1633, file: !1633, line: 107, type: !11188, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11230)
!11230 = !{!11231, !11232, !11233, !11234, !11235}
!11231 = !DILocalVariable(name: "dev", arg: 1, scope: !11229, file: !1633, line: 107, type: !1509)
!11232 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11229, file: !1633, line: 107, type: !132)
!11233 = !DILocalVariable(name: "config", scope: !11229, file: !1633, line: 109, type: !10471)
!11234 = !DILocalVariable(name: "data", scope: !11229, file: !1633, line: 110, type: !10594)
!11235 = !DILocalVariable(name: "clock_rate", scope: !11229, file: !1633, line: 112, type: !132)
!11236 = !DILocation(line: 0, scope: !11229)
!11237 = !DILocation(line: 109, column: 48, scope: !11229)
!11238 = !DILocation(line: 110, column: 38, scope: !11229)
!11239 = !DILocation(line: 112, column: 2, scope: !11229)
!11240 = !DILocation(line: 123, column: 36, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11242, file: !1633, line: 123, column: 7)
!11242 = distinct !DILexicalBlock(scope: !11243, file: !1633, line: 122, column: 9)
!11243 = distinct !DILexicalBlock(scope: !11229, file: !1633, line: 115, column: 6)
!11244 = !DILocation(line: 124, column: 42, scope: !11241)
!11245 = !DILocation(line: 123, column: 7, scope: !11241)
!11246 = !DILocation(line: 125, column: 22, scope: !11241)
!11247 = !DILocation(line: 123, column: 7, scope: !11242)
!11248 = !DILocation(line: 176, column: 36, scope: !11229)
!11249 = !DILocation(line: 176, column: 3, scope: !11229)
!11250 = !DILocation(line: 179, column: 32, scope: !11229)
!11251 = !DILocation(line: 180, column: 10, scope: !11229)
!11252 = !DILocation(line: 179, column: 3, scope: !11229)
!11253 = !DILocation(line: 195, column: 1, scope: !11229)
!11254 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10907, file: !10907, line: 409, type: !10938, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11255)
!11255 = !{!11256}
!11256 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11254, file: !10907, line: 409, type: !1580)
!11257 = !DILocation(line: 0, scope: !11254)
!11258 = !DILocation(line: 411, column: 3, scope: !11254)
!11259 = !DILocation(line: 412, column: 1, scope: !11254)
!11260 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !885, file: !885, line: 216, type: !1613, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11261)
!11261 = !{!11262, !11263, !11264, !11265}
!11262 = !DILocalVariable(name: "dev", arg: 1, scope: !11260, file: !885, line: 216, type: !1509)
!11263 = !DILocalVariable(name: "sys", arg: 2, scope: !11260, file: !885, line: 217, type: !960)
!11264 = !DILocalVariable(name: "rate", arg: 3, scope: !11260, file: !885, line: 218, type: !916)
!11265 = !DILocalVariable(name: "api", scope: !11260, file: !885, line: 220, type: !1591)
!11266 = !DILocation(line: 0, scope: !11260)
!11267 = !DILocation(line: 221, column: 49, scope: !11260)
!11268 = !DILocation(line: 223, column: 11, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11260, file: !885, line: 223, column: 6)
!11270 = !DILocation(line: 223, column: 20, scope: !11269)
!11271 = !DILocation(line: 223, column: 6, scope: !11260)
!11272 = !DILocation(line: 227, column: 9, scope: !11260)
!11273 = !DILocation(line: 227, column: 2, scope: !11260)
!11274 = !DILocation(line: 228, column: 1, scope: !11260)
!11275 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10907, file: !10907, line: 614, type: !11276, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11278)
!11276 = !DISubroutineType(types: !11277)
!11277 = !{null, !1580, !132}
!11278 = !{!11279, !11280}
!11279 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11275, file: !10907, line: 614, type: !1580)
!11280 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11275, file: !10907, line: 614, type: !132)
!11281 = !DILocation(line: 0, scope: !11275)
!11282 = !DILocation(line: 616, column: 3, scope: !11275)
!11283 = !DILocation(line: 617, column: 1, scope: !11275)
!11284 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10907, file: !10907, line: 1019, type: !11285, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11287)
!11285 = !DISubroutineType(types: !11286)
!11286 = !{null, !1580, !132, !132, !132}
!11287 = !{!11288, !11289, !11290, !11291}
!11288 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11284, file: !10907, line: 1019, type: !1580)
!11289 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11284, file: !10907, line: 1019, type: !132)
!11290 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11284, file: !10907, line: 1019, type: !132)
!11291 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11284, file: !10907, line: 1020, type: !132)
!11292 = !DILocation(line: 0, scope: !11284)
!11293 = !DILocation(line: 1028, column: 30, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11295, file: !10907, line: 1027, column: 3)
!11295 = distinct !DILexicalBlock(scope: !11284, file: !10907, line: 1022, column: 7)
!11296 = !DILocation(line: 1028, column: 19, scope: !11294)
!11297 = !DILocation(line: 1028, column: 13, scope: !11294)
!11298 = !DILocation(line: 1028, column: 17, scope: !11294)
!11299 = !DILocation(line: 1030, column: 1, scope: !11284)
!11300 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10907, file: !10907, line: 948, type: !11276, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11301)
!11301 = !{!11302, !11303}
!11302 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11300, file: !10907, line: 948, type: !1580)
!11303 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11300, file: !10907, line: 948, type: !132)
!11304 = !DILocation(line: 0, scope: !11300)
!11305 = !DILocation(line: 950, column: 3, scope: !11300)
!11306 = !DILocation(line: 951, column: 1, scope: !11300)
!11307 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10907, file: !10907, line: 587, type: !11276, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11308)
!11308 = !{!11309, !11310}
!11309 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11307, file: !10907, line: 587, type: !1580)
!11310 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11307, file: !10907, line: 587, type: !132)
!11311 = !DILocation(line: 0, scope: !11307)
!11312 = !DILocation(line: 589, column: 3, scope: !11307)
!11313 = !DILocation(line: 590, column: 1, scope: !11307)
!11314 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10907, file: !10907, line: 804, type: !11276, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11315)
!11315 = !{!11316, !11317}
!11316 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11314, file: !10907, line: 804, type: !1580)
!11317 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11314, file: !10907, line: 804, type: !132)
!11318 = !DILocation(line: 0, scope: !11314)
!11319 = !DILocation(line: 806, column: 3, scope: !11314)
!11320 = !DILocation(line: 807, column: 1, scope: !11314)
!11321 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10907, file: !10907, line: 531, type: !11276, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11322)
!11322 = !{!11323, !11324}
!11323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11321, file: !10907, line: 531, type: !1580)
!11324 = !DILocalVariable(name: "Parity", arg: 2, scope: !11321, file: !10907, line: 531, type: !132)
!11325 = !DILocation(line: 0, scope: !11321)
!11326 = !DILocation(line: 533, column: 3, scope: !11321)
!11327 = !DILocation(line: 534, column: 1, scope: !11321)
!11328 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10907, file: !10907, line: 1736, type: !10908, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11329)
!11329 = !{!11330}
!11330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11328, file: !10907, line: 1736, type: !1580)
!11331 = !DILocation(line: 0, scope: !11328)
!11332 = !DILocation(line: 1738, column: 11, scope: !11328)
!11333 = !DILocation(line: 1738, column: 3, scope: !11328)
!11334 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10907, file: !10907, line: 1747, type: !10908, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11335)
!11335 = !{!11336}
!11336 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11334, file: !10907, line: 1747, type: !1580)
!11337 = !DILocation(line: 0, scope: !11334)
!11338 = !DILocation(line: 1749, column: 11, scope: !11334)
!11339 = !DILocation(line: 1749, column: 45, scope: !11334)
!11340 = !DILocation(line: 1749, column: 3, scope: !11334)
!11341 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10907, file: !10907, line: 1826, type: !10908, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11342)
!11342 = !{!11343}
!11343 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11341, file: !10907, line: 1826, type: !1580)
!11344 = !DILocation(line: 0, scope: !11341)
!11345 = !DILocation(line: 1828, column: 11, scope: !11341)
!11346 = !DILocation(line: 1828, column: 46, scope: !11341)
!11347 = !DILocation(line: 1828, column: 3, scope: !11341)
!11348 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10907, file: !10907, line: 1991, type: !10938, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11349)
!11349 = !{!11350}
!11350 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11348, file: !10907, line: 1991, type: !1580)
!11351 = !DILocation(line: 0, scope: !11348)
!11352 = !DILocation(line: 1993, column: 3, scope: !11348)
!11353 = !DILocation(line: 1994, column: 1, scope: !11348)
!11354 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10907, file: !10907, line: 1876, type: !10938, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11355)
!11355 = !{!11356, !11357}
!11356 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11354, file: !10907, line: 1876, type: !1580)
!11357 = !DILocalVariable(name: "tmpreg", scope: !11354, file: !10907, line: 1878, type: !131)
!11358 = !DILocation(line: 0, scope: !11354)
!11359 = !DILocation(line: 1878, column: 3, scope: !11354)
!11360 = !DILocation(line: 1878, column: 17, scope: !11354)
!11361 = !DILocation(line: 1879, column: 20, scope: !11354)
!11362 = !DILocation(line: 1879, column: 10, scope: !11354)
!11363 = !DILocation(line: 1880, column: 10, scope: !11354)
!11364 = !DILocation(line: 1881, column: 20, scope: !11354)
!11365 = !DILocation(line: 1881, column: 10, scope: !11354)
!11366 = !DILocation(line: 1882, column: 10, scope: !11354)
!11367 = !DILocation(line: 1883, column: 1, scope: !11354)
!11368 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10907, file: !10907, line: 1895, type: !10938, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11369)
!11369 = !{!11370, !11371}
!11370 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11368, file: !10907, line: 1895, type: !1580)
!11371 = !DILocalVariable(name: "tmpreg", scope: !11368, file: !10907, line: 1897, type: !131)
!11372 = !DILocation(line: 0, scope: !11368)
!11373 = !DILocation(line: 1897, column: 3, scope: !11368)
!11374 = !DILocation(line: 1897, column: 17, scope: !11368)
!11375 = !DILocation(line: 1898, column: 20, scope: !11368)
!11376 = !DILocation(line: 1898, column: 10, scope: !11368)
!11377 = !DILocation(line: 1899, column: 10, scope: !11368)
!11378 = !DILocation(line: 1900, column: 20, scope: !11368)
!11379 = !DILocation(line: 1900, column: 10, scope: !11368)
!11380 = !DILocation(line: 1901, column: 10, scope: !11368)
!11381 = !DILocation(line: 1902, column: 1, scope: !11368)
!11382 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10907, file: !10907, line: 1914, type: !10938, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11383)
!11383 = !{!11384, !11385}
!11384 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11382, file: !10907, line: 1914, type: !1580)
!11385 = !DILocalVariable(name: "tmpreg", scope: !11382, file: !10907, line: 1916, type: !131)
!11386 = !DILocation(line: 0, scope: !11382)
!11387 = !DILocation(line: 1916, column: 3, scope: !11382)
!11388 = !DILocation(line: 1916, column: 17, scope: !11382)
!11389 = !DILocation(line: 1917, column: 20, scope: !11382)
!11390 = !DILocation(line: 1917, column: 10, scope: !11382)
!11391 = !DILocation(line: 1918, column: 10, scope: !11382)
!11392 = !DILocation(line: 1919, column: 20, scope: !11382)
!11393 = !DILocation(line: 1919, column: 10, scope: !11382)
!11394 = !DILocation(line: 1920, column: 10, scope: !11382)
!11395 = !DILocation(line: 1921, column: 1, scope: !11382)
!11396 = !DILocation(line: 0, scope: !1692)
!11397 = !DILocation(line: 1914, column: 1, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !1692, file: !1633, line: 1914, column: 1)
!11399 = !DILocation(line: 1914, column: 1, scope: !1692)
!11400 = !DILocation(line: 0, scope: !1741)
!11401 = !DILocation(line: 1914, column: 1, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !1741, file: !1633, line: 1914, column: 1)
!11403 = !DILocation(line: 1914, column: 1, scope: !1741)
!11404 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1633, file: !1633, line: 987, type: !1560, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11405)
!11405 = !{!11406, !11407}
!11406 = !DILocalVariable(name: "dev", arg: 1, scope: !11404, file: !1633, line: 987, type: !1509)
!11407 = !DILocalVariable(name: "data", scope: !11404, file: !1633, line: 989, type: !10594)
!11408 = !DILocation(line: 0, scope: !11404)
!11409 = !DILocation(line: 989, column: 38, scope: !11404)
!11410 = !DILocation(line: 1014, column: 12, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11404, file: !1633, line: 1014, column: 6)
!11412 = !DILocation(line: 1014, column: 6, scope: !11411)
!11413 = !DILocation(line: 1014, column: 6, scope: !11404)
!11414 = !DILocation(line: 1015, column: 28, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11411, file: !1633, line: 1014, column: 21)
!11416 = !DILocation(line: 1015, column: 3, scope: !11415)
!11417 = !DILocation(line: 1016, column: 2, scope: !11415)
!11418 = !DILocation(line: 1059, column: 1, scope: !11404)
!11419 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1633, file: !1633, line: 1583, type: !1530, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11420)
!11420 = !{!11421, !11422, !11423, !11424, !11425, !11426}
!11421 = !DILocalVariable(name: "dev", arg: 1, scope: !11419, file: !1633, line: 1583, type: !1509)
!11422 = !DILocalVariable(name: "config", scope: !11419, file: !1633, line: 1585, type: !10471)
!11423 = !DILocalVariable(name: "data", scope: !11419, file: !1633, line: 1586, type: !10594)
!11424 = !DILocalVariable(name: "ll_parity", scope: !11419, file: !1633, line: 1587, type: !132)
!11425 = !DILocalVariable(name: "ll_datawidth", scope: !11419, file: !1633, line: 1588, type: !132)
!11426 = !DILocalVariable(name: "err", scope: !11419, file: !1633, line: 1589, type: !103)
!11427 = !DILocation(line: 0, scope: !11419)
!11428 = !DILocation(line: 1585, column: 48, scope: !11419)
!11429 = !DILocation(line: 1586, column: 38, scope: !11419)
!11430 = !DILocation(line: 1591, column: 2, scope: !11419)
!11431 = !DILocation(line: 1593, column: 29, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11419, file: !1633, line: 1593, column: 6)
!11433 = !DILocation(line: 1593, column: 7, scope: !11432)
!11434 = !DILocation(line: 1593, column: 6, scope: !11419)
!11435 = !DILocation(line: 1599, column: 31, scope: !11419)
!11436 = !DILocation(line: 1599, column: 71, scope: !11419)
!11437 = !DILocation(line: 1599, column: 8, scope: !11419)
!11438 = !DILocation(line: 1600, column: 10, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11419, file: !1633, line: 1600, column: 6)
!11440 = !DILocation(line: 1600, column: 6, scope: !11419)
!11441 = !DILocation(line: 1616, column: 36, scope: !11419)
!11442 = !DILocation(line: 1616, column: 8, scope: !11419)
!11443 = !DILocation(line: 1617, column: 10, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11419, file: !1633, line: 1617, column: 6)
!11445 = !DILocation(line: 1617, column: 6, scope: !11419)
!11446 = !DILocation(line: 1621, column: 27, scope: !11419)
!11447 = !DILocation(line: 1621, column: 2, scope: !11419)
!11448 = !DILocation(line: 1624, column: 40, scope: !11419)
!11449 = !DILocation(line: 1624, column: 2, scope: !11419)
!11450 = !DILocation(line: 1630, column: 14, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11419, file: !1633, line: 1630, column: 6)
!11452 = !DILocation(line: 1630, column: 6, scope: !11419)
!11453 = !DILocation(line: 1638, column: 2, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11455, file: !1633, line: 1634, column: 34)
!11455 = distinct !DILexicalBlock(scope: !11451, file: !1633, line: 1634, column: 13)
!11456 = !DILocation(line: 0, scope: !11451)
!11457 = !DILocation(line: 1649, column: 35, scope: !11419)
!11458 = !DILocation(line: 1649, column: 2, scope: !11419)
!11459 = !DILocation(line: 1654, column: 14, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11419, file: !1633, line: 1654, column: 6)
!11461 = !DILocation(line: 1654, column: 6, scope: !11419)
!11462 = !DILocation(line: 1655, column: 3, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11460, file: !1633, line: 1654, column: 31)
!11464 = !DILocation(line: 1656, column: 2, scope: !11463)
!11465 = !DILocation(line: 1659, column: 37, scope: !11419)
!11466 = !DILocation(line: 1659, column: 2, scope: !11419)
!11467 = !DILocation(line: 1662, column: 14, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11419, file: !1633, line: 1662, column: 6)
!11469 = !DILocation(line: 1662, column: 6, scope: !11419)
!11470 = !DILocation(line: 1663, column: 37, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11468, file: !1633, line: 1662, column: 27)
!11472 = !DILocation(line: 1663, column: 3, scope: !11471)
!11473 = !DILocation(line: 1664, column: 2, scope: !11471)
!11474 = !DILocation(line: 1684, column: 26, scope: !11419)
!11475 = !DILocation(line: 1684, column: 2, scope: !11419)
!11476 = !DILocation(line: 1701, column: 10, scope: !11419)
!11477 = !DILocation(line: 1701, column: 2, scope: !11419)
!11478 = !DILocation(line: 1722, column: 2, scope: !11419)
!11479 = !DILocation(line: 1724, column: 1, scope: !11419)
!11480 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1633, file: !1633, line: 651, type: !1560, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11481)
!11481 = !{!11482, !11483, !11484}
!11482 = !DILocalVariable(name: "dev", arg: 1, scope: !11480, file: !1633, line: 651, type: !1509)
!11483 = !DILocalVariable(name: "data", scope: !11480, file: !1633, line: 653, type: !10594)
!11484 = !DILocalVariable(name: "clk", scope: !11480, file: !1633, line: 654, type: !11485)
!11485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1509)
!11486 = !DILocation(line: 0, scope: !11480)
!11487 = !DILocation(line: 653, column: 38, scope: !11480)
!11488 = !DILocation(line: 656, column: 8, scope: !11480)
!11489 = !DILocation(line: 656, column: 14, scope: !11480)
!11490 = !DILocation(line: 657, column: 1, scope: !11480)
!11491 = distinct !DISubprogram(name: "device_is_ready", scope: !6658, file: !6658, line: 47, type: !11492, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11494)
!11492 = !DISubroutineType(types: !11493)
!11493 = !{!179, !1509}
!11494 = !{!11495}
!11495 = !DILocalVariable(name: "dev", arg: 1, scope: !11491, file: !6658, line: 47, type: !1509)
!11496 = !DILocation(line: 0, scope: !11491)
!11497 = !DILocation(line: 55, column: 2, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11491, file: !6658, line: 55, column: 2)
!11499 = !{i64 2152491594}
!11500 = !DILocation(line: 56, column: 9, scope: !11491)
!11501 = !DILocation(line: 56, column: 2, scope: !11491)
!11502 = distinct !DISubprogram(name: "clock_control_on", scope: !885, file: !885, line: 123, type: !1598, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11503)
!11503 = !{!11504, !11505, !11506}
!11504 = !DILocalVariable(name: "dev", arg: 1, scope: !11502, file: !885, line: 123, type: !1509)
!11505 = !DILocalVariable(name: "sys", arg: 2, scope: !11502, file: !885, line: 124, type: !960)
!11506 = !DILocalVariable(name: "api", scope: !11502, file: !885, line: 126, type: !1591)
!11507 = !DILocation(line: 0, scope: !11502)
!11508 = !DILocation(line: 127, column: 49, scope: !11502)
!11509 = !DILocation(line: 129, column: 14, scope: !11502)
!11510 = !DILocation(line: 129, column: 9, scope: !11502)
!11511 = !DILocation(line: 129, column: 2, scope: !11502)
!11512 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1665, file: !1665, line: 342, type: !11513, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11515)
!11513 = !DISubroutineType(types: !11514)
!11514 = !{!103, !1728, !176}
!11515 = !{!11516, !11517, !11518, !11519}
!11516 = !DILocalVariable(name: "config", arg: 1, scope: !11512, file: !1665, line: 342, type: !1728)
!11517 = !DILocalVariable(name: "id", arg: 2, scope: !11512, file: !1665, line: 343, type: !176)
!11518 = !DILocalVariable(name: "ret", scope: !11512, file: !1665, line: 345, type: !103)
!11519 = !DILocalVariable(name: "state", scope: !11512, file: !1665, line: 346, type: !1668)
!11520 = !DILocation(line: 0, scope: !11512)
!11521 = !DILocation(line: 346, column: 2, scope: !11512)
!11522 = !DILocation(line: 348, column: 8, scope: !11512)
!11523 = !DILocation(line: 349, column: 10, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11512, file: !1665, line: 349, column: 6)
!11525 = !DILocation(line: 349, column: 6, scope: !11512)
!11526 = !DILocation(line: 353, column: 44, scope: !11512)
!11527 = !DILocation(line: 353, column: 9, scope: !11512)
!11528 = !DILocation(line: 353, column: 2, scope: !11512)
!11529 = !DILocation(line: 354, column: 1, scope: !11512)
!11530 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10907, file: !10907, line: 496, type: !11276, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11531)
!11531 = !{!11532, !11533}
!11532 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11530, file: !10907, line: 496, type: !1580)
!11533 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11530, file: !10907, line: 496, type: !132)
!11534 = !DILocation(line: 0, scope: !11530)
!11535 = !DILocation(line: 498, column: 3, scope: !11530)
!11536 = !DILocation(line: 499, column: 1, scope: !11530)
!11537 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10907, file: !10907, line: 849, type: !11285, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11538)
!11538 = !{!11539, !11540, !11541, !11542}
!11539 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11537, file: !10907, line: 849, type: !1580)
!11540 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11537, file: !10907, line: 849, type: !132)
!11541 = !DILocalVariable(name: "Parity", arg: 3, scope: !11537, file: !10907, line: 849, type: !132)
!11542 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11537, file: !10907, line: 850, type: !132)
!11543 = !DILocation(line: 0, scope: !11537)
!11544 = !DILocation(line: 852, column: 3, scope: !11537)
!11545 = !DILocation(line: 853, column: 3, scope: !11537)
!11546 = !DILocation(line: 854, column: 1, scope: !11537)
!11547 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10907, file: !10907, line: 1336, type: !10938, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11548)
!11548 = !{!11549}
!11549 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11547, file: !10907, line: 1336, type: !1580)
!11550 = !DILocation(line: 0, scope: !11547)
!11551 = !DILocation(line: 1338, column: 3, scope: !11547)
!11552 = !DILocation(line: 1339, column: 1, scope: !11547)
!11553 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1665, file: !1665, line: 316, type: !11554, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11556)
!11554 = !DISubroutineType(types: !11555)
!11555 = !{!103, !1728, !1668}
!11556 = !{!11557, !11558, !11559}
!11557 = !DILocalVariable(name: "config", arg: 1, scope: !11553, file: !1665, line: 317, type: !1728)
!11558 = !DILocalVariable(name: "state", arg: 2, scope: !11553, file: !1665, line: 318, type: !1668)
!11559 = !DILocalVariable(name: "reg", scope: !11553, file: !1665, line: 320, type: !22)
!11560 = !DILocation(line: 0, scope: !11553)
!11561 = !DILocation(line: 329, column: 39, scope: !11553)
!11562 = !DILocation(line: 329, column: 52, scope: !11553)
!11563 = !DILocation(line: 329, column: 9, scope: !11553)
!11564 = !DILocation(line: 329, column: 2, scope: !11553)
!11565 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !165, file: !165, line: 730, type: !11492, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1465, retainedNodes: !11566)
!11566 = !{!11567}
!11567 = !DILocalVariable(name: "dev", arg: 1, scope: !11565, file: !165, line: 730, type: !1509)
!11568 = !DILocation(line: 0, scope: !11565)
!11569 = !DILocation(line: 732, column: 9, scope: !11565)
!11570 = !DILocation(line: 732, column: 2, scope: !11565)
!11571 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1828, file: !1828, line: 270, type: !1834, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11572)
!11572 = !{!11573}
!11573 = !DILocalVariable(name: "dev", arg: 1, scope: !11571, file: !1828, line: 270, type: !1836)
!11574 = !DILocation(line: 0, scope: !11571)
!11575 = !DILocation(line: 274, column: 2, scope: !11571)
!11576 = !DILocation(line: 275, column: 12, scope: !11571)
!11577 = !DILocation(line: 276, column: 15, scope: !11571)
!11578 = !DILocation(line: 277, column: 16, scope: !11571)
!11579 = !DILocation(line: 278, column: 15, scope: !11571)
!11580 = !DILocation(line: 279, column: 16, scope: !11571)
!11581 = !DILocation(line: 282, column: 2, scope: !11571)
!11582 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !520, file: !520, line: 1638, type: !6851, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11583)
!11583 = !{!11584, !11585}
!11584 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11582, file: !520, line: 1638, type: !843)
!11585 = !DILocalVariable(name: "priority", arg: 2, scope: !11582, file: !520, line: 1638, type: !132)
!11586 = !DILocation(line: 0, scope: !11582)
!11587 = !DILocation(line: 1646, column: 46, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11589, file: !520, line: 1645, column: 3)
!11589 = distinct !DILexicalBlock(scope: !11582, file: !520, line: 1640, column: 7)
!11590 = !DILocation(line: 1648, column: 1, scope: !11582)
!11591 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1828, file: !1828, line: 118, type: !6754, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11592)
!11592 = !{!11593, !11594}
!11593 = !DILocalVariable(name: "arg", arg: 1, scope: !11591, file: !1828, line: 118, type: !102)
!11594 = !DILocalVariable(name: "dticks", scope: !11591, file: !1828, line: 121, type: !132)
!11595 = !DILocation(line: 0, scope: !11591)
!11596 = !DILocation(line: 124, column: 2, scope: !11591)
!11597 = !DILocation(line: 129, column: 17, scope: !11591)
!11598 = !DILocation(line: 129, column: 14, scope: !11591)
!11599 = !DILocation(line: 130, column: 15, scope: !11591)
!11600 = !DILocation(line: 145, column: 27, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11602, file: !1828, line: 132, column: 16)
!11602 = distinct !DILexicalBlock(scope: !11591, file: !1828, line: 132, column: 6)
!11603 = !DILocation(line: 145, column: 25, scope: !11601)
!11604 = !DILocation(line: 145, column: 45, scope: !11601)
!11605 = !DILocation(line: 146, column: 30, scope: !11601)
!11606 = !DILocation(line: 146, column: 20, scope: !11601)
!11607 = !DILocation(line: 147, column: 3, scope: !11601)
!11608 = !DILocation(line: 151, column: 2, scope: !11591)
!11609 = !DILocation(line: 152, column: 1, scope: !11591)
!11610 = distinct !DISubprogram(name: "elapsed", scope: !1828, file: !1828, line: 85, type: !7567, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11611)
!11611 = !{!11612, !11613, !11614}
!11612 = !DILocalVariable(name: "val1", scope: !11610, file: !1828, line: 87, type: !132)
!11613 = !DILocalVariable(name: "ctrl", scope: !11610, file: !1828, line: 88, type: !132)
!11614 = !DILocalVariable(name: "val2", scope: !11610, file: !1828, line: 89, type: !132)
!11615 = !DILocation(line: 87, column: 27, scope: !11610)
!11616 = !DILocation(line: 0, scope: !11610)
!11617 = !DILocation(line: 88, column: 27, scope: !11610)
!11618 = !DILocation(line: 89, column: 27, scope: !11610)
!11619 = !DILocation(line: 105, column: 12, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11610, file: !1828, line: 105, column: 6)
!11621 = !DILocation(line: 106, column: 6, scope: !11620)
!11622 = !DILocation(line: 107, column: 16, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11620, file: !1828, line: 106, column: 24)
!11624 = !DILocation(line: 111, column: 18, scope: !11623)
!11625 = !DILocation(line: 112, column: 2, scope: !11623)
!11626 = !DILocation(line: 114, column: 20, scope: !11610)
!11627 = !DILocation(line: 114, column: 30, scope: !11610)
!11628 = !DILocation(line: 114, column: 28, scope: !11610)
!11629 = !DILocation(line: 114, column: 2, scope: !11610)
!11630 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1828, file: !1828, line: 154, type: !11631, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11633)
!11631 = !DISubroutineType(types: !11632)
!11632 = !{null, !357, !179}
!11633 = !{!11634, !11635, !11636, !11637, !11638, !11639, !11640, !11645, !11646}
!11634 = !DILocalVariable(name: "ticks", arg: 1, scope: !11630, file: !1828, line: 154, type: !357)
!11635 = !DILocalVariable(name: "idle", arg: 2, scope: !11630, file: !1828, line: 154, type: !179)
!11636 = !DILocalVariable(name: "delay", scope: !11630, file: !1828, line: 169, type: !132)
!11637 = !DILocalVariable(name: "val1", scope: !11630, file: !1828, line: 170, type: !132)
!11638 = !DILocalVariable(name: "val2", scope: !11630, file: !1828, line: 170, type: !132)
!11639 = !DILocalVariable(name: "last_load_", scope: !11630, file: !1828, line: 171, type: !132)
!11640 = !DILocalVariable(name: "key", scope: !11630, file: !1828, line: 176, type: !11641)
!11641 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !485, line: 106, baseType: !11642)
!11642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !485, line: 32, size: 32, elements: !11643)
!11643 = !{!11644}
!11644 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11642, file: !485, line: 33, baseType: !103, size: 32)
!11645 = !DILocalVariable(name: "pending", scope: !11630, file: !1828, line: 178, type: !132)
!11646 = !DILocalVariable(name: "unannounced", scope: !11630, file: !1828, line: 185, type: !132)
!11647 = !DILocation(line: 0, scope: !11630)
!11648 = !DILocation(line: 162, column: 49, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11630, file: !1828, line: 162, column: 6)
!11650 = !DILocation(line: 163, column: 17, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11649, file: !1828, line: 162, column: 78)
!11652 = !DILocation(line: 164, column: 13, scope: !11651)
!11653 = !DILocation(line: 165, column: 3, scope: !11651)
!11654 = !DILocation(line: 171, column: 24, scope: !11630)
!11655 = !DILocation(line: 173, column: 10, scope: !11630)
!11656 = !DILocation(line: 174, column: 10, scope: !11630)
!11657 = !DILocalVariable(name: "l", arg: 1, scope: !11658, file: !485, line: 136, type: !11661)
!11658 = distinct !DISubprogram(name: "k_spin_lock", scope: !485, file: !485, line: 136, type: !11659, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11662)
!11659 = !DISubroutineType(types: !11660)
!11660 = !{!11641, !11661}
!11661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!11662 = !{!11657, !11663}
!11663 = !DILocalVariable(name: "k", scope: !11658, file: !485, line: 139, type: !11641)
!11664 = !DILocation(line: 0, scope: !11658, inlinedAt: !11665)
!11665 = distinct !DILocation(line: 176, column: 25, scope: !11630)
!11666 = !DILocation(line: 55, column: 2, scope: !11667, inlinedAt: !11671)
!11667 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11668)
!11668 = !{!11669, !11670}
!11669 = !DILocalVariable(name: "key", scope: !11667, file: !5780, line: 44, type: !32)
!11670 = !DILocalVariable(name: "tmp", scope: !11667, file: !5780, line: 53, type: !32)
!11671 = distinct !DILocation(line: 145, column: 10, scope: !11658, inlinedAt: !11665)
!11672 = !{i64 1617678}
!11673 = !DILocation(line: 0, scope: !11667, inlinedAt: !11671)
!11674 = !DILocation(line: 178, column: 21, scope: !11630)
!11675 = !DILocation(line: 180, column: 18, scope: !11630)
!11676 = !DILocation(line: 182, column: 14, scope: !11630)
!11677 = !DILocation(line: 183, column: 15, scope: !11630)
!11678 = !DILocation(line: 185, column: 39, scope: !11630)
!11679 = !DILocation(line: 185, column: 37, scope: !11630)
!11680 = !DILocation(line: 187, column: 27, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11630, file: !1828, line: 187, column: 6)
!11682 = !DILocation(line: 187, column: 6, scope: !11630)
!11683 = !DILocation(line: 202, column: 27, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11681, file: !1828, line: 195, column: 9)
!11685 = !DILocation(line: 202, column: 48, scope: !11684)
!11686 = !DILocation(line: 203, column: 9, scope: !11684)
!11687 = !DILocation(line: 204, column: 11, scope: !11684)
!11688 = !DILocation(line: 205, column: 13, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11684, file: !1828, line: 205, column: 7)
!11690 = !DILocation(line: 205, column: 7, scope: !11684)
!11691 = !DILocation(line: 0, scope: !11681)
!11692 = !DILocation(line: 212, column: 18, scope: !11630)
!11693 = !DILocation(line: 214, column: 28, scope: !11630)
!11694 = !DILocation(line: 214, column: 16, scope: !11630)
!11695 = !DILocation(line: 215, column: 15, scope: !11630)
!11696 = !DILocation(line: 227, column: 11, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11630, file: !1828, line: 227, column: 6)
!11698 = !DILocation(line: 227, column: 6, scope: !11630)
!11699 = !DILocation(line: 228, column: 15, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11697, file: !1828, line: 227, column: 19)
!11701 = !DILocation(line: 228, column: 38, scope: !11700)
!11702 = !DILocation(line: 228, column: 24, scope: !11700)
!11703 = !DILocation(line: 229, column: 2, scope: !11700)
!11704 = !DILocation(line: 230, column: 24, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11697, file: !1828, line: 229, column: 9)
!11706 = !DILocation(line: 230, column: 15, scope: !11705)
!11707 = !DILocation(line: 0, scope: !11697)
!11708 = !DILocalVariable(name: "key", arg: 2, scope: !11709, file: !485, line: 190, type: !11641)
!11709 = distinct !DISubprogram(name: "k_spin_unlock", scope: !485, file: !485, line: 189, type: !11710, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11712)
!11710 = !DISubroutineType(types: !11711)
!11711 = !{null, !11661, !11641}
!11712 = !{!11713, !11708}
!11713 = !DILocalVariable(name: "l", arg: 1, scope: !11709, file: !485, line: 189, type: !11661)
!11714 = !DILocation(line: 0, scope: !11709, inlinedAt: !11715)
!11715 = distinct !DILocation(line: 232, column: 2, scope: !11630)
!11716 = !DILocalVariable(name: "key", arg: 1, scope: !11717, file: !5780, line: 84, type: !32)
!11717 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11718)
!11718 = !{!11716}
!11719 = !DILocation(line: 0, scope: !11717, inlinedAt: !11720)
!11720 = distinct !DILocation(line: 215, column: 2, scope: !11709, inlinedAt: !11715)
!11721 = !DILocation(line: 95, column: 2, scope: !11717, inlinedAt: !11720)
!11722 = !{i64 1618495}
!11723 = !DILocation(line: 234, column: 1, scope: !11630)
!11724 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1828, file: !1828, line: 236, type: !7567, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11725)
!11725 = !{!11726, !11727}
!11726 = !DILocalVariable(name: "key", scope: !11724, file: !1828, line: 242, type: !11641)
!11727 = !DILocalVariable(name: "cyc", scope: !11724, file: !1828, line: 243, type: !132)
!11728 = !DILocation(line: 0, scope: !11658, inlinedAt: !11729)
!11729 = distinct !DILocation(line: 242, column: 25, scope: !11724)
!11730 = !DILocation(line: 55, column: 2, scope: !11667, inlinedAt: !11731)
!11731 = distinct !DILocation(line: 145, column: 10, scope: !11658, inlinedAt: !11729)
!11732 = !DILocation(line: 0, scope: !11667, inlinedAt: !11731)
!11733 = !DILocation(line: 0, scope: !11724)
!11734 = !DILocation(line: 243, column: 17, scope: !11724)
!11735 = !DILocation(line: 243, column: 29, scope: !11724)
!11736 = !DILocation(line: 243, column: 27, scope: !11724)
!11737 = !DILocation(line: 243, column: 43, scope: !11724)
!11738 = !DILocation(line: 243, column: 41, scope: !11724)
!11739 = !DILocation(line: 0, scope: !11709, inlinedAt: !11740)
!11740 = distinct !DILocation(line: 245, column: 2, scope: !11724)
!11741 = !DILocation(line: 0, scope: !11717, inlinedAt: !11742)
!11742 = distinct !DILocation(line: 215, column: 2, scope: !11709, inlinedAt: !11740)
!11743 = !DILocation(line: 95, column: 2, scope: !11717, inlinedAt: !11742)
!11744 = !DILocation(line: 246, column: 13, scope: !11724)
!11745 = !DILocation(line: 246, column: 2, scope: !11724)
!11746 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1828, file: !1828, line: 249, type: !7567, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11747)
!11747 = !{!11748, !11749}
!11748 = !DILocalVariable(name: "key", scope: !11746, file: !1828, line: 251, type: !11641)
!11749 = !DILocalVariable(name: "ret", scope: !11746, file: !1828, line: 252, type: !132)
!11750 = !DILocation(line: 0, scope: !11658, inlinedAt: !11751)
!11751 = distinct !DILocation(line: 251, column: 25, scope: !11746)
!11752 = !DILocation(line: 55, column: 2, scope: !11667, inlinedAt: !11753)
!11753 = distinct !DILocation(line: 145, column: 10, scope: !11658, inlinedAt: !11751)
!11754 = !DILocation(line: 0, scope: !11667, inlinedAt: !11753)
!11755 = !DILocation(line: 0, scope: !11746)
!11756 = !DILocation(line: 252, column: 17, scope: !11746)
!11757 = !DILocation(line: 252, column: 29, scope: !11746)
!11758 = !DILocation(line: 252, column: 27, scope: !11746)
!11759 = !DILocation(line: 0, scope: !11709, inlinedAt: !11760)
!11760 = distinct !DILocation(line: 254, column: 2, scope: !11746)
!11761 = !DILocation(line: 0, scope: !11717, inlinedAt: !11762)
!11762 = distinct !DILocation(line: 215, column: 2, scope: !11709, inlinedAt: !11760)
!11763 = !DILocation(line: 95, column: 2, scope: !11717, inlinedAt: !11762)
!11764 = !DILocation(line: 255, column: 2, scope: !11746)
!11765 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1828, file: !1828, line: 258, type: !3229, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !486)
!11766 = !DILocation(line: 260, column: 6, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11765, file: !1828, line: 260, column: 6)
!11768 = !DILocation(line: 260, column: 16, scope: !11767)
!11769 = !DILocation(line: 260, column: 6, scope: !11765)
!11770 = !DILocation(line: 261, column: 17, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11767, file: !1828, line: 260, column: 34)
!11772 = !DILocation(line: 262, column: 2, scope: !11771)
!11773 = !DILocation(line: 263, column: 1, scope: !11765)
!11774 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1828, file: !1828, line: 265, type: !3229, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !486)
!11775 = !DILocation(line: 267, column: 16, scope: !11774)
!11776 = !DILocation(line: 268, column: 1, scope: !11774)
!11777 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11778, file: !11778, line: 9, type: !11779, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !11802)
!11778 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11779 = !DISubroutineType(types: !11780)
!11780 = !{!103, !11781, !176, !11801}
!11781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11782, size: 32)
!11782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11783)
!11783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1665, line: 60, size: 64, elements: !11784)
!11784 = !{!11785, !11800}
!11785 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11783, file: !1665, line: 69, baseType: !11786, size: 32)
!11786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11787, size: 32)
!11787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11788)
!11788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1665, line: 50, size: 64, elements: !11789)
!11789 = !{!11790, !11798, !11799}
!11790 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11788, file: !1665, line: 52, baseType: !11791, size: 32)
!11791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11792, size: 32)
!11792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11793)
!11793 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !11794)
!11794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !11795)
!11795 = !{!11796, !11797}
!11796 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11794, file: !1676, line: 34, baseType: !132, size: 32)
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11794, file: !1676, line: 36, baseType: !132, size: 32, offset: 32)
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11788, file: !1665, line: 54, baseType: !176, size: 8, offset: 32)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11788, file: !1665, line: 56, baseType: !176, size: 8, offset: 40)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11783, file: !1665, line: 71, baseType: !176, size: 8, offset: 32)
!11801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11786, size: 32)
!11802 = !{!11803, !11804, !11805}
!11803 = !DILocalVariable(name: "config", arg: 1, scope: !11777, file: !11778, line: 9, type: !11781)
!11804 = !DILocalVariable(name: "id", arg: 2, scope: !11777, file: !11778, line: 9, type: !176)
!11805 = !DILocalVariable(name: "state", arg: 3, scope: !11777, file: !11778, line: 10, type: !11801)
!11806 = !DILocation(line: 0, scope: !11777)
!11807 = !DILocation(line: 12, column: 20, scope: !11777)
!11808 = !DILocation(line: 13, column: 27, scope: !11777)
!11809 = !DILocation(line: 13, column: 42, scope: !11777)
!11810 = !DILocation(line: 13, column: 19, scope: !11777)
!11811 = !DILocation(line: 13, column: 16, scope: !11777)
!11812 = !DILocation(line: 13, column: 2, scope: !11777)
!11813 = distinct !{!11813, !11812, !11814}
!11814 = !DILocation(line: 19, column: 2, scope: !11777)
!11815 = !DILocation(line: 14, column: 23, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11817, file: !11778, line: 14, column: 7)
!11817 = distinct !DILexicalBlock(scope: !11777, file: !11778, line: 13, column: 54)
!11818 = !DILocation(line: 14, column: 10, scope: !11816)
!11819 = !DILocation(line: 18, column: 11, scope: !11817)
!11820 = !DILocation(line: 14, column: 7, scope: !11817)
!11821 = !DILocation(line: 22, column: 1, scope: !11777)
!11822 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1944, file: !1944, line: 193, type: !11823, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !11832)
!11823 = !DISubroutineType(types: !11824)
!11824 = !{!103, !11825, !176, !22}
!11825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11826, size: 32)
!11826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11827)
!11827 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !11828)
!11828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !11829)
!11829 = !{!11830, !11831}
!11830 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11828, file: !1676, line: 34, baseType: !132, size: 32)
!11831 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11828, file: !1676, line: 36, baseType: !132, size: 32, offset: 32)
!11832 = !{!11833, !11834, !11835, !11836, !11837, !11838, !11839, !11840, !11842}
!11833 = !DILocalVariable(name: "pins", arg: 1, scope: !11822, file: !1944, line: 193, type: !11825)
!11834 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11822, file: !1944, line: 193, type: !176)
!11835 = !DILocalVariable(name: "reg", arg: 3, scope: !11822, file: !1944, line: 194, type: !22)
!11836 = !DILocalVariable(name: "pin", scope: !11822, file: !1944, line: 196, type: !132)
!11837 = !DILocalVariable(name: "mux", scope: !11822, file: !1944, line: 196, type: !132)
!11838 = !DILocalVariable(name: "pin_cgf", scope: !11822, file: !1944, line: 197, type: !132)
!11839 = !DILocalVariable(name: "ret", scope: !11822, file: !1944, line: 198, type: !103)
!11840 = !DILocalVariable(name: "i", scope: !11841, file: !1944, line: 209, type: !176)
!11841 = distinct !DILexicalBlock(scope: !11822, file: !1944, line: 209, column: 2)
!11842 = !DILocalVariable(name: "gpio_out", scope: !11843, file: !1944, line: 239, type: !132)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !1944, line: 238, column: 55)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !1944, line: 238, column: 14)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !1944, line: 236, column: 14)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !1944, line: 234, column: 7)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !1944, line: 209, column: 41)
!11848 = distinct !DILexicalBlock(scope: !11841, file: !1944, line: 209, column: 2)
!11849 = !DILocation(line: 0, scope: !11822)
!11850 = !DILocation(line: 0, scope: !11841)
!11851 = !DILocation(line: 209, column: 25, scope: !11848)
!11852 = !DILocation(line: 209, column: 2, scope: !11841)
!11853 = distinct !{!11853, !11852, !11854}
!11854 = !DILocation(line: 259, column: 2, scope: !11841)
!11855 = !DILocation(line: 210, column: 17, scope: !11847)
!11856 = !DILocation(line: 234, column: 7, scope: !11846)
!11857 = !DILocation(line: 234, column: 33, scope: !11846)
!11858 = !DILocation(line: 234, column: 7, scope: !11847)
!11859 = !DILocation(line: 235, column: 22, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11846, file: !1944, line: 234, column: 49)
!11861 = !DILocation(line: 235, column: 29, scope: !11860)
!11862 = !DILocation(line: 236, column: 3, scope: !11860)
!11863 = !DILocation(line: 236, column: 14, scope: !11846)
!11864 = !DILocation(line: 239, column: 32, scope: !11843)
!11865 = !DILocation(line: 0, scope: !11843)
!11866 = !DILocation(line: 241, column: 8, scope: !11843)
!11867 = !DILocation(line: 246, column: 3, scope: !11843)
!11868 = !DILocation(line: 252, column: 9, scope: !11847)
!11869 = !DILocation(line: 255, column: 9, scope: !11847)
!11870 = !DILocation(line: 256, column: 11, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11847, file: !1944, line: 256, column: 7)
!11872 = !DILocation(line: 209, column: 37, scope: !11848)
!11873 = !DILocation(line: 256, column: 7, scope: !11847)
!11874 = !DILocation(line: 262, column: 1, scope: !11822)
!11875 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1944, file: !1944, line: 176, type: !11876, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !11878)
!11876 = !DISubroutineType(types: !11877)
!11877 = !{!103, !132, !132, !132}
!11878 = !{!11879, !11880, !11881, !11882}
!11879 = !DILocalVariable(name: "pin", arg: 1, scope: !11875, file: !1944, line: 176, type: !132)
!11880 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11875, file: !1944, line: 176, type: !132)
!11881 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11875, file: !1944, line: 176, type: !132)
!11882 = !DILocalVariable(name: "port_device", scope: !11875, file: !1944, line: 178, type: !1874)
!11883 = !DILocation(line: 0, scope: !11875)
!11884 = !DILocation(line: 180, column: 22, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11875, file: !1944, line: 180, column: 6)
!11886 = !DILocation(line: 180, column: 6, scope: !11875)
!11887 = !DILocation(line: 180, column: 6, scope: !11885)
!11888 = !DILocation(line: 184, column: 16, scope: !11875)
!11889 = !DILocation(line: 186, column: 19, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11875, file: !1944, line: 186, column: 6)
!11891 = !DILocation(line: 186, column: 28, scope: !11890)
!11892 = !DILocation(line: 186, column: 33, scope: !11890)
!11893 = !DILocation(line: 186, column: 6, scope: !11875)
!11894 = !DILocation(line: 190, column: 43, scope: !11875)
!11895 = !DILocation(line: 190, column: 9, scope: !11875)
!11896 = !DILocation(line: 190, column: 2, scope: !11875)
!11897 = !DILocation(line: 191, column: 1, scope: !11875)
!11898 = distinct !DISubprogram(name: "device_is_ready", scope: !6658, file: !6658, line: 47, type: !11899, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !11901)
!11899 = !DISubroutineType(types: !11900)
!11900 = !{!179, !1874}
!11901 = !{!11902}
!11902 = !DILocalVariable(name: "dev", arg: 1, scope: !11898, file: !6658, line: 47, type: !1874)
!11903 = !DILocation(line: 0, scope: !11898)
!11904 = !DILocation(line: 55, column: 2, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11898, file: !6658, line: 55, column: 2)
!11906 = !{i64 2148851687}
!11907 = !DILocation(line: 56, column: 9, scope: !11898)
!11908 = !DILocation(line: 56, column: 2, scope: !11898)
!11909 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !165, file: !165, line: 730, type: !11899, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !11910)
!11910 = !{!11911}
!11911 = !DILocalVariable(name: "dev", arg: 1, scope: !11909, file: !165, line: 730, type: !1874)
!11912 = !DILocation(line: 0, scope: !11909)
!11913 = !DILocation(line: 732, column: 9, scope: !11909)
!11914 = !DILocation(line: 732, column: 2, scope: !11909)
!11915 = distinct !DISubprogram(name: "SystemInit", scope: !1974, file: !1974, line: 160, type: !3229, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1950, retainedNodes: !486)
!11916 = !DILocation(line: 170, column: 1, scope: !11915)
!11917 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1974, file: !1974, line: 210, type: !3229, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1950, retainedNodes: !11918)
!11918 = !{!11919, !11920, !11921, !11922, !11923}
!11919 = !DILocalVariable(name: "tmp", scope: !11917, file: !1974, line: 212, type: !132)
!11920 = !DILocalVariable(name: "pllmul", scope: !11917, file: !1974, line: 212, type: !132)
!11921 = !DILocalVariable(name: "plldiv", scope: !11917, file: !1974, line: 212, type: !132)
!11922 = !DILocalVariable(name: "pllsource", scope: !11917, file: !1974, line: 212, type: !132)
!11923 = !DILocalVariable(name: "msirange", scope: !11917, file: !1974, line: 212, type: !132)
!11924 = !DILocation(line: 0, scope: !11917)
!11925 = !DILocation(line: 215, column: 14, scope: !11917)
!11926 = !DILocation(line: 217, column: 3, scope: !11917)
!11927 = !DILocation(line: 220, column: 24, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11917, file: !1974, line: 218, column: 3)
!11929 = !DILocation(line: 220, column: 52, scope: !11928)
!11930 = !DILocation(line: 221, column: 32, scope: !11928)
!11931 = !DILocation(line: 222, column: 7, scope: !11928)
!11932 = !DILocation(line: 228, column: 7, scope: !11928)
!11933 = !DILocation(line: 231, column: 21, scope: !11928)
!11934 = !DILocation(line: 232, column: 21, scope: !11928)
!11935 = !DILocation(line: 233, column: 36, scope: !11928)
!11936 = !DILocation(line: 233, column: 16, scope: !11928)
!11937 = !DILocation(line: 234, column: 24, scope: !11928)
!11938 = !DILocation(line: 234, column: 31, scope: !11928)
!11939 = !DILocation(line: 236, column: 24, scope: !11928)
!11940 = !DILocation(line: 236, column: 29, scope: !11928)
!11941 = !DILocation(line: 238, column: 21, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11928, file: !1974, line: 238, column: 11)
!11943 = !DILocation(line: 238, column: 11, scope: !11928)
!11944 = !DILocation(line: 241, column: 41, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11942, file: !1974, line: 239, column: 7)
!11946 = !DILocation(line: 241, column: 51, scope: !11945)
!11947 = !DILocation(line: 242, column: 7, scope: !11945)
!11948 = !DILocation(line: 246, column: 41, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11942, file: !1974, line: 244, column: 7)
!11950 = !DILocation(line: 246, column: 51, scope: !11949)
!11951 = !DILocation(line: 0, scope: !11928)
!11952 = !DILocation(line: 256, column: 30, scope: !11917)
!11953 = !DILocation(line: 256, column: 52, scope: !11917)
!11954 = !DILocation(line: 256, column: 9, scope: !11917)
!11955 = !DILocation(line: 258, column: 19, scope: !11917)
!11956 = !DILocation(line: 259, column: 1, scope: !11917)
!11957 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11958, file: !11958, line: 228, type: !11959, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !11962)
!11958 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11959 = !DISubroutineType(types: !11960)
!11960 = !{!11961}
!11961 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3073, line: 45, baseType: !3072)
!11962 = !{!11963, !11964}
!11963 = !DILocalVariable(name: "tickstart", scope: !11957, file: !11958, line: 230, type: !132)
!11964 = !DILocalVariable(name: "status", scope: !11957, file: !11958, line: 231, type: !11961)
!11965 = !DILocation(line: 234, column: 3, scope: !11957)
!11966 = !DILocation(line: 238, column: 3, scope: !11957)
!11967 = !DILocation(line: 241, column: 15, scope: !11957)
!11968 = !DILocation(line: 0, scope: !11957)
!11969 = !DILocation(line: 244, column: 3, scope: !11957)
!11970 = !DILocation(line: 244, column: 10, scope: !11957)
!11971 = !DILocation(line: 244, column: 43, scope: !11957)
!11972 = !DILocation(line: 246, column: 10, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !11958, line: 246, column: 9)
!11974 = distinct !DILexicalBlock(scope: !11957, file: !11958, line: 245, column: 3)
!11975 = !DILocation(line: 246, column: 24, scope: !11973)
!11976 = !DILocation(line: 246, column: 37, scope: !11973)
!11977 = !DILocation(line: 246, column: 9, scope: !11974)
!11978 = distinct !{!11978, !11969, !11979}
!11979 = !DILocation(line: 250, column: 3, scope: !11957)
!11980 = !DILocation(line: 253, column: 3, scope: !11957)
!11981 = !DILocation(line: 256, column: 3, scope: !11957)
!11982 = !DILocation(line: 256, column: 10, scope: !11957)
!11983 = !DILocation(line: 256, column: 44, scope: !11957)
!11984 = !DILocation(line: 258, column: 10, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11986, file: !11958, line: 258, column: 9)
!11986 = distinct !DILexicalBlock(scope: !11957, file: !11958, line: 257, column: 3)
!11987 = !DILocation(line: 258, column: 24, scope: !11985)
!11988 = !DILocation(line: 258, column: 37, scope: !11985)
!11989 = !DILocation(line: 258, column: 9, scope: !11986)
!11990 = distinct !{!11990, !11981, !11991}
!11991 = !DILocation(line: 262, column: 3, scope: !11957)
!11992 = !DILocation(line: 265, column: 19, scope: !11957)
!11993 = !DILocation(line: 268, column: 25, scope: !11957)
!11994 = !DILocation(line: 268, column: 12, scope: !11957)
!11995 = !DILocation(line: 269, column: 13, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11957, file: !11958, line: 269, column: 6)
!11997 = !DILocation(line: 269, column: 6, scope: !11957)
!11998 = !DILocation(line: 275, column: 3, scope: !11957)
!11999 = !DILocation(line: 277, column: 3, scope: !11957)
!12000 = !DILocation(line: 280, column: 15, scope: !11957)
!12001 = !DILocation(line: 283, column: 3, scope: !11957)
!12002 = !DILocation(line: 283, column: 10, scope: !11957)
!12003 = !DILocation(line: 283, column: 43, scope: !11957)
!12004 = !DILocation(line: 285, column: 10, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12006, file: !11958, line: 285, column: 9)
!12006 = distinct !DILexicalBlock(scope: !11957, file: !11958, line: 284, column: 3)
!12007 = !DILocation(line: 285, column: 24, scope: !12005)
!12008 = !DILocation(line: 285, column: 37, scope: !12005)
!12009 = !DILocation(line: 285, column: 9, scope: !12006)
!12010 = distinct !{!12010, !12001, !12011}
!12011 = !DILocation(line: 289, column: 3, scope: !11957)
!12012 = !DILocation(line: 292, column: 3, scope: !11957)
!12013 = !DILocation(line: 295, column: 3, scope: !11957)
!12014 = !DILocation(line: 299, column: 3, scope: !11957)
!12015 = !DILocation(line: 305, column: 3, scope: !11957)
!12016 = !DILocation(line: 307, column: 3, scope: !11957)
!12017 = !DILocation(line: 308, column: 1, scope: !11957)
!12018 = !DISubprogram(name: "HAL_GetTick", scope: !12019, file: !12019, line: 945, type: !7567, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!12019 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12020 = !DISubprogram(name: "HAL_InitTick", scope: !12019, file: !12019, line: 932, type: !12021, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!12021 = !DISubroutineType(types: !12022)
!12022 = !{!11961, !132}
!12023 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11958, file: !11958, line: 324, type: !12024, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12048)
!12024 = !DISubroutineType(types: !12025)
!12025 = !{!11961, !12026}
!12026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12027, size: 32)
!12027 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12028, line: 283, baseType: !12029)
!12028 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12028, line: 252, size: 416, elements: !12030)
!12030 = !{!12031, !12032, !12033, !12034, !12035, !12036, !12037, !12038, !12039, !12040}
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12029, file: !12028, line: 254, baseType: !132, size: 32)
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12029, file: !12028, line: 257, baseType: !132, size: 32, offset: 32)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12029, file: !12028, line: 260, baseType: !132, size: 32, offset: 64)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12029, file: !12028, line: 263, baseType: !132, size: 32, offset: 96)
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12029, file: !12028, line: 266, baseType: !132, size: 32, offset: 128)
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12029, file: !12028, line: 269, baseType: !132, size: 32, offset: 160)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !12029, file: !12028, line: 272, baseType: !132, size: 32, offset: 192)
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !12029, file: !12028, line: 275, baseType: !132, size: 32, offset: 224)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !12029, file: !12028, line: 278, baseType: !132, size: 32, offset: 256)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12029, file: !12028, line: 281, baseType: !12041, size: 128, offset: 288)
!12041 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12028, line: 247, baseType: !12042)
!12042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12028, line: 234, size: 128, elements: !12043)
!12043 = !{!12044, !12045, !12046, !12047}
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12042, file: !12028, line: 236, baseType: !132, size: 32)
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12042, file: !12028, line: 239, baseType: !132, size: 32, offset: 32)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !12042, file: !12028, line: 242, baseType: !132, size: 32, offset: 64)
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !12042, file: !12028, line: 245, baseType: !132, size: 32, offset: 96)
!12048 = !{!12049, !12050, !12051, !12052, !12053, !12054, !12058}
!12049 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12023, file: !11958, line: 324, type: !12026)
!12050 = !DILocalVariable(name: "tickstart", scope: !12023, file: !11958, line: 326, type: !132)
!12051 = !DILocalVariable(name: "status", scope: !12023, file: !11958, line: 327, type: !11961)
!12052 = !DILocalVariable(name: "sysclk_source", scope: !12023, file: !11958, line: 328, type: !132)
!12053 = !DILocalVariable(name: "pll_config", scope: !12023, file: !11958, line: 328, type: !132)
!12054 = !DILocalVariable(name: "pwrclkchanged", scope: !12055, file: !11958, line: 613, type: !12057)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !11958, line: 612, column: 3)
!12056 = distinct !DILexicalBlock(scope: !12023, file: !11958, line: 611, column: 6)
!12057 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !880, line: 181, baseType: !3083)
!12058 = !DILocalVariable(name: "tmpreg", scope: !12059, file: !11958, line: 622, type: !131)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !11958, line: 622, column: 7)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !11958, line: 621, column: 5)
!12061 = distinct !DILexicalBlock(scope: !12055, file: !11958, line: 620, column: 8)
!12062 = !DILocation(line: 0, scope: !12023)
!12063 = !DILocation(line: 331, column: 24, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12023, file: !11958, line: 331, column: 6)
!12065 = !DILocation(line: 331, column: 6, scope: !12023)
!12066 = !DILocation(line: 338, column: 19, scope: !12023)
!12067 = !DILocation(line: 339, column: 16, scope: !12023)
!12068 = !DILocation(line: 342, column: 27, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12023, file: !11958, line: 342, column: 6)
!12070 = !DILocation(line: 342, column: 43, scope: !12069)
!12071 = !DILocation(line: 342, column: 69, scope: !12069)
!12072 = !DILocation(line: 342, column: 6, scope: !12023)
!12073 = !DILocation(line: 348, column: 23, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !11958, line: 348, column: 8)
!12075 = distinct !DILexicalBlock(scope: !12069, file: !11958, line: 343, column: 3)
!12076 = !DILocation(line: 349, column: 8, scope: !12074)
!12077 = !DILocation(line: 349, column: 27, scope: !12074)
!12078 = !DILocation(line: 349, column: 62, scope: !12074)
!12079 = !DILocation(line: 351, column: 11, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !11958, line: 351, column: 10)
!12081 = distinct !DILexicalBlock(scope: !12074, file: !11958, line: 350, column: 5)
!12082 = !DILocation(line: 351, column: 47, scope: !12080)
!12083 = !DILocation(line: 351, column: 54, scope: !12080)
!12084 = !DILocation(line: 351, column: 77, scope: !12080)
!12085 = !DILocation(line: 351, column: 86, scope: !12080)
!12086 = !DILocation(line: 351, column: 10, scope: !12081)
!12087 = !DILocation(line: 359, column: 7, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !11958, line: 359, column: 7)
!12089 = distinct !DILexicalBlock(scope: !12090, file: !11958, line: 359, column: 7)
!12090 = distinct !DILexicalBlock(scope: !12074, file: !11958, line: 357, column: 5)
!12091 = !DILocation(line: 359, column: 7, scope: !12089)
!12092 = !DILocation(line: 359, column: 7, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12088, file: !11958, line: 359, column: 7)
!12094 = !DILocation(line: 359, column: 7, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12096, file: !11958, line: 359, column: 7)
!12096 = distinct !DILexicalBlock(scope: !12088, file: !11958, line: 359, column: 7)
!12097 = !DILocation(line: 359, column: 7, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12099, file: !11958, line: 359, column: 7)
!12099 = distinct !DILexicalBlock(scope: !12096, file: !11958, line: 359, column: 7)
!12100 = !DILocation(line: 359, column: 7, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12099, file: !11958, line: 359, column: 7)
!12102 = !DILocation(line: 0, scope: !12088)
!12103 = !DILocation(line: 362, column: 29, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12090, file: !11958, line: 362, column: 10)
!12105 = !DILocation(line: 362, column: 38, scope: !12104)
!12106 = !DILocation(line: 0, scope: !12104)
!12107 = !DILocation(line: 362, column: 10, scope: !12090)
!12108 = !DILocation(line: 368, column: 15, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12104, file: !11958, line: 363, column: 7)
!12110 = !DILocation(line: 368, column: 51, scope: !12109)
!12111 = !DILocation(line: 368, column: 9, scope: !12109)
!12112 = !DILocation(line: 370, column: 15, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12114, file: !11958, line: 370, column: 14)
!12114 = distinct !DILexicalBlock(scope: !12109, file: !11958, line: 369, column: 9)
!12115 = !DILocation(line: 370, column: 29, scope: !12113)
!12116 = !DILocation(line: 370, column: 43, scope: !12113)
!12117 = !DILocation(line: 370, column: 14, scope: !12114)
!12118 = distinct !{!12118, !12111, !12119}
!12119 = !DILocation(line: 374, column: 9, scope: !12109)
!12120 = !DILocation(line: 382, column: 15, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12104, file: !11958, line: 377, column: 7)
!12122 = !DILocation(line: 382, column: 51, scope: !12121)
!12123 = !DILocation(line: 382, column: 9, scope: !12121)
!12124 = !DILocation(line: 384, column: 16, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !11958, line: 384, column: 15)
!12126 = distinct !DILexicalBlock(scope: !12121, file: !11958, line: 383, column: 9)
!12127 = !DILocation(line: 384, column: 30, scope: !12125)
!12128 = !DILocation(line: 384, column: 44, scope: !12125)
!12129 = !DILocation(line: 384, column: 15, scope: !12126)
!12130 = distinct !{!12130, !12123, !12131}
!12131 = !DILocation(line: 388, column: 9, scope: !12121)
!12132 = !DILocation(line: 393, column: 27, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12023, file: !11958, line: 393, column: 6)
!12134 = !DILocation(line: 393, column: 43, scope: !12133)
!12135 = !DILocation(line: 393, column: 69, scope: !12133)
!12136 = !DILocation(line: 393, column: 6, scope: !12023)
!12137 = !DILocation(line: 400, column: 23, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !11958, line: 400, column: 8)
!12139 = distinct !DILexicalBlock(scope: !12133, file: !11958, line: 394, column: 3)
!12140 = !DILocation(line: 401, column: 8, scope: !12138)
!12141 = !DILocation(line: 401, column: 27, scope: !12138)
!12142 = !DILocation(line: 401, column: 62, scope: !12138)
!12143 = !DILocation(line: 404, column: 11, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !11958, line: 404, column: 10)
!12145 = distinct !DILexicalBlock(scope: !12138, file: !11958, line: 402, column: 5)
!12146 = !DILocation(line: 404, column: 47, scope: !12144)
!12147 = !DILocation(line: 404, column: 54, scope: !12144)
!12148 = !DILocation(line: 404, column: 77, scope: !12144)
!12149 = !DILocation(line: 404, column: 86, scope: !12144)
!12150 = !DILocation(line: 404, column: 10, scope: !12145)
!12151 = !DILocation(line: 418, column: 29, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !11958, line: 418, column: 10)
!12153 = distinct !DILexicalBlock(scope: !12138, file: !11958, line: 416, column: 5)
!12154 = !DILocation(line: 418, column: 38, scope: !12152)
!12155 = !DILocation(line: 418, column: 10, scope: !12153)
!12156 = !DILocation(line: 421, column: 9, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12152, file: !11958, line: 419, column: 7)
!12158 = !DILocation(line: 424, column: 21, scope: !12157)
!12159 = !DILocation(line: 427, column: 9, scope: !12157)
!12160 = !DILocation(line: 427, column: 15, scope: !12157)
!12161 = !DILocation(line: 427, column: 51, scope: !12157)
!12162 = !DILocation(line: 429, column: 15, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !11958, line: 429, column: 14)
!12164 = distinct !DILexicalBlock(scope: !12157, file: !11958, line: 428, column: 9)
!12165 = !DILocation(line: 429, column: 29, scope: !12163)
!12166 = !DILocation(line: 429, column: 43, scope: !12163)
!12167 = !DILocation(line: 429, column: 14, scope: !12164)
!12168 = distinct !{!12168, !12159, !12169}
!12169 = !DILocation(line: 433, column: 9, scope: !12157)
!12170 = !DILocation(line: 441, column: 9, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12152, file: !11958, line: 439, column: 7)
!12172 = !DILocation(line: 444, column: 21, scope: !12171)
!12173 = !DILocation(line: 447, column: 9, scope: !12171)
!12174 = !DILocation(line: 447, column: 15, scope: !12171)
!12175 = !DILocation(line: 447, column: 51, scope: !12171)
!12176 = !DILocation(line: 449, column: 15, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !11958, line: 449, column: 14)
!12178 = distinct !DILexicalBlock(scope: !12171, file: !11958, line: 448, column: 9)
!12179 = !DILocation(line: 449, column: 29, scope: !12177)
!12180 = !DILocation(line: 449, column: 43, scope: !12177)
!12181 = !DILocation(line: 449, column: 14, scope: !12178)
!12182 = distinct !{!12182, !12173, !12183}
!12183 = !DILocation(line: 453, column: 9, scope: !12171)
!12184 = !DILocation(line: 0, scope: !12138)
!12185 = !DILocation(line: 458, column: 27, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12023, file: !11958, line: 458, column: 6)
!12187 = !DILocation(line: 458, column: 43, scope: !12186)
!12188 = !DILocation(line: 458, column: 69, scope: !12186)
!12189 = !DILocation(line: 458, column: 6, scope: !12023)
!12190 = !DILocation(line: 461, column: 22, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !11958, line: 461, column: 8)
!12192 = distinct !DILexicalBlock(scope: !12186, file: !11958, line: 459, column: 3)
!12193 = !DILocation(line: 461, column: 8, scope: !12192)
!12194 = !DILocation(line: 463, column: 11, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12196, file: !11958, line: 463, column: 10)
!12196 = distinct !DILexicalBlock(scope: !12191, file: !11958, line: 462, column: 5)
!12197 = !DILocation(line: 463, column: 47, scope: !12195)
!12198 = !DILocation(line: 463, column: 54, scope: !12195)
!12199 = !DILocation(line: 463, column: 77, scope: !12195)
!12200 = !DILocation(line: 463, column: 86, scope: !12195)
!12201 = !DILocation(line: 463, column: 10, scope: !12196)
!12202 = !DILocation(line: 477, column: 31, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12204, file: !11958, line: 477, column: 12)
!12204 = distinct !DILexicalBlock(scope: !12195, file: !11958, line: 469, column: 7)
!12205 = !DILocation(line: 477, column: 47, scope: !12203)
!12206 = !DILocation(line: 477, column: 45, scope: !12203)
!12207 = !DILocation(line: 477, column: 12, scope: !12204)
!12208 = !DILocation(line: 480, column: 14, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12210, file: !11958, line: 480, column: 14)
!12210 = distinct !DILexicalBlock(scope: !12203, file: !11958, line: 478, column: 9)
!12211 = !DILocation(line: 480, column: 80, scope: !12209)
!12212 = !DILocation(line: 480, column: 14, scope: !12210)
!12213 = !DILocation(line: 486, column: 11, scope: !12210)
!12214 = !DILocation(line: 488, column: 11, scope: !12210)
!12215 = !DILocation(line: 489, column: 9, scope: !12210)
!12216 = !DILocation(line: 494, column: 11, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12203, file: !11958, line: 491, column: 9)
!12218 = !DILocation(line: 496, column: 11, scope: !12217)
!12219 = !DILocation(line: 499, column: 65, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12217, file: !11958, line: 499, column: 14)
!12221 = !DILocation(line: 499, column: 14, scope: !12220)
!12222 = !DILocation(line: 499, column: 80, scope: !12220)
!12223 = !DILocation(line: 499, column: 14, scope: !12217)
!12224 = !DILocation(line: 506, column: 67, scope: !12204)
!12225 = !DILocation(line: 506, column: 81, scope: !12204)
!12226 = !DILocation(line: 506, column: 36, scope: !12204)
!12227 = !DILocation(line: 507, column: 52, scope: !12204)
!12228 = !DILocation(line: 507, column: 74, scope: !12204)
!12229 = !DILocation(line: 507, column: 31, scope: !12204)
!12230 = !DILocation(line: 507, column: 28, scope: !12204)
!12231 = !DILocation(line: 506, column: 25, scope: !12204)
!12232 = !DILocation(line: 510, column: 31, scope: !12204)
!12233 = !DILocation(line: 510, column: 18, scope: !12204)
!12234 = !DILocation(line: 511, column: 19, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12204, file: !11958, line: 511, column: 12)
!12236 = !DILocation(line: 511, column: 12, scope: !12204)
!12237 = !DILocation(line: 523, column: 29, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12239, file: !11958, line: 523, column: 10)
!12239 = distinct !DILexicalBlock(scope: !12191, file: !11958, line: 518, column: 5)
!12240 = !DILocation(line: 523, column: 38, scope: !12238)
!12241 = !DILocation(line: 523, column: 10, scope: !12239)
!12242 = !DILocation(line: 526, column: 9, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12238, file: !11958, line: 524, column: 7)
!12244 = !DILocation(line: 529, column: 21, scope: !12243)
!12245 = !DILocation(line: 532, column: 9, scope: !12243)
!12246 = !DILocation(line: 532, column: 15, scope: !12243)
!12247 = !DILocation(line: 532, column: 51, scope: !12243)
!12248 = !DILocation(line: 534, column: 15, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12250, file: !11958, line: 534, column: 14)
!12250 = distinct !DILexicalBlock(scope: !12243, file: !11958, line: 533, column: 9)
!12251 = !DILocation(line: 534, column: 29, scope: !12249)
!12252 = !DILocation(line: 534, column: 42, scope: !12249)
!12253 = !DILocation(line: 534, column: 14, scope: !12250)
!12254 = distinct !{!12254, !12245, !12255}
!12255 = !DILocation(line: 538, column: 9, scope: !12243)
!12256 = !DILocation(line: 544, column: 9, scope: !12243)
!12257 = !DILocation(line: 546, column: 9, scope: !12243)
!12258 = !DILocation(line: 548, column: 7, scope: !12243)
!12259 = !DILocation(line: 552, column: 9, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12238, file: !11958, line: 550, column: 7)
!12261 = !DILocation(line: 555, column: 21, scope: !12260)
!12262 = !DILocation(line: 558, column: 9, scope: !12260)
!12263 = !DILocation(line: 558, column: 15, scope: !12260)
!12264 = !DILocation(line: 558, column: 51, scope: !12260)
!12265 = !DILocation(line: 560, column: 15, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12267, file: !11958, line: 560, column: 14)
!12267 = distinct !DILexicalBlock(scope: !12260, file: !11958, line: 559, column: 9)
!12268 = !DILocation(line: 560, column: 29, scope: !12266)
!12269 = !DILocation(line: 560, column: 42, scope: !12266)
!12270 = !DILocation(line: 560, column: 14, scope: !12267)
!12271 = distinct !{!12271, !12262, !12272}
!12272 = !DILocation(line: 564, column: 9, scope: !12260)
!12273 = !DILocation(line: 569, column: 27, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12023, file: !11958, line: 569, column: 6)
!12275 = !DILocation(line: 569, column: 43, scope: !12274)
!12276 = !DILocation(line: 569, column: 69, scope: !12274)
!12277 = !DILocation(line: 569, column: 6, scope: !12023)
!12278 = !DILocation(line: 575, column: 27, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12280, file: !11958, line: 575, column: 8)
!12280 = distinct !DILexicalBlock(scope: !12274, file: !11958, line: 570, column: 3)
!12281 = !DILocation(line: 575, column: 36, scope: !12279)
!12282 = !DILocation(line: 575, column: 8, scope: !12280)
!12283 = !DILocation(line: 578, column: 7, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12279, file: !11958, line: 576, column: 5)
!12285 = !DILocation(line: 581, column: 19, scope: !12284)
!12286 = !DILocation(line: 584, column: 7, scope: !12284)
!12287 = !DILocation(line: 584, column: 13, scope: !12284)
!12288 = !DILocation(line: 584, column: 49, scope: !12284)
!12289 = !DILocation(line: 586, column: 13, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12291, file: !11958, line: 586, column: 12)
!12291 = distinct !DILexicalBlock(scope: !12284, file: !11958, line: 585, column: 7)
!12292 = !DILocation(line: 586, column: 27, scope: !12290)
!12293 = !DILocation(line: 586, column: 41, scope: !12290)
!12294 = !DILocation(line: 586, column: 12, scope: !12291)
!12295 = distinct !{!12295, !12286, !12296}
!12296 = !DILocation(line: 590, column: 7, scope: !12284)
!12297 = !DILocation(line: 595, column: 7, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12279, file: !11958, line: 593, column: 5)
!12299 = !DILocation(line: 598, column: 19, scope: !12298)
!12300 = !DILocation(line: 601, column: 7, scope: !12298)
!12301 = !DILocation(line: 601, column: 13, scope: !12298)
!12302 = !DILocation(line: 601, column: 49, scope: !12298)
!12303 = !DILocation(line: 603, column: 13, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !11958, line: 603, column: 12)
!12305 = distinct !DILexicalBlock(scope: !12298, file: !11958, line: 602, column: 7)
!12306 = !DILocation(line: 603, column: 27, scope: !12304)
!12307 = !DILocation(line: 603, column: 41, scope: !12304)
!12308 = !DILocation(line: 603, column: 12, scope: !12305)
!12309 = distinct !{!12309, !12300, !12310}
!12310 = !DILocation(line: 607, column: 7, scope: !12298)
!12311 = !DILocation(line: 611, column: 27, scope: !12056)
!12312 = !DILocation(line: 611, column: 43, scope: !12056)
!12313 = !DILocation(line: 611, column: 69, scope: !12056)
!12314 = !DILocation(line: 611, column: 6, scope: !12023)
!12315 = !DILocation(line: 0, scope: !12055)
!12316 = !DILocation(line: 620, column: 8, scope: !12061)
!12317 = !DILocation(line: 620, column: 8, scope: !12055)
!12318 = !DILocation(line: 622, column: 7, scope: !12059)
!12319 = !DILocation(line: 622, column: 7, scope: !12060)
!12320 = !DILocation(line: 624, column: 5, scope: !12060)
!12321 = !DILocation(line: 626, column: 8, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12055, file: !11958, line: 626, column: 8)
!12323 = !DILocation(line: 626, column: 8, scope: !12055)
!12324 = !DILocation(line: 629, column: 7, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12322, file: !11958, line: 627, column: 5)
!12326 = !DILocation(line: 632, column: 19, scope: !12325)
!12327 = !DILocation(line: 634, column: 7, scope: !12325)
!12328 = !DILocation(line: 634, column: 13, scope: !12325)
!12329 = !DILocation(line: 636, column: 13, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12331, file: !11958, line: 636, column: 12)
!12331 = distinct !DILexicalBlock(scope: !12325, file: !11958, line: 635, column: 7)
!12332 = !DILocation(line: 636, column: 27, scope: !12330)
!12333 = !DILocation(line: 636, column: 40, scope: !12330)
!12334 = !DILocation(line: 636, column: 12, scope: !12331)
!12335 = distinct !{!12335, !12327, !12336}
!12336 = !DILocation(line: 640, column: 7, scope: !12325)
!12337 = !DILocation(line: 644, column: 5, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12339, file: !11958, line: 644, column: 5)
!12339 = distinct !DILexicalBlock(scope: !12055, file: !11958, line: 644, column: 5)
!12340 = !DILocation(line: 644, column: 5, scope: !12339)
!12341 = !DILocation(line: 644, column: 5, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12338, file: !11958, line: 644, column: 5)
!12343 = !DILocation(line: 644, column: 5, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !11958, line: 644, column: 5)
!12345 = distinct !DILexicalBlock(scope: !12338, file: !11958, line: 644, column: 5)
!12346 = !DILocation(line: 644, column: 5, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12348, file: !11958, line: 644, column: 5)
!12348 = distinct !DILexicalBlock(scope: !12345, file: !11958, line: 644, column: 5)
!12349 = !DILocation(line: 644, column: 5, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12348, file: !11958, line: 644, column: 5)
!12351 = !DILocation(line: 0, scope: !12338)
!12352 = !DILocation(line: 646, column: 27, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12055, file: !11958, line: 646, column: 8)
!12354 = !DILocation(line: 646, column: 36, scope: !12353)
!12355 = !DILocation(line: 0, scope: !12353)
!12356 = !DILocation(line: 646, column: 8, scope: !12055)
!12357 = !DILocation(line: 652, column: 13, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12353, file: !11958, line: 647, column: 5)
!12359 = !DILocation(line: 652, column: 49, scope: !12358)
!12360 = !DILocation(line: 652, column: 7, scope: !12358)
!12361 = !DILocation(line: 654, column: 13, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12363, file: !11958, line: 654, column: 12)
!12363 = distinct !DILexicalBlock(scope: !12358, file: !11958, line: 653, column: 7)
!12364 = !DILocation(line: 654, column: 27, scope: !12362)
!12365 = !DILocation(line: 654, column: 41, scope: !12362)
!12366 = !DILocation(line: 654, column: 12, scope: !12363)
!12367 = distinct !{!12367, !12360, !12368}
!12368 = !DILocation(line: 658, column: 7, scope: !12358)
!12369 = !DILocation(line: 666, column: 13, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12353, file: !11958, line: 661, column: 5)
!12371 = !DILocation(line: 666, column: 49, scope: !12370)
!12372 = !DILocation(line: 666, column: 7, scope: !12370)
!12373 = !DILocation(line: 668, column: 13, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12375, file: !11958, line: 668, column: 12)
!12375 = distinct !DILexicalBlock(scope: !12370, file: !11958, line: 667, column: 7)
!12376 = !DILocation(line: 668, column: 27, scope: !12374)
!12377 = !DILocation(line: 668, column: 41, scope: !12374)
!12378 = !DILocation(line: 668, column: 12, scope: !12375)
!12379 = distinct !{!12379, !12372, !12380}
!12380 = !DILocation(line: 672, column: 7, scope: !12370)
!12381 = !DILocation(line: 676, column: 8, scope: !12055)
!12382 = !DILocation(line: 678, column: 7, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12384, file: !11958, line: 677, column: 5)
!12384 = distinct !DILexicalBlock(scope: !12055, file: !11958, line: 676, column: 8)
!12385 = !DILocation(line: 679, column: 5, scope: !12383)
!12386 = !DILocation(line: 685, column: 31, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12023, file: !11958, line: 685, column: 7)
!12388 = !DILocation(line: 685, column: 41, scope: !12387)
!12389 = !DILocation(line: 685, column: 7, scope: !12023)
!12390 = !DILocation(line: 688, column: 22, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12392, file: !11958, line: 688, column: 8)
!12392 = distinct !DILexicalBlock(scope: !12387, file: !11958, line: 686, column: 3)
!12393 = !DILocation(line: 688, column: 8, scope: !12392)
!12394 = !DILocation(line: 690, column: 44, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12396, file: !11958, line: 690, column: 10)
!12396 = distinct !DILexicalBlock(scope: !12391, file: !11958, line: 689, column: 5)
!12397 = !DILocation(line: 0, scope: !12395)
!12398 = !DILocation(line: 690, column: 10, scope: !12396)
!12399 = !DILocation(line: 704, column: 15, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12395, file: !11958, line: 691, column: 7)
!12401 = !DILocation(line: 704, column: 51, scope: !12400)
!12402 = !DILocation(line: 704, column: 9, scope: !12400)
!12403 = !DILocation(line: 706, column: 15, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !11958, line: 706, column: 14)
!12405 = distinct !DILexicalBlock(scope: !12400, file: !11958, line: 705, column: 9)
!12406 = !DILocation(line: 706, column: 29, scope: !12404)
!12407 = !DILocation(line: 706, column: 43, scope: !12404)
!12408 = !DILocation(line: 706, column: 14, scope: !12405)
!12409 = distinct !{!12409, !12402, !12410}
!12410 = !DILocation(line: 710, column: 9, scope: !12400)
!12411 = !DILocation(line: 713, column: 9, scope: !12400)
!12412 = !DILocation(line: 717, column: 9, scope: !12400)
!12413 = !DILocation(line: 720, column: 21, scope: !12400)
!12414 = !DILocation(line: 723, column: 9, scope: !12400)
!12415 = !DILocation(line: 723, column: 15, scope: !12400)
!12416 = !DILocation(line: 723, column: 51, scope: !12400)
!12417 = !DILocation(line: 725, column: 15, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12419, file: !11958, line: 725, column: 14)
!12419 = distinct !DILexicalBlock(scope: !12400, file: !11958, line: 724, column: 9)
!12420 = !DILocation(line: 725, column: 29, scope: !12418)
!12421 = !DILocation(line: 725, column: 43, scope: !12418)
!12422 = !DILocation(line: 725, column: 14, scope: !12419)
!12423 = distinct !{!12423, !12414, !12424}
!12424 = !DILocation(line: 729, column: 9, scope: !12400)
!12425 = !DILocation(line: 740, column: 15, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12395, file: !11958, line: 732, column: 7)
!12427 = !DILocation(line: 740, column: 51, scope: !12426)
!12428 = !DILocation(line: 740, column: 9, scope: !12426)
!12429 = !DILocation(line: 742, column: 15, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12431, file: !11958, line: 742, column: 14)
!12431 = distinct !DILexicalBlock(scope: !12426, file: !11958, line: 741, column: 9)
!12432 = !DILocation(line: 742, column: 29, scope: !12430)
!12433 = !DILocation(line: 742, column: 43, scope: !12430)
!12434 = !DILocation(line: 742, column: 14, scope: !12431)
!12435 = distinct !{!12435, !12428, !12436}
!12436 = !DILocation(line: 746, column: 9, scope: !12426)
!12437 = !DILocation(line: 752, column: 44, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !11958, line: 752, column: 10)
!12439 = distinct !DILexicalBlock(scope: !12391, file: !11958, line: 750, column: 5)
!12440 = !DILocation(line: 752, column: 10, scope: !12439)
!12441 = !DILocation(line: 759, column: 27, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12438, file: !11958, line: 757, column: 7)
!12443 = !DILocation(line: 760, column: 13, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12442, file: !11958, line: 760, column: 12)
!12445 = !DILocation(line: 760, column: 77, scope: !12444)
!12446 = !DILocation(line: 760, column: 51, scope: !12444)
!12447 = !DILocation(line: 760, column: 88, scope: !12444)
!12448 = !DILocation(line: 761, column: 13, scope: !12444)
!12449 = !DILocation(line: 761, column: 77, scope: !12444)
!12450 = !DILocation(line: 761, column: 51, scope: !12444)
!12451 = !DILocation(line: 761, column: 85, scope: !12444)
!12452 = !DILocation(line: 762, column: 13, scope: !12444)
!12453 = !DILocation(line: 762, column: 77, scope: !12444)
!12454 = !DILocation(line: 762, column: 51, scope: !12444)
!12455 = !DILocation(line: 760, column: 12, scope: !12442)
!12456 = !DILocation(line: 770, column: 3, scope: !12023)
!12457 = !DILocation(line: 771, column: 1, scope: !12023)
!12458 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !11958, file: !11958, line: 1343, type: !12021, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12459)
!12459 = !{!12460, !12461, !12462, !12463}
!12460 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !12458, file: !11958, line: 1343, type: !132)
!12461 = !DILocalVariable(name: "vos", scope: !12458, file: !11958, line: 1345, type: !132)
!12462 = !DILocalVariable(name: "latency", scope: !12458, file: !11958, line: 1346, type: !132)
!12463 = !DILocalVariable(name: "tmpreg", scope: !12464, file: !11958, line: 1357, type: !131)
!12464 = distinct !DILexicalBlock(scope: !12465, file: !11958, line: 1357, column: 7)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !11958, line: 1356, column: 5)
!12466 = distinct !DILexicalBlock(scope: !12467, file: !11958, line: 1351, column: 8)
!12467 = distinct !DILexicalBlock(scope: !12468, file: !11958, line: 1350, column: 3)
!12468 = distinct !DILexicalBlock(scope: !12458, file: !11958, line: 1349, column: 7)
!12469 = !DILocation(line: 0, scope: !12458)
!12470 = !DILocation(line: 1349, column: 7, scope: !12468)
!12471 = !DILocation(line: 1349, column: 42, scope: !12468)
!12472 = !DILocation(line: 1349, column: 7, scope: !12458)
!12473 = !DILocation(line: 1351, column: 8, scope: !12466)
!12474 = !DILocation(line: 1351, column: 8, scope: !12467)
!12475 = !DILocation(line: 1353, column: 13, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12466, file: !11958, line: 1352, column: 5)
!12477 = !DILocation(line: 1354, column: 5, scope: !12476)
!12478 = !DILocation(line: 1357, column: 7, scope: !12464)
!12479 = !DILocation(line: 1357, column: 7, scope: !12465)
!12480 = !DILocation(line: 1358, column: 13, scope: !12465)
!12481 = !DILocation(line: 1359, column: 7, scope: !12465)
!12482 = !DILocation(line: 0, scope: !12466)
!12483 = !DILocation(line: 1363, column: 13, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12467, file: !11958, line: 1363, column: 8)
!12485 = !DILocation(line: 1363, column: 46, scope: !12484)
!12486 = !DILocation(line: 1369, column: 3, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12458, file: !11958, line: 1369, column: 3)
!12488 = !DILocation(line: 1369, column: 3, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12490, file: !11958, line: 1369, column: 3)
!12490 = distinct !DILexicalBlock(scope: !12487, file: !11958, line: 1369, column: 3)
!12491 = !DILocation(line: 1373, column: 6, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12458, file: !11958, line: 1373, column: 6)
!12493 = !DILocation(line: 1379, column: 1, scope: !12458)
!12494 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11958, file: !11958, line: 799, type: !12495, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12506)
!12495 = !DISubroutineType(types: !12496)
!12496 = !{!11961, !12497, !132}
!12497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12498, size: 32)
!12498 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12028, line: 304, baseType: !12499)
!12499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12028, line: 288, size: 160, elements: !12500)
!12500 = !{!12501, !12502, !12503, !12504, !12505}
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12499, file: !12028, line: 290, baseType: !132, size: 32)
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12499, file: !12028, line: 293, baseType: !132, size: 32, offset: 32)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12499, file: !12028, line: 296, baseType: !132, size: 32, offset: 64)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12499, file: !12028, line: 299, baseType: !132, size: 32, offset: 96)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12499, file: !12028, line: 302, baseType: !132, size: 32, offset: 128)
!12506 = !{!12507, !12508, !12509, !12510}
!12507 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12494, file: !11958, line: 799, type: !12497)
!12508 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12494, file: !11958, line: 799, type: !132)
!12509 = !DILocalVariable(name: "tickstart", scope: !12494, file: !11958, line: 801, type: !132)
!12510 = !DILocalVariable(name: "status", scope: !12494, file: !11958, line: 802, type: !11961)
!12511 = !DILocation(line: 0, scope: !12494)
!12512 = !DILocation(line: 805, column: 24, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12494, file: !11958, line: 805, column: 6)
!12514 = !DILocation(line: 805, column: 6, scope: !12494)
!12515 = !DILocation(line: 817, column: 17, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12494, file: !11958, line: 817, column: 6)
!12517 = !DILocation(line: 817, column: 15, scope: !12516)
!12518 = !DILocation(line: 817, column: 6, scope: !12494)
!12519 = !DILocation(line: 820, column: 5, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12521, file: !11958, line: 820, column: 5)
!12521 = distinct !DILexicalBlock(scope: !12522, file: !11958, line: 820, column: 5)
!12522 = distinct !DILexicalBlock(scope: !12516, file: !11958, line: 818, column: 3)
!12523 = !DILocation(line: 820, column: 5, scope: !12521)
!12524 = !DILocation(line: 820, column: 5, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12520, file: !11958, line: 820, column: 5)
!12526 = !DILocation(line: 824, column: 8, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12522, file: !11958, line: 824, column: 8)
!12528 = !DILocation(line: 824, column: 34, scope: !12527)
!12529 = !DILocation(line: 824, column: 8, scope: !12522)
!12530 = !DILocation(line: 831, column: 27, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12494, file: !11958, line: 831, column: 6)
!12532 = !DILocation(line: 831, column: 38, scope: !12531)
!12533 = !DILocation(line: 831, column: 60, scope: !12531)
!12534 = !DILocation(line: 831, column: 6, scope: !12494)
!12535 = !DILocation(line: 834, column: 5, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12531, file: !11958, line: 832, column: 3)
!12537 = !DILocation(line: 838, column: 27, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12494, file: !11958, line: 838, column: 6)
!12539 = !DILocation(line: 835, column: 3, scope: !12536)
!12540 = !DILocation(line: 838, column: 38, scope: !12538)
!12541 = !DILocation(line: 838, column: 62, scope: !12538)
!12542 = !DILocation(line: 838, column: 6, scope: !12494)
!12543 = !DILocation(line: 843, column: 27, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12545, file: !11958, line: 843, column: 8)
!12545 = distinct !DILexicalBlock(scope: !12538, file: !11958, line: 839, column: 3)
!12546 = !DILocation(line: 843, column: 8, scope: !12545)
!12547 = !DILocation(line: 846, column: 10, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !11958, line: 846, column: 10)
!12549 = distinct !DILexicalBlock(scope: !12544, file: !11958, line: 844, column: 5)
!12550 = !DILocation(line: 846, column: 46, scope: !12548)
!12551 = !DILocation(line: 846, column: 10, scope: !12549)
!12552 = !DILocation(line: 855, column: 10, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !11958, line: 855, column: 10)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !11958, line: 853, column: 5)
!12555 = distinct !DILexicalBlock(scope: !12544, file: !11958, line: 852, column: 13)
!12556 = !DILocation(line: 855, column: 46, scope: !12553)
!12557 = !DILocation(line: 855, column: 10, scope: !12554)
!12558 = !DILocation(line: 864, column: 10, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12560, file: !11958, line: 864, column: 10)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !11958, line: 862, column: 5)
!12561 = distinct !DILexicalBlock(scope: !12555, file: !11958, line: 861, column: 13)
!12562 = !DILocation(line: 864, column: 46, scope: !12559)
!12563 = !DILocation(line: 864, column: 10, scope: !12560)
!12564 = !DILocation(line: 873, column: 10, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12566, file: !11958, line: 873, column: 10)
!12566 = distinct !DILexicalBlock(scope: !12561, file: !11958, line: 871, column: 5)
!12567 = !DILocation(line: 873, column: 46, scope: !12565)
!12568 = !DILocation(line: 873, column: 10, scope: !12566)
!12569 = !DILocation(line: 878, column: 5, scope: !12545)
!12570 = !DILocation(line: 881, column: 17, scope: !12545)
!12571 = !DILocation(line: 883, column: 27, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12545, file: !11958, line: 883, column: 8)
!12573 = !DILocation(line: 883, column: 8, scope: !12545)
!12574 = !DILocation(line: 885, column: 14, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12572, file: !11958, line: 884, column: 5)
!12576 = !DILocation(line: 885, column: 44, scope: !12575)
!12577 = !DILocation(line: 885, column: 7, scope: !12575)
!12578 = !DILocation(line: 887, column: 13, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12580, file: !11958, line: 887, column: 12)
!12580 = distinct !DILexicalBlock(scope: !12575, file: !11958, line: 886, column: 7)
!12581 = !DILocation(line: 887, column: 27, scope: !12579)
!12582 = !DILocation(line: 887, column: 41, scope: !12579)
!12583 = !DILocation(line: 887, column: 12, scope: !12580)
!12584 = distinct !{!12584, !12577, !12585}
!12585 = !DILocation(line: 891, column: 7, scope: !12575)
!12586 = !DILocation(line: 895, column: 14, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12588, file: !11958, line: 894, column: 5)
!12588 = distinct !DILexicalBlock(scope: !12572, file: !11958, line: 893, column: 13)
!12589 = !DILocation(line: 895, column: 44, scope: !12587)
!12590 = !DILocation(line: 895, column: 7, scope: !12587)
!12591 = !DILocation(line: 897, column: 13, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12593, file: !11958, line: 897, column: 12)
!12593 = distinct !DILexicalBlock(scope: !12587, file: !11958, line: 896, column: 7)
!12594 = !DILocation(line: 897, column: 27, scope: !12592)
!12595 = !DILocation(line: 897, column: 41, scope: !12592)
!12596 = !DILocation(line: 897, column: 12, scope: !12593)
!12597 = distinct !{!12597, !12590, !12598}
!12598 = !DILocation(line: 901, column: 7, scope: !12587)
!12599 = !DILocation(line: 905, column: 14, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12601, file: !11958, line: 904, column: 5)
!12601 = distinct !DILexicalBlock(scope: !12588, file: !11958, line: 903, column: 13)
!12602 = !DILocation(line: 905, column: 44, scope: !12600)
!12603 = !DILocation(line: 905, column: 7, scope: !12600)
!12604 = !DILocation(line: 907, column: 13, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !11958, line: 907, column: 12)
!12606 = distinct !DILexicalBlock(scope: !12600, file: !11958, line: 906, column: 7)
!12607 = !DILocation(line: 907, column: 27, scope: !12605)
!12608 = !DILocation(line: 907, column: 41, scope: !12605)
!12609 = !DILocation(line: 907, column: 12, scope: !12606)
!12610 = distinct !{!12610, !12603, !12611}
!12611 = !DILocation(line: 911, column: 7, scope: !12600)
!12612 = !DILocation(line: 915, column: 13, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12601, file: !11958, line: 914, column: 5)
!12614 = !DILocation(line: 915, column: 43, scope: !12613)
!12615 = !DILocation(line: 915, column: 7, scope: !12613)
!12616 = !DILocation(line: 917, column: 13, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12618, file: !11958, line: 917, column: 12)
!12618 = distinct !DILexicalBlock(scope: !12613, file: !11958, line: 916, column: 7)
!12619 = !DILocation(line: 917, column: 27, scope: !12617)
!12620 = !DILocation(line: 917, column: 41, scope: !12617)
!12621 = !DILocation(line: 917, column: 12, scope: !12618)
!12622 = distinct !{!12622, !12615, !12623}
!12623 = !DILocation(line: 921, column: 7, scope: !12613)
!12624 = !DILocation(line: 925, column: 17, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12494, file: !11958, line: 925, column: 6)
!12626 = !DILocation(line: 925, column: 15, scope: !12625)
!12627 = !DILocation(line: 925, column: 6, scope: !12494)
!12628 = !DILocation(line: 928, column: 5, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !11958, line: 928, column: 5)
!12630 = distinct !DILexicalBlock(scope: !12625, file: !11958, line: 926, column: 3)
!12631 = !DILocation(line: 932, column: 8, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12630, file: !11958, line: 932, column: 8)
!12633 = !DILocation(line: 932, column: 34, scope: !12632)
!12634 = !DILocation(line: 932, column: 8, scope: !12630)
!12635 = !DILocation(line: 939, column: 27, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12494, file: !11958, line: 939, column: 6)
!12637 = !DILocation(line: 939, column: 38, scope: !12636)
!12638 = !DILocation(line: 939, column: 61, scope: !12636)
!12639 = !DILocation(line: 939, column: 6, scope: !12494)
!12640 = !DILocation(line: 942, column: 5, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12636, file: !11958, line: 940, column: 3)
!12642 = !DILocation(line: 946, column: 27, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12494, file: !11958, line: 946, column: 6)
!12644 = !DILocation(line: 943, column: 3, scope: !12641)
!12645 = !DILocation(line: 946, column: 38, scope: !12643)
!12646 = !DILocation(line: 946, column: 61, scope: !12643)
!12647 = !DILocation(line: 946, column: 6, scope: !12494)
!12648 = !DILocation(line: 949, column: 5, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12643, file: !11958, line: 947, column: 3)
!12650 = !DILocation(line: 950, column: 3, scope: !12649)
!12651 = !DILocation(line: 953, column: 21, scope: !12494)
!12652 = !DILocation(line: 953, column: 70, scope: !12494)
!12653 = !DILocation(line: 953, column: 91, scope: !12494)
!12654 = !DILocation(line: 953, column: 50, scope: !12494)
!12655 = !DILocation(line: 953, column: 47, scope: !12494)
!12656 = !DILocation(line: 953, column: 19, scope: !12494)
!12657 = !DILocation(line: 956, column: 25, scope: !12494)
!12658 = !DILocation(line: 956, column: 12, scope: !12494)
!12659 = !DILocation(line: 958, column: 3, scope: !12494)
!12660 = !DILocation(line: 959, column: 1, scope: !12494)
!12661 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11958, file: !11958, line: 1083, type: !7567, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12662)
!12662 = !{!12663, !12664, !12665, !12666, !12667, !12668}
!12663 = !DILocalVariable(name: "tmpreg", scope: !12661, file: !11958, line: 1085, type: !132)
!12664 = !DILocalVariable(name: "pllm", scope: !12661, file: !11958, line: 1085, type: !132)
!12665 = !DILocalVariable(name: "plld", scope: !12661, file: !11958, line: 1085, type: !132)
!12666 = !DILocalVariable(name: "pllvco", scope: !12661, file: !11958, line: 1085, type: !132)
!12667 = !DILocalVariable(name: "msiclkrange", scope: !12661, file: !11958, line: 1085, type: !132)
!12668 = !DILocalVariable(name: "sysclockfreq", scope: !12661, file: !11958, line: 1085, type: !132)
!12669 = !DILocation(line: 1087, column: 17, scope: !12661)
!12670 = !DILocation(line: 0, scope: !12661)
!12671 = !DILocation(line: 1090, column: 3, scope: !12661)
!12672 = !DILocation(line: 1100, column: 7, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !11958, line: 1098, column: 5)
!12674 = distinct !DILexicalBlock(scope: !12661, file: !11958, line: 1091, column: 3)
!12675 = !DILocation(line: 1104, column: 63, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12674, file: !11958, line: 1103, column: 5)
!12677 = !DILocation(line: 1104, column: 14, scope: !12676)
!12678 = !DILocation(line: 1105, column: 52, scope: !12676)
!12679 = !DILocation(line: 1105, column: 76, scope: !12676)
!12680 = !DILocation(line: 1106, column: 11, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12676, file: !11958, line: 1106, column: 11)
!12682 = !DILocation(line: 1106, column: 41, scope: !12681)
!12683 = !DILocation(line: 1106, column: 11, scope: !12676)
!12684 = !DILocation(line: 0, scope: !12681)
!12685 = !DILocation(line: 1117, column: 7, scope: !12676)
!12686 = !DILocation(line: 1122, column: 27, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12674, file: !11958, line: 1121, column: 5)
!12688 = !DILocation(line: 1122, column: 56, scope: !12687)
!12689 = !DILocation(line: 1123, column: 30, scope: !12687)
!12690 = !DILocation(line: 1124, column: 7, scope: !12687)
!12691 = !DILocation(line: 0, scope: !12674)
!12692 = !DILocation(line: 1127, column: 3, scope: !12661)
!12693 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11958, file: !11958, line: 1005, type: !8980, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12694)
!12694 = !{!12695, !12696, !12697, !12698, !12708}
!12695 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12693, file: !11958, line: 1005, type: !132)
!12696 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12693, file: !11958, line: 1005, type: !132)
!12697 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12693, file: !11958, line: 1005, type: !132)
!12698 = !DILocalVariable(name: "gpio", scope: !12693, file: !11958, line: 1007, type: !12699)
!12699 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12700, line: 64, baseType: !12701)
!12700 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12700, line: 48, size: 160, elements: !12702)
!12702 = !{!12703, !12704, !12705, !12706, !12707}
!12703 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12701, file: !12700, line: 50, baseType: !132, size: 32)
!12704 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12701, file: !12700, line: 53, baseType: !132, size: 32, offset: 32)
!12705 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12701, file: !12700, line: 56, baseType: !132, size: 32, offset: 64)
!12706 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12701, file: !12700, line: 59, baseType: !132, size: 32, offset: 96)
!12707 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12701, file: !12700, line: 62, baseType: !132, size: 32, offset: 128)
!12708 = !DILocalVariable(name: "tmpreg", scope: !12709, file: !11958, line: 1022, type: !131)
!12709 = distinct !DILexicalBlock(scope: !12693, file: !11958, line: 1022, column: 3)
!12710 = !DILocation(line: 0, scope: !12693)
!12711 = !DILocation(line: 1007, column: 3, scope: !12693)
!12712 = !DILocation(line: 1007, column: 20, scope: !12693)
!12713 = !DILocation(line: 1015, column: 8, scope: !12693)
!12714 = !DILocation(line: 1015, column: 18, scope: !12693)
!12715 = !DILocation(line: 1016, column: 8, scope: !12693)
!12716 = !DILocation(line: 1016, column: 18, scope: !12693)
!12717 = !DILocation(line: 1017, column: 8, scope: !12693)
!12718 = !DILocation(line: 1017, column: 18, scope: !12693)
!12719 = !DILocation(line: 1018, column: 8, scope: !12693)
!12720 = !DILocation(line: 1018, column: 18, scope: !12693)
!12721 = !DILocation(line: 1019, column: 8, scope: !12693)
!12722 = !DILocation(line: 1019, column: 18, scope: !12693)
!12723 = !DILocation(line: 1022, column: 3, scope: !12709)
!12724 = !DILocation(line: 1022, column: 3, scope: !12693)
!12725 = !DILocation(line: 1024, column: 3, scope: !12693)
!12726 = !DILocation(line: 1027, column: 3, scope: !12693)
!12727 = !DILocation(line: 1028, column: 1, scope: !12693)
!12728 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12700, file: !12700, line: 293, type: !12729, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!12729 = !DISubroutineType(types: !12730)
!12730 = !{null, !3126, !12731}
!12731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12699, size: 32)
!12732 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11958, file: !11958, line: 1039, type: !3229, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !486)
!12733 = !DILocation(line: 1041, column: 38, scope: !12732)
!12734 = !DILocation(line: 1042, column: 1, scope: !12732)
!12735 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11958, file: !11958, line: 1048, type: !3229, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !486)
!12736 = !DILocation(line: 1050, column: 38, scope: !12735)
!12737 = !DILocation(line: 1051, column: 1, scope: !12735)
!12738 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11958, file: !11958, line: 1139, type: !7567, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !486)
!12739 = !DILocation(line: 1141, column: 10, scope: !12738)
!12740 = !DILocation(line: 1141, column: 3, scope: !12738)
!12741 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11958, file: !11958, line: 1150, type: !7567, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !486)
!12742 = !DILocation(line: 1153, column: 11, scope: !12741)
!12743 = !DILocation(line: 1153, column: 56, scope: !12741)
!12744 = !DILocation(line: 1153, column: 79, scope: !12741)
!12745 = !DILocation(line: 1153, column: 36, scope: !12741)
!12746 = !DILocation(line: 1153, column: 33, scope: !12741)
!12747 = !DILocation(line: 1153, column: 3, scope: !12741)
!12748 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11958, file: !11958, line: 1162, type: !7567, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !486)
!12749 = !DILocation(line: 1165, column: 11, scope: !12748)
!12750 = !DILocation(line: 1165, column: 55, scope: !12748)
!12751 = !DILocation(line: 1165, column: 78, scope: !12748)
!12752 = !DILocation(line: 1165, column: 35, scope: !12748)
!12753 = !DILocation(line: 1165, column: 32, scope: !12748)
!12754 = !DILocation(line: 1165, column: 3, scope: !12748)
!12755 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11958, file: !11958, line: 1175, type: !12756, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12758)
!12756 = !DISubroutineType(types: !12757)
!12757 = !{null, !12026}
!12758 = !{!12759}
!12759 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12755, file: !11958, line: 1175, type: !12026)
!12760 = !DILocation(line: 0, scope: !12755)
!12761 = !DILocation(line: 1181, column: 22, scope: !12755)
!12762 = !DILocation(line: 1181, column: 37, scope: !12755)
!12763 = !DILocation(line: 1186, column: 12, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12755, file: !11958, line: 1186, column: 6)
!12765 = !DILocation(line: 1186, column: 15, scope: !12764)
!12766 = !DILocation(line: 1186, column: 31, scope: !12764)
!12767 = !DILocation(line: 1186, column: 6, scope: !12755)
!12768 = !DILocation(line: 1188, column: 24, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12764, file: !11958, line: 1187, column: 3)
!12770 = !DILocation(line: 1188, column: 33, scope: !12769)
!12771 = !DILocation(line: 1189, column: 3, scope: !12769)
!12772 = !DILocation(line: 1190, column: 17, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12764, file: !11958, line: 1190, column: 11)
!12774 = !DILocation(line: 1190, column: 20, scope: !12773)
!12775 = !DILocation(line: 1190, column: 35, scope: !12773)
!12776 = !DILocation(line: 0, scope: !12773)
!12777 = !DILocation(line: 1190, column: 11, scope: !12764)
!12778 = !DILocation(line: 1192, column: 33, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12773, file: !11958, line: 1191, column: 3)
!12780 = !DILocation(line: 1193, column: 3, scope: !12779)
!12781 = !DILocation(line: 1196, column: 33, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12773, file: !11958, line: 1195, column: 3)
!12783 = !DILocation(line: 1200, column: 12, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12755, file: !11958, line: 1200, column: 6)
!12785 = !DILocation(line: 1200, column: 15, scope: !12784)
!12786 = !DILocation(line: 1206, column: 24, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12784, file: !11958, line: 1205, column: 3)
!12788 = !DILocation(line: 1206, column: 33, scope: !12787)
!12789 = !DILocation(line: 1209, column: 61, scope: !12755)
!12790 = !DILocation(line: 1209, column: 88, scope: !12755)
!12791 = !DILocation(line: 1209, column: 22, scope: !12755)
!12792 = !DILocation(line: 1209, column: 42, scope: !12755)
!12793 = !DILocation(line: 1212, column: 12, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12755, file: !11958, line: 1212, column: 6)
!12795 = !DILocation(line: 1212, column: 6, scope: !12755)
!12796 = !DILocation(line: 1218, column: 24, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12794, file: !11958, line: 1217, column: 3)
!12798 = !DILocation(line: 1218, column: 33, scope: !12797)
!12799 = !DILocation(line: 1221, column: 61, scope: !12755)
!12800 = !DILocation(line: 1221, column: 88, scope: !12755)
!12801 = !DILocation(line: 1221, column: 22, scope: !12755)
!12802 = !DILocation(line: 1221, column: 42, scope: !12755)
!12803 = !DILocation(line: 1222, column: 55, scope: !12755)
!12804 = !DILocation(line: 1222, column: 61, scope: !12755)
!12805 = !DILocation(line: 1222, column: 22, scope: !12755)
!12806 = !DILocation(line: 1222, column: 36, scope: !12755)
!12807 = !DILocation(line: 1225, column: 12, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12755, file: !11958, line: 1225, column: 6)
!12809 = !DILocation(line: 1225, column: 16, scope: !12808)
!12810 = !DILocation(line: 1225, column: 33, scope: !12808)
!12811 = !DILocation(line: 1225, column: 6, scope: !12755)
!12812 = !DILocation(line: 1227, column: 24, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12808, file: !11958, line: 1226, column: 3)
!12814 = !DILocation(line: 1227, column: 33, scope: !12813)
!12815 = !DILocation(line: 1228, column: 3, scope: !12813)
!12816 = !DILocation(line: 1229, column: 17, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12808, file: !11958, line: 1229, column: 11)
!12818 = !DILocation(line: 1229, column: 21, scope: !12817)
!12819 = !DILocation(line: 1229, column: 37, scope: !12817)
!12820 = !DILocation(line: 0, scope: !12817)
!12821 = !DILocation(line: 1229, column: 11, scope: !12808)
!12822 = !DILocation(line: 1231, column: 33, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12817, file: !11958, line: 1230, column: 3)
!12824 = !DILocation(line: 1232, column: 3, scope: !12823)
!12825 = !DILocation(line: 1235, column: 33, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12817, file: !11958, line: 1234, column: 3)
!12827 = !DILocation(line: 1239, column: 12, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12755, file: !11958, line: 1239, column: 6)
!12829 = !DILocation(line: 1239, column: 16, scope: !12828)
!12830 = !DILocation(line: 1245, column: 24, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12828, file: !11958, line: 1244, column: 3)
!12832 = !DILocation(line: 1245, column: 33, scope: !12831)
!12833 = !DILocation(line: 1250, column: 12, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12755, file: !11958, line: 1250, column: 6)
!12835 = !DILocation(line: 1250, column: 15, scope: !12834)
!12836 = !DILocation(line: 1250, column: 30, scope: !12834)
!12837 = !DILocation(line: 1250, column: 6, scope: !12755)
!12838 = !DILocation(line: 1256, column: 28, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12834, file: !11958, line: 1255, column: 3)
!12840 = !DILocation(line: 1256, column: 37, scope: !12839)
!12841 = !DILocation(line: 1258, column: 54, scope: !12755)
!12842 = !DILocation(line: 1258, column: 59, scope: !12755)
!12843 = !DILocation(line: 1258, column: 26, scope: !12755)
!12844 = !DILocation(line: 1258, column: 36, scope: !12755)
!12845 = !DILocation(line: 1259, column: 51, scope: !12755)
!12846 = !DILocation(line: 1259, column: 56, scope: !12755)
!12847 = !DILocation(line: 1259, column: 26, scope: !12755)
!12848 = !DILocation(line: 1259, column: 33, scope: !12755)
!12849 = !DILocation(line: 1260, column: 51, scope: !12755)
!12850 = !DILocation(line: 1260, column: 56, scope: !12755)
!12851 = !DILocation(line: 1260, column: 26, scope: !12755)
!12852 = !DILocation(line: 1260, column: 33, scope: !12755)
!12853 = !DILocation(line: 1261, column: 1, scope: !12755)
!12854 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11958, file: !11958, line: 1271, type: !12855, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12857)
!12855 = !DISubroutineType(types: !12856)
!12856 = !{null, !12497, !916}
!12857 = !{!12858, !12859}
!12858 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12854, file: !11958, line: 1271, type: !12497)
!12859 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12854, file: !11958, line: 1271, type: !916)
!12860 = !DILocation(line: 0, scope: !12854)
!12861 = !DILocation(line: 1278, column: 22, scope: !12854)
!12862 = !DILocation(line: 1278, column: 32, scope: !12854)
!12863 = !DILocation(line: 1281, column: 53, scope: !12854)
!12864 = !DILocation(line: 1281, column: 58, scope: !12854)
!12865 = !DILocation(line: 1281, column: 22, scope: !12854)
!12866 = !DILocation(line: 1281, column: 35, scope: !12854)
!12867 = !DILocation(line: 1284, column: 54, scope: !12854)
!12868 = !DILocation(line: 1284, column: 59, scope: !12854)
!12869 = !DILocation(line: 1284, column: 22, scope: !12854)
!12870 = !DILocation(line: 1284, column: 36, scope: !12854)
!12871 = !DILocation(line: 1287, column: 55, scope: !12854)
!12872 = !DILocation(line: 1287, column: 60, scope: !12854)
!12873 = !DILocation(line: 1287, column: 22, scope: !12854)
!12874 = !DILocation(line: 1287, column: 37, scope: !12854)
!12875 = !DILocation(line: 1290, column: 56, scope: !12854)
!12876 = !DILocation(line: 1290, column: 79, scope: !12854)
!12877 = !DILocation(line: 1290, column: 22, scope: !12854)
!12878 = !DILocation(line: 1290, column: 37, scope: !12854)
!12879 = !DILocation(line: 1293, column: 16, scope: !12854)
!12880 = !DILocation(line: 1293, column: 14, scope: !12854)
!12881 = !DILocation(line: 1294, column: 1, scope: !12854)
!12882 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11958, file: !11958, line: 1301, type: !3229, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !486)
!12883 = !DILocation(line: 1304, column: 6, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12882, file: !11958, line: 1304, column: 6)
!12885 = !DILocation(line: 1304, column: 6, scope: !12882)
!12886 = !DILocation(line: 1307, column: 5, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12884, file: !11958, line: 1305, column: 3)
!12888 = !DILocation(line: 1310, column: 5, scope: !12887)
!12889 = !DILocation(line: 1311, column: 3, scope: !12887)
!12890 = !DILocation(line: 1312, column: 1, scope: !12882)
!12891 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11958, file: !11958, line: 1318, type: !3229, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !486)
!12892 = !DILocation(line: 1323, column: 1, scope: !12891)
!12893 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12894, file: !12894, line: 147, type: !5804, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !12895)
!12894 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12895 = !{!12896}
!12896 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12893, file: !12894, line: 147, type: !132)
!12897 = !DILocation(line: 0, scope: !12893)
!12898 = !DILocation(line: 150, column: 3, scope: !12893)
!12899 = !DILocation(line: 151, column: 1, scope: !12893)
!12900 = distinct !DISubprogram(name: "LL_InitTick", scope: !12901, file: !12901, line: 222, type: !10097, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !12902)
!12901 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12902 = !{!12903, !12904}
!12903 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12900, file: !12901, line: 222, type: !132)
!12904 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12900, file: !12901, line: 222, type: !132)
!12905 = !DILocation(line: 0, scope: !12900)
!12906 = !DILocation(line: 225, column: 46, scope: !12900)
!12907 = !DILocation(line: 225, column: 55, scope: !12900)
!12908 = !DILocation(line: 225, column: 18, scope: !12900)
!12909 = !DILocation(line: 226, column: 18, scope: !12900)
!12910 = !DILocation(line: 227, column: 18, scope: !12900)
!12911 = !DILocation(line: 229, column: 1, scope: !12900)
!12912 = distinct !DISubprogram(name: "LL_mDelay", scope: !12894, file: !12894, line: 163, type: !5804, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !12913)
!12913 = !{!12914, !12915, !12916}
!12914 = !DILocalVariable(name: "Delay", arg: 1, scope: !12912, file: !12894, line: 163, type: !132)
!12915 = !DILocalVariable(name: "tmp", scope: !12912, file: !12894, line: 165, type: !131)
!12916 = !DILocalVariable(name: "tmpDelay", scope: !12912, file: !12894, line: 166, type: !132)
!12917 = !DILocation(line: 0, scope: !12912)
!12918 = !DILocation(line: 165, column: 3, scope: !12912)
!12919 = !DILocation(line: 165, column: 18, scope: !12912)
!12920 = !DILocation(line: 165, column: 33, scope: !12912)
!12921 = !DILocation(line: 169, column: 10, scope: !12912)
!12922 = !DILocation(line: 172, column: 15, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12912, file: !12894, line: 172, column: 6)
!12924 = !DILocation(line: 177, column: 3, scope: !12912)
!12925 = !DILocation(line: 179, column: 18, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12927, file: !12894, line: 179, column: 8)
!12927 = distinct !DILexicalBlock(scope: !12912, file: !12894, line: 178, column: 3)
!12928 = !DILocation(line: 177, column: 19, scope: !12912)
!12929 = !DILocation(line: 184, column: 1, scope: !12912)
!12930 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12894, file: !12894, line: 227, type: !5804, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !12931)
!12931 = !{!12932}
!12932 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12930, file: !12894, line: 227, type: !132)
!12933 = !DILocation(line: 0, scope: !12930)
!12934 = !DILocation(line: 230, column: 19, scope: !12930)
!12935 = !DILocation(line: 231, column: 1, scope: !12930)
!12936 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12894, file: !12894, line: 242, type: !12937, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !12940)
!12937 = !DISubroutineType(types: !12938)
!12938 = !{!12939, !132}
!12939 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !880, line: 194, baseType: !879)
!12940 = !{!12941, !12942, !12943}
!12941 = !DILocalVariable(name: "Frequency", arg: 1, scope: !12936, file: !12894, line: 242, type: !132)
!12942 = !DILocalVariable(name: "status", scope: !12936, file: !12894, line: 244, type: !12939)
!12943 = !DILocalVariable(name: "latency", scope: !12936, file: !12894, line: 246, type: !132)
!12944 = !DILocation(line: 0, scope: !12936)
!12945 = !DILocation(line: 249, column: 25, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12936, file: !12894, line: 249, column: 7)
!12947 = !DILocation(line: 255, column: 9, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12949, file: !12894, line: 255, column: 9)
!12949 = distinct !DILexicalBlock(scope: !12946, file: !12894, line: 254, column: 3)
!12950 = !DILocation(line: 255, column: 41, scope: !12948)
!12951 = !DILocation(line: 255, column: 9, scope: !12949)
!12952 = !DILocation(line: 257, column: 21, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12954, file: !12894, line: 257, column: 11)
!12954 = distinct !DILexicalBlock(scope: !12948, file: !12894, line: 256, column: 5)
!12955 = !DILocation(line: 284, column: 9, scope: !12949)
!12956 = !DILocation(line: 264, column: 14, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12948, file: !12894, line: 264, column: 14)
!12958 = !DILocation(line: 264, column: 46, scope: !12957)
!12959 = !DILocation(line: 264, column: 14, scope: !12948)
!12960 = !DILocation(line: 266, column: 21, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !12894, line: 266, column: 11)
!12962 = distinct !DILexicalBlock(scope: !12957, file: !12894, line: 265, column: 5)
!12963 = !DILocation(line: 275, column: 21, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !12894, line: 275, column: 11)
!12965 = distinct !DILexicalBlock(scope: !12957, file: !12894, line: 274, column: 5)
!12966 = !DILocation(line: 286, column: 7, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12968, file: !12894, line: 285, column: 5)
!12968 = distinct !DILexicalBlock(scope: !12949, file: !12894, line: 284, column: 9)
!12969 = !DILocation(line: 287, column: 5, scope: !12967)
!12970 = !DILocation(line: 289, column: 5, scope: !12949)
!12971 = !DILocation(line: 293, column: 9, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12949, file: !12894, line: 293, column: 9)
!12973 = !DILocation(line: 293, column: 31, scope: !12972)
!12974 = !DILocation(line: 293, column: 9, scope: !12949)
!12975 = !DILocation(line: 298, column: 3, scope: !12936)
!12976 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !5818, file: !5818, line: 285, type: !7567, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!12977 = !DILocation(line: 287, column: 21, scope: !12976)
!12978 = !DILocation(line: 287, column: 3, scope: !12976)
!12979 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !10096, file: !10096, line: 1897, type: !3229, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!12980 = !DILocation(line: 1899, column: 3, scope: !12979)
!12981 = !DILocation(line: 1900, column: 1, scope: !12979)
!12982 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !10096, file: !10096, line: 1843, type: !5804, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !12983)
!12983 = !{!12984}
!12984 = !DILocalVariable(name: "Latency", arg: 1, scope: !12982, file: !10096, line: 1843, type: !132)
!12985 = !DILocation(line: 0, scope: !12982)
!12986 = !DILocation(line: 1845, column: 3, scope: !12982)
!12987 = !DILocation(line: 1846, column: 1, scope: !12982)
!12988 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !10096, file: !10096, line: 1855, type: !7567, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!12989 = !DILocation(line: 1857, column: 21, scope: !12988)
!12990 = !DILocation(line: 1857, column: 3, scope: !12988)
!12991 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12894, file: !12894, line: 323, type: !12992, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13007)
!12992 = !DISubroutineType(types: !12993)
!12993 = !{!12939, !12994, !13000}
!12994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12995, size: 32)
!12995 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12901, line: 103, baseType: !12996)
!12996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12901, line: 90, size: 64, elements: !12997)
!12997 = !{!12998, !12999}
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !12996, file: !12901, line: 92, baseType: !132, size: 32)
!12999 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !12996, file: !12901, line: 98, baseType: !132, size: 32, offset: 32)
!13000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13001, size: 32)
!13001 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12901, line: 128, baseType: !13002)
!13002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12901, line: 108, size: 96, elements: !13003)
!13003 = !{!13004, !13005, !13006}
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13002, file: !12901, line: 110, baseType: !132, size: 32)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13002, file: !12901, line: 116, baseType: !132, size: 32, offset: 32)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13002, file: !12901, line: 122, baseType: !132, size: 32, offset: 64)
!13007 = !{!13008, !13009, !13010, !13011}
!13008 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12991, file: !12894, line: 323, type: !12994)
!13009 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12991, file: !12894, line: 324, type: !13000)
!13010 = !DILocalVariable(name: "status", scope: !12991, file: !12894, line: 326, type: !12939)
!13011 = !DILocalVariable(name: "pllfreq", scope: !12991, file: !12894, line: 327, type: !132)
!13012 = !DILocation(line: 0, scope: !12991)
!13013 = !DILocation(line: 330, column: 7, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !12991, file: !12894, line: 330, column: 7)
!13015 = !DILocation(line: 330, column: 26, scope: !13014)
!13016 = !DILocation(line: 330, column: 7, scope: !12991)
!13017 = !DILocation(line: 333, column: 15, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !13014, file: !12894, line: 331, column: 3)
!13019 = !DILocation(line: 336, column: 9, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13018, file: !12894, line: 336, column: 9)
!13021 = !DILocation(line: 336, column: 30, scope: !13020)
!13022 = !DILocation(line: 336, column: 9, scope: !13018)
!13023 = !DILocation(line: 338, column: 7, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13020, file: !12894, line: 337, column: 5)
!13025 = !DILocation(line: 339, column: 7, scope: !13024)
!13026 = !DILocation(line: 339, column: 14, scope: !13024)
!13027 = !DILocation(line: 339, column: 35, scope: !13024)
!13028 = distinct !{!13028, !13025, !13029}
!13029 = !DILocation(line: 342, column: 7, scope: !13024)
!13030 = !DILocation(line: 346, column: 76, scope: !13018)
!13031 = !DILocation(line: 346, column: 105, scope: !13018)
!13032 = !DILocation(line: 346, column: 5, scope: !13018)
!13033 = !DILocation(line: 349, column: 14, scope: !13018)
!13034 = !DILocation(line: 350, column: 3, scope: !13018)
!13035 = !DILocation(line: 0, scope: !13014)
!13036 = !DILocation(line: 357, column: 3, scope: !12991)
!13037 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12894, file: !12894, line: 487, type: !13038, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13040)
!13038 = !DISubroutineType(types: !13039)
!13039 = !{!12939}
!13040 = !{!13041}
!13041 = !DILocalVariable(name: "status", scope: !13037, file: !12894, line: 489, type: !12939)
!13042 = !DILocation(line: 0, scope: !13037)
!13043 = !DILocation(line: 492, column: 7, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13037, file: !12894, line: 492, column: 7)
!13045 = !DILocation(line: 492, column: 28, scope: !13044)
!13046 = !DILocation(line: 492, column: 7, scope: !13037)
!13047 = !DILocation(line: 498, column: 3, scope: !13037)
!13048 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12894, file: !12894, line: 457, type: !13049, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13051)
!13049 = !DISubroutineType(types: !13050)
!13050 = !{!132, !132, !12994}
!13051 = !{!13052, !13053, !13054}
!13052 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13048, file: !12894, line: 457, type: !132)
!13053 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13048, file: !12894, line: 457, type: !12994)
!13054 = !DILocalVariable(name: "pllfreq", scope: !13048, file: !12894, line: 459, type: !132)
!13055 = !DILocation(line: 0, scope: !13048)
!13056 = !DILocation(line: 470, column: 68, scope: !13048)
!13057 = !DILocation(line: 470, column: 75, scope: !13048)
!13058 = !DILocation(line: 470, column: 35, scope: !13048)
!13059 = !DILocation(line: 470, column: 34, scope: !13048)
!13060 = !DILocation(line: 470, column: 32, scope: !13048)
!13061 = !DILocation(line: 475, column: 46, scope: !13048)
!13062 = !DILocation(line: 475, column: 53, scope: !13048)
!13063 = !DILocation(line: 475, column: 76, scope: !13048)
!13064 = !DILocation(line: 475, column: 21, scope: !13048)
!13065 = !DILocation(line: 478, column: 3, scope: !13048)
!13066 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8857, file: !8857, line: 612, type: !7567, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13067 = !DILocation(line: 614, column: 12, scope: !13066)
!13068 = !DILocation(line: 614, column: 11, scope: !13066)
!13069 = !DILocation(line: 614, column: 3, scope: !13066)
!13070 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8857, file: !8857, line: 592, type: !3229, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13071 = !DILocation(line: 594, column: 3, scope: !13070)
!13072 = !DILocation(line: 595, column: 1, scope: !13070)
!13073 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8857, file: !8857, line: 1219, type: !8980, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13074)
!13074 = !{!13075, !13076, !13077}
!13075 = !DILocalVariable(name: "Source", arg: 1, scope: !13073, file: !8857, line: 1219, type: !132)
!13076 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !13073, file: !8857, line: 1219, type: !132)
!13077 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !13073, file: !8857, line: 1219, type: !132)
!13078 = !DILocation(line: 0, scope: !13073)
!13079 = !DILocation(line: 1221, column: 3, scope: !13073)
!13080 = !DILocation(line: 1222, column: 1, scope: !13073)
!13081 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12894, file: !12894, line: 510, type: !13082, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13084)
!13082 = !DISubroutineType(types: !13083)
!13083 = !{!12939, !132, !13000}
!13084 = !{!13085, !13086, !13087, !13088}
!13085 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13081, file: !12894, line: 510, type: !132)
!13086 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13081, file: !12894, line: 510, type: !13000)
!13087 = !DILocalVariable(name: "status", scope: !13081, file: !12894, line: 512, type: !12939)
!13088 = !DILocalVariable(name: "hclk_frequency", scope: !13081, file: !12894, line: 513, type: !132)
!13089 = !DILocation(line: 0, scope: !13081)
!13090 = !DILocation(line: 520, column: 20, scope: !13081)
!13091 = !DILocation(line: 523, column: 7, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13081, file: !12894, line: 523, column: 7)
!13093 = !DILocation(line: 523, column: 23, scope: !13092)
!13094 = !DILocation(line: 523, column: 7, scope: !13081)
!13095 = !DILocation(line: 526, column: 14, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13092, file: !12894, line: 524, column: 3)
!13097 = !DILocation(line: 530, column: 14, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13081, file: !12894, line: 530, column: 7)
!13099 = !DILocation(line: 530, column: 7, scope: !13081)
!13100 = !DILocation(line: 533, column: 5, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13098, file: !12894, line: 531, column: 3)
!13102 = !DILocation(line: 534, column: 5, scope: !13101)
!13103 = !DILocation(line: 534, column: 12, scope: !13101)
!13104 = !DILocation(line: 534, column: 33, scope: !13101)
!13105 = distinct !{!13105, !13102, !13106}
!13106 = !DILocation(line: 537, column: 5, scope: !13101)
!13107 = !DILocation(line: 540, column: 49, scope: !13101)
!13108 = !DILocation(line: 540, column: 5, scope: !13101)
!13109 = !DILocation(line: 541, column: 5, scope: !13101)
!13110 = !DILocation(line: 542, column: 5, scope: !13101)
!13111 = !DILocation(line: 542, column: 12, scope: !13101)
!13112 = !DILocation(line: 542, column: 37, scope: !13101)
!13113 = distinct !{!13113, !13110, !13114}
!13114 = !DILocation(line: 545, column: 5, scope: !13101)
!13115 = !DILocation(line: 548, column: 50, scope: !13101)
!13116 = !DILocation(line: 548, column: 5, scope: !13101)
!13117 = !DILocation(line: 549, column: 50, scope: !13101)
!13118 = !DILocation(line: 549, column: 5, scope: !13101)
!13119 = !DILocation(line: 550, column: 3, scope: !13101)
!13120 = !DILocation(line: 553, column: 7, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13081, file: !12894, line: 553, column: 7)
!13122 = !DILocation(line: 553, column: 23, scope: !13121)
!13123 = !DILocation(line: 553, column: 7, scope: !13081)
!13124 = !DILocation(line: 556, column: 14, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13121, file: !12894, line: 554, column: 3)
!13126 = !DILocation(line: 557, column: 3, scope: !13125)
!13127 = !DILocation(line: 560, column: 14, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13081, file: !12894, line: 560, column: 7)
!13129 = !DILocation(line: 560, column: 7, scope: !13081)
!13130 = !DILocation(line: 562, column: 5, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13128, file: !12894, line: 561, column: 3)
!13132 = !DILocation(line: 563, column: 3, scope: !13131)
!13133 = !DILocation(line: 565, column: 3, scope: !13081)
!13134 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8857, file: !8857, line: 1169, type: !3229, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13135 = !DILocation(line: 1171, column: 3, scope: !13134)
!13136 = !DILocation(line: 1172, column: 1, scope: !13134)
!13137 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8857, file: !8857, line: 1190, type: !7567, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13138 = !DILocation(line: 1192, column: 12, scope: !13137)
!13139 = !DILocation(line: 1192, column: 11, scope: !13137)
!13140 = !DILocation(line: 1192, column: 3, scope: !13137)
!13141 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8857, file: !8857, line: 944, type: !5804, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13142)
!13142 = !{!13143}
!13143 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13141, file: !8857, line: 944, type: !132)
!13144 = !DILocation(line: 0, scope: !13141)
!13145 = !DILocation(line: 946, column: 3, scope: !13141)
!13146 = !DILocation(line: 947, column: 1, scope: !13141)
!13147 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8857, file: !8857, line: 910, type: !5804, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13148)
!13148 = !{!13149}
!13149 = !DILocalVariable(name: "Source", arg: 1, scope: !13147, file: !8857, line: 910, type: !132)
!13150 = !DILocation(line: 0, scope: !13147)
!13151 = !DILocation(line: 912, column: 3, scope: !13147)
!13152 = !DILocation(line: 913, column: 1, scope: !13147)
!13153 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8857, file: !8857, line: 924, type: !7567, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13154 = !DILocation(line: 926, column: 21, scope: !13153)
!13155 = !DILocation(line: 926, column: 3, scope: !13153)
!13156 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8857, file: !8857, line: 960, type: !5804, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13157)
!13157 = !{!13158}
!13158 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13156, file: !8857, line: 960, type: !132)
!13159 = !DILocation(line: 0, scope: !13156)
!13160 = !DILocation(line: 962, column: 3, scope: !13156)
!13161 = !DILocation(line: 963, column: 1, scope: !13156)
!13162 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8857, file: !8857, line: 976, type: !5804, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13163)
!13163 = !{!13164}
!13164 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13162, file: !8857, line: 976, type: !132)
!13165 = !DILocation(line: 0, scope: !13162)
!13166 = !DILocation(line: 978, column: 3, scope: !13162)
!13167 = !DILocation(line: 979, column: 1, scope: !13162)
!13168 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12894, file: !12894, line: 385, type: !13169, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !13171)
!13169 = !DISubroutineType(types: !13170)
!13170 = !{!12939, !132, !132, !12994, !13000}
!13171 = !{!13172, !13173, !13174, !13175, !13176, !13177}
!13172 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13168, file: !12894, line: 385, type: !132)
!13173 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13168, file: !12894, line: 385, type: !132)
!13174 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13168, file: !12894, line: 386, type: !12994)
!13175 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13168, file: !12894, line: 386, type: !13000)
!13176 = !DILocalVariable(name: "status", scope: !13168, file: !12894, line: 388, type: !12939)
!13177 = !DILocalVariable(name: "pllfreq", scope: !13168, file: !12894, line: 389, type: !132)
!13178 = !DILocation(line: 0, scope: !13168)
!13179 = !DILocation(line: 396, column: 7, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13168, file: !12894, line: 396, column: 7)
!13181 = !DILocation(line: 396, column: 26, scope: !13180)
!13182 = !DILocation(line: 396, column: 7, scope: !13168)
!13183 = !DILocation(line: 400, column: 15, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13180, file: !12894, line: 397, column: 3)
!13185 = !DILocation(line: 403, column: 9, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13184, file: !12894, line: 403, column: 9)
!13187 = !DILocation(line: 403, column: 30, scope: !13186)
!13188 = !DILocation(line: 403, column: 9, scope: !13184)
!13189 = !DILocation(line: 406, column: 21, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13191, file: !12894, line: 406, column: 11)
!13191 = distinct !DILexicalBlock(scope: !13186, file: !12894, line: 404, column: 5)
!13192 = !DILocation(line: 406, column: 11, scope: !13191)
!13193 = !DILocation(line: 408, column: 9, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13190, file: !12894, line: 407, column: 7)
!13195 = !DILocation(line: 409, column: 7, scope: !13194)
!13196 = !DILocation(line: 412, column: 9, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13190, file: !12894, line: 411, column: 7)
!13198 = !DILocation(line: 416, column: 7, scope: !13191)
!13199 = !DILocation(line: 417, column: 7, scope: !13191)
!13200 = !DILocation(line: 417, column: 14, scope: !13191)
!13201 = !DILocation(line: 417, column: 35, scope: !13191)
!13202 = distinct !{!13202, !13199, !13203}
!13203 = !DILocation(line: 420, column: 7, scope: !13191)
!13204 = !DILocation(line: 424, column: 78, scope: !13184)
!13205 = !DILocation(line: 424, column: 107, scope: !13184)
!13206 = !DILocation(line: 424, column: 7, scope: !13184)
!13207 = !DILocation(line: 427, column: 14, scope: !13184)
!13208 = !DILocation(line: 428, column: 3, scope: !13184)
!13209 = !DILocation(line: 0, scope: !13180)
!13210 = !DILocation(line: 435, column: 3, scope: !13168)
!13211 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8857, file: !8857, line: 545, type: !7567, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13212 = !DILocation(line: 547, column: 12, scope: !13211)
!13213 = !DILocation(line: 547, column: 11, scope: !13211)
!13214 = !DILocation(line: 547, column: 3, scope: !13211)
!13215 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8857, file: !8857, line: 505, type: !3229, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13216 = !DILocation(line: 507, column: 3, scope: !13215)
!13217 = !DILocation(line: 508, column: 1, scope: !13215)
!13218 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8857, file: !8857, line: 515, type: !3229, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13219 = !DILocation(line: 517, column: 3, scope: !13218)
!13220 = !DILocation(line: 518, column: 1, scope: !13218)
!13221 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8857, file: !8857, line: 525, type: !3229, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !486)
!13222 = !DILocation(line: 527, column: 3, scope: !13221)
!13223 = !DILocation(line: 528, column: 1, scope: !13221)
!13224 = distinct !DISubprogram(name: "z_device_state_init", scope: !13225, file: !13225, line: 23, type: !3229, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13226)
!13225 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13226 = !{!13227}
!13227 = !DILocalVariable(name: "dev", scope: !13224, file: !13225, line: 25, type: !13228)
!13228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13229, size: 32)
!13229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13230)
!13230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !165, line: 378, size: 192, elements: !13231)
!13231 = !{!13232, !13233, !13234, !13235, !13241, !13242}
!13232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13230, file: !165, line: 380, baseType: !168, size: 32)
!13233 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13230, file: !165, line: 382, baseType: !13, size: 32, offset: 32)
!13234 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13230, file: !165, line: 384, baseType: !13, size: 32, offset: 64)
!13235 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13230, file: !165, line: 386, baseType: !13236, size: 32, offset: 96)
!13236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13237, size: 32)
!13237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !165, line: 351, size: 16, elements: !13238)
!13238 = !{!13239, !13240}
!13239 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13237, file: !165, line: 359, baseType: !176, size: 8)
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13237, file: !165, line: 364, baseType: !179, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13241 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13230, file: !165, line: 388, baseType: !102, size: 32, offset: 128)
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13230, file: !165, line: 396, baseType: !182, size: 32, offset: 160)
!13243 = !DILocation(line: 0, scope: !13224)
!13244 = !DILocation(line: 31, column: 1, scope: !13224)
!13245 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13225, file: !13225, line: 33, type: !13246, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13248)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{!13228, !168}
!13248 = !{!13249, !13250}
!13249 = !DILocalVariable(name: "name", arg: 1, scope: !13245, file: !13225, line: 33, type: !168)
!13250 = !DILocalVariable(name: "dev", scope: !13245, file: !13225, line: 35, type: !13228)
!13251 = !DILocation(line: 0, scope: !13245)
!13252 = !DILocation(line: 40, column: 12, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13245, file: !13225, line: 40, column: 6)
!13254 = !DILocation(line: 40, column: 21, scope: !13253)
!13255 = !DILocation(line: 40, column: 25, scope: !13253)
!13256 = !DILocation(line: 40, column: 33, scope: !13253)
!13257 = !DILocation(line: 40, column: 6, scope: !13245)
!13258 = !DILocation(line: 55, column: 2, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13245, file: !13225, line: 55, column: 2)
!13260 = !DILocation(line: 50, column: 7, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !13225, line: 50, column: 7)
!13262 = distinct !DILexicalBlock(scope: !13263, file: !13225, line: 49, column: 57)
!13263 = distinct !DILexicalBlock(scope: !13264, file: !13225, line: 49, column: 2)
!13264 = distinct !DILexicalBlock(scope: !13245, file: !13225, line: 49, column: 2)
!13265 = !DILocation(line: 50, column: 30, scope: !13261)
!13266 = !DILocation(line: 50, column: 39, scope: !13261)
!13267 = !DILocation(line: 50, column: 44, scope: !13261)
!13268 = !DILocation(line: 50, column: 7, scope: !13262)
!13269 = !DILocation(line: 49, column: 53, scope: !13263)
!13270 = !DILocation(line: 49, column: 33, scope: !13263)
!13271 = !DILocation(line: 49, column: 2, scope: !13264)
!13272 = distinct !{!13272, !13271, !13273}
!13273 = !DILocation(line: 53, column: 2, scope: !13264)
!13274 = !DILocation(line: 56, column: 7, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13276, file: !13225, line: 56, column: 7)
!13276 = distinct !DILexicalBlock(scope: !13277, file: !13225, line: 55, column: 57)
!13277 = distinct !DILexicalBlock(scope: !13259, file: !13225, line: 55, column: 2)
!13278 = !DILocation(line: 56, column: 30, scope: !13275)
!13279 = !DILocation(line: 56, column: 52, scope: !13275)
!13280 = !DILocation(line: 56, column: 34, scope: !13275)
!13281 = !DILocation(line: 56, column: 58, scope: !13275)
!13282 = !DILocation(line: 56, column: 7, scope: !13276)
!13283 = !DILocation(line: 55, column: 53, scope: !13277)
!13284 = !DILocation(line: 55, column: 33, scope: !13277)
!13285 = distinct !{!13285, !13258, !13286}
!13286 = !DILocation(line: 59, column: 2, scope: !13259)
!13287 = !DILocation(line: 62, column: 1, scope: !13245)
!13288 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13225, file: !13225, line: 93, type: !13289, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13291)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{!179, !13228}
!13291 = !{!13292}
!13292 = !DILocalVariable(name: "dev", arg: 1, scope: !13288, file: !13225, line: 93, type: !13228)
!13293 = !DILocation(line: 0, scope: !13288)
!13294 = !DILocation(line: 99, column: 10, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13288, file: !13225, line: 99, column: 6)
!13296 = !DILocation(line: 99, column: 6, scope: !13288)
!13297 = !DILocation(line: 103, column: 14, scope: !13288)
!13298 = !DILocation(line: 103, column: 21, scope: !13288)
!13299 = !DILocation(line: 103, column: 33, scope: !13288)
!13300 = !DILocation(line: 103, column: 49, scope: !13288)
!13301 = !DILocation(line: 103, column: 58, scope: !13288)
!13302 = !DILocation(line: 104, column: 1, scope: !13288)
!13303 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13225, file: !13225, line: 87, type: !13304, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13307)
!13304 = !DISubroutineType(types: !13305)
!13305 = !{!369, !13306}
!13306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13228, size: 32)
!13307 = !{!13308}
!13308 = !DILocalVariable(name: "devices", arg: 1, scope: !13303, file: !13225, line: 87, type: !13306)
!13309 = !DILocation(line: 0, scope: !13303)
!13310 = !DILocation(line: 89, column: 11, scope: !13303)
!13311 = !DILocation(line: 90, column: 2, scope: !13303)
!13312 = distinct !DISubprogram(name: "device_required_foreach", scope: !13225, file: !13225, line: 125, type: !13313, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13319)
!13313 = !DISubroutineType(types: !13314)
!13314 = !{!103, !13228, !13315, !102}
!13315 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !165, line: 471, baseType: !13316)
!13316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13317, size: 32)
!13317 = !DISubroutineType(types: !13318)
!13318 = !{!103, !13228, !102}
!13319 = !{!13320, !13321, !13322, !13323, !13324}
!13320 = !DILocalVariable(name: "dev", arg: 1, scope: !13312, file: !13225, line: 125, type: !13228)
!13321 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13312, file: !13225, line: 126, type: !13315)
!13322 = !DILocalVariable(name: "context", arg: 3, scope: !13312, file: !13225, line: 127, type: !102)
!13323 = !DILocalVariable(name: "handle_count", scope: !13312, file: !13225, line: 129, type: !369)
!13324 = !DILocalVariable(name: "handles", scope: !13312, file: !13225, line: 130, type: !182)
!13325 = !DILocation(line: 0, scope: !13312)
!13326 = !DILocation(line: 129, column: 2, scope: !13312)
!13327 = !DILocation(line: 129, column: 9, scope: !13312)
!13328 = !DILocation(line: 130, column: 35, scope: !13312)
!13329 = !DILocation(line: 132, column: 33, scope: !13312)
!13330 = !DILocation(line: 132, column: 9, scope: !13312)
!13331 = !DILocation(line: 133, column: 1, scope: !13312)
!13332 = !DILocation(line: 132, column: 2, scope: !13312)
!13333 = distinct !DISubprogram(name: "device_required_handles_get", scope: !165, file: !165, line: 493, type: !13334, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13336)
!13334 = !DISubroutineType(types: !13335)
!13335 = !{!182, !13228, !2652}
!13336 = !{!13337, !13338, !13339, !13340}
!13337 = !DILocalVariable(name: "dev", arg: 1, scope: !13333, file: !165, line: 493, type: !13228)
!13338 = !DILocalVariable(name: "count", arg: 2, scope: !13333, file: !165, line: 493, type: !2652)
!13339 = !DILocalVariable(name: "rv", scope: !13333, file: !165, line: 495, type: !182)
!13340 = !DILocalVariable(name: "i", scope: !13341, file: !165, line: 498, type: !369)
!13341 = distinct !DILexicalBlock(scope: !13342, file: !165, line: 497, column: 18)
!13342 = distinct !DILexicalBlock(scope: !13333, file: !165, line: 497, column: 6)
!13343 = !DILocation(line: 0, scope: !13333)
!13344 = !DILocation(line: 495, column: 35, scope: !13333)
!13345 = !DILocation(line: 497, column: 9, scope: !13342)
!13346 = !DILocation(line: 497, column: 6, scope: !13333)
!13347 = !DILocation(line: 0, scope: !13341)
!13348 = !DILocation(line: 500, column: 11, scope: !13341)
!13349 = !DILocation(line: 500, column: 40, scope: !13341)
!13350 = !DILocation(line: 502, column: 4, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13341, file: !165, line: 501, column: 40)
!13352 = distinct !{!13352, !13353, !13354}
!13353 = !DILocation(line: 500, column: 3, scope: !13341)
!13354 = !DILocation(line: 503, column: 3, scope: !13341)
!13355 = !DILocation(line: 504, column: 10, scope: !13341)
!13356 = !DILocation(line: 505, column: 2, scope: !13341)
!13357 = !DILocation(line: 507, column: 2, scope: !13333)
!13358 = distinct !DISubprogram(name: "device_visitor", scope: !13225, file: !13225, line: 106, type: !13359, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{!103, !182, !369, !13315, !102}
!13361 = !{!13362, !13363, !13364, !13365, !13366, !13368, !13371, !13372}
!13362 = !DILocalVariable(name: "handles", arg: 1, scope: !13358, file: !13225, line: 106, type: !182)
!13363 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13358, file: !13225, line: 107, type: !369)
!13364 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13358, file: !13225, line: 108, type: !13315)
!13365 = !DILocalVariable(name: "context", arg: 4, scope: !13358, file: !13225, line: 109, type: !102)
!13366 = !DILocalVariable(name: "i", scope: !13367, file: !13225, line: 112, type: !369)
!13367 = distinct !DILexicalBlock(scope: !13358, file: !13225, line: 112, column: 2)
!13368 = !DILocalVariable(name: "dh", scope: !13369, file: !13225, line: 113, type: !184)
!13369 = distinct !DILexicalBlock(scope: !13370, file: !13225, line: 112, column: 44)
!13370 = distinct !DILexicalBlock(scope: !13367, file: !13225, line: 112, column: 2)
!13371 = !DILocalVariable(name: "rdev", scope: !13369, file: !13225, line: 114, type: !13228)
!13372 = !DILocalVariable(name: "rc", scope: !13369, file: !13225, line: 115, type: !103)
!13373 = !DILocation(line: 0, scope: !13358)
!13374 = !DILocation(line: 0, scope: !13367)
!13375 = !DILocation(line: 112, column: 23, scope: !13370)
!13376 = !DILocation(line: 112, column: 2, scope: !13367)
!13377 = distinct !{!13377, !13376, !13378}
!13378 = !DILocation(line: 120, column: 2, scope: !13367)
!13379 = !DILocation(line: 113, column: 24, scope: !13369)
!13380 = !DILocation(line: 0, scope: !13369)
!13381 = !DILocation(line: 114, column: 31, scope: !13369)
!13382 = !DILocation(line: 115, column: 12, scope: !13369)
!13383 = !DILocation(line: 117, column: 10, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13369, file: !13225, line: 117, column: 7)
!13385 = !DILocation(line: 112, column: 39, scope: !13370)
!13386 = !DILocation(line: 123, column: 1, scope: !13358)
!13387 = distinct !DISubprogram(name: "device_from_handle", scope: !165, file: !165, line: 439, type: !13388, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13390)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{!13228, !184}
!13390 = !{!13391, !13392, !13393}
!13391 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13387, file: !165, line: 439, type: !184)
!13392 = !DILocalVariable(name: "dev", scope: !13387, file: !165, line: 443, type: !13228)
!13393 = !DILocalVariable(name: "numdev", scope: !13387, file: !165, line: 444, type: !369)
!13394 = !DILocation(line: 0, scope: !13387)
!13395 = !DILocation(line: 446, column: 7, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13387, file: !165, line: 446, column: 6)
!13397 = !DILocation(line: 446, column: 18, scope: !13396)
!13398 = !DILocation(line: 446, column: 23, scope: !13396)
!13399 = !DILocation(line: 450, column: 2, scope: !13387)
!13400 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13225, file: !13225, line: 135, type: !13313, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13401)
!13401 = !{!13402, !13403, !13404, !13405, !13406}
!13402 = !DILocalVariable(name: "dev", arg: 1, scope: !13400, file: !13225, line: 135, type: !13228)
!13403 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13400, file: !13225, line: 136, type: !13315)
!13404 = !DILocalVariable(name: "context", arg: 3, scope: !13400, file: !13225, line: 137, type: !102)
!13405 = !DILocalVariable(name: "handle_count", scope: !13400, file: !13225, line: 139, type: !369)
!13406 = !DILocalVariable(name: "handles", scope: !13400, file: !13225, line: 140, type: !182)
!13407 = !DILocation(line: 0, scope: !13400)
!13408 = !DILocation(line: 139, column: 2, scope: !13400)
!13409 = !DILocation(line: 139, column: 9, scope: !13400)
!13410 = !DILocation(line: 140, column: 35, scope: !13400)
!13411 = !DILocation(line: 142, column: 33, scope: !13400)
!13412 = !DILocation(line: 142, column: 9, scope: !13400)
!13413 = !DILocation(line: 143, column: 1, scope: !13400)
!13414 = !DILocation(line: 142, column: 2, scope: !13400)
!13415 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !165, file: !165, line: 573, type: !13334, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13416)
!13416 = !{!13417, !13418, !13419, !13420, !13421}
!13417 = !DILocalVariable(name: "dev", arg: 1, scope: !13415, file: !165, line: 573, type: !13228)
!13418 = !DILocalVariable(name: "count", arg: 2, scope: !13415, file: !165, line: 573, type: !2652)
!13419 = !DILocalVariable(name: "rv", scope: !13415, file: !165, line: 575, type: !182)
!13420 = !DILocalVariable(name: "region", scope: !13415, file: !165, line: 576, type: !369)
!13421 = !DILocalVariable(name: "i", scope: !13415, file: !165, line: 577, type: !369)
!13422 = !DILocation(line: 0, scope: !13415)
!13423 = !DILocation(line: 575, column: 35, scope: !13415)
!13424 = !DILocation(line: 579, column: 9, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13415, file: !165, line: 579, column: 6)
!13426 = !DILocation(line: 579, column: 6, scope: !13415)
!13427 = !DILocation(line: 582, column: 8, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13429, file: !165, line: 582, column: 8)
!13429 = distinct !DILexicalBlock(scope: !13430, file: !165, line: 581, column: 23)
!13430 = distinct !DILexicalBlock(scope: !13425, file: !165, line: 579, column: 18)
!13431 = !DILocation(line: 582, column: 12, scope: !13428)
!13432 = !DILocation(line: 585, column: 6, scope: !13429)
!13433 = !DILocation(line: 0, scope: !13430)
!13434 = !DILocation(line: 581, column: 17, scope: !13430)
!13435 = !DILocation(line: 581, column: 3, scope: !13430)
!13436 = !DILocation(line: 588, column: 10, scope: !13430)
!13437 = !DILocation(line: 588, column: 16, scope: !13430)
!13438 = !DILocation(line: 589, column: 4, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13430, file: !165, line: 588, column: 39)
!13440 = !DILocation(line: 588, column: 3, scope: !13430)
!13441 = distinct !{!13441, !13440, !13442}
!13442 = !DILocation(line: 590, column: 3, scope: !13430)
!13443 = !DILocation(line: 591, column: 10, scope: !13430)
!13444 = !DILocation(line: 592, column: 2, scope: !13430)
!13445 = !DILocation(line: 575, column: 25, scope: !13415)
!13446 = !DILocation(line: 594, column: 2, scope: !13415)
!13447 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1987, file: !1987, line: 49, type: !5989, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !486)
!13448 = !DILocation(line: 51, column: 10, scope: !13447)
!13449 = !DILocation(line: 51, column: 20, scope: !13447)
!13450 = !DILocation(line: 51, column: 2, scope: !13447)
!13451 = distinct !DISubprogram(name: "coredump", scope: !3196, file: !3196, line: 209, type: !13452, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13598)
!13452 = !DISubroutineType(types: !13453)
!13453 = !{null, !32, !13454, !13498}
!13454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13455, size: 32)
!13455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13456)
!13456 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2859, line: 141, baseType: !13457)
!13457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2859, line: 97, size: 256, elements: !13458)
!13458 = !{!13459}
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13457, file: !2859, line: 107, baseType: !13460, size: 256)
!13460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2859, line: 98, size: 256, elements: !13461)
!13461 = !{!13462, !13467, !13472, !13477, !13482, !13487, !13492, !13497}
!13462 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !2859, line: 99, baseType: !13463, size: 32)
!13463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !2859, line: 99, size: 32, elements: !13464)
!13464 = !{!13465, !13466}
!13465 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13463, file: !2859, line: 99, baseType: !132, size: 32)
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13463, file: !2859, line: 99, baseType: !132, size: 32)
!13467 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !2859, line: 100, baseType: !13468, size: 32, offset: 32)
!13468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !2859, line: 100, size: 32, elements: !13469)
!13469 = !{!13470, !13471}
!13470 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13468, file: !2859, line: 100, baseType: !132, size: 32)
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13468, file: !2859, line: 100, baseType: !132, size: 32)
!13472 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !2859, line: 101, baseType: !13473, size: 32, offset: 64)
!13473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !2859, line: 101, size: 32, elements: !13474)
!13474 = !{!13475, !13476}
!13475 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13473, file: !2859, line: 101, baseType: !132, size: 32)
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13473, file: !2859, line: 101, baseType: !132, size: 32)
!13477 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !2859, line: 102, baseType: !13478, size: 32, offset: 96)
!13478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !2859, line: 102, size: 32, elements: !13479)
!13479 = !{!13480, !13481}
!13480 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13478, file: !2859, line: 102, baseType: !132, size: 32)
!13481 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13478, file: !2859, line: 102, baseType: !132, size: 32)
!13482 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !2859, line: 103, baseType: !13483, size: 32, offset: 128)
!13483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !2859, line: 103, size: 32, elements: !13484)
!13484 = !{!13485, !13486}
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13483, file: !2859, line: 103, baseType: !132, size: 32)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13483, file: !2859, line: 103, baseType: !132, size: 32)
!13487 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !2859, line: 104, baseType: !13488, size: 32, offset: 160)
!13488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !2859, line: 104, size: 32, elements: !13489)
!13489 = !{!13490, !13491}
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13488, file: !2859, line: 104, baseType: !132, size: 32)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13488, file: !2859, line: 104, baseType: !132, size: 32)
!13492 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !2859, line: 105, baseType: !13493, size: 32, offset: 192)
!13493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !2859, line: 105, size: 32, elements: !13494)
!13494 = !{!13495, !13496}
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13493, file: !2859, line: 105, baseType: !132, size: 32)
!13496 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13493, file: !2859, line: 105, baseType: !132, size: 32)
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13460, file: !2859, line: 106, baseType: !132, size: 32, offset: 224)
!13498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13499, size: 32)
!13499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !13500)
!13500 = !{!13501, !13559, !13571, !13572, !13573, !13574, !13580, !13593}
!13501 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13499, file: !380, line: 247, baseType: !13502, size: 384)
!13502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !13503)
!13503 = !{!13504, !13528, !13535, !13536, !13537, !13546, !13547, !13548}
!13504 = !DIDerivedType(tag: DW_TAG_member, scope: !13502, file: !380, line: 60, baseType: !13505, size: 64)
!13505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13502, file: !380, line: 60, size: 64, elements: !13506)
!13506 = !{!13507, !13522}
!13507 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13505, file: !380, line: 61, baseType: !13508, size: 64)
!13508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !334, line: 49, baseType: !13509)
!13509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !334, line: 37, size: 64, elements: !13510)
!13510 = !{!13511, !13517}
!13511 = !DIDerivedType(tag: DW_TAG_member, scope: !13509, file: !334, line: 38, baseType: !13512, size: 32)
!13512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13509, file: !334, line: 38, size: 32, elements: !13513)
!13513 = !{!13514, !13516}
!13514 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13512, file: !334, line: 39, baseType: !13515, size: 32)
!13515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13509, size: 32)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13512, file: !334, line: 40, baseType: !13515, size: 32)
!13517 = !DIDerivedType(tag: DW_TAG_member, scope: !13509, file: !334, line: 42, baseType: !13518, size: 32, offset: 32)
!13518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13509, file: !334, line: 42, size: 32, elements: !13519)
!13519 = !{!13520, !13521}
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13518, file: !334, line: 43, baseType: !13515, size: 32)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13518, file: !334, line: 44, baseType: !13515, size: 32)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13505, file: !380, line: 62, baseType: !13523, size: 64)
!13523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !13524)
!13524 = !{!13525}
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13523, file: !405, line: 50, baseType: !13526, size: 64)
!13526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13527, size: 64, elements: !410)
!13527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13523, size: 32)
!13528 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13502, file: !380, line: 68, baseType: !13529, size: 32, offset: 64)
!13529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13530, size: 32)
!13530 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !13531)
!13531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !13532)
!13532 = !{!13533}
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13531, file: !329, line: 232, baseType: !13534, size: 64)
!13534 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !13509)
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13502, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13502, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!13537 = !DIDerivedType(tag: DW_TAG_member, scope: !13502, file: !380, line: 90, baseType: !13538, size: 16, offset: 112)
!13538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13502, file: !380, line: 90, size: 16, elements: !13539)
!13539 = !{!13540, !13545}
!13540 = !DIDerivedType(tag: DW_TAG_member, scope: !13538, file: !380, line: 91, baseType: !13541, size: 16)
!13541 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13538, file: !380, line: 91, size: 16, elements: !13542)
!13542 = !{!13543, !13544}
!13543 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13541, file: !380, line: 96, baseType: !428, size: 8)
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13541, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13538, file: !380, line: 100, baseType: !353, size: 16)
!13546 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13502, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13502, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13502, file: !380, line: 131, baseType: !13549, size: 192, offset: 192)
!13549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !13550)
!13550 = !{!13551, !13552, !13558}
!13551 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13549, file: !329, line: 245, baseType: !13508, size: 64)
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13549, file: !329, line: 246, baseType: !13553, size: 32, offset: 64)
!13553 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !13554)
!13554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13555, size: 32)
!13555 = !DISubroutineType(types: !13556)
!13556 = !{null, !13557}
!13557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13549, size: 32)
!13558 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13549, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13499, file: !380, line: 250, baseType: !13560, size: 288, offset: 384)
!13560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !13561)
!13561 = !{!13562, !13563, !13564, !13565, !13566, !13567, !13568, !13569, !13570}
!13562 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13560, file: !449, line: 26, baseType: !132, size: 32)
!13563 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13560, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13560, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13560, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!13566 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13560, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!13567 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13560, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!13568 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13560, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13560, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!13570 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13560, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13499, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!13572 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13499, file: !380, line: 256, baseType: !13530, size: 64, offset: 704)
!13573 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13499, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!13574 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13499, file: !380, line: 300, baseType: !13575, size: 96, offset: 800)
!13575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !13576)
!13576 = !{!13577, !13578, !13579}
!13577 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13575, file: !380, line: 153, baseType: !22, size: 32)
!13578 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13575, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!13579 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13575, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13499, file: !380, line: 325, baseType: !13581, size: 32, offset: 896)
!13581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13582, size: 32)
!13582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !13583)
!13583 = !{!13584, !13590, !13591}
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13582, file: !325, line: 5074, baseType: !13585, size: 96)
!13585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !13586)
!13586 = !{!13587, !13588, !13589}
!13587 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13585, file: !475, line: 57, baseType: !478, size: 32)
!13588 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13585, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!13589 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13585, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!13590 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13582, file: !325, line: 5075, baseType: !13530, size: 64, offset: 96)
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13582, file: !325, line: 5076, baseType: !13592, offset: 160)
!13592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!13593 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13499, file: !380, line: 343, baseType: !13594, size: 64, offset: 928)
!13594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !13595)
!13595 = !{!13596, !13597}
!13596 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13594, file: !449, line: 63, baseType: !132, size: 32)
!13597 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13594, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!13598 = !{!13599, !13600, !13601}
!13599 = !DILocalVariable(name: "reason", arg: 1, scope: !13451, file: !3196, line: 209, type: !32)
!13600 = !DILocalVariable(name: "esf", arg: 2, scope: !13451, file: !3196, line: 209, type: !13454)
!13601 = !DILocalVariable(name: "thread", arg: 3, scope: !13451, file: !3196, line: 210, type: !13498)
!13602 = !DILocation(line: 0, scope: !13451)
!13603 = !DILocation(line: 212, column: 1, scope: !13451)
!13604 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3196, file: !3196, line: 214, type: !13605, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13607)
!13605 = !DISubroutineType(types: !13606)
!13606 = !{null, !22, !22}
!13607 = !{!13608, !13609}
!13608 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13604, file: !3196, line: 214, type: !22)
!13609 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13604, file: !3196, line: 214, type: !22)
!13610 = !DILocation(line: 0, scope: !13604)
!13611 = !DILocation(line: 216, column: 1, scope: !13604)
!13612 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3196, file: !3196, line: 218, type: !13613, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13615)
!13613 = !DISubroutineType(types: !13614)
!13614 = !{null, !283, !369}
!13615 = !{!13616, !13617}
!13616 = !DILocalVariable(name: "buf", arg: 1, scope: !13612, file: !3196, line: 218, type: !283)
!13617 = !DILocalVariable(name: "buflen", arg: 2, scope: !13612, file: !3196, line: 218, type: !369)
!13618 = !DILocation(line: 0, scope: !13612)
!13619 = !DILocation(line: 220, column: 1, scope: !13612)
!13620 = distinct !DISubprogram(name: "coredump_query", scope: !3196, file: !3196, line: 222, type: !13621, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13623)
!13621 = !DISubroutineType(types: !13622)
!13622 = !{!103, !3195, !102}
!13623 = !{!13624, !13625}
!13624 = !DILocalVariable(name: "query_id", arg: 1, scope: !13620, file: !3196, line: 222, type: !3195)
!13625 = !DILocalVariable(name: "arg", arg: 2, scope: !13620, file: !3196, line: 222, type: !102)
!13626 = !DILocation(line: 0, scope: !13620)
!13627 = !DILocation(line: 224, column: 2, scope: !13620)
!13628 = distinct !DISubprogram(name: "coredump_cmd", scope: !3196, file: !3196, line: 227, type: !13629, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13631)
!13629 = !DISubroutineType(types: !13630)
!13630 = !{!103, !3202, !102}
!13631 = !{!13632, !13633}
!13632 = !DILocalVariable(name: "query_id", arg: 1, scope: !13628, file: !3196, line: 227, type: !3202)
!13633 = !DILocalVariable(name: "arg", arg: 2, scope: !13628, file: !3196, line: 227, type: !102)
!13634 = !DILocation(line: 0, scope: !13628)
!13635 = !DILocation(line: 229, column: 2, scope: !13628)
!13636 = distinct !DISubprogram(name: "arch_system_halt", scope: !13637, file: !13637, line: 23, type: !5791, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13638)
!13637 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13638 = !{!13639}
!13639 = !DILocalVariable(name: "reason", arg: 1, scope: !13636, file: !13637, line: 23, type: !32)
!13640 = !DILocation(line: 0, scope: !13636)
!13641 = !DILocation(line: 55, column: 2, scope: !13642, inlinedAt: !13646)
!13642 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13643)
!13643 = !{!13644, !13645}
!13644 = !DILocalVariable(name: "key", scope: !13642, file: !5780, line: 44, type: !32)
!13645 = !DILocalVariable(name: "tmp", scope: !13642, file: !5780, line: 53, type: !32)
!13646 = distinct !DILocation(line: 31, column: 8, scope: !13636)
!13647 = !{i64 1650680}
!13648 = !DILocation(line: 0, scope: !13642, inlinedAt: !13646)
!13649 = !DILocation(line: 32, column: 2, scope: !13636)
!13650 = !DILocation(line: 32, column: 2, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13652, file: !13637, line: 32, column: 2)
!13652 = distinct !DILexicalBlock(scope: !13636, file: !13637, line: 32, column: 2)
!13653 = distinct !{!13653, !13654, !13655}
!13654 = !DILocation(line: 32, column: 2, scope: !13652)
!13655 = !DILocation(line: 34, column: 2, scope: !13652)
!13656 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13637, file: !13637, line: 39, type: !13657, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13659)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{null, !32, !13454}
!13659 = !{!13660, !13661}
!13660 = !DILocalVariable(name: "reason", arg: 1, scope: !13656, file: !13637, line: 39, type: !32)
!13661 = !DILocalVariable(name: "esf", arg: 2, scope: !13656, file: !13637, line: 40, type: !13454)
!13662 = !DILocation(line: 0, scope: !13656)
!13663 = !DILocation(line: 46, column: 2, scope: !13656)
!13664 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13637, file: !13637, line: 81, type: !5791, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13665)
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "reason", arg: 1, scope: !13664, file: !13637, line: 81, type: !32)
!13667 = !DILocation(line: 0, scope: !13664)
!13668 = !DILocation(line: 83, column: 2, scope: !13664)
!13669 = distinct !DISubprogram(name: "z_fatal_error", scope: !13637, file: !13637, line: 96, type: !13657, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13670)
!13670 = !{!13671, !13672, !13673, !13674}
!13671 = !DILocalVariable(name: "reason", arg: 1, scope: !13669, file: !13637, line: 96, type: !32)
!13672 = !DILocalVariable(name: "esf", arg: 2, scope: !13669, file: !13637, line: 96, type: !13454)
!13673 = !DILocalVariable(name: "key", scope: !13669, file: !13637, line: 102, type: !32)
!13674 = !DILocalVariable(name: "thread", scope: !13669, file: !13637, line: 103, type: !13498)
!13675 = !DILocation(line: 0, scope: !13669)
!13676 = !DILocation(line: 55, column: 2, scope: !13642, inlinedAt: !13677)
!13677 = distinct !DILocation(line: 102, column: 21, scope: !13669)
!13678 = !DILocation(line: 0, scope: !13642, inlinedAt: !13677)
!13679 = !DILocation(line: 119, column: 11, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13669, file: !13637, line: 119, column: 6)
!13681 = !DILocation(line: 119, column: 20, scope: !13680)
!13682 = !DILocation(line: 131, column: 2, scope: !13669)
!13683 = !DILocation(line: 151, column: 7, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !13637, line: 146, column: 32)
!13685 = distinct !DILexicalBlock(scope: !13669, file: !13637, line: 146, column: 6)
!13686 = !DILocation(line: 151, column: 21, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13684, file: !13637, line: 151, column: 7)
!13688 = !DILocation(line: 104, column: 4, scope: !13669)
!13689 = !DILocalVariable(name: "key", arg: 1, scope: !13690, file: !5780, line: 84, type: !32)
!13690 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13691)
!13691 = !{!13689}
!13692 = !DILocation(line: 0, scope: !13690, inlinedAt: !13693)
!13693 = distinct !DILocation(line: 186, column: 2, scope: !13669)
!13694 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !13693)
!13695 = !{i64 1651497}
!13696 = !DILocation(line: 189, column: 3, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13698, file: !13637, line: 188, column: 41)
!13698 = distinct !DILexicalBlock(scope: !13669, file: !13637, line: 188, column: 6)
!13699 = !DILocation(line: 191, column: 1, scope: !13669)
!13700 = distinct !DISubprogram(name: "k_current_get", scope: !325, file: !325, line: 530, type: !13701, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !486)
!13701 = !DISubroutineType(types: !13702)
!13702 = !{!13703}
!13703 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !380, line: 347, baseType: !13498)
!13704 = !DILocation(line: 535, column: 9, scope: !13700)
!13705 = !DILocation(line: 535, column: 2, scope: !13700)
!13706 = distinct !DISubprogram(name: "k_thread_abort", scope: !3669, file: !3669, line: 188, type: !13707, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13709)
!13707 = !DISubroutineType(types: !13708)
!13708 = !{null, !13703}
!13709 = !{!13710}
!13710 = !DILocalVariable(name: "thread", arg: 1, scope: !13706, file: !3669, line: 188, type: !13703)
!13711 = !DILocation(line: 0, scope: !13706)
!13712 = !DILocation(line: 197, column: 2, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13706, file: !3669, line: 197, column: 2)
!13714 = !{i64 2152216338}
!13715 = !DILocation(line: 198, column: 2, scope: !13706)
!13716 = !DILocation(line: 199, column: 1, scope: !13706)
!13717 = distinct !DISubprogram(name: "z_current_get", scope: !3669, file: !3669, line: 173, type: !13701, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !486)
!13718 = !DILocation(line: 180, column: 2, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13717, file: !3669, line: 180, column: 2)
!13720 = !{i64 2152216270}
!13721 = !DILocation(line: 181, column: 9, scope: !13717)
!13722 = !DILocation(line: 181, column: 2, scope: !13717)
!13723 = distinct !DISubprogram(name: "z_early_memset", scope: !1994, file: !1994, line: 108, type: !13724, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13726)
!13724 = !DISubroutineType(types: !13725)
!13725 = !{null, !102, !103, !369}
!13726 = !{!13727, !13728, !13729}
!13727 = !DILocalVariable(name: "dst", arg: 1, scope: !13723, file: !1994, line: 108, type: !102)
!13728 = !DILocalVariable(name: "c", arg: 2, scope: !13723, file: !1994, line: 108, type: !103)
!13729 = !DILocalVariable(name: "n", arg: 3, scope: !13723, file: !1994, line: 108, type: !369)
!13730 = !DILocation(line: 0, scope: !13723)
!13731 = !DILocation(line: 110, column: 9, scope: !13723)
!13732 = !DILocation(line: 111, column: 1, scope: !13723)
!13733 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1994, file: !1994, line: 121, type: !13734, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13736)
!13734 = !DISubroutineType(types: !13735)
!13735 = !{null, !102, !13, !369}
!13736 = !{!13737, !13738, !13739}
!13737 = !DILocalVariable(name: "dst", arg: 1, scope: !13733, file: !1994, line: 121, type: !102)
!13738 = !DILocalVariable(name: "src", arg: 2, scope: !13733, file: !1994, line: 121, type: !13)
!13739 = !DILocalVariable(name: "n", arg: 3, scope: !13733, file: !1994, line: 121, type: !369)
!13740 = !DILocation(line: 0, scope: !13733)
!13741 = !DILocation(line: 123, column: 9, scope: !13733)
!13742 = !DILocation(line: 124, column: 1, scope: !13733)
!13743 = distinct !DISubprogram(name: "z_bss_zero", scope: !1994, file: !1994, line: 132, type: !3229, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !486)
!13744 = !DILocation(line: 143, column: 2, scope: !13743)
!13745 = !DILocation(line: 168, column: 1, scope: !13743)
!13746 = distinct !DISubprogram(name: "z_init_cpu", scope: !1994, file: !1994, line: 372, type: !8529, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13747)
!13747 = !{!13748}
!13748 = !DILocalVariable(name: "id", arg: 1, scope: !13746, file: !1994, line: 372, type: !103)
!13749 = !DILocation(line: 0, scope: !13746)
!13750 = !DILocation(line: 374, column: 2, scope: !13746)
!13751 = !DILocation(line: 375, column: 34, scope: !13746)
!13752 = !DILocation(line: 375, column: 19, scope: !13746)
!13753 = !DILocation(line: 375, column: 31, scope: !13746)
!13754 = !DILocation(line: 376, column: 24, scope: !13746)
!13755 = !DILocation(line: 376, column: 19, scope: !13746)
!13756 = !DILocation(line: 376, column: 22, scope: !13746)
!13757 = !DILocation(line: 378, column: 26, scope: !13746)
!13758 = !DILocation(line: 378, column: 4, scope: !13746)
!13759 = !DILocation(line: 378, column: 50, scope: !13746)
!13760 = !DILocation(line: 377, column: 19, scope: !13746)
!13761 = !DILocation(line: 377, column: 29, scope: !13746)
!13762 = !DILocation(line: 384, column: 1, scope: !13746)
!13763 = distinct !DISubprogram(name: "init_idle_thread", scope: !1994, file: !1994, line: 343, type: !8529, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13764)
!13764 = !{!13765, !13766, !13767, !13770}
!13765 = !DILocalVariable(name: "i", arg: 1, scope: !13763, file: !1994, line: 343, type: !103)
!13766 = !DILocalVariable(name: "thread", scope: !13763, file: !1994, line: 345, type: !2086)
!13767 = !DILocalVariable(name: "stack", scope: !13763, file: !1994, line: 346, type: !13768)
!13768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13769, size: 32)
!13769 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3548, line: 44, baseType: !2200)
!13770 = !DILocalVariable(name: "tname", scope: !13763, file: !1994, line: 358, type: !1142)
!13771 = !DILocation(line: 0, scope: !13763)
!13772 = !DILocation(line: 345, column: 29, scope: !13763)
!13773 = !DILocation(line: 346, column: 28, scope: !13763)
!13774 = !DILocation(line: 362, column: 37, scope: !13763)
!13775 = !DILocation(line: 362, column: 36, scope: !13763)
!13776 = !DILocation(line: 361, column: 2, scope: !13763)
!13777 = !DILocation(line: 365, column: 2, scope: !13763)
!13778 = !DILocation(line: 370, column: 1, scope: !13763)
!13779 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2201, file: !2201, line: 331, type: !13780, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13782)
!13780 = !DISubroutineType(types: !13781)
!13781 = !{!1142, !13768}
!13782 = !{!13783}
!13783 = !DILocalVariable(name: "sym", arg: 1, scope: !13779, file: !2201, line: 331, type: !13768)
!13784 = !DILocation(line: 0, scope: !13779)
!13785 = !DILocation(line: 333, column: 21, scope: !13779)
!13786 = !DILocation(line: 333, column: 2, scope: !13779)
!13787 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13788, file: !13788, line: 155, type: !13789, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13791)
!13788 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13789 = !DISubroutineType(types: !13790)
!13790 = !{null, !2086}
!13791 = !{!13792}
!13792 = !DILocalVariable(name: "thread", arg: 1, scope: !13787, file: !13788, line: 155, type: !2086)
!13793 = !DILocation(line: 0, scope: !13787)
!13794 = !DILocation(line: 157, column: 15, scope: !13787)
!13795 = !DILocation(line: 157, column: 28, scope: !13787)
!13796 = !DILocation(line: 158, column: 1, scope: !13787)
!13797 = distinct !DISubprogram(name: "z_cstart", scope: !1994, file: !1994, line: 501, type: !3229, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13798)
!13798 = !{!13799}
!13799 = !DILocalVariable(name: "dummy_thread", scope: !13797, file: !1994, line: 518, type: !2087)
!13800 = !DILocation(line: 507, column: 2, scope: !13797)
!13801 = !DILocation(line: 43, column: 14, scope: !13802, inlinedAt: !13806)
!13802 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13803, file: !13803, line: 40, type: !3229, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13804)
!13803 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13804 = !{!13805}
!13805 = !DILocalVariable(name: "msp", scope: !13802, file: !13803, line: 42, type: !132)
!13806 = distinct !DILocation(line: 44, column: 2, scope: !13807, inlinedAt: !13809)
!13807 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13808, file: !13808, line: 42, type: !3229, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !486)
!13808 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13809 = distinct !DILocation(line: 510, column: 2, scope: !13797)
!13810 = !DILocation(line: 43, column: 3, scope: !13802, inlinedAt: !13806)
!13811 = !DILocation(line: 43, column: 60, scope: !13802, inlinedAt: !13806)
!13812 = !DILocation(line: 0, scope: !13802, inlinedAt: !13806)
!13813 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13814, file: !6817, line: 1153, type: !132)
!13814 = distinct !DISubprogram(name: "__set_MSP", scope: !6817, file: !6817, line: 1153, type: !5804, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13815)
!13815 = !{!13813}
!13816 = !DILocation(line: 0, scope: !13814, inlinedAt: !13817)
!13817 = distinct !DILocation(line: 46, column: 2, scope: !13802, inlinedAt: !13806)
!13818 = !DILocation(line: 1155, column: 3, scope: !13814, inlinedAt: !13817)
!13819 = !{i64 2464120}
!13820 = !DILocation(line: 62, column: 11, scope: !13802, inlinedAt: !13806)
!13821 = !DILocation(line: 102, column: 2, scope: !13822, inlinedAt: !13823)
!13822 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7573, file: !7573, line: 97, type: !3229, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !486)
!13823 = distinct !DILocation(line: 45, column: 2, scope: !13807, inlinedAt: !13809)
!13824 = !DILocation(line: 108, column: 2, scope: !13822, inlinedAt: !13823)
!13825 = !DILocation(line: 112, column: 2, scope: !13822, inlinedAt: !13823)
!13826 = !DILocation(line: 113, column: 2, scope: !13822, inlinedAt: !13823)
!13827 = !DILocation(line: 114, column: 2, scope: !13822, inlinedAt: !13823)
!13828 = !DILocation(line: 116, column: 2, scope: !13822, inlinedAt: !13823)
!13829 = !DILocation(line: 123, column: 13, scope: !13822, inlinedAt: !13823)
!13830 = !DILocation(line: 46, column: 2, scope: !13807, inlinedAt: !13809)
!13831 = !DILocation(line: 47, column: 2, scope: !13807, inlinedAt: !13809)
!13832 = !DILocation(line: 174, column: 12, scope: !13833, inlinedAt: !13834)
!13833 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7573, file: !7573, line: 169, type: !3229, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !486)
!13834 = distinct !DILocation(line: 48, column: 2, scope: !13807, inlinedAt: !13809)
!13835 = !DILocation(line: 179, column: 12, scope: !13833, inlinedAt: !13834)
!13836 = !DILocation(line: 50, column: 2, scope: !13807, inlinedAt: !13809)
!13837 = !DILocation(line: 57, column: 2, scope: !13807, inlinedAt: !13809)
!13838 = !DILocation(line: 518, column: 2, scope: !13797)
!13839 = !DILocation(line: 518, column: 18, scope: !13797)
!13840 = !DILocation(line: 520, column: 2, scope: !13797)
!13841 = !DILocation(line: 523, column: 2, scope: !13797)
!13842 = !DILocation(line: 526, column: 2, scope: !13797)
!13843 = !DILocation(line: 527, column: 2, scope: !13797)
!13844 = !DILocation(line: 543, column: 24, scope: !13797)
!13845 = !DILocation(line: 543, column: 2, scope: !13797)
!13846 = !DILocation(line: 0, scope: !2220)
!13847 = !DILocation(line: 246, column: 15, scope: !2238)
!13848 = !DILocation(line: 246, column: 36, scope: !2237)
!13849 = !DILocation(line: 246, column: 2, scope: !2238)
!13850 = !DILocation(line: 247, column: 37, scope: !2236)
!13851 = !DILocation(line: 0, scope: !2236)
!13852 = !DILocation(line: 248, column: 19, scope: !2236)
!13853 = !DILocation(line: 248, column: 12, scope: !2236)
!13854 = !DILocation(line: 250, column: 11, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !2236, file: !1994, line: 250, column: 7)
!13856 = !DILocation(line: 250, column: 7, scope: !2236)
!13857 = !DILocation(line: 254, column: 11, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13859, file: !1994, line: 254, column: 8)
!13859 = distinct !DILexicalBlock(scope: !13855, file: !1994, line: 250, column: 20)
!13860 = !DILocation(line: 254, column: 8, scope: !13859)
!13861 = !DILocation(line: 255, column: 9, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13858, file: !1994, line: 254, column: 17)
!13863 = !DILocation(line: 258, column: 9, scope: !13862)
!13864 = !DILocation(line: 261, column: 28, scope: !13862)
!13865 = !DILocation(line: 261, column: 10, scope: !13862)
!13866 = !DILocation(line: 261, column: 17, scope: !13862)
!13867 = !DILocation(line: 261, column: 26, scope: !13862)
!13868 = !DILocation(line: 262, column: 4, scope: !13862)
!13869 = !DILocation(line: 263, column: 9, scope: !13859)
!13870 = !DILocation(line: 263, column: 16, scope: !13859)
!13871 = !DILocation(line: 263, column: 28, scope: !13859)
!13872 = !DILocation(line: 264, column: 3, scope: !13859)
!13873 = !DILocation(line: 246, column: 60, scope: !2237)
!13874 = distinct !{!13874, !13849, !13875}
!13875 = !DILocation(line: 265, column: 2, scope: !2238)
!13876 = !DILocation(line: 266, column: 1, scope: !2220)
!13877 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !520, file: !520, line: 1638, type: !6851, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13878)
!13878 = !{!13879, !13880}
!13879 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13877, file: !520, line: 1638, type: !843)
!13880 = !DILocalVariable(name: "priority", arg: 2, scope: !13877, file: !520, line: 1638, type: !132)
!13881 = !DILocation(line: 0, scope: !13877)
!13882 = !DILocation(line: 1646, column: 48, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !520, line: 1645, column: 3)
!13884 = distinct !DILexicalBlock(scope: !13877, file: !520, line: 1640, column: 7)
!13885 = !DILocation(line: 1646, column: 32, scope: !13883)
!13886 = !DILocation(line: 1646, column: 40, scope: !13883)
!13887 = !DILocation(line: 1646, column: 5, scope: !13883)
!13888 = !DILocation(line: 1646, column: 46, scope: !13883)
!13889 = !DILocation(line: 1648, column: 1, scope: !13877)
!13890 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13808, file: !13808, line: 32, type: !3229, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!13891 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13892, file: !13892, line: 215, type: !13789, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13893)
!13892 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13893 = !{!13894}
!13894 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13891, file: !13892, line: 215, type: !2086)
!13895 = !DILocation(line: 0, scope: !13891)
!13896 = !DILocation(line: 217, column: 21, scope: !13891)
!13897 = !DILocation(line: 217, column: 34, scope: !13891)
!13898 = !DILocation(line: 221, column: 21, scope: !13891)
!13899 = !DILocation(line: 221, column: 34, scope: !13891)
!13900 = !DILocation(line: 223, column: 27, scope: !13891)
!13901 = !DILocation(line: 223, column: 33, scope: !13891)
!13902 = !DILocation(line: 224, column: 27, scope: !13891)
!13903 = !DILocation(line: 224, column: 32, scope: !13891)
!13904 = !DILocation(line: 232, column: 16, scope: !13891)
!13905 = !DILocation(line: 232, column: 30, scope: !13891)
!13906 = !DILocation(line: 239, column: 24, scope: !13891)
!13907 = !DILocation(line: 240, column: 1, scope: !13891)
!13908 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1994, file: !1994, line: 399, type: !13909, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13911)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{!1142}
!13911 = !{!13912}
!13912 = !DILocalVariable(name: "stack_ptr", scope: !13908, file: !1994, line: 401, type: !1142)
!13913 = !DILocation(line: 404, column: 2, scope: !13908)
!13914 = !DILocation(line: 416, column: 24, scope: !13908)
!13915 = !DILocation(line: 418, column: 14, scope: !13908)
!13916 = !DILocation(line: 0, scope: !13908)
!13917 = !DILocation(line: 423, column: 2, scope: !13908)
!13918 = !DILocation(line: 424, column: 2, scope: !13908)
!13919 = !DILocation(line: 426, column: 2, scope: !13908)
!13920 = !DILocation(line: 428, column: 2, scope: !13908)
!13921 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1994, file: !1994, line: 432, type: !13922, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13924)
!13922 = !DISubroutineType(types: !13923)
!13923 = !{null, !1142}
!13924 = !{!13925}
!13925 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13921, file: !1994, line: 432, type: !1142)
!13926 = !DILocation(line: 0, scope: !13921)
!13927 = !DILocation(line: 435, column: 2, scope: !13921)
!13928 = !DILocation(line: 445, column: 2, scope: !13921)
!13929 = distinct !DISubprogram(name: "bg_thread_main", scope: !1994, file: !1994, line: 277, type: !3550, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !13930)
!13930 = !{!13931, !13932, !13933}
!13931 = !DILocalVariable(name: "unused1", arg: 1, scope: !13929, file: !1994, line: 277, type: !102)
!13932 = !DILocalVariable(name: "unused2", arg: 2, scope: !13929, file: !1994, line: 277, type: !102)
!13933 = !DILocalVariable(name: "unused3", arg: 3, scope: !13929, file: !1994, line: 277, type: !102)
!13934 = !DILocation(line: 0, scope: !13929)
!13935 = !DILocation(line: 291, column: 20, scope: !13929)
!13936 = !DILocation(line: 293, column: 2, scope: !13929)
!13937 = !DILocation(line: 297, column: 2, scope: !13929)
!13938 = !DILocation(line: 305, column: 2, scope: !13929)
!13939 = !DILocation(line: 307, column: 2, scope: !13929)
!13940 = !DILocation(line: 330, column: 8, scope: !13929)
!13941 = !DILocation(line: 333, column: 34, scope: !13929)
!13942 = !DILocation(line: 339, column: 1, scope: !13929)
!13943 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2247, file: !2247, line: 45, type: !13944, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !13952)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{null, !13946, !102}
!13946 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !325, line: 103, baseType: !13947)
!13947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13948, size: 32)
!13948 = !DISubroutineType(types: !13949)
!13949 = !{null, !13950, !102}
!13950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13951, size: 32)
!13951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2252)
!13952 = !{!13953, !13954}
!13953 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13943, file: !2247, line: 45, type: !13946)
!13954 = !DILocalVariable(name: "user_data", arg: 2, scope: !13943, file: !2247, line: 45, type: !102)
!13955 = !DILocation(line: 0, scope: !13943)
!13956 = !DILocation(line: 71, column: 1, scope: !13943)
!13957 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2247, file: !2247, line: 73, type: !13944, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !13958)
!13958 = !{!13959, !13960}
!13959 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13957, file: !2247, line: 73, type: !13946)
!13960 = !DILocalVariable(name: "user_data", arg: 2, scope: !13957, file: !2247, line: 73, type: !102)
!13961 = !DILocation(line: 0, scope: !13957)
!13962 = !DILocation(line: 95, column: 1, scope: !13957)
!13963 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2247, file: !2247, line: 97, type: !7574, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !486)
!13964 = !DILocation(line: 1031, column: 3, scope: !13965, inlinedAt: !13968)
!13965 = distinct !DISubprogram(name: "__get_IPSR", scope: !6817, file: !6817, line: 1027, type: !7567, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !13966)
!13966 = !{!13967}
!13967 = !DILocalVariable(name: "result", scope: !13965, file: !6817, line: 1029, type: !132)
!13968 = distinct !DILocation(line: 48, column: 10, scope: !13969, inlinedAt: !13970)
!13969 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7573, file: !7573, line: 46, type: !7574, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !486)
!13970 = distinct !DILocation(line: 99, column: 9, scope: !13963)
!13971 = !{i64 2469771}
!13972 = !DILocation(line: 0, scope: !13965, inlinedAt: !13968)
!13973 = !DILocation(line: 48, column: 9, scope: !13969, inlinedAt: !13970)
!13974 = !DILocation(line: 99, column: 2, scope: !13963)
!13975 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2247, file: !2247, line: 106, type: !3229, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !486)
!13976 = !DILocation(line: 108, column: 2, scope: !13975)
!13977 = !DILocation(line: 108, column: 17, scope: !13975)
!13978 = !DILocation(line: 108, column: 30, scope: !13975)
!13979 = !DILocation(line: 109, column: 1, scope: !13975)
!13980 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2247, file: !2247, line: 116, type: !3229, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !486)
!13981 = !DILocation(line: 118, column: 2, scope: !13980)
!13982 = !DILocation(line: 118, column: 17, scope: !13980)
!13983 = !DILocation(line: 118, column: 30, scope: !13980)
!13984 = !DILocation(line: 119, column: 1, scope: !13980)
!13985 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2247, file: !2247, line: 126, type: !7574, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !486)
!13986 = !DILocation(line: 128, column: 10, scope: !13985)
!13987 = !DILocation(line: 128, column: 25, scope: !13985)
!13988 = !DILocation(line: 128, column: 38, scope: !13985)
!13989 = !DILocation(line: 128, column: 53, scope: !13985)
!13990 = !DILocation(line: 128, column: 2, scope: !13985)
!13991 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2247, file: !2247, line: 187, type: !13992, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !13994)
!13992 = !DISubroutineType(types: !13993)
!13993 = !{!103, !2251, !168}
!13994 = !{!13995, !13996}
!13995 = !DILocalVariable(name: "thread", arg: 1, scope: !13991, file: !2247, line: 187, type: !2251)
!13996 = !DILocalVariable(name: "value", arg: 2, scope: !13991, file: !2247, line: 187, type: !168)
!13997 = !DILocation(line: 0, scope: !13991)
!13998 = !DILocation(line: 206, column: 2, scope: !13991)
!13999 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2247, file: !2247, line: 238, type: !14000, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14002)
!14000 = !DISubroutineType(types: !14001)
!14001 = !{!168, !2251}
!14002 = !{!14003}
!14003 = !DILocalVariable(name: "thread", arg: 1, scope: !13999, file: !2247, line: 238, type: !2251)
!14004 = !DILocation(line: 0, scope: !13999)
!14005 = !DILocation(line: 244, column: 2, scope: !13999)
!14006 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2247, file: !2247, line: 248, type: !14007, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14009)
!14007 = !DISubroutineType(types: !14008)
!14008 = !{!103, !2250, !1142, !369}
!14009 = !{!14010, !14011, !14012}
!14010 = !DILocalVariable(name: "thread", arg: 1, scope: !14006, file: !2247, line: 248, type: !2250)
!14011 = !DILocalVariable(name: "buf", arg: 2, scope: !14006, file: !2247, line: 248, type: !1142)
!14012 = !DILocalVariable(name: "size", arg: 3, scope: !14006, file: !2247, line: 248, type: !369)
!14013 = !DILocation(line: 0, scope: !14006)
!14014 = !DILocation(line: 257, column: 2, scope: !14006)
!14015 = !DILocation(line: 0, scope: !2246)
!14016 = !DILocation(line: 281, column: 11, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !2246, file: !2247, line: 281, column: 6)
!14018 = !DILocation(line: 281, column: 20, scope: !14017)
!14019 = !DILocation(line: 275, column: 45, scope: !2246)
!14020 = !DILocation(line: 285, column: 10, scope: !2246)
!14021 = !DILocation(line: 0, scope: !2369)
!14022 = !DILocation(line: 293, column: 39, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !2369, file: !2247, line: 293, column: 2)
!14024 = !DILocation(line: 293, column: 2, scope: !2369)
!14025 = !DILocation(line: 273, column: 14, scope: !2246)
!14026 = !DILocation(line: 309, column: 2, scope: !2246)
!14027 = !DILocation(line: 309, column: 11, scope: !2246)
!14028 = !DILocation(line: 311, column: 2, scope: !2246)
!14029 = !DILocation(line: 293, column: 26, scope: !14023)
!14030 = !DILocation(line: 294, column: 9, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14023, file: !2247, line: 293, column: 54)
!14032 = !DILocation(line: 295, column: 21, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14031, file: !2247, line: 295, column: 7)
!14034 = !DILocation(line: 295, column: 28, scope: !14033)
!14035 = !DILocation(line: 295, column: 7, scope: !14031)
!14036 = !DILocation(line: 299, column: 25, scope: !14031)
!14037 = !DILocation(line: 299, column: 41, scope: !14031)
!14038 = !DILocation(line: 300, column: 7, scope: !14031)
!14039 = !DILocation(line: 300, column: 26, scope: !14031)
!14040 = !DILocation(line: 299, column: 10, scope: !14031)
!14041 = !DILocation(line: 299, column: 7, scope: !14031)
!14042 = !DILocation(line: 302, column: 16, scope: !14031)
!14043 = !DILocation(line: 304, column: 20, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14031, file: !2247, line: 304, column: 7)
!14045 = !DILocation(line: 304, column: 7, scope: !14031)
!14046 = !DILocation(line: 305, column: 26, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14044, file: !2247, line: 304, column: 26)
!14048 = !DILocation(line: 305, column: 42, scope: !14047)
!14049 = !DILocation(line: 305, column: 11, scope: !14047)
!14050 = !DILocation(line: 305, column: 8, scope: !14047)
!14051 = !DILocation(line: 306, column: 3, scope: !14047)
!14052 = !DILocation(line: 293, column: 50, scope: !14023)
!14053 = !DILocation(line: 312, column: 1, scope: !2246)
!14054 = distinct !DISubprogram(name: "copy_bytes", scope: !2247, file: !2247, line: 261, type: !14055, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14057)
!14055 = !DISubroutineType(types: !14056)
!14056 = !{!369, !1142, !369, !168, !369}
!14057 = !{!14058, !14059, !14060, !14061, !14062}
!14058 = !DILocalVariable(name: "dest", arg: 1, scope: !14054, file: !2247, line: 261, type: !1142)
!14059 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14054, file: !2247, line: 261, type: !369)
!14060 = !DILocalVariable(name: "src", arg: 3, scope: !14054, file: !2247, line: 261, type: !168)
!14061 = !DILocalVariable(name: "src_size", arg: 4, scope: !14054, file: !2247, line: 261, type: !369)
!14062 = !DILocalVariable(name: "bytes_to_copy", scope: !14054, file: !2247, line: 263, type: !369)
!14063 = !DILocation(line: 0, scope: !14054)
!14064 = !DILocation(line: 265, column: 18, scope: !14054)
!14065 = !DILocation(line: 266, column: 2, scope: !14054)
!14066 = !DILocation(line: 268, column: 2, scope: !14054)
!14067 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2247, file: !2247, line: 383, type: !14068, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14070)
!14068 = !DISubroutineType(types: !14069)
!14069 = !{null, !2251}
!14070 = !{!14071}
!14071 = !DILocalVariable(name: "thread", arg: 1, scope: !14067, file: !2247, line: 383, type: !2251)
!14072 = !DILocation(line: 0, scope: !14067)
!14073 = !DILocation(line: 387, column: 2, scope: !14067)
!14074 = !DILocation(line: 388, column: 1, scope: !14067)
!14075 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2247, file: !2247, line: 528, type: !14076, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14083)
!14076 = !DISubroutineType(types: !14077)
!14077 = !{!1142, !2251, !14078, !369, !3547, !102, !102, !102, !103, !132, !168}
!14078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14079, size: 32)
!14079 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3548, line: 44, baseType: !14080)
!14080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2201, line: 47, size: 8, elements: !14081)
!14081 = !{!14082}
!14082 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14080, file: !2201, line: 48, baseType: !108, size: 8)
!14083 = !{!14084, !14085, !14086, !14087, !14088, !14089, !14090, !14091, !14092, !14093, !14094}
!14084 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14075, file: !2247, line: 528, type: !2251)
!14085 = !DILocalVariable(name: "stack", arg: 2, scope: !14075, file: !2247, line: 529, type: !14078)
!14086 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14075, file: !2247, line: 529, type: !369)
!14087 = !DILocalVariable(name: "entry", arg: 4, scope: !14075, file: !2247, line: 530, type: !3547)
!14088 = !DILocalVariable(name: "p1", arg: 5, scope: !14075, file: !2247, line: 531, type: !102)
!14089 = !DILocalVariable(name: "p2", arg: 6, scope: !14075, file: !2247, line: 531, type: !102)
!14090 = !DILocalVariable(name: "p3", arg: 7, scope: !14075, file: !2247, line: 531, type: !102)
!14091 = !DILocalVariable(name: "prio", arg: 8, scope: !14075, file: !2247, line: 532, type: !103)
!14092 = !DILocalVariable(name: "options", arg: 9, scope: !14075, file: !2247, line: 532, type: !132)
!14093 = !DILocalVariable(name: "name", arg: 10, scope: !14075, file: !2247, line: 532, type: !168)
!14094 = !DILocalVariable(name: "stack_ptr", scope: !14075, file: !2247, line: 534, type: !1142)
!14095 = !DILocation(line: 0, scope: !14075)
!14096 = !DILocation(line: 550, column: 28, scope: !14075)
!14097 = !DILocation(line: 550, column: 2, scope: !14075)
!14098 = !DILocation(line: 553, column: 34, scope: !14075)
!14099 = !DILocation(line: 553, column: 2, scope: !14075)
!14100 = !DILocation(line: 554, column: 14, scope: !14075)
!14101 = !DILocation(line: 564, column: 2, scope: !14075)
!14102 = !DILocation(line: 567, column: 14, scope: !14075)
!14103 = !DILocation(line: 567, column: 24, scope: !14075)
!14104 = !DILocation(line: 612, column: 7, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14075, file: !2247, line: 612, column: 6)
!14106 = !DILocation(line: 612, column: 6, scope: !14075)
!14107 = !DILocation(line: 627, column: 40, scope: !14075)
!14108 = !DILocation(line: 637, column: 2, scope: !14075)
!14109 = !DILocation(line: 613, column: 15, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14105, file: !2247, line: 612, column: 17)
!14111 = !DILocation(line: 613, column: 29, scope: !14110)
!14112 = !DILocation(line: 638, column: 1, scope: !14075)
!14113 = distinct !DISubprogram(name: "z_waitq_init", scope: !14114, file: !14114, line: 47, type: !14115, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14117)
!14114 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14115 = !DISubroutineType(types: !14116)
!14116 = !{null, !2282}
!14117 = !{!14118}
!14118 = !DILocalVariable(name: "w", arg: 1, scope: !14113, file: !14114, line: 47, type: !2282)
!14119 = !DILocation(line: 0, scope: !14113)
!14120 = !DILocation(line: 49, column: 21, scope: !14113)
!14121 = !DILocation(line: 49, column: 2, scope: !14113)
!14122 = !DILocation(line: 50, column: 1, scope: !14113)
!14123 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2247, file: !2247, line: 791, type: !14124, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14127)
!14124 = !DISubroutineType(types: !14125)
!14125 = !{null, !14126, !103, !132, !32}
!14126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!14127 = !{!14128, !14129, !14130, !14131}
!14128 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14123, file: !2247, line: 791, type: !14126)
!14129 = !DILocalVariable(name: "priority", arg: 2, scope: !14123, file: !2247, line: 791, type: !103)
!14130 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14123, file: !2247, line: 792, type: !132)
!14131 = !DILocalVariable(name: "options", arg: 4, scope: !14123, file: !2247, line: 792, type: !32)
!14132 = !DILocation(line: 0, scope: !14123)
!14133 = !DILocation(line: 795, column: 15, scope: !14123)
!14134 = !DILocation(line: 795, column: 25, scope: !14123)
!14135 = !DILocation(line: 796, column: 30, scope: !14123)
!14136 = !DILocation(line: 796, column: 15, scope: !14123)
!14137 = !DILocation(line: 796, column: 28, scope: !14123)
!14138 = !DILocation(line: 797, column: 30, scope: !14123)
!14139 = !DILocation(line: 797, column: 15, scope: !14123)
!14140 = !DILocation(line: 797, column: 28, scope: !14123)
!14141 = !DILocation(line: 799, column: 22, scope: !14123)
!14142 = !DILocation(line: 799, column: 15, scope: !14123)
!14143 = !DILocation(line: 799, column: 20, scope: !14123)
!14144 = !DILocation(line: 801, column: 15, scope: !14123)
!14145 = !DILocation(line: 801, column: 28, scope: !14123)
!14146 = !DILocation(line: 814, column: 2, scope: !14123)
!14147 = !DILocation(line: 815, column: 1, scope: !14123)
!14148 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2247, file: !2247, line: 449, type: !14149, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14151)
!14149 = !DISubroutineType(types: !14150)
!14150 = !{!1142, !2251, !14078, !369}
!14151 = !{!14152, !14153, !14154, !14155, !14156, !14157, !14158, !14159}
!14152 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14148, file: !2247, line: 449, type: !2251)
!14153 = !DILocalVariable(name: "stack", arg: 2, scope: !14148, file: !2247, line: 450, type: !14078)
!14154 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14148, file: !2247, line: 450, type: !369)
!14155 = !DILocalVariable(name: "stack_obj_size", scope: !14148, file: !2247, line: 452, type: !369)
!14156 = !DILocalVariable(name: "stack_buf_size", scope: !14148, file: !2247, line: 452, type: !369)
!14157 = !DILocalVariable(name: "stack_ptr", scope: !14148, file: !2247, line: 453, type: !1142)
!14158 = !DILocalVariable(name: "stack_buf_start", scope: !14148, file: !2247, line: 453, type: !1142)
!14159 = !DILocalVariable(name: "delta", scope: !14148, file: !2247, line: 454, type: !369)
!14160 = !DILocation(line: 0, scope: !14148)
!14161 = !DILocation(line: 465, column: 20, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14148, file: !2247, line: 463, column: 2)
!14163 = !DILocation(line: 466, column: 21, scope: !14162)
!14164 = !DILocation(line: 473, column: 28, scope: !14148)
!14165 = !DILocation(line: 514, column: 33, scope: !14148)
!14166 = !DILocation(line: 514, column: 25, scope: !14148)
!14167 = !DILocation(line: 514, column: 31, scope: !14148)
!14168 = !DILocation(line: 515, column: 25, scope: !14148)
!14169 = !DILocation(line: 515, column: 30, scope: !14148)
!14170 = !DILocation(line: 516, column: 25, scope: !14148)
!14171 = !DILocation(line: 516, column: 31, scope: !14148)
!14172 = !DILocation(line: 520, column: 2, scope: !14148)
!14173 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2201, file: !2201, line: 331, type: !14174, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14176)
!14174 = !DISubroutineType(types: !14175)
!14175 = !{!1142, !14078}
!14176 = !{!14177}
!14177 = !DILocalVariable(name: "sym", arg: 1, scope: !14173, file: !2201, line: 331, type: !14078)
!14178 = !DILocation(line: 0, scope: !14173)
!14179 = !DILocation(line: 333, column: 21, scope: !14173)
!14180 = !DILocation(line: 333, column: 2, scope: !14173)
!14181 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14182, file: !14182, line: 40, type: !14183, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14185)
!14182 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14183 = !DISubroutineType(types: !14184)
!14184 = !{null, !14126}
!14185 = !{!14186}
!14186 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14181, file: !14182, line: 40, type: !14126)
!14187 = !DILocation(line: 0, scope: !14181)
!14188 = !DILocation(line: 42, column: 31, scope: !14181)
!14189 = !DILocation(line: 42, column: 2, scope: !14181)
!14190 = !DILocation(line: 43, column: 1, scope: !14181)
!14191 = distinct !DISubprogram(name: "z_init_timeout", scope: !14182, file: !14182, line: 25, type: !2308, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14192)
!14192 = !{!14193}
!14193 = !DILocalVariable(name: "to", arg: 1, scope: !14191, file: !14182, line: 25, type: !2310)
!14194 = !DILocation(line: 0, scope: !14191)
!14195 = !DILocation(line: 27, column: 22, scope: !14191)
!14196 = !DILocation(line: 27, column: 2, scope: !14191)
!14197 = !DILocation(line: 28, column: 1, scope: !14191)
!14198 = distinct !DISubprogram(name: "sys_dnode_init", scope: !334, file: !334, line: 211, type: !14199, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14201)
!14199 = !DISubroutineType(types: !14200)
!14200 = !{null, !2354}
!14201 = !{!14202}
!14202 = !DILocalVariable(name: "node", arg: 1, scope: !14198, file: !334, line: 211, type: !2354)
!14203 = !DILocation(line: 0, scope: !14198)
!14204 = !DILocation(line: 213, column: 8, scope: !14198)
!14205 = !DILocation(line: 213, column: 13, scope: !14198)
!14206 = !DILocation(line: 214, column: 8, scope: !14198)
!14207 = !DILocation(line: 214, column: 13, scope: !14198)
!14208 = !DILocation(line: 215, column: 1, scope: !14198)
!14209 = distinct !DISubprogram(name: "sys_dlist_init", scope: !334, file: !334, line: 197, type: !14210, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14213)
!14210 = !DISubroutineType(types: !14211)
!14211 = !{null, !14212}
!14212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!14213 = !{!14214}
!14214 = !DILocalVariable(name: "list", arg: 1, scope: !14209, file: !334, line: 197, type: !14212)
!14215 = !DILocation(line: 0, scope: !14209)
!14216 = !DILocation(line: 199, column: 8, scope: !14209)
!14217 = !DILocation(line: 199, column: 13, scope: !14209)
!14218 = !DILocation(line: 200, column: 8, scope: !14209)
!14219 = !DILocation(line: 200, column: 13, scope: !14209)
!14220 = !DILocation(line: 201, column: 1, scope: !14209)
!14221 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2247, file: !2247, line: 641, type: !14222, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14228)
!14222 = !DISubroutineType(types: !14223)
!14223 = !{!2250, !2251, !14078, !369, !3547, !102, !102, !102, !103, !132, !14224}
!14224 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1753, line: 67, baseType: !14225)
!14225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1753, line: 65, size: 64, elements: !14226)
!14226 = !{!14227}
!14227 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14225, file: !1753, line: 66, baseType: !1752, size: 64)
!14228 = !{!14229, !14230, !14231, !14232, !14233, !14234, !14235, !14236, !14237, !14238}
!14229 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14221, file: !2247, line: 641, type: !2251)
!14230 = !DILocalVariable(name: "stack", arg: 2, scope: !14221, file: !2247, line: 642, type: !14078)
!14231 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14221, file: !2247, line: 643, type: !369)
!14232 = !DILocalVariable(name: "entry", arg: 4, scope: !14221, file: !2247, line: 643, type: !3547)
!14233 = !DILocalVariable(name: "p1", arg: 5, scope: !14221, file: !2247, line: 644, type: !102)
!14234 = !DILocalVariable(name: "p2", arg: 6, scope: !14221, file: !2247, line: 644, type: !102)
!14235 = !DILocalVariable(name: "p3", arg: 7, scope: !14221, file: !2247, line: 644, type: !102)
!14236 = !DILocalVariable(name: "prio", arg: 8, scope: !14221, file: !2247, line: 645, type: !103)
!14237 = !DILocalVariable(name: "options", arg: 9, scope: !14221, file: !2247, line: 645, type: !132)
!14238 = !DILocalVariable(name: "delay", arg: 10, scope: !14221, file: !2247, line: 645, type: !14224)
!14239 = !DILocation(line: 0, scope: !14221)
!14240 = !DILocation(line: 649, column: 2, scope: !14221)
!14241 = !DILocation(line: 652, column: 7, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14221, file: !2247, line: 652, column: 6)
!14243 = !DILocation(line: 652, column: 6, scope: !14221)
!14244 = !DILocation(line: 653, column: 3, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14242, file: !2247, line: 652, column: 39)
!14246 = !DILocation(line: 654, column: 2, scope: !14245)
!14247 = !DILocation(line: 656, column: 2, scope: !14221)
!14248 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2247, file: !2247, line: 401, type: !14249, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14251)
!14249 = !DISubroutineType(types: !14250)
!14250 = !{null, !2251, !14224}
!14251 = !{!14252, !14253}
!14252 = !DILocalVariable(name: "thread", arg: 1, scope: !14248, file: !2247, line: 401, type: !2251)
!14253 = !DILocalVariable(name: "delay", arg: 2, scope: !14248, file: !2247, line: 401, type: !14224)
!14254 = !DILocation(line: 0, scope: !14248)
!14255 = !DILocation(line: 404, column: 6, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14248, file: !2247, line: 404, column: 6)
!14257 = !DILocation(line: 404, column: 6, scope: !14248)
!14258 = !DILocation(line: 405, column: 3, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14256, file: !2247, line: 404, column: 38)
!14260 = !DILocation(line: 406, column: 2, scope: !14259)
!14261 = !DILocation(line: 407, column: 3, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14256, file: !2247, line: 406, column: 9)
!14263 = !DILocation(line: 413, column: 1, scope: !14248)
!14264 = distinct !DISubprogram(name: "k_thread_start", scope: !3669, file: !3669, line: 205, type: !14265, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14267)
!14265 = !DISubroutineType(types: !14266)
!14266 = !{null, !2250}
!14267 = !{!14268}
!14268 = !DILocalVariable(name: "thread", arg: 1, scope: !14264, file: !3669, line: 205, type: !2250)
!14269 = !DILocation(line: 0, scope: !14264)
!14270 = !DILocation(line: 214, column: 2, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14264, file: !3669, line: 214, column: 2)
!14272 = !{i64 2152241562}
!14273 = !DILocation(line: 215, column: 2, scope: !14264)
!14274 = !DILocation(line: 216, column: 1, scope: !14264)
!14275 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14182, file: !14182, line: 47, type: !14249, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14276)
!14276 = !{!14277, !14278}
!14277 = !DILocalVariable(name: "thread", arg: 1, scope: !14275, file: !14182, line: 47, type: !2251)
!14278 = !DILocalVariable(name: "ticks", arg: 2, scope: !14275, file: !14182, line: 47, type: !14224)
!14279 = !DILocation(line: 0, scope: !14275)
!14280 = !DILocation(line: 49, column: 30, scope: !14275)
!14281 = !DILocation(line: 49, column: 2, scope: !14275)
!14282 = !DILocation(line: 50, column: 1, scope: !14275)
!14283 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2247, file: !2247, line: 748, type: !3229, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14284)
!14284 = !{!14285, !14303}
!14285 = !DILocalVariable(name: "thread_data", scope: !14286, file: !2247, line: 750, type: !14287)
!14286 = distinct !DILexicalBlock(scope: !14283, file: !2247, line: 750, column: 2)
!14287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14288, size: 32)
!14288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !325, line: 620, size: 384, elements: !14289)
!14289 = !{!14290, !14291, !14292, !14293, !14294, !14295, !14296, !14297, !14298, !14299, !14300, !14302}
!14290 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14288, file: !325, line: 621, baseType: !2251, size: 32)
!14291 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14288, file: !325, line: 622, baseType: !14078, size: 32, offset: 32)
!14292 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14288, file: !325, line: 623, baseType: !32, size: 32, offset: 64)
!14293 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14288, file: !325, line: 624, baseType: !3547, size: 32, offset: 96)
!14294 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14288, file: !325, line: 625, baseType: !102, size: 32, offset: 128)
!14295 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14288, file: !325, line: 626, baseType: !102, size: 32, offset: 160)
!14296 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14288, file: !325, line: 627, baseType: !102, size: 32, offset: 192)
!14297 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14288, file: !325, line: 628, baseType: !103, size: 32, offset: 224)
!14298 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14288, file: !325, line: 629, baseType: !132, size: 32, offset: 256)
!14299 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14288, file: !325, line: 630, baseType: !357, size: 32, offset: 288)
!14300 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14288, file: !325, line: 631, baseType: !14301, size: 32, offset: 320)
!14301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 32)
!14302 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14288, file: !325, line: 632, baseType: !168, size: 32, offset: 352)
!14303 = !DILocalVariable(name: "thread_data", scope: !14304, file: !2247, line: 781, type: !14287)
!14304 = distinct !DILexicalBlock(scope: !14283, file: !2247, line: 781, column: 2)
!14305 = !DILocation(line: 0, scope: !14286)
!14306 = !DILocation(line: 750, column: 2, scope: !14286)
!14307 = !DILocation(line: 780, column: 2, scope: !14283)
!14308 = !DILocation(line: 0, scope: !14304)
!14309 = !DILocation(line: 781, column: 2, scope: !14304)
!14310 = !DILocation(line: 752, column: 17, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !2247, line: 750, column: 38)
!14312 = distinct !DILexicalBlock(scope: !14286, file: !2247, line: 750, column: 2)
!14313 = !DILocation(line: 753, column: 17, scope: !14311)
!14314 = !DILocation(line: 754, column: 17, scope: !14311)
!14315 = !DILocation(line: 755, column: 17, scope: !14311)
!14316 = !DILocation(line: 756, column: 17, scope: !14311)
!14317 = !DILocation(line: 757, column: 17, scope: !14311)
!14318 = !DILocation(line: 758, column: 17, scope: !14311)
!14319 = !DILocation(line: 759, column: 17, scope: !14311)
!14320 = !DILocation(line: 760, column: 17, scope: !14311)
!14321 = !DILocation(line: 751, column: 3, scope: !14311)
!14322 = !DILocation(line: 763, column: 16, scope: !14311)
!14323 = !DILocation(line: 763, column: 29, scope: !14311)
!14324 = !DILocation(line: 763, column: 39, scope: !14311)
!14325 = !DILocation(line: 750, column: 2, scope: !14312)
!14326 = !DILocation(line: 750, column: 2, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14312, file: !2247, line: 750, column: 2)
!14328 = distinct !{!14328, !14306, !14329}
!14329 = !DILocation(line: 764, column: 2, scope: !14286)
!14330 = !DILocation(line: 787, column: 2, scope: !14283)
!14331 = !DILocation(line: 788, column: 1, scope: !14283)
!14332 = !DILocation(line: 782, column: 20, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14334, file: !2247, line: 782, column: 7)
!14334 = distinct !DILexicalBlock(scope: !14335, file: !2247, line: 781, column: 38)
!14335 = distinct !DILexicalBlock(scope: !14304, file: !2247, line: 781, column: 2)
!14336 = !DILocation(line: 782, column: 31, scope: !14333)
!14337 = !DILocation(line: 782, column: 7, scope: !14334)
!14338 = !DILocation(line: 783, column: 37, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14333, file: !2247, line: 782, column: 51)
!14340 = !DILocation(line: 784, column: 10, scope: !14339)
!14341 = !DILocation(line: 783, column: 4, scope: !14339)
!14342 = !DILocation(line: 785, column: 3, scope: !14339)
!14343 = !DILocation(line: 781, column: 2, scope: !14335)
!14344 = !DILocation(line: 781, column: 2, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14335, file: !2247, line: 781, column: 2)
!14346 = distinct !{!14346, !14309, !14347}
!14347 = !DILocation(line: 786, column: 2, scope: !14304)
!14348 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5997, file: !5997, line: 403, type: !5998, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14349)
!14349 = !{!14350}
!14350 = !DILocalVariable(name: "t", arg: 1, scope: !14348, file: !5997, line: 403, type: !2355)
!14351 = !DILocation(line: 0, scope: !14348)
!14352 = !DILocalVariable(name: "t", arg: 1, scope: !14353, file: !5997, line: 102, type: !2355)
!14353 = distinct !DISubprogram(name: "z_tmcvt", scope: !5997, file: !5997, line: 102, type: !6005, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14354)
!14354 = !{!14352, !14355, !14356, !14357, !14358, !14359, !14360, !14361, !14362, !14363, !14364}
!14355 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14353, file: !5997, line: 102, type: !132)
!14356 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14353, file: !5997, line: 103, type: !132)
!14357 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14353, file: !5997, line: 103, type: !179)
!14358 = !DILocalVariable(name: "result32", arg: 5, scope: !14353, file: !5997, line: 104, type: !179)
!14359 = !DILocalVariable(name: "round_up", arg: 6, scope: !14353, file: !5997, line: 104, type: !179)
!14360 = !DILocalVariable(name: "round_off", arg: 7, scope: !14353, file: !5997, line: 105, type: !179)
!14361 = !DILocalVariable(name: "mul_ratio", scope: !14353, file: !5997, line: 107, type: !179)
!14362 = !DILocalVariable(name: "div_ratio", scope: !14353, file: !5997, line: 109, type: !179)
!14363 = !DILocalVariable(name: "off", scope: !14353, file: !5997, line: 116, type: !2355)
!14364 = !DILocalVariable(name: "rdivisor", scope: !14365, file: !5997, line: 119, type: !132)
!14365 = distinct !DILexicalBlock(scope: !14366, file: !5997, line: 118, column: 18)
!14366 = distinct !DILexicalBlock(scope: !14353, file: !5997, line: 118, column: 6)
!14367 = !DILocation(line: 0, scope: !14353, inlinedAt: !14368)
!14368 = distinct !DILocation(line: 406, column: 9, scope: !14348)
!14369 = !DILocation(line: 145, column: 13, scope: !14370, inlinedAt: !14368)
!14370 = distinct !DILexicalBlock(scope: !14371, file: !5997, line: 144, column: 10)
!14371 = distinct !DILexicalBlock(scope: !14372, file: !5997, line: 142, column: 7)
!14372 = distinct !DILexicalBlock(scope: !14373, file: !5997, line: 141, column: 24)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !5997, line: 141, column: 13)
!14374 = distinct !DILexicalBlock(scope: !14353, file: !5997, line: 134, column: 6)
!14375 = !DILocation(line: 406, column: 2, scope: !14348)
!14376 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2247, file: !2247, line: 817, type: !3545, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14377)
!14377 = !{!14378, !14379, !14380, !14381}
!14378 = !DILocalVariable(name: "entry", arg: 1, scope: !14376, file: !2247, line: 817, type: !3547)
!14379 = !DILocalVariable(name: "p1", arg: 2, scope: !14376, file: !2247, line: 818, type: !102)
!14380 = !DILocalVariable(name: "p2", arg: 3, scope: !14376, file: !2247, line: 818, type: !102)
!14381 = !DILocalVariable(name: "p3", arg: 4, scope: !14376, file: !2247, line: 818, type: !102)
!14382 = !DILocation(line: 0, scope: !14376)
!14383 = !DILocation(line: 822, column: 2, scope: !14376)
!14384 = !DILocation(line: 822, column: 17, scope: !14376)
!14385 = !DILocation(line: 822, column: 30, scope: !14376)
!14386 = !DILocation(line: 823, column: 2, scope: !14376)
!14387 = !DILocation(line: 845, column: 2, scope: !14376)
!14388 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2247, file: !2247, line: 888, type: !14389, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14391)
!14389 = !DISubroutineType(types: !14390)
!14390 = !{!103, !2251}
!14391 = !{!14392}
!14392 = !DILocalVariable(name: "thread", arg: 1, scope: !14388, file: !2247, line: 888, type: !2251)
!14393 = !DILocation(line: 0, scope: !14388)
!14394 = !DILocation(line: 893, column: 2, scope: !14388)
!14395 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2247, file: !2247, line: 897, type: !14396, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14398)
!14396 = !DISubroutineType(types: !14397)
!14397 = !{!103, !2251, !32}
!14398 = !{!14399, !14400}
!14399 = !DILocalVariable(name: "thread", arg: 1, scope: !14395, file: !2247, line: 897, type: !2251)
!14400 = !DILocalVariable(name: "options", arg: 2, scope: !14395, file: !2247, line: 897, type: !32)
!14401 = !DILocation(line: 0, scope: !14395)
!14402 = !DILocation(line: 902, column: 2, scope: !14395)
!14403 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2247, file: !2247, line: 1072, type: !14404, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14409)
!14404 = !DISubroutineType(types: !14405)
!14405 = !{!103, !2250, !14406}
!14406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14407, size: 32)
!14407 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !380, line: 234, baseType: !14408)
!14408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !380, line: 192, elements: !486)
!14409 = !{!14410, !14411}
!14410 = !DILocalVariable(name: "thread", arg: 1, scope: !14403, file: !2247, line: 1072, type: !2250)
!14411 = !DILocalVariable(name: "stats", arg: 2, scope: !14403, file: !2247, line: 1073, type: !14406)
!14412 = !DILocation(line: 0, scope: !14403)
!14413 = !DILocation(line: 1075, column: 14, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14403, file: !2247, line: 1075, column: 6)
!14415 = !DILocation(line: 1075, column: 23, scope: !14414)
!14416 = !DILocation(line: 1086, column: 1, scope: !14403)
!14417 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2247, file: !2247, line: 1088, type: !14418, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !14420)
!14418 = !DISubroutineType(types: !14419)
!14419 = !{!103, !14406}
!14420 = !{!14421}
!14421 = !DILocalVariable(name: "stats", arg: 1, scope: !14417, file: !2247, line: 1088, type: !14406)
!14422 = !DILocation(line: 0, scope: !14417)
!14423 = !DILocation(line: 1094, column: 12, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14417, file: !2247, line: 1094, column: 6)
!14425 = !DILocation(line: 1120, column: 1, scope: !14417)
!14426 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14427, file: !14427, line: 20, type: !3229, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !486)
!14427 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14428 = !DILocation(line: 30, column: 2, scope: !14426)
!14429 = !DILocation(line: 31, column: 1, scope: !14426)
!14430 = distinct !DISubprogram(name: "idle", scope: !14427, file: !14427, line: 33, type: !3550, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !14431)
!14431 = !{!14432, !14433, !14434}
!14432 = !DILocalVariable(name: "unused1", arg: 1, scope: !14430, file: !14427, line: 33, type: !102)
!14433 = !DILocalVariable(name: "unused2", arg: 2, scope: !14430, file: !14427, line: 33, type: !102)
!14434 = !DILocalVariable(name: "unused3", arg: 3, scope: !14430, file: !14427, line: 33, type: !102)
!14435 = !DILocation(line: 0, scope: !14430)
!14436 = !DILocation(line: 41, column: 2, scope: !14430)
!14437 = !DILocation(line: 55, column: 2, scope: !14438, inlinedAt: !14442)
!14438 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !14439)
!14439 = !{!14440, !14441}
!14440 = !DILocalVariable(name: "key", scope: !14438, file: !5780, line: 44, type: !32)
!14441 = !DILocalVariable(name: "tmp", scope: !14438, file: !5780, line: 53, type: !32)
!14442 = distinct !DILocation(line: 62, column: 10, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14430, file: !14427, line: 41, column: 15)
!14444 = !{i64 1649022}
!14445 = !DILocation(line: 0, scope: !14438, inlinedAt: !14442)
!14446 = !DILocation(line: 86, column: 3, scope: !14443)
!14447 = distinct !{!14447, !14436, !14448}
!14448 = !DILocation(line: 105, column: 2, scope: !14430)
!14449 = distinct !DISubprogram(name: "k_cpu_idle", scope: !325, file: !325, line: 5627, type: !3229, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !486)
!14450 = !DILocation(line: 5629, column: 2, scope: !14449)
!14451 = !DILocation(line: 5630, column: 1, scope: !14449)
!14452 = !DISubprogram(name: "arch_cpu_idle", scope: !3548, file: !3548, line: 167, type: !3229, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!14453 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2392, file: !2392, line: 41, type: !14454, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14467)
!14454 = !DISubroutineType(types: !14455)
!14455 = !{!103, !14456, !32, !32}
!14456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14457, size: 32)
!14457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !325, line: 2909, size: 128, elements: !14458)
!14458 = !{!14459, !14465, !14466}
!14459 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14457, file: !325, line: 2910, baseType: !14460, size: 64)
!14460 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !14461)
!14461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !14462)
!14462 = !{!14463}
!14463 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14461, file: !329, line: 232, baseType: !14464, size: 64)
!14464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !2378)
!14465 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14457, file: !325, line: 2911, baseType: !32, size: 32, offset: 64)
!14466 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14457, file: !325, line: 2912, baseType: !32, size: 32, offset: 96)
!14467 = !{!14468, !14469, !14470}
!14468 = !DILocalVariable(name: "sem", arg: 1, scope: !14453, file: !2392, line: 41, type: !14456)
!14469 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14453, file: !2392, line: 41, type: !32)
!14470 = !DILocalVariable(name: "limit", arg: 3, scope: !14453, file: !2392, line: 42, type: !32)
!14471 = !DILocation(line: 0, scope: !14453)
!14472 = !DILocation(line: 47, column: 2, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14453, file: !2392, line: 47, column: 2)
!14474 = !DILocation(line: 53, column: 7, scope: !14453)
!14475 = !DILocation(line: 53, column: 13, scope: !14453)
!14476 = !DILocation(line: 54, column: 7, scope: !14453)
!14477 = !DILocation(line: 54, column: 13, scope: !14453)
!14478 = !DILocation(line: 58, column: 21, scope: !14453)
!14479 = !DILocation(line: 58, column: 2, scope: !14453)
!14480 = !DILocation(line: 64, column: 2, scope: !14453)
!14481 = !DILocation(line: 65, column: 1, scope: !14453)
!14482 = distinct !DISubprogram(name: "z_waitq_init", scope: !14114, file: !14114, line: 47, type: !14483, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14486)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{null, !14485}
!14485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14460, size: 32)
!14486 = !{!14487}
!14487 = !DILocalVariable(name: "w", arg: 1, scope: !14482, file: !14114, line: 47, type: !14485)
!14488 = !DILocation(line: 0, scope: !14482)
!14489 = !DILocation(line: 49, column: 21, scope: !14482)
!14490 = !DILocation(line: 49, column: 2, scope: !14482)
!14491 = !DILocation(line: 50, column: 1, scope: !14482)
!14492 = distinct !DISubprogram(name: "sys_dlist_init", scope: !334, file: !334, line: 197, type: !14493, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14496)
!14493 = !DISubroutineType(types: !14494)
!14494 = !{null, !14495}
!14495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14464, size: 32)
!14496 = !{!14497}
!14497 = !DILocalVariable(name: "list", arg: 1, scope: !14492, file: !334, line: 197, type: !14495)
!14498 = !DILocation(line: 0, scope: !14492)
!14499 = !DILocation(line: 199, column: 8, scope: !14492)
!14500 = !DILocation(line: 199, column: 13, scope: !14492)
!14501 = !DILocation(line: 200, column: 8, scope: !14492)
!14502 = !DILocation(line: 200, column: 13, scope: !14492)
!14503 = !DILocation(line: 201, column: 1, scope: !14492)
!14504 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2392, file: !2392, line: 86, type: !14505, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14507)
!14505 = !DISubroutineType(types: !14506)
!14506 = !{null, !14456}
!14507 = !{!14508, !14509, !14514}
!14508 = !DILocalVariable(name: "sem", arg: 1, scope: !14504, file: !2392, line: 86, type: !14456)
!14509 = !DILocalVariable(name: "key", scope: !14504, file: !2392, line: 88, type: !14510)
!14510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !485, line: 106, baseType: !14511)
!14511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !485, line: 32, size: 32, elements: !14512)
!14512 = !{!14513}
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14511, file: !485, line: 33, baseType: !103, size: 32)
!14514 = !DILocalVariable(name: "thread", scope: !14504, file: !2392, line: 89, type: !14515)
!14515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14516, size: 32)
!14516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !380, line: 245, size: 1024, elements: !14517)
!14517 = !{!14518, !14556, !14568, !14569, !14570, !14571, !14577, !14589}
!14518 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14516, file: !380, line: 247, baseType: !14519, size: 384)
!14519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !380, line: 57, size: 384, elements: !14520)
!14520 = !{!14521, !14531, !14532, !14533, !14534, !14543, !14544, !14545}
!14521 = !DIDerivedType(tag: DW_TAG_member, scope: !14519, file: !380, line: 60, baseType: !14522, size: 64)
!14522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14519, file: !380, line: 60, size: 64, elements: !14523)
!14523 = !{!14524, !14525}
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14522, file: !380, line: 61, baseType: !2377, size: 64)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14522, file: !380, line: 62, baseType: !14526, size: 64)
!14526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !405, line: 49, size: 64, elements: !14527)
!14527 = !{!14528}
!14528 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14526, file: !405, line: 50, baseType: !14529, size: 64)
!14529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14530, size: 64, elements: !410)
!14530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14526, size: 32)
!14531 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14519, file: !380, line: 68, baseType: !14485, size: 32, offset: 64)
!14532 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14519, file: !380, line: 71, baseType: !176, size: 8, offset: 96)
!14533 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14519, file: !380, line: 74, baseType: !176, size: 8, offset: 104)
!14534 = !DIDerivedType(tag: DW_TAG_member, scope: !14519, file: !380, line: 90, baseType: !14535, size: 16, offset: 112)
!14535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14519, file: !380, line: 90, size: 16, elements: !14536)
!14536 = !{!14537, !14542}
!14537 = !DIDerivedType(tag: DW_TAG_member, scope: !14535, file: !380, line: 91, baseType: !14538, size: 16)
!14538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14535, file: !380, line: 91, size: 16, elements: !14539)
!14539 = !{!14540, !14541}
!14540 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14538, file: !380, line: 96, baseType: !428, size: 8)
!14541 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14538, file: !380, line: 97, baseType: !176, size: 8, offset: 8)
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14535, file: !380, line: 100, baseType: !353, size: 16)
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14519, file: !380, line: 107, baseType: !132, size: 32, offset: 128)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14519, file: !380, line: 127, baseType: !102, size: 32, offset: 160)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14519, file: !380, line: 131, baseType: !14546, size: 192, offset: 192)
!14546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !329, line: 244, size: 192, elements: !14547)
!14547 = !{!14548, !14549, !14555}
!14548 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14546, file: !329, line: 245, baseType: !2377, size: 64)
!14549 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14546, file: !329, line: 246, baseType: !14550, size: 32, offset: 64)
!14550 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !329, line: 242, baseType: !14551)
!14551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14552, size: 32)
!14552 = !DISubroutineType(types: !14553)
!14553 = !{null, !14554}
!14554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14546, size: 32)
!14555 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14546, file: !329, line: 249, baseType: !445, size: 64, offset: 128)
!14556 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14516, file: !380, line: 250, baseType: !14557, size: 288, offset: 384)
!14557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !449, line: 25, size: 288, elements: !14558)
!14558 = !{!14559, !14560, !14561, !14562, !14563, !14564, !14565, !14566, !14567}
!14559 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14557, file: !449, line: 26, baseType: !132, size: 32)
!14560 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14557, file: !449, line: 27, baseType: !132, size: 32, offset: 32)
!14561 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14557, file: !449, line: 28, baseType: !132, size: 32, offset: 64)
!14562 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14557, file: !449, line: 29, baseType: !132, size: 32, offset: 96)
!14563 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14557, file: !449, line: 30, baseType: !132, size: 32, offset: 128)
!14564 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14557, file: !449, line: 31, baseType: !132, size: 32, offset: 160)
!14565 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14557, file: !449, line: 32, baseType: !132, size: 32, offset: 192)
!14566 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14557, file: !449, line: 33, baseType: !132, size: 32, offset: 224)
!14567 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14557, file: !449, line: 34, baseType: !132, size: 32, offset: 256)
!14568 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14516, file: !380, line: 253, baseType: !102, size: 32, offset: 672)
!14569 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14516, file: !380, line: 256, baseType: !14460, size: 64, offset: 704)
!14570 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14516, file: !380, line: 294, baseType: !103, size: 32, offset: 768)
!14571 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14516, file: !380, line: 300, baseType: !14572, size: 96, offset: 800)
!14572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !380, line: 149, size: 96, elements: !14573)
!14573 = !{!14574, !14575, !14576}
!14574 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14572, file: !380, line: 153, baseType: !22, size: 32)
!14575 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14572, file: !380, line: 162, baseType: !369, size: 32, offset: 32)
!14576 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14572, file: !380, line: 168, baseType: !369, size: 32, offset: 64)
!14577 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14516, file: !380, line: 325, baseType: !14578, size: 32, offset: 896)
!14578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14579, size: 32)
!14579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !14580)
!14580 = !{!14581, !14587, !14588}
!14581 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14579, file: !325, line: 5074, baseType: !14582, size: 96)
!14582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !14583)
!14583 = !{!14584, !14585, !14586}
!14584 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14582, file: !475, line: 57, baseType: !478, size: 32)
!14585 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14582, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!14586 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14582, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!14587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14579, file: !325, line: 5075, baseType: !14460, size: 64, offset: 96)
!14588 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14579, file: !325, line: 5076, baseType: !2393, offset: 160)
!14589 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14516, file: !380, line: 343, baseType: !14590, size: 64, offset: 928)
!14590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !449, line: 60, size: 64, elements: !14591)
!14591 = !{!14592, !14593}
!14592 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14590, file: !449, line: 63, baseType: !132, size: 32)
!14593 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14590, file: !449, line: 66, baseType: !132, size: 32, offset: 32)
!14594 = !DILocation(line: 0, scope: !14504)
!14595 = !DILocalVariable(name: "l", arg: 1, scope: !14596, file: !485, line: 136, type: !14599)
!14596 = distinct !DISubprogram(name: "k_spin_lock", scope: !485, file: !485, line: 136, type: !14597, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14600)
!14597 = !DISubroutineType(types: !14598)
!14598 = !{!14510, !14599}
!14599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!14600 = !{!14595, !14601}
!14601 = !DILocalVariable(name: "k", scope: !14596, file: !485, line: 139, type: !14510)
!14602 = !DILocation(line: 0, scope: !14596, inlinedAt: !14603)
!14603 = distinct !DILocation(line: 88, column: 25, scope: !14504)
!14604 = !DILocation(line: 55, column: 2, scope: !14605, inlinedAt: !14609)
!14605 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14606)
!14606 = !{!14607, !14608}
!14607 = !DILocalVariable(name: "key", scope: !14605, file: !5780, line: 44, type: !32)
!14608 = !DILocalVariable(name: "tmp", scope: !14605, file: !5780, line: 53, type: !32)
!14609 = distinct !DILocation(line: 145, column: 10, scope: !14596, inlinedAt: !14603)
!14610 = !{i64 1650584}
!14611 = !DILocation(line: 0, scope: !14605, inlinedAt: !14609)
!14612 = !DILocation(line: 93, column: 39, scope: !14504)
!14613 = !DILocation(line: 93, column: 11, scope: !14504)
!14614 = !DILocation(line: 95, column: 13, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14504, file: !2392, line: 95, column: 6)
!14616 = !DILocation(line: 95, column: 6, scope: !14504)
!14617 = !DILocalVariable(name: "thread", arg: 1, scope: !14618, file: !13808, line: 65, type: !14515)
!14618 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13808, file: !13808, line: 65, type: !14619, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14621)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{null, !14515, !32}
!14621 = !{!14617, !14622}
!14622 = !DILocalVariable(name: "value", arg: 2, scope: !14618, file: !13808, line: 65, type: !32)
!14623 = !DILocation(line: 0, scope: !14618, inlinedAt: !14624)
!14624 = distinct !DILocation(line: 96, column: 3, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14615, file: !2392, line: 95, column: 22)
!14626 = !DILocation(line: 67, column: 15, scope: !14618, inlinedAt: !14624)
!14627 = !DILocation(line: 67, column: 33, scope: !14618, inlinedAt: !14624)
!14628 = !DILocation(line: 97, column: 3, scope: !14625)
!14629 = !DILocation(line: 98, column: 2, scope: !14625)
!14630 = !DILocation(line: 99, column: 23, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14615, file: !2392, line: 98, column: 9)
!14632 = !DILocation(line: 99, column: 37, scope: !14631)
!14633 = !DILocation(line: 99, column: 29, scope: !14631)
!14634 = !DILocation(line: 99, column: 17, scope: !14631)
!14635 = !DILocation(line: 99, column: 14, scope: !14631)
!14636 = !DILocation(line: 103, column: 2, scope: !14504)
!14637 = !DILocation(line: 106, column: 1, scope: !14504)
!14638 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2392, file: !2392, line: 117, type: !14639, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14645)
!14639 = !DISubroutineType(types: !14640)
!14640 = !{!103, !14456, !14641}
!14641 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1753, line: 67, baseType: !14642)
!14642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1753, line: 65, size: 64, elements: !14643)
!14643 = !{!14644}
!14644 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14642, file: !1753, line: 66, baseType: !1752, size: 64)
!14645 = !{!14646, !14647, !14648, !14649, !14650}
!14646 = !DILocalVariable(name: "sem", arg: 1, scope: !14638, file: !2392, line: 117, type: !14456)
!14647 = !DILocalVariable(name: "timeout", arg: 2, scope: !14638, file: !2392, line: 117, type: !14641)
!14648 = !DILocalVariable(name: "ret", scope: !14638, file: !2392, line: 119, type: !103)
!14649 = !DILocalVariable(name: "key", scope: !14638, file: !2392, line: 124, type: !14510)
!14650 = !DILabel(scope: !14638, name: "out", file: !2392, line: 145)
!14651 = !DILocation(line: 0, scope: !14638)
!14652 = !DILocation(line: 0, scope: !14596, inlinedAt: !14653)
!14653 = distinct !DILocation(line: 124, column: 25, scope: !14638)
!14654 = !DILocation(line: 55, column: 2, scope: !14605, inlinedAt: !14655)
!14655 = distinct !DILocation(line: 145, column: 10, scope: !14596, inlinedAt: !14653)
!14656 = !DILocation(line: 0, scope: !14605, inlinedAt: !14655)
!14657 = !DILocation(line: 128, column: 6, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14638, file: !2392, line: 128, column: 6)
!14659 = !DILocation(line: 128, column: 6, scope: !14638)
!14660 = !{!"branch_weights", i32 1, i32 2000}
!14661 = !DILocation(line: 129, column: 13, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14658, file: !2392, line: 128, column: 31)
!14663 = !DILocalVariable(name: "key", arg: 2, scope: !14664, file: !485, line: 190, type: !14510)
!14664 = distinct !DISubprogram(name: "k_spin_unlock", scope: !485, file: !485, line: 189, type: !14665, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14667)
!14665 = !DISubroutineType(types: !14666)
!14666 = !{null, !14599, !14510}
!14667 = !{!14668, !14663}
!14668 = !DILocalVariable(name: "l", arg: 1, scope: !14664, file: !485, line: 189, type: !14599)
!14669 = !DILocation(line: 0, scope: !14664, inlinedAt: !14670)
!14670 = distinct !DILocation(line: 130, column: 3, scope: !14662)
!14671 = !DILocalVariable(name: "key", arg: 1, scope: !14672, file: !5780, line: 84, type: !32)
!14672 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14673)
!14673 = !{!14671}
!14674 = !DILocation(line: 0, scope: !14672, inlinedAt: !14675)
!14675 = distinct !DILocation(line: 215, column: 2, scope: !14664, inlinedAt: !14670)
!14676 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !14675)
!14677 = !{i64 1651401}
!14678 = !DILocation(line: 132, column: 3, scope: !14662)
!14679 = !DILocation(line: 135, column: 6, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14638, file: !2392, line: 135, column: 6)
!14681 = !DILocation(line: 135, column: 6, scope: !14638)
!14682 = !DILocation(line: 0, scope: !14664, inlinedAt: !14683)
!14683 = distinct !DILocation(line: 136, column: 3, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14680, file: !2392, line: 135, column: 40)
!14685 = !DILocation(line: 0, scope: !14672, inlinedAt: !14686)
!14686 = distinct !DILocation(line: 215, column: 2, scope: !14664, inlinedAt: !14683)
!14687 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !14686)
!14688 = !DILocation(line: 138, column: 3, scope: !14684)
!14689 = !DILocation(line: 143, column: 38, scope: !14638)
!14690 = !DILocation(line: 143, column: 8, scope: !14638)
!14691 = !DILocation(line: 143, column: 2, scope: !14638)
!14692 = !DILocation(line: 145, column: 1, scope: !14638)
!14693 = !DILocation(line: 148, column: 2, scope: !14638)
!14694 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2392, file: !2392, line: 151, type: !14505, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !14695)
!14695 = !{!14696, !14697, !14698}
!14696 = !DILocalVariable(name: "sem", arg: 1, scope: !14694, file: !2392, line: 151, type: !14456)
!14697 = !DILocalVariable(name: "thread", scope: !14694, file: !2392, line: 153, type: !14515)
!14698 = !DILocalVariable(name: "key", scope: !14694, file: !2392, line: 154, type: !14510)
!14699 = !DILocation(line: 0, scope: !14694)
!14700 = !DILocation(line: 0, scope: !14596, inlinedAt: !14701)
!14701 = distinct !DILocation(line: 154, column: 25, scope: !14694)
!14702 = !DILocation(line: 55, column: 2, scope: !14605, inlinedAt: !14703)
!14703 = distinct !DILocation(line: 145, column: 10, scope: !14596, inlinedAt: !14701)
!14704 = !DILocation(line: 0, scope: !14605, inlinedAt: !14703)
!14705 = !DILocation(line: 157, column: 12, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14694, file: !2392, line: 156, column: 15)
!14707 = !DILocation(line: 158, column: 14, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14706, file: !2392, line: 158, column: 7)
!14709 = !DILocation(line: 158, column: 7, scope: !14706)
!14710 = !DILocation(line: 0, scope: !14618, inlinedAt: !14711)
!14711 = distinct !DILocation(line: 161, column: 3, scope: !14706)
!14712 = !DILocation(line: 67, column: 15, scope: !14618, inlinedAt: !14711)
!14713 = !DILocation(line: 67, column: 33, scope: !14618, inlinedAt: !14711)
!14714 = !DILocation(line: 162, column: 3, scope: !14706)
!14715 = distinct !{!14715, !14716, !14717}
!14716 = !DILocation(line: 156, column: 2, scope: !14694)
!14717 = !DILocation(line: 163, column: 2, scope: !14694)
!14718 = !DILocation(line: 164, column: 7, scope: !14694)
!14719 = !DILocation(line: 164, column: 13, scope: !14694)
!14720 = !DILocation(line: 170, column: 2, scope: !14694)
!14721 = !DILocation(line: 171, column: 1, scope: !14694)
!14722 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2504, file: !2504, line: 93, type: !14723, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14725)
!14723 = !DISubroutineType(types: !14724)
!14724 = !{!357, !2399, !2399}
!14725 = !{!14726, !14727, !14728, !14729}
!14726 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14722, file: !2504, line: 93, type: !2399)
!14727 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14722, file: !2504, line: 94, type: !2399)
!14728 = !DILocalVariable(name: "b1", scope: !14722, file: !2504, line: 97, type: !357)
!14729 = !DILocalVariable(name: "b2", scope: !14722, file: !2504, line: 98, type: !357)
!14730 = !DILocation(line: 0, scope: !14722)
!14731 = !DILocation(line: 97, column: 30, scope: !14722)
!14732 = !DILocation(line: 98, column: 30, scope: !14722)
!14733 = !DILocation(line: 100, column: 9, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14722, file: !2504, line: 100, column: 6)
!14735 = !DILocation(line: 100, column: 6, scope: !14722)
!14736 = !DILocation(line: 125, column: 1, scope: !14722)
!14737 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2504, file: !2504, line: 428, type: !14738, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14740)
!14738 = !DISubroutineType(types: !14739)
!14739 = !{null, !2399}
!14740 = !{!14741}
!14741 = !DILocalVariable(name: "curr", arg: 1, scope: !14737, file: !2504, line: 428, type: !2399)
!14742 = !DILocation(line: 0, scope: !14737)
!14743 = !DILocation(line: 434, column: 6, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14737, file: !2504, line: 434, column: 6)
!14745 = !DILocation(line: 434, column: 23, scope: !14744)
!14746 = !DILocation(line: 434, column: 6, scope: !14737)
!14747 = !DILocation(line: 435, column: 50, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14744, file: !2504, line: 434, column: 29)
!14749 = !DILocation(line: 435, column: 48, scope: !14748)
!14750 = !DILocation(line: 435, column: 29, scope: !14748)
!14751 = !DILocation(line: 436, column: 24, scope: !14748)
!14752 = !DILocation(line: 436, column: 3, scope: !14748)
!14753 = !DILocation(line: 437, column: 2, scope: !14748)
!14754 = !DILocation(line: 438, column: 1, scope: !14737)
!14755 = distinct !DISubprogram(name: "slice_time", scope: !2504, file: !2504, line: 407, type: !14756, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14758)
!14756 = !DISubroutineType(types: !14757)
!14757 = !{!103, !2399}
!14758 = !{!14759, !14760}
!14759 = !DILocalVariable(name: "curr", arg: 1, scope: !14755, file: !2504, line: 407, type: !2399)
!14760 = !DILocalVariable(name: "ret", scope: !14755, file: !2504, line: 409, type: !103)
!14761 = !DILocation(line: 0, scope: !14755)
!14762 = !DILocation(line: 409, column: 12, scope: !14755)
!14763 = !DILocation(line: 416, column: 2, scope: !14755)
!14764 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2504, file: !2504, line: 440, type: !14765, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14767)
!14765 = !DISubroutineType(types: !14766)
!14766 = !{null, !357, !103}
!14767 = !{!14768, !14769, !14770, !14776}
!14768 = !DILocalVariable(name: "slice", arg: 1, scope: !14764, file: !2504, line: 440, type: !357)
!14769 = !DILocalVariable(name: "prio", arg: 2, scope: !14764, file: !2504, line: 440, type: !103)
!14770 = !DILocalVariable(name: "__i", scope: !14771, file: !2504, line: 442, type: !14772)
!14771 = distinct !DILexicalBlock(scope: !14764, file: !2504, line: 442, column: 2)
!14772 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !485, line: 106, baseType: !14773)
!14773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !485, line: 32, size: 32, elements: !14774)
!14774 = !{!14775}
!14775 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14773, file: !485, line: 33, baseType: !103, size: 32)
!14776 = !DILocalVariable(name: "__key", scope: !14771, file: !2504, line: 442, type: !14772)
!14777 = !DILocation(line: 0, scope: !14764)
!14778 = !DILocation(line: 0, scope: !14771)
!14779 = !DILocalVariable(name: "l", arg: 1, scope: !14780, file: !485, line: 136, type: !14783)
!14780 = distinct !DISubprogram(name: "k_spin_lock", scope: !485, file: !485, line: 136, type: !14781, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14784)
!14781 = !DISubroutineType(types: !14782)
!14782 = !{!14772, !14783}
!14783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!14784 = !{!14779, !14785}
!14785 = !DILocalVariable(name: "k", scope: !14780, file: !485, line: 139, type: !14772)
!14786 = !DILocation(line: 0, scope: !14780, inlinedAt: !14787)
!14787 = distinct !DILocation(line: 442, column: 2, scope: !14771)
!14788 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !14793)
!14789 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14790)
!14790 = !{!14791, !14792}
!14791 = !DILocalVariable(name: "key", scope: !14789, file: !5780, line: 44, type: !32)
!14792 = !DILocalVariable(name: "tmp", scope: !14789, file: !5780, line: 53, type: !32)
!14793 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !14787)
!14794 = !{i64 1692993}
!14795 = !DILocation(line: 0, scope: !14789, inlinedAt: !14793)
!14796 = !DILocation(line: 443, column: 29, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14798, file: !2504, line: 442, column: 26)
!14798 = distinct !DILexicalBlock(scope: !14771, file: !2504, line: 442, column: 2)
!14799 = !DILocation(line: 444, column: 17, scope: !14797)
!14800 = !DILocation(line: 445, column: 51, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14797, file: !2504, line: 445, column: 7)
!14802 = !DILocation(line: 445, column: 7, scope: !14797)
!14803 = !DILocation(line: 0, scope: !14797)
!14804 = !DILocation(line: 451, column: 18, scope: !14797)
!14805 = !DILocation(line: 452, column: 3, scope: !14797)
!14806 = !DILocalVariable(name: "key", arg: 2, scope: !14807, file: !485, line: 190, type: !14772)
!14807 = distinct !DISubprogram(name: "k_spin_unlock", scope: !485, file: !485, line: 189, type: !14808, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14810)
!14808 = !DISubroutineType(types: !14809)
!14809 = !{null, !14783, !14772}
!14810 = !{!14811, !14806}
!14811 = !DILocalVariable(name: "l", arg: 1, scope: !14807, file: !485, line: 189, type: !14783)
!14812 = !DILocation(line: 0, scope: !14807, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 442, column: 2, scope: !14798)
!14814 = !DILocalVariable(name: "key", arg: 1, scope: !14815, file: !5780, line: 84, type: !32)
!14815 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14816)
!14816 = !{!14814}
!14817 = !DILocation(line: 0, scope: !14815, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !14813)
!14819 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !14818)
!14820 = !{i64 1693810}
!14821 = !DILocation(line: 454, column: 1, scope: !14764)
!14822 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !5997, file: !5997, line: 389, type: !7786, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14823)
!14823 = !{!14824}
!14824 = !DILocalVariable(name: "t", arg: 1, scope: !14822, file: !5997, line: 389, type: !132)
!14825 = !DILocation(line: 0, scope: !14822)
!14826 = !DILocalVariable(name: "t", arg: 1, scope: !14827, file: !5997, line: 102, type: !2355)
!14827 = distinct !DISubprogram(name: "z_tmcvt", scope: !5997, file: !5997, line: 102, type: !6005, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14828)
!14828 = !{!14826, !14829, !14830, !14831, !14832, !14833, !14834, !14835, !14836, !14837, !14838}
!14829 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14827, file: !5997, line: 102, type: !132)
!14830 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14827, file: !5997, line: 103, type: !132)
!14831 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14827, file: !5997, line: 103, type: !179)
!14832 = !DILocalVariable(name: "result32", arg: 5, scope: !14827, file: !5997, line: 104, type: !179)
!14833 = !DILocalVariable(name: "round_up", arg: 6, scope: !14827, file: !5997, line: 104, type: !179)
!14834 = !DILocalVariable(name: "round_off", arg: 7, scope: !14827, file: !5997, line: 105, type: !179)
!14835 = !DILocalVariable(name: "mul_ratio", scope: !14827, file: !5997, line: 107, type: !179)
!14836 = !DILocalVariable(name: "div_ratio", scope: !14827, file: !5997, line: 109, type: !179)
!14837 = !DILocalVariable(name: "off", scope: !14827, file: !5997, line: 116, type: !2355)
!14838 = !DILocalVariable(name: "rdivisor", scope: !14839, file: !5997, line: 119, type: !132)
!14839 = distinct !DILexicalBlock(scope: !14840, file: !5997, line: 118, column: 18)
!14840 = distinct !DILexicalBlock(scope: !14827, file: !5997, line: 118, column: 6)
!14841 = !DILocation(line: 0, scope: !14827, inlinedAt: !14842)
!14842 = distinct !DILocation(line: 392, column: 9, scope: !14822)
!14843 = !DILocation(line: 143, column: 25, scope: !14844, inlinedAt: !14842)
!14844 = distinct !DILexicalBlock(scope: !14845, file: !5997, line: 142, column: 17)
!14845 = distinct !DILexicalBlock(scope: !14846, file: !5997, line: 142, column: 7)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !5997, line: 141, column: 24)
!14847 = distinct !DILexicalBlock(scope: !14848, file: !5997, line: 141, column: 13)
!14848 = distinct !DILexicalBlock(scope: !14827, file: !5997, line: 134, column: 6)
!14849 = !DILocation(line: 392, column: 2, scope: !14822)
!14850 = distinct !DISubprogram(name: "z_time_slice", scope: !2504, file: !2504, line: 502, type: !8529, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14851)
!14851 = !{!14852, !14853}
!14852 = !DILocalVariable(name: "ticks", arg: 1, scope: !14850, file: !2504, line: 502, type: !103)
!14853 = !DILocalVariable(name: "key", scope: !14850, file: !2504, line: 511, type: !14772)
!14854 = !DILocation(line: 0, scope: !14850)
!14855 = !DILocation(line: 0, scope: !14780, inlinedAt: !14856)
!14856 = distinct !DILocation(line: 511, column: 25, scope: !14850)
!14857 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !14858)
!14858 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !14856)
!14859 = !DILocation(line: 0, scope: !14789, inlinedAt: !14858)
!14860 = !DILocation(line: 514, column: 6, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14850, file: !2504, line: 514, column: 6)
!14862 = !DILocation(line: 514, column: 25, scope: !14861)
!14863 = !DILocation(line: 514, column: 22, scope: !14861)
!14864 = !DILocation(line: 514, column: 6, scope: !14850)
!14865 = !DILocation(line: 515, column: 3, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14861, file: !2504, line: 514, column: 35)
!14867 = !DILocation(line: 0, scope: !14807, inlinedAt: !14868)
!14868 = distinct !DILocation(line: 516, column: 3, scope: !14866)
!14869 = !DILocation(line: 0, scope: !14815, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !14868)
!14871 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !14870)
!14872 = !DILocation(line: 517, column: 3, scope: !14866)
!14873 = !DILocation(line: 519, column: 18, scope: !14850)
!14874 = !DILocation(line: 522, column: 6, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14850, file: !2504, line: 522, column: 6)
!14876 = !DILocation(line: 522, column: 27, scope: !14875)
!14877 = !DILocation(line: 522, column: 30, scope: !14875)
!14878 = !DILocation(line: 522, column: 6, scope: !14850)
!14879 = !DILocation(line: 523, column: 30, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !2504, line: 523, column: 7)
!14881 = distinct !DILexicalBlock(scope: !14875, file: !2504, line: 522, column: 51)
!14882 = !DILocation(line: 523, column: 13, scope: !14880)
!14883 = !DILocation(line: 523, column: 7, scope: !14881)
!14884 = !DILocation(line: 530, column: 10, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14880, file: !2504, line: 523, column: 43)
!14886 = !DILocation(line: 531, column: 3, scope: !14885)
!14887 = !DILocation(line: 532, column: 30, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14880, file: !2504, line: 531, column: 10)
!14889 = !DILocation(line: 535, column: 29, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14875, file: !2504, line: 534, column: 9)
!14891 = !DILocation(line: 0, scope: !14807, inlinedAt: !14892)
!14892 = distinct !DILocation(line: 537, column: 2, scope: !14850)
!14893 = !DILocation(line: 0, scope: !14815, inlinedAt: !14894)
!14894 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !14892)
!14895 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !14894)
!14896 = !DILocation(line: 538, column: 1, scope: !14850)
!14897 = distinct !DISubprogram(name: "sliceable", scope: !2504, file: !2504, line: 468, type: !14898, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14900)
!14898 = !DISubroutineType(types: !14899)
!14899 = !{!179, !2399}
!14900 = !{!14901, !14902}
!14901 = !DILocalVariable(name: "thread", arg: 1, scope: !14897, file: !2504, line: 468, type: !2399)
!14902 = !DILocalVariable(name: "ret", scope: !14897, file: !2504, line: 470, type: !179)
!14903 = !DILocation(line: 0, scope: !14897)
!14904 = !DILocation(line: 470, column: 13, scope: !14897)
!14905 = !DILocation(line: 471, column: 3, scope: !14897)
!14906 = !DILocation(line: 471, column: 7, scope: !14897)
!14907 = !DILocation(line: 472, column: 3, scope: !14897)
!14908 = !DILocation(line: 472, column: 37, scope: !14897)
!14909 = !DILocation(line: 472, column: 24, scope: !14897)
!14910 = !DILocation(line: 472, column: 43, scope: !14897)
!14911 = !DILocation(line: 472, column: 7, scope: !14897)
!14912 = !DILocation(line: 473, column: 3, scope: !14897)
!14913 = !DILocation(line: 473, column: 7, scope: !14897)
!14914 = !DILocation(line: 473, column: 6, scope: !14897)
!14915 = !DILocation(line: 479, column: 2, scope: !14897)
!14916 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2504, file: !2504, line: 482, type: !14917, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14919)
!14917 = !DISubroutineType(types: !14918)
!14918 = !{!14772, !14772}
!14919 = !{!14920, !14921}
!14920 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14916, file: !2504, line: 482, type: !14772)
!14921 = !DILocalVariable(name: "curr", scope: !14916, file: !2504, line: 484, type: !2399)
!14922 = !DILocation(line: 0, scope: !14916)
!14923 = !DILocation(line: 484, column: 26, scope: !14916)
!14924 = !DILocation(line: 493, column: 7, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14916, file: !2504, line: 493, column: 6)
!14926 = !DILocation(line: 493, column: 6, scope: !14916)
!14927 = !DILocation(line: 494, column: 3, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14925, file: !2504, line: 493, column: 49)
!14929 = !DILocation(line: 495, column: 2, scope: !14928)
!14930 = !DILocation(line: 496, column: 2, scope: !14916)
!14931 = !DILocation(line: 499, column: 1, scope: !14916)
!14932 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13788, file: !13788, line: 106, type: !14898, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14933)
!14933 = !{!14934, !14935}
!14934 = !DILocalVariable(name: "thread", arg: 1, scope: !14932, file: !13788, line: 106, type: !2399)
!14935 = !DILocalVariable(name: "state", scope: !14932, file: !13788, line: 108, type: !176)
!14936 = !DILocation(line: 0, scope: !14932)
!14937 = !DILocation(line: 108, column: 31, scope: !14932)
!14938 = !DILocation(line: 110, column: 16, scope: !14932)
!14939 = !DILocation(line: 111, column: 41, scope: !14932)
!14940 = !DILocation(line: 110, column: 2, scope: !14932)
!14941 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2504, file: !2504, line: 393, type: !14738, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14942)
!14942 = !{!14943}
!14943 = !DILocalVariable(name: "thread", arg: 1, scope: !14941, file: !2504, line: 393, type: !2399)
!14944 = !DILocation(line: 0, scope: !14941)
!14945 = !DILocation(line: 395, column: 6, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14941, file: !2504, line: 395, column: 6)
!14947 = !DILocation(line: 395, column: 6, scope: !14941)
!14948 = !DILocalVariable(name: "thread", arg: 1, scope: !14949, file: !2504, line: 264, type: !2399)
!14949 = distinct !DISubprogram(name: "dequeue_thread", scope: !2504, file: !2504, line: 264, type: !14738, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14950)
!14950 = !{!14948}
!14951 = !DILocation(line: 0, scope: !14949, inlinedAt: !14952)
!14952 = distinct !DILocation(line: 396, column: 3, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14946, file: !2504, line: 395, column: 34)
!14954 = !DILocation(line: 266, column: 15, scope: !14949, inlinedAt: !14952)
!14955 = !DILocation(line: 266, column: 28, scope: !14949, inlinedAt: !14952)
!14956 = !DILocalVariable(name: "thread", arg: 1, scope: !14957, file: !2504, line: 232, type: !2399)
!14957 = distinct !DISubprogram(name: "runq_remove", scope: !2504, file: !2504, line: 232, type: !14738, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14958)
!14958 = !{!14956}
!14959 = !DILocation(line: 0, scope: !14957, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 268, column: 3, scope: !14961, inlinedAt: !14952)
!14961 = distinct !DILexicalBlock(scope: !14962, file: !2504, line: 267, column: 35)
!14962 = distinct !DILexicalBlock(scope: !14949, file: !2504, line: 267, column: 6)
!14963 = !DILocation(line: 234, column: 2, scope: !14957, inlinedAt: !14960)
!14964 = !DILocation(line: 397, column: 2, scope: !14953)
!14965 = !DILocalVariable(name: "thread", arg: 1, scope: !14966, file: !2504, line: 250, type: !2399)
!14966 = distinct !DISubprogram(name: "queue_thread", scope: !2504, file: !2504, line: 250, type: !14738, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14967)
!14967 = !{!14965}
!14968 = !DILocation(line: 0, scope: !14966, inlinedAt: !14969)
!14969 = distinct !DILocation(line: 398, column: 2, scope: !14941)
!14970 = !DILocation(line: 252, column: 15, scope: !14966, inlinedAt: !14969)
!14971 = !DILocation(line: 252, column: 28, scope: !14966, inlinedAt: !14969)
!14972 = !DILocalVariable(name: "thread", arg: 1, scope: !14973, file: !2504, line: 227, type: !2399)
!14973 = distinct !DISubprogram(name: "runq_add", scope: !2504, file: !2504, line: 227, type: !14738, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14974)
!14974 = !{!14972}
!14975 = !DILocation(line: 0, scope: !14973, inlinedAt: !14976)
!14976 = distinct !DILocation(line: 254, column: 3, scope: !14977, inlinedAt: !14969)
!14977 = distinct !DILexicalBlock(scope: !14978, file: !2504, line: 253, column: 35)
!14978 = distinct !DILexicalBlock(scope: !14966, file: !2504, line: 253, column: 6)
!14979 = !DILocalVariable(name: "pq", arg: 1, scope: !14980, file: !2504, line: 181, type: !14983)
!14980 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2504, file: !2504, line: 181, type: !14981, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !14984)
!14981 = !DISubroutineType(types: !14982)
!14982 = !{null, !14983, !2399}
!14983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!14984 = !{!14979, !14985, !14986}
!14985 = !DILocalVariable(name: "thread", arg: 2, scope: !14980, file: !2504, line: 182, type: !2399)
!14986 = !DILocalVariable(name: "t", scope: !14980, file: !2504, line: 184, type: !2399)
!14987 = !DILocation(line: 0, scope: !14980, inlinedAt: !14988)
!14988 = distinct !DILocation(line: 229, column: 2, scope: !14973, inlinedAt: !14976)
!14989 = !DILocation(line: 188, column: 2, scope: !14990, inlinedAt: !14988)
!14990 = distinct !DILexicalBlock(scope: !14980, file: !2504, line: 188, column: 2)
!14991 = !DILocation(line: 188, column: 2, scope: !14992, inlinedAt: !14988)
!14992 = distinct !DILexicalBlock(scope: !14990, file: !2504, line: 188, column: 2)
!14993 = !DILocation(line: 0, scope: !14990, inlinedAt: !14988)
!14994 = !DILocation(line: 189, column: 7, scope: !14995, inlinedAt: !14988)
!14995 = distinct !DILexicalBlock(scope: !14996, file: !2504, line: 189, column: 7)
!14996 = distinct !DILexicalBlock(scope: !14992, file: !2504, line: 188, column: 56)
!14997 = !DILocation(line: 189, column: 35, scope: !14995, inlinedAt: !14988)
!14998 = !DILocation(line: 189, column: 7, scope: !14996, inlinedAt: !14988)
!14999 = !DILocation(line: 191, column: 21, scope: !15000, inlinedAt: !14988)
!15000 = distinct !DILexicalBlock(scope: !14995, file: !2504, line: 189, column: 40)
!15001 = !DILocation(line: 190, column: 4, scope: !15000, inlinedAt: !14988)
!15002 = !DILocation(line: 192, column: 4, scope: !15000, inlinedAt: !14988)
!15003 = distinct !{!15003, !14989, !15004}
!15004 = !DILocation(line: 194, column: 2, scope: !14990, inlinedAt: !14988)
!15005 = !DILocation(line: 196, column: 37, scope: !14980, inlinedAt: !14988)
!15006 = !DILocation(line: 196, column: 2, scope: !14980, inlinedAt: !14988)
!15007 = !DILocation(line: 197, column: 1, scope: !14980, inlinedAt: !14988)
!15008 = !DILocation(line: 399, column: 25, scope: !14941)
!15009 = !DILocation(line: 399, column: 22, scope: !14941)
!15010 = !DILocation(line: 399, column: 2, scope: !14941)
!15011 = !DILocation(line: 400, column: 1, scope: !14941)
!15012 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13788, file: !13788, line: 136, type: !14898, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15013)
!15013 = !{!15014}
!15014 = !DILocalVariable(name: "thread", arg: 1, scope: !15012, file: !13788, line: 136, type: !2399)
!15015 = !DILocation(line: 0, scope: !15012)
!15016 = !DILocation(line: 138, column: 9, scope: !15012)
!15017 = !DILocation(line: 138, column: 2, scope: !15012)
!15018 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2504, file: !2504, line: 1137, type: !14981, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15019)
!15019 = !{!15020, !15021}
!15020 = !DILocalVariable(name: "pq", arg: 1, scope: !15018, file: !2504, line: 1137, type: !14983)
!15021 = !DILocalVariable(name: "thread", arg: 2, scope: !15018, file: !2504, line: 1137, type: !2399)
!15022 = !DILocation(line: 0, scope: !15018)
!15023 = !DILocation(line: 1141, column: 33, scope: !15018)
!15024 = !DILocation(line: 1141, column: 2, scope: !15018)
!15025 = !DILocation(line: 1142, column: 1, scope: !15018)
!15026 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !334, file: !334, line: 294, type: !15027, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15029)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{!2500, !14983}
!15029 = !{!15030}
!15030 = !DILocalVariable(name: "list", arg: 1, scope: !15026, file: !334, line: 294, type: !14983)
!15031 = !DILocation(line: 0, scope: !15026)
!15032 = !DILocation(line: 296, column: 9, scope: !15026)
!15033 = !DILocation(line: 296, column: 49, scope: !15026)
!15034 = !DILocation(line: 296, column: 2, scope: !15026)
!15035 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !334, file: !334, line: 443, type: !15036, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15038)
!15036 = !DISubroutineType(types: !15037)
!15037 = !{null, !2500, !2500}
!15038 = !{!15039, !15040, !15041}
!15039 = !DILocalVariable(name: "successor", arg: 1, scope: !15035, file: !334, line: 443, type: !2500)
!15040 = !DILocalVariable(name: "node", arg: 2, scope: !15035, file: !334, line: 443, type: !2500)
!15041 = !DILocalVariable(name: "prev", scope: !15035, file: !334, line: 445, type: !15042)
!15042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2500)
!15043 = !DILocation(line: 0, scope: !15035)
!15044 = !DILocation(line: 445, column: 39, scope: !15035)
!15045 = !DILocation(line: 447, column: 8, scope: !15035)
!15046 = !DILocation(line: 447, column: 13, scope: !15035)
!15047 = !DILocation(line: 448, column: 8, scope: !15035)
!15048 = !DILocation(line: 448, column: 13, scope: !15035)
!15049 = !DILocation(line: 449, column: 8, scope: !15035)
!15050 = !DILocation(line: 449, column: 13, scope: !15035)
!15051 = !DILocation(line: 450, column: 18, scope: !15035)
!15052 = !DILocation(line: 451, column: 1, scope: !15035)
!15053 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !334, file: !334, line: 341, type: !15054, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15056)
!15054 = !DISubroutineType(types: !15055)
!15055 = !{!2500, !14983, !2500}
!15056 = !{!15057, !15058}
!15057 = !DILocalVariable(name: "list", arg: 1, scope: !15053, file: !334, line: 341, type: !14983)
!15058 = !DILocalVariable(name: "node", arg: 2, scope: !15053, file: !334, line: 342, type: !2500)
!15059 = !DILocation(line: 0, scope: !15053)
!15060 = !DILocation(line: 344, column: 15, scope: !15053)
!15061 = !DILocation(line: 344, column: 9, scope: !15053)
!15062 = !DILocation(line: 344, column: 26, scope: !15053)
!15063 = !DILocation(line: 344, column: 2, scope: !15053)
!15064 = distinct !DISubprogram(name: "sys_dlist_append", scope: !334, file: !334, line: 404, type: !15065, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15067)
!15065 = !DISubroutineType(types: !15066)
!15066 = !{null, !14983, !2500}
!15067 = !{!15068, !15069, !15070}
!15068 = !DILocalVariable(name: "list", arg: 1, scope: !15064, file: !334, line: 404, type: !14983)
!15069 = !DILocalVariable(name: "node", arg: 2, scope: !15064, file: !334, line: 404, type: !2500)
!15070 = !DILocalVariable(name: "tail", scope: !15064, file: !334, line: 406, type: !15042)
!15071 = !DILocation(line: 0, scope: !15064)
!15072 = !DILocation(line: 406, column: 34, scope: !15064)
!15073 = !DILocation(line: 408, column: 8, scope: !15064)
!15074 = !DILocation(line: 408, column: 13, scope: !15064)
!15075 = !DILocation(line: 409, column: 8, scope: !15064)
!15076 = !DILocation(line: 409, column: 13, scope: !15064)
!15077 = !DILocation(line: 411, column: 8, scope: !15064)
!15078 = !DILocation(line: 411, column: 13, scope: !15064)
!15079 = !DILocation(line: 412, column: 13, scope: !15064)
!15080 = !DILocation(line: 413, column: 1, scope: !15064)
!15081 = distinct !DISubprogram(name: "update_cache", scope: !2504, file: !2504, line: 559, type: !8529, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15082)
!15082 = !{!15083, !15084}
!15083 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15081, file: !2504, line: 559, type: !103)
!15084 = !DILocalVariable(name: "thread", scope: !15081, file: !2504, line: 562, type: !2399)
!15085 = !DILocation(line: 0, scope: !15081)
!15086 = !DILocation(line: 239, column: 9, scope: !15087, inlinedAt: !15090)
!15087 = distinct !DISubprogram(name: "runq_best", scope: !2504, file: !2504, line: 237, type: !15088, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{!2399}
!15090 = distinct !DILocation(line: 314, column: 28, scope: !15091, inlinedAt: !15094)
!15091 = distinct !DISubprogram(name: "next_up", scope: !2504, file: !2504, line: 312, type: !15088, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15092)
!15092 = !{!15093}
!15093 = !DILocalVariable(name: "thread", scope: !15091, file: !2504, line: 314, type: !2399)
!15094 = distinct !DILocation(line: 562, column: 28, scope: !15081)
!15095 = !DILocation(line: 0, scope: !15091, inlinedAt: !15094)
!15096 = !DILocation(line: 340, column: 17, scope: !15091, inlinedAt: !15094)
!15097 = !DILocation(line: 340, column: 9, scope: !15091, inlinedAt: !15094)
!15098 = !DILocalVariable(name: "thread", arg: 1, scope: !15099, file: !2504, line: 127, type: !2399)
!15099 = distinct !DISubprogram(name: "should_preempt", scope: !2504, file: !2504, line: 127, type: !15100, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15102)
!15100 = !DISubroutineType(types: !15101)
!15101 = !{!179, !2399, !103}
!15102 = !{!15098, !15103}
!15103 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15099, file: !2504, line: 128, type: !103)
!15104 = !DILocation(line: 0, scope: !15099, inlinedAt: !15105)
!15105 = distinct !DILocation(line: 564, column: 6, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15081, file: !2504, line: 564, column: 6)
!15107 = !DILocation(line: 133, column: 17, scope: !15108, inlinedAt: !15105)
!15108 = distinct !DILexicalBlock(scope: !15099, file: !2504, line: 133, column: 6)
!15109 = !DILocation(line: 0, scope: !15106)
!15110 = !DILocation(line: 133, column: 6, scope: !15099, inlinedAt: !15105)
!15111 = !DILocation(line: 140, column: 6, scope: !15112, inlinedAt: !15105)
!15112 = distinct !DILexicalBlock(scope: !15099, file: !2504, line: 140, column: 6)
!15113 = !DILocation(line: 140, column: 6, scope: !15099, inlinedAt: !15105)
!15114 = !DILocation(line: 150, column: 9, scope: !15115, inlinedAt: !15105)
!15115 = distinct !DILexicalBlock(scope: !15099, file: !2504, line: 149, column: 6)
!15116 = !DILocation(line: 149, column: 6, scope: !15099, inlinedAt: !15105)
!15117 = !DILocation(line: 157, column: 6, scope: !15118, inlinedAt: !15105)
!15118 = distinct !DILexicalBlock(scope: !15099, file: !2504, line: 157, column: 6)
!15119 = !DILocation(line: 564, column: 6, scope: !15081)
!15120 = !DILocation(line: 566, column: 14, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15122, file: !2504, line: 566, column: 7)
!15122 = distinct !DILexicalBlock(scope: !15106, file: !2504, line: 564, column: 42)
!15123 = !DILocation(line: 566, column: 7, scope: !15122)
!15124 = !DILocation(line: 567, column: 4, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15121, file: !2504, line: 566, column: 27)
!15126 = !DILocation(line: 568, column: 3, scope: !15125)
!15127 = !DILocation(line: 585, column: 1, scope: !15081)
!15128 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2504, file: !2504, line: 1144, type: !15129, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15131)
!15129 = !DISubroutineType(types: !15130)
!15130 = !{!2399, !14983}
!15131 = !{!15132, !15133, !15134}
!15132 = !DILocalVariable(name: "pq", arg: 1, scope: !15128, file: !2504, line: 1144, type: !14983)
!15133 = !DILocalVariable(name: "thread", scope: !15128, file: !2504, line: 1146, type: !2399)
!15134 = !DILocalVariable(name: "n", scope: !15128, file: !2504, line: 1147, type: !2500)
!15135 = !DILocation(line: 0, scope: !15128)
!15136 = !DILocation(line: 1147, column: 19, scope: !15128)
!15137 = !DILocation(line: 1152, column: 2, scope: !15128)
!15138 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13788, file: !13788, line: 115, type: !14898, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15139)
!15139 = !{!15140}
!15140 = !DILocalVariable(name: "thread", arg: 1, scope: !15138, file: !13788, line: 115, type: !2399)
!15141 = !DILocation(line: 0, scope: !15138)
!15142 = !DILocation(line: 117, column: 46, scope: !15138)
!15143 = !DILocation(line: 117, column: 10, scope: !15138)
!15144 = !DILocation(line: 117, column: 9, scope: !15138)
!15145 = !DILocation(line: 117, column: 2, scope: !15138)
!15146 = distinct !DISubprogram(name: "is_preempt", scope: !2504, file: !2504, line: 62, type: !14756, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15147)
!15147 = !{!15148}
!15148 = !DILocalVariable(name: "thread", arg: 1, scope: !15146, file: !2504, line: 62, type: !2399)
!15149 = !DILocation(line: 0, scope: !15146)
!15150 = !DILocation(line: 65, column: 22, scope: !15146)
!15151 = !DILocation(line: 65, column: 30, scope: !15146)
!15152 = !DILocation(line: 65, column: 2, scope: !15146)
!15153 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14182, file: !14182, line: 35, type: !15154, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15158)
!15154 = !DISubroutineType(types: !15155)
!15155 = !{!179, !15156}
!15156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15157, size: 32)
!15157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2450)
!15158 = !{!15159}
!15159 = !DILocalVariable(name: "to", arg: 1, scope: !15153, file: !14182, line: 35, type: !15156)
!15160 = !DILocation(line: 0, scope: !15153)
!15161 = !DILocation(line: 37, column: 35, scope: !15153)
!15162 = !DILocation(line: 37, column: 10, scope: !15153)
!15163 = !DILocation(line: 37, column: 9, scope: !15153)
!15164 = !DILocation(line: 37, column: 2, scope: !15153)
!15165 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !334, file: !334, line: 225, type: !15166, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15170)
!15166 = !DISubroutineType(types: !15167)
!15167 = !{!179, !15168}
!15168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15169, size: 32)
!15169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2409)
!15170 = !{!15171}
!15171 = !DILocalVariable(name: "node", arg: 1, scope: !15165, file: !334, line: 225, type: !15168)
!15172 = !DILocation(line: 0, scope: !15165)
!15173 = !DILocation(line: 227, column: 15, scope: !15165)
!15174 = !DILocation(line: 227, column: 20, scope: !15165)
!15175 = !DILocation(line: 227, column: 2, scope: !15165)
!15176 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !334, file: !334, line: 325, type: !15054, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15177)
!15177 = !{!15178, !15179}
!15178 = !DILocalVariable(name: "list", arg: 1, scope: !15176, file: !334, line: 325, type: !14983)
!15179 = !DILocalVariable(name: "node", arg: 2, scope: !15176, file: !334, line: 326, type: !2500)
!15180 = !DILocation(line: 0, scope: !15176)
!15181 = !DILocation(line: 328, column: 24, scope: !15176)
!15182 = !DILocation(line: 328, column: 15, scope: !15176)
!15183 = !DILocation(line: 328, column: 9, scope: !15176)
!15184 = !DILocation(line: 328, column: 45, scope: !15176)
!15185 = !DILocation(line: 328, column: 2, scope: !15176)
!15186 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !334, file: !334, line: 266, type: !15187, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15189)
!15187 = !DISubroutineType(types: !15188)
!15188 = !{!179, !14983}
!15189 = !{!15190}
!15190 = !DILocalVariable(name: "list", arg: 1, scope: !15186, file: !334, line: 266, type: !14983)
!15191 = !DILocation(line: 0, scope: !15186)
!15192 = !DILocation(line: 268, column: 15, scope: !15186)
!15193 = !DILocation(line: 268, column: 20, scope: !15186)
!15194 = !DILocation(line: 268, column: 2, scope: !15186)
!15195 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !334, file: !334, line: 496, type: !15196, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15198)
!15196 = !DISubroutineType(types: !15197)
!15197 = !{null, !2500}
!15198 = !{!15199, !15200, !15201}
!15199 = !DILocalVariable(name: "node", arg: 1, scope: !15195, file: !334, line: 496, type: !2500)
!15200 = !DILocalVariable(name: "prev", scope: !15195, file: !334, line: 498, type: !15042)
!15201 = !DILocalVariable(name: "next", scope: !15195, file: !334, line: 499, type: !15042)
!15202 = !DILocation(line: 0, scope: !15195)
!15203 = !DILocation(line: 498, column: 34, scope: !15195)
!15204 = !DILocation(line: 499, column: 34, scope: !15195)
!15205 = !DILocation(line: 501, column: 8, scope: !15195)
!15206 = !DILocation(line: 501, column: 13, scope: !15195)
!15207 = !DILocation(line: 502, column: 8, scope: !15195)
!15208 = !DILocation(line: 502, column: 13, scope: !15195)
!15209 = !DILocation(line: 503, column: 2, scope: !15195)
!15210 = !DILocation(line: 504, column: 1, scope: !15195)
!15211 = distinct !DISubprogram(name: "sys_dnode_init", scope: !334, file: !334, line: 211, type: !15196, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15212)
!15212 = !{!15213}
!15213 = !DILocalVariable(name: "node", arg: 1, scope: !15211, file: !334, line: 211, type: !2500)
!15214 = !DILocation(line: 0, scope: !15211)
!15215 = !DILocation(line: 213, column: 8, scope: !15211)
!15216 = !DILocation(line: 213, column: 13, scope: !15211)
!15217 = !DILocation(line: 214, column: 8, scope: !15211)
!15218 = !DILocation(line: 214, column: 13, scope: !15211)
!15219 = !DILocation(line: 215, column: 1, scope: !15211)
!15220 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13788, file: !13788, line: 131, type: !15221, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15223)
!15221 = !DISubroutineType(types: !15222)
!15222 = !{!179, !2399, !132}
!15223 = !{!15224, !15225}
!15224 = !DILocalVariable(name: "thread", arg: 1, scope: !15220, file: !13788, line: 131, type: !2399)
!15225 = !DILocalVariable(name: "state", arg: 2, scope: !15220, file: !13788, line: 131, type: !132)
!15226 = !DILocation(line: 0, scope: !15220)
!15227 = !DILocation(line: 133, column: 23, scope: !15220)
!15228 = !DILocation(line: 133, column: 45, scope: !15220)
!15229 = !DILocation(line: 133, column: 2, scope: !15220)
!15230 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13788, file: !13788, line: 211, type: !15231, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15233)
!15231 = !DISubroutineType(types: !15232)
!15232 = !{!179, !103, !103}
!15233 = !{!15234, !15235}
!15234 = !DILocalVariable(name: "prio", arg: 1, scope: !15230, file: !13788, line: 211, type: !103)
!15235 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15230, file: !13788, line: 211, type: !103)
!15236 = !DILocation(line: 0, scope: !15230)
!15237 = !DILocation(line: 213, column: 9, scope: !15230)
!15238 = !DILocation(line: 213, column: 2, scope: !15230)
!15239 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13788, file: !13788, line: 83, type: !14898, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15240)
!15240 = !{!15241}
!15241 = !DILocalVariable(name: "thread", arg: 1, scope: !15239, file: !13788, line: 83, type: !2399)
!15242 = !DILocation(line: 0, scope: !15239)
!15243 = !DILocation(line: 89, column: 16, scope: !15239)
!15244 = !DILocation(line: 89, column: 2, scope: !15239)
!15245 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13788, file: !13788, line: 206, type: !15231, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15246)
!15246 = !{!15247, !15248}
!15247 = !DILocalVariable(name: "prio1", arg: 1, scope: !15245, file: !13788, line: 206, type: !103)
!15248 = !DILocalVariable(name: "prio2", arg: 2, scope: !15245, file: !13788, line: 206, type: !103)
!15249 = !DILocation(line: 0, scope: !15245)
!15250 = !DILocation(line: 208, column: 15, scope: !15245)
!15251 = !DILocation(line: 208, column: 2, scope: !15245)
!15252 = distinct !DISubprogram(name: "z_ready_thread", scope: !2504, file: !2504, line: 635, type: !14738, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15253)
!15253 = !{!15254, !15255, !15257}
!15254 = !DILocalVariable(name: "thread", arg: 1, scope: !15252, file: !2504, line: 635, type: !2399)
!15255 = !DILocalVariable(name: "__i", scope: !15256, file: !2504, line: 637, type: !14772)
!15256 = distinct !DILexicalBlock(scope: !15252, file: !2504, line: 637, column: 2)
!15257 = !DILocalVariable(name: "__key", scope: !15256, file: !2504, line: 637, type: !14772)
!15258 = !DILocation(line: 0, scope: !15252)
!15259 = !DILocation(line: 0, scope: !15256)
!15260 = !DILocation(line: 0, scope: !14780, inlinedAt: !15261)
!15261 = distinct !DILocation(line: 637, column: 2, scope: !15256)
!15262 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15261)
!15264 = !DILocation(line: 0, scope: !14789, inlinedAt: !15263)
!15265 = !DILocation(line: 639, column: 4, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15267, file: !2504, line: 638, column: 41)
!15267 = distinct !DILexicalBlock(scope: !15268, file: !2504, line: 638, column: 7)
!15268 = distinct !DILexicalBlock(scope: !15269, file: !2504, line: 637, column: 26)
!15269 = distinct !DILexicalBlock(scope: !15256, file: !2504, line: 637, column: 2)
!15270 = !DILocation(line: 0, scope: !14807, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 637, column: 2, scope: !15269)
!15272 = !DILocation(line: 0, scope: !14815, inlinedAt: !15273)
!15273 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15271)
!15274 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15273)
!15275 = !DILocation(line: 642, column: 1, scope: !15252)
!15276 = distinct !DISubprogram(name: "ready_thread", scope: !2504, file: !2504, line: 617, type: !14738, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15277)
!15277 = !{!15278}
!15278 = !DILocalVariable(name: "thread", arg: 1, scope: !15276, file: !2504, line: 617, type: !2399)
!15279 = !DILocation(line: 0, scope: !15276)
!15280 = !DILocation(line: 626, column: 7, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15276, file: !2504, line: 626, column: 6)
!15282 = !DILocation(line: 626, column: 34, scope: !15281)
!15283 = !DILocation(line: 626, column: 37, scope: !15281)
!15284 = !DILocation(line: 626, column: 6, scope: !15276)
!15285 = !DILocation(line: 0, scope: !14966, inlinedAt: !15286)
!15286 = distinct !DILocation(line: 629, column: 3, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15281, file: !2504, line: 626, column: 64)
!15288 = !DILocation(line: 252, column: 15, scope: !14966, inlinedAt: !15286)
!15289 = !DILocation(line: 252, column: 28, scope: !14966, inlinedAt: !15286)
!15290 = !DILocation(line: 0, scope: !14973, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 254, column: 3, scope: !14977, inlinedAt: !15286)
!15292 = !DILocation(line: 0, scope: !14980, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 229, column: 2, scope: !14973, inlinedAt: !15291)
!15294 = !DILocation(line: 188, column: 2, scope: !14990, inlinedAt: !15293)
!15295 = !DILocation(line: 188, column: 2, scope: !14992, inlinedAt: !15293)
!15296 = !DILocation(line: 0, scope: !14990, inlinedAt: !15293)
!15297 = !DILocation(line: 189, column: 7, scope: !14995, inlinedAt: !15293)
!15298 = !DILocation(line: 189, column: 35, scope: !14995, inlinedAt: !15293)
!15299 = !DILocation(line: 189, column: 7, scope: !14996, inlinedAt: !15293)
!15300 = !DILocation(line: 191, column: 21, scope: !15000, inlinedAt: !15293)
!15301 = !DILocation(line: 190, column: 4, scope: !15000, inlinedAt: !15293)
!15302 = !DILocation(line: 192, column: 4, scope: !15000, inlinedAt: !15293)
!15303 = distinct !{!15303, !15294, !15304}
!15304 = !DILocation(line: 194, column: 2, scope: !14990, inlinedAt: !15293)
!15305 = !DILocation(line: 196, column: 37, scope: !14980, inlinedAt: !15293)
!15306 = !DILocation(line: 196, column: 2, scope: !14980, inlinedAt: !15293)
!15307 = !DILocation(line: 197, column: 1, scope: !14980, inlinedAt: !15293)
!15308 = !DILocation(line: 630, column: 3, scope: !15287)
!15309 = !DILocation(line: 632, column: 2, scope: !15287)
!15310 = !DILocation(line: 633, column: 1, scope: !15276)
!15311 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13788, file: !13788, line: 120, type: !14898, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15312)
!15312 = !{!15313}
!15313 = !DILocalVariable(name: "thread", arg: 1, scope: !15311, file: !13788, line: 120, type: !2399)
!15314 = !DILocation(line: 0, scope: !15311)
!15315 = !DILocation(line: 122, column: 12, scope: !15311)
!15316 = !DILocation(line: 122, column: 62, scope: !15311)
!15317 = !DILocation(line: 123, column: 4, scope: !15311)
!15318 = !DILocation(line: 122, column: 2, scope: !15311)
!15319 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2504, file: !2504, line: 644, type: !14738, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15320)
!15320 = !{!15321, !15322, !15324}
!15321 = !DILocalVariable(name: "thread", arg: 1, scope: !15319, file: !2504, line: 644, type: !2399)
!15322 = !DILocalVariable(name: "__i", scope: !15323, file: !2504, line: 646, type: !14772)
!15323 = distinct !DILexicalBlock(scope: !15319, file: !2504, line: 646, column: 2)
!15324 = !DILocalVariable(name: "__key", scope: !15323, file: !2504, line: 646, type: !14772)
!15325 = !DILocation(line: 0, scope: !15319)
!15326 = !DILocation(line: 0, scope: !15323)
!15327 = !DILocation(line: 0, scope: !14780, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 646, column: 2, scope: !15323)
!15329 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15330)
!15330 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15328)
!15331 = !DILocation(line: 0, scope: !14789, inlinedAt: !15330)
!15332 = !DILocation(line: 647, column: 3, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15334, file: !2504, line: 646, column: 26)
!15334 = distinct !DILexicalBlock(scope: !15323, file: !2504, line: 646, column: 2)
!15335 = !DILocation(line: 0, scope: !14807, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 646, column: 2, scope: !15334)
!15337 = !DILocation(line: 0, scope: !14815, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15336)
!15339 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15338)
!15340 = !DILocation(line: 649, column: 1, scope: !15319)
!15341 = distinct !DISubprogram(name: "z_sched_start", scope: !2504, file: !2504, line: 651, type: !14738, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15342)
!15342 = !{!15343, !15344}
!15343 = !DILocalVariable(name: "thread", arg: 1, scope: !15341, file: !2504, line: 651, type: !2399)
!15344 = !DILocalVariable(name: "key", scope: !15341, file: !2504, line: 653, type: !14772)
!15345 = !DILocation(line: 0, scope: !15341)
!15346 = !DILocation(line: 0, scope: !14780, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 653, column: 25, scope: !15341)
!15348 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15347)
!15350 = !DILocation(line: 0, scope: !14789, inlinedAt: !15349)
!15351 = !DILocation(line: 655, column: 6, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15341, file: !2504, line: 655, column: 6)
!15353 = !DILocation(line: 655, column: 6, scope: !15341)
!15354 = !DILocation(line: 0, scope: !14807, inlinedAt: !15355)
!15355 = distinct !DILocation(line: 656, column: 3, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !15352, file: !2504, line: 655, column: 36)
!15357 = !DILocation(line: 0, scope: !14815, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15355)
!15359 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15358)
!15360 = !DILocation(line: 657, column: 3, scope: !15356)
!15361 = !DILocation(line: 660, column: 2, scope: !15341)
!15362 = !DILocation(line: 661, column: 2, scope: !15341)
!15363 = !DILocation(line: 662, column: 2, scope: !15341)
!15364 = !DILocation(line: 663, column: 1, scope: !15341)
!15365 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13788, file: !13788, line: 126, type: !14898, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15366)
!15366 = !{!15367}
!15367 = !DILocalVariable(name: "thread", arg: 1, scope: !15365, file: !13788, line: 126, type: !2399)
!15368 = !DILocation(line: 0, scope: !15365)
!15369 = !DILocation(line: 128, column: 23, scope: !15365)
!15370 = !DILocation(line: 128, column: 36, scope: !15365)
!15371 = !DILocation(line: 128, column: 56, scope: !15365)
!15372 = !DILocation(line: 128, column: 2, scope: !15365)
!15373 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13788, file: !13788, line: 155, type: !14738, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15374)
!15374 = !{!15375}
!15375 = !DILocalVariable(name: "thread", arg: 1, scope: !15373, file: !13788, line: 155, type: !2399)
!15376 = !DILocation(line: 0, scope: !15373)
!15377 = !DILocation(line: 157, column: 15, scope: !15373)
!15378 = !DILocation(line: 157, column: 28, scope: !15373)
!15379 = !DILocation(line: 158, column: 1, scope: !15373)
!15380 = distinct !DISubprogram(name: "z_reschedule", scope: !2504, file: !2504, line: 967, type: !14808, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15381)
!15381 = !{!15382, !15383}
!15382 = !DILocalVariable(name: "lock", arg: 1, scope: !15380, file: !2504, line: 967, type: !14783)
!15383 = !DILocalVariable(name: "key", arg: 2, scope: !15380, file: !2504, line: 967, type: !14772)
!15384 = !DILocation(line: 0, scope: !15380)
!15385 = !DILocation(line: 969, column: 6, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15380, file: !2504, line: 969, column: 6)
!15387 = !DILocation(line: 969, column: 23, scope: !15386)
!15388 = !DILocation(line: 969, column: 26, scope: !15386)
!15389 = !DILocation(line: 969, column: 6, scope: !15380)
!15390 = !DILocalVariable(name: "key", arg: 2, scope: !15391, file: !13892, line: 193, type: !14772)
!15391 = distinct !DISubprogram(name: "z_swap", scope: !13892, file: !13892, line: 193, type: !15392, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15394)
!15392 = !DISubroutineType(types: !15393)
!15393 = !{!103, !14783, !14772}
!15394 = !{!15395, !15390}
!15395 = !DILocalVariable(name: "lock", arg: 1, scope: !15391, file: !13892, line: 193, type: !14783)
!15396 = !DILocation(line: 0, scope: !15391, inlinedAt: !15397)
!15397 = distinct !DILocation(line: 970, column: 3, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15386, file: !2504, line: 969, column: 39)
!15399 = !DILocation(line: 196, column: 9, scope: !15391, inlinedAt: !15397)
!15400 = !DILocation(line: 971, column: 2, scope: !15398)
!15401 = !DILocation(line: 0, scope: !14807, inlinedAt: !15402)
!15402 = distinct !DILocation(line: 972, column: 3, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15386, file: !2504, line: 971, column: 9)
!15404 = !DILocation(line: 0, scope: !14815, inlinedAt: !15405)
!15405 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15402)
!15406 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15405)
!15407 = !DILocation(line: 975, column: 1, scope: !15380)
!15408 = distinct !DISubprogram(name: "resched", scope: !2504, file: !2504, line: 940, type: !15409, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15411)
!15409 = !DISubroutineType(types: !15410)
!15410 = !{!179, !132}
!15411 = !{!15412}
!15412 = !DILocalVariable(name: "key", arg: 1, scope: !15408, file: !2504, line: 940, type: !132)
!15413 = !DILocation(line: 0, scope: !15408)
!15414 = !DILocalVariable(name: "key", arg: 1, scope: !15415, file: !5780, line: 112, type: !32)
!15415 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5780, file: !5780, line: 112, type: !15416, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15418)
!15416 = !DISubroutineType(types: !15417)
!15417 = !{!179, !32}
!15418 = !{!15414}
!15419 = !DILocation(line: 0, scope: !15415, inlinedAt: !15420)
!15420 = distinct !DILocation(line: 946, column: 9, scope: !15408)
!15421 = !DILocation(line: 115, column: 13, scope: !15415, inlinedAt: !15420)
!15422 = !DILocation(line: 946, column: 32, scope: !15408)
!15423 = !DILocation(line: 1031, column: 3, scope: !15424, inlinedAt: !15427)
!15424 = distinct !DISubprogram(name: "__get_IPSR", scope: !6817, file: !6817, line: 1027, type: !7567, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15425)
!15425 = !{!15426}
!15426 = !DILocalVariable(name: "result", scope: !15424, file: !6817, line: 1029, type: !132)
!15427 = distinct !DILocation(line: 48, column: 10, scope: !15428, inlinedAt: !15429)
!15428 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7573, file: !7573, line: 46, type: !7574, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!15429 = distinct !DILocation(line: 946, column: 36, scope: !15408)
!15430 = !{i64 2486928}
!15431 = !DILocation(line: 0, scope: !15424, inlinedAt: !15427)
!15432 = !DILocation(line: 48, column: 9, scope: !15428, inlinedAt: !15429)
!15433 = !DILocation(line: 946, column: 2, scope: !15408)
!15434 = distinct !DISubprogram(name: "need_swap", scope: !2504, file: !2504, line: 953, type: !7574, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15435)
!15435 = !{!15436}
!15436 = !DILocalVariable(name: "new_thread", scope: !15434, file: !2504, line: 959, type: !2399)
!15437 = !DILocation(line: 962, column: 31, scope: !15434)
!15438 = !DILocation(line: 0, scope: !15434)
!15439 = !DILocation(line: 963, column: 23, scope: !15434)
!15440 = !DILocation(line: 963, column: 20, scope: !15434)
!15441 = !DILocation(line: 963, column: 2, scope: !15434)
!15442 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13892, file: !13892, line: 181, type: !6827, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15443)
!15443 = !{!15444, !15445}
!15444 = !DILocalVariable(name: "key", arg: 1, scope: !15442, file: !13892, line: 181, type: !32)
!15445 = !DILocalVariable(name: "ret", scope: !15442, file: !13892, line: 183, type: !103)
!15446 = !DILocation(line: 0, scope: !15442)
!15447 = !DILocation(line: 185, column: 8, scope: !15442)
!15448 = !DILocation(line: 186, column: 2, scope: !15442)
!15449 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2504, file: !2504, line: 665, type: !14738, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15450)
!15450 = !{!15451, !15452, !15454}
!15451 = !DILocalVariable(name: "thread", arg: 1, scope: !15449, file: !2504, line: 665, type: !2399)
!15452 = !DILocalVariable(name: "__i", scope: !15453, file: !2504, line: 671, type: !14772)
!15453 = distinct !DILexicalBlock(scope: !15449, file: !2504, line: 671, column: 2)
!15454 = !DILocalVariable(name: "__key", scope: !15453, file: !2504, line: 671, type: !14772)
!15455 = !DILocation(line: 0, scope: !15449)
!15456 = !DILocation(line: 669, column: 8, scope: !15449)
!15457 = !DILocation(line: 0, scope: !15453)
!15458 = !DILocation(line: 0, scope: !14780, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 671, column: 2, scope: !15453)
!15460 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15461)
!15461 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15459)
!15462 = !DILocation(line: 0, scope: !14789, inlinedAt: !15461)
!15463 = !DILocation(line: 672, column: 7, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !2504, line: 672, column: 7)
!15465 = distinct !DILexicalBlock(scope: !15466, file: !2504, line: 671, column: 26)
!15466 = distinct !DILexicalBlock(scope: !15453, file: !2504, line: 671, column: 2)
!15467 = !DILocation(line: 672, column: 7, scope: !15465)
!15468 = !DILocation(line: 0, scope: !14949, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 673, column: 4, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15464, file: !2504, line: 672, column: 35)
!15471 = !DILocation(line: 266, column: 15, scope: !14949, inlinedAt: !15469)
!15472 = !DILocation(line: 266, column: 28, scope: !14949, inlinedAt: !15469)
!15473 = !DILocation(line: 0, scope: !14957, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 268, column: 3, scope: !14961, inlinedAt: !15469)
!15475 = !DILocation(line: 234, column: 2, scope: !14957, inlinedAt: !15474)
!15476 = !DILocation(line: 674, column: 3, scope: !15470)
!15477 = !DILocation(line: 675, column: 3, scope: !15465)
!15478 = !DILocation(line: 676, column: 26, scope: !15465)
!15479 = !DILocation(line: 676, column: 23, scope: !15465)
!15480 = !DILocation(line: 676, column: 3, scope: !15465)
!15481 = !DILocation(line: 0, scope: !14807, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 671, column: 2, scope: !15466)
!15483 = !DILocation(line: 0, scope: !14815, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15482)
!15485 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15484)
!15486 = !DILocation(line: 679, column: 16, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15449, file: !2504, line: 679, column: 6)
!15488 = !DILocation(line: 679, column: 13, scope: !15487)
!15489 = !DILocation(line: 679, column: 6, scope: !15449)
!15490 = !DILocation(line: 680, column: 3, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15487, file: !2504, line: 679, column: 26)
!15492 = !DILocation(line: 681, column: 2, scope: !15491)
!15493 = !DILocation(line: 684, column: 1, scope: !15449)
!15494 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14182, file: !14182, line: 52, type: !14756, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15495)
!15495 = !{!15496}
!15496 = !DILocalVariable(name: "thread", arg: 1, scope: !15494, file: !14182, line: 52, type: !2399)
!15497 = !DILocation(line: 0, scope: !15494)
!15498 = !DILocation(line: 54, column: 39, scope: !15494)
!15499 = !DILocation(line: 54, column: 9, scope: !15494)
!15500 = !DILocation(line: 54, column: 2, scope: !15494)
!15501 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13788, file: !13788, line: 141, type: !14738, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15502)
!15502 = !{!15503}
!15503 = !DILocalVariable(name: "thread", arg: 1, scope: !15501, file: !13788, line: 141, type: !2399)
!15504 = !DILocation(line: 0, scope: !15501)
!15505 = !DILocation(line: 143, column: 15, scope: !15501)
!15506 = !DILocation(line: 143, column: 28, scope: !15501)
!15507 = !DILocation(line: 146, column: 1, scope: !15501)
!15508 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13788, file: !13788, line: 73, type: !3229, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!15509 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15510)
!15510 = distinct !DILocation(line: 75, column: 30, scope: !15508)
!15511 = !DILocation(line: 0, scope: !14789, inlinedAt: !15510)
!15512 = !DILocation(line: 75, column: 9, scope: !15508)
!15513 = !DILocation(line: 76, column: 1, scope: !15508)
!15514 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2504, file: !2504, line: 977, type: !5804, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15515)
!15515 = !{!15516}
!15516 = !DILocalVariable(name: "key", arg: 1, scope: !15514, file: !2504, line: 977, type: !132)
!15517 = !DILocation(line: 0, scope: !15514)
!15518 = !DILocation(line: 979, column: 6, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15514, file: !2504, line: 979, column: 6)
!15520 = !DILocation(line: 979, column: 6, scope: !15514)
!15521 = !DILocation(line: 980, column: 3, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15519, file: !2504, line: 979, column: 20)
!15523 = !DILocation(line: 981, column: 2, scope: !15522)
!15524 = !DILocation(line: 0, scope: !14815, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 982, column: 3, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15519, file: !2504, line: 981, column: 9)
!15527 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15525)
!15528 = !DILocation(line: 985, column: 1, scope: !15514)
!15529 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2504, file: !2504, line: 695, type: !14738, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15530)
!15530 = !{!15531, !15532}
!15531 = !DILocalVariable(name: "thread", arg: 1, scope: !15529, file: !2504, line: 695, type: !2399)
!15532 = !DILocalVariable(name: "key", scope: !15529, file: !2504, line: 699, type: !14772)
!15533 = !DILocation(line: 0, scope: !15529)
!15534 = !DILocation(line: 0, scope: !14780, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 699, column: 25, scope: !15529)
!15536 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15537)
!15537 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15535)
!15538 = !DILocation(line: 0, scope: !14789, inlinedAt: !15537)
!15539 = !DILocation(line: 702, column: 7, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !15529, file: !2504, line: 702, column: 6)
!15541 = !DILocation(line: 702, column: 6, scope: !15529)
!15542 = !DILocation(line: 0, scope: !14807, inlinedAt: !15543)
!15543 = distinct !DILocation(line: 703, column: 3, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15540, file: !2504, line: 702, column: 38)
!15545 = !DILocation(line: 0, scope: !14815, inlinedAt: !15546)
!15546 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15543)
!15547 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15546)
!15548 = !DILocation(line: 704, column: 3, scope: !15544)
!15549 = !DILocation(line: 707, column: 2, scope: !15529)
!15550 = !DILocation(line: 708, column: 2, scope: !15529)
!15551 = !DILocation(line: 710, column: 2, scope: !15529)
!15552 = !DILocation(line: 713, column: 1, scope: !15529)
!15553 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13788, file: !13788, line: 96, type: !14898, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15554)
!15554 = !{!15555}
!15555 = !DILocalVariable(name: "thread", arg: 1, scope: !15553, file: !13788, line: 96, type: !2399)
!15556 = !DILocation(line: 0, scope: !15553)
!15557 = !DILocation(line: 98, column: 23, scope: !15553)
!15558 = !DILocation(line: 98, column: 36, scope: !15553)
!15559 = !DILocation(line: 98, column: 57, scope: !15553)
!15560 = !DILocation(line: 98, column: 2, scope: !15553)
!15561 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13788, file: !13788, line: 148, type: !14738, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15562)
!15562 = !{!15563}
!15563 = !DILocalVariable(name: "thread", arg: 1, scope: !15561, file: !13788, line: 148, type: !2399)
!15564 = !DILocation(line: 0, scope: !15561)
!15565 = !DILocation(line: 150, column: 15, scope: !15561)
!15566 = !DILocation(line: 150, column: 28, scope: !15561)
!15567 = !DILocation(line: 153, column: 1, scope: !15561)
!15568 = distinct !DISubprogram(name: "z_pend_thread", scope: !2504, file: !2504, line: 770, type: !15569, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15575)
!15569 = !DISubroutineType(types: !15570)
!15570 = !{null, !2399, !2430, !15571}
!15571 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1753, line: 67, baseType: !15572)
!15572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1753, line: 65, size: 64, elements: !15573)
!15573 = !{!15574}
!15574 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15572, file: !1753, line: 66, baseType: !1752, size: 64)
!15575 = !{!15576, !15577, !15578, !15579, !15581}
!15576 = !DILocalVariable(name: "thread", arg: 1, scope: !15568, file: !2504, line: 770, type: !2399)
!15577 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15568, file: !2504, line: 770, type: !2430)
!15578 = !DILocalVariable(name: "timeout", arg: 3, scope: !15568, file: !2504, line: 771, type: !15571)
!15579 = !DILocalVariable(name: "__i", scope: !15580, file: !2504, line: 774, type: !14772)
!15580 = distinct !DILexicalBlock(scope: !15568, file: !2504, line: 774, column: 2)
!15581 = !DILocalVariable(name: "__key", scope: !15580, file: !2504, line: 774, type: !14772)
!15582 = !DILocation(line: 0, scope: !15568)
!15583 = !DILocation(line: 0, scope: !15580)
!15584 = !DILocation(line: 0, scope: !14780, inlinedAt: !15585)
!15585 = distinct !DILocation(line: 774, column: 2, scope: !15580)
!15586 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15587)
!15587 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15585)
!15588 = !DILocation(line: 0, scope: !14789, inlinedAt: !15587)
!15589 = !DILocation(line: 775, column: 3, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15591, file: !2504, line: 774, column: 26)
!15591 = distinct !DILexicalBlock(scope: !15580, file: !2504, line: 774, column: 2)
!15592 = !DILocation(line: 0, scope: !14807, inlinedAt: !15593)
!15593 = distinct !DILocation(line: 774, column: 2, scope: !15591)
!15594 = !DILocation(line: 0, scope: !14815, inlinedAt: !15595)
!15595 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15593)
!15596 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15595)
!15597 = !DILocation(line: 777, column: 1, scope: !15568)
!15598 = distinct !DISubprogram(name: "pend_locked", scope: !2504, file: !2504, line: 760, type: !15569, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15599)
!15599 = !{!15600, !15601, !15602}
!15600 = !DILocalVariable(name: "thread", arg: 1, scope: !15598, file: !2504, line: 760, type: !2399)
!15601 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15598, file: !2504, line: 760, type: !2430)
!15602 = !DILocalVariable(name: "timeout", arg: 3, scope: !15598, file: !2504, line: 761, type: !15571)
!15603 = !DILocation(line: 0, scope: !15598)
!15604 = !DILocation(line: 766, column: 2, scope: !15598)
!15605 = !DILocation(line: 767, column: 2, scope: !15598)
!15606 = !DILocation(line: 768, column: 1, scope: !15598)
!15607 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2504, file: !2504, line: 740, type: !15608, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15610)
!15608 = !DISubroutineType(types: !15609)
!15609 = !{null, !2399, !2430}
!15610 = !{!15611, !15612}
!15611 = !DILocalVariable(name: "thread", arg: 1, scope: !15607, file: !2504, line: 740, type: !2399)
!15612 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15607, file: !2504, line: 740, type: !2430)
!15613 = !DILocation(line: 0, scope: !15607)
!15614 = !DILocation(line: 742, column: 2, scope: !15607)
!15615 = !DILocation(line: 743, column: 2, scope: !15607)
!15616 = !DILocation(line: 747, column: 13, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15607, file: !2504, line: 747, column: 6)
!15618 = !DILocation(line: 747, column: 6, scope: !15607)
!15619 = !DILocation(line: 748, column: 16, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15617, file: !2504, line: 747, column: 22)
!15621 = !DILocation(line: 748, column: 26, scope: !15620)
!15622 = !DILocation(line: 749, column: 28, scope: !15620)
!15623 = !DILocation(line: 0, scope: !14980, inlinedAt: !15624)
!15624 = distinct !DILocation(line: 749, column: 3, scope: !15620)
!15625 = !DILocation(line: 188, column: 2, scope: !14990, inlinedAt: !15624)
!15626 = !DILocation(line: 188, column: 2, scope: !14992, inlinedAt: !15624)
!15627 = !DILocation(line: 0, scope: !14990, inlinedAt: !15624)
!15628 = !DILocation(line: 189, column: 7, scope: !14995, inlinedAt: !15624)
!15629 = !DILocation(line: 189, column: 35, scope: !14995, inlinedAt: !15624)
!15630 = !DILocation(line: 189, column: 7, scope: !14996, inlinedAt: !15624)
!15631 = !DILocation(line: 191, column: 21, scope: !15000, inlinedAt: !15624)
!15632 = !DILocation(line: 190, column: 4, scope: !15000, inlinedAt: !15624)
!15633 = !DILocation(line: 192, column: 4, scope: !15000, inlinedAt: !15624)
!15634 = distinct !{!15634, !15625, !15635}
!15635 = !DILocation(line: 194, column: 2, scope: !14990, inlinedAt: !15624)
!15636 = !DILocation(line: 196, column: 37, scope: !14980, inlinedAt: !15624)
!15637 = !DILocation(line: 196, column: 2, scope: !14980, inlinedAt: !15624)
!15638 = !DILocation(line: 197, column: 1, scope: !14980, inlinedAt: !15624)
!15639 = !DILocation(line: 751, column: 1, scope: !15607)
!15640 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2504, file: !2504, line: 753, type: !15641, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15643)
!15641 = !DISubroutineType(types: !15642)
!15642 = !{null, !2399, !15571}
!15643 = !{!15644, !15645}
!15644 = !DILocalVariable(name: "thread", arg: 1, scope: !15640, file: !2504, line: 753, type: !2399)
!15645 = !DILocalVariable(name: "timeout", arg: 2, scope: !15640, file: !2504, line: 753, type: !15571)
!15646 = !DILocation(line: 0, scope: !15640)
!15647 = !DILocation(line: 755, column: 7, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15640, file: !2504, line: 755, column: 6)
!15649 = !DILocation(line: 755, column: 6, scope: !15640)
!15650 = !DILocation(line: 756, column: 3, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15648, file: !2504, line: 755, column: 41)
!15652 = !DILocation(line: 757, column: 2, scope: !15651)
!15653 = !DILocation(line: 758, column: 1, scope: !15640)
!15654 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14182, file: !14182, line: 47, type: !15641, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15655)
!15655 = !{!15656, !15657}
!15656 = !DILocalVariable(name: "thread", arg: 1, scope: !15654, file: !14182, line: 47, type: !2399)
!15657 = !DILocalVariable(name: "ticks", arg: 2, scope: !15654, file: !14182, line: 47, type: !15571)
!15658 = !DILocation(line: 0, scope: !15654)
!15659 = !DILocation(line: 49, column: 30, scope: !15654)
!15660 = !DILocation(line: 49, column: 2, scope: !15654)
!15661 = !DILocation(line: 50, column: 1, scope: !15654)
!15662 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2504, file: !2504, line: 795, type: !2456, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15663)
!15663 = !{!15664, !15665, !15666, !15668, !15669}
!15664 = !DILocalVariable(name: "timeout", arg: 1, scope: !15662, file: !2504, line: 795, type: !2458)
!15665 = !DILocalVariable(name: "thread", scope: !15662, file: !2504, line: 797, type: !2399)
!15666 = !DILocalVariable(name: "__i", scope: !15667, file: !2504, line: 800, type: !14772)
!15667 = distinct !DILexicalBlock(scope: !15662, file: !2504, line: 800, column: 2)
!15668 = !DILocalVariable(name: "__key", scope: !15667, file: !2504, line: 800, type: !14772)
!15669 = !DILocalVariable(name: "killed", scope: !15670, file: !2504, line: 801, type: !179)
!15670 = distinct !DILexicalBlock(scope: !15671, file: !2504, line: 800, column: 26)
!15671 = distinct !DILexicalBlock(scope: !15667, file: !2504, line: 800, column: 2)
!15672 = !DILocation(line: 0, scope: !15662)
!15673 = !DILocation(line: 797, column: 28, scope: !15662)
!15674 = !DILocation(line: 0, scope: !15667)
!15675 = !DILocation(line: 0, scope: !14780, inlinedAt: !15676)
!15676 = distinct !DILocation(line: 800, column: 2, scope: !15667)
!15677 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15676)
!15679 = !DILocation(line: 0, scope: !14789, inlinedAt: !15678)
!15680 = !DILocation(line: 801, column: 27, scope: !15670)
!15681 = !DILocation(line: 801, column: 32, scope: !15670)
!15682 = !DILocation(line: 801, column: 61, scope: !15670)
!15683 = !DILocation(line: 0, scope: !15670)
!15684 = !DILocation(line: 804, column: 7, scope: !15670)
!15685 = !DILocation(line: 805, column: 21, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15687, file: !2504, line: 805, column: 8)
!15687 = distinct !DILexicalBlock(scope: !15688, file: !2504, line: 804, column: 16)
!15688 = distinct !DILexicalBlock(scope: !15670, file: !2504, line: 804, column: 7)
!15689 = !DILocation(line: 805, column: 31, scope: !15686)
!15690 = !DILocation(line: 805, column: 8, scope: !15687)
!15691 = !DILocation(line: 806, column: 5, scope: !15692)
!15692 = distinct !DILexicalBlock(scope: !15686, file: !2504, line: 805, column: 40)
!15693 = !DILocation(line: 807, column: 4, scope: !15692)
!15694 = !DILocation(line: 808, column: 4, scope: !15687)
!15695 = !DILocation(line: 809, column: 4, scope: !15687)
!15696 = !DILocation(line: 810, column: 4, scope: !15687)
!15697 = !DILocation(line: 811, column: 3, scope: !15687)
!15698 = !DILocation(line: 0, scope: !14807, inlinedAt: !15699)
!15699 = distinct !DILocation(line: 800, column: 2, scope: !15671)
!15700 = !DILocation(line: 0, scope: !14815, inlinedAt: !15701)
!15701 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15699)
!15702 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15701)
!15703 = !DILocation(line: 813, column: 1, scope: !15662)
!15704 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2504, file: !2504, line: 779, type: !14738, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15705)
!15705 = !{!15706}
!15706 = !DILocalVariable(name: "thread", arg: 1, scope: !15704, file: !2504, line: 779, type: !2399)
!15707 = !DILocation(line: 0, scope: !15704)
!15708 = !DILocation(line: 781, column: 2, scope: !15704)
!15709 = !DILocation(line: 782, column: 2, scope: !15704)
!15710 = !DILocation(line: 783, column: 15, scope: !15704)
!15711 = !DILocation(line: 783, column: 25, scope: !15704)
!15712 = !DILocation(line: 784, column: 1, scope: !15704)
!15713 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13788, file: !13788, line: 165, type: !14738, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15714)
!15714 = !{!15715}
!15715 = !DILocalVariable(name: "thread", arg: 1, scope: !15713, file: !13788, line: 165, type: !2399)
!15716 = !DILocation(line: 0, scope: !15713)
!15717 = !DILocation(line: 167, column: 15, scope: !15713)
!15718 = !DILocation(line: 167, column: 28, scope: !15713)
!15719 = !DILocation(line: 168, column: 1, scope: !15713)
!15720 = distinct !DISubprogram(name: "unready_thread", scope: !2504, file: !2504, line: 731, type: !14738, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15721)
!15721 = !{!15722}
!15722 = !DILocalVariable(name: "thread", arg: 1, scope: !15720, file: !2504, line: 731, type: !2399)
!15723 = !DILocation(line: 0, scope: !15720)
!15724 = !DILocation(line: 733, column: 6, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15720, file: !2504, line: 733, column: 6)
!15726 = !DILocation(line: 733, column: 6, scope: !15720)
!15727 = !DILocation(line: 0, scope: !14949, inlinedAt: !15728)
!15728 = distinct !DILocation(line: 734, column: 3, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15725, file: !2504, line: 733, column: 34)
!15730 = !DILocation(line: 266, column: 15, scope: !14949, inlinedAt: !15728)
!15731 = !DILocation(line: 266, column: 28, scope: !14949, inlinedAt: !15728)
!15732 = !DILocation(line: 0, scope: !14957, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 268, column: 3, scope: !14961, inlinedAt: !15728)
!15734 = !DILocation(line: 234, column: 2, scope: !14957, inlinedAt: !15733)
!15735 = !DILocation(line: 735, column: 2, scope: !15729)
!15736 = !DILocation(line: 736, column: 25, scope: !15720)
!15737 = !DILocation(line: 736, column: 22, scope: !15720)
!15738 = !DILocation(line: 736, column: 2, scope: !15720)
!15739 = !DILocation(line: 737, column: 1, scope: !15720)
!15740 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13788, file: !13788, line: 160, type: !14738, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15741)
!15741 = !{!15742}
!15742 = !DILocalVariable(name: "thread", arg: 1, scope: !15740, file: !13788, line: 160, type: !2399)
!15743 = !DILocation(line: 0, scope: !15740)
!15744 = !DILocation(line: 162, column: 15, scope: !15740)
!15745 = !DILocation(line: 162, column: 28, scope: !15740)
!15746 = !DILocation(line: 163, column: 1, scope: !15740)
!15747 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2504, file: !2504, line: 786, type: !14738, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15748)
!15748 = !{!15749, !15750, !15752}
!15749 = !DILocalVariable(name: "thread", arg: 1, scope: !15747, file: !2504, line: 786, type: !2399)
!15750 = !DILocalVariable(name: "__i", scope: !15751, file: !2504, line: 788, type: !14772)
!15751 = distinct !DILexicalBlock(scope: !15747, file: !2504, line: 788, column: 2)
!15752 = !DILocalVariable(name: "__key", scope: !15751, file: !2504, line: 788, type: !14772)
!15753 = !DILocation(line: 0, scope: !15747)
!15754 = !DILocation(line: 0, scope: !15751)
!15755 = !DILocation(line: 0, scope: !14780, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 788, column: 2, scope: !15751)
!15757 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15758)
!15758 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15756)
!15759 = !DILocation(line: 0, scope: !14789, inlinedAt: !15758)
!15760 = !DILocation(line: 789, column: 3, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15762, file: !2504, line: 788, column: 26)
!15762 = distinct !DILexicalBlock(scope: !15751, file: !2504, line: 788, column: 2)
!15763 = !DILocation(line: 0, scope: !14807, inlinedAt: !15764)
!15764 = distinct !DILocation(line: 788, column: 2, scope: !15762)
!15765 = !DILocation(line: 0, scope: !14815, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15764)
!15767 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15766)
!15768 = !DILocation(line: 791, column: 1, scope: !15747)
!15769 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2504, file: !2504, line: 816, type: !15770, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15772)
!15770 = !DISubroutineType(types: !15771)
!15771 = !{!103, !132, !2430, !15571}
!15772 = !{!15773, !15774, !15775, !15776, !15777, !15779}
!15773 = !DILocalVariable(name: "key", arg: 1, scope: !15769, file: !2504, line: 816, type: !132)
!15774 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15769, file: !2504, line: 816, type: !2430)
!15775 = !DILocalVariable(name: "timeout", arg: 3, scope: !15769, file: !2504, line: 816, type: !15571)
!15776 = !DILocalVariable(name: "ret", scope: !15769, file: !2504, line: 828, type: !103)
!15777 = !DILocalVariable(name: "__i", scope: !15778, file: !2504, line: 829, type: !14772)
!15778 = distinct !DILexicalBlock(scope: !15769, file: !2504, line: 829, column: 2)
!15779 = !DILocalVariable(name: "__key", scope: !15778, file: !2504, line: 829, type: !14772)
!15780 = !DILocation(line: 0, scope: !15769)
!15781 = !DILocation(line: 823, column: 14, scope: !15769)
!15782 = !DILocation(line: 823, column: 2, scope: !15769)
!15783 = !DILocation(line: 826, column: 20, scope: !15769)
!15784 = !DILocation(line: 826, column: 18, scope: !15769)
!15785 = !DILocation(line: 828, column: 12, scope: !15769)
!15786 = !DILocation(line: 0, scope: !15778)
!15787 = !DILocation(line: 0, scope: !14780, inlinedAt: !15788)
!15788 = distinct !DILocation(line: 829, column: 2, scope: !15778)
!15789 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15788)
!15791 = !DILocation(line: 0, scope: !14789, inlinedAt: !15790)
!15792 = !DILocation(line: 830, column: 7, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15794, file: !2504, line: 830, column: 7)
!15794 = distinct !DILexicalBlock(scope: !15795, file: !2504, line: 829, column: 26)
!15795 = distinct !DILexicalBlock(scope: !15778, file: !2504, line: 829, column: 2)
!15796 = !DILocation(line: 830, column: 26, scope: !15793)
!15797 = !DILocation(line: 830, column: 23, scope: !15793)
!15798 = !DILocation(line: 830, column: 7, scope: !15794)
!15799 = !DILocation(line: 831, column: 20, scope: !15800)
!15800 = distinct !DILexicalBlock(scope: !15793, file: !2504, line: 830, column: 36)
!15801 = !DILocation(line: 832, column: 3, scope: !15800)
!15802 = !DILocation(line: 0, scope: !14807, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 829, column: 2, scope: !15795)
!15804 = !DILocation(line: 0, scope: !14815, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15803)
!15806 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15805)
!15807 = !DILocation(line: 834, column: 2, scope: !15769)
!15808 = distinct !DISubprogram(name: "z_pend_curr", scope: !2504, file: !2504, line: 840, type: !15809, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15811)
!15809 = !DISubroutineType(types: !15810)
!15810 = !{!103, !14783, !14772, !2430, !15571}
!15811 = !{!15812, !15813, !15814, !15815}
!15812 = !DILocalVariable(name: "lock", arg: 1, scope: !15808, file: !2504, line: 840, type: !14783)
!15813 = !DILocalVariable(name: "key", arg: 2, scope: !15808, file: !2504, line: 840, type: !14772)
!15814 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15808, file: !2504, line: 841, type: !2430)
!15815 = !DILocalVariable(name: "timeout", arg: 4, scope: !15808, file: !2504, line: 841, type: !15571)
!15816 = !DILocation(line: 0, scope: !15808)
!15817 = !DILocation(line: 844, column: 20, scope: !15808)
!15818 = !DILocation(line: 844, column: 18, scope: !15808)
!15819 = !DILocation(line: 0, scope: !14780, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 856, column: 9, scope: !15808)
!15821 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15822)
!15822 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15820)
!15823 = !DILocation(line: 0, scope: !14789, inlinedAt: !15822)
!15824 = !DILocation(line: 857, column: 14, scope: !15808)
!15825 = !DILocation(line: 857, column: 2, scope: !15808)
!15826 = !DILocation(line: 0, scope: !15391, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 859, column: 9, scope: !15808)
!15828 = !DILocation(line: 196, column: 9, scope: !15391, inlinedAt: !15827)
!15829 = !DILocation(line: 859, column: 2, scope: !15808)
!15830 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2504, file: !2504, line: 862, type: !15831, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15833)
!15831 = !DISubroutineType(types: !15832)
!15832 = !{!2399, !2430}
!15833 = !{!15834, !15835, !15836, !15838}
!15834 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15830, file: !2504, line: 862, type: !2430)
!15835 = !DILocalVariable(name: "thread", scope: !15830, file: !2504, line: 864, type: !2399)
!15836 = !DILocalVariable(name: "__i", scope: !15837, file: !2504, line: 866, type: !14772)
!15837 = distinct !DILexicalBlock(scope: !15830, file: !2504, line: 866, column: 2)
!15838 = !DILocalVariable(name: "__key", scope: !15837, file: !2504, line: 866, type: !14772)
!15839 = !DILocation(line: 0, scope: !15830)
!15840 = !DILocation(line: 0, scope: !15837)
!15841 = !DILocation(line: 0, scope: !14780, inlinedAt: !15842)
!15842 = distinct !DILocation(line: 866, column: 2, scope: !15837)
!15843 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15842)
!15845 = !DILocation(line: 0, scope: !14789, inlinedAt: !15844)
!15846 = !DILocation(line: 867, column: 12, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15848, file: !2504, line: 866, column: 26)
!15848 = distinct !DILexicalBlock(scope: !15837, file: !2504, line: 866, column: 2)
!15849 = !DILocation(line: 869, column: 14, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15847, file: !2504, line: 869, column: 7)
!15851 = !DILocation(line: 869, column: 7, scope: !15847)
!15852 = !DILocation(line: 870, column: 4, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15850, file: !2504, line: 869, column: 23)
!15854 = !DILocation(line: 871, column: 3, scope: !15853)
!15855 = !DILocation(line: 0, scope: !14807, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 866, column: 2, scope: !15848)
!15857 = !DILocation(line: 0, scope: !14815, inlinedAt: !15858)
!15858 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15856)
!15859 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15858)
!15860 = !DILocation(line: 874, column: 2, scope: !15830)
!15861 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2504, file: !2504, line: 877, type: !15831, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15862)
!15862 = !{!15863, !15864, !15865, !15867}
!15863 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15861, file: !2504, line: 877, type: !2430)
!15864 = !DILocalVariable(name: "thread", scope: !15861, file: !2504, line: 879, type: !2399)
!15865 = !DILocalVariable(name: "__i", scope: !15866, file: !2504, line: 881, type: !14772)
!15866 = distinct !DILexicalBlock(scope: !15861, file: !2504, line: 881, column: 2)
!15867 = !DILocalVariable(name: "__key", scope: !15866, file: !2504, line: 881, type: !14772)
!15868 = !DILocation(line: 0, scope: !15861)
!15869 = !DILocation(line: 0, scope: !15866)
!15870 = !DILocation(line: 0, scope: !14780, inlinedAt: !15871)
!15871 = distinct !DILocation(line: 881, column: 2, scope: !15866)
!15872 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15873)
!15873 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15871)
!15874 = !DILocation(line: 0, scope: !14789, inlinedAt: !15873)
!15875 = !DILocation(line: 882, column: 12, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15877, file: !2504, line: 881, column: 26)
!15877 = distinct !DILexicalBlock(scope: !15866, file: !2504, line: 881, column: 2)
!15878 = !DILocation(line: 884, column: 14, scope: !15879)
!15879 = distinct !DILexicalBlock(scope: !15876, file: !2504, line: 884, column: 7)
!15880 = !DILocation(line: 884, column: 7, scope: !15876)
!15881 = !DILocation(line: 885, column: 4, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15879, file: !2504, line: 884, column: 23)
!15883 = !DILocation(line: 886, column: 10, scope: !15882)
!15884 = !DILocation(line: 887, column: 3, scope: !15882)
!15885 = !DILocation(line: 0, scope: !14807, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 881, column: 2, scope: !15877)
!15887 = !DILocation(line: 0, scope: !14815, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15886)
!15889 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15888)
!15890 = !DILocation(line: 890, column: 2, scope: !15861)
!15891 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2504, file: !2504, line: 893, type: !14738, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15892)
!15892 = !{!15893}
!15893 = !DILocalVariable(name: "thread", arg: 1, scope: !15891, file: !2504, line: 893, type: !2399)
!15894 = !DILocation(line: 0, scope: !15891)
!15895 = !DILocation(line: 0, scope: !15747, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 895, column: 2, scope: !15891)
!15897 = !DILocation(line: 0, scope: !15751, inlinedAt: !15896)
!15898 = !DILocation(line: 0, scope: !14780, inlinedAt: !15899)
!15899 = distinct !DILocation(line: 788, column: 2, scope: !15751, inlinedAt: !15896)
!15900 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15901)
!15901 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15899)
!15902 = !DILocation(line: 0, scope: !14789, inlinedAt: !15901)
!15903 = !DILocation(line: 789, column: 3, scope: !15761, inlinedAt: !15896)
!15904 = !DILocation(line: 0, scope: !14807, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 788, column: 2, scope: !15762, inlinedAt: !15896)
!15906 = !DILocation(line: 0, scope: !14815, inlinedAt: !15907)
!15907 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15905)
!15908 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15907)
!15909 = !DILocation(line: 896, column: 8, scope: !15891)
!15910 = !DILocation(line: 897, column: 1, scope: !15891)
!15911 = distinct !DISubprogram(name: "z_set_prio", scope: !2504, file: !2504, line: 902, type: !15100, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15912)
!15912 = !{!15913, !15914, !15915, !15916, !15918}
!15913 = !DILocalVariable(name: "thread", arg: 1, scope: !15911, file: !2504, line: 902, type: !2399)
!15914 = !DILocalVariable(name: "prio", arg: 2, scope: !15911, file: !2504, line: 902, type: !103)
!15915 = !DILocalVariable(name: "need_sched", scope: !15911, file: !2504, line: 904, type: !179)
!15916 = !DILocalVariable(name: "__i", scope: !15917, file: !2504, line: 906, type: !14772)
!15917 = distinct !DILexicalBlock(scope: !15911, file: !2504, line: 906, column: 2)
!15918 = !DILocalVariable(name: "__key", scope: !15917, file: !2504, line: 906, type: !14772)
!15919 = !DILocation(line: 0, scope: !15911)
!15920 = !DILocation(line: 0, scope: !15917)
!15921 = !DILocation(line: 0, scope: !14780, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 906, column: 2, scope: !15917)
!15923 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15922)
!15925 = !DILocation(line: 0, scope: !14789, inlinedAt: !15924)
!15926 = !DILocation(line: 907, column: 16, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15928, file: !2504, line: 906, column: 26)
!15928 = distinct !DILexicalBlock(scope: !15917, file: !2504, line: 906, column: 2)
!15929 = !DILocation(line: 909, column: 7, scope: !15927)
!15930 = !DILocation(line: 0, scope: !14949, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 912, column: 5, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15933, file: !2504, line: 911, column: 63)
!15933 = distinct !DILexicalBlock(scope: !15934, file: !2504, line: 911, column: 8)
!15934 = distinct !DILexicalBlock(scope: !15935, file: !2504, line: 909, column: 19)
!15935 = distinct !DILexicalBlock(scope: !15927, file: !2504, line: 909, column: 7)
!15936 = !DILocation(line: 266, column: 28, scope: !14949, inlinedAt: !15931)
!15937 = !DILocation(line: 0, scope: !14957, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 268, column: 3, scope: !14961, inlinedAt: !15931)
!15939 = !DILocation(line: 234, column: 2, scope: !14957, inlinedAt: !15938)
!15940 = !DILocation(line: 913, column: 23, scope: !15932)
!15941 = !DILocation(line: 0, scope: !14966, inlinedAt: !15942)
!15942 = distinct !DILocation(line: 914, column: 5, scope: !15932)
!15943 = !DILocation(line: 252, column: 28, scope: !14966, inlinedAt: !15942)
!15944 = !DILocation(line: 0, scope: !14973, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 254, column: 3, scope: !14977, inlinedAt: !15942)
!15946 = !DILocation(line: 0, scope: !14980, inlinedAt: !15947)
!15947 = distinct !DILocation(line: 229, column: 2, scope: !14973, inlinedAt: !15945)
!15948 = !DILocation(line: 188, column: 2, scope: !14990, inlinedAt: !15947)
!15949 = !DILocation(line: 188, column: 2, scope: !14992, inlinedAt: !15947)
!15950 = !DILocation(line: 0, scope: !14990, inlinedAt: !15947)
!15951 = !DILocation(line: 189, column: 7, scope: !14995, inlinedAt: !15947)
!15952 = !DILocation(line: 189, column: 35, scope: !14995, inlinedAt: !15947)
!15953 = !DILocation(line: 189, column: 7, scope: !14996, inlinedAt: !15947)
!15954 = !DILocation(line: 190, column: 4, scope: !15000, inlinedAt: !15947)
!15955 = !DILocation(line: 192, column: 4, scope: !15000, inlinedAt: !15947)
!15956 = distinct !{!15956, !15948, !15957}
!15957 = !DILocation(line: 194, column: 2, scope: !14990, inlinedAt: !15947)
!15958 = !DILocation(line: 196, column: 2, scope: !14980, inlinedAt: !15947)
!15959 = !DILocation(line: 197, column: 1, scope: !14980, inlinedAt: !15947)
!15960 = !DILocation(line: 918, column: 4, scope: !15934)
!15961 = !DILocation(line: 919, column: 3, scope: !15934)
!15962 = !DILocation(line: 920, column: 22, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15935, file: !2504, line: 919, column: 10)
!15964 = !DILocation(line: 0, scope: !14807, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 906, column: 2, scope: !15928)
!15966 = !DILocation(line: 0, scope: !14815, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !15965)
!15968 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !15967)
!15969 = !DILocation(line: 926, column: 2, scope: !15911)
!15970 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2504, file: !2504, line: 929, type: !15971, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15973)
!15971 = !DISubroutineType(types: !15972)
!15972 = !{null, !2399, !103}
!15973 = !{!15974, !15975, !15976}
!15974 = !DILocalVariable(name: "thread", arg: 1, scope: !15970, file: !2504, line: 929, type: !2399)
!15975 = !DILocalVariable(name: "prio", arg: 2, scope: !15970, file: !2504, line: 929, type: !103)
!15976 = !DILocalVariable(name: "need_sched", scope: !15970, file: !2504, line: 931, type: !179)
!15977 = !DILocation(line: 0, scope: !15970)
!15978 = !DILocation(line: 931, column: 20, scope: !15970)
!15979 = !DILocation(line: 935, column: 17, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15970, file: !2504, line: 935, column: 6)
!15981 = !DILocation(line: 935, column: 20, scope: !15980)
!15982 = !DILocation(line: 935, column: 35, scope: !15980)
!15983 = !DILocation(line: 935, column: 48, scope: !15980)
!15984 = !DILocation(line: 935, column: 6, scope: !15970)
!15985 = !DILocation(line: 936, column: 3, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15980, file: !2504, line: 935, column: 55)
!15987 = !DILocation(line: 937, column: 2, scope: !15986)
!15988 = !DILocation(line: 938, column: 1, scope: !15970)
!15989 = distinct !DISubprogram(name: "k_sched_lock", scope: !2504, file: !2504, line: 987, type: !3229, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !15990)
!15990 = !{!15991, !15993}
!15991 = !DILocalVariable(name: "__i", scope: !15992, file: !2504, line: 989, type: !14772)
!15992 = distinct !DILexicalBlock(scope: !15989, file: !2504, line: 989, column: 2)
!15993 = !DILocalVariable(name: "__key", scope: !15992, file: !2504, line: 989, type: !14772)
!15994 = !DILocation(line: 0, scope: !15992)
!15995 = !DILocation(line: 0, scope: !14780, inlinedAt: !15996)
!15996 = distinct !DILocation(line: 989, column: 2, scope: !15992)
!15997 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !15998)
!15998 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !15996)
!15999 = !DILocation(line: 0, scope: !14789, inlinedAt: !15998)
!16000 = !DILocation(line: 992, column: 3, scope: !16001)
!16001 = distinct !DILexicalBlock(scope: !16002, file: !2504, line: 989, column: 26)
!16002 = distinct !DILexicalBlock(scope: !15992, file: !2504, line: 989, column: 2)
!16003 = !DILocation(line: 0, scope: !14807, inlinedAt: !16004)
!16004 = distinct !DILocation(line: 989, column: 2, scope: !16002)
!16005 = !DILocation(line: 0, scope: !14815, inlinedAt: !16006)
!16006 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !16004)
!16007 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !16006)
!16008 = !DILocation(line: 994, column: 1, scope: !15989)
!16009 = distinct !DISubprogram(name: "z_sched_lock", scope: !13788, file: !13788, line: 251, type: !3229, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!16010 = !DILocation(line: 256, column: 4, scope: !16009)
!16011 = !DILocation(line: 256, column: 19, scope: !16009)
!16012 = !DILocation(line: 256, column: 2, scope: !16009)
!16013 = !DILocation(line: 258, column: 2, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !16009, file: !13788, line: 258, column: 2)
!16015 = !{i64 2152340738}
!16016 = !DILocation(line: 259, column: 1, scope: !16009)
!16017 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2504, file: !2504, line: 996, type: !3229, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16018)
!16018 = !{!16019, !16021}
!16019 = !DILocalVariable(name: "__i", scope: !16020, file: !2504, line: 998, type: !14772)
!16020 = distinct !DILexicalBlock(scope: !16017, file: !2504, line: 998, column: 2)
!16021 = !DILocalVariable(name: "__key", scope: !16020, file: !2504, line: 998, type: !14772)
!16022 = !DILocation(line: 0, scope: !16020)
!16023 = !DILocation(line: 0, scope: !14780, inlinedAt: !16024)
!16024 = distinct !DILocation(line: 998, column: 2, scope: !16020)
!16025 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !16026)
!16026 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !16024)
!16027 = !DILocation(line: 0, scope: !14789, inlinedAt: !16026)
!16028 = !DILocation(line: 1002, column: 5, scope: !16029)
!16029 = distinct !DILexicalBlock(scope: !16030, file: !2504, line: 998, column: 26)
!16030 = distinct !DILexicalBlock(scope: !16020, file: !2504, line: 998, column: 2)
!16031 = !DILocation(line: 1002, column: 20, scope: !16029)
!16032 = !DILocation(line: 1002, column: 3, scope: !16029)
!16033 = !DILocation(line: 1003, column: 3, scope: !16029)
!16034 = !DILocation(line: 0, scope: !14807, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 998, column: 2, scope: !16030)
!16036 = !DILocation(line: 0, scope: !14815, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !16035)
!16038 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !16037)
!16039 = !DILocation(line: 1011, column: 2, scope: !16017)
!16040 = !DILocation(line: 1012, column: 1, scope: !16017)
!16041 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2504, file: !2504, line: 1014, type: !15088, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!16042 = !DILocation(line: 1028, column: 25, scope: !16041)
!16043 = !DILocation(line: 1028, column: 2, scope: !16041)
!16044 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2504, file: !2504, line: 1155, type: !16045, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16047)
!16045 = !DISubroutineType(types: !16046)
!16046 = !{!179, !2428, !2428}
!16047 = !{!16048, !16049, !16050, !16051, !16052}
!16048 = !DILocalVariable(name: "a", arg: 1, scope: !16044, file: !2504, line: 1155, type: !2428)
!16049 = !DILocalVariable(name: "b", arg: 2, scope: !16044, file: !2504, line: 1155, type: !2428)
!16050 = !DILocalVariable(name: "thread_a", scope: !16044, file: !2504, line: 1157, type: !2399)
!16051 = !DILocalVariable(name: "thread_b", scope: !16044, file: !2504, line: 1157, type: !2399)
!16052 = !DILocalVariable(name: "cmp", scope: !16044, file: !2504, line: 1158, type: !357)
!16053 = !DILocation(line: 0, scope: !16044)
!16054 = !DILocation(line: 1160, column: 13, scope: !16044)
!16055 = !DILocation(line: 1161, column: 13, scope: !16044)
!16056 = !DILocation(line: 1163, column: 8, scope: !16044)
!16057 = !DILocation(line: 1165, column: 10, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16044, file: !2504, line: 1165, column: 6)
!16059 = !DILocation(line: 1165, column: 6, scope: !16044)
!16060 = !DILocation(line: 1167, column: 17, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16058, file: !2504, line: 1167, column: 13)
!16062 = !DILocation(line: 1167, column: 13, scope: !16058)
!16063 = !DILocation(line: 1170, column: 25, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !16061, file: !2504, line: 1169, column: 9)
!16065 = !DILocation(line: 1170, column: 52, scope: !16064)
!16066 = !DILocation(line: 1170, column: 35, scope: !16064)
!16067 = !DILocation(line: 1170, column: 3, scope: !16064)
!16068 = !DILocation(line: 0, scope: !16058)
!16069 = !DILocation(line: 1173, column: 1, scope: !16044)
!16070 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2504, file: !2504, line: 1175, type: !16071, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16086)
!16071 = !DISubroutineType(types: !16072)
!16072 = !{null, !16073, !2399}
!16073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16074, size: 32)
!16074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16075, line: 37, size: 128, elements: !16076)
!16075 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16076 = !{!16077, !16085}
!16077 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16074, file: !16075, line: 38, baseType: !16078, size: 96)
!16078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !405, line: 83, size: 96, elements: !16079)
!16079 = !{!16080, !16081, !16084}
!16080 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16078, file: !405, line: 84, baseType: !2428, size: 32)
!16081 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16078, file: !405, line: 85, baseType: !16082, size: 32, offset: 32)
!16082 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !405, line: 81, baseType: !16083)
!16083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16045, size: 32)
!16084 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16078, file: !405, line: 86, baseType: !103, size: 32, offset: 64)
!16085 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16074, file: !16075, line: 39, baseType: !103, size: 32, offset: 96)
!16086 = !{!16087, !16088, !16089, !16090, !16099}
!16087 = !DILocalVariable(name: "pq", arg: 1, scope: !16070, file: !2504, line: 1175, type: !16073)
!16088 = !DILocalVariable(name: "thread", arg: 2, scope: !16070, file: !2504, line: 1175, type: !2399)
!16089 = !DILocalVariable(name: "t", scope: !16070, file: !2504, line: 1177, type: !2399)
!16090 = !DILocalVariable(name: "__f", scope: !16091, file: !2504, line: 1190, type: !16094)
!16091 = distinct !DILexicalBlock(scope: !16092, file: !2504, line: 1190, column: 3)
!16092 = distinct !DILexicalBlock(scope: !16093, file: !2504, line: 1189, column: 27)
!16093 = distinct !DILexicalBlock(scope: !16070, file: !2504, line: 1189, column: 6)
!16094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !405, line: 155, size: 96, elements: !16095)
!16095 = !{!16096, !16097, !16098}
!16096 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16094, file: !405, line: 156, baseType: !2499, size: 32)
!16097 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16094, file: !405, line: 157, baseType: !283, size: 32, offset: 32)
!16098 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16094, file: !405, line: 158, baseType: !357, size: 32, offset: 64)
!16099 = !DILocalVariable(name: "n", scope: !16100, file: !2504, line: 1190, type: !2428)
!16100 = distinct !DILexicalBlock(scope: !16101, file: !2504, line: 1190, column: 3)
!16101 = distinct !DILexicalBlock(scope: !16091, file: !2504, line: 1190, column: 3)
!16102 = !DILocation(line: 0, scope: !16070)
!16103 = !DILocation(line: 1181, column: 31, scope: !16070)
!16104 = !DILocation(line: 1181, column: 45, scope: !16070)
!16105 = !DILocation(line: 1181, column: 15, scope: !16070)
!16106 = !DILocation(line: 1181, column: 25, scope: !16070)
!16107 = !DILocation(line: 1189, column: 11, scope: !16093)
!16108 = !DILocation(line: 1189, column: 7, scope: !16093)
!16109 = !DILocation(line: 1189, column: 6, scope: !16070)
!16110 = !DILocation(line: 1190, column: 3, scope: !16091)
!16111 = !DILocation(line: 1190, column: 3, scope: !16100)
!16112 = !DILocation(line: 0, scope: !16100)
!16113 = !DILocation(line: 1190, column: 3, scope: !16101)
!16114 = !DILocation(line: 1193, column: 2, scope: !16092)
!16115 = !DILocation(line: 1191, column: 42, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16101, file: !2504, line: 1190, column: 54)
!16117 = !DILocation(line: 1191, column: 12, scope: !16116)
!16118 = !DILocation(line: 1191, column: 22, scope: !16116)
!16119 = distinct !{!16119, !16110, !16120}
!16120 = !DILocation(line: 1192, column: 3, scope: !16091)
!16121 = !DILocation(line: 1195, column: 17, scope: !16070)
!16122 = !DILocation(line: 1195, column: 37, scope: !16070)
!16123 = !DILocation(line: 1195, column: 2, scope: !16070)
!16124 = !DILocation(line: 1196, column: 1, scope: !16070)
!16125 = !DISubprogram(name: "z_rb_foreach_next", scope: !405, file: !405, line: 176, type: !16126, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!16126 = !DISubroutineType(types: !16127)
!16127 = !{!2428, !16128, !16129}
!16128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16078, size: 32)
!16129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16094, size: 32)
!16130 = !DISubprogram(name: "rb_insert", scope: !405, file: !405, line: 105, type: !16131, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!16131 = !DISubroutineType(types: !16132)
!16132 = !{null, !16128, !2428}
!16133 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2504, file: !2504, line: 1198, type: !16071, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16134)
!16134 = !{!16135, !16136}
!16135 = !DILocalVariable(name: "pq", arg: 1, scope: !16133, file: !2504, line: 1198, type: !16073)
!16136 = !DILocalVariable(name: "thread", arg: 2, scope: !16133, file: !2504, line: 1198, type: !2399)
!16137 = !DILocation(line: 0, scope: !16133)
!16138 = !DILocation(line: 1202, column: 17, scope: !16133)
!16139 = !DILocation(line: 1202, column: 37, scope: !16133)
!16140 = !DILocation(line: 1202, column: 2, scope: !16133)
!16141 = !DILocation(line: 1204, column: 16, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16133, file: !2504, line: 1204, column: 6)
!16143 = !DILocation(line: 1204, column: 7, scope: !16142)
!16144 = !DILocation(line: 1204, column: 6, scope: !16133)
!16145 = !DILocation(line: 1205, column: 7, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16142, file: !2504, line: 1204, column: 22)
!16147 = !DILocation(line: 1205, column: 22, scope: !16146)
!16148 = !DILocation(line: 1206, column: 2, scope: !16146)
!16149 = !DILocation(line: 1207, column: 1, scope: !16133)
!16150 = !DISubprogram(name: "rb_remove", scope: !405, file: !405, line: 110, type: !16131, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!16151 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2504, file: !2504, line: 1209, type: !16152, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16154)
!16152 = !DISubroutineType(types: !16153)
!16153 = !{!2399, !16073}
!16154 = !{!16155, !16156, !16157}
!16155 = !DILocalVariable(name: "pq", arg: 1, scope: !16151, file: !2504, line: 1209, type: !16073)
!16156 = !DILocalVariable(name: "thread", scope: !16151, file: !2504, line: 1211, type: !2399)
!16157 = !DILocalVariable(name: "n", scope: !16151, file: !2504, line: 1212, type: !2428)
!16158 = !DILocation(line: 0, scope: !16151)
!16159 = !DILocation(line: 1212, column: 37, scope: !16151)
!16160 = !DILocation(line: 1212, column: 21, scope: !16151)
!16161 = !DILocation(line: 1217, column: 2, scope: !16151)
!16162 = distinct !DISubprogram(name: "rb_get_min", scope: !405, file: !405, line: 115, type: !16163, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16165)
!16163 = !DISubroutineType(types: !16164)
!16164 = !{!2428, !16128}
!16165 = !{!16166}
!16166 = !DILocalVariable(name: "tree", arg: 1, scope: !16162, file: !405, line: 115, type: !16128)
!16167 = !DILocation(line: 0, scope: !16162)
!16168 = !DILocation(line: 117, column: 9, scope: !16162)
!16169 = !DILocation(line: 117, column: 2, scope: !16162)
!16170 = !DISubprogram(name: "z_rb_get_minmax", scope: !405, file: !405, line: 100, type: !16171, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !486)
!16171 = !DISubroutineType(types: !16172)
!16172 = !{!2428, !16128, !176}
!16173 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2504, file: !2504, line: 1246, type: !16174, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16182)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{!2399, !16176}
!16176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16177, size: 32)
!16177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16075, line: 53, size: 2080, elements: !16178)
!16178 = !{!16179, !16181}
!16179 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16177, file: !16075, line: 54, baseType: !16180, size: 2048)
!16180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2435, size: 2048, elements: !922)
!16181 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16177, file: !16075, line: 55, baseType: !32, size: 32, offset: 2048)
!16182 = !{!16183, !16184, !16185, !16186}
!16183 = !DILocalVariable(name: "pq", arg: 1, scope: !16173, file: !2504, line: 1246, type: !16176)
!16184 = !DILocalVariable(name: "thread", scope: !16173, file: !2504, line: 1252, type: !2399)
!16185 = !DILocalVariable(name: "l", scope: !16173, file: !2504, line: 1253, type: !14983)
!16186 = !DILocalVariable(name: "n", scope: !16173, file: !2504, line: 1254, type: !2500)
!16187 = !DILocation(line: 0, scope: !16173)
!16188 = !DILocation(line: 1248, column: 11, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16173, file: !2504, line: 1248, column: 6)
!16190 = !DILocation(line: 1248, column: 7, scope: !16189)
!16191 = !DILocation(line: 1248, column: 6, scope: !16173)
!16192 = !DILocation(line: 1253, column: 31, scope: !16173)
!16193 = !DILocation(line: 1253, column: 20, scope: !16173)
!16194 = !DILocation(line: 1254, column: 19, scope: !16173)
!16195 = !DILocation(line: 1260, column: 1, scope: !16173)
!16196 = distinct !DISubprogram(name: "z_unpend_all", scope: !2504, file: !2504, line: 1262, type: !16197, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16199)
!16197 = !DISubroutineType(types: !16198)
!16198 = !{!103, !2430}
!16199 = !{!16200, !16201, !16202}
!16200 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16196, file: !2504, line: 1262, type: !2430)
!16201 = !DILocalVariable(name: "need_sched", scope: !16196, file: !2504, line: 1264, type: !103)
!16202 = !DILocalVariable(name: "thread", scope: !16196, file: !2504, line: 1265, type: !2399)
!16203 = !DILocation(line: 0, scope: !16196)
!16204 = !DILocation(line: 1267, column: 19, scope: !16196)
!16205 = !DILocation(line: 1267, column: 41, scope: !16196)
!16206 = !DILocation(line: 1267, column: 2, scope: !16196)
!16207 = !DILocation(line: 1268, column: 3, scope: !16208)
!16208 = distinct !DILexicalBlock(scope: !16196, file: !2504, line: 1267, column: 50)
!16209 = !DILocation(line: 1269, column: 3, scope: !16208)
!16210 = distinct !{!16210, !16206, !16211}
!16211 = !DILocation(line: 1271, column: 2, scope: !16196)
!16212 = !DILocation(line: 1273, column: 2, scope: !16196)
!16213 = distinct !DISubprogram(name: "z_waitq_head", scope: !14114, file: !14114, line: 52, type: !15831, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16214)
!16214 = !{!16215}
!16215 = !DILocalVariable(name: "w", arg: 1, scope: !16213, file: !14114, line: 52, type: !2430)
!16216 = !DILocation(line: 0, scope: !16213)
!16217 = !DILocation(line: 54, column: 52, scope: !16213)
!16218 = !DILocation(line: 54, column: 28, scope: !16213)
!16219 = !DILocation(line: 54, column: 9, scope: !16213)
!16220 = !DILocation(line: 54, column: 2, scope: !16213)
!16221 = distinct !DISubprogram(name: "init_ready_q", scope: !2504, file: !2504, line: 1276, type: !16222, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16229)
!16222 = !DISubroutineType(types: !16223)
!16223 = !{null, !16224}
!16224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16225, size: 32)
!16225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !329, line: 83, size: 96, elements: !16226)
!16226 = !{!16227, !16228}
!16227 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16225, file: !329, line: 86, baseType: !2399, size: 32)
!16228 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16225, file: !329, line: 90, baseType: !2435, size: 64, offset: 32)
!16229 = !{!16230}
!16230 = !DILocalVariable(name: "rq", arg: 1, scope: !16221, file: !2504, line: 1276, type: !16224)
!16231 = !DILocation(line: 0, scope: !16221)
!16232 = !DILocation(line: 1289, column: 22, scope: !16221)
!16233 = !DILocation(line: 1289, column: 2, scope: !16221)
!16234 = !DILocation(line: 1291, column: 1, scope: !16221)
!16235 = distinct !DISubprogram(name: "sys_dlist_init", scope: !334, file: !334, line: 197, type: !16236, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16238)
!16236 = !DISubroutineType(types: !16237)
!16237 = !{null, !14983}
!16238 = !{!16239}
!16239 = !DILocalVariable(name: "list", arg: 1, scope: !16235, file: !334, line: 197, type: !14983)
!16240 = !DILocation(line: 0, scope: !16235)
!16241 = !DILocation(line: 199, column: 8, scope: !16235)
!16242 = !DILocation(line: 199, column: 13, scope: !16235)
!16243 = !DILocation(line: 200, column: 8, scope: !16235)
!16244 = !DILocation(line: 200, column: 13, scope: !16235)
!16245 = !DILocation(line: 201, column: 1, scope: !16235)
!16246 = distinct !DISubprogram(name: "z_sched_init", scope: !2504, file: !2504, line: 1293, type: !3229, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!16247 = !DILocation(line: 1302, column: 2, scope: !16246)
!16248 = !DILocation(line: 1306, column: 2, scope: !16246)
!16249 = !DILocation(line: 1309, column: 1, scope: !16246)
!16250 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2504, file: !2504, line: 1311, type: !16251, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16254)
!16251 = !DISubroutineType(types: !16252)
!16252 = !{!103, !16253}
!16253 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !380, line: 347, baseType: !2399)
!16254 = !{!16255}
!16255 = !DILocalVariable(name: "thread", arg: 1, scope: !16250, file: !2504, line: 1311, type: !16253)
!16256 = !DILocation(line: 0, scope: !16250)
!16257 = !DILocation(line: 1313, column: 22, scope: !16250)
!16258 = !DILocation(line: 1313, column: 9, scope: !16250)
!16259 = !DILocation(line: 1313, column: 2, scope: !16250)
!16260 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2504, file: !2504, line: 1325, type: !16261, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16263)
!16261 = !DISubroutineType(types: !16262)
!16262 = !{null, !16253, !103}
!16263 = !{!16264, !16265, !16266}
!16264 = !DILocalVariable(name: "thread", arg: 1, scope: !16260, file: !2504, line: 1325, type: !16253)
!16265 = !DILocalVariable(name: "prio", arg: 2, scope: !16260, file: !2504, line: 1325, type: !103)
!16266 = !DILocalVariable(name: "th", scope: !16260, file: !2504, line: 1334, type: !2399)
!16267 = !DILocation(line: 0, scope: !16260)
!16268 = !DILocation(line: 1336, column: 2, scope: !16260)
!16269 = !DILocation(line: 1337, column: 1, scope: !16260)
!16270 = distinct !DISubprogram(name: "k_can_yield", scope: !2504, file: !2504, line: 1384, type: !7574, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!16271 = !DILocation(line: 1386, column: 11, scope: !16270)
!16272 = !DILocation(line: 1386, column: 29, scope: !16270)
!16273 = !DILocation(line: 1386, column: 32, scope: !16270)
!16274 = !DILocation(line: 1386, column: 46, scope: !16270)
!16275 = !DILocation(line: 1387, column: 28, scope: !16270)
!16276 = !DILocation(line: 1387, column: 4, scope: !16270)
!16277 = !DILocation(line: 1386, column: 2, scope: !16270)
!16278 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !325, file: !325, line: 989, type: !7574, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!16279 = !DILocation(line: 993, column: 10, scope: !16278)
!16280 = !DILocation(line: 993, column: 2, scope: !16278)
!16281 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2504, file: !2504, line: 1390, type: !3229, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16282)
!16282 = !{!16283}
!16283 = !DILocalVariable(name: "key", scope: !16281, file: !2504, line: 1396, type: !14772)
!16284 = !DILocation(line: 0, scope: !14780, inlinedAt: !16285)
!16285 = distinct !DILocation(line: 1396, column: 25, scope: !16281)
!16286 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !16287)
!16287 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !16285)
!16288 = !DILocation(line: 0, scope: !14789, inlinedAt: !16287)
!16289 = !DILocation(line: 0, scope: !16281)
!16290 = !DILocation(line: 1400, column: 18, scope: !16291)
!16291 = distinct !DILexicalBlock(scope: !16292, file: !2504, line: 1399, column: 36)
!16292 = distinct !DILexicalBlock(scope: !16281, file: !2504, line: 1398, column: 6)
!16293 = !DILocation(line: 0, scope: !14949, inlinedAt: !16294)
!16294 = distinct !DILocation(line: 1400, column: 3, scope: !16291)
!16295 = !DILocation(line: 266, column: 15, scope: !14949, inlinedAt: !16294)
!16296 = !DILocation(line: 266, column: 28, scope: !14949, inlinedAt: !16294)
!16297 = !DILocation(line: 0, scope: !14957, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 268, column: 3, scope: !14961, inlinedAt: !16294)
!16299 = !DILocation(line: 234, column: 2, scope: !14957, inlinedAt: !16298)
!16300 = !DILocation(line: 1402, column: 15, scope: !16281)
!16301 = !DILocation(line: 0, scope: !14966, inlinedAt: !16302)
!16302 = distinct !DILocation(line: 1402, column: 2, scope: !16281)
!16303 = !DILocation(line: 252, column: 15, scope: !14966, inlinedAt: !16302)
!16304 = !DILocation(line: 252, column: 28, scope: !14966, inlinedAt: !16302)
!16305 = !DILocation(line: 0, scope: !14973, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 254, column: 3, scope: !14977, inlinedAt: !16302)
!16307 = !DILocation(line: 0, scope: !14980, inlinedAt: !16308)
!16308 = distinct !DILocation(line: 229, column: 2, scope: !14973, inlinedAt: !16306)
!16309 = !DILocation(line: 188, column: 2, scope: !14990, inlinedAt: !16308)
!16310 = !DILocation(line: 188, column: 2, scope: !14992, inlinedAt: !16308)
!16311 = !DILocation(line: 0, scope: !14990, inlinedAt: !16308)
!16312 = !DILocation(line: 189, column: 7, scope: !14995, inlinedAt: !16308)
!16313 = !DILocation(line: 189, column: 35, scope: !14995, inlinedAt: !16308)
!16314 = !DILocation(line: 189, column: 7, scope: !14996, inlinedAt: !16308)
!16315 = !DILocation(line: 191, column: 21, scope: !15000, inlinedAt: !16308)
!16316 = !DILocation(line: 190, column: 4, scope: !15000, inlinedAt: !16308)
!16317 = !DILocation(line: 192, column: 4, scope: !15000, inlinedAt: !16308)
!16318 = distinct !{!16318, !16309, !16319}
!16319 = !DILocation(line: 194, column: 2, scope: !14990, inlinedAt: !16308)
!16320 = !DILocation(line: 196, column: 37, scope: !14980, inlinedAt: !16308)
!16321 = !DILocation(line: 196, column: 2, scope: !14980, inlinedAt: !16308)
!16322 = !DILocation(line: 197, column: 1, scope: !14980, inlinedAt: !16308)
!16323 = !DILocation(line: 1403, column: 2, scope: !16281)
!16324 = !DILocation(line: 0, scope: !15391, inlinedAt: !16325)
!16325 = distinct !DILocation(line: 1404, column: 2, scope: !16281)
!16326 = !DILocation(line: 196, column: 9, scope: !15391, inlinedAt: !16325)
!16327 = !DILocation(line: 1405, column: 1, scope: !16281)
!16328 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2504, file: !2504, line: 1459, type: !16329, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16331)
!16329 = !DISubroutineType(types: !16330)
!16330 = !{!357, !15571}
!16331 = !{!16332, !16333, !16334}
!16332 = !DILocalVariable(name: "timeout", arg: 1, scope: !16328, file: !2504, line: 1459, type: !15571)
!16333 = !DILocalVariable(name: "ticks", scope: !16328, file: !2504, line: 1461, type: !1752)
!16334 = !DILocalVariable(name: "ret", scope: !16328, file: !2504, line: 1480, type: !357)
!16335 = !DILocation(line: 0, scope: !16328)
!16336 = !DILocation(line: 1468, column: 6, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16328, file: !2504, line: 1468, column: 6)
!16338 = !DILocation(line: 1468, column: 6, scope: !16328)
!16339 = !DILocation(line: 1469, column: 20, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16337, file: !2504, line: 1468, column: 40)
!16341 = !DILocation(line: 1469, column: 3, scope: !16340)
!16342 = !DILocation(line: 1473, column: 3, scope: !16340)
!16343 = !DILocation(line: 1478, column: 10, scope: !16328)
!16344 = !DILocation(line: 1480, column: 16, scope: !16328)
!16345 = !DILocation(line: 1485, column: 1, scope: !16328)
!16346 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3669, file: !3669, line: 310, type: !16347, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16349)
!16347 = !DISubroutineType(types: !16348)
!16348 = !{null, !16253}
!16349 = !{!16350}
!16350 = !DILocalVariable(name: "thread", arg: 1, scope: !16346, file: !3669, line: 310, type: !16253)
!16351 = !DILocation(line: 0, scope: !16346)
!16352 = !DILocation(line: 319, column: 2, scope: !16353)
!16353 = distinct !DILexicalBlock(scope: !16346, file: !3669, line: 319, column: 2)
!16354 = !{i64 2152259127}
!16355 = !DILocation(line: 320, column: 2, scope: !16346)
!16356 = !DILocation(line: 321, column: 1, scope: !16346)
!16357 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2504, file: !2504, line: 1415, type: !16358, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16360)
!16358 = !DISubroutineType(types: !16359)
!16359 = !{!357, !1752}
!16360 = !{!16361, !16362, !16363, !16364}
!16361 = !DILocalVariable(name: "ticks", arg: 1, scope: !16357, file: !2504, line: 1415, type: !1752)
!16362 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16357, file: !2504, line: 1418, type: !132)
!16363 = !DILocalVariable(name: "timeout", scope: !16357, file: !2504, line: 1430, type: !15571)
!16364 = !DILocalVariable(name: "key", scope: !16357, file: !2504, line: 1437, type: !14772)
!16365 = !DILocation(line: 0, scope: !16357)
!16366 = !DILocation(line: 1425, column: 12, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16357, file: !2504, line: 1425, column: 6)
!16368 = !DILocation(line: 1425, column: 6, scope: !16357)
!16369 = !DILocation(line: 1426, column: 3, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16367, file: !2504, line: 1425, column: 18)
!16371 = !DILocation(line: 1427, column: 3, scope: !16370)
!16372 = !DILocation(line: 1431, column: 24, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16357, file: !2504, line: 1431, column: 6)
!16374 = !DILocation(line: 1431, column: 6, scope: !16357)
!16375 = !DILocation(line: 1432, column: 35, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16373, file: !2504, line: 1431, column: 30)
!16377 = !DILocation(line: 1432, column: 27, scope: !16376)
!16378 = !DILocation(line: 1433, column: 2, scope: !16376)
!16379 = !DILocation(line: 1434, column: 27, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16373, file: !2504, line: 1433, column: 9)
!16381 = !DILocation(line: 0, scope: !16373)
!16382 = !DILocation(line: 0, scope: !14780, inlinedAt: !16383)
!16383 = distinct !DILocation(line: 1437, column: 25, scope: !16357)
!16384 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !16385)
!16385 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !16383)
!16386 = !DILocation(line: 0, scope: !14789, inlinedAt: !16385)
!16387 = !DILocation(line: 1440, column: 20, scope: !16357)
!16388 = !DILocation(line: 1440, column: 18, scope: !16357)
!16389 = !DILocation(line: 1442, column: 2, scope: !16357)
!16390 = !DILocation(line: 1443, column: 23, scope: !16357)
!16391 = !DILocation(line: 1443, column: 2, scope: !16357)
!16392 = !DILocation(line: 1444, column: 29, scope: !16357)
!16393 = !DILocation(line: 1444, column: 2, scope: !16357)
!16394 = !DILocation(line: 0, scope: !15391, inlinedAt: !16395)
!16395 = distinct !DILocation(line: 1446, column: 8, scope: !16357)
!16396 = !DILocation(line: 196, column: 9, scope: !15391, inlinedAt: !16395)
!16397 = !DILocation(line: 1450, column: 10, scope: !16357)
!16398 = !DILocation(line: 1450, column: 45, scope: !16357)
!16399 = !DILocation(line: 1450, column: 43, scope: !16357)
!16400 = !DILocation(line: 1451, column: 6, scope: !16357)
!16401 = !DILocation(line: 1457, column: 1, scope: !16357)
!16402 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !5997, file: !5997, line: 1103, type: !5998, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16403)
!16403 = !{!16404}
!16404 = !DILocalVariable(name: "t", arg: 1, scope: !16402, file: !5997, line: 1103, type: !2355)
!16405 = !DILocation(line: 0, scope: !16402)
!16406 = !DILocation(line: 0, scope: !14827, inlinedAt: !16407)
!16407 = distinct !DILocation(line: 1106, column: 9, scope: !16402)
!16408 = !DILocation(line: 139, column: 13, scope: !16409, inlinedAt: !16407)
!16409 = distinct !DILexicalBlock(scope: !16410, file: !5997, line: 138, column: 10)
!16410 = distinct !DILexicalBlock(scope: !16411, file: !5997, line: 136, column: 7)
!16411 = distinct !DILexicalBlock(scope: !14848, file: !5997, line: 134, column: 17)
!16412 = !DILocation(line: 1106, column: 2, scope: !16402)
!16413 = distinct !DISubprogram(name: "k_yield", scope: !3669, file: !3669, line: 140, type: !3229, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!16414 = !DILocation(line: 148, column: 2, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16413, file: !3669, line: 148, column: 2)
!16416 = !{i64 2152258447}
!16417 = !DILocation(line: 149, column: 2, scope: !16413)
!16418 = !DILocation(line: 150, column: 1, scope: !16413)
!16419 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2504, file: !2504, line: 1495, type: !16420, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16422)
!16420 = !DISubroutineType(types: !16421)
!16421 = !{!357, !103}
!16422 = !{!16423, !16424}
!16423 = !DILocalVariable(name: "us", arg: 1, scope: !16419, file: !2504, line: 1495, type: !103)
!16424 = !DILocalVariable(name: "ticks", scope: !16419, file: !2504, line: 1497, type: !357)
!16425 = !DILocation(line: 0, scope: !16419)
!16426 = !DILocation(line: 1501, column: 31, scope: !16419)
!16427 = !DILocation(line: 1501, column: 10, scope: !16419)
!16428 = !DILocation(line: 1502, column: 23, scope: !16419)
!16429 = !DILocation(line: 1502, column: 10, scope: !16419)
!16430 = !DILocation(line: 1506, column: 31, scope: !16419)
!16431 = !DILocation(line: 1506, column: 9, scope: !16419)
!16432 = !DILocation(line: 1506, column: 2, scope: !16419)
!16433 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !5997, file: !5997, line: 571, type: !5998, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16434)
!16434 = !{!16435}
!16435 = !DILocalVariable(name: "t", arg: 1, scope: !16433, file: !5997, line: 571, type: !2355)
!16436 = !DILocation(line: 0, scope: !16433)
!16437 = !DILocation(line: 0, scope: !14827, inlinedAt: !16438)
!16438 = distinct !DILocation(line: 574, column: 9, scope: !16433)
!16439 = !DILocation(line: 135, column: 5, scope: !16411, inlinedAt: !16438)
!16440 = !DILocation(line: 139, column: 13, scope: !16409, inlinedAt: !16438)
!16441 = !DILocation(line: 574, column: 2, scope: !16433)
!16442 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !5997, file: !5997, line: 1187, type: !5998, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16443)
!16443 = !{!16444}
!16444 = !DILocalVariable(name: "t", arg: 1, scope: !16442, file: !5997, line: 1187, type: !2355)
!16445 = !DILocation(line: 0, scope: !16442)
!16446 = !DILocation(line: 0, scope: !14827, inlinedAt: !16447)
!16447 = distinct !DILocation(line: 1190, column: 9, scope: !16442)
!16448 = !DILocation(line: 145, column: 13, scope: !16449, inlinedAt: !16447)
!16449 = distinct !DILexicalBlock(scope: !14845, file: !5997, line: 144, column: 10)
!16450 = !DILocation(line: 1190, column: 2, scope: !16442)
!16451 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2504, file: !2504, line: 1517, type: !16347, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16452)
!16452 = !{!16453}
!16453 = !DILocalVariable(name: "thread", arg: 1, scope: !16451, file: !2504, line: 1517, type: !16253)
!16454 = !DILocation(line: 0, scope: !16451)
!16455 = !DILocation(line: 1521, column: 6, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16451, file: !2504, line: 1521, column: 6)
!16457 = !DILocation(line: 1521, column: 6, scope: !16451)
!16458 = !DILocation(line: 1525, column: 6, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16451, file: !2504, line: 1525, column: 6)
!16460 = !DILocation(line: 1525, column: 37, scope: !16459)
!16461 = !DILocation(line: 1525, column: 6, scope: !16451)
!16462 = !DILocation(line: 1527, column: 20, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16464, file: !2504, line: 1527, column: 7)
!16464 = distinct !DILexicalBlock(scope: !16459, file: !2504, line: 1525, column: 42)
!16465 = !DILocation(line: 1527, column: 33, scope: !16463)
!16466 = !DILocation(line: 1527, column: 7, scope: !16464)
!16467 = !DILocation(line: 1532, column: 2, scope: !16451)
!16468 = !DILocation(line: 1533, column: 2, scope: !16451)
!16469 = !DILocation(line: 1031, column: 3, scope: !15424, inlinedAt: !16470)
!16470 = distinct !DILocation(line: 48, column: 10, scope: !15428, inlinedAt: !16471)
!16471 = distinct !DILocation(line: 1537, column: 7, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16451, file: !2504, line: 1537, column: 6)
!16473 = !DILocation(line: 0, scope: !15424, inlinedAt: !16470)
!16474 = !DILocation(line: 48, column: 9, scope: !15428, inlinedAt: !16471)
!16475 = !DILocation(line: 1537, column: 6, scope: !16451)
!16476 = !DILocation(line: 1538, column: 3, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16472, file: !2504, line: 1537, column: 25)
!16478 = !DILocation(line: 1539, column: 2, scope: !16477)
!16479 = !DILocation(line: 1540, column: 1, scope: !16451)
!16480 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13788, file: !13788, line: 101, type: !14898, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16481)
!16481 = !{!16482}
!16482 = !DILocalVariable(name: "thread", arg: 1, scope: !16480, file: !13788, line: 101, type: !2399)
!16483 = !DILocation(line: 0, scope: !16480)
!16484 = !DILocation(line: 103, column: 23, scope: !16480)
!16485 = !DILocation(line: 103, column: 36, scope: !16480)
!16486 = !DILocation(line: 103, column: 55, scope: !16480)
!16487 = !DILocation(line: 103, column: 2, scope: !16480)
!16488 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2504, file: !2504, line: 1567, type: !16489, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16491)
!16489 = !DISubroutineType(types: !16490)
!16490 = !{!16253}
!16491 = !{!16492}
!16492 = !DILocalVariable(name: "ret", scope: !16488, file: !2504, line: 1577, type: !16253)
!16493 = !DILocation(line: 1577, column: 30, scope: !16488)
!16494 = !DILocation(line: 0, scope: !16488)
!16495 = !DILocation(line: 1582, column: 2, scope: !16488)
!16496 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2504, file: !2504, line: 1593, type: !6621, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !486)
!16497 = !DILocation(line: 1031, column: 3, scope: !15424, inlinedAt: !16498)
!16498 = distinct !DILocation(line: 48, column: 10, scope: !15428, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 1595, column: 10, scope: !16496)
!16500 = !DILocation(line: 0, scope: !15424, inlinedAt: !16498)
!16501 = !DILocation(line: 48, column: 9, scope: !15428, inlinedAt: !16499)
!16502 = !DILocation(line: 1595, column: 27, scope: !16496)
!16503 = !DILocation(line: 1595, column: 41, scope: !16496)
!16504 = !DILocation(line: 1595, column: 30, scope: !16496)
!16505 = !DILocation(line: 1595, column: 2, scope: !16496)
!16506 = distinct !DISubprogram(name: "z_thread_abort", scope: !2504, file: !2504, line: 1725, type: !14738, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16507)
!16507 = !{!16508, !16509}
!16508 = !DILocalVariable(name: "thread", arg: 1, scope: !16506, file: !2504, line: 1725, type: !2399)
!16509 = !DILocalVariable(name: "key", scope: !16506, file: !2504, line: 1727, type: !14772)
!16510 = !DILocation(line: 0, scope: !16506)
!16511 = !DILocation(line: 0, scope: !14780, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 1727, column: 25, scope: !16506)
!16513 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !16512)
!16515 = !DILocation(line: 0, scope: !14789, inlinedAt: !16514)
!16516 = !DILocation(line: 1729, column: 20, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16506, file: !2504, line: 1729, column: 6)
!16518 = !DILocation(line: 1729, column: 33, scope: !16517)
!16519 = !DILocation(line: 1729, column: 48, scope: !16517)
!16520 = !DILocation(line: 1729, column: 6, scope: !16506)
!16521 = !DILocation(line: 0, scope: !14807, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 1730, column: 3, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16517, file: !2504, line: 1729, column: 54)
!16524 = !DILocation(line: 0, scope: !14815, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !16522)
!16526 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !16525)
!16527 = !DILocation(line: 1732, column: 3, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16523, file: !2504, line: 1732, column: 3)
!16529 = !{i64 2152995857, i64 2152995873, i64 2152995899, i64 2152995927, i64 2152995947}
!16530 = !DILocation(line: 1733, column: 3, scope: !16523)
!16531 = !DILocation(line: 1736, column: 20, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16506, file: !2504, line: 1736, column: 6)
!16533 = !DILocation(line: 1736, column: 33, scope: !16532)
!16534 = !DILocation(line: 1736, column: 49, scope: !16532)
!16535 = !DILocation(line: 1736, column: 6, scope: !16506)
!16536 = !DILocation(line: 0, scope: !14807, inlinedAt: !16537)
!16537 = distinct !DILocation(line: 1737, column: 3, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16532, file: !2504, line: 1736, column: 56)
!16539 = !DILocation(line: 0, scope: !14815, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !16537)
!16541 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !16540)
!16542 = !DILocation(line: 1738, column: 3, scope: !16538)
!16543 = !DILocation(line: 1775, column: 2, scope: !16506)
!16544 = !DILocation(line: 1776, column: 16, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16506, file: !2504, line: 1776, column: 6)
!16546 = !DILocation(line: 1776, column: 13, scope: !16545)
!16547 = !DILocation(line: 1776, column: 25, scope: !16545)
!16548 = !DILocation(line: 1031, column: 3, scope: !15424, inlinedAt: !16549)
!16549 = distinct !DILocation(line: 48, column: 10, scope: !15428, inlinedAt: !16550)
!16550 = distinct !DILocation(line: 1776, column: 29, scope: !16545)
!16551 = !DILocation(line: 0, scope: !15424, inlinedAt: !16549)
!16552 = !DILocation(line: 48, column: 9, scope: !15428, inlinedAt: !16550)
!16553 = !DILocation(line: 1776, column: 6, scope: !16506)
!16554 = !DILocation(line: 0, scope: !15391, inlinedAt: !16555)
!16555 = distinct !DILocation(line: 1777, column: 3, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16545, file: !2504, line: 1776, column: 47)
!16557 = !DILocation(line: 196, column: 9, scope: !15391, inlinedAt: !16555)
!16558 = !DILocation(line: 1779, column: 2, scope: !16556)
!16559 = !DILocation(line: 0, scope: !14807, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 1780, column: 2, scope: !16506)
!16561 = !DILocation(line: 0, scope: !14815, inlinedAt: !16562)
!16562 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !16560)
!16563 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !16562)
!16564 = !DILocation(line: 1781, column: 1, scope: !16506)
!16565 = distinct !DISubprogram(name: "end_thread", scope: !2504, file: !2504, line: 1690, type: !14738, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16566)
!16566 = !{!16567}
!16567 = !DILocalVariable(name: "thread", arg: 1, scope: !16565, file: !2504, line: 1690, type: !2399)
!16568 = !DILocation(line: 0, scope: !16565)
!16569 = !DILocation(line: 1695, column: 20, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16565, file: !2504, line: 1695, column: 6)
!16571 = !DILocation(line: 1695, column: 33, scope: !16570)
!16572 = !DILocation(line: 1695, column: 49, scope: !16570)
!16573 = !DILocation(line: 1695, column: 6, scope: !16565)
!16574 = !DILocation(line: 1697, column: 29, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16570, file: !2504, line: 1695, column: 56)
!16576 = !DILocation(line: 1698, column: 7, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16575, file: !2504, line: 1698, column: 7)
!16578 = !DILocation(line: 1698, column: 7, scope: !16575)
!16579 = !DILocation(line: 0, scope: !14949, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 1699, column: 4, scope: !16581)
!16581 = distinct !DILexicalBlock(scope: !16577, file: !2504, line: 1698, column: 35)
!16582 = !DILocation(line: 266, column: 28, scope: !14949, inlinedAt: !16580)
!16583 = !DILocation(line: 0, scope: !14957, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 268, column: 3, scope: !14961, inlinedAt: !16580)
!16585 = !DILocation(line: 234, column: 2, scope: !14957, inlinedAt: !16584)
!16586 = !DILocation(line: 1700, column: 3, scope: !16581)
!16587 = !DILocation(line: 1701, column: 20, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16575, file: !2504, line: 1701, column: 7)
!16589 = !DILocation(line: 1701, column: 30, scope: !16588)
!16590 = !DILocation(line: 1701, column: 7, scope: !16575)
!16591 = !DILocation(line: 1702, column: 4, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16588, file: !2504, line: 1701, column: 39)
!16593 = !DILocation(line: 1703, column: 3, scope: !16592)
!16594 = !DILocation(line: 1704, column: 9, scope: !16575)
!16595 = !DILocation(line: 1705, column: 23, scope: !16575)
!16596 = !DILocation(line: 1705, column: 3, scope: !16575)
!16597 = !DILocation(line: 1706, column: 3, scope: !16575)
!16598 = !DILocation(line: 1722, column: 2, scope: !16575)
!16599 = !DILocation(line: 1723, column: 1, scope: !16565)
!16600 = distinct !DISubprogram(name: "unpend_all", scope: !2504, file: !2504, line: 1674, type: !16601, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16603)
!16601 = !DISubroutineType(types: !16602)
!16602 = !{null, !2430}
!16603 = !{!16604, !16605}
!16604 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16600, file: !2504, line: 1674, type: !2430)
!16605 = !DILocalVariable(name: "thread", scope: !16600, file: !2504, line: 1676, type: !2399)
!16606 = !DILocation(line: 0, scope: !16600)
!16607 = !DILocation(line: 1678, column: 19, scope: !16600)
!16608 = !DILocation(line: 1678, column: 41, scope: !16600)
!16609 = !DILocation(line: 1678, column: 2, scope: !16600)
!16610 = !DILocation(line: 1679, column: 3, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16600, file: !2504, line: 1678, column: 50)
!16612 = !DILocation(line: 1680, column: 9, scope: !16611)
!16613 = !DILocalVariable(name: "thread", arg: 1, scope: !16614, file: !13808, line: 65, type: !2399)
!16614 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13808, file: !13808, line: 65, type: !16615, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16617)
!16615 = !DISubroutineType(types: !16616)
!16616 = !{null, !2399, !32}
!16617 = !{!16613, !16618}
!16618 = !DILocalVariable(name: "value", arg: 2, scope: !16614, file: !13808, line: 65, type: !32)
!16619 = !DILocation(line: 0, scope: !16614, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 1681, column: 3, scope: !16611)
!16621 = !DILocation(line: 67, column: 15, scope: !16614, inlinedAt: !16620)
!16622 = !DILocation(line: 67, column: 33, scope: !16614, inlinedAt: !16620)
!16623 = !DILocation(line: 1682, column: 3, scope: !16611)
!16624 = distinct !{!16624, !16609, !16625}
!16625 = !DILocation(line: 1683, column: 2, scope: !16600)
!16626 = !DILocation(line: 1684, column: 1, scope: !16600)
!16627 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2504, file: !2504, line: 1794, type: !16628, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16630)
!16628 = !DISubroutineType(types: !16629)
!16629 = !{!103, !2399, !15571}
!16630 = !{!16631, !16632, !16633, !16634}
!16631 = !DILocalVariable(name: "thread", arg: 1, scope: !16627, file: !2504, line: 1794, type: !2399)
!16632 = !DILocalVariable(name: "timeout", arg: 2, scope: !16627, file: !2504, line: 1794, type: !15571)
!16633 = !DILocalVariable(name: "key", scope: !16627, file: !2504, line: 1796, type: !14772)
!16634 = !DILocalVariable(name: "ret", scope: !16627, file: !2504, line: 1797, type: !103)
!16635 = !DILocation(line: 0, scope: !16627)
!16636 = !DILocation(line: 0, scope: !14780, inlinedAt: !16637)
!16637 = distinct !DILocation(line: 1796, column: 25, scope: !16627)
!16638 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !16637)
!16640 = !DILocation(line: 0, scope: !14789, inlinedAt: !16639)
!16641 = !DILocation(line: 1801, column: 20, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16627, file: !2504, line: 1801, column: 6)
!16643 = !DILocation(line: 1801, column: 33, scope: !16642)
!16644 = !DILocation(line: 1801, column: 49, scope: !16642)
!16645 = !DILocation(line: 1801, column: 6, scope: !16627)
!16646 = !DILocation(line: 1803, column: 13, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16642, file: !2504, line: 1803, column: 13)
!16648 = !DILocation(line: 1803, column: 13, scope: !16642)
!16649 = !DILocation(line: 1805, column: 24, scope: !16650)
!16650 = distinct !DILexicalBlock(scope: !16647, file: !2504, line: 1805, column: 13)
!16651 = !DILocation(line: 1805, column: 21, scope: !16650)
!16652 = !DILocation(line: 1805, column: 34, scope: !16650)
!16653 = !DILocation(line: 1806, column: 20, scope: !16650)
!16654 = !DILocation(line: 1806, column: 44, scope: !16650)
!16655 = !DILocation(line: 1806, column: 30, scope: !16650)
!16656 = !DILocation(line: 1805, column: 13, scope: !16647)
!16657 = !DILocation(line: 1810, column: 42, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16650, file: !2504, line: 1808, column: 9)
!16659 = !DILocation(line: 1810, column: 3, scope: !16658)
!16660 = !DILocation(line: 1811, column: 22, scope: !16658)
!16661 = !DILocation(line: 1811, column: 3, scope: !16658)
!16662 = !DILocation(line: 0, scope: !15391, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 1814, column: 9, scope: !16658)
!16664 = !DILocation(line: 196, column: 9, scope: !15391, inlinedAt: !16663)
!16665 = !DILocation(line: 1817, column: 3, scope: !16658)
!16666 = !DILocation(line: 0, scope: !16642)
!16667 = !DILocation(line: 0, scope: !14807, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 1822, column: 2, scope: !16627)
!16669 = !DILocation(line: 0, scope: !14815, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !16668)
!16671 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !16670)
!16672 = !DILocation(line: 1823, column: 2, scope: !16627)
!16673 = !DILocation(line: 1824, column: 1, scope: !16627)
!16674 = distinct !DISubprogram(name: "z_sched_wake", scope: !2504, file: !2504, line: 1882, type: !16675, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16677)
!16675 = !DISubroutineType(types: !16676)
!16676 = !{!179, !2430, !103, !102}
!16677 = !{!16678, !16679, !16680, !16681, !16682, !16683, !16685}
!16678 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16674, file: !2504, line: 1882, type: !2430)
!16679 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16674, file: !2504, line: 1882, type: !103)
!16680 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16674, file: !2504, line: 1882, type: !102)
!16681 = !DILocalVariable(name: "thread", scope: !16674, file: !2504, line: 1884, type: !2399)
!16682 = !DILocalVariable(name: "ret", scope: !16674, file: !2504, line: 1885, type: !179)
!16683 = !DILocalVariable(name: "__i", scope: !16684, file: !2504, line: 1887, type: !14772)
!16684 = distinct !DILexicalBlock(scope: !16674, file: !2504, line: 1887, column: 2)
!16685 = !DILocalVariable(name: "__key", scope: !16684, file: !2504, line: 1887, type: !14772)
!16686 = !DILocation(line: 0, scope: !16674)
!16687 = !DILocation(line: 0, scope: !16684)
!16688 = !DILocation(line: 0, scope: !14780, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 1887, column: 2, scope: !16684)
!16690 = !DILocation(line: 55, column: 2, scope: !14789, inlinedAt: !16691)
!16691 = distinct !DILocation(line: 145, column: 10, scope: !14780, inlinedAt: !16689)
!16692 = !DILocation(line: 0, scope: !14789, inlinedAt: !16691)
!16693 = !DILocation(line: 1888, column: 12, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16695, file: !2504, line: 1887, column: 26)
!16695 = distinct !DILexicalBlock(scope: !16684, file: !2504, line: 1887, column: 2)
!16696 = !DILocation(line: 1890, column: 14, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16694, file: !2504, line: 1890, column: 7)
!16698 = !DILocation(line: 1890, column: 7, scope: !16694)
!16699 = !DILocalVariable(name: "thread", arg: 1, scope: !16700, file: !16701, line: 134, type: !2399)
!16700 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16701, file: !16701, line: 134, type: !16702, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16704)
!16701 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16702 = !DISubroutineType(types: !16703)
!16703 = !{null, !2399, !32, !102}
!16704 = !{!16699, !16705, !16706}
!16705 = !DILocalVariable(name: "value", arg: 2, scope: !16700, file: !16701, line: 135, type: !32)
!16706 = !DILocalVariable(name: "data", arg: 3, scope: !16700, file: !16701, line: 136, type: !102)
!16707 = !DILocation(line: 0, scope: !16700, inlinedAt: !16708)
!16708 = distinct !DILocation(line: 1891, column: 4, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16697, file: !2504, line: 1890, column: 23)
!16710 = !DILocation(line: 0, scope: !16614, inlinedAt: !16711)
!16711 = distinct !DILocation(line: 138, column: 2, scope: !16700, inlinedAt: !16708)
!16712 = !DILocation(line: 67, column: 15, scope: !16614, inlinedAt: !16711)
!16713 = !DILocation(line: 67, column: 33, scope: !16614, inlinedAt: !16711)
!16714 = !DILocation(line: 139, column: 15, scope: !16700, inlinedAt: !16708)
!16715 = !DILocation(line: 139, column: 25, scope: !16700, inlinedAt: !16708)
!16716 = !DILocation(line: 1894, column: 4, scope: !16709)
!16717 = !DILocation(line: 1895, column: 10, scope: !16709)
!16718 = !DILocation(line: 1896, column: 4, scope: !16709)
!16719 = !DILocation(line: 1898, column: 3, scope: !16709)
!16720 = !DILocation(line: 0, scope: !14807, inlinedAt: !16721)
!16721 = distinct !DILocation(line: 1887, column: 2, scope: !16695)
!16722 = !DILocation(line: 0, scope: !14815, inlinedAt: !16723)
!16723 = distinct !DILocation(line: 215, column: 2, scope: !14807, inlinedAt: !16721)
!16724 = !DILocation(line: 95, column: 2, scope: !14815, inlinedAt: !16723)
!16725 = !DILocation(line: 1901, column: 2, scope: !16674)
!16726 = distinct !DISubprogram(name: "z_sched_wait", scope: !2504, file: !2504, line: 1904, type: !16727, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !16730)
!16727 = !DISubroutineType(types: !16728)
!16728 = !{!103, !14783, !14772, !2430, !15571, !16729}
!16729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16730 = !{!16731, !16732, !16733, !16734, !16735, !16736}
!16731 = !DILocalVariable(name: "lock", arg: 1, scope: !16726, file: !2504, line: 1904, type: !14783)
!16732 = !DILocalVariable(name: "key", arg: 2, scope: !16726, file: !2504, line: 1904, type: !14772)
!16733 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16726, file: !2504, line: 1905, type: !2430)
!16734 = !DILocalVariable(name: "timeout", arg: 4, scope: !16726, file: !2504, line: 1905, type: !15571)
!16735 = !DILocalVariable(name: "data", arg: 5, scope: !16726, file: !2504, line: 1905, type: !16729)
!16736 = !DILocalVariable(name: "ret", scope: !16726, file: !2504, line: 1907, type: !103)
!16737 = !DILocation(line: 0, scope: !16726)
!16738 = !DILocation(line: 1907, column: 12, scope: !16726)
!16739 = !DILocation(line: 1909, column: 11, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16726, file: !2504, line: 1909, column: 6)
!16741 = !DILocation(line: 1909, column: 6, scope: !16726)
!16742 = !DILocation(line: 1910, column: 11, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16740, file: !2504, line: 1909, column: 20)
!16744 = !DILocation(line: 1910, column: 26, scope: !16743)
!16745 = !DILocation(line: 1910, column: 9, scope: !16743)
!16746 = !DILocation(line: 1911, column: 2, scope: !16743)
!16747 = !DILocation(line: 1912, column: 2, scope: !16726)
!16748 = distinct !DISubprogram(name: "z_data_copy", scope: !16749, file: !16749, line: 22, type: !3229, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !486)
!16749 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16750 = !DILocation(line: 24, column: 2, scope: !16748)
!16751 = !DILocation(line: 27, column: 2, scope: !16748)
!16752 = !DILocation(line: 71, column: 1, scope: !16748)
!16753 = distinct !DISubprogram(name: "z_add_timeout", scope: !2541, file: !2541, line: 88, type: !16754, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16760)
!16754 = !DISubroutineType(types: !16755)
!16755 = !{null, !2514, !2533, !16756}
!16756 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1753, line: 67, baseType: !16757)
!16757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1753, line: 65, size: 64, elements: !16758)
!16758 = !{!16759}
!16759 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16757, file: !1753, line: 66, baseType: !1752, size: 64)
!16760 = !{!16761, !16762, !16763, !16764, !16770, !16771, !16774, !16777}
!16761 = !DILocalVariable(name: "to", arg: 1, scope: !16753, file: !2541, line: 88, type: !2514)
!16762 = !DILocalVariable(name: "fn", arg: 2, scope: !16753, file: !2541, line: 88, type: !2533)
!16763 = !DILocalVariable(name: "timeout", arg: 3, scope: !16753, file: !2541, line: 89, type: !16756)
!16764 = !DILocalVariable(name: "__i", scope: !16765, file: !2541, line: 102, type: !16766)
!16765 = distinct !DILexicalBlock(scope: !16753, file: !2541, line: 102, column: 2)
!16766 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !485, line: 106, baseType: !16767)
!16767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !485, line: 32, size: 32, elements: !16768)
!16768 = !{!16769}
!16769 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16767, file: !485, line: 33, baseType: !103, size: 32)
!16770 = !DILocalVariable(name: "__key", scope: !16765, file: !2541, line: 102, type: !16766)
!16771 = !DILocalVariable(name: "t", scope: !16772, file: !2541, line: 103, type: !2514)
!16772 = distinct !DILexicalBlock(scope: !16773, file: !2541, line: 102, column: 24)
!16773 = distinct !DILexicalBlock(scope: !16765, file: !2541, line: 102, column: 2)
!16774 = !DILocalVariable(name: "ticks", scope: !16775, file: !2541, line: 107, type: !1752)
!16775 = distinct !DILexicalBlock(scope: !16776, file: !2541, line: 106, column: 39)
!16776 = distinct !DILexicalBlock(scope: !16772, file: !2541, line: 105, column: 7)
!16777 = !DILocalVariable(name: "next_time", scope: !16778, file: !2541, line: 137, type: !357)
!16778 = distinct !DILexicalBlock(scope: !16779, file: !2541, line: 127, column: 22)
!16779 = distinct !DILexicalBlock(scope: !16772, file: !2541, line: 127, column: 7)
!16780 = !DILocation(line: 0, scope: !16753)
!16781 = !DILocation(line: 91, column: 6, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16753, file: !2541, line: 91, column: 6)
!16783 = !DILocation(line: 91, column: 6, scope: !16753)
!16784 = !DILocation(line: 100, column: 6, scope: !16753)
!16785 = !DILocation(line: 100, column: 9, scope: !16753)
!16786 = !DILocation(line: 0, scope: !16765)
!16787 = !DILocalVariable(name: "l", arg: 1, scope: !16788, file: !485, line: 136, type: !16791)
!16788 = distinct !DISubprogram(name: "k_spin_lock", scope: !485, file: !485, line: 136, type: !16789, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16792)
!16789 = !DISubroutineType(types: !16790)
!16790 = !{!16766, !16791}
!16791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 32)
!16792 = !{!16787, !16793}
!16793 = !DILocalVariable(name: "k", scope: !16788, file: !485, line: 139, type: !16766)
!16794 = !DILocation(line: 0, scope: !16788, inlinedAt: !16795)
!16795 = distinct !DILocation(line: 102, column: 2, scope: !16765)
!16796 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !16801)
!16797 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16798)
!16798 = !{!16799, !16800}
!16799 = !DILocalVariable(name: "key", scope: !16797, file: !5780, line: 44, type: !32)
!16800 = !DILocalVariable(name: "tmp", scope: !16797, file: !5780, line: 53, type: !32)
!16801 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !16795)
!16802 = !{i64 1654535}
!16803 = !DILocation(line: 0, scope: !16797, inlinedAt: !16801)
!16804 = !DILocation(line: 106, column: 33, scope: !16776)
!16805 = !DILocation(line: 105, column: 7, scope: !16772)
!16806 = !DILocation(line: 107, column: 50, scope: !16775)
!16807 = !DILocation(line: 107, column: 48, scope: !16775)
!16808 = !DILocation(line: 0, scope: !16775)
!16809 = !DILocation(line: 109, column: 17, scope: !16775)
!16810 = !DILocation(line: 110, column: 3, scope: !16775)
!16811 = !DILocation(line: 111, column: 31, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16776, file: !2541, line: 110, column: 10)
!16813 = !DILocation(line: 111, column: 37, scope: !16812)
!16814 = !DILocation(line: 111, column: 35, scope: !16812)
!16815 = !DILocation(line: 0, scope: !16776)
!16816 = !DILocation(line: 109, column: 8, scope: !16775)
!16817 = !DILocation(line: 109, column: 15, scope: !16775)
!16818 = !DILocation(line: 114, column: 12, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16772, file: !2541, line: 114, column: 3)
!16820 = !DILocation(line: 0, scope: !16772)
!16821 = !DILocation(line: 114, column: 3, scope: !16819)
!16822 = !DILocation(line: 115, column: 24, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16824, file: !2541, line: 115, column: 8)
!16824 = distinct !DILexicalBlock(scope: !16825, file: !2541, line: 114, column: 45)
!16825 = distinct !DILexicalBlock(scope: !16819, file: !2541, line: 114, column: 3)
!16826 = !DILocation(line: 115, column: 11, scope: !16823)
!16827 = !DILocation(line: 115, column: 18, scope: !16823)
!16828 = !DILocation(line: 115, column: 8, scope: !16824)
!16829 = !DILocation(line: 116, column: 15, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16823, file: !2541, line: 115, column: 32)
!16831 = !DILocation(line: 117, column: 26, scope: !16830)
!16832 = !DILocation(line: 117, column: 37, scope: !16830)
!16833 = !DILocation(line: 117, column: 5, scope: !16830)
!16834 = !DILocation(line: 123, column: 7, scope: !16772)
!16835 = !DILocation(line: 120, column: 15, scope: !16824)
!16836 = !DILocation(line: 114, column: 36, scope: !16825)
!16837 = distinct !{!16837, !16821, !16838}
!16838 = !DILocation(line: 121, column: 3, scope: !16819)
!16839 = !DILocation(line: 124, column: 41, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16841, file: !2541, line: 123, column: 18)
!16841 = distinct !DILexicalBlock(scope: !16772, file: !2541, line: 123, column: 7)
!16842 = !DILocation(line: 124, column: 4, scope: !16840)
!16843 = !DILocation(line: 125, column: 3, scope: !16840)
!16844 = !DILocation(line: 127, column: 13, scope: !16779)
!16845 = !DILocation(line: 127, column: 10, scope: !16779)
!16846 = !DILocation(line: 127, column: 7, scope: !16772)
!16847 = !DILocation(line: 137, column: 24, scope: !16778)
!16848 = !DILocation(line: 0, scope: !16778)
!16849 = !DILocation(line: 139, column: 18, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16778, file: !2541, line: 139, column: 8)
!16851 = !DILocation(line: 139, column: 23, scope: !16850)
!16852 = !DILocation(line: 141, column: 5, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16850, file: !2541, line: 140, column: 48)
!16854 = !DILocation(line: 142, column: 4, scope: !16853)
!16855 = !DILocalVariable(name: "key", arg: 2, scope: !16856, file: !485, line: 190, type: !16766)
!16856 = distinct !DISubprogram(name: "k_spin_unlock", scope: !485, file: !485, line: 189, type: !16857, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16859)
!16857 = !DISubroutineType(types: !16858)
!16858 = !{null, !16791, !16766}
!16859 = !{!16860, !16855}
!16860 = !DILocalVariable(name: "l", arg: 1, scope: !16856, file: !485, line: 189, type: !16791)
!16861 = !DILocation(line: 0, scope: !16856, inlinedAt: !16862)
!16862 = distinct !DILocation(line: 102, column: 2, scope: !16773)
!16863 = !DILocalVariable(name: "key", arg: 1, scope: !16864, file: !5780, line: 84, type: !32)
!16864 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16865)
!16865 = !{!16863}
!16866 = !DILocation(line: 0, scope: !16864, inlinedAt: !16867)
!16867 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !16862)
!16868 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !16867)
!16869 = !{i64 1655352}
!16870 = !DILocation(line: 148, column: 1, scope: !16753)
!16871 = distinct !DISubprogram(name: "elapsed", scope: !2541, file: !2541, line: 62, type: !16872, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !486)
!16872 = !DISubroutineType(types: !16873)
!16873 = !{!357}
!16874 = !DILocation(line: 64, column: 9, scope: !16871)
!16875 = !DILocation(line: 64, column: 28, scope: !16871)
!16876 = !DILocation(line: 64, column: 35, scope: !16871)
!16877 = !DILocation(line: 64, column: 2, scope: !16871)
!16878 = distinct !DISubprogram(name: "first", scope: !2541, file: !2541, line: 39, type: !16879, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16881)
!16879 = !DISubroutineType(types: !16880)
!16880 = !{!2514}
!16881 = !{!16882}
!16882 = !DILocalVariable(name: "t", scope: !16878, file: !2541, line: 41, type: !16883)
!16883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!16884 = !DILocation(line: 41, column: 19, scope: !16878)
!16885 = !DILocation(line: 0, scope: !16878)
!16886 = !DILocation(line: 43, column: 9, scope: !16878)
!16887 = !DILocation(line: 43, column: 2, scope: !16878)
!16888 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !334, file: !334, line: 443, type: !16889, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16891)
!16889 = !DISubroutineType(types: !16890)
!16890 = !{null, !16883, !16883}
!16891 = !{!16892, !16893, !16894}
!16892 = !DILocalVariable(name: "successor", arg: 1, scope: !16888, file: !334, line: 443, type: !16883)
!16893 = !DILocalVariable(name: "node", arg: 2, scope: !16888, file: !334, line: 443, type: !16883)
!16894 = !DILocalVariable(name: "prev", scope: !16888, file: !334, line: 445, type: !16895)
!16895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16883)
!16896 = !DILocation(line: 0, scope: !16888)
!16897 = !DILocation(line: 445, column: 39, scope: !16888)
!16898 = !DILocation(line: 447, column: 8, scope: !16888)
!16899 = !DILocation(line: 447, column: 13, scope: !16888)
!16900 = !DILocation(line: 448, column: 8, scope: !16888)
!16901 = !DILocation(line: 448, column: 13, scope: !16888)
!16902 = !DILocation(line: 449, column: 8, scope: !16888)
!16903 = !DILocation(line: 449, column: 13, scope: !16888)
!16904 = !DILocation(line: 450, column: 18, scope: !16888)
!16905 = !DILocation(line: 451, column: 1, scope: !16888)
!16906 = distinct !DISubprogram(name: "next", scope: !2541, file: !2541, line: 46, type: !16907, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16909)
!16907 = !DISubroutineType(types: !16908)
!16908 = !{!2514, !2514}
!16909 = !{!16910, !16911}
!16910 = !DILocalVariable(name: "t", arg: 1, scope: !16906, file: !2541, line: 46, type: !2514)
!16911 = !DILocalVariable(name: "n", scope: !16906, file: !2541, line: 48, type: !16883)
!16912 = !DILocation(line: 0, scope: !16906)
!16913 = !DILocation(line: 48, column: 58, scope: !16906)
!16914 = !DILocation(line: 48, column: 19, scope: !16906)
!16915 = !DILocation(line: 50, column: 9, scope: !16906)
!16916 = !DILocation(line: 50, column: 2, scope: !16906)
!16917 = distinct !DISubprogram(name: "sys_dlist_append", scope: !334, file: !334, line: 404, type: !16918, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16921)
!16918 = !DISubroutineType(types: !16919)
!16919 = !{null, !16920, !16883}
!16920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!16921 = !{!16922, !16923, !16924}
!16922 = !DILocalVariable(name: "list", arg: 1, scope: !16917, file: !334, line: 404, type: !16920)
!16923 = !DILocalVariable(name: "node", arg: 2, scope: !16917, file: !334, line: 404, type: !16883)
!16924 = !DILocalVariable(name: "tail", scope: !16917, file: !334, line: 406, type: !16895)
!16925 = !DILocation(line: 0, scope: !16917)
!16926 = !DILocation(line: 406, column: 34, scope: !16917)
!16927 = !DILocation(line: 408, column: 8, scope: !16917)
!16928 = !DILocation(line: 408, column: 13, scope: !16917)
!16929 = !DILocation(line: 409, column: 8, scope: !16917)
!16930 = !DILocation(line: 409, column: 13, scope: !16917)
!16931 = !DILocation(line: 411, column: 8, scope: !16917)
!16932 = !DILocation(line: 411, column: 13, scope: !16917)
!16933 = !DILocation(line: 412, column: 13, scope: !16917)
!16934 = !DILocation(line: 413, column: 1, scope: !16917)
!16935 = distinct !DISubprogram(name: "next_timeout", scope: !2541, file: !2541, line: 67, type: !16872, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16936)
!16936 = !{!16937, !16938, !16939}
!16937 = !DILocalVariable(name: "to", scope: !16935, file: !2541, line: 69, type: !2514)
!16938 = !DILocalVariable(name: "ticks_elapsed", scope: !16935, file: !2541, line: 70, type: !357)
!16939 = !DILocalVariable(name: "ret", scope: !16935, file: !2541, line: 71, type: !357)
!16940 = !DILocation(line: 69, column: 24, scope: !16935)
!16941 = !DILocation(line: 0, scope: !16935)
!16942 = !DILocation(line: 70, column: 26, scope: !16935)
!16943 = !DILocation(line: 73, column: 10, scope: !16944)
!16944 = distinct !DILexicalBlock(scope: !16935, file: !2541, line: 73, column: 6)
!16945 = !DILocation(line: 73, column: 19, scope: !16944)
!16946 = !DILocation(line: 74, column: 21, scope: !16944)
!16947 = !DILocation(line: 74, column: 30, scope: !16944)
!16948 = !DILocation(line: 74, column: 28, scope: !16944)
!16949 = !DILocation(line: 74, column: 45, scope: !16944)
!16950 = !DILocation(line: 73, column: 6, scope: !16935)
!16951 = !DILocation(line: 77, column: 9, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16944, file: !2541, line: 76, column: 9)
!16953 = !DILocation(line: 0, scope: !16944)
!16954 = !DILocation(line: 81, column: 20, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16935, file: !2541, line: 81, column: 6)
!16956 = !DILocation(line: 81, column: 6, scope: !16955)
!16957 = !DILocation(line: 81, column: 32, scope: !16955)
!16958 = !DILocation(line: 85, column: 2, scope: !16935)
!16959 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !334, file: !334, line: 341, type: !16960, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16962)
!16960 = !DISubroutineType(types: !16961)
!16961 = !{!16883, !16920, !16883}
!16962 = !{!16963, !16964}
!16963 = !DILocalVariable(name: "list", arg: 1, scope: !16959, file: !334, line: 341, type: !16920)
!16964 = !DILocalVariable(name: "node", arg: 2, scope: !16959, file: !334, line: 342, type: !16883)
!16965 = !DILocation(line: 0, scope: !16959)
!16966 = !DILocation(line: 344, column: 15, scope: !16959)
!16967 = !DILocation(line: 344, column: 9, scope: !16959)
!16968 = !DILocation(line: 344, column: 26, scope: !16959)
!16969 = !DILocation(line: 344, column: 2, scope: !16959)
!16970 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !334, file: !334, line: 325, type: !16960, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16971)
!16971 = !{!16972, !16973}
!16972 = !DILocalVariable(name: "list", arg: 1, scope: !16970, file: !334, line: 325, type: !16920)
!16973 = !DILocalVariable(name: "node", arg: 2, scope: !16970, file: !334, line: 326, type: !16883)
!16974 = !DILocation(line: 0, scope: !16970)
!16975 = !DILocation(line: 328, column: 24, scope: !16970)
!16976 = !DILocation(line: 328, column: 15, scope: !16970)
!16977 = !DILocation(line: 328, column: 9, scope: !16970)
!16978 = !DILocation(line: 328, column: 45, scope: !16970)
!16979 = !DILocation(line: 328, column: 2, scope: !16970)
!16980 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !334, file: !334, line: 294, type: !16981, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16983)
!16981 = !DISubroutineType(types: !16982)
!16982 = !{!16883, !16920}
!16983 = !{!16984}
!16984 = !DILocalVariable(name: "list", arg: 1, scope: !16980, file: !334, line: 294, type: !16920)
!16985 = !DILocation(line: 0, scope: !16980)
!16986 = !DILocation(line: 296, column: 9, scope: !16980)
!16987 = !DILocation(line: 296, column: 2, scope: !16980)
!16988 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !334, file: !334, line: 266, type: !16989, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !16991)
!16989 = !DISubroutineType(types: !16990)
!16990 = !{!179, !16920}
!16991 = !{!16992}
!16992 = !DILocalVariable(name: "list", arg: 1, scope: !16988, file: !334, line: 266, type: !16920)
!16993 = !DILocation(line: 0, scope: !16988)
!16994 = !DILocation(line: 268, column: 15, scope: !16988)
!16995 = !DILocation(line: 268, column: 20, scope: !16988)
!16996 = !DILocation(line: 268, column: 2, scope: !16988)
!16997 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2541, file: !2541, line: 150, type: !16998, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17000)
!16998 = !DISubroutineType(types: !16999)
!16999 = !{!103, !2514}
!17000 = !{!17001, !17002, !17003, !17005}
!17001 = !DILocalVariable(name: "to", arg: 1, scope: !16997, file: !2541, line: 150, type: !2514)
!17002 = !DILocalVariable(name: "ret", scope: !16997, file: !2541, line: 152, type: !103)
!17003 = !DILocalVariable(name: "__i", scope: !17004, file: !2541, line: 154, type: !16766)
!17004 = distinct !DILexicalBlock(scope: !16997, file: !2541, line: 154, column: 2)
!17005 = !DILocalVariable(name: "__key", scope: !17004, file: !2541, line: 154, type: !16766)
!17006 = !DILocation(line: 0, scope: !16997)
!17007 = !DILocation(line: 0, scope: !17004)
!17008 = !DILocation(line: 0, scope: !16788, inlinedAt: !17009)
!17009 = distinct !DILocation(line: 154, column: 2, scope: !17004)
!17010 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !17011)
!17011 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !17009)
!17012 = !DILocation(line: 0, scope: !16797, inlinedAt: !17011)
!17013 = !DILocation(line: 155, column: 7, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !17015, file: !2541, line: 155, column: 7)
!17015 = distinct !DILexicalBlock(scope: !17016, file: !2541, line: 154, column: 24)
!17016 = distinct !DILexicalBlock(scope: !17004, file: !2541, line: 154, column: 2)
!17017 = !DILocation(line: 155, column: 7, scope: !17015)
!17018 = !DILocation(line: 156, column: 4, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17014, file: !2541, line: 155, column: 39)
!17020 = !DILocation(line: 158, column: 3, scope: !17019)
!17021 = !DILocation(line: 0, scope: !16856, inlinedAt: !17022)
!17022 = distinct !DILocation(line: 154, column: 2, scope: !17016)
!17023 = !DILocation(line: 0, scope: !16864, inlinedAt: !17024)
!17024 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !17022)
!17025 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !17024)
!17026 = !DILocation(line: 161, column: 2, scope: !16997)
!17027 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !334, file: !334, line: 225, type: !17028, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17032)
!17028 = !DISubroutineType(types: !17029)
!17029 = !{!179, !17030}
!17030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17031, size: 32)
!17031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2518)
!17032 = !{!17033}
!17033 = !DILocalVariable(name: "node", arg: 1, scope: !17027, file: !334, line: 225, type: !17030)
!17034 = !DILocation(line: 0, scope: !17027)
!17035 = !DILocation(line: 227, column: 15, scope: !17027)
!17036 = !DILocation(line: 227, column: 20, scope: !17027)
!17037 = !DILocation(line: 227, column: 2, scope: !17027)
!17038 = distinct !DISubprogram(name: "remove_timeout", scope: !2541, file: !2541, line: 53, type: !2535, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17039)
!17039 = !{!17040}
!17040 = !DILocalVariable(name: "t", arg: 1, scope: !17038, file: !2541, line: 53, type: !2514)
!17041 = !DILocation(line: 0, scope: !17038)
!17042 = !DILocation(line: 55, column: 6, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !17038, file: !2541, line: 55, column: 6)
!17044 = !DILocation(line: 55, column: 14, scope: !17043)
!17045 = !DILocation(line: 55, column: 6, scope: !17038)
!17046 = !DILocation(line: 56, column: 25, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17043, file: !2541, line: 55, column: 23)
!17048 = !DILocation(line: 56, column: 12, scope: !17047)
!17049 = !DILocation(line: 56, column: 19, scope: !17047)
!17050 = !DILocation(line: 57, column: 2, scope: !17047)
!17051 = !DILocation(line: 59, column: 23, scope: !17038)
!17052 = !DILocation(line: 59, column: 2, scope: !17038)
!17053 = !DILocation(line: 60, column: 1, scope: !17038)
!17054 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !334, file: !334, line: 496, type: !17055, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17057)
!17055 = !DISubroutineType(types: !17056)
!17056 = !{null, !16883}
!17057 = !{!17058, !17059, !17060}
!17058 = !DILocalVariable(name: "node", arg: 1, scope: !17054, file: !334, line: 496, type: !16883)
!17059 = !DILocalVariable(name: "prev", scope: !17054, file: !334, line: 498, type: !16895)
!17060 = !DILocalVariable(name: "next", scope: !17054, file: !334, line: 499, type: !16895)
!17061 = !DILocation(line: 0, scope: !17054)
!17062 = !DILocation(line: 498, column: 34, scope: !17054)
!17063 = !DILocation(line: 499, column: 34, scope: !17054)
!17064 = !DILocation(line: 501, column: 8, scope: !17054)
!17065 = !DILocation(line: 501, column: 13, scope: !17054)
!17066 = !DILocation(line: 502, column: 8, scope: !17054)
!17067 = !DILocation(line: 502, column: 13, scope: !17054)
!17068 = !DILocation(line: 503, column: 2, scope: !17054)
!17069 = !DILocation(line: 504, column: 1, scope: !17054)
!17070 = distinct !DISubprogram(name: "sys_dnode_init", scope: !334, file: !334, line: 211, type: !17055, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17071)
!17071 = !{!17072}
!17072 = !DILocalVariable(name: "node", arg: 1, scope: !17070, file: !334, line: 211, type: !16883)
!17073 = !DILocation(line: 0, scope: !17070)
!17074 = !DILocation(line: 213, column: 8, scope: !17070)
!17075 = !DILocation(line: 213, column: 13, scope: !17070)
!17076 = !DILocation(line: 214, column: 8, scope: !17070)
!17077 = !DILocation(line: 214, column: 13, scope: !17070)
!17078 = !DILocation(line: 215, column: 1, scope: !17070)
!17079 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2541, file: !2541, line: 183, type: !17080, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17084)
!17080 = !DISubroutineType(types: !17081)
!17081 = !{!1752, !17082}
!17082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17083, size: 32)
!17083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2515)
!17084 = !{!17085, !17086, !17087, !17089}
!17085 = !DILocalVariable(name: "timeout", arg: 1, scope: !17079, file: !2541, line: 183, type: !17082)
!17086 = !DILocalVariable(name: "ticks", scope: !17079, file: !2541, line: 185, type: !1752)
!17087 = !DILocalVariable(name: "__i", scope: !17088, file: !2541, line: 187, type: !16766)
!17088 = distinct !DILexicalBlock(scope: !17079, file: !2541, line: 187, column: 2)
!17089 = !DILocalVariable(name: "__key", scope: !17088, file: !2541, line: 187, type: !16766)
!17090 = !DILocation(line: 0, scope: !17079)
!17091 = !DILocation(line: 0, scope: !17088)
!17092 = !DILocation(line: 0, scope: !16788, inlinedAt: !17093)
!17093 = distinct !DILocation(line: 187, column: 2, scope: !17088)
!17094 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !17095)
!17095 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !17093)
!17096 = !DILocation(line: 0, scope: !16797, inlinedAt: !17095)
!17097 = !DILocation(line: 188, column: 11, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17099, file: !2541, line: 187, column: 24)
!17099 = distinct !DILexicalBlock(scope: !17088, file: !2541, line: 187, column: 2)
!17100 = !DILocation(line: 0, scope: !16856, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 187, column: 2, scope: !17099)
!17102 = !DILocation(line: 0, scope: !16864, inlinedAt: !17103)
!17103 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !17101)
!17104 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !17103)
!17105 = !DILocation(line: 191, column: 2, scope: !17079)
!17106 = distinct !DISubprogram(name: "timeout_rem", scope: !2541, file: !2541, line: 165, type: !17080, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17107)
!17107 = !{!17108, !17109, !17110}
!17108 = !DILocalVariable(name: "timeout", arg: 1, scope: !17106, file: !2541, line: 165, type: !17082)
!17109 = !DILocalVariable(name: "ticks", scope: !17106, file: !2541, line: 167, type: !1752)
!17110 = !DILocalVariable(name: "t", scope: !17111, file: !2541, line: 173, type: !2514)
!17111 = distinct !DILexicalBlock(scope: !17106, file: !2541, line: 173, column: 2)
!17112 = !DILocation(line: 0, scope: !17106)
!17113 = !DILocation(line: 169, column: 6, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17106, file: !2541, line: 169, column: 6)
!17115 = !DILocation(line: 169, column: 6, scope: !17106)
!17116 = !DILocation(line: 173, column: 28, scope: !17111)
!17117 = !DILocation(line: 0, scope: !17111)
!17118 = !DILocation(line: 173, column: 39, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17111, file: !2541, line: 173, column: 2)
!17120 = !DILocation(line: 173, column: 2, scope: !17111)
!17121 = !DILocation(line: 174, column: 15, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17119, file: !2541, line: 173, column: 61)
!17123 = !DILocation(line: 174, column: 9, scope: !17122)
!17124 = !DILocation(line: 175, column: 15, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17122, file: !2541, line: 175, column: 7)
!17126 = !DILocation(line: 175, column: 7, scope: !17122)
!17127 = !DILocation(line: 173, column: 52, scope: !17119)
!17128 = distinct !{!17128, !17120, !17129}
!17129 = !DILocation(line: 178, column: 2, scope: !17111)
!17130 = !DILocation(line: 180, column: 17, scope: !17106)
!17131 = !DILocation(line: 180, column: 15, scope: !17106)
!17132 = !DILocation(line: 180, column: 2, scope: !17106)
!17133 = !DILocation(line: 181, column: 1, scope: !17106)
!17134 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14182, file: !14182, line: 35, type: !17135, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17137)
!17135 = !DISubroutineType(types: !17136)
!17136 = !{!179, !17082}
!17137 = !{!17138}
!17138 = !DILocalVariable(name: "to", arg: 1, scope: !17134, file: !14182, line: 35, type: !17082)
!17139 = !DILocation(line: 0, scope: !17134)
!17140 = !DILocation(line: 37, column: 35, scope: !17134)
!17141 = !DILocation(line: 37, column: 10, scope: !17134)
!17142 = !DILocation(line: 37, column: 9, scope: !17134)
!17143 = !DILocation(line: 37, column: 2, scope: !17134)
!17144 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2541, file: !2541, line: 194, type: !17080, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17145)
!17145 = !{!17146, !17147, !17148, !17150}
!17146 = !DILocalVariable(name: "timeout", arg: 1, scope: !17144, file: !2541, line: 194, type: !17082)
!17147 = !DILocalVariable(name: "ticks", scope: !17144, file: !2541, line: 196, type: !1752)
!17148 = !DILocalVariable(name: "__i", scope: !17149, file: !2541, line: 198, type: !16766)
!17149 = distinct !DILexicalBlock(scope: !17144, file: !2541, line: 198, column: 2)
!17150 = !DILocalVariable(name: "__key", scope: !17149, file: !2541, line: 198, type: !16766)
!17151 = !DILocation(line: 0, scope: !17144)
!17152 = !DILocation(line: 0, scope: !17149)
!17153 = !DILocation(line: 0, scope: !16788, inlinedAt: !17154)
!17154 = distinct !DILocation(line: 198, column: 2, scope: !17149)
!17155 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !17156)
!17156 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !17154)
!17157 = !DILocation(line: 0, scope: !16797, inlinedAt: !17156)
!17158 = !DILocation(line: 199, column: 11, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17160, file: !2541, line: 198, column: 24)
!17160 = distinct !DILexicalBlock(scope: !17149, file: !2541, line: 198, column: 2)
!17161 = !DILocation(line: 199, column: 23, scope: !17159)
!17162 = !DILocation(line: 0, scope: !16856, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 198, column: 2, scope: !17160)
!17164 = !DILocation(line: 0, scope: !16864, inlinedAt: !17165)
!17165 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !17163)
!17166 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !17165)
!17167 = !DILocation(line: 199, column: 21, scope: !17159)
!17168 = !DILocation(line: 202, column: 2, scope: !17144)
!17169 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2541, file: !2541, line: 205, type: !16872, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17170)
!17170 = !{!17171, !17172, !17174}
!17171 = !DILocalVariable(name: "ret", scope: !17169, file: !2541, line: 207, type: !357)
!17172 = !DILocalVariable(name: "__i", scope: !17173, file: !2541, line: 209, type: !16766)
!17173 = distinct !DILexicalBlock(scope: !17169, file: !2541, line: 209, column: 2)
!17174 = !DILocalVariable(name: "__key", scope: !17173, file: !2541, line: 209, type: !16766)
!17175 = !DILocation(line: 0, scope: !17169)
!17176 = !DILocation(line: 0, scope: !17173)
!17177 = !DILocation(line: 0, scope: !16788, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 209, column: 2, scope: !17173)
!17179 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !17178)
!17181 = !DILocation(line: 0, scope: !16797, inlinedAt: !17180)
!17182 = !DILocation(line: 210, column: 9, scope: !17183)
!17183 = distinct !DILexicalBlock(scope: !17184, file: !2541, line: 209, column: 24)
!17184 = distinct !DILexicalBlock(scope: !17173, file: !2541, line: 209, column: 2)
!17185 = !DILocation(line: 0, scope: !16856, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 209, column: 2, scope: !17184)
!17187 = !DILocation(line: 0, scope: !16864, inlinedAt: !17188)
!17188 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !17186)
!17189 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !17188)
!17190 = !DILocation(line: 212, column: 2, scope: !17169)
!17191 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2541, file: !2541, line: 215, type: !11631, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17192)
!17192 = !{!17193, !17194, !17195, !17197, !17198, !17201, !17202}
!17193 = !DILocalVariable(name: "ticks", arg: 1, scope: !17191, file: !2541, line: 215, type: !357)
!17194 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17191, file: !2541, line: 215, type: !179)
!17195 = !DILocalVariable(name: "__i", scope: !17196, file: !2541, line: 217, type: !16766)
!17196 = distinct !DILexicalBlock(scope: !17191, file: !2541, line: 217, column: 2)
!17197 = !DILocalVariable(name: "__key", scope: !17196, file: !2541, line: 217, type: !16766)
!17198 = !DILocalVariable(name: "next_to", scope: !17199, file: !2541, line: 218, type: !103)
!17199 = distinct !DILexicalBlock(scope: !17200, file: !2541, line: 217, column: 24)
!17200 = distinct !DILexicalBlock(scope: !17196, file: !2541, line: 217, column: 2)
!17201 = !DILocalVariable(name: "sooner", scope: !17199, file: !2541, line: 219, type: !179)
!17202 = !DILocalVariable(name: "imminent", scope: !17199, file: !2541, line: 221, type: !179)
!17203 = !DILocation(line: 0, scope: !17191)
!17204 = !DILocation(line: 0, scope: !17196)
!17205 = !DILocation(line: 0, scope: !16788, inlinedAt: !17206)
!17206 = distinct !DILocation(line: 217, column: 2, scope: !17196)
!17207 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !17208)
!17208 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !17206)
!17209 = !DILocation(line: 0, scope: !16797, inlinedAt: !17208)
!17210 = !DILocation(line: 218, column: 17, scope: !17199)
!17211 = !DILocation(line: 0, scope: !17199)
!17212 = !DILocation(line: 221, column: 27, scope: !17199)
!17213 = !DILocation(line: 233, column: 17, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17199, file: !2541, line: 233, column: 7)
!17215 = !DILocation(line: 234, column: 26, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17214, file: !2541, line: 233, column: 56)
!17217 = !DILocation(line: 234, column: 4, scope: !17216)
!17218 = !DILocation(line: 235, column: 3, scope: !17216)
!17219 = !DILocation(line: 0, scope: !16856, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 217, column: 2, scope: !17200)
!17221 = !DILocation(line: 0, scope: !16864, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !17220)
!17223 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !17222)
!17224 = !DILocation(line: 237, column: 1, scope: !17191)
!17225 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2541, file: !2541, line: 239, type: !17226, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17228)
!17226 = !DISubroutineType(types: !17227)
!17227 = !{null, !357}
!17228 = !{!17229, !17230, !17231, !17233}
!17229 = !DILocalVariable(name: "ticks", arg: 1, scope: !17225, file: !2541, line: 239, type: !357)
!17230 = !DILocalVariable(name: "key", scope: !17225, file: !2541, line: 245, type: !16766)
!17231 = !DILocalVariable(name: "t", scope: !17232, file: !2541, line: 262, type: !2514)
!17232 = distinct !DILexicalBlock(scope: !17225, file: !2541, line: 261, column: 67)
!17233 = !DILocalVariable(name: "dt", scope: !17232, file: !2541, line: 263, type: !103)
!17234 = !DILocation(line: 0, scope: !17225)
!17235 = !DILocation(line: 242, column: 2, scope: !17225)
!17236 = !DILocation(line: 0, scope: !16788, inlinedAt: !17237)
!17237 = distinct !DILocation(line: 245, column: 25, scope: !17225)
!17238 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !17237)
!17240 = !DILocation(line: 0, scope: !16797, inlinedAt: !17239)
!17241 = !DILocation(line: 261, column: 9, scope: !17225)
!17242 = !DILocation(line: 261, column: 17, scope: !17225)
!17243 = !DILocation(line: 261, column: 25, scope: !17225)
!17244 = !DILocation(line: 261, column: 37, scope: !17225)
!17245 = !DILocation(line: 261, column: 47, scope: !17225)
!17246 = !DILocation(line: 261, column: 44, scope: !17225)
!17247 = !DILocation(line: 261, column: 2, scope: !17225)
!17248 = !DILocation(line: 0, scope: !17232)
!17249 = !DILocation(line: 263, column: 12, scope: !17232)
!17250 = !DILocation(line: 265, column: 16, scope: !17232)
!17251 = !DILocation(line: 265, column: 13, scope: !17232)
!17252 = !DILocation(line: 266, column: 13, scope: !17232)
!17253 = !DILocation(line: 267, column: 3, scope: !17232)
!17254 = !DILocation(line: 0, scope: !16856, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 269, column: 3, scope: !17232)
!17256 = !DILocation(line: 0, scope: !16864, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !17255)
!17258 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !17257)
!17259 = !DILocation(line: 270, column: 6, scope: !17232)
!17260 = !DILocation(line: 270, column: 3, scope: !17232)
!17261 = !DILocation(line: 0, scope: !16788, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 271, column: 9, scope: !17232)
!17263 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !17264)
!17264 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !17262)
!17265 = !DILocation(line: 0, scope: !16797, inlinedAt: !17264)
!17266 = !DILocation(line: 272, column: 22, scope: !17232)
!17267 = distinct !{!17267, !17247, !17268}
!17268 = !DILocation(line: 273, column: 2, scope: !17225)
!17269 = !DILocation(line: 276, column: 19, scope: !17270)
!17270 = distinct !DILexicalBlock(scope: !17271, file: !2541, line: 275, column: 23)
!17271 = distinct !DILexicalBlock(scope: !17225, file: !2541, line: 275, column: 6)
!17272 = !DILocation(line: 277, column: 2, scope: !17270)
!17273 = !DILocation(line: 279, column: 15, scope: !17225)
!17274 = !DILocation(line: 279, column: 12, scope: !17225)
!17275 = !DILocation(line: 280, column: 21, scope: !17225)
!17276 = !DILocation(line: 282, column: 24, scope: !17225)
!17277 = !DILocation(line: 282, column: 2, scope: !17225)
!17278 = !DILocation(line: 0, scope: !16856, inlinedAt: !17279)
!17279 = distinct !DILocation(line: 284, column: 2, scope: !17225)
!17280 = !DILocation(line: 0, scope: !16864, inlinedAt: !17281)
!17281 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !17279)
!17282 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !17281)
!17283 = !DILocation(line: 285, column: 1, scope: !17225)
!17284 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2541, file: !2541, line: 287, type: !17285, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17287)
!17285 = !DISubroutineType(types: !17286)
!17286 = !{!445}
!17287 = !{!17288, !17289, !17291}
!17288 = !DILocalVariable(name: "t", scope: !17284, file: !2541, line: 289, type: !2355)
!17289 = !DILocalVariable(name: "__i", scope: !17290, file: !2541, line: 291, type: !16766)
!17290 = distinct !DILexicalBlock(scope: !17284, file: !2541, line: 291, column: 2)
!17291 = !DILocalVariable(name: "__key", scope: !17290, file: !2541, line: 291, type: !16766)
!17292 = !DILocation(line: 0, scope: !17284)
!17293 = !DILocation(line: 0, scope: !17290)
!17294 = !DILocation(line: 0, scope: !16788, inlinedAt: !17295)
!17295 = distinct !DILocation(line: 291, column: 2, scope: !17290)
!17296 = !DILocation(line: 55, column: 2, scope: !16797, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 145, column: 10, scope: !16788, inlinedAt: !17295)
!17298 = !DILocation(line: 0, scope: !16797, inlinedAt: !17297)
!17299 = !DILocation(line: 292, column: 7, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17301, file: !2541, line: 291, column: 24)
!17301 = distinct !DILexicalBlock(scope: !17290, file: !2541, line: 291, column: 2)
!17302 = !DILocation(line: 292, column: 19, scope: !17300)
!17303 = !DILocation(line: 0, scope: !16856, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 291, column: 2, scope: !17301)
!17305 = !DILocation(line: 0, scope: !16864, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 215, column: 2, scope: !16856, inlinedAt: !17304)
!17307 = !DILocation(line: 95, column: 2, scope: !16864, inlinedAt: !17306)
!17308 = !DILocation(line: 292, column: 17, scope: !17300)
!17309 = !DILocation(line: 294, column: 2, scope: !17284)
!17310 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2541, file: !2541, line: 297, type: !7567, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !486)
!17311 = !DILocation(line: 300, column: 19, scope: !17310)
!17312 = !DILocation(line: 300, column: 9, scope: !17310)
!17313 = !DILocation(line: 300, column: 2, scope: !17310)
!17314 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2541, file: !2541, line: 306, type: !17285, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !486)
!17315 = !DILocation(line: 308, column: 9, scope: !17314)
!17316 = !DILocation(line: 308, column: 2, scope: !17314)
!17317 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2541, file: !2541, line: 319, type: !5804, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17318)
!17318 = !{!17319, !17320, !17321, !17322}
!17319 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17317, file: !2541, line: 319, type: !132)
!17320 = !DILocalVariable(name: "start_cycles", scope: !17317, file: !2541, line: 328, type: !132)
!17321 = !DILocalVariable(name: "cycles_to_wait", scope: !17317, file: !2541, line: 331, type: !132)
!17322 = !DILocalVariable(name: "current_cycles", scope: !17323, file: !2541, line: 338, type: !132)
!17323 = distinct !DILexicalBlock(scope: !17324, file: !2541, line: 337, column: 11)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !2541, line: 337, column: 2)
!17325 = distinct !DILexicalBlock(scope: !17317, file: !2541, line: 337, column: 2)
!17326 = !DILocation(line: 0, scope: !17317)
!17327 = !DILocation(line: 322, column: 19, scope: !17328)
!17328 = distinct !DILexicalBlock(scope: !17317, file: !2541, line: 322, column: 6)
!17329 = !DILocation(line: 322, column: 6, scope: !17317)
!17330 = !DILocation(line: 328, column: 26, scope: !17317)
!17331 = !DILocation(line: 333, column: 43, scope: !17317)
!17332 = !DILocation(line: 337, column: 2, scope: !17317)
!17333 = !DILocation(line: 338, column: 29, scope: !17323)
!17334 = !DILocation(line: 0, scope: !17323)
!17335 = !DILocation(line: 341, column: 23, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17323, file: !2541, line: 341, column: 7)
!17337 = !DILocation(line: 341, column: 39, scope: !17336)
!17338 = !DILocation(line: 349, column: 1, scope: !17317)
!17339 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !325, file: !325, line: 1675, type: !7567, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !486)
!17340 = !DILocation(line: 1677, column: 9, scope: !17339)
!17341 = !DILocation(line: 1677, column: 2, scope: !17339)
!17342 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17343, file: !17343, line: 24, type: !7567, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !486)
!17343 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17344 = !DILocation(line: 26, column: 9, scope: !17342)
!17345 = !DILocation(line: 26, column: 2, scope: !17342)
!17346 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2541, file: !2541, line: 364, type: !17347, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !17349)
!17347 = !DISubroutineType(types: !17348)
!17348 = !{!2355, !16756}
!17349 = !{!17350, !17351}
!17350 = !DILocalVariable(name: "timeout", arg: 1, scope: !17346, file: !2541, line: 364, type: !16756)
!17351 = !DILocalVariable(name: "dt", scope: !17346, file: !2541, line: 366, type: !1752)
!17352 = !DILocation(line: 0, scope: !17346)
!17353 = !DILocation(line: 368, column: 6, scope: !17346)
!17354 = !DILocation(line: 371, column: 10, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17356, file: !2541, line: 370, column: 47)
!17356 = distinct !DILexicalBlock(scope: !17357, file: !2541, line: 370, column: 13)
!17357 = distinct !DILexicalBlock(scope: !17346, file: !2541, line: 368, column: 6)
!17358 = !DILocation(line: 371, column: 3, scope: !17355)
!17359 = !DILocation(line: 376, column: 58, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17361, file: !2541, line: 376, column: 7)
!17361 = distinct !DILexicalBlock(scope: !17356, file: !2541, line: 372, column: 9)
!17362 = !DILocation(line: 376, column: 7, scope: !17361)
!17363 = !DILocation(line: 376, column: 43, scope: !17360)
!17364 = !DILocation(line: 377, column: 4, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17360, file: !2541, line: 376, column: 64)
!17366 = !DILocation(line: 379, column: 10, scope: !17361)
!17367 = !DILocation(line: 379, column: 33, scope: !17361)
!17368 = !DILocation(line: 379, column: 31, scope: !17361)
!17369 = !DILocation(line: 379, column: 3, scope: !17361)
!17370 = !DILocation(line: 0, scope: !17357)
!17371 = !DILocation(line: 381, column: 1, scope: !17346)
!17372 = distinct !DISubprogram(name: "boot_banner", scope: !17373, file: !17373, line: 26, type: !3229, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !486)
!17373 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17374 = !DILocation(line: 34, column: 2, scope: !17372)
!17375 = !DILocation(line: 36, column: 1, scope: !17372)
!17376 = distinct !DISubprogram(name: "statics_init", scope: !2569, file: !2569, line: 21, type: !2575, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17377)
!17377 = !{!17378, !17379}
!17378 = !DILocalVariable(name: "unused", arg: 1, scope: !17376, file: !2569, line: 21, type: !2577)
!17379 = !DILocalVariable(name: "h", scope: !17380, file: !2569, line: 24, type: !17381)
!17380 = distinct !DILexicalBlock(scope: !17376, file: !2569, line: 24, column: 2)
!17381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17382, size: 32)
!17382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !325, line: 5073, size: 160, elements: !17383)
!17383 = !{!17384, !17390, !17396}
!17384 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17382, file: !325, line: 5074, baseType: !17385, size: 96)
!17385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !475, line: 56, size: 96, elements: !17386)
!17386 = !{!17387, !17388, !17389}
!17387 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17385, file: !475, line: 57, baseType: !478, size: 32)
!17388 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17385, file: !475, line: 58, baseType: !102, size: 32, offset: 32)
!17389 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17385, file: !475, line: 59, baseType: !369, size: 32, offset: 64)
!17390 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17382, file: !325, line: 5075, baseType: !17391, size: 64, offset: 96)
!17391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !329, line: 233, baseType: !17392)
!17392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !329, line: 231, size: 64, elements: !17393)
!17393 = !{!17394}
!17394 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17392, file: !329, line: 232, baseType: !17395, size: 64)
!17395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !334, line: 48, baseType: !2555)
!17396 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17382, file: !325, line: 5076, baseType: !17397, offset: 160)
!17397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !485, line: 43, elements: !486)
!17398 = !DILocation(line: 0, scope: !17376)
!17399 = !DILocation(line: 0, scope: !17380)
!17400 = !DILocation(line: 24, column: 2, scope: !17380)
!17401 = !DILocation(line: 52, column: 2, scope: !17376)
!17402 = !DILocation(line: 49, column: 27, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17404, file: !2569, line: 48, column: 3)
!17404 = distinct !DILexicalBlock(scope: !17405, file: !2569, line: 24, column: 36)
!17405 = distinct !DILexicalBlock(scope: !17380, file: !2569, line: 24, column: 2)
!17406 = !DILocation(line: 49, column: 45, scope: !17403)
!17407 = !DILocation(line: 49, column: 4, scope: !17403)
!17408 = !DILocation(line: 24, column: 2, scope: !17405)
!17409 = !DILocation(line: 24, column: 2, scope: !17410)
!17410 = distinct !DILexicalBlock(scope: !17405, file: !2569, line: 24, column: 2)
!17411 = distinct !{!17411, !17400, !17412}
!17412 = !DILocation(line: 51, column: 2, scope: !17380)
!17413 = distinct !DISubprogram(name: "k_heap_init", scope: !2569, file: !2569, line: 13, type: !17414, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17416)
!17414 = !DISubroutineType(types: !17415)
!17415 = !{null, !17381, !102, !369}
!17416 = !{!17417, !17418, !17419}
!17417 = !DILocalVariable(name: "h", arg: 1, scope: !17413, file: !2569, line: 13, type: !17381)
!17418 = !DILocalVariable(name: "mem", arg: 2, scope: !17413, file: !2569, line: 13, type: !102)
!17419 = !DILocalVariable(name: "bytes", arg: 3, scope: !17413, file: !2569, line: 13, type: !369)
!17420 = !DILocation(line: 0, scope: !17413)
!17421 = !DILocation(line: 15, column: 19, scope: !17413)
!17422 = !DILocation(line: 15, column: 2, scope: !17413)
!17423 = !DILocation(line: 16, column: 20, scope: !17413)
!17424 = !DILocation(line: 16, column: 2, scope: !17413)
!17425 = !DILocation(line: 19, column: 1, scope: !17413)
!17426 = distinct !DISubprogram(name: "z_waitq_init", scope: !14114, file: !14114, line: 47, type: !17427, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17430)
!17427 = !DISubroutineType(types: !17428)
!17428 = !{null, !17429}
!17429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17391, size: 32)
!17430 = !{!17431}
!17431 = !DILocalVariable(name: "w", arg: 1, scope: !17426, file: !14114, line: 47, type: !17429)
!17432 = !DILocation(line: 0, scope: !17426)
!17433 = !DILocation(line: 49, column: 21, scope: !17426)
!17434 = !DILocation(line: 49, column: 2, scope: !17426)
!17435 = !DILocation(line: 50, column: 1, scope: !17426)
!17436 = distinct !DISubprogram(name: "sys_dlist_init", scope: !334, file: !334, line: 197, type: !17437, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17440)
!17437 = !DISubroutineType(types: !17438)
!17438 = !{null, !17439}
!17439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17395, size: 32)
!17440 = !{!17441}
!17441 = !DILocalVariable(name: "list", arg: 1, scope: !17436, file: !334, line: 197, type: !17439)
!17442 = !DILocation(line: 0, scope: !17436)
!17443 = !DILocation(line: 199, column: 8, scope: !17436)
!17444 = !DILocation(line: 199, column: 13, scope: !17436)
!17445 = !DILocation(line: 200, column: 8, scope: !17436)
!17446 = !DILocation(line: 200, column: 13, scope: !17436)
!17447 = !DILocation(line: 201, column: 1, scope: !17436)
!17448 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2569, file: !2569, line: 64, type: !17449, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17455)
!17449 = !DISubroutineType(types: !17450)
!17450 = !{!102, !17381, !369, !369, !17451}
!17451 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1753, line: 67, baseType: !17452)
!17452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1753, line: 65, size: 64, elements: !17453)
!17453 = !{!17454}
!17454 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17452, file: !1753, line: 66, baseType: !1752, size: 64)
!17455 = !{!17456, !17457, !17458, !17459, !17460, !17461, !17462, !17463, !17468}
!17456 = !DILocalVariable(name: "h", arg: 1, scope: !17448, file: !2569, line: 64, type: !17381)
!17457 = !DILocalVariable(name: "align", arg: 2, scope: !17448, file: !2569, line: 64, type: !369)
!17458 = !DILocalVariable(name: "bytes", arg: 3, scope: !17448, file: !2569, line: 64, type: !369)
!17459 = !DILocalVariable(name: "timeout", arg: 4, scope: !17448, file: !2569, line: 65, type: !17451)
!17460 = !DILocalVariable(name: "now", scope: !17448, file: !2569, line: 67, type: !445)
!17461 = !DILocalVariable(name: "end", scope: !17448, file: !2569, line: 67, type: !445)
!17462 = !DILocalVariable(name: "ret", scope: !17448, file: !2569, line: 68, type: !102)
!17463 = !DILocalVariable(name: "key", scope: !17448, file: !2569, line: 72, type: !17464)
!17464 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !485, line: 106, baseType: !17465)
!17465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !485, line: 32, size: 32, elements: !17466)
!17466 = !{!17467}
!17467 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17465, file: !485, line: 33, baseType: !103, size: 32)
!17468 = !DILocalVariable(name: "blocked_alloc", scope: !17448, file: !2569, line: 78, type: !179)
!17469 = !DILocation(line: 0, scope: !17448)
!17470 = !DILocation(line: 67, column: 21, scope: !17448)
!17471 = !DILocation(line: 70, column: 8, scope: !17448)
!17472 = !DILocation(line: 72, column: 41, scope: !17448)
!17473 = !DILocalVariable(name: "l", arg: 1, scope: !17474, file: !485, line: 136, type: !17477)
!17474 = distinct !DISubprogram(name: "k_spin_lock", scope: !485, file: !485, line: 136, type: !17475, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17478)
!17475 = !DISubroutineType(types: !17476)
!17476 = !{!17464, !17477}
!17477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17397, size: 32)
!17478 = !{!17473, !17479}
!17479 = !DILocalVariable(name: "k", scope: !17474, file: !485, line: 139, type: !17464)
!17480 = !DILocation(line: 0, scope: !17474, inlinedAt: !17481)
!17481 = distinct !DILocation(line: 72, column: 25, scope: !17448)
!17482 = !DILocation(line: 55, column: 2, scope: !17483, inlinedAt: !17487)
!17483 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5780, file: !5780, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17484)
!17484 = !{!17485, !17486}
!17485 = !DILocalVariable(name: "key", scope: !17483, file: !5780, line: 44, type: !32)
!17486 = !DILocalVariable(name: "tmp", scope: !17483, file: !5780, line: 53, type: !32)
!17487 = distinct !DILocation(line: 145, column: 10, scope: !17474, inlinedAt: !17481)
!17488 = !{i64 1649589}
!17489 = !DILocation(line: 0, scope: !17483, inlinedAt: !17487)
!17490 = !DILocation(line: 81, column: 9, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17448, file: !2569, line: 80, column: 22)
!17492 = !DILocation(line: 83, column: 9, scope: !17491)
!17493 = !DILocation(line: 85, column: 12, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17491, file: !2569, line: 84, column: 7)
!17495 = !DILocation(line: 85, column: 21, scope: !17494)
!17496 = !DILocation(line: 85, column: 30, scope: !17494)
!17497 = !DILocation(line: 85, column: 37, scope: !17494)
!17498 = !DILocation(line: 84, column: 7, scope: !17491)
!17499 = !DILocation(line: 99, column: 10, scope: !17491)
!17500 = !DILocation(line: 0, scope: !17474, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 101, column: 9, scope: !17491)
!17502 = !DILocation(line: 55, column: 2, scope: !17483, inlinedAt: !17503)
!17503 = distinct !DILocation(line: 145, column: 10, scope: !17474, inlinedAt: !17501)
!17504 = !DILocation(line: 0, scope: !17483, inlinedAt: !17503)
!17505 = distinct !{!17505, !17506, !17507}
!17506 = !DILocation(line: 80, column: 2, scope: !17448)
!17507 = !DILocation(line: 102, column: 2, scope: !17448)
!17508 = !DILocalVariable(name: "key", arg: 2, scope: !17509, file: !485, line: 190, type: !17464)
!17509 = distinct !DISubprogram(name: "k_spin_unlock", scope: !485, file: !485, line: 189, type: !17510, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17512)
!17510 = !DISubroutineType(types: !17511)
!17511 = !{null, !17477, !17464}
!17512 = !{!17513, !17508}
!17513 = !DILocalVariable(name: "l", arg: 1, scope: !17509, file: !485, line: 189, type: !17477)
!17514 = !DILocation(line: 0, scope: !17509, inlinedAt: !17515)
!17515 = distinct !DILocation(line: 106, column: 2, scope: !17448)
!17516 = !DILocalVariable(name: "key", arg: 1, scope: !17517, file: !5780, line: 84, type: !32)
!17517 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5780, file: !5780, line: 84, type: !5791, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17518)
!17518 = !{!17516}
!17519 = !DILocation(line: 0, scope: !17517, inlinedAt: !17520)
!17520 = distinct !DILocation(line: 215, column: 2, scope: !17509, inlinedAt: !17515)
!17521 = !DILocation(line: 95, column: 2, scope: !17517, inlinedAt: !17520)
!17522 = !{i64 1650406}
!17523 = !DILocation(line: 107, column: 2, scope: !17448)
!17524 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2569, file: !2569, line: 110, type: !17525, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17527)
!17525 = !DISubroutineType(types: !17526)
!17526 = !{!102, !17381, !369, !17451}
!17527 = !{!17528, !17529, !17530, !17531}
!17528 = !DILocalVariable(name: "h", arg: 1, scope: !17524, file: !2569, line: 110, type: !17381)
!17529 = !DILocalVariable(name: "bytes", arg: 2, scope: !17524, file: !2569, line: 110, type: !369)
!17530 = !DILocalVariable(name: "timeout", arg: 3, scope: !17524, file: !2569, line: 110, type: !17451)
!17531 = !DILocalVariable(name: "ret", scope: !17524, file: !2569, line: 114, type: !102)
!17532 = !DILocation(line: 0, scope: !17524)
!17533 = !DILocation(line: 114, column: 14, scope: !17524)
!17534 = !DILocation(line: 118, column: 2, scope: !17524)
!17535 = distinct !DISubprogram(name: "k_heap_free", scope: !2569, file: !2569, line: 121, type: !17536, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17538)
!17536 = !DISubroutineType(types: !17537)
!17537 = !{null, !17381, !102}
!17538 = !{!17539, !17540, !17541}
!17539 = !DILocalVariable(name: "h", arg: 1, scope: !17535, file: !2569, line: 121, type: !17381)
!17540 = !DILocalVariable(name: "mem", arg: 2, scope: !17535, file: !2569, line: 121, type: !102)
!17541 = !DILocalVariable(name: "key", scope: !17535, file: !2569, line: 123, type: !17464)
!17542 = !DILocation(line: 0, scope: !17535)
!17543 = !DILocation(line: 0, scope: !17474, inlinedAt: !17544)
!17544 = distinct !DILocation(line: 123, column: 25, scope: !17535)
!17545 = !DILocation(line: 55, column: 2, scope: !17483, inlinedAt: !17546)
!17546 = distinct !DILocation(line: 145, column: 10, scope: !17474, inlinedAt: !17544)
!17547 = !DILocation(line: 0, scope: !17483, inlinedAt: !17546)
!17548 = !DILocation(line: 125, column: 20, scope: !17535)
!17549 = !DILocation(line: 125, column: 2, scope: !17535)
!17550 = !DILocation(line: 128, column: 60, scope: !17551)
!17551 = distinct !DILexicalBlock(scope: !17535, file: !2569, line: 128, column: 6)
!17552 = !DILocation(line: 128, column: 43, scope: !17551)
!17553 = !DILocation(line: 128, column: 68, scope: !17551)
!17554 = !DILocation(line: 128, column: 6, scope: !17535)
!17555 = !DILocation(line: 123, column: 41, scope: !17535)
!17556 = !DILocation(line: 129, column: 3, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17551, file: !2569, line: 128, column: 74)
!17558 = !DILocation(line: 130, column: 2, scope: !17557)
!17559 = !DILocation(line: 0, scope: !17509, inlinedAt: !17560)
!17560 = distinct !DILocation(line: 131, column: 3, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !17551, file: !2569, line: 130, column: 9)
!17562 = !DILocation(line: 0, scope: !17517, inlinedAt: !17563)
!17563 = distinct !DILocation(line: 215, column: 2, scope: !17509, inlinedAt: !17560)
!17564 = !DILocation(line: 95, column: 2, scope: !17517, inlinedAt: !17563)
!17565 = !DILocation(line: 133, column: 1, scope: !17535)
