; ModuleID = 'build/96b_wistrio/sensor_batch_processing/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.rtio_executor_api = type { i32 (%struct.rtio*)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)* }
%struct.rtio = type { %struct.rtio_executor*, i32, %struct.rtio_sq*, %struct.rtio_cq* }
%struct.rtio_executor = type { %struct.rtio_executor_api* }
%struct.rtio_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_sqe] }
%struct.rtio_spsc = type { i32, i32, i32, i32, i32 }
%struct.rtio_sqe = type { i8, i8, i16, %struct.rtio_iodev*, i8*, %union.anon.3 }
%struct.rtio_iodev = type { %struct.rtio_iodev_api*, %struct.rtio_iodev_sq*, i8* }
%struct.rtio_iodev_api = type { void (%struct.rtio_sqe*, %struct.rtio*)* }
%struct.rtio_iodev_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_iodev_sqe] }
%struct.rtio_iodev_sqe = type { %struct.rtio_sqe*, %struct.rtio* }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i8* }
%struct.rtio_cq = type { %struct.rtio_spsc, [0 x %struct.anon.4] }
%struct.rtio_simple_executor = type { %struct.rtio_executor }
%struct.rtio_spsc__sq_ez_io = type { %struct.rtio_spsc, [8 x %struct.rtio_sqe] }
%struct.rtio_spsc__cq_ez_io = type { %struct.rtio_spsc, [8 x %struct.anon.4] }
%struct.rtio_spsc_vnd_sensor_iodev_sq_0 = type { %struct.rtio_spsc, [8 x %struct.rtio_iodev_sqe] }
%struct.vnd_sensor_config = type { i32, i32 }
%struct.device_state = type { i8, i8 }
%struct.vnd_sensor_data = type { %struct.rtio_iodev, %struct.k_timer, %struct.device*, %struct.k_msgq, i32 }
%struct.k_timer = type { %struct._timeout, %struct._wait_q_t, void (%struct.k_timer*)*, void (%struct.k_timer*)*, %struct.k_timeout_t, i32, i8* }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._wait_q_t = type { %struct._dnode }
%struct.k_timeout_t = type { i64 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon }
%union.anon = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon, i32*, i32, %struct.vnd_sensor_config }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.vnd_sensor_config*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.vnd_sensor_config*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.vnd_sensor_config }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %struct.k_timeout_t, %struct.conversion }
%struct.conversion = type { [3 x i8], i8, %union.anon, %union.anon }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, i32 }
%struct.rtio_concurrent_executor = type { %struct.rtio_executor, %struct.k_spinlock, i16, i16, i16, %struct.rtio_sqe*, %struct.rtio_sqe*, i8*, %struct.rtio_sqe** }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %union.anon*, %union.anon* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233016 to i8*), void (i8*)* inttoptr (i32 134231309 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233016 to i8*), void (i8*)* inttoptr (i32 134231299 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233016 to i8*), void (i8*)* inttoptr (i32 134231289 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233016 to i8*), void (i8*)* inttoptr (i32 134231279 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233016 to i8*), void (i8*)* inttoptr (i32 134231269 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233016 to i8*), void (i8*)* inttoptr (i32 134231259 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233016 to i8*), void (i8*)* inttoptr (i32 134231249 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.rtio* @ez_io to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_vnd_sensor to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_simple to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_concurrent to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_56 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_57 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_62 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_56 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_57 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_62 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@z_rtio_simple_api = internal constant %struct.rtio_executor_api { i32 (%struct.rtio*)* @rtio_simple_submit, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_ok, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_err }, align 4, !dbg !235
@simple_exec = dso_local global %struct.rtio_simple_executor { %struct.rtio_executor { %struct.rtio_executor_api* @z_rtio_simple_api } }, align 4, !dbg !117
@_sq_ez_io = internal global %struct.rtio_spsc__sq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_sqe] zeroinitializer }, align 4, !dbg !237
@_cq_ez_io = internal global %struct.rtio_spsc__cq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.anon.4] zeroinitializer }, align 4, !dbg !245
@ez_io = dso_local global %struct.rtio { %struct.rtio_executor* getelementptr inbounds (%struct.rtio_simple_executor, %struct.rtio_simple_executor* @simple_exec, i32 0, i32 0), i32 0, %struct.rtio_sq* bitcast (%struct.rtio_spsc__sq_ez_io* @_sq_ez_io to %struct.rtio_sq*), %struct.rtio_cq* bitcast (%struct.rtio_spsc__cq_ez_io* @_cq_ez_io to %struct.rtio_cq*) }, section "._rtio.static.ez_io", align 4, !dbg !227
@bufs = internal global [8 x [16 x i8]] zeroinitializer, align 1, !dbg !229
@.str.1 = private unnamed_addr constant [33 x i8] c"%c: Submitting %d read requests\0A\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"%c: No completion events available\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"%c: Consumed completion event %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"%c: Operation failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"%c: Start processing %d samples\0A\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Sample data:\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"%c: Finished processing %d samples\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"vnd_sensor\00", align 1
@log_const_vnd_sensor = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8 4 }, section ".log_const_vnd_sensor", align 4, !dbg !258
@vnd_sensor_iodev_sq_0 = dso_local global %struct.rtio_spsc_vnd_sensor_iodev_sq_0 { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_iodev_sqe] zeroinitializer }, align 4, !dbg !451
@__devicehdl_dts_ord_20 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !494
@.str.1.12 = private unnamed_addr constant [9 x i8] c"sensor@0\00", align 1
@vnd_sensor_config_0 = internal constant %struct.vnd_sensor_config { i32 100, i32 16 }, align 4, !dbg !478
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !476
@vnd_sensor_data_0 = internal global %struct.vnd_sensor_data { %struct.rtio_iodev { %struct.rtio_iodev_api* @vnd_sensor_iodev_api, %struct.rtio_iodev_sq* bitcast (%struct.rtio_spsc_vnd_sensor_iodev_sq_0* @vnd_sensor_iodev_sq_0 to %struct.rtio_iodev_sq*), i8* null }, %struct.k_timer zeroinitializer, %struct.device* null, %struct.k_msgq zeroinitializer, i32 0 }, align 8, !dbg !485
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.12, i32 0, i32 0), i8* bitcast (%struct.vnd_sensor_config* @vnd_sensor_config_0 to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.vnd_sensor_data* @vnd_sensor_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_POST_KERNEL50_", align 4, !dbg !463
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @vnd_sensor_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_POST_KERNEL50_", align 4, !dbg !465
@vnd_sensor_iodev_api = internal constant %struct.rtio_iodev_api { void (%struct.rtio_sqe*, %struct.rtio*)* @vnd_sensor_iodev_submit }, align 4, !dbg !487
@.str.2.16 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not put a msg\0A\00", align 1
@.str.3.19 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not get a msg\0A\00", align 1
@.str.4.20 = private unnamed_addr constant [20 x i8] c"%c: %s: Invalid op\0A\00", align 1
@.str.5.21 = private unnamed_addr constant [32 x i8] c"%c: %s: buf_len = %d, buf = %p\0A\00", align 1
@.str.6.22 = private unnamed_addr constant [29 x i8] c"%c: %s: Buffer is too small\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !526
@.str.1.25 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !547
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !557
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !613
@.str.36 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.38 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.39 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.37 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.41 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.45 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.46 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.60 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.55 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.56 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.57 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.59 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.53 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.22 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.23.50 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.24 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.28.49 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !642
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon { i32 101384192 } }], align 4, !dbg !783
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !648
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !792
@.str.72 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !828
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), %union.anon { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.85, i32 0, i32 0), %union.anon { i32 285933596 } }], align 4, !dbg !838
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !843
@.str.84 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.85 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !863
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@.str.87 = private unnamed_addr constant [21 x i8] c"rtio_executor_simple\00", align 1
@log_const_rtio_executor_simple = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_simple", align 4, !dbg !971
@.str.97 = private unnamed_addr constant [25 x i8] c"rtio_executor_concurrent\00", align 1
@log_const_rtio_executor_concurrent = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_concurrent", align 4, !dbg !982
@.str.1.99 = private unnamed_addr constant [12 x i8] c"%c: submit\0A\00", align 1
@.str.2.101 = private unnamed_addr constant [26 x i8] c"%c: head SQE in chain %p\0A\00", align 1
@.str.3.102 = private unnamed_addr constant [24 x i8] c"%c: setting up task %d\0A\00", align 1
@.str.4.103 = private unnamed_addr constant [22 x i8] c"%c: submitted sqe %p\0A\00", align 1
@.str.5.104 = private unnamed_addr constant [26 x i8] c"%c: tail SQE in chain %p\0A\00", align 1
@.str.6.105 = private unnamed_addr constant [32 x i8] c"%c: resuming suspended task %d\0A\00", align 1
@.str.7.108 = private unnamed_addr constant [29 x i8] c"%c: sweeping oldest task %d\0A\00", align 1
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !1099
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !505
@.str.111 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1217
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1201
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.111, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1174
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1190
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !1219
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !1232
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !1234
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !1236
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !1238
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !1240
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !1242
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !499
@.str.113 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1247
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1324
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1313
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1365
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !520
@.str.124 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.vnd_sensor_config { i32 28, i32 1 } }, align 4, !dbg !1431
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1675
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1653
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1639
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1587
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !518
@.str.1.127 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.vnd_sensor_config { i32 28, i32 2 } }, align 4, !dbg !1677
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1657
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1655
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1604
@__devicehdl_dts_ord_62 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !516
@.str.2.128 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.vnd_sensor_config { i32 28, i32 4 } }, align 4, !dbg !1690
@__devstate_dts_ord_62 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1661
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1659
@__init___device_dts_ord_62 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_62 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1613
@__devicehdl_dts_ord_56 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !514
@.str.3.129 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.vnd_sensor_config { i32 28, i32 8 } }, align 4, !dbg !1692
@__devstate_dts_ord_56 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1665
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1663
@__init___device_dts_ord_56 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_56 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1622
@__devicehdl_dts_ord_57 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !512
@.str.4.130 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.vnd_sensor_config { i32 28, i32 16 } }, align 4, !dbg !1694
@__devstate_dts_ord_57 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1669
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1667
@__init___device_dts_ord_57 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_57 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1628
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !510
@.str.5.131 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct.vnd_sensor_config { i32 28, i32 32 } }, align 4, !dbg !1696
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1673
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1671
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1637
@.str.135 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1698
@__devicehdl_dts_ord_39 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !524
@.str.1.136 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_39 }, align 4, !dbg !1858
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1913
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1854
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1915
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.136, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1839
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1841
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !522
@.str.2.141 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1921
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1856
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1931
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.141, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1850
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1852
@pclken_0 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 36, i32 131072 }], align 4, !dbg !1902
@__pinctrl_dev_config__device_dts_ord_39 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_39, i32 0, i32 0), i8 1 }, align 4, !dbg !1905
@__pinctrl_states__device_dts_ord_39 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_39, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1907
@__pinctrl_state_pins_0__device_dts_ord_39 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 71, i32 512 }, %struct.vnd_sensor_config { i32 103, i32 0 }], align 4, !dbg !1910
@.str.3.138 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.144 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.5.146 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.6.147 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1297
@pclken_1 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 32, i32 16384 }], align 4, !dbg !1923
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1925
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1927
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 295, i32 512 }, %struct.vnd_sensor_config { i32 327, i32 0 }], align 4, !dbg !1929
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.7 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1938
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2047
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2049
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2045
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2016
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_62, %struct.device* @__device_dts_ord_56, %struct.device* @__device_dts_ord_57, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2051
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1585
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1602
@__device_dts_ord_62 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_62, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_62, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1611
@__device_dts_ord_56 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.129, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_56, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_56, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1620
@__device_dts_ord_57 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.130, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_57, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_57, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1626
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.131, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1635
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2138
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !2162
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !2165
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2169
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2173
@.str.181 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.185 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.186 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.187 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.191 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.192 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.193 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.194 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.195 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.190 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.189 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.191, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.192, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.193, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.194, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.195, i32 0, i32 0)], align 4
@.str.197 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.197, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2180
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2403
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2389
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2398
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2410
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2415
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.206 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.213, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.214, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.216, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.217, i32 0, i32 0)], align 4, !dbg !2443
@.str.211 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.212 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.213 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.214 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.215 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.216 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.210 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.217 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2555
@.str.8.209 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2568
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2676
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2679
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2681
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2408
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2400
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2683
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2719
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2267
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2717
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2722
@.str.290 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3379 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3383, !srcloc !3384
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3385, !srcloc !3386
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3387, !srcloc !3388
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3389, !srcloc !3390
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3391, !srcloc !3392
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3393, !srcloc !3394
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3395, !srcloc !3396
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3397, !srcloc !3398
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3403, !srcloc !3404
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3405, !srcloc !3406
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3407, !srcloc !3408
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3409, !srcloc !3410
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3411, !srcloc !3412
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3413, !srcloc !3414
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3437, !srcloc !3440
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3445, !srcloc !3446
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3447, !srcloc !3448
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3453, !srcloc !3454
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3455, !srcloc !3456
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3457, !srcloc !3458
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3459, !srcloc !3460
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3461, !srcloc !3462
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3463, !srcloc !3464
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3465, !srcloc !3466
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3467, !srcloc !3468
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3469, !srcloc !3470
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3471, !srcloc !3472
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3473, !srcloc !3474
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3475, !srcloc !3476
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3477, !srcloc !3478
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3479, !srcloc !3480
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3481, !srcloc !3482
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3483, !srcloc !3484
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3485, !srcloc !3486
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3487, !srcloc !3488
  ret void, !dbg !3489
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3492 {
  %1 = alloca [4 x i8*], align 4
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_20, metadata !3494, metadata !DIExpression()), !dbg !3546
  %2 = load %struct.rtio_iodev*, %struct.rtio_iodev** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_20, i32 0, i32 4) to %struct.rtio_iodev**), align 4, !dbg !3547
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %2, metadata !3511, metadata !DIExpression()), !dbg !3546
  call void @llvm.dbg.value(metadata i32 0, metadata !3513, metadata !DIExpression()), !dbg !3548
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3549
  br label %8, !dbg !3550

4:                                                ; preds = %46
  %5 = bitcast [4 x i8*]* %1 to i8*
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #24, !dbg !3546
  %7 = zext i8 %6 to i32
  br label %50, !dbg !3551

8:                                                ; preds = %0, %46
  %9 = phi %struct.rtio_sq* [ %3, %0 ], [ %47, %46 ], !dbg !3549
  %10 = phi i32 [ 0, %0 ], [ %48, %46 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !3513, metadata !DIExpression()), !dbg !3548
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !3549
  %12 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %11) #24, !dbg !3549
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3549
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 0, !dbg !3549
  %15 = load i32, i32* %14, align 4, !dbg !3549
  %16 = add i32 %15, %12, !dbg !3549
  call void @llvm.dbg.value(metadata i32 %16, metadata !3519, metadata !DIExpression()), !dbg !3552
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !3549
  %18 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %17) #24, !dbg !3549
  %19 = sub i32 %16, %18, !dbg !3549
  %20 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3549
  %21 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 4, !dbg !3549
  %22 = load i32, i32* %21, align 4, !dbg !3549
  %23 = add i32 %22, 1, !dbg !3549
  %24 = icmp ult i32 %19, %23, !dbg !3549
  call void @llvm.dbg.value(metadata i1 %24, metadata !3521, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3552
  br i1 %24, label %25, label %34, !dbg !3549

25:                                               ; preds = %8
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 0, !dbg !3553
  %27 = load i32, i32* %26, align 4, !dbg !3553
  %28 = add i32 %27, 1, !dbg !3553
  store i32 %28, i32* %26, align 4, !dbg !3553
  %29 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3549
  %30 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 0, i32 4, !dbg !3549
  %31 = load i32, i32* %30, align 4, !dbg !3549
  %32 = and i32 %31, %16, !dbg !3549
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 1, i32 %32, !dbg !3549
  br label %34, !dbg !3549

34:                                               ; preds = %8, %25
  %35 = phi %struct.rtio_sqe* [ %33, %25 ], [ null, %8 ], !dbg !3549
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !3515, metadata !DIExpression()), !dbg !3556
  %36 = getelementptr inbounds [8 x [16 x i8]], [8 x [16 x i8]]* @bufs, i32 0, i32 %10, i32 0, !dbg !3557
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %35, %struct.rtio_iodev* noundef %2, i8* noundef nonnull %36, i8* noundef nonnull %36) #24, !dbg !3558
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3559
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 0, !dbg !3559
  %39 = load i32, i32* %38, align 4, !dbg !3559
  %40 = icmp eq i32 %39, 0, !dbg !3559
  br i1 %40, label %46, label %41, !dbg !3562

41:                                               ; preds = %34
  %42 = add i32 %39, -1, !dbg !3563
  store i32 %42, i32* %38, align 4, !dbg !3563
  %43 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3563
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %43, i32 0, i32 0, i32 2, !dbg !3563
  tail call fastcc void @atomic_add(i32* noundef nonnull %44, i32 noundef 1) #24, !dbg !3563
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3549
  br label %46, !dbg !3563

46:                                               ; preds = %41, %34
  %47 = phi %struct.rtio_sq* [ %45, %41 ], [ %37, %34 ]
  %48 = add nuw nsw i32 %10, 1, !dbg !3565
  call void @llvm.dbg.value(metadata i32 %48, metadata !3513, metadata !DIExpression()), !dbg !3548
  %49 = icmp eq i32 %48, 8, !dbg !3566
  br i1 %49, label %4, label %8, !dbg !3550, !llvm.loop !3567

50:                                               ; preds = %4, %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3522, metadata !DIExpression()), !dbg !3569
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3570
  call void @llvm.dbg.declare(metadata [4 x i8*]* %1, metadata !3524, metadata !DIExpression()), !dbg !3571
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3572
  tail call fastcc void @rtio_submit() #24, !dbg !3577
  call void @llvm.dbg.value(metadata i32 0, metadata !3522, metadata !DIExpression()), !dbg !3569
  br label %51, !dbg !3578

51:                                               ; preds = %50, %97
  %52 = phi i32 [ 0, %50 ], [ %98, %97 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !3522, metadata !DIExpression()), !dbg !3569
  %53 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3579
  %54 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %53, i32 0, i32 0, i32 3, !dbg !3579
  %55 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %54) #24, !dbg !3579
  %56 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3579
  %57 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 1, !dbg !3579
  %58 = load i32, i32* %57, align 4, !dbg !3579
  %59 = add i32 %58, %55, !dbg !3579
  call void @llvm.dbg.value(metadata i32 %59, metadata !3529, metadata !DIExpression()), !dbg !3580
  %60 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 2, !dbg !3579
  %61 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %60) #24, !dbg !3579
  %62 = icmp eq i32 %59, %61, !dbg !3579
  call void @llvm.dbg.value(metadata i1 %62, metadata !3531, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3580
  br i1 %62, label %63, label %66, !dbg !3579

63:                                               ; preds = %51
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3581
  %64 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3582
  %65 = zext i8 %64 to i32, !dbg !3582
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i32 0, i32 0), i32 noundef %65) #25, !dbg !3582
  tail call fastcc void @k_msleep(i32 noundef 100) #24, !dbg !3589
  br label %97, !dbg !3590, !llvm.loop !3591

66:                                               ; preds = %51
  %67 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3593
  %68 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %67, i32 0, i32 0, i32 1, !dbg !3593
  %69 = load i32, i32* %68, align 4, !dbg !3593
  %70 = add i32 %69, 1, !dbg !3593
  store i32 %70, i32* %68, align 4, !dbg !3593
  %71 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3579
  %72 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 0, i32 4, !dbg !3579
  %73 = load i32, i32* %72, align 4, !dbg !3579
  %74 = and i32 %73, %59, !dbg !3579
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3581
  %75 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3596
  %76 = zext i8 %75 to i32, !dbg !3596
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 noundef %76, i32 noundef %52) #25, !dbg !3596
  %77 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 0, !dbg !3601
  %78 = load i32, i32* %77, align 4, !dbg !3601
  %79 = icmp slt i32 %78, 0, !dbg !3603
  br i1 %79, label %80, label %83, !dbg !3604

80:                                               ; preds = %66
  %81 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #24, !dbg !3605
  %82 = zext i8 %81 to i32, !dbg !3605
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i32 noundef %82) #25, !dbg !3605
  br label %83, !dbg !3611

83:                                               ; preds = %80, %66
  %84 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 1, !dbg !3612
  %85 = load i8*, i8** %84, align 4, !dbg !3612
  %86 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %52, !dbg !3613
  store i8* %85, i8** %86, align 4, !dbg !3614
  %87 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3615
  %88 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %87, i32 0, i32 0, i32 1, !dbg !3615
  %89 = load i32, i32* %88, align 4, !dbg !3615
  %90 = icmp eq i32 %89, 0, !dbg !3615
  br i1 %90, label %95, label %91, !dbg !3618

91:                                               ; preds = %83
  %92 = add i32 %89, -1, !dbg !3619
  store i32 %92, i32* %88, align 4, !dbg !3619
  %93 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3619
  %94 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %93, i32 0, i32 0, i32 3, !dbg !3619
  tail call fastcc void @atomic_add(i32* noundef nonnull %94, i32 noundef 1) #24, !dbg !3619
  br label %95, !dbg !3619

95:                                               ; preds = %91, %83
  %96 = add nsw i32 %52, 1, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %96, metadata !3522, metadata !DIExpression()), !dbg !3569
  br label %97, !dbg !3592

97:                                               ; preds = %95, %63
  %98 = phi i32 [ %52, %63 ], [ %96, %95 ], !dbg !3569
  call void @llvm.dbg.value(metadata i32 %98, metadata !3522, metadata !DIExpression()), !dbg !3569
  %99 = icmp slt i32 %98, 4, !dbg !3622
  br i1 %99, label %51, label %100, !dbg !3578

100:                                              ; preds = %97
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3623
  call void @llvm.dbg.value(metadata i32 0, metadata !3522, metadata !DIExpression()), !dbg !3569
  %101 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3546
  %102 = zext i8 %101 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !3522, metadata !DIExpression()), !dbg !3569
  br label %103, !dbg !3628

103:                                              ; preds = %100, %103
  %104 = phi i32 [ 0, %100 ], [ %107, %103 ]
  call void @llvm.dbg.value(metadata i32 %104, metadata !3522, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), metadata !3532, metadata !DIExpression()), !dbg !3629
  call void @llvm.dbg.value(metadata i1 false, metadata !3537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3629
  call void @llvm.dbg.value(metadata i32 0, metadata !3538, metadata !DIExpression()), !dbg !3629
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 noundef %102, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0)) #25, !dbg !3630
  %105 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %104, !dbg !3634
  %106 = load i8*, i8** %105, align 4, !dbg !3634
  tail call void @z_log_minimal_hexdump_print(i32 noundef 4, i8* noundef %106, i32 noundef 16) #25, !dbg !3634
  %107 = add nuw nsw i32 %104, 1, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %107, metadata !3522, metadata !DIExpression()), !dbg !3569
  %108 = icmp eq i32 %107, 4, !dbg !3636
  br i1 %108, label %109, label %103, !dbg !3628, !llvm.loop !3637

109:                                              ; preds = %103
  tail call fastcc void @k_msleep(i32 noundef 300) #24, !dbg !3639
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3640
  call void @llvm.dbg.value(metadata i32 0, metadata !3522, metadata !DIExpression()), !dbg !3569
  %110 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3645
  br label %111, !dbg !3646

111:                                              ; preds = %109, %150
  %112 = phi %struct.rtio_sq* [ %110, %109 ], [ %151, %150 ], !dbg !3645
  %113 = phi i32 [ 0, %109 ], [ %152, %150 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !3522, metadata !DIExpression()), !dbg !3569
  %114 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %112, i32 0, i32 0, i32 2, !dbg !3645
  %115 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %114) #24, !dbg !3645
  %116 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3645
  %117 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 0, !dbg !3645
  %118 = load i32, i32* %117, align 4, !dbg !3645
  %119 = add i32 %118, %115, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %119, metadata !3543, metadata !DIExpression()), !dbg !3647
  %120 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 3, !dbg !3645
  %121 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %120) #24, !dbg !3645
  %122 = sub i32 %119, %121, !dbg !3645
  %123 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3645
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 4, !dbg !3645
  %125 = load i32, i32* %124, align 4, !dbg !3645
  %126 = add i32 %125, 1, !dbg !3645
  %127 = icmp ult i32 %122, %126, !dbg !3645
  call void @llvm.dbg.value(metadata i1 %127, metadata !3545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3647
  br i1 %127, label %128, label %137, !dbg !3645

128:                                              ; preds = %111
  %129 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 0, !dbg !3648
  %130 = load i32, i32* %129, align 4, !dbg !3648
  %131 = add i32 %130, 1, !dbg !3648
  store i32 %131, i32* %129, align 4, !dbg !3648
  %132 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3645
  %133 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 0, i32 4, !dbg !3645
  %134 = load i32, i32* %133, align 4, !dbg !3645
  %135 = and i32 %134, %119, !dbg !3645
  %136 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 1, i32 %135, !dbg !3645
  br label %137, !dbg !3645

137:                                              ; preds = %111, %128
  %138 = phi %struct.rtio_sqe* [ %136, %128 ], [ null, %111 ], !dbg !3645
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %138, metadata !3539, metadata !DIExpression()), !dbg !3651
  %139 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %113, !dbg !3652
  %140 = load i8*, i8** %139, align 4, !dbg !3652
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %138, %struct.rtio_iodev* noundef %2, i8* noundef %140, i8* noundef %140) #24, !dbg !3653
  %141 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3654
  %142 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %141, i32 0, i32 0, i32 0, !dbg !3654
  %143 = load i32, i32* %142, align 4, !dbg !3654
  %144 = icmp eq i32 %143, 0, !dbg !3654
  br i1 %144, label %150, label %145, !dbg !3657

145:                                              ; preds = %137
  %146 = add i32 %143, -1, !dbg !3658
  store i32 %146, i32* %142, align 4, !dbg !3658
  %147 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3658
  %148 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %147, i32 0, i32 0, i32 2, !dbg !3658
  tail call fastcc void @atomic_add(i32* noundef nonnull %148, i32 noundef 1) #24, !dbg !3658
  %149 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3645
  br label %150, !dbg !3658

150:                                              ; preds = %145, %137
  %151 = phi %struct.rtio_sq* [ %149, %145 ], [ %141, %137 ]
  %152 = add nuw nsw i32 %113, 1, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %152, metadata !3522, metadata !DIExpression()), !dbg !3569
  %153 = icmp eq i32 %152, 4, !dbg !3661
  br i1 %153, label %154, label %111, !dbg !3646, !llvm.loop !3662

154:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3664
  br label %50, !dbg !3551, !llvm.loop !3665
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !3666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3671, metadata !DIExpression()), !dbg !3672
  %2 = add i32 %0, -1, !dbg !3673
  %3 = icmp ult i32 %2, 4, !dbg !3673
  %4 = shl i32 %2, 3, !dbg !3673
  %5 = lshr i32 1145657157, %4, !dbg !3673
  %6 = trunc i32 %5 to i8, !dbg !3673
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3673
  ret i8 %7, !dbg !3674
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3675 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3683, metadata !DIExpression()), !dbg !3684
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3685
  ret i32 %2, !dbg !3686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* nocapture noundef writeonly %0, %struct.rtio_iodev* noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #6 !dbg !3687 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3691, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %1, metadata !3692, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 -1, metadata !3693, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %2, metadata !3694, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 16, metadata !3695, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %3, metadata !3696, metadata !DIExpression()), !dbg !3697
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 0, !dbg !3698
  store i8 1, i8* %5, align 4, !dbg !3699
  %6 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 1, !dbg !3700
  store i8 -1, i8* %6, align 1, !dbg !3701
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3702
  store %struct.rtio_iodev* %1, %struct.rtio_iodev** %7, align 4, !dbg !3703
  %8 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 0, !dbg !3704
  store i32 16, i32* %8, align 4, !dbg !3705
  %9 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 1, !dbg !3706
  store i8* %2, i8** %9, align 4, !dbg !3707
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 4, !dbg !3708
  store i8* %3, i8** %10, align 4, !dbg !3709
  ret void, !dbg !3710
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3711 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3716, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.value(metadata i32 %1, metadata !3717, metadata !DIExpression()), !dbg !3718
  %3 = atomicrmw add i32* %0, i32 %1 seq_cst, align 4, !dbg !3719
  ret void, !dbg !3720
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_submit() unnamed_addr #1 !dbg !3721 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3726, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i32 4, metadata !3727, metadata !DIExpression()), !dbg !3728
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3729, !srcloc !3731
  tail call fastcc void @z_impl_rtio_submit() #24, !dbg !3732
  ret void, !dbg !3733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3738, metadata !DIExpression()), !dbg !3739
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3740
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3741
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3741
  ret void, !dbg !3742
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3743 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3748, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i64 %0, metadata !3750, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 1000, metadata !3755, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 10000, metadata !3756, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i8 1, metadata !3757, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i8 0, metadata !3758, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i8 1, metadata !3759, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i8 0, metadata !3760, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i8 1, metadata !3761, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i8 0, metadata !3762, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i64 0, metadata !3763, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i64 0, metadata !3763, metadata !DIExpression()), !dbg !3767
  %2 = mul i64 %0, 10, !dbg !3769
  ret i64 %2, !dbg !3775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3776 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3785, metadata !DIExpression()), !dbg !3786
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3787, !srcloc !3789
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3790
  ret void, !dbg !3791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_rtio_submit() unnamed_addr #1 !dbg !3792 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3794, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.value(metadata i32 4, metadata !3795, metadata !DIExpression()), !dbg !3801
  %1 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3802
  %2 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %1, i32 0, i32 0, i32 0, !dbg !3802
  %3 = load i32, i32* %2, align 4, !dbg !3802
  %4 = icmp eq i32 %3, 0, !dbg !3802
  br i1 %4, label %8, label %5, !dbg !3803

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 %3, metadata !3797, metadata !DIExpression()), !dbg !3804
  store i32 0, i32* %2, align 4, !dbg !3805
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3805
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !3805
  tail call fastcc void @atomic_add(i32* noundef nonnull %7, i32 noundef %3) #24, !dbg !3805
  br label %8, !dbg !3805

8:                                                ; preds = %5, %0
  %9 = load %struct.rtio_executor*, %struct.rtio_executor** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 0), align 4, !dbg !3806
  %10 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %9, i32 0, i32 0, !dbg !3807
  %11 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %10, align 4, !dbg !3807
  %12 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %11, i32 0, i32 0, !dbg !3808
  %13 = load i32 (%struct.rtio*)*, i32 (%struct.rtio*)** %12, align 4, !dbg !3808
  %14 = tail call i32 %13(%struct.rtio* noundef nonnull @ez_io) #25, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %14, metadata !3796, metadata !DIExpression()), !dbg !3801
  %15 = icmp eq i32 %14, 0, !dbg !3810
  br i1 %15, label %16, label %38, !dbg !3812

16:                                               ; preds = %8
  %17 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3813
  %18 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 2, !dbg !3813
  %19 = load i32, i32* %18, align 4, !dbg !3813
  %20 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 3, !dbg !3813
  %21 = load i32, i32* %20, align 4, !dbg !3813
  %22 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 1, !dbg !3813
  %23 = load i32, i32* %22, align 4, !dbg !3813
  %24 = add i32 %21, %23, !dbg !3813
  %25 = sub i32 %19, %24, !dbg !3813
  %26 = icmp ult i32 %25, 4, !dbg !3815
  br i1 %26, label %27, label %38, !dbg !3816

27:                                               ; preds = %16, %27
  tail call fastcc void @k_yield() #24, !dbg !3817
  %28 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3813
  %29 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 2, !dbg !3813
  %30 = load i32, i32* %29, align 4, !dbg !3813
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 3, !dbg !3813
  %32 = load i32, i32* %31, align 4, !dbg !3813
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 1, !dbg !3813
  %34 = load i32, i32* %33, align 4, !dbg !3813
  %35 = add i32 %32, %34, !dbg !3813
  %36 = sub i32 %30, %35, !dbg !3813
  %37 = icmp ult i32 %36, 4, !dbg !3815
  br i1 %37, label %27, label %38, !dbg !3816, !llvm.loop !3819

38:                                               ; preds = %27, %16, %8
  ret void, !dbg !3821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !3822 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3823, !srcloc !3825
  tail call void @z_impl_k_yield() #25, !dbg !3826
  ret void, !dbg !3827
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #1 !dbg !3828 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3830, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !3831, metadata !DIExpression()), !dbg !3839
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3840
  %4 = bitcast %struct.rtio_iodev** %3 to %struct.vnd_sensor_data**, !dbg !3840
  %5 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %4, align 4, !dbg !3840
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %5, metadata !3832, metadata !DIExpression()), !dbg !3839
  %6 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 2, !dbg !3841
  %7 = load %struct.device*, %struct.device** %6, align 8, !dbg !3841
  call void @llvm.dbg.value(metadata %struct.device* %7, metadata !3833, metadata !DIExpression()), !dbg !3839
  %8 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 0, i32 1, !dbg !3842
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3842
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !3842
  %11 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %10) #24, !dbg !3842
  %12 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3842
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 0, !dbg !3842
  %14 = load i32, i32* %13, align 4, !dbg !3842
  %15 = add i32 %14, %11, !dbg !3842
  call void @llvm.dbg.value(metadata i32 %15, metadata !3836, metadata !DIExpression()), !dbg !3843
  %16 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 3, !dbg !3842
  %17 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %16) #24, !dbg !3842
  %18 = sub i32 %15, %17, !dbg !3842
  %19 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3842
  %20 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 4, !dbg !3842
  %21 = load i32, i32* %20, align 4, !dbg !3842
  %22 = add i32 %21, 1, !dbg !3842
  %23 = icmp ult i32 %18, %22, !dbg !3842
  call void @llvm.dbg.value(metadata i1 %23, metadata !3838, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3843
  br i1 %23, label %24, label %42, !dbg !3842

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 0, !dbg !3844
  %26 = load i32, i32* %25, align 4, !dbg !3844
  %27 = add i32 %26, 1, !dbg !3844
  store i32 %27, i32* %25, align 4, !dbg !3844
  %28 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3842
  %29 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 0, i32 4, !dbg !3842
  %30 = load i32, i32* %29, align 4, !dbg !3842
  %31 = and i32 %30, %15, !dbg !3842
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3834, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3839
  %32 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 0, !dbg !3847
  store %struct.rtio_sqe* %0, %struct.rtio_sqe** %32, align 4, !dbg !3850
  %33 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 1, !dbg !3851
  store %struct.rtio* %1, %struct.rtio** %33, align 4, !dbg !3852
  %34 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3853
  %35 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %34, i32 0, i32 0, i32 0, !dbg !3853
  %36 = load i32, i32* %35, align 4, !dbg !3853
  %37 = icmp eq i32 %36, 0, !dbg !3853
  br i1 %37, label %47, label %38, !dbg !3856

38:                                               ; preds = %24
  %39 = add i32 %36, -1, !dbg !3857
  store i32 %39, i32* %35, align 4, !dbg !3857
  %40 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3857
  %41 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %40, i32 0, i32 0, i32 2, !dbg !3857
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %41) #24, !dbg !3857
  br label %47, !dbg !3857

42:                                               ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3834, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3839
  %43 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !3859
  %44 = zext i8 %43 to i32, !dbg !3859
  %45 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !3859
  %46 = load i8*, i8** %45, align 4, !dbg !3859
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef %44, i8* noundef %46) #25, !dbg !3859
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %1, %struct.rtio_sqe* noundef nonnull %0, i32 noundef -11) #24, !dbg !3865
  br label %47

47:                                               ; preds = %24, %38, %42
  ret void, !dbg !3866
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.13(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3867 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3869, metadata !DIExpression()), !dbg !3870
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3871
  ret i32 %2, !dbg !3872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.14(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3873 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3875, metadata !DIExpression()), !dbg !3877
  call void @llvm.dbg.value(metadata i32 1, metadata !3876, metadata !DIExpression()), !dbg !3877
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !3878
  ret void, !dbg !3879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef %0) unnamed_addr #4 !dbg !3880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3882, metadata !DIExpression()), !dbg !3883
  %2 = add i32 %0, -1, !dbg !3884
  %3 = icmp ult i32 %2, 4, !dbg !3884
  %4 = shl i32 %2, 3, !dbg !3884
  %5 = lshr i32 1145657157, %4, !dbg !3884
  %6 = trunc i32 %5 to i8, !dbg !3884
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3884
  ret i8 %7, !dbg !3885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3886 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !3888, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !3889, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i32 %2, metadata !3890, metadata !DIExpression()), !dbg !3891
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !3892
  %5 = load %struct.rtio_executor*, %struct.rtio_executor** %4, align 4, !dbg !3892
  %6 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %5, i32 0, i32 0, !dbg !3893
  %7 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %6, align 4, !dbg !3893
  %8 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %7, i32 0, i32 2, !dbg !3894
  %9 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %8, align 4, !dbg !3894
  tail call void %9(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) #25, !dbg !3895
  ret void, !dbg !3896
}

; Function Attrs: noinline nounwind optsize
define internal i32 @vnd_sensor_init(%struct.device* noundef %0) #1 !dbg !3897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3899, metadata !DIExpression()), !dbg !3904
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3905
  %3 = bitcast i8** %2 to %struct.vnd_sensor_config**, !dbg !3905
  %4 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %3, align 4, !dbg !3905
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %4, metadata !3900, metadata !DIExpression()), !dbg !3904
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3906
  %6 = bitcast i8** %5 to %struct.vnd_sensor_data**, !dbg !3906
  %7 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %6, align 4, !dbg !3906
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %7, metadata !3902, metadata !DIExpression()), !dbg !3904
  %8 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %4, i32 0, i32 0, !dbg !3907
  %9 = load i32, i32* %8, align 4, !dbg !3907
  call void @llvm.dbg.value(metadata i32 %9, metadata !3903, metadata !DIExpression()), !dbg !3904
  %10 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 2, !dbg !3908
  store %struct.device* %0, %struct.device** %10, align 8, !dbg !3909
  %11 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 1, !dbg !3910
  tail call void @k_timer_init(%struct.k_timer* noundef nonnull %11, void (%struct.k_timer*)* noundef nonnull @vnd_sensor_timer_expiry, void (%struct.k_timer*)* noundef null) #25, !dbg !3911
  %12 = zext i32 %9 to i64, !dbg !3912
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %12) #24, !dbg !3912
  %14 = insertvalue [1 x i64] poison, i64 %13, 0, !dbg !3913
  tail call fastcc void @k_timer_start(%struct.k_timer* noundef nonnull %11, [1 x i64] %14, [1 x i64] %14) #24, !dbg !3913
  ret i32 0, !dbg !3914
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_timer_expiry(%struct.k_timer* nocapture noundef readonly %0) #1 !dbg !3915 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3917, metadata !DIExpression()), !dbg !3919
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 -1, i32 4, !dbg !3920
  call void @llvm.dbg.value(metadata %struct.k_timeout_t* %2, metadata !3918, metadata !DIExpression()), !dbg !3919
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 9, !dbg !3921
  %4 = bitcast %struct.k_timeout_t* %3 to %struct.device**, !dbg !3921
  %5 = load %struct.device*, %struct.device** %4, align 8, !dbg !3921
  tail call fastcc void @vnd_sensor_handle_int(%struct.device* noundef %5) #24, !dbg !3922
  ret void, !dbg !3923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %0) unnamed_addr #4 !dbg !3924 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3926, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.value(metadata i64 %0, metadata !3928, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 1000, metadata !3931, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 10000, metadata !3932, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i8 1, metadata !3933, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i8 0, metadata !3934, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i8 1, metadata !3935, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i8 0, metadata !3936, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i8 1, metadata !3937, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i8 0, metadata !3938, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i64 0, metadata !3939, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i64 0, metadata !3939, metadata !DIExpression()), !dbg !3943
  %2 = mul i64 %0, 10, !dbg !3945
  ret i64 %2, !dbg !3951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) unnamed_addr #1 !dbg !3952 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3957, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i64 undef, metadata !3958, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3956, metadata !DIExpression()), !dbg !3959
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3960, !srcloc !3962
  tail call void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) #25, !dbg !3963
  ret void, !dbg !3964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_handle_int(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3965 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3969, metadata !DIExpression()), !dbg !3975
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3976
  %3 = bitcast i8** %2 to %struct.vnd_sensor_data**, !dbg !3976
  %4 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %3, align 4, !dbg !3976
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %4, metadata !3970, metadata !DIExpression()), !dbg !3975
  %5 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %4, i32 0, i32 0, i32 1, !dbg !3977
  %6 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3977
  %7 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %6, i32 0, i32 0, i32 3, !dbg !3977
  %8 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %7) #24, !dbg !3977
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3977
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 1, !dbg !3977
  %11 = load i32, i32* %10, align 4, !dbg !3977
  %12 = add i32 %11, %8, !dbg !3977
  call void @llvm.dbg.value(metadata i32 %12, metadata !3972, metadata !DIExpression()), !dbg !3978
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !3977
  %14 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %13) #24, !dbg !3977
  %15 = icmp eq i32 %12, %14, !dbg !3977
  call void @llvm.dbg.value(metadata i1 %15, metadata !3974, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3978
  br i1 %15, label %37, label %16, !dbg !3977

16:                                               ; preds = %1
  %17 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3979
  %18 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %17, i32 0, i32 0, i32 1, !dbg !3979
  %19 = load i32, i32* %18, align 4, !dbg !3979
  %20 = add i32 %19, 1, !dbg !3979
  store i32 %20, i32* %18, align 4, !dbg !3979
  %21 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3977
  %22 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 0, i32 4, !dbg !3977
  %23 = load i32, i32* %22, align 4, !dbg !3977
  %24 = and i32 %23, %12, !dbg !3977
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !3971, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3975
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 0, !dbg !3982
  %26 = load %struct.rtio_sqe*, %struct.rtio_sqe** %25, align 4, !dbg !3982
  %27 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 1, !dbg !3985
  %28 = load %struct.rtio*, %struct.rtio** %27, align 4, !dbg !3985
  tail call fastcc void @vnd_sensor_iodev_execute(%struct.device* noundef nonnull %0, %struct.rtio_sqe* noundef %26, %struct.rtio* noundef %28) #24, !dbg !3986
  %29 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3987
  %30 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %29, i32 0, i32 0, i32 1, !dbg !3987
  %31 = load i32, i32* %30, align 4, !dbg !3987
  %32 = icmp eq i32 %31, 0, !dbg !3987
  br i1 %32, label %42, label %33, !dbg !3990

33:                                               ; preds = %16
  %34 = add i32 %31, -1, !dbg !3991
  store i32 %34, i32* %30, align 4, !dbg !3991
  %35 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3991
  %36 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %35, i32 0, i32 0, i32 3, !dbg !3991
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %36) #24, !dbg !3991
  br label %42, !dbg !3991

37:                                               ; preds = %1
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !3971, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3975
  %38 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !3993
  %39 = zext i8 %38 to i32, !dbg !3993
  %40 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !3993
  %41 = load i8*, i8** %40, align 4, !dbg !3993
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.19, i32 0, i32 0), i32 noundef %39, i8* noundef %41) #25, !dbg !3993
  br label %42

42:                                               ; preds = %16, %33, %37
  ret void, !dbg !3999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_iodev_execute(%struct.device* nocapture noundef readonly %0, %struct.rtio_sqe* noundef %1, %struct.rtio* noundef %2) unnamed_addr #1 !dbg !4000 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4004, metadata !DIExpression()), !dbg !4008
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4005, metadata !DIExpression()), !dbg !4008
  call void @llvm.dbg.value(metadata %struct.rtio* %2, metadata !4006, metadata !DIExpression()), !dbg !4008
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 0, !dbg !4009
  %5 = load i8, i8* %4, align 4, !dbg !4009
  %6 = icmp eq i8 %5, 1, !dbg !4011
  br i1 %6, label %12, label %7, !dbg !4012

7:                                                ; preds = %3
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4013
  %9 = zext i8 %8 to i32, !dbg !4013
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4013
  %11 = load i8*, i8** %10, align 4, !dbg !4013
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.20, i32 0, i32 0), i32 noundef %9, i8* noundef %11) #25, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %17, metadata !4007, metadata !DIExpression()), !dbg !4008
  br label %19, !dbg !4019

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 1, !dbg !4020
  %14 = load i8*, i8** %13, align 4, !dbg !4020
  %15 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 0, !dbg !4022
  %16 = load i32, i32* %15, align 4, !dbg !4022
  %17 = tail call fastcc i32 @vnd_sensor_iodev_read(%struct.device* noundef %0, i8* noundef %14, i32 noundef %16) #24, !dbg !4023
  call void @llvm.dbg.value(metadata i32 %17, metadata !4007, metadata !DIExpression()), !dbg !4008
  %18 = icmp slt i32 %17, 0, !dbg !4024
  br i1 %18, label %19, label %21, !dbg !4019

19:                                               ; preds = %7, %12
  %20 = phi i32 [ -22, %7 ], [ %17, %12 ]
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1, i32 noundef %20) #24, !dbg !4026
  br label %22, !dbg !4028

21:                                               ; preds = %12
  tail call fastcc void @rtio_sqe_ok(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1) #24, !dbg !4029
  br label %22

22:                                               ; preds = %21, %19
  ret void, !dbg !4031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @vnd_sensor_iodev_read(%struct.device* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !4032 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4036, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i8* %1, metadata !4037, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 %2, metadata !4038, metadata !DIExpression()), !dbg !4045
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4046
  %5 = bitcast i8** %4 to %struct.vnd_sensor_config**, !dbg !4046
  %6 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %5, align 4, !dbg !4046
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %6, metadata !4039, metadata !DIExpression()), !dbg !4045
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4047
  %8 = bitcast i8** %7 to %struct.vnd_sensor_data**, !dbg !4047
  %9 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %8, align 4, !dbg !4047
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %9, metadata !4040, metadata !DIExpression()), !dbg !4045
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 4) #24, !dbg !4048
  %11 = zext i8 %10 to i32, !dbg !4048
  %12 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4048
  %13 = load i8*, i8** %12, align 4, !dbg !4048
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.21, i32 0, i32 0), i32 noundef %11, i8* noundef %13, i32 noundef %2, i8* noundef %1) #25, !dbg !4048
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4053, !srcloc !4062
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !4053
  call void @llvm.dbg.value(metadata i32 %15, metadata !4059, metadata !DIExpression()) #23, !dbg !4063
  call void @llvm.dbg.value(metadata i32 undef, metadata !4060, metadata !DIExpression()) #23, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %15, metadata !4042, metadata !DIExpression()), !dbg !4045
  %16 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %9, i32 0, i32 4, !dbg !4064
  %17 = load i32, i32* %16, align 4, !dbg !4065
  %18 = add i32 %17, 1, !dbg !4065
  store i32 %18, i32* %16, align 4, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %17, metadata !4041, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 %15, metadata !4066, metadata !DIExpression()) #23, !dbg !4071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !4073, !srcloc !4074
  %19 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %6, i32 0, i32 1, !dbg !4075
  %20 = load i32, i32* %19, align 4, !dbg !4075
  %21 = icmp ugt i32 %20, %2, !dbg !4077
  br i1 %21, label %26, label %22, !dbg !4078

22:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !4043, metadata !DIExpression()), !dbg !4079
  %23 = icmp ult i32 %20, %2, !dbg !4080
  %24 = select i1 %23, i32 %20, i32 %2, !dbg !4080
  %25 = icmp eq i32 %24, 0, !dbg !4082
  br i1 %25, label %42, label %30, !dbg !4083

26:                                               ; preds = %3
  %27 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4084
  %28 = zext i8 %27 to i32, !dbg !4084
  %29 = load i8*, i8** %12, align 4, !dbg !4084
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.22, i32 0, i32 0), i32 noundef %28, i8* noundef %29) #25, !dbg !4084
  br label %42, !dbg !4090

30:                                               ; preds = %22, %30
  %31 = phi i32 [ %38, %30 ], [ %20, %22 ]
  %32 = phi i32 [ %37, %30 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !4043, metadata !DIExpression()), !dbg !4079
  %33 = mul i32 %31, %17, !dbg !4091
  %34 = add i32 %33, %32, !dbg !4093
  %35 = trunc i32 %34 to i8, !dbg !4094
  %36 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !4095
  store i8 %35, i8* %36, align 1, !dbg !4096
  %37 = add nuw nsw i32 %32, 1, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %37, metadata !4043, metadata !DIExpression()), !dbg !4079
  %38 = load i32, i32* %19, align 4, !dbg !4080
  %39 = icmp ult i32 %38, %2, !dbg !4080
  %40 = select i1 %39, i32 %38, i32 %2, !dbg !4080
  %41 = icmp ult i32 %37, %40, !dbg !4082
  br i1 %41, label %30, label %42, !dbg !4083, !llvm.loop !4098

42:                                               ; preds = %30, %22, %26
  %43 = phi i32 [ -12, %26 ], [ 0, %22 ], [ 0, %30 ], !dbg !4045
  ret i32 %43, !dbg !4100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1) unnamed_addr #1 !dbg !4101 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !4103, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4104, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.value(metadata i32 0, metadata !4105, metadata !DIExpression()), !dbg !4106
  %3 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !4107
  %4 = load %struct.rtio_executor*, %struct.rtio_executor** %3, align 4, !dbg !4107
  %5 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %4, i32 0, i32 0, !dbg !4108
  %6 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %5, align 4, !dbg !4108
  %7 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %6, i32 0, i32 1, !dbg !4109
  %8 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %7, align 4, !dbg !4109
  tail call void %8(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef 0) #25, !dbg !4110
  ret void, !dbg !4111
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4112 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %0, metadata !4123, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %1, metadata !4124, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %2, metadata !4125, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %3, metadata !4126, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %0, metadata !4128, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %0, metadata !4129, metadata !DIExpression()), !dbg !4190
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4191
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4191
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4132, metadata !DIExpression()), !dbg !4192
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4193
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4193
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4134, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.value(metadata i32 0, metadata !4135, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4136, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4137, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 -1, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 0, metadata !4141, metadata !DIExpression()), !dbg !4190
  %12 = and i32 %2, 4, !dbg !4195
  %13 = icmp eq i32 %12, 0, !dbg !4196
  call void @llvm.dbg.value(metadata i1 %13, metadata !4142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4190
  %14 = lshr i32 %2, 3, !dbg !4197
  %15 = and i32 %14, 7, !dbg !4197
  %16 = add nuw nsw i32 %15, 1, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %16, metadata !4143, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 0, metadata !4144, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %0, metadata !4145, metadata !DIExpression()), !dbg !4190
  %17 = ptrtoint i8* %0 to i32, !dbg !4199
  %18 = and i32 %17, 3, !dbg !4201
  %19 = icmp eq i32 %18, 0, !dbg !4201
  br i1 %19, label %20, label %316, !dbg !4202

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4203
  call void @llvm.dbg.value(metadata i8* %21, metadata !4129, metadata !DIExpression()), !dbg !4190
  %22 = icmp eq i8* %0, null, !dbg !4204
  %23 = and i32 %1, 7, !dbg !4206
  %24 = sub nuw nsw i32 8, %23, !dbg !4206
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4206
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4206
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %27, metadata !4124, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %26, metadata !4129, metadata !DIExpression()), !dbg !4190
  br i1 %22, label %33, label %28, !dbg !4207

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4209
  %30 = sub i32 4, %17, !dbg !4209
  %31 = add i32 %30, %29, !dbg !4210
  %32 = icmp ugt i32 %31, %27, !dbg !4211
  br i1 %32, label %316, label %33, !dbg !4212

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4213
  call void @llvm.dbg.value(metadata i8* %34, metadata !4126, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %3, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 4, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 4, metadata !4130, metadata !DIExpression()), !dbg !4190
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4214

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %42, metadata !4126, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %43, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %44, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %45, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %72, metadata !4138, metadata !DIExpression()), !dbg !4190
  br i1 %46, label %73, label %47, !dbg !4215

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4216
  %49 = zext i1 %48 to i32, !dbg !4220
  %50 = add nsw i32 %72, %49, !dbg !4220
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4220
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %52, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %51, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4141, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %50, metadata !4138, metadata !DIExpression()), !dbg !4190
  br label %53, !dbg !4221

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %40, metadata !4126, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %58, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %57, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %56, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4141, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %54, metadata !4138, metadata !DIExpression()), !dbg !4190
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4222
  call void @llvm.dbg.value(metadata i8* %60, metadata !4126, metadata !DIExpression()), !dbg !4190
  %61 = load i8, i8* %60, align 1, !dbg !4224
  %62 = icmp eq i8 %61, 0, !dbg !4225
  br i1 %62, label %223, label %63, !dbg !4226, !llvm.loop !4227

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4215

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4230

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4141, metadata !DIExpression()), !dbg !4190
  %75 = add nsw i32 %72, -1, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %75, metadata !4138, metadata !DIExpression()), !dbg !4190
  br label %53, !dbg !4232

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4233

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 4, metadata !4130, metadata !DIExpression()), !dbg !4190
  br label %53, !dbg !4234

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 4, metadata !4130, metadata !DIExpression()), !dbg !4190
  br label %53, !dbg !4235

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4236
  %81 = icmp eq i8 %80, 108, !dbg !4238
  br i1 %81, label %82, label %109, !dbg !4239

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4240
  %84 = load i8, i8* %83, align 1, !dbg !4240
  %85 = icmp eq i8 %84, 108, !dbg !4243
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4244
  %89 = add i32 %88, 7, !dbg !4244
  %90 = and i32 %89, -8, !dbg !4244
  %91 = inttoptr i32 %90 to i8*, !dbg !4244
  %92 = inttoptr i32 %90 to double*, !dbg !4244
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4244
  %94 = load double, double* %92, align 8, !dbg !4244
  call void @llvm.dbg.value(metadata i8* %93, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 8, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 8, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata double %94, metadata !4158, metadata !DIExpression()), !dbg !4246
  %95 = ptrtoint i8* %43 to i32, !dbg !4247
  %96 = add i32 %95, 7, !dbg !4247
  %97 = and i32 %96, -8, !dbg !4247
  %98 = inttoptr i32 %97 to i8*, !dbg !4248
  call void @llvm.dbg.value(metadata i8* %98, metadata !4129, metadata !DIExpression()), !dbg !4190
  br i1 %22, label %104, label %99, !dbg !4249

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4250
  %101 = icmp ugt i32 %100, %194, !dbg !4254
  br i1 %101, label %316, label %102, !dbg !4255

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4256
  store double %94, double* %103, align 8, !dbg !4256
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4259
  call void @llvm.dbg.value(metadata i8* %105, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4141, metadata !DIExpression()), !dbg !4190
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4141, metadata !DIExpression()), !dbg !4190
  br label %53, !dbg !4260

107:                                              ; preds = %73, %73
  br label %109, !dbg !4261

108:                                              ; preds = %73
  br label %109, !dbg !4261

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4190
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4190
  call void @llvm.dbg.value(metadata i32 %113, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %112, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4144, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4141, metadata !DIExpression()), !dbg !4190
  %114 = ptrtoint i8* %43 to i32, !dbg !4261
  %115 = add i32 %114, -1, !dbg !4261
  %116 = add i32 %115, %112, !dbg !4261
  %117 = sub i32 0, %112, !dbg !4261
  %118 = and i32 %116, %117, !dbg !4261
  %119 = inttoptr i32 %118 to i8*, !dbg !4262
  call void @llvm.dbg.value(metadata i8* %119, metadata !4129, metadata !DIExpression()), !dbg !4190
  br i1 %22, label %124, label %120, !dbg !4263

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4265
  %122 = add i32 %121, %118, !dbg !4266
  %123 = icmp ugt i32 %122, %194, !dbg !4267
  br i1 %123, label %316, label %124, !dbg !4268

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4269

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4262
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4270
  call void @llvm.dbg.value(metadata i8* %127, metadata !4127, metadata !DIExpression()), !dbg !4190
  %128 = bitcast i8* %41 to i8**, !dbg !4270
  %129 = load i8*, i8** %128, align 4, !dbg !4270
  call void @llvm.dbg.value(metadata i8* %129, metadata !4140, metadata !DIExpression()), !dbg !4190
  br label %130, !dbg !4271

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4272
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4273
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4190
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4274
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4190
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4275
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4190
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4190
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4190
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4190
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4276
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %142, metadata !4124, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %141, metadata !4126, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %140, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %139, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %138, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %137, metadata !4135, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %136, metadata !4143, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %135, metadata !4136, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4141, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %133, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %132, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %131, metadata !4137, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.label(metadata !4189), !dbg !4278
  br i1 %22, label %146, label %144, !dbg !4279

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4280
  store i8* %133, i8** %145, align 4, !dbg !4283
  br label %146, !dbg !4284

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %147, metadata !4143, metadata !DIExpression()), !dbg !4190
  %148 = icmp sgt i32 %136, 0, !dbg !4286
  br i1 %148, label %152, label %149, !dbg !4287

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !4288
  %151 = zext i1 %150 to i32, !dbg !4288
  br label %152, !dbg !4287

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4287
  %154 = icmp eq i32 %153, 0, !dbg !4287
  call void @llvm.dbg.value(metadata i1 %154, metadata !4167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4289
  call void @llvm.dbg.value(metadata i1 %36, metadata !4170, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4289
  %155 = or i1 %36, %154, !dbg !4290
  br i1 %155, label %156, label %190, !dbg !4290

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4291
  %158 = sub i32 %157, %17, !dbg !4291
  %159 = lshr i32 %158, 2, !dbg !4292
  call void @llvm.dbg.value(metadata i32 %159, metadata !4171, metadata !DIExpression()), !dbg !4293
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4294
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4294
  br i1 %163, label %316, label %164, !dbg !4294

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4296

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4297
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4300
  store i8 %166, i8* %167, align 1, !dbg !4301
  %168 = trunc i32 %132 to i8, !dbg !4302
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4303
  store i8 %168, i8* %169, align 1, !dbg !4304
  br i1 %154, label %173, label %170, !dbg !4305

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4306
  store i8 %171, i8* %167, align 1, !dbg !4306
  %172 = add i32 %131, 1, !dbg !4309
  call void @llvm.dbg.value(metadata i32 %172, metadata !4137, metadata !DIExpression()), !dbg !4190
  br label %185, !dbg !4310

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4311
  call void @llvm.dbg.value(metadata i32 %174, metadata !4136, metadata !DIExpression()), !dbg !4190
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4313

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4314
  call void @llvm.dbg.value(metadata i32 %177, metadata !4124, metadata !DIExpression()), !dbg !4190
  br label %185, !dbg !4317

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4318

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %180, metadata !4124, metadata !DIExpression()), !dbg !4190
  br label %185, !dbg !4322

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !4323
  %183 = add i32 %142, 2, !dbg !4325
  %184 = add i32 %183, %182, !dbg !4326
  call void @llvm.dbg.value(metadata i32 %184, metadata !4124, metadata !DIExpression()), !dbg !4190
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4190
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4190
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4190
  call void @llvm.dbg.value(metadata i32 %188, metadata !4124, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %187, metadata !4136, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %186, metadata !4137, metadata !DIExpression()), !dbg !4190
  %189 = add nuw nsw i32 %137, 1, !dbg !4327
  call void @llvm.dbg.value(metadata i32 undef, metadata !4124, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 undef, metadata !4135, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 undef, metadata !4136, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 undef, metadata !4137, metadata !DIExpression()), !dbg !4190
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4272
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4274
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4275
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4276
  call void @llvm.dbg.value(metadata i32 %194, metadata !4124, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %193, metadata !4135, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %192, metadata !4136, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %191, metadata !4137, metadata !DIExpression()), !dbg !4190
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4328
  call void @llvm.dbg.value(metadata i8* %195, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %143, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %141, metadata !4126, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %139, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %138, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4144, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4141, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %132, metadata !4138, metadata !DIExpression()), !dbg !4190
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4222
  call void @llvm.dbg.value(metadata i8* %196, metadata !4126, metadata !DIExpression()), !dbg !4190
  %197 = load i8, i8* %196, align 1, !dbg !4224
  %198 = icmp eq i8 %197, 0, !dbg !4225
  br i1 %198, label %223, label %63, !dbg !4226

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4329

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4330
  call void @llvm.dbg.value(metadata i8* %201, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 undef, metadata !4174, metadata !DIExpression()), !dbg !4331
  br i1 %22, label %216, label %202, !dbg !4332

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4330
  %204 = load i32, i32* %203, align 4, !dbg !4330
  call void @llvm.dbg.value(metadata i32 %204, metadata !4174, metadata !DIExpression()), !dbg !4331
  %205 = inttoptr i32 %118 to i32*, !dbg !4333
  store i32 %204, i32* %205, align 4, !dbg !4336
  br label %216, !dbg !4337

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4338
  %208 = add i32 %207, 7, !dbg !4338
  %209 = and i32 %208, -8, !dbg !4338
  %210 = inttoptr i32 %209 to i8*, !dbg !4338
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4338
  call void @llvm.dbg.value(metadata i8* %211, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i64 undef, metadata !4180, metadata !DIExpression()), !dbg !4339
  br i1 %22, label %216, label %212, !dbg !4340

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4338
  %214 = load i64, i64* %213, align 8, !dbg !4338
  call void @llvm.dbg.value(metadata i64 %214, metadata !4180, metadata !DIExpression()), !dbg !4339
  %215 = inttoptr i32 %118 to i64*, !dbg !4341
  store i64 %214, i64* %215, align 8, !dbg !4346
  br label %216, !dbg !4347

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4348
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %218, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %40, metadata !4126, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %219, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %113, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %112, metadata !4131, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4144, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 poison, metadata !4141, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %72, metadata !4138, metadata !DIExpression()), !dbg !4190
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4222
  call void @llvm.dbg.value(metadata i8* %220, metadata !4126, metadata !DIExpression()), !dbg !4190
  %221 = load i8, i8* %220, align 1, !dbg !4224
  %222 = icmp eq i8 %221, 0, !dbg !4225
  br i1 %222, label %223, label %38, !dbg !4226

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4349
  %225 = ptrtoint i8* %224 to i32, !dbg !4350
  %226 = sub i32 %225, %17, !dbg !4350
  %227 = lshr i32 %226, 2, !dbg !4352
  %228 = icmp ugt i32 %226, 1023, !dbg !4353
  br i1 %228, label %316, label %229, !dbg !4354

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4355

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4356
  %232 = add i32 %231, %226, !dbg !4359
  br label %316, !dbg !4360

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4361
  store i8 %234, i8* %0, align 1, !dbg !4362
  %235 = trunc i32 %192 to i8, !dbg !4363
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4365
  store i8 %236, i8* %238, align 1, !dbg !4367
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4368
  store i8 %237, i8* %239, align 1, !dbg !4369
  %240 = trunc i32 %191 to i8, !dbg !4370
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4371
  store i8 %240, i8* %241, align 1, !dbg !4372
  %242 = icmp eq i32 %191, 0, !dbg !4373
  %243 = xor i1 %242, true, !dbg !4374
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4374
  call void @llvm.dbg.value(metadata i8* %224, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4139, metadata !DIExpression()), !dbg !4190
  br i1 %245, label %246, label %265, !dbg !4374

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4375

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %250, metadata !4139, metadata !DIExpression()), !dbg !4190
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4376
  %252 = load i8, i8* %251, align 1, !dbg !4376
  %253 = icmp sgt i8 %252, -1, !dbg !4378
  br i1 %253, label %261, label %254, !dbg !4379

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4183, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4380
  %255 = ptrtoint i8* %249 to i32, !dbg !4381
  %256 = add i32 %247, %255, !dbg !4383
  %257 = icmp ugt i32 %256, %194, !dbg !4384
  br i1 %257, label %316, label %258, !dbg !4385

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4386
  call void @llvm.dbg.value(metadata i8 %259, metadata !4183, metadata !DIExpression()), !dbg !4380
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4387
  call void @llvm.dbg.value(metadata i8* %260, metadata !4129, metadata !DIExpression()), !dbg !4190
  store i8 %259, i8* %249, align 1, !dbg !4388
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4328
  call void @llvm.dbg.value(metadata i8* %262, metadata !4129, metadata !DIExpression()), !dbg !4190
  %263 = add nuw i32 %250, 1, !dbg !4389
  call void @llvm.dbg.value(metadata i32 %263, metadata !4139, metadata !DIExpression()), !dbg !4190
  %264 = icmp eq i32 %263, %193, !dbg !4390
  br i1 %264, label %265, label %248, !dbg !4375, !llvm.loop !4391

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4328
  call void @llvm.dbg.value(metadata i8* %266, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4139, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %133, metadata !4140, metadata !DIExpression()), !dbg !4190
  %267 = icmp eq i32 %193, 0, !dbg !4393
  br i1 %267, label %312, label %268, !dbg !4396

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4396

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %272, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %273, metadata !4139, metadata !DIExpression()), !dbg !4190
  br i1 %242, label %278, label %274, !dbg !4397

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4400
  %276 = load i8, i8* %275, align 1, !dbg !4400
  %277 = icmp sgt i8 %276, -1, !dbg !4401
  br i1 %277, label %278, label %307, !dbg !4402

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4403

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4130, metadata !DIExpression()), !dbg !4190
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4404
  %281 = load i8, i8* %280, align 1, !dbg !4404
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4407
  call void @llvm.dbg.value(metadata i8* %282, metadata !4129, metadata !DIExpression()), !dbg !4190
  store i8 %281, i8* %271, align 1, !dbg !4408
  br label %293, !dbg !4409

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4410
  %285 = load i8, i8* %284, align 1, !dbg !4410
  %286 = zext i8 %285 to i32, !dbg !4410
  %287 = shl nuw nsw i32 %286, 2, !dbg !4412
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4413
  %289 = bitcast i8* %288 to i8**, !dbg !4414
  %290 = load i8*, i8** %289, align 4, !dbg !4414
  call void @llvm.dbg.value(metadata i8* %290, metadata !4140, metadata !DIExpression()), !dbg !4190
  store i8* null, i8** %289, align 4, !dbg !4415
  %291 = tail call i32 @strlen(i8* noundef %290) #25, !dbg !4416
  %292 = add i32 %291, 1, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %292, metadata !4130, metadata !DIExpression()), !dbg !4190
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4190
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4418
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4190
  call void @llvm.dbg.value(metadata i8* %296, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %295, metadata !4130, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %294, metadata !4140, metadata !DIExpression()), !dbg !4190
  %297 = ptrtoint i8* %296 to i32, !dbg !4419
  %298 = add i32 %269, %295, !dbg !4421
  %299 = add i32 %298, %297, !dbg !4422
  %300 = icmp ugt i32 %299, %194, !dbg !4423
  br i1 %300, label %316, label %301, !dbg !4424

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4425
  %303 = load i8, i8* %302, align 1, !dbg !4425
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4426
  call void @llvm.dbg.value(metadata i8* %304, metadata !4129, metadata !DIExpression()), !dbg !4190
  store i8 %303, i8* %296, align 1, !dbg !4427
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #25, !dbg !4428
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4429
  call void @llvm.dbg.value(metadata i8* %306, metadata !4129, metadata !DIExpression()), !dbg !4190
  br label %307, !dbg !4430

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4431
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4190
  call void @llvm.dbg.value(metadata i8* %309, metadata !4129, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %308, metadata !4140, metadata !DIExpression()), !dbg !4190
  %310 = add nuw i32 %273, 1, !dbg !4432
  call void @llvm.dbg.value(metadata i32 %310, metadata !4139, metadata !DIExpression()), !dbg !4190
  %311 = icmp eq i32 %310, %193, !dbg !4393
  br i1 %311, label %312, label %270, !dbg !4396, !llvm.loop !4433

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4328
  %314 = ptrtoint i8* %313 to i32, !dbg !4435
  %315 = sub i32 %314, %17, !dbg !4435
  br label %316, !dbg !4436

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4437
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4437
  ret i32 %317, !dbg !4437
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4438 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4442, metadata !DIExpression()), !dbg !4443
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !4444
  ret i1 %2, !dbg !4445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4451, metadata !DIExpression()), !dbg !4452
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4453
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4454
  %4 = and i1 %2, %3, !dbg !4454
  ret i1 %4, !dbg !4455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4456 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4460, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i32 %1, metadata !4461, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i32 %2, metadata !4462, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8* %3, metadata !4463, metadata !DIExpression()), !dbg !4466
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4467
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4467
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4464, metadata !DIExpression()), !dbg !4468
  call void @llvm.va_start(i8* nonnull %6), !dbg !4469
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4470
  %8 = load i32, i32* %7, align 4, !dbg !4470
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4470
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %10, metadata !4465, metadata !DIExpression()), !dbg !4466
  call void @llvm.va_end(i8* nonnull %6), !dbg !4471
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4472
  ret i32 %10, !dbg !4473
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4474 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4486, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4487, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i8* %2, metadata !4488, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i8* %3, metadata !4489, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i8* %3, metadata !4490, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i8* %3, metadata !4491, metadata !DIExpression()), !dbg !4505
  %5 = icmp eq i8* %3, null, !dbg !4506
  br i1 %5, label %45, label %6, !dbg !4508

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4500, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4505
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4509
  %8 = load i8, i8* %7, align 1, !dbg !4509
  %9 = zext i8 %8 to i32, !dbg !4510
  call void @llvm.dbg.value(metadata i32 %9, metadata !4501, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i8 undef, metadata !4502, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4505
  call void @llvm.dbg.value(metadata i8 undef, metadata !4503, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4505
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  call void @llvm.dbg.value(metadata i32 0, metadata !4499, metadata !DIExpression()), !dbg !4505
  %10 = icmp eq i8 %8, 0, !dbg !4511
  br i1 %10, label %39, label %11, !dbg !4514

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4515
  call void @llvm.dbg.value(metadata i8 %12, metadata !4500, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4505
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %13 = zext i8 %12 to i32, !dbg !4516
  call void @llvm.dbg.value(metadata i32 %13, metadata !4500, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4505
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %14 = shl nuw nsw i32 %13, 2, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %14, metadata !4500, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4518
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4519
  %17 = load i8, i8* %16, align 1, !dbg !4519
  call void @llvm.dbg.value(metadata i8 %17, metadata !4502, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4505
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %18 = zext i8 %17 to i32, !dbg !4520
  call void @llvm.dbg.value(metadata i32 %18, metadata !4502, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4521
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4522
  %21 = load i8, i8* %20, align 1, !dbg !4522
  call void @llvm.dbg.value(metadata i8 %21, metadata !4503, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4505
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %22 = zext i8 %21 to i32, !dbg !4523
  call void @llvm.dbg.value(metadata i32 %22, metadata !4503, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %23 = shl nuw nsw i32 %22, 1, !dbg !4524
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4505
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4525
  call void @llvm.dbg.value(metadata i8* %24, metadata !4497, metadata !DIExpression()), !dbg !4505
  br label %25, !dbg !4514

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4497, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i32 %27, metadata !4499, metadata !DIExpression()), !dbg !4505
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4526
  call void @llvm.dbg.value(metadata i8* %28, metadata !4497, metadata !DIExpression()), !dbg !4505
  %29 = load i8, i8* %26, align 1, !dbg !4528
  %30 = zext i8 %29 to i32, !dbg !4528
  call void @llvm.dbg.value(metadata i32 %30, metadata !4504, metadata !DIExpression()), !dbg !4505
  %31 = shl nuw nsw i32 %30, 2, !dbg !4529
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4530
  %33 = bitcast i8* %32 to i8**, !dbg !4531
  call void @llvm.dbg.value(metadata i8** %33, metadata !4498, metadata !DIExpression()), !dbg !4505
  store i8* %28, i8** %33, align 4, !dbg !4532
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !4533
  %35 = add i32 %34, 1, !dbg !4534
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4535
  call void @llvm.dbg.value(metadata i8* %36, metadata !4497, metadata !DIExpression()), !dbg !4505
  %37 = add nuw nsw i32 %27, 1, !dbg !4536
  call void @llvm.dbg.value(metadata i32 %37, metadata !4499, metadata !DIExpression()), !dbg !4505
  %38 = icmp eq i32 %37, %9, !dbg !4511
  br i1 %38, label %39, label %25, !dbg !4514, !llvm.loop !4537

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4539
  call void @llvm.dbg.value(metadata i8* %40, metadata !4490, metadata !DIExpression()), !dbg !4505
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4540
  %42 = bitcast i8* %41 to i8**, !dbg !4540
  %43 = load i8*, i8** %42, align 1, !dbg !4540
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !4541
  br label %45, !dbg !4542

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4505
  ret i32 %46, !dbg !4543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4544 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4548, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4549, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i8* %2, metadata !4550, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i8* %3, metadata !4551, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i8* %4, metadata !4552, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i8* %4, metadata !4553, metadata !DIExpression()), !dbg !4558
  %6 = ptrtoint i8* %4 to i32, !dbg !4559
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4559
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !4559
  ret i32 %8, !dbg !4560
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !4561 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4565, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %1, metadata !4566, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8 0, metadata !4568, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 0, metadata !4569, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8 poison, metadata !4568, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %0, metadata !4565, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4570
  %3 = load i8, i8* %0, align 1, !dbg !4571
  call void @llvm.dbg.value(metadata i8 %3, metadata !4567, metadata !DIExpression()), !dbg !4570
  %4 = icmp eq i8 %3, 0, !dbg !4572
  br i1 %4, label %29, label %5, !dbg !4573

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4574
  call void @llvm.dbg.value(metadata i32 %8, metadata !4569, metadata !DIExpression()), !dbg !4570
  br i1 %9, label %11, label %22, !dbg !4575

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4577
  br i1 %12, label %13, label %17, !dbg !4581

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4582
  br i1 %14, label %29, label %15, !dbg !4585

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4586
  br i1 %16, label %29, label %22, !dbg !4588

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4589
  %19 = xor i1 %18, true, !dbg !4591
  %20 = zext i1 %18 to i32, !dbg !4591
  %21 = add nsw i32 %8, %20, !dbg !4591
  br label %22, !dbg !4591

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %24, metadata !4569, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8 poison, metadata !4568, metadata !DIExpression()), !dbg !4570
  %25 = icmp eq i8 %6, 37, !dbg !4592
  %26 = xor i1 %25, %23, !dbg !4594
  call void @llvm.dbg.value(metadata i8* %10, metadata !4565, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %10, metadata !4565, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4570
  %27 = load i8, i8* %10, align 1, !dbg !4571
  call void @llvm.dbg.value(metadata i8 %27, metadata !4567, metadata !DIExpression()), !dbg !4570
  %28 = icmp eq i8 %27, 0, !dbg !4572
  br i1 %28, label %29, label %5, !dbg !4573, !llvm.loop !4595

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4570
  ret i1 %30, !dbg !4597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4598 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4602, metadata !DIExpression()), !dbg !4603
  %2 = add i8 %0, -64, !dbg !4604
  %3 = icmp ult i8 %2, 59, !dbg !4604
  ret i1 %3, !dbg !4605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4606 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4614, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %1, metadata !4615, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4616, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8* %3, metadata !4617, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %4, metadata !4618, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i16* %5, metadata !4619, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %6, metadata !4620, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8* %0, metadata !4621, metadata !DIExpression()), !dbg !4683
  %11 = bitcast i8* %0 to i32*, !dbg !4684
  call void @llvm.dbg.value(metadata i32* %11, metadata !4622, metadata !DIExpression()), !dbg !4683
  %12 = and i32 %4, 8, !dbg !4685
  %13 = icmp eq i32 %12, 0, !dbg !4686
  call void @llvm.dbg.value(metadata i1 %13, metadata !4626, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4683
  call void @llvm.dbg.value(metadata i8* %0, metadata !4629, metadata !DIExpression()), !dbg !4683
  %14 = icmp eq i32 %1, 0, !dbg !4687
  br i1 %14, label %15, label %17, !dbg !4688

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #24, !dbg !4689
  br label %17, !dbg !4688

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4688
  call void @llvm.dbg.value(metadata i32 %18, metadata !4615, metadata !DIExpression()), !dbg !4683
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4690
  %20 = load i8, i8* %19, align 1, !dbg !4690
  %21 = zext i8 %20 to i32, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %21, metadata !4624, metadata !DIExpression()), !dbg !4683
  %22 = icmp ne i8 %20, 0, !dbg !4692
  %23 = and i32 %4, 1, !dbg !4693
  %24 = icmp ne i32 %23, 0, !dbg !4693
  %25 = and i1 %24, %22, !dbg !4693
  call void @llvm.dbg.value(metadata i1 %25, metadata !4628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4683
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4694
  %27 = load i8, i8* %26, align 1, !dbg !4694
  %28 = zext i8 %27 to i32, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %28, metadata !4625, metadata !DIExpression()), !dbg !4683
  %29 = icmp ne i8 %27, 0, !dbg !4696
  %30 = and i32 %4, 2, !dbg !4697
  %31 = icmp ne i32 %30, 0, !dbg !4697
  %32 = and i1 %31, %29, !dbg !4697
  call void @llvm.dbg.value(metadata i1 %32, metadata !4627, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4683
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4698
  br i1 %33, label %38, label %34, !dbg !4698

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4700
  br i1 %35, label %267, label %36, !dbg !4703

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #25, !dbg !4704
  br label %267, !dbg !4706

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4707
  %40 = zext i8 %39 to i32, !dbg !4708
  %41 = shl nuw nsw i32 %40, 2, !dbg !4709
  call void @llvm.dbg.value(metadata i32 %41, metadata !4623, metadata !DIExpression()), !dbg !4683
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4710
  %43 = bitcast i8* %42 to i8**, !dbg !4711
  %44 = load i8*, i8** %43, align 4, !dbg !4711
  call void @llvm.dbg.value(metadata i8* %44, metadata !4632, metadata !DIExpression()), !dbg !4683
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4712
  call void @llvm.dbg.value(metadata i8* %45, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 0, metadata !4634, metadata !DIExpression()), !dbg !4683
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4713
  br i1 %46, label %47, label %132, !dbg !4714

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4631, metadata !DIExpression()), !dbg !4683
  br i1 %25, label %48, label %73, !dbg !4715

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8* %45, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 0, metadata !4634, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 0, metadata !4635, metadata !DIExpression()), !dbg !4716
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4717

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8* %52, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %53, metadata !4634, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %54, metadata !4635, metadata !DIExpression()), !dbg !4716
  %55 = load i8, i8* %52, align 1, !dbg !4718
  %56 = zext i8 %55 to i32, !dbg !4719
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4719
  %58 = bitcast i32* %57 to i8**, !dbg !4720
  %59 = load i8*, i8** %58, align 4, !dbg !4720
  call void @llvm.dbg.value(metadata i8* %59, metadata !4641, metadata !DIExpression()), !dbg !4721
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #24, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %60, metadata !4644, metadata !DIExpression()), !dbg !4721
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4723
  br i1 %62, label %63, label %67, !dbg !4723

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4725
  %65 = add nuw i32 %53, 1, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %65, metadata !4634, metadata !DIExpression()), !dbg !4683
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4728
  store i16 %64, i16* %66, align 2, !dbg !4729
  br label %67, !dbg !4730

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4683
  call void @llvm.dbg.value(metadata i32 %68, metadata !4634, metadata !DIExpression()), !dbg !4683
  %69 = add nsw i32 %60, %51, !dbg !4731
  call void @llvm.dbg.value(metadata i32 %69, metadata !4631, metadata !DIExpression()), !dbg !4683
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %70, metadata !4633, metadata !DIExpression()), !dbg !4683
  %71 = add nuw nsw i32 %54, 1, !dbg !4733
  call void @llvm.dbg.value(metadata i32 %71, metadata !4635, metadata !DIExpression()), !dbg !4716
  %72 = icmp eq i32 %71, %21, !dbg !4734
  br i1 %72, label %79, label %50, !dbg !4717, !llvm.loop !4735

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4737
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4737
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4737
  br label %79, !dbg !4737

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4740
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4683
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4741
  call void @llvm.dbg.value(metadata i1 undef, metadata !4645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4742
  call void @llvm.dbg.value(metadata i32 0, metadata !4646, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %82, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8* %81, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %80, metadata !4634, metadata !DIExpression()), !dbg !4683
  %83 = icmp eq i8 %27, 0, !dbg !4744
  br i1 %83, label %267, label %84, !dbg !4745

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4746
  %86 = icmp eq i32 %85, 0, !dbg !4747
  call void @llvm.dbg.value(metadata i1 %86, metadata !4645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4742
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4745

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8* %93, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %94, metadata !4634, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %95, metadata !4646, metadata !DIExpression()), !dbg !4743
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4748
  call void @llvm.dbg.value(metadata i8* %96, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8 undef, metadata !4648, metadata !DIExpression()), !dbg !4749
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4750
  call void @llvm.dbg.value(metadata i8* %97, metadata !4633, metadata !DIExpression()), !dbg !4683
  %98 = load i8, i8* %96, align 1, !dbg !4751
  call void @llvm.dbg.value(metadata i8 %98, metadata !4651, metadata !DIExpression()), !dbg !4749
  %99 = zext i8 %98 to i32, !dbg !4752
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4752
  %101 = bitcast i32* %100 to i8**, !dbg !4753
  %102 = load i8*, i8** %101, align 4, !dbg !4753
  call void @llvm.dbg.value(metadata i8* %102, metadata !4652, metadata !DIExpression()), !dbg !4749
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #24, !dbg !4754
  call void @llvm.dbg.value(metadata i1 %103, metadata !4653, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4749
  br i1 %13, label %110, label %104, !dbg !4755

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4757
  call void @llvm.dbg.value(metadata i8 %105, metadata !4648, metadata !DIExpression()), !dbg !4749
  %106 = zext i8 %105 to i32, !dbg !4758
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #24, !dbg !4759
  br i1 %107, label %108, label %110, !dbg !4760

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.25, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #25, !dbg !4761
  %109 = add nsw i32 %92, -2, !dbg !4767
  call void @llvm.dbg.value(metadata i32 %109, metadata !4631, metadata !DIExpression()), !dbg !4683
  br label %127, !dbg !4768

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4769

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4770

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4772
  call void @llvm.dbg.value(metadata i32 %113, metadata !4631, metadata !DIExpression()), !dbg !4683
  br label %127, !dbg !4775

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4776

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4679), !dbg !4777
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #24, !dbg !4778
  call void @llvm.dbg.value(metadata i32 %116, metadata !4654, metadata !DIExpression()), !dbg !4749
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4779
  br i1 %118, label %119, label %123, !dbg !4779

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4781
  %121 = add nuw i32 %94, 1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %121, metadata !4634, metadata !DIExpression()), !dbg !4683
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4784
  store i16 %120, i16* %122, align 2, !dbg !4785
  br label %123, !dbg !4786

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4683
  call void @llvm.dbg.value(metadata i32 %124, metadata !4634, metadata !DIExpression()), !dbg !4683
  %125 = add i32 %92, -1, !dbg !4787
  %126 = add i32 %125, %116, !dbg !4788
  call void @llvm.dbg.value(metadata i32 %126, metadata !4631, metadata !DIExpression()), !dbg !4683
  br label %127, !dbg !4789

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4683
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4749
  call void @llvm.dbg.value(metadata i32 %129, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %128, metadata !4634, metadata !DIExpression()), !dbg !4683
  %130 = add nuw nsw i32 %95, 1, !dbg !4790
  call void @llvm.dbg.value(metadata i8* %97, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %130, metadata !4646, metadata !DIExpression()), !dbg !4743
  %131 = icmp eq i32 %130, %28, !dbg !4744
  br i1 %131, label %267, label %91, !dbg !4745, !llvm.loop !4791

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4656, metadata !DIExpression()), !dbg !4793
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4657, metadata !DIExpression()), !dbg !4794
  br i1 %25, label %133, label %135, !dbg !4795

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4658, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8 0, metadata !4659, metadata !DIExpression()), !dbg !4683
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %134, metadata !4660, metadata !DIExpression()), !dbg !4683
  br label %140, !dbg !4799

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4800
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4800

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4660, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8 undef, metadata !4659, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8 0, metadata !4658, metadata !DIExpression()), !dbg !4683
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #25, !dbg !4802
  br label %145, !dbg !4805

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4806
  call void @llvm.dbg.value(metadata i8* %148, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 0, metadata !4662, metadata !DIExpression()), !dbg !4807
  call void @llvm.dbg.value(metadata i8 %146, metadata !4659, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8 %147, metadata !4658, metadata !DIExpression()), !dbg !4683
  %149 = icmp eq i8 %27, 0, !dbg !4808
  br i1 %149, label %150, label %152, !dbg !4809

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4810
  br label %157, !dbg !4809

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4809

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4810
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4811
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4812
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4683
  call void @llvm.dbg.value(metadata i8 undef, metadata !4655, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4683
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4813
  %163 = load i8, i8* %162, align 1, !dbg !4813
  %164 = zext i8 %159 to i32, !dbg !4814
  %165 = add i8 %163, %159, !dbg !4815
  call void @llvm.dbg.value(metadata i8 %165, metadata !4655, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4683
  %166 = icmp eq i32 %30, 0, !dbg !4816
  %167 = lshr i8 %160, 1, !dbg !4817
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4817
  call void @llvm.dbg.value(metadata i8 %168, metadata !4655, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4683
  %169 = icmp eq i32 %23, 0, !dbg !4818
  %170 = icmp eq i32 %158, 0, !dbg !4810
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4810
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4810
  call void @llvm.dbg.value(metadata i8 %172, metadata !4655, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4683
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4670, metadata !DIExpression()), !dbg !4819
  %173 = load i32, i32* %11, align 1, !dbg !4820
  store i8 %165, i8* %162, align 1, !dbg !4821
  store i8 %172, i8* %19, align 1, !dbg !4821
  store i8 %168, i8* %26, align 1, !dbg !4821
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #25, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %174, metadata !4661, metadata !DIExpression()), !dbg !4683
  %175 = icmp slt i32 %174, 0, !dbg !4823
  br i1 %175, label %267, label %220, !dbg !4825

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %178, metadata !4662, metadata !DIExpression()), !dbg !4807
  call void @llvm.dbg.value(metadata i8 %179, metadata !4659, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8 %180, metadata !4658, metadata !DIExpression()), !dbg !4683
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4826
  call void @llvm.dbg.value(metadata i8* %181, metadata !4633, metadata !DIExpression()), !dbg !4683
  %182 = load i8, i8* %177, align 1, !dbg !4827
  call void @llvm.dbg.value(metadata i8 %182, metadata !4664, metadata !DIExpression()), !dbg !4828
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4829
  call void @llvm.dbg.value(metadata i8* %183, metadata !4633, metadata !DIExpression()), !dbg !4683
  %184 = load i8, i8* %181, align 1, !dbg !4830
  call void @llvm.dbg.value(metadata i8 %184, metadata !4667, metadata !DIExpression()), !dbg !4828
  %185 = zext i8 %184 to i32, !dbg !4831
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4831
  %187 = bitcast i32* %186 to i8**, !dbg !4832
  %188 = load i8*, i8** %187, align 4, !dbg !4832
  call void @llvm.dbg.value(metadata i8* %188, metadata !4668, metadata !DIExpression()), !dbg !4828
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #24, !dbg !4833
  call void @llvm.dbg.value(metadata i1 %189, metadata !4669, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4828
  br i1 %13, label %193, label %190, !dbg !4834

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4836
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #24, !dbg !4837
  br i1 %192, label %215, label %193, !dbg !4838

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4839

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4840

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4843
  call void @llvm.dbg.value(metadata i8 %196, metadata !4658, metadata !DIExpression()), !dbg !4683
  br label %208, !dbg !4846

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4847

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4848
  call void @llvm.dbg.value(metadata i8 %199, metadata !4659, metadata !DIExpression()), !dbg !4683
  br label %208, !dbg !4851

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4852

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4854
  call void @llvm.dbg.value(metadata i8 %202, metadata !4658, metadata !DIExpression()), !dbg !4683
  br label %208, !dbg !4857

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4858
  call void @llvm.dbg.value(metadata i8 %204, metadata !4659, metadata !DIExpression()), !dbg !4683
  %205 = zext i8 %179 to i32, !dbg !4860
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4860
  store i8 %182, i8* %206, align 1, !dbg !4861
  %207 = add i8 %179, 2, !dbg !4862
  call void @llvm.dbg.value(metadata i8 %207, metadata !4659, metadata !DIExpression()), !dbg !4683
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4863
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4863
  store i8 %184, i8* %214, align 1, !dbg !4863
  br label %215, !dbg !4864

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4683
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4812
  call void @llvm.dbg.value(metadata i8 %217, metadata !4659, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i8 %216, metadata !4658, metadata !DIExpression()), !dbg !4683
  %218 = add nuw nsw i32 %178, 1, !dbg !4864
  call void @llvm.dbg.value(metadata i8* %183, metadata !4633, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 %218, metadata !4662, metadata !DIExpression()), !dbg !4807
  %219 = icmp eq i32 %218, %28, !dbg !4808
  br i1 %219, label %157, label %176, !dbg !4809, !llvm.loop !4865

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %174, metadata !4631, metadata !DIExpression()), !dbg !4683
  store i32 %173, i32* %11, align 1, !dbg !4867
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4868
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #25, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %223, metadata !4661, metadata !DIExpression()), !dbg !4683
  %224 = icmp slt i32 %223, 0, !dbg !4870
  br i1 %224, label %267, label %225, !dbg !4872

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4683
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4873
  %228 = add nuw nsw i32 %41, %21, !dbg !4873
  %229 = sub i32 %227, %228, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %229, metadata !4671, metadata !DIExpression()), !dbg !4683
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #25, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %230, metadata !4661, metadata !DIExpression()), !dbg !4683
  %231 = icmp slt i32 %230, 0, !dbg !4875
  br i1 %231, label %267, label %232, !dbg !4877

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4878
  call void @llvm.dbg.value(metadata i32 %233, metadata !4631, metadata !DIExpression()), !dbg !4683
  %234 = add nuw nsw i32 %233, %230, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %234, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata i32 0, metadata !4672, metadata !DIExpression()), !dbg !4880
  %235 = icmp eq i8 %159, 0, !dbg !4881
  br i1 %235, label %264, label %236, !dbg !4882

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4882

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4672, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata i32 %240, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4883
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4884
  %242 = load i8, i8* %241, align 1, !dbg !4884
  call void @llvm.dbg.value(metadata i8 %242, metadata !4674, metadata !DIExpression()), !dbg !4885
  store i8 %242, i8* %10, align 1, !dbg !4886
  %243 = zext i8 %242 to i32, !dbg !4887
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4887
  %245 = bitcast i32* %244 to i8**, !dbg !4888
  %246 = load i8*, i8** %245, align 4, !dbg !4888
  call void @llvm.dbg.value(metadata i8* %246, metadata !4677, metadata !DIExpression()), !dbg !4885
  br i1 %237, label %250, label %247, !dbg !4889

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4890
  %249 = load i16, i16* %248, align 2, !dbg !4890
  br label %250, !dbg !4889

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4889
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4885
  call void @llvm.dbg.value(metadata i8* %10, metadata !4674, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %252, metadata !4661, metadata !DIExpression()), !dbg !4683
  %253 = icmp slt i32 %252, 0, !dbg !4892
  br i1 %253, label %257, label %254, !dbg !4894

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4678, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4683
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #24, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %255, metadata !4661, metadata !DIExpression()), !dbg !4683
  %256 = icmp slt i32 %255, 0, !dbg !4896
  br i1 %256, label %257, label %259, !dbg !4898

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4899
  call void @llvm.dbg.value(metadata i32 undef, metadata !4631, metadata !DIExpression()), !dbg !4683
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %260, metadata !4631, metadata !DIExpression()), !dbg !4683
  %261 = add nsw i32 %260, %255, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %261, metadata !4631, metadata !DIExpression()), !dbg !4683
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4899
  %262 = add nuw nsw i32 %239, 1, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %262, metadata !4672, metadata !DIExpression()), !dbg !4880
  %263 = icmp eq i32 %262, %164, !dbg !4881
  br i1 %263, label %264, label %238, !dbg !4882, !llvm.loop !4903

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4879
  call void @llvm.dbg.value(metadata i32 %265, metadata !4631, metadata !DIExpression()), !dbg !4683
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4905
  br label %267, !dbg !4906

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4683
  ret i32 %268, !dbg !4907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4908 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4912, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* %0, metadata !4913, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* %0, metadata !4914, metadata !DIExpression()), !dbg !4920
  %2 = load i8, i8* %0, align 1, !dbg !4921
  %3 = zext i8 %2 to i32, !dbg !4921
  %4 = shl nuw nsw i32 %3, 2, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %4, metadata !4915, metadata !DIExpression()), !dbg !4920
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4923
  %6 = load i8, i8* %5, align 1, !dbg !4923
  %7 = zext i8 %6 to i32, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %7, metadata !4916, metadata !DIExpression()), !dbg !4920
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4924
  %9 = load i8, i8* %8, align 1, !dbg !4924
  %10 = zext i8 %9 to i32, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %10, metadata !4917, metadata !DIExpression()), !dbg !4920
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4925
  call void @llvm.dbg.value(metadata i8* %11, metadata !4913, metadata !DIExpression()), !dbg !4920
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4926
  call void @llvm.dbg.value(metadata i8* %12, metadata !4913, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i32 0, metadata !4918, metadata !DIExpression()), !dbg !4927
  %13 = icmp eq i8 %6, 0, !dbg !4928
  br i1 %13, label %14, label %19, !dbg !4930

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4920
  %16 = ptrtoint i8* %15 to i32, !dbg !4931
  %17 = ptrtoint i8* %0 to i32, !dbg !4931
  %18 = sub i32 %16, %17, !dbg !4931
  ret i32 %18, !dbg !4932

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4918, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8* %21, metadata !4913, metadata !DIExpression()), !dbg !4920
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4933
  call void @llvm.dbg.value(metadata i8* %22, metadata !4913, metadata !DIExpression()), !dbg !4920
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #25, !dbg !4935
  %24 = add i32 %23, 1, !dbg !4936
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4937
  call void @llvm.dbg.value(metadata i8* %25, metadata !4913, metadata !DIExpression()), !dbg !4920
  %26 = add nuw nsw i32 %20, 1, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %26, metadata !4918, metadata !DIExpression()), !dbg !4927
  %27 = icmp eq i32 %26, %7, !dbg !4928
  br i1 %27, label %14, label %19, !dbg !4930, !llvm.loop !4939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4941 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4945, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8* %1, metadata !4946, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8* %2, metadata !4947, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i16 %3, metadata !4948, metadata !DIExpression()), !dbg !4949
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4950
  br i1 %5, label %6, label %9, !dbg !4952

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4953
  %8 = add i32 %7, 1, !dbg !4955
  br label %20, !dbg !4956

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4957
  br i1 %10, label %13, label %11, !dbg !4958

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4958
  br label %16, !dbg !4958

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4959
  %15 = add i32 %14, 1, !dbg !4960
  br label %16, !dbg !4958

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4958
  %18 = and i32 %17, 65535, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %17, metadata !4948, metadata !DIExpression()), !dbg !4949
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4962
  br label %20, !dbg !4963

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4949
  ret i32 %21, !dbg !4964
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4967, metadata !DIExpression()), !dbg !4968
  ret i32 0, !dbg !4969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !4970 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4974, metadata !DIExpression()), !dbg !4975
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4976
  ret void, !dbg !4977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4978 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4981
  ret i8* %1, !dbg !4982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4983 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4994, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata i8* %0, metadata !4993, metadata !DIExpression()), !dbg !5005
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !5006
  ret void, !dbg !5008
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5013, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata i8* %1, metadata !5014, metadata !DIExpression()), !dbg !5015
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5016
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !5016
  ret i32 %4, !dbg !5017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5018 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5025, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5022, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %1, metadata !5023, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %2, metadata !5024, metadata !DIExpression()), !dbg !5026
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !5027
  ret void, !dbg !5028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5029 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5033, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 %1, metadata !5034, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 0, metadata !5035, metadata !DIExpression()), !dbg !5036
  %3 = icmp eq i32 %1, 0, !dbg !5037
  br i1 %3, label %13, label %4, !dbg !5040

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5035, metadata !DIExpression()), !dbg !5036
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5041
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5043
  %8 = load i8, i8* %7, align 1, !dbg !5043
  %9 = zext i8 %8 to i32, !dbg !5043
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !5041
  %11 = add nuw i32 %5, 1, !dbg !5044
  call void @llvm.dbg.value(metadata i32 %11, metadata !5035, metadata !DIExpression()), !dbg !5036
  %12 = icmp eq i32 %11, %1, !dbg !5037
  br i1 %12, label %13, label %4, !dbg !5040, !llvm.loop !5045

13:                                               ; preds = %4, %2
  ret void, !dbg !5047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5048 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5052, metadata !DIExpression()), !dbg !5054
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5055
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5055
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5053, metadata !DIExpression()), !dbg !5056
  call void @llvm.va_start(i8* nonnull %3), !dbg !5057
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5058
  %5 = load i32, i32* %4, align 4, !dbg !5058
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5058
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5058
  call void @llvm.va_end(i8* nonnull %3), !dbg !5059
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5060
  ret void, !dbg !5060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5061 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5065, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i32 %1, metadata !5066, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i8* %2, metadata !5067, metadata !DIExpression()), !dbg !5070
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5071
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5071
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5068, metadata !DIExpression()), !dbg !5072
  call void @llvm.va_start(i8* nonnull %5), !dbg !5073
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5074
  %7 = load i32, i32* %6, align 4, !dbg !5074
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5074
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %9, metadata !5069, metadata !DIExpression()), !dbg !5070
  call void @llvm.va_end(i8* nonnull %5), !dbg !5075
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5076
  ret i32 %9, !dbg !5077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5078 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5085, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %0, metadata !5082, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %1, metadata !5083, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %2, metadata !5084, metadata !DIExpression()), !dbg !5092
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5093
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5093
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5086, metadata !DIExpression()), !dbg !5094
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5095
  store i8* %0, i8** %7, align 4, !dbg !5095
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5095
  store i32 %1, i32* %8, align 4, !dbg !5095
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5095
  store i32 0, i32* %9, align 4, !dbg !5095
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !5096
  %10 = load i32, i32* %9, align 4, !dbg !5097
  %11 = load i32, i32* %8, align 4, !dbg !5099
  %12 = icmp slt i32 %10, %11, !dbg !5100
  br i1 %12, label %13, label %15, !dbg !5101

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5102
  store i8 0, i8* %14, align 1, !dbg !5104
  br label %15, !dbg !5105

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5106
  ret i32 %10, !dbg !5107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5113, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5114, metadata !DIExpression()), !dbg !5115
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5116
  %4 = load i8*, i8** %3, align 4, !dbg !5116
  %5 = icmp eq i8* %4, null, !dbg !5118
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5119
  br i1 %5, label %12, label %8, !dbg !5120

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5121
  %10 = load i32, i32* %9, align 4, !dbg !5121
  %11 = icmp slt i32 %7, %10, !dbg !5122
  br i1 %11, label %15, label %12, !dbg !5123

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5124
  %14 = add nsw i32 %7, 1, !dbg !5126
  store i32 %14, i32* %13, align 4, !dbg !5126
  br label %25, !dbg !5127

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5128
  %17 = icmp eq i32 %7, %16, !dbg !5130
  br i1 %17, label %18, label %21, !dbg !5131

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5132
  store i32 %19, i32* %6, align 4, !dbg !5132
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5134
  store i8 0, i8* %20, align 1, !dbg !5135
  br label %25, !dbg !5136

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5137
  %23 = add nsw i32 %7, 1, !dbg !5139
  store i32 %23, i32* %6, align 4, !dbg !5139
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5140
  store i8 %22, i8* %24, align 1, !dbg !5141
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5142
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5143 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5153, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata i8* %1, metadata !5154, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata i8* %2, metadata !5155, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata i8* %3, metadata !5156, metadata !DIExpression()), !dbg !5157
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !5158
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5159
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !5160
  unreachable, !dbg !5161
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5162 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5266
  ret %struct.k_thread* %1, !dbg !5267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5268 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5272, metadata !DIExpression()), !dbg !5273
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5274, !srcloc !5276
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5277
  ret void, !dbg !5278
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5279 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5280, !srcloc !5282
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !5283
  ret %struct.k_thread* %1, !dbg !5284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5285 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5298, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5295, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8* %1, metadata !5296, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8* %2, metadata !5297, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %4, metadata !5299, metadata !DIExpression()), !dbg !5424
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5425
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5425
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5300, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i32 0, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i1 undef, metadata !5306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5424
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5427

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5427

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5428
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5298, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8* %30, metadata !5297, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %29, metadata !5304, metadata !DIExpression()), !dbg !5424
  %31 = load i8, i8* %30, align 1, !dbg !5429
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5427

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5429
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5430
  call void @llvm.dbg.value(metadata i8* %34, metadata !5297, metadata !DIExpression()), !dbg !5424
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5430
  call void @llvm.dbg.value(metadata i32 %35, metadata !5308, metadata !DIExpression()), !dbg !5431
  %36 = icmp slt i32 %35, 0, !dbg !5432
  %37 = add i32 %29, 1, !dbg !5430
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %36, label %365, label %28, !llvm.loop !5434

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5436
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5313, metadata !DIExpression()), !dbg !5437
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5437
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5356, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5359, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i8* %30, metadata !5362, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i32 -1, metadata !5363, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i32 -1, metadata !5364, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i8* null, metadata !5365, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i8* %14, metadata !5366, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i8 0, metadata !5367, metadata !DIExpression()), !dbg !5438
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !5439
  call void @llvm.dbg.value(metadata i8* %39, metadata !5297, metadata !DIExpression()), !dbg !5424
  %40 = load i24, i24* %15, align 8, !dbg !5440
  %41 = and i24 %40, 256, !dbg !5440
  %42 = icmp eq i24 %41, 0, !dbg !5440
  br i1 %42, label %51, label %43, !dbg !5442

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5443
  call void @llvm.dbg.value(metadata i8* %44, metadata !5298, metadata !DIExpression()), !dbg !5424
  %45 = bitcast i8* %27 to i32*, !dbg !5443
  %46 = load i32, i32* %45, align 4, !dbg !5443
  call void @llvm.dbg.value(metadata i32 %46, metadata !5363, metadata !DIExpression()), !dbg !5438
  %47 = icmp slt i32 %46, 0, !dbg !5445
  br i1 %47, label %48, label %56, !dbg !5447

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5448
  store i24 %49, i24* %15, align 8, !dbg !5448
  %50 = sub nsw i32 0, %46, !dbg !5450
  call void @llvm.dbg.value(metadata i32 %50, metadata !5363, metadata !DIExpression()), !dbg !5438
  br label %56, !dbg !5451

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5452
  %53 = icmp eq i24 %52, 0, !dbg !5452
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5454
  br label %56, !dbg !5454

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5455
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5438
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5298, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %58, metadata !5363, metadata !DIExpression()), !dbg !5438
  %60 = and i24 %57, 1024, !dbg !5455
  %61 = icmp eq i24 %60, 0, !dbg !5455
  br i1 %61, label %69, label %62, !dbg !5456

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5457
  call void @llvm.dbg.value(metadata i8* %63, metadata !5298, metadata !DIExpression()), !dbg !5424
  %64 = bitcast i8* %59 to i32*, !dbg !5457
  %65 = load i32, i32* %64, align 4, !dbg !5457
  call void @llvm.dbg.value(metadata i32 %65, metadata !5368, metadata !DIExpression()), !dbg !5458
  %66 = icmp slt i32 %65, 0, !dbg !5459
  br i1 %66, label %67, label %74, !dbg !5461

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5462
  store i24 %68, i24* %15, align 8, !dbg !5462
  br label %74, !dbg !5464

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5465
  %71 = icmp eq i24 %70, 0, !dbg !5465
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5467
  br label %74, !dbg !5467

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5468
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5438
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5438
  call void @llvm.dbg.value(metadata i8* %77, metadata !5298, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %76, metadata !5364, metadata !DIExpression()), !dbg !5438
  store i32 0, i32* %16, align 4, !dbg !5469
  store i32 0, i32* %17, align 8, !dbg !5470
  %78 = lshr i24 %75, 16, !dbg !5468
  call void @llvm.dbg.value(metadata i24 %78, metadata !5371, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5438
  %79 = lshr i24 %75, 11, !dbg !5471
  %80 = and i24 %79, 15, !dbg !5471
  %81 = zext i24 %80 to i32, !dbg !5471
  call void @llvm.dbg.value(metadata i32 %81, metadata !5372, metadata !DIExpression()), !dbg !5438
  %82 = trunc i24 %78 to i3, !dbg !5472
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5472

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5473

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5476
  call void @llvm.dbg.value(metadata i8* %85, metadata !5298, metadata !DIExpression()), !dbg !5424
  %86 = bitcast i8* %77 to i32*, !dbg !5476
  %87 = load i32, i32* %86, align 4, !dbg !5476
  %88 = sext i32 %87 to i64, !dbg !5476
  store i64 %88, i64* %20, align 8, !dbg !5478
  br label %115, !dbg !5479

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5480
  call void @llvm.dbg.value(metadata i8* %90, metadata !5298, metadata !DIExpression()), !dbg !5424
  %91 = bitcast i8* %77 to i32*, !dbg !5480
  %92 = load i32, i32* %91, align 4, !dbg !5480
  %93 = sext i32 %92 to i64, !dbg !5480
  store i64 %93, i64* %20, align 8, !dbg !5483
  br label %115, !dbg !5484

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5485
  %96 = add i32 %95, 7, !dbg !5485
  %97 = and i32 %96, -8, !dbg !5485
  %98 = inttoptr i32 %97 to i8*, !dbg !5485
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5485
  call void @llvm.dbg.value(metadata i8* %99, metadata !5298, metadata !DIExpression()), !dbg !5424
  %100 = inttoptr i32 %97 to i64*, !dbg !5485
  %101 = load i64, i64* %100, align 8, !dbg !5485
  store i64 %101, i64* %20, align 8, !dbg !5486
  br label %115, !dbg !5487

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5488
  %104 = add i32 %103, 7, !dbg !5488
  %105 = and i32 %104, -8, !dbg !5488
  %106 = inttoptr i32 %105 to i8*, !dbg !5488
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5488
  call void @llvm.dbg.value(metadata i8* %107, metadata !5298, metadata !DIExpression()), !dbg !5424
  %108 = inttoptr i32 %105 to i64*, !dbg !5488
  %109 = load i64, i64* %108, align 8, !dbg !5488
  store i64 %109, i64* %20, align 8, !dbg !5489
  br label %115, !dbg !5490

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5491
  call void @llvm.dbg.value(metadata i8* %111, metadata !5298, metadata !DIExpression()), !dbg !5424
  %112 = bitcast i8* %77 to i32*, !dbg !5491
  %113 = load i32, i32* %112, align 4, !dbg !5491
  %114 = sext i32 %113 to i64, !dbg !5492
  store i64 %114, i64* %20, align 8, !dbg !5493
  br label %115, !dbg !5494

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5495
  call void @llvm.dbg.value(metadata i8* %117, metadata !5298, metadata !DIExpression()), !dbg !5424
  %118 = trunc i24 %79 to i4, !dbg !5496
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5496

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5497
  %121 = ashr exact i64 %120, 56, !dbg !5497
  store i64 %121, i64* %20, align 8, !dbg !5500
  br label %177, !dbg !5501

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5502
  %124 = ashr exact i64 %123, 48, !dbg !5502
  store i64 %124, i64* %20, align 8, !dbg !5505
  br label %177, !dbg !5506

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5507

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5510
  call void @llvm.dbg.value(metadata i8* %127, metadata !5298, metadata !DIExpression()), !dbg !5424
  %128 = bitcast i8* %77 to i32*, !dbg !5510
  %129 = load i32, i32* %128, align 4, !dbg !5510
  %130 = zext i32 %129 to i64, !dbg !5510
  store i64 %130, i64* %20, align 8, !dbg !5512
  br label %157, !dbg !5513

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5514
  call void @llvm.dbg.value(metadata i8* %132, metadata !5298, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8* %132, metadata !5298, metadata !DIExpression()), !dbg !5424
  %133 = bitcast i8* %77 to i32*, !dbg !5514
  %134 = load i32, i32* %133, align 4, !dbg !5514
  %135 = zext i32 %134 to i64, !dbg !5514
  store i64 %135, i64* %20, align 8, !dbg !5514
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5516
  %138 = add i32 %137, 7, !dbg !5516
  %139 = and i32 %138, -8, !dbg !5516
  %140 = inttoptr i32 %139 to i8*, !dbg !5516
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5516
  call void @llvm.dbg.value(metadata i8* %141, metadata !5298, metadata !DIExpression()), !dbg !5424
  %142 = inttoptr i32 %139 to i64*, !dbg !5516
  %143 = load i64, i64* %142, align 8, !dbg !5516
  store i64 %143, i64* %20, align 8, !dbg !5517
  br label %157, !dbg !5518

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5519
  %146 = add i32 %145, 7, !dbg !5519
  %147 = and i32 %146, -8, !dbg !5519
  %148 = inttoptr i32 %147 to i8*, !dbg !5519
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5519
  call void @llvm.dbg.value(metadata i8* %149, metadata !5298, metadata !DIExpression()), !dbg !5424
  %150 = inttoptr i32 %147 to i64*, !dbg !5519
  %151 = load i64, i64* %150, align 8, !dbg !5519
  store i64 %151, i64* %20, align 8, !dbg !5520
  br label %157, !dbg !5521

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5522
  call void @llvm.dbg.value(metadata i8* %153, metadata !5298, metadata !DIExpression()), !dbg !5424
  %154 = bitcast i8* %77 to i32*, !dbg !5522
  %155 = load i32, i32* %154, align 4, !dbg !5522
  %156 = zext i32 %155 to i64, !dbg !5523
  store i64 %156, i64* %20, align 8, !dbg !5524
  br label %157, !dbg !5525

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5526
  call void @llvm.dbg.value(metadata i8* %159, metadata !5298, metadata !DIExpression()), !dbg !5424
  %160 = trunc i24 %79 to i4, !dbg !5527
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5527

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5528
  store i64 %162, i64* %20, align 8, !dbg !5531
  br label %177, !dbg !5532

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5533
  store i64 %164, i64* %20, align 8, !dbg !5536
  br label %177, !dbg !5537

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5538
  %167 = add i32 %166, 7, !dbg !5538
  %168 = and i32 %167, -8, !dbg !5538
  %169 = inttoptr i32 %168 to i8*, !dbg !5538
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5538
  call void @llvm.dbg.value(metadata i8* %170, metadata !5298, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8* %170, metadata !5298, metadata !DIExpression()), !dbg !5424
  %171 = inttoptr i32 %168 to double*, !dbg !5538
  %172 = load double, double* %171, align 8, !dbg !5538
  store double %172, double* %19, align 8, !dbg !5538
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5542
  call void @llvm.dbg.value(metadata i8* %174, metadata !5298, metadata !DIExpression()), !dbg !5424
  %175 = bitcast i8* %77 to i8**, !dbg !5542
  %176 = load i8*, i8** %175, align 4, !dbg !5542
  store i8* %176, i8** %18, align 8, !dbg !5545
  br label %177, !dbg !5546

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5438
  call void @llvm.dbg.value(metadata i8* %178, metadata !5298, metadata !DIExpression()), !dbg !5424
  %179 = and i24 %75, 3, !dbg !5547
  %180 = icmp eq i24 %179, 0, !dbg !5547
  br i1 %180, label %185, label %181, !dbg !5547

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %182, metadata !5373, metadata !DIExpression()), !dbg !5549
  %183 = icmp slt i32 %182, 0, !dbg !5550
  %184 = add i32 %182, %29, !dbg !5548
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5552
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5553

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5554
  call void @llvm.dbg.value(metadata i32 %188, metadata !5377, metadata !DIExpression()), !dbg !5555
  %189 = icmp slt i32 %188, 0, !dbg !5556
  %190 = add i32 %29, 1, !dbg !5554
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5558
  call void @llvm.dbg.value(metadata i8* %192, metadata !5365, metadata !DIExpression()), !dbg !5438
  %193 = icmp sgt i32 %76, -1, !dbg !5559
  br i1 %193, label %194, label %196, !dbg !5561

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5562
  call void @llvm.dbg.value(metadata i32 %195, metadata !5380, metadata !DIExpression()), !dbg !5564
  br label %241, !dbg !5565

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5566
  call void @llvm.dbg.value(metadata i32 %197, metadata !5380, metadata !DIExpression()), !dbg !5564
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5365, metadata !DIExpression()), !dbg !5438
  %199 = load i64, i64* %20, align 8, !dbg !5568
  %200 = trunc i64 %199 to i8, !dbg !5569
  store i8 %200, i8* %10, align 1, !dbg !5570
  call void @llvm.dbg.value(metadata i8* %23, metadata !5366, metadata !DIExpression()), !dbg !5438
  br label %245, !dbg !5571

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5572
  %203 = icmp eq i24 %202, 0, !dbg !5572
  %204 = trunc i24 %75 to i8, !dbg !5574
  %205 = shl i8 %204, 1, !dbg !5574
  %206 = and i8 %205, 32, !dbg !5574
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5574
  call void @llvm.dbg.value(metadata i8 %207, metadata !5367, metadata !DIExpression()), !dbg !5438
  %208 = load i64, i64* %20, align 8, !dbg !5575
  call void @llvm.dbg.value(metadata i64 %208, metadata !5305, metadata !DIExpression()), !dbg !5424
  %209 = icmp slt i64 %208, 0, !dbg !5576
  br i1 %209, label %210, label %212, !dbg !5578

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5367, metadata !DIExpression()), !dbg !5438
  %211 = sub nsw i64 0, %208, !dbg !5579
  store i64 %211, i64* %20, align 8, !dbg !5581
  br label %212, !dbg !5582

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5438
  call void @llvm.dbg.value(metadata i8 %213, metadata !5367, metadata !DIExpression()), !dbg !5438
  %214 = load i64, i64* %20, align 8, !dbg !5583
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5584
  call void @llvm.dbg.value(metadata i8* %215, metadata !5365, metadata !DIExpression()), !dbg !5438
  br label %216, !dbg !5585

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5586
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5587
  call void @llvm.dbg.value(metadata i8* %218, metadata !5365, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i8 %217, metadata !5367, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.label(metadata !5423), !dbg !5588
  %219 = icmp sgt i32 %76, -1, !dbg !5589
  br i1 %219, label %222, label %220, !dbg !5590

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5591
  br label %245, !dbg !5590

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5593
  %224 = sub i32 %22, %223, !dbg !5593
  call void @llvm.dbg.value(metadata i32 %224, metadata !5382, metadata !DIExpression()), !dbg !5594
  %225 = load i24, i24* %15, align 8, !dbg !5595
  %226 = and i24 %225, -65, !dbg !5595
  store i24 %226, i24* %15, align 8, !dbg !5595
  %227 = icmp ugt i32 %76, %224, !dbg !5596
  br i1 %227, label %228, label %245, !dbg !5598

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5599
  store i32 %229, i32* %16, align 4, !dbg !5601
  br label %245, !dbg !5602

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5603
  %232 = icmp eq i8* %231, null, !dbg !5605
  br i1 %232, label %245, label %233, !dbg !5606

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5607
  %235 = zext i32 %234 to i64, !dbg !5607
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5609
  call void @llvm.dbg.value(metadata i8* %236, metadata !5365, metadata !DIExpression()), !dbg !5438
  %237 = load i24, i24* %15, align 8, !dbg !5610
  %238 = or i24 %237, 1048576, !dbg !5610
  store i24 %238, i24* %15, align 8, !dbg !5610
  store i8 120, i8* %21, align 1, !dbg !5611
  br label %216, !dbg !5612

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5613
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5616
  br label %363, !dbg !5617

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5618
  call void @llvm.dbg.value(metadata i32 %242, metadata !5380, metadata !DIExpression()), !dbg !5564
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5619
  call void @llvm.dbg.value(metadata i32 -1, metadata !5364, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i32 %29, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8* %192, metadata !5365, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i8* %243, metadata !5366, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i8 0, metadata !5367, metadata !DIExpression()), !dbg !5438
  %244 = icmp eq i8* %192, null, !dbg !5620
  br i1 %244, label %363, label %245, !dbg !5622, !llvm.loop !5434

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5591
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5438
  call void @llvm.dbg.value(metadata i32 0, metadata !5386, metadata !DIExpression()), !dbg !5438
  %250 = zext i8 %249 to i32, !dbg !5623
  %251 = icmp eq i8 %249, 0, !dbg !5625
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  call void @llvm.dbg.value(metadata i32 undef, metadata !5385, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  call void @llvm.dbg.value(metadata i32 undef, metadata !5385, metadata !DIExpression()), !dbg !5438
  %252 = icmp sgt i32 %58, 0, !dbg !5626
  br i1 %252, label %253, label %302, !dbg !5627

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5591
  %255 = icmp eq i24 %254, 0, !dbg !5591
  %256 = ptrtoint i8* %248 to i32, !dbg !5628
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  %257 = ptrtoint i8* %247 to i32, !dbg !5628
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  %258 = xor i1 %251, true, !dbg !5629
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  %259 = sext i1 %258 to i32, !dbg !5629
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  %260 = lshr i24 %246, 19, !dbg !5630
  %261 = and i24 %260, 1, !dbg !5630
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5630
  %263 = zext i24 %262 to i32, !dbg !5630
  %264 = add i32 %257, %259, !dbg !5630
  %265 = add i32 %256, %263, !dbg !5630
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  %266 = and i24 %246, 4194304, !dbg !5631
  %267 = icmp eq i24 %266, 0, !dbg !5631
  %268 = load i32, i32* %16, align 4, !dbg !5633
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5438
  call void @llvm.dbg.value(metadata i32 undef, metadata !5385, metadata !DIExpression()), !dbg !5438
  %269 = load i32, i32* %17, align 8, !dbg !5634
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5634
  call void @llvm.dbg.value(metadata i32 undef, metadata !5385, metadata !DIExpression()), !dbg !5438
  %271 = add i32 %264, %58, !dbg !5634
  %272 = add i32 %265, %268, !dbg !5634
  %273 = add i32 %272, %270, !dbg !5635
  %274 = sub i32 %271, %273, !dbg !5635
  call void @llvm.dbg.value(metadata i32 %274, metadata !5363, metadata !DIExpression()), !dbg !5438
  %275 = and i24 %246, 4, !dbg !5636
  %276 = icmp eq i24 %275, 0, !dbg !5636
  br i1 %276, label %277, label %302, !dbg !5637

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5387, metadata !DIExpression()), !dbg !5638
  %278 = and i24 %246, 64, !dbg !5639
  %279 = icmp eq i24 %278, 0, !dbg !5639
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5640
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5640
  %282 = select i1 %279, i32 32, i32 48, !dbg !5640
  br i1 %280, label %287, label %283, !dbg !5640

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5641
  call void @llvm.dbg.value(metadata i32 %284, metadata !5392, metadata !DIExpression()), !dbg !5642
  %285 = icmp slt i32 %284, 0, !dbg !5643
  %286 = add i32 %29, 1, !dbg !5641
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5438
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5428
  call void @llvm.dbg.value(metadata i32 %290, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8 undef, metadata !5387, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.value(metadata i8 %288, metadata !5367, metadata !DIExpression()), !dbg !5438
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5645
  %292 = add i32 %291, -1, !dbg !5645
  br label %293, !dbg !5645

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5646
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5428
  call void @llvm.dbg.value(metadata i32 %295, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %294, metadata !5363, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i32 %294, metadata !5363, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5438
  %296 = icmp sgt i32 %294, 0, !dbg !5647
  br i1 %296, label %297, label %302, !dbg !5645

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5648
  call void @llvm.dbg.value(metadata i32 %298, metadata !5363, metadata !DIExpression()), !dbg !5438
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5649
  call void @llvm.dbg.value(metadata i32 %299, metadata !5398, metadata !DIExpression()), !dbg !5650
  %300 = icmp slt i32 %299, 0, !dbg !5651
  %301 = add i32 %295, 1, !dbg !5649
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %300, label %361, label %293, !llvm.loop !5653

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5438
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5438
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5428
  call void @llvm.dbg.value(metadata i32 %305, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %304, metadata !5363, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i8 %303, metadata !5367, metadata !DIExpression()), !dbg !5438
  %306 = icmp eq i8 %303, 0, !dbg !5655
  br i1 %306, label %312, label %307, !dbg !5656

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5657
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5658
  call void @llvm.dbg.value(metadata i32 %309, metadata !5401, metadata !DIExpression()), !dbg !5659
  %310 = icmp slt i32 %309, 0, !dbg !5660
  %311 = add i32 %305, 1, !dbg !5658
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5428
  call void @llvm.dbg.value(metadata i32 %313, metadata !5304, metadata !DIExpression()), !dbg !5424
  %314 = lshr i24 %246, 20, !dbg !5662
  %315 = lshr i24 %246, 19, !dbg !5663
  %316 = or i24 %314, %315, !dbg !5664
  %317 = and i24 %316, 1, !dbg !5664
  %318 = icmp eq i24 %317, 0, !dbg !5664
  br i1 %318, label %323, label %319, !dbg !5665

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %320, metadata !5405, metadata !DIExpression()), !dbg !5667
  %321 = icmp slt i32 %320, 0, !dbg !5668
  %322 = add i32 %313, 1, !dbg !5666
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5428
  call void @llvm.dbg.value(metadata i32 %324, metadata !5304, metadata !DIExpression()), !dbg !5424
  %325 = and i24 %246, 1048576, !dbg !5670
  %326 = icmp eq i24 %325, 0, !dbg !5670
  br i1 %326, label %333, label %327, !dbg !5671

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5672
  %329 = zext i8 %328 to i32, !dbg !5672
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5672
  call void @llvm.dbg.value(metadata i32 %330, metadata !5411, metadata !DIExpression()), !dbg !5673
  %331 = icmp slt i32 %330, 0, !dbg !5674
  %332 = add i32 %324, 1, !dbg !5672
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5428
  call void @llvm.dbg.value(metadata i32 %334, metadata !5304, metadata !DIExpression()), !dbg !5424
  %335 = load i32, i32* %16, align 4, !dbg !5676
  call void @llvm.dbg.value(metadata i32 %335, metadata !5386, metadata !DIExpression()), !dbg !5438
  br label %336, !dbg !5677

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5678
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5428
  call void @llvm.dbg.value(metadata i32 %338, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %337, metadata !5386, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5438
  %339 = icmp sgt i32 %337, 0, !dbg !5679
  br i1 %339, label %340, label %345, !dbg !5677

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5680
  call void @llvm.dbg.value(metadata i32 %341, metadata !5386, metadata !DIExpression()), !dbg !5438
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5681
  call void @llvm.dbg.value(metadata i32 %342, metadata !5415, metadata !DIExpression()), !dbg !5682
  %343 = icmp slt i32 %342, 0, !dbg !5683
  %344 = add i32 %338, 1, !dbg !5681
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %343, label %361, label %336, !llvm.loop !5685

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5687
  call void @llvm.dbg.value(metadata i32 %346, metadata !5418, metadata !DIExpression()), !dbg !5688
  %347 = icmp slt i32 %346, 0, !dbg !5689
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5687
  call void @llvm.dbg.value(metadata i32 %349, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %304, metadata !5363, metadata !DIExpression()), !dbg !5438
  %350 = icmp sgt i32 %304, 0, !dbg !5691
  br i1 %350, label %351, label %363, !dbg !5692

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5692
  %353 = add i32 %352, %338, !dbg !5692
  br label %354, !dbg !5692

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %355, metadata !5363, metadata !DIExpression()), !dbg !5438
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5693
  call void @llvm.dbg.value(metadata i32 %356, metadata !5420, metadata !DIExpression()), !dbg !5694
  %357 = icmp slt i32 %356, 0, !dbg !5695
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5697
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %359, metadata !5363, metadata !DIExpression()), !dbg !5438
  %360 = icmp sgt i32 %355, 1, !dbg !5691
  br i1 %360, label %354, label %363, !dbg !5692, !llvm.loop !5698

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5435
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5428
  call void @llvm.dbg.value(metadata i32 %364, metadata !5304, metadata !DIExpression()), !dbg !5424
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5435
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5424
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5700
  ret i32 %366, !dbg !5700
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5701 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5705, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8* %1, metadata !5706, metadata !DIExpression()), !dbg !5707
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5708
  store i24 0, i24* %3, align 4, !dbg !5708
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5708
  store i8 0, i8* %4, align 1, !dbg !5708
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5708
  store i32 0, i32* %5, align 4, !dbg !5708
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5708
  store i32 0, i32* %6, align 4, !dbg !5708
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5709
  call void @llvm.dbg.value(metadata i8* %7, metadata !5706, metadata !DIExpression()), !dbg !5707
  %8 = load i8, i8* %7, align 1, !dbg !5710
  %9 = icmp eq i8 %8, 37, !dbg !5712
  br i1 %9, label %10, label %12, !dbg !5713

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5714
  call void @llvm.dbg.value(metadata i8* %11, metadata !5706, metadata !DIExpression()), !dbg !5707
  store i8 37, i8* %4, align 1, !dbg !5716
  br label %18, !dbg !5717

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5718
  call void @llvm.dbg.value(metadata i8* %13, metadata !5706, metadata !DIExpression()), !dbg !5707
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5719
  call void @llvm.dbg.value(metadata i8* %14, metadata !5706, metadata !DIExpression()), !dbg !5707
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5720
  call void @llvm.dbg.value(metadata i8* %15, metadata !5706, metadata !DIExpression()), !dbg !5707
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5721
  call void @llvm.dbg.value(metadata i8* %16, metadata !5706, metadata !DIExpression()), !dbg !5707
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5722
  call void @llvm.dbg.value(metadata i8* %17, metadata !5706, metadata !DIExpression()), !dbg !5707
  br label %18, !dbg !5723

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5707
  ret i8* %19, !dbg !5724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5725 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5729, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* %1, metadata !5730, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* %2, metadata !5731, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* %3, metadata !5732, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i32 0, metadata !5733, metadata !DIExpression()), !dbg !5736
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5737

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5738
  call void @llvm.dbg.value(metadata i32 %9, metadata !5733, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* %8, metadata !5731, metadata !DIExpression()), !dbg !5736
  %10 = icmp ult i8* %8, %3, !dbg !5739
  br i1 %10, label %11, label %13, !dbg !5740

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5741
  br label %17, !dbg !5740

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5742

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5743
  %16 = icmp eq i8 %15, 0, !dbg !5742
  br i1 %16, label %24, label %17, !dbg !5737

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5741
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5744
  call void @llvm.dbg.value(metadata i8* %19, metadata !5731, metadata !DIExpression()), !dbg !5736
  %20 = zext i8 %18 to i32, !dbg !5745
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %21, metadata !5734, metadata !DIExpression()), !dbg !5747
  %22 = icmp slt i32 %21, 0, !dbg !5748
  %23 = add i32 %9, 1, !dbg !5750
  call void @llvm.dbg.value(metadata i32 undef, metadata !5733, metadata !DIExpression()), !dbg !5736
  br i1 %22, label %24, label %7, !llvm.loop !5751

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5736
  ret i32 %25, !dbg !5753
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5754 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5758, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5759, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %2, metadata !5760, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %3, metadata !5761, metadata !DIExpression()), !dbg !5768
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5769
  %6 = load i8, i8* %5, align 1, !dbg !5769
  %7 = zext i8 %6 to i32, !dbg !5770
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5771
  %9 = icmp eq i32 %8, 0, !dbg !5771
  call void @llvm.dbg.value(metadata i1 %9, metadata !5762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5768
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5772
  call void @llvm.dbg.value(metadata i32 %10, metadata !5763, metadata !DIExpression()), !dbg !5768
  %11 = ptrtoint i8* %3 to i32, !dbg !5773
  %12 = ptrtoint i8* %2 to i32, !dbg !5773
  %13 = sub i32 %11, %12, !dbg !5773
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5774
  call void @llvm.dbg.value(metadata i8* %14, metadata !5765, metadata !DIExpression()), !dbg !5768
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5775

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5768
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5758, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %18, metadata !5765, metadata !DIExpression()), !dbg !5768
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5776
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %25, metadata !5766, metadata !DIExpression()), !dbg !5778
  %26 = icmp ult i32 %25, 10, !dbg !5779
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5780
  %28 = add i32 %27, %25, !dbg !5778
  %29 = trunc i32 %28 to i8, !dbg !5780
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5781
  call void @llvm.dbg.value(metadata i8* %30, metadata !5765, metadata !DIExpression()), !dbg !5768
  store i8 %29, i8* %30, align 1, !dbg !5782
  call void @llvm.dbg.value(metadata i64 %22, metadata !5758, metadata !DIExpression()), !dbg !5768
  %31 = icmp uge i64 %19, %15, !dbg !5783
  %32 = icmp ugt i8* %30, %2, !dbg !5784
  %33 = and i1 %31, %32, !dbg !5784
  br i1 %33, label %17, label %34, !dbg !5785, !llvm.loop !5786

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5788
  %36 = load i24, i24* %35, align 4, !dbg !5788
  %37 = and i24 %36, 32, !dbg !5788
  %38 = icmp eq i24 %37, 0, !dbg !5788
  br i1 %38, label %44, label %39, !dbg !5790

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5791

40:                                               ; preds = %39
  br label %41, !dbg !5793

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5797
  store i24 %43, i24* %35, align 4, !dbg !5797
  br label %44, !dbg !5798

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5799 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5805, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.value(metadata i8* %1, metadata !5806, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.value(metadata i32 %2, metadata !5807, metadata !DIExpression()), !dbg !5808
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5809
  %5 = load i24, i24* %4, align 4, !dbg !5809
  %6 = lshr i24 %5, 11, !dbg !5809
  %7 = and i24 %6, 15, !dbg !5809
  %8 = zext i24 %7 to i32, !dbg !5809
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5810

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5811
  store i32 %2, i32* %10, align 4, !dbg !5813
  br label %28, !dbg !5814

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5815
  store i8 %12, i8* %1, align 1, !dbg !5816
  br label %28, !dbg !5817

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5818
  %15 = bitcast i8* %1 to i16*, !dbg !5819
  store i16 %14, i16* %15, align 2, !dbg !5820
  br label %28, !dbg !5821

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5822
  store i32 %2, i32* %17, align 4, !dbg !5823
  br label %28, !dbg !5824

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5825
  %20 = bitcast i8* %1 to i64*, !dbg !5826
  store i64 %19, i64* %20, align 8, !dbg !5827
  br label %28, !dbg !5828

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5829
  %23 = bitcast i8* %1 to i64*, !dbg !5830
  store i64 %22, i64* %23, align 8, !dbg !5831
  br label %28, !dbg !5832

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5833
  store i32 %2, i32* %25, align 4, !dbg !5834
  br label %28, !dbg !5835

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5836
  store i32 %2, i32* %27, align 4, !dbg !5837
  br label %28, !dbg !5838

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5839
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5843, metadata !DIExpression()), !dbg !5844
  %2 = add i32 %0, -65, !dbg !5845
  %3 = icmp ult i32 %2, 26, !dbg !5846
  %4 = zext i1 %3 to i32, !dbg !5846
  ret i32 %4, !dbg !5847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5848 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5852, metadata !DIExpression()), !dbg !5853
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5854

2:                                                ; preds = %1
  br label %4, !dbg !5855

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5857

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5858
  ret i32 %5, !dbg !5859
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5860 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5862, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.value(metadata i8* %1, metadata !5863, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.value(metadata i8 1, metadata !5864, metadata !DIExpression()), !dbg !5865
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5866

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5864, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.value(metadata i8* %5, metadata !5863, metadata !DIExpression()), !dbg !5865
  %6 = load i8, i8* %5, align 1, !dbg !5867
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5869

7:                                                ; preds = %4
  br label %11, !dbg !5870

8:                                                ; preds = %4
  br label %11, !dbg !5872

9:                                                ; preds = %4
  br label %11, !dbg !5873

10:                                               ; preds = %4
  br label %11, !dbg !5874

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5875
  %14 = or i24 %13, %12, !dbg !5875
  store i24 %14, i24* %3, align 4, !dbg !5875
  call void @llvm.dbg.value(metadata i8 poison, metadata !5864, metadata !DIExpression()), !dbg !5865
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5863, metadata !DIExpression()), !dbg !5865
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5864, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.value(metadata i8* %15, metadata !5863, metadata !DIExpression()), !dbg !5865
  %17 = load i24, i24* %3, align 4, !dbg !5876
  %18 = and i24 %17, 68, !dbg !5878
  %19 = icmp eq i24 %18, 68, !dbg !5878
  br i1 %19, label %20, label %22, !dbg !5878

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5879
  store i24 %21, i24* %3, align 4, !dbg !5879
  br label %22, !dbg !5881

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5882
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5883 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5885, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8* %1, metadata !5886, metadata !DIExpression()), !dbg !5889
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5890
  %5 = load i24, i24* %4, align 4, !dbg !5891
  %6 = or i24 %5, 128, !dbg !5891
  store i24 %6, i24* %4, align 4, !dbg !5891
  call void @llvm.dbg.value(metadata i8* %1, metadata !5886, metadata !DIExpression()), !dbg !5889
  %7 = load i8, i8* %1, align 1, !dbg !5892
  %8 = icmp eq i8 %7, 42, !dbg !5894
  br i1 %8, label %9, label %12, !dbg !5895

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5896
  store i24 %10, i24* %4, align 4, !dbg !5896
  call void @llvm.dbg.value(metadata i8* %1, metadata !5886, metadata !DIExpression()), !dbg !5889
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5898
  call void @llvm.dbg.value(metadata i8* %11, metadata !5886, metadata !DIExpression()), !dbg !5889
  store i8* %11, i8** %3, align 4, !dbg !5898
  br label %29, !dbg !5899

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5887, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8** %3, metadata !5886, metadata !DIExpression(DW_OP_deref)), !dbg !5889
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %13, metadata !5888, metadata !DIExpression()), !dbg !5889
  %14 = load i8*, i8** %3, align 4, !dbg !5901
  call void @llvm.dbg.value(metadata i8* %14, metadata !5886, metadata !DIExpression()), !dbg !5889
  %15 = icmp eq i8* %14, %1, !dbg !5903
  br i1 %15, label %29, label %16, !dbg !5904

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5905
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5907
  store i32 %13, i32* %18, align 4, !dbg !5908
  %19 = lshr i32 %13, 31, !dbg !5909
  %20 = lshr i24 %17, 1, !dbg !5910
  %21 = and i24 %20, 1, !dbg !5910
  %22 = zext i24 %21 to i32, !dbg !5910
  %23 = or i32 %19, %22, !dbg !5910
  %24 = trunc i32 %23 to i24, !dbg !5910
  %25 = shl nuw nsw i24 %24, 1, !dbg !5910
  %26 = and i24 %17, -131, !dbg !5910
  %27 = or i24 %26, 128, !dbg !5910
  %28 = or i24 %25, %27, !dbg !5910
  store i24 %28, i24* %4, align 4, !dbg !5910
  br label %29, !dbg !5911

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5889
  ret i8* %30, !dbg !5912
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5913 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5915, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.value(metadata i8* %1, metadata !5916, metadata !DIExpression()), !dbg !5918
  %4 = load i8, i8* %1, align 1, !dbg !5919
  %5 = icmp eq i8 %4, 46, !dbg !5920
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5921
  %7 = load i24, i24* %6, align 4, !dbg !5922
  %8 = select i1 %5, i24 512, i24 0, !dbg !5922
  %9 = and i24 %7, -513, !dbg !5922
  %10 = or i24 %9, %8, !dbg !5922
  store i24 %10, i24* %6, align 4, !dbg !5922
  br i1 %5, label %11, label %32, !dbg !5923

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5916, metadata !DIExpression()), !dbg !5918
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5924
  call void @llvm.dbg.value(metadata i8* %12, metadata !5916, metadata !DIExpression()), !dbg !5918
  store i8* %12, i8** %3, align 4, !dbg !5924
  %13 = load i8, i8* %12, align 1, !dbg !5925
  %14 = icmp eq i8 %13, 42, !dbg !5927
  br i1 %14, label %15, label %18, !dbg !5928

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5929
  store i24 %16, i24* %6, align 4, !dbg !5929
  call void @llvm.dbg.value(metadata i8* %12, metadata !5916, metadata !DIExpression()), !dbg !5918
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5931
  call void @llvm.dbg.value(metadata i8* %17, metadata !5916, metadata !DIExpression()), !dbg !5918
  store i8* %17, i8** %3, align 4, !dbg !5931
  br label %32, !dbg !5932

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5916, metadata !DIExpression(DW_OP_deref)), !dbg !5918
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %19, metadata !5917, metadata !DIExpression()), !dbg !5918
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5934
  store i32 %19, i32* %20, align 4, !dbg !5935
  %21 = lshr i32 %19, 31, !dbg !5936
  %22 = load i24, i24* %6, align 4, !dbg !5937
  %23 = lshr i24 %22, 1, !dbg !5937
  %24 = and i24 %23, 1, !dbg !5937
  %25 = zext i24 %24 to i32, !dbg !5937
  %26 = or i32 %21, %25, !dbg !5937
  %27 = trunc i32 %26 to i24, !dbg !5937
  %28 = shl nuw nsw i24 %27, 1, !dbg !5937
  %29 = and i24 %22, -3, !dbg !5937
  %30 = or i24 %28, %29, !dbg !5937
  store i24 %30, i24* %6, align 4, !dbg !5937
  %31 = load i8*, i8** %3, align 4, !dbg !5938
  call void @llvm.dbg.value(metadata i8* %31, metadata !5916, metadata !DIExpression()), !dbg !5918
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5918
  ret i8* %33, !dbg !5939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5940 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5942, metadata !DIExpression()), !dbg !5944
  call void @llvm.dbg.value(metadata i8* %1, metadata !5943, metadata !DIExpression()), !dbg !5944
  %3 = load i8, i8* %1, align 1, !dbg !5945
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5946

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5947
  call void @llvm.dbg.value(metadata i8* %5, metadata !5943, metadata !DIExpression()), !dbg !5944
  %6 = load i8, i8* %5, align 1, !dbg !5950
  %7 = icmp eq i8 %6, 104, !dbg !5951
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5952
  %9 = load i24, i24* %8, align 4, !dbg !5952
  %10 = and i24 %9, -30721, !dbg !5952
  br i1 %7, label %11, label %14, !dbg !5953

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5954
  store i24 %12, i24* %8, align 4, !dbg !5954
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5956
  call void @llvm.dbg.value(metadata i8* %13, metadata !5943, metadata !DIExpression()), !dbg !5944
  br label %56, !dbg !5957

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5958
  store i24 %15, i24* %8, align 4, !dbg !5958
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5960
  call void @llvm.dbg.value(metadata i8* %17, metadata !5943, metadata !DIExpression()), !dbg !5944
  %18 = load i8, i8* %17, align 1, !dbg !5962
  %19 = icmp eq i8 %18, 108, !dbg !5963
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5964
  %21 = load i24, i24* %20, align 4, !dbg !5964
  %22 = and i24 %21, -30721, !dbg !5964
  br i1 %19, label %23, label %26, !dbg !5965

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5966
  store i24 %24, i24* %20, align 4, !dbg !5966
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5968
  call void @llvm.dbg.value(metadata i8* %25, metadata !5943, metadata !DIExpression()), !dbg !5944
  br label %56, !dbg !5969

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5970
  store i24 %27, i24* %20, align 4, !dbg !5970
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5972
  %30 = load i24, i24* %29, align 4, !dbg !5973
  %31 = and i24 %30, -30721, !dbg !5973
  %32 = or i24 %31, 10240, !dbg !5973
  store i24 %32, i24* %29, align 4, !dbg !5973
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5974
  call void @llvm.dbg.value(metadata i8* %33, metadata !5943, metadata !DIExpression()), !dbg !5944
  br label %56, !dbg !5975

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5976
  %36 = load i24, i24* %35, align 4, !dbg !5977
  %37 = and i24 %36, -30721, !dbg !5977
  %38 = or i24 %37, 12288, !dbg !5977
  store i24 %38, i24* %35, align 4, !dbg !5977
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5978
  call void @llvm.dbg.value(metadata i8* %39, metadata !5943, metadata !DIExpression()), !dbg !5944
  br label %56, !dbg !5979

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5980
  %42 = load i24, i24* %41, align 4, !dbg !5981
  %43 = and i24 %42, -30721, !dbg !5981
  %44 = or i24 %43, 14336, !dbg !5981
  store i24 %44, i24* %41, align 4, !dbg !5981
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5982
  call void @llvm.dbg.value(metadata i8* %45, metadata !5943, metadata !DIExpression()), !dbg !5944
  br label %56, !dbg !5983

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5984
  %48 = load i24, i24* %47, align 4, !dbg !5985
  %49 = and i24 %48, -30723, !dbg !5985
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5986
  call void @llvm.dbg.value(metadata i8* %50, metadata !5943, metadata !DIExpression()), !dbg !5944
  %51 = or i24 %49, 16386, !dbg !5987
  store i24 %51, i24* %47, align 4, !dbg !5987
  br label %56, !dbg !5988

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5989
  %54 = load i24, i24* %53, align 4, !dbg !5990
  %55 = and i24 %54, -30721, !dbg !5990
  store i24 %55, i24* %53, align 4, !dbg !5990
  br label %56, !dbg !5991

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5943, metadata !DIExpression()), !dbg !5944
  ret i8* %57, !dbg !5992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5993 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5995, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8* %1, metadata !5996, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8 0, metadata !5997, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8* %1, metadata !5996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6000
  %3 = load i8, i8* %1, align 1, !dbg !6001
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6002
  store i8 %3, i8* %4, align 1, !dbg !6003
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6004

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6005

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6006
  %9 = load i24, i24* %8, align 4, !dbg !6006
  %10 = and i24 %9, -458753, !dbg !6006
  %11 = or i24 %10, %7, !dbg !6006
  call void @llvm.dbg.label(metadata !5998), !dbg !6007
  %12 = and i24 %9, 30720, !dbg !6008
  %13 = icmp eq i24 %12, 16384, !dbg !6008
  %14 = zext i1 %13 to i24, !dbg !6010
  %15 = or i24 %11, %14, !dbg !6010
  %16 = icmp eq i8 %3, 99, !dbg !6011
  br i1 %16, label %17, label %43, !dbg !6013

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6014
  %19 = icmp ne i24 %18, 0, !dbg !6014
  call void @llvm.dbg.value(metadata i1 %19, metadata !5997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6000
  br label %43, !dbg !6016

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6017
  %22 = load i24, i24* %21, align 4, !dbg !6018
  %23 = and i24 %22, -458753, !dbg !6018
  %24 = or i24 %23, 262144, !dbg !6018
  call void @llvm.dbg.value(metadata i8 1, metadata !5997, metadata !DIExpression()), !dbg !6000
  br label %43, !dbg !6019

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6022
  %27 = load i24, i24* %26, align 4, !dbg !6023
  %28 = and i24 %27, -458753, !dbg !6023
  %29 = or i24 %28, 196608, !dbg !6023
  %30 = and i24 %27, 30720, !dbg !6024
  %31 = icmp eq i24 %30, 16384, !dbg !6024
  br label %43, !dbg !6026

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6027
  %34 = load i24, i24* %33, align 4, !dbg !6028
  %35 = and i24 %34, -458753, !dbg !6028
  %36 = or i24 %35, 196608, !dbg !6028
  %37 = and i24 %34, 30720, !dbg !6029
  %38 = icmp ne i24 %37, 0, !dbg !6029
  br label %43, !dbg !6031

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6032
  %41 = load i24, i24* %40, align 4, !dbg !6033
  %42 = or i24 %41, 1, !dbg !6033
  br label %43, !dbg !6034

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6035
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6036
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6037
  call void @llvm.dbg.value(metadata i8* %48, metadata !5996, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8 poison, metadata !5997, metadata !DIExpression()), !dbg !6000
  %49 = lshr i24 %44, 1, !dbg !6035
  %50 = and i24 %49, 1, !dbg !6035
  %51 = zext i24 %50 to i32, !dbg !6035
  %52 = or i32 %51, %47, !dbg !6035
  %53 = trunc i32 %52 to i24, !dbg !6035
  %54 = shl nuw nsw i24 %53, 1, !dbg !6035
  %55 = and i24 %44, -3, !dbg !6035
  %56 = or i24 %54, %55, !dbg !6035
  store i24 %56, i24* %46, align 4, !dbg !6035
  ret i8* %48, !dbg !6038
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6039 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6043, metadata !DIExpression()), !dbg !6046
  %2 = load i8*, i8** %0, align 4, !dbg !6047
  call void @llvm.dbg.value(metadata i8* %2, metadata !6044, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i32 0, metadata !6045, metadata !DIExpression()), !dbg !6046
  %3 = load i8, i8* %2, align 1, !dbg !6048
  %4 = zext i8 %3 to i32, !dbg !6049
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !6050
  %6 = icmp eq i32 %5, 0, !dbg !6051
  br i1 %6, label %19, label %7, !dbg !6051

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6045, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i8* %10, metadata !6044, metadata !DIExpression()), !dbg !6046
  %11 = mul i32 %9, 10, !dbg !6052
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6054
  call void @llvm.dbg.value(metadata i8* %12, metadata !6044, metadata !DIExpression()), !dbg !6046
  %13 = add i32 %11, -48, !dbg !6055
  %14 = add i32 %13, %8, !dbg !6056
  call void @llvm.dbg.value(metadata i32 %14, metadata !6045, metadata !DIExpression()), !dbg !6046
  %15 = load i8, i8* %12, align 1, !dbg !6048
  %16 = zext i8 %15 to i32, !dbg !6049
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !6050
  %18 = icmp eq i32 %17, 0, !dbg !6051
  br i1 %18, label %19, label %7, !dbg !6051, !llvm.loop !6057

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6046
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6046
  store i8* %20, i8** %0, align 4, !dbg !6059
  ret i32 %21, !dbg !6060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6063, metadata !DIExpression()), !dbg !6064
  %2 = add i32 %0, -48, !dbg !6065
  %3 = icmp ult i32 %2, 10, !dbg !6066
  %4 = zext i1 %3 to i32, !dbg !6066
  ret i32 %4, !dbg !6067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6068 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #23, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #23, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #23, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #23, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #23, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #23, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_VND_SENSOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,%object", ""() #23, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #23, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #23, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #23, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,4\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_RTIO\0A\09.equ\09CONFIG_RTIO,1\0A\09.type\09CONFIG_RTIO,%object", ""() #23, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_SIMPLE\0A\09.equ\09CONFIG_RTIO_EXECUTOR_SIMPLE,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_SIMPLE,%object", ""() #23, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_CONCURRENT\0A\09.equ\09CONFIG_RTIO_EXECUTOR_CONCURRENT,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_CONCURRENT,%object", ""() #23, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_RTIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL,3\0A\09.type\09CONFIG_RTIO_LOG_LEVEL,%object", ""() #23, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6692, !srcloc !6693
  ret void, !dbg !6694
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6697, metadata !DIExpression()), !dbg !6699
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6700, !srcloc !6706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6700
  call void @llvm.dbg.value(metadata i32 %3, metadata !6703, metadata !DIExpression()) #23, !dbg !6707
  call void @llvm.dbg.value(metadata i32 undef, metadata !6704, metadata !DIExpression()) #23, !dbg !6707
  call void @llvm.dbg.value(metadata i32 %3, metadata !6698, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.value(metadata i32 %3, metadata !6708, metadata !DIExpression()) #23, !dbg !6711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6713, !srcloc !6714
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !6715
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !6716
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #24, !dbg !6717
  ret i32 0, !dbg !6718
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !6719 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6724, metadata !DIExpression()), !dbg !6726
  %2 = bitcast i32* %1 to i8*, !dbg !6727
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6727
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6725, metadata !DIExpression()), !dbg !6728
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6729
  %4 = or i32 %3, 268435456, !dbg !6729
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6729
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6730
  %6 = and i32 %5, 268435456, !dbg !6730
  store volatile i32 %6, i32* %1, align 4, !dbg !6731
  %7 = load volatile i32, i32* %1, align 4, !dbg !6732
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6733
  ret void, !dbg !6733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #16 !dbg !6734 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !6737, metadata !DIExpression()), !dbg !6738
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6739
  %2 = and i32 %1, -6145, !dbg !6739
  %3 = or i32 %2, 2048, !dbg !6739
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6739
  ret void, !dbg !6740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6743, metadata !DIExpression()), !dbg !6744
  ret i32 0, !dbg !6745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6746 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6749, metadata !DIExpression()), !dbg !6757
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6758
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6758
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6750, metadata !DIExpression()), !dbg !6759
  call void @llvm.va_start(i8* nonnull %3), !dbg !6760
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6761
  %5 = load i32, i32* %4, align 4, !dbg !6761
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6761
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6761
  call void @llvm.va_end(i8* nonnull %3), !dbg !6762
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6763
  ret void, !dbg !6763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6764 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6769, metadata !DIExpression()), !dbg !6770
  call void @llvm.dbg.value(metadata i8* %0, metadata !6768, metadata !DIExpression()), !dbg !6770
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6771
  ret void, !dbg !6772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6777, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i8* %1, metadata !6778, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i32 %2, metadata !6779, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i8* %1, metadata !6780, metadata !DIExpression()), !dbg !6781
  %4 = icmp eq i32 %2, 0, !dbg !6782
  br i1 %4, label %14, label %5, !dbg !6783

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) #24, !dbg !6781
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6783

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6780, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i32 %10, metadata !6779, metadata !DIExpression()), !dbg !6781
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 noundef %7) #25, !dbg !6784
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6786
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6787
  call void @llvm.dbg.value(metadata i32 %11, metadata !6779, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i8* %12, metadata !6780, metadata !DIExpression()), !dbg !6781
  br i1 %13, label %14, label %8, !dbg !6787, !llvm.loop !6788

14:                                               ; preds = %8, %3
  ret void, !dbg !6790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) unnamed_addr #4 !dbg !6791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6793, metadata !DIExpression()), !dbg !6794
  %2 = add i32 %0, -1, !dbg !6795
  %3 = icmp ult i32 %2, 4, !dbg !6795
  %4 = shl i32 %2, 3, !dbg !6795
  %5 = lshr i32 1145657157, %4, !dbg !6795
  %6 = trunc i32 %5 to i8, !dbg !6795
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6795
  ret i8 %7, !dbg !6796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6797 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6801, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %1, metadata !6802, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 0, metadata !6803, metadata !DIExpression()), !dbg !6813
  br label %4, !dbg !6814

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.37, i32 0, i32 0)) #25, !dbg !6815
  call void @llvm.dbg.value(metadata i32 0, metadata !6805, metadata !DIExpression()), !dbg !6816
  br label %16, !dbg !6817

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6803, metadata !DIExpression()), !dbg !6813
  %6 = icmp ult i32 %5, %1, !dbg !6818
  br i1 %6, label %7, label %11, !dbg !6822

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6823
  %9 = load i8, i8* %8, align 1, !dbg !6823
  %10 = zext i8 %9 to i32, !dbg !6825
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef %10) #25, !dbg !6826
  br label %12, !dbg !6827

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.39, i32 0, i32 0)) #25, !dbg !6828
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6830
  call void @llvm.dbg.value(metadata i32 %13, metadata !6803, metadata !DIExpression()), !dbg !6813
  %14 = icmp eq i32 %13, 8, !dbg !6831
  br i1 %14, label %3, label %4, !dbg !6814, !llvm.loop !6832

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.40, i32 0, i32 0)) #25, !dbg !6834
  ret void, !dbg !6835

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6805, metadata !DIExpression()), !dbg !6816
  %18 = icmp ult i32 %17, %1, !dbg !6836
  br i1 %18, label %19, label %26, !dbg !6837

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6838
  %21 = load i8, i8* %20, align 1, !dbg !6838
  call void @llvm.dbg.value(metadata i8 %21, metadata !6807, metadata !DIExpression()), !dbg !6839
  %22 = zext i8 %21 to i32, !dbg !6840
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6841
  %24 = icmp eq i32 %23, 0, !dbg !6842
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6841
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.41, i32 0, i32 0), i32 noundef %25) #25, !dbg !6843
  br label %27, !dbg !6844

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.42, i32 0, i32 0)) #25, !dbg !6845
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6847
  call void @llvm.dbg.value(metadata i32 %28, metadata !6805, metadata !DIExpression()), !dbg !6816
  %29 = icmp eq i32 %28, 8, !dbg !6848
  br i1 %29, label %15, label %16, !dbg !6817, !llvm.loop !6849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6853, metadata !DIExpression()), !dbg !6854
  %2 = add i32 %0, -32, !dbg !6855
  %3 = icmp ult i32 %2, 95, !dbg !6855
  %4 = zext i1 %3 to i32, !dbg !6855
  ret i32 %4, !dbg !6856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6906, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6907, metadata !DIExpression()), !dbg !6908
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6909
  br i1 %3, label %5, label %4, !dbg !6911

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6912
  br label %5, !dbg !6914

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6915
  ret void, !dbg !6916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6917 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6921, metadata !DIExpression()), !dbg !6922
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6923
  %3 = load i32, i32* %2, align 4, !dbg !6923
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6923
  %5 = load i32, i32* %4, align 4, !dbg !6923
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6923
  %7 = load i32, i32* %6, align 4, !dbg !6923
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6923
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6928
  %9 = load i32, i32* %8, align 4, !dbg !6928
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6928
  %11 = load i32, i32* %10, align 4, !dbg !6928
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6928
  %13 = load i32, i32* %12, align 4, !dbg !6928
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.44, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6928
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6933
  %15 = load i32, i32* %14, align 4, !dbg !6933
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6933
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6938
  %17 = load i32, i32* %16, align 4, !dbg !6938
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.46, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6938
  ret void, !dbg !6943
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6944 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6961, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6962, metadata !DIExpression()), !dbg !6964
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6965
  %4 = load i32, i32* %3, align 4, !dbg !6965
  call void @llvm.dbg.value(metadata i32 %4, metadata !6963, metadata !DIExpression()), !dbg !6964
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6966
  ret void, !dbg !6967
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6968 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6972, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i8* %0, metadata !6973, metadata !DIExpression()), !dbg !6975
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6976
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6976
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6974, metadata !DIExpression()), !dbg !6977
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6977
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6978
  %5 = bitcast i8* %4 to i32*, !dbg !6978
  %6 = load i32, i32* %5, align 4, !dbg !6978
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6979
  store i32 %6, i32* %7, align 4, !dbg !6980
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6981
  unreachable, !dbg !6982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6986, metadata !DIExpression()), !dbg !6987
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6988
  ret void, !dbg !6989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6994, metadata !DIExpression()), !dbg !6995
  %2 = icmp sgt i32 %0, -1, !dbg !6996
  br i1 %2, label %3, label %8, !dbg !6998

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6999, !srcloc !7001
  %4 = and i32 %0, 31, !dbg !7002
  %5 = shl nuw i32 1, %4, !dbg !7003
  %6 = lshr i32 %0, 5, !dbg !7004
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7005
  store volatile i32 %5, i32* %7, align 4, !dbg !7006
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7007, !srcloc !7008
  br label %8, !dbg !7009

8:                                                ; preds = %3, %1
  ret void, !dbg !7010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7013, metadata !DIExpression()), !dbg !7014
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !7015
  ret void, !dbg !7016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7019, metadata !DIExpression()), !dbg !7020
  %2 = icmp sgt i32 %0, -1, !dbg !7021
  br i1 %2, label %3, label %8, !dbg !7023

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7024
  %5 = shl nuw i32 1, %4, !dbg !7026
  %6 = lshr i32 %0, 5, !dbg !7027
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7028
  store volatile i32 %5, i32* %7, align 4, !dbg !7029
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7030, !srcloc !7034
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7035, !srcloc !7038
  br label %8, !dbg !7039

8:                                                ; preds = %3, %1
  ret void, !dbg !7040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !7041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7045, metadata !DIExpression()), !dbg !7046
  %2 = lshr i32 %0, 5, !dbg !7047
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7048
  %4 = load volatile i32, i32* %3, align 4, !dbg !7048
  %5 = and i32 %0, 31, !dbg !7049
  %6 = shl nuw i32 1, %5, !dbg !7049
  %7 = and i32 %4, %6, !dbg !7050
  ret i32 %7, !dbg !7051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7056, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.value(metadata i32 %1, metadata !7057, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.value(metadata i32 %2, metadata !7058, metadata !DIExpression()), !dbg !7059
  %4 = add i32 %1, 1, !dbg !7060
  call void @llvm.dbg.value(metadata i32 %4, metadata !7057, metadata !DIExpression()), !dbg !7059
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !7063
  ret void, !dbg !7064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7069, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i32 %1, metadata !7070, metadata !DIExpression()), !dbg !7071
  %3 = trunc i32 %1 to i8, !dbg !7072
  %4 = shl i8 %3, 4, !dbg !7072
  %5 = and i32 %0, 15, !dbg !7074
  %6 = add nsw i32 %5, -4, !dbg !7074
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7074
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7074
  %9 = icmp slt i32 %0, 0, !dbg !7074
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7074
  store volatile i8 %4, i8* %10, align 1, !dbg !7072
  ret void, !dbg !7075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7076 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7078, metadata !DIExpression()), !dbg !7079
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7080
  ret void, !dbg !7081
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7082 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7084
  tail call void @z_arm_int_exit() #25, !dbg !7085
  ret void, !dbg !7086
}

; Function Attrs: optsize
declare !dbg !7087 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7088 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7090 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !7092
  tail call void @z_bss_zero() #25, !dbg !7093
  tail call void @z_data_copy() #25, !dbg !7094
  tail call void @z_arm_interrupt_init() #25, !dbg !7095
  tail call void @z_cstart() #27, !dbg !7096
  unreachable, !dbg !7096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7097 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7098
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7099, !srcloc !7102
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7103, !srcloc !7106
  ret void, !dbg !7107
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7111, metadata !DIExpression()), !dbg !7112
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7113
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7114
  store i32 %0, i32* %3, align 4, !dbg !7115
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7116
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7117
  store i32 %4, i32* %5, align 4, !dbg !7118
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7119
  %7 = or i32 %6, 268435456, !dbg !7119
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7119
  call void @llvm.dbg.value(metadata i32 0, metadata !7120, metadata !DIExpression()) #23, !dbg !7123
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7125, !srcloc !7126
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7127
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7128
  %10 = load i32, i32* %9, align 4, !dbg !7128
  ret i32 %10, !dbg !7129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !7130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7240, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7241, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i8* %2, metadata !7242, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7243, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i8* %4, metadata !7244, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i8* %5, metadata !7245, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i8* %6, metadata !7246, metadata !DIExpression()), !dbg !7248
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7249
  call void @llvm.dbg.value(metadata i8* %8, metadata !7247, metadata !DIExpression()), !dbg !7248
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7250
  %10 = bitcast i8* %9 to i32*, !dbg !7250
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7251
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7252
  %12 = bitcast i8* %8 to i32*, !dbg !7253
  store i32 %11, i32* %12, align 4, !dbg !7254
  %13 = ptrtoint i8* %4 to i32, !dbg !7255
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7256
  %15 = bitcast i8* %14 to i32*, !dbg !7256
  store i32 %13, i32* %15, align 4, !dbg !7257
  %16 = ptrtoint i8* %5 to i32, !dbg !7258
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7259
  %18 = bitcast i8* %17 to i32*, !dbg !7259
  store i32 %16, i32* %18, align 4, !dbg !7260
  %19 = ptrtoint i8* %6 to i32, !dbg !7261
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7262
  %21 = bitcast i8* %20 to i32*, !dbg !7262
  store i32 %19, i32* %21, align 4, !dbg !7263
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7264
  %23 = bitcast i8* %22 to i32*, !dbg !7264
  store i32 16777216, i32* %23, align 4, !dbg !7265
  %24 = ptrtoint i8* %8 to i32, !dbg !7266
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7267
  store i32 %24, i32* %25, align 8, !dbg !7268
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7269
  store i32 0, i32* %26, align 4, !dbg !7270
  ret void, !dbg !7271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7277, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata i32 %1, metadata !7278, metadata !DIExpression()), !dbg !7283
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7284
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7279, metadata !DIExpression()), !dbg !7283
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7285
  br i1 %4, label %19, label %5, !dbg !7287

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7282, metadata !DIExpression()), !dbg !7283
  %6 = icmp eq i32 %0, -22, !dbg !7288
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7288
  %8 = load i32, i32* %7, align 4, !dbg !7288
  br i1 %6, label %16, label %9, !dbg !7290

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7288
  %11 = icmp ule i32 %10, %0, !dbg !7288
  %12 = icmp ugt i32 %8, %0, !dbg !7288
  %13 = and i1 %12, %11, !dbg !7288
  %14 = icmp ugt i32 %8, %1, !dbg !7288
  %15 = and i1 %14, %13, !dbg !7288
  br i1 %15, label %18, label %19, !dbg !7288

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7288
  br i1 %17, label %18, label %19, !dbg !7290

18:                                               ; preds = %9, %16
  br label %19, !dbg !7291

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7283
  ret i32 %20, !dbg !7293
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7294 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7298, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.value(metadata i8* %1, metadata !7299, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7300, metadata !DIExpression()), !dbg !7301
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7302
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7303
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7304, !srcloc !7305
  unreachable, !dbg !7306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7307 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7325, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i32 %1, metadata !7326, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i32 %2, metadata !7327, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7328, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i32 0, metadata !7329, metadata !DIExpression()), !dbg !7335
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7336
  %9 = and i32 %8, 511, !dbg !7337
  call void @llvm.dbg.value(metadata i32 %9, metadata !7330, metadata !DIExpression()), !dbg !7335
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7338
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7338
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7339
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7339
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7334, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 0, metadata !7341, metadata !DIExpression()) #23, !dbg !7344
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7346, !srcloc !7347
  call void @llvm.dbg.value(metadata i8* %6, metadata !7332, metadata !DIExpression(DW_OP_deref)), !dbg !7335
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !7348
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7333, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i8* %5, metadata !7331, metadata !DIExpression(DW_OP_deref)), !dbg !7335
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !7349
  call void @llvm.dbg.value(metadata i32 %12, metadata !7329, metadata !DIExpression()), !dbg !7335
  %13 = load i8, i8* %5, align 1, !dbg !7350, !range !7352
  call void @llvm.dbg.value(metadata i8 %13, metadata !7331, metadata !DIExpression()), !dbg !7335
  %14 = icmp eq i8 %13, 0, !dbg !7350
  br i1 %14, label %15, label %32, !dbg !7353

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7354
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7355
  %18 = load i8, i8* %6, align 1, !dbg !7356, !range !7352
  call void @llvm.dbg.value(metadata i8 %18, metadata !7332, metadata !DIExpression()), !dbg !7335
  %19 = icmp eq i8 %18, 0, !dbg !7356
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7358
  %21 = load i32, i32* %20, align 4, !dbg !7358
  br i1 %19, label %27, label %22, !dbg !7359

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7360
  %24 = icmp eq i32 %23, 0, !dbg !7363
  br i1 %24, label %25, label %31, !dbg !7364

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7365
  br label %29, !dbg !7367

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7368
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7358
  br label %31, !dbg !7370

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7370
  br label %32, !dbg !7371

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7371
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7371
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7371
  ret void, !dbg !7371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7377, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i32 %1, metadata !7378, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i32 %2, metadata !7379, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i8* %3, metadata !7380, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i8 0, metadata !7381, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7382, metadata !DIExpression()), !dbg !7383
  store i8 0, i8* %3, align 1, !dbg !7384
  %5 = icmp ugt i32 %2, -16777217, !dbg !7385
  br i1 %5, label %6, label %17, !dbg !7387

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7388
  %8 = icmp eq i32 %7, 8, !dbg !7388
  br i1 %8, label %9, label %10, !dbg !7388

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !7390
  br label %17, !dbg !7396

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7397
  %12 = icmp eq i32 %11, 0, !dbg !7397
  br i1 %12, label %13, label %14, !dbg !7398

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7382, metadata !DIExpression()), !dbg !7383
  store i8 1, i8* %3, align 1, !dbg !7401
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7383
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7382, metadata !DIExpression()), !dbg !7383
  br label %17, !dbg !7404

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7383
  ret %struct.__esf* %18, !dbg !7405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7406 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7410, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 %1, metadata !7411, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i8* %2, metadata !7412, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 0, metadata !7413, metadata !DIExpression()), !dbg !7414
  store i8 0, i8* %2, align 1, !dbg !7415
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7416

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !7417
  call void @llvm.dbg.value(metadata i32 %5, metadata !7413, metadata !DIExpression()), !dbg !7414
  br label %12, !dbg !7419

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7420
  call void @llvm.dbg.value(metadata i32 %7, metadata !7413, metadata !DIExpression()), !dbg !7414
  br label %12, !dbg !7421

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7422
  call void @llvm.dbg.value(metadata i32 0, metadata !7413, metadata !DIExpression()), !dbg !7414
  br label %12, !dbg !7423

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !7424
  call void @llvm.dbg.value(metadata i32 0, metadata !7413, metadata !DIExpression()), !dbg !7414
  br label %12, !dbg !7425

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !7426
  br label %12, !dbg !7427

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !7428
  br label %12, !dbg !7429

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7414
  call void @llvm.dbg.value(metadata i32 %13, metadata !7413, metadata !DIExpression()), !dbg !7414
  ret i32 %13, !dbg !7430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7431 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7435, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i8* %1, metadata !7436, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7438
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !7439
  store i8 0, i8* %1, align 1, !dbg !7444
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7445
  %4 = and i32 %3, 2, !dbg !7447
  %5 = icmp eq i32 %4, 0, !dbg !7448
  br i1 %5, label %7, label %6, !dbg !7449

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7450
  br label %36, !dbg !7456

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7457
  %9 = icmp sgt i32 %8, -1, !dbg !7459
  br i1 %9, label %11, label %10, !dbg !7460

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7461
  br label %36, !dbg !7467

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7468
  %13 = and i32 %12, 1073741824, !dbg !7470
  %14 = icmp eq i32 %13, 0, !dbg !7471
  br i1 %14, label %36, label %15, !dbg !7472

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !7473
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !7479
  br i1 %16, label %17, label %21, !dbg !7481

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7482
  %19 = load i32, i32* %18, align 4, !dbg !7482
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.59, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7482
  %20 = load i32, i32* %18, align 4, !dbg !7488
  call void @llvm.dbg.value(metadata i32 %20, metadata !7437, metadata !DIExpression()), !dbg !7438
  br label %36, !dbg !7489

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7490
  %23 = and i32 %22, 255, !dbg !7492
  %24 = icmp eq i32 %23, 0, !dbg !7493
  br i1 %24, label %27, label %25, !dbg !7494

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7495
  call void @llvm.dbg.value(metadata i32 %26, metadata !7437, metadata !DIExpression()), !dbg !7438
  br label %36, !dbg !7497

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7498
  %29 = and i32 %28, 65280, !dbg !7500
  %30 = icmp eq i32 %29, 0, !dbg !7501
  br i1 %30, label %32, label %31, !dbg !7502

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7503
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7438
  br label %36, !dbg !7505

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7506
  %34 = icmp ult i32 %33, 65536, !dbg !7508
  br i1 %34, label %36, label %35, !dbg !7509

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7510
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7438
  br label %36, !dbg !7512

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7438
  call void @llvm.dbg.value(metadata i32 %37, metadata !7437, metadata !DIExpression()), !dbg !7438
  ret i32 %37, !dbg !7513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7514 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7516, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 %1, metadata !7517, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i8* %2, metadata !7518, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 0, metadata !7519, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 -22, metadata !7520, metadata !DIExpression()), !dbg !7529
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !7530
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7535
  %5 = and i32 %4, 16, !dbg !7537
  %6 = icmp eq i32 %5, 0, !dbg !7538
  br i1 %6, label %8, label %7, !dbg !7539

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !7540
  br label %8, !dbg !7546

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7547
  %10 = and i32 %9, 8, !dbg !7549
  %11 = icmp eq i32 %10, 0, !dbg !7550
  br i1 %11, label %13, label %12, !dbg !7551

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7552
  br label %13, !dbg !7558

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7559
  %15 = and i32 %14, 2, !dbg !7560
  %16 = icmp eq i32 %15, 0, !dbg !7561
  br i1 %16, label %27, label %17, !dbg !7562

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69) #25, !dbg !7563
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7568
  call void @llvm.dbg.value(metadata i32 %18, metadata !7521, metadata !DIExpression()), !dbg !7569
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7570
  %20 = and i32 %19, 128, !dbg !7572
  %21 = icmp eq i32 %20, 0, !dbg !7573
  br i1 %21, label %27, label %22, !dbg !7574

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7520, metadata !DIExpression()), !dbg !7529
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7575
  %23 = icmp eq i32 %1, 0, !dbg !7581
  br i1 %23, label %27, label %24, !dbg !7583

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7584
  %26 = and i32 %25, -129, !dbg !7584
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7584
  br label %27, !dbg !7586

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7529
  call void @llvm.dbg.value(metadata i32 %28, metadata !7520, metadata !DIExpression()), !dbg !7529
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7587
  %30 = and i32 %29, 1, !dbg !7589
  %31 = icmp eq i32 %30, 0, !dbg !7590
  br i1 %31, label %33, label %32, !dbg !7591

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #25, !dbg !7592
  br label %33, !dbg !7598

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7599
  %35 = and i32 %34, 16, !dbg !7600
  %36 = icmp eq i32 %35, 0, !dbg !7600
  br i1 %36, label %37, label %41, !dbg !7601

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7602
  %39 = and i32 %38, 2, !dbg !7603
  %40 = icmp eq i32 %39, 0, !dbg !7603
  br i1 %40, label %50, label %41, !dbg !7604

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7605
  %43 = and i32 %42, 2048, !dbg !7606
  %44 = icmp eq i32 %43, 0, !dbg !7606
  br i1 %44, label %50, label %45, !dbg !7607

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !7608
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #25, !dbg !7609
  call void @llvm.dbg.value(metadata i32 %47, metadata !7524, metadata !DIExpression()), !dbg !7610
  %48 = icmp eq i32 %47, 0, !dbg !7611
  br i1 %48, label %50, label %49, !dbg !7613

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !7614, metadata !DIExpression()) #23, !dbg !7617
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #23, !dbg !7620, !srcloc !7621
  call void @llvm.dbg.value(metadata i32 2, metadata !7519, metadata !DIExpression()), !dbg !7529
  br label %50, !dbg !7622

50:                                               ; preds = %49, %45, %41, %37
  %51 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %45 ], !dbg !7529
  call void @llvm.dbg.value(metadata i32 %51, metadata !7519, metadata !DIExpression()), !dbg !7529
  %52 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7623
  %53 = or i32 %52, 255, !dbg !7623
  store volatile i32 %53, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7623
  store i8 0, i8* %2, align 1, !dbg !7624
  ret i32 %51, !dbg !7625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7626 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7630, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 %0, metadata !7631, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i8* %1, metadata !7632, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 0, metadata !7633, metadata !DIExpression()), !dbg !7637
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #25, !dbg !7638
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7643
  %4 = and i32 %3, 4096, !dbg !7645
  %5 = icmp eq i32 %4, 0, !dbg !7645
  br i1 %5, label %7, label %6, !dbg !7646

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7647
  br label %7, !dbg !7653

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7654
  %9 = and i32 %8, 2048, !dbg !7656
  %10 = icmp eq i32 %9, 0, !dbg !7656
  br i1 %10, label %12, label %11, !dbg !7657

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7658
  br label %12, !dbg !7664

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7665
  %14 = and i32 %13, 512, !dbg !7666
  %15 = icmp eq i32 %14, 0, !dbg !7666
  br i1 %15, label %26, label %16, !dbg !7667

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7668
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7673
  call void @llvm.dbg.value(metadata i32 %17, metadata !7634, metadata !DIExpression()), !dbg !7674
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7675
  %19 = and i32 %18, 32768, !dbg !7677
  %20 = icmp eq i32 %19, 0, !dbg !7678
  br i1 %20, label %26, label %21, !dbg !7679

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7680
  %22 = icmp eq i32 %0, 0, !dbg !7686
  br i1 %22, label %26, label %23, !dbg !7688

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7689
  %25 = and i32 %24, -32769, !dbg !7689
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7689
  br label %26, !dbg !7691

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7692
  %28 = and i32 %27, 1024, !dbg !7694
  %29 = icmp eq i32 %28, 0, !dbg !7694
  br i1 %29, label %31, label %30, !dbg !7695

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !7696
  br label %31, !dbg !7702

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7703
  %33 = and i32 %32, 256, !dbg !7705
  %34 = icmp eq i32 %33, 0, !dbg !7706
  br i1 %34, label %36, label %35, !dbg !7707

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #25, !dbg !7708
  br label %36, !dbg !7714

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7715
  %38 = or i32 %37, 65280, !dbg !7715
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7715
  store i8 0, i8* %1, align 1, !dbg !7716
  ret void, !dbg !7717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7718 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7724, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 0, metadata !7725, metadata !DIExpression()), !dbg !7726
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7727
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7732
  %2 = and i32 %1, 33554432, !dbg !7734
  %3 = icmp eq i32 %2, 0, !dbg !7735
  br i1 %3, label %5, label %4, !dbg !7736

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7737
  br label %5, !dbg !7743

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7744
  %7 = and i32 %6, 16777216, !dbg !7746
  %8 = icmp eq i32 %7, 0, !dbg !7747
  br i1 %8, label %10, label %9, !dbg !7748

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #25, !dbg !7749
  br label %10, !dbg !7755

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7756
  %12 = and i32 %11, 524288, !dbg !7758
  %13 = icmp eq i32 %12, 0, !dbg !7759
  br i1 %13, label %15, label %14, !dbg !7760

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7761
  br label %15, !dbg !7767

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7768
  %17 = and i32 %16, 262144, !dbg !7770
  %18 = icmp eq i32 %17, 0, !dbg !7771
  br i1 %18, label %20, label %19, !dbg !7772

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7773
  br label %20, !dbg !7779

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7780
  %22 = and i32 %21, 131072, !dbg !7782
  %23 = icmp eq i32 %22, 0, !dbg !7783
  br i1 %23, label %25, label %24, !dbg !7784

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !7785
  br label %25, !dbg !7791

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7792
  %27 = and i32 %26, 65536, !dbg !7794
  %28 = icmp eq i32 %27, 0, !dbg !7795
  br i1 %28, label %30, label %29, !dbg !7796

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7797
  br label %30, !dbg !7803

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7804
  %32 = or i32 %31, -65536, !dbg !7804
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7804
  ret void, !dbg !7805
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7806 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7810, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.value(metadata i8* %0, metadata !7811, metadata !DIExpression()), !dbg !7812
  store i8 0, i8* %0, align 1, !dbg !7813
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !7814
  ret void, !dbg !7819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7820 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7824, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.value(metadata i32 %0, metadata !7825, metadata !DIExpression()), !dbg !7826
  %2 = icmp slt i32 %0, 16, !dbg !7827
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.28.49, i32 0, i32 0), !dbg !7827
  %4 = add nsw i32 %0, -16, !dbg !7827
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7827
  ret void, !dbg !7832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7833 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7837, metadata !DIExpression()), !dbg !7840
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7841
  %3 = load i32, i32* %2, align 4, !dbg !7841
  %4 = inttoptr i32 %3 to i16*, !dbg !7842
  call void @llvm.dbg.value(metadata i16* %4, metadata !7838, metadata !DIExpression()), !dbg !7840
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7843
  %6 = or i32 %5, 256, !dbg !7843
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7843
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7844, !srcloc !7847
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7848, !srcloc !7851
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7852
  %8 = load i16, i16* %7, align 2, !dbg !7853
  call void @llvm.dbg.value(metadata i16 %8, metadata !7839, metadata !DIExpression()), !dbg !7840
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7854
  %10 = and i32 %9, -257, !dbg !7854
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7854
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7855, !srcloc !7847
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7857, !srcloc !7851
  %11 = icmp eq i16 %8, -8446, !dbg !7859
  ret i1 %11, !dbg !7861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !7862 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7863
  %2 = or i32 %1, 16, !dbg !7863
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7863
  ret void, !dbg !7864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !7865 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7868, metadata !DIExpression()), !dbg !7869
  br label %1, !dbg !7870

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7868, metadata !DIExpression()), !dbg !7869
  tail call fastcc void @__NVIC_SetPriority.63(i32 noundef %2) #24, !dbg !7872
  %3 = add nuw nsw i32 %2, 1, !dbg !7875
  call void @llvm.dbg.value(metadata i32 %3, metadata !7868, metadata !DIExpression()), !dbg !7869
  %4 = icmp eq i32 %3, 45, !dbg !7876
  br i1 %4, label %5, label %1, !dbg !7870, !llvm.loop !7877

5:                                                ; preds = %1
  ret void, !dbg !7879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63(i32 noundef %0) unnamed_addr #16 !dbg !7880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7882, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i32 1, metadata !7883, metadata !DIExpression()), !dbg !7884
  %2 = and i32 %0, 15, !dbg !7885
  %3 = add nsw i32 %2, -4, !dbg !7885
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7885
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7885
  %6 = icmp slt i32 %0, 0, !dbg !7885
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7885
  store volatile i8 16, i8* %7, align 1, !dbg !7886
  ret void, !dbg !7888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7995, metadata !DIExpression()), !dbg !7996
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7997
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7999
  br i1 %3, label %4, label %12, !dbg !8000

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8001, !srcloc !8015
  call void @llvm.dbg.value(metadata i32 %5, metadata !8006, metadata !DIExpression()) #23, !dbg !8016
  %6 = icmp eq i32 %5, 0, !dbg !8017
  br i1 %6, label %12, label %7, !dbg !8018

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8019
  %9 = or i32 %8, 268435456, !dbg !8019
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8019
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8021
  %11 = and i32 %10, -32769, !dbg !8021
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8021
  br label %12, !dbg !8022

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8023
  ret void, !dbg !8024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8025 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !8026
  ret void, !dbg !8027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !765, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i8 0, metadata !766, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i32 64, metadata !768, metadata !DIExpression()), !dbg !8028
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8029
  %3 = load i32, i32* %2, align 4, !dbg !8029
  %4 = add i32 %3, -64, !dbg !8031
  call void @llvm.dbg.value(metadata i32 %4, metadata !767, metadata !DIExpression()), !dbg !8028
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8032
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8033
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8034
  call void @llvm.dbg.value(metadata i8 1, metadata !766, metadata !DIExpression()), !dbg !8028
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !8035
  ret void, !dbg !8036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8037 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8038
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8039, !srcloc !8042
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8043, !srcloc !8046
  ret void, !dbg !8047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8048 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !8049, !srcloc !8052
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8053
  ret void, !dbg !8054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8055 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8070, metadata !DIExpression()), !dbg !8074
  call void @llvm.dbg.value(metadata i8 %1, metadata !8071, metadata !DIExpression()), !dbg !8074
  call void @llvm.dbg.value(metadata i32 %2, metadata !8072, metadata !DIExpression()), !dbg !8074
  call void @llvm.dbg.value(metadata i32 %3, metadata !8073, metadata !DIExpression()), !dbg !8074
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8075
  ret void, !dbg !8077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8078 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8083, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i8 %1, metadata !8084, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 undef, metadata !8085, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 undef, metadata !8086, metadata !DIExpression()), !dbg !8088
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8089
  call void @llvm.dbg.value(metadata i8 %3, metadata !8087, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8088
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !8090
  call void @llvm.dbg.value(metadata i32 %4, metadata !8087, metadata !DIExpression()), !dbg !8088
  %5 = trunc i32 %4 to i8, !dbg !8091
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8092
  ret void, !dbg !8093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8094 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8098, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8 %1, metadata !8099, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8 %2, metadata !8100, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i1 %3, metadata !8101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8104
  %5 = zext i8 %2 to i32, !dbg !8105
  call void @llvm.dbg.value(metadata i32 %5, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 0, metadata !8102, metadata !DIExpression()), !dbg !8104
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 0, metadata !8102, metadata !DIExpression()), !dbg !8104
  %7 = icmp eq i8 %1, 0, !dbg !8106
  br i1 %7, label %30, label %8, !dbg !8109

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %10, metadata !8102, metadata !DIExpression()), !dbg !8104
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8110
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8113
  %13 = load i32, i32* %12, align 4, !dbg !8113
  %14 = icmp eq i32 %13, 0, !dbg !8114
  br i1 %14, label %26, label %15, !dbg !8115

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8116

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8118
  %18 = icmp eq i32 %17, 0, !dbg !8118
  br i1 %18, label %19, label %20, !dbg !8119

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !8120
  br label %30, !dbg !8126

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8127
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8128
  call void @llvm.dbg.value(metadata i32 %22, metadata !8103, metadata !DIExpression()), !dbg !8104
  %23 = icmp eq i32 %22, -22, !dbg !8129
  br i1 %23, label %30, label %24, !dbg !8131

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8132
  call void @llvm.dbg.value(metadata i32 %25, metadata !8103, metadata !DIExpression()), !dbg !8104
  br label %26, !dbg !8133

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8104
  call void @llvm.dbg.value(metadata i32 %27, metadata !8103, metadata !DIExpression()), !dbg !8104
  %28 = add nuw nsw i32 %10, 1, !dbg !8134
  call void @llvm.dbg.value(metadata i32 %28, metadata !8102, metadata !DIExpression()), !dbg !8104
  %29 = icmp eq i32 %28, %6, !dbg !8106
  br i1 %29, label %30, label %8, !dbg !8109, !llvm.loop !8135

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8104
  ret i32 %31, !dbg !8137
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !8138 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8142, metadata !DIExpression()), !dbg !8144
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8145
  %3 = load i32, i32* %2, align 4, !dbg !8145
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8146, !range !8147
  %5 = icmp ult i32 %4, 2, !dbg !8146
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8148
  br i1 %7, label %8, label %15, !dbg !8148

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8149
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8150
  %11 = load i32, i32* %10, align 4, !dbg !8150
  %12 = and i32 %11, %9, !dbg !8151
  %13 = icmp eq i32 %12, 0, !dbg !8152
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8143, metadata !DIExpression()), !dbg !8144
  ret i32 %16, !dbg !8153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8154 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8158, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8159, metadata !DIExpression()), !dbg !8161
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8162
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8162
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8160, metadata !DIExpression()), !dbg !8163
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8164
  %6 = load i32, i32* %5, align 4, !dbg !8164
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8165
  store i32 %6, i32* %7, align 4, !dbg !8166
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8167
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8168
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8169
  %11 = load i32, i32* %10, align 4, !dbg !8169
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* noundef nonnull %8, %union.anon* noundef nonnull %9, i32 noundef %11) #24, !dbg !8170
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !8171
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8172
  ret i32 %12, !dbg !8173
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* nocapture noundef writeonly %0, %union.anon* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !8174 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !8181, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !8182, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i32 undef, metadata !8183, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i32 %2, metadata !8184, metadata !DIExpression()), !dbg !8185
  %4 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !8186
  %5 = load i32, i32* %4, align 4, !dbg !8186
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !8187
  %7 = or i32 %6, %5, !dbg !8188
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !8189
  store i32 %7, i32* %8, align 4, !dbg !8190
  ret void, !dbg !8191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8192 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8197, metadata !DIExpression()), !dbg !8198
  %3 = zext i8 %0 to i32, !dbg !8199
  %4 = icmp ugt i8 %0, 7, !dbg !8201
  br i1 %4, label %5, label %6, !dbg !8202

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !8203
  br label %7, !dbg !8209

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !8210
  br label %7, !dbg !8211

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8198
  ret i32 %8, !dbg !8212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !8213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8217, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8218, metadata !DIExpression()), !dbg !8219
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !8220
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8221
  %4 = load i32, i32* %3, align 4, !dbg !8221
  %5 = and i32 %4, -32, !dbg !8222
  %6 = or i32 %5, %0, !dbg !8223
  %7 = or i32 %6, 16, !dbg !8223
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8224
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8225
  %9 = load i32, i32* %8, align 4, !dbg !8225
  %10 = or i32 %9, 1, !dbg !8226
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8227
  ret void, !dbg !8228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !8229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8232, metadata !DIExpression()), !dbg !8233
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8234
  ret void, !dbg !8235
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8240, metadata !DIExpression()), !dbg !8241
  %2 = icmp ult i32 %0, 33, !dbg !8242
  br i1 %2, label %11, label %3, !dbg !8244

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8245
  br i1 %4, label %11, label %5, !dbg !8247

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8248
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8249, !range !8147
  %8 = mul nsw i32 %7, -2, !dbg !8250
  %9 = add nsw i32 %8, 62, !dbg !8250
  %10 = and i32 %9, 62, !dbg !8251
  br label %11, !dbg !8252

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8241
  ret i32 %12, !dbg !8253
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8254 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8258, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i8 %1, metadata !8259, metadata !DIExpression()), !dbg !8260
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8261
  ret void, !dbg !8263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8264 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8268, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i8 %1, metadata !8269, metadata !DIExpression()), !dbg !8275
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8276
  call void @llvm.dbg.value(metadata i8 %3, metadata !8270, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8275
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !8277
  call void @llvm.dbg.value(metadata i32 %4, metadata !8270, metadata !DIExpression()), !dbg !8275
  %5 = icmp ne i32 %4, -22, !dbg !8278
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8279
  call void @llvm.dbg.value(metadata i32 %4, metadata !8271, metadata !DIExpression()), !dbg !8280
  br i1 %7, label %8, label %12, !dbg !8279

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8271, metadata !DIExpression()), !dbg !8280
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !8281
  %10 = add i32 %9, 1, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %10, metadata !8271, metadata !DIExpression()), !dbg !8280
  %11 = icmp eq i32 %10, 8, !dbg !8285
  br i1 %11, label %12, label %8, !dbg !8286, !llvm.loop !8287

12:                                               ; preds = %8, %2
  ret void, !dbg !8289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !8290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8293, metadata !DIExpression()), !dbg !8294
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8295
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8296
  ret void, !dbg !8297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8298 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8303
  %2 = icmp ugt i32 %1, 8, !dbg !8305
  br i1 %2, label %14, label %3, !dbg !8306

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !8307
  call void @llvm.dbg.value(metadata i32 0, metadata !8302, metadata !DIExpression()), !dbg !8308
  %4 = icmp eq i32 %1, 0, !dbg !8309
  br i1 %4, label %12, label %5, !dbg !8312

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8312

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8302, metadata !DIExpression()), !dbg !8308
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8313
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !8315
  %10 = add nuw i32 %8, 1, !dbg !8316
  call void @llvm.dbg.value(metadata i32 %10, metadata !8302, metadata !DIExpression()), !dbg !8308
  %11 = icmp eq i32 %10, %1, !dbg !8309
  br i1 %11, label %12, label %7, !dbg !8312, !llvm.loop !8317

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8319
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8320
  tail call void @arm_core_mpu_enable() #24, !dbg !8321
  br label %14, !dbg !8322

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8308
  ret i32 %15, !dbg !8323
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8324 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8331, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8* %1, metadata !8332, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8* %0, metadata !8333, metadata !DIExpression()), !dbg !8334
  %3 = load i8, i8* %1, align 1, !dbg !8335
  %4 = icmp eq i8 %3, 0, !dbg !8336
  br i1 %4, label %13, label %5, !dbg !8337

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8331, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8* %8, metadata !8332, metadata !DIExpression()), !dbg !8334
  store i8 %6, i8* %7, align 1, !dbg !8338
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8340
  call void @llvm.dbg.value(metadata i8* %9, metadata !8331, metadata !DIExpression()), !dbg !8334
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8341
  call void @llvm.dbg.value(metadata i8* %10, metadata !8332, metadata !DIExpression()), !dbg !8334
  %11 = load i8, i8* %10, align 1, !dbg !8335
  %12 = icmp eq i8 %11, 0, !dbg !8336
  br i1 %12, label %13, label %5, !dbg !8337, !llvm.loop !8342

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8344
  ret i8* %0, !dbg !8345
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8346 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8350, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i8* %1, metadata !8351, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 %2, metadata !8352, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i8* %0, metadata !8353, metadata !DIExpression()), !dbg !8354
  %4 = icmp eq i32 %2, 0, !dbg !8355
  br i1 %4, label %22, label %5, !dbg !8356

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8350, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 %7, metadata !8352, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i8* %8, metadata !8351, metadata !DIExpression()), !dbg !8354
  %9 = load i8, i8* %8, align 1, !dbg !8357
  %10 = icmp eq i8 %9, 0, !dbg !8358
  br i1 %10, label %16, label %11, !dbg !8359

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8360
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8362
  call void @llvm.dbg.value(metadata i8* %12, metadata !8351, metadata !DIExpression()), !dbg !8354
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8363
  call void @llvm.dbg.value(metadata i8* %13, metadata !8350, metadata !DIExpression()), !dbg !8354
  %14 = add i32 %7, -1, !dbg !8364
  call void @llvm.dbg.value(metadata i32 %14, metadata !8352, metadata !DIExpression()), !dbg !8354
  %15 = icmp eq i32 %14, 0, !dbg !8355
  br i1 %15, label %22, label %5, !dbg !8356, !llvm.loop !8365

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8350, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 %18, metadata !8352, metadata !DIExpression()), !dbg !8354
  store i8 0, i8* %17, align 1, !dbg !8367
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8369
  call void @llvm.dbg.value(metadata i8* %19, metadata !8350, metadata !DIExpression()), !dbg !8354
  %20 = add i32 %18, -1, !dbg !8370
  call void @llvm.dbg.value(metadata i32 %20, metadata !8352, metadata !DIExpression()), !dbg !8354
  %21 = icmp eq i32 %20, 0, !dbg !8371
  br i1 %21, label %22, label %16, !dbg !8372, !llvm.loop !8373

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8375
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8376 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8380, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 %1, metadata !8381, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 %1, metadata !8382, metadata !DIExpression()), !dbg !8383
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8384

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8380, metadata !DIExpression()), !dbg !8383
  %6 = load i8, i8* %5, align 1, !dbg !8385
  %7 = icmp eq i8 %6, %3, !dbg !8386
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8387
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8388
  call void @llvm.dbg.value(metadata i8* %10, metadata !8380, metadata !DIExpression()), !dbg !8383
  br i1 %9, label %11, label %4, !dbg !8387, !llvm.loop !8390

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8392
  ret i8* %12, !dbg !8393
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8396, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 %1, metadata !8397, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i8* null, metadata !8398, metadata !DIExpression()), !dbg !8399
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8400

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8399
  call void @llvm.dbg.value(metadata i8* %6, metadata !8398, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i8* %5, metadata !8396, metadata !DIExpression()), !dbg !8399
  %7 = load i8, i8* %5, align 1, !dbg !8401
  %8 = icmp eq i8 %7, %3, !dbg !8404
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8405
  call void @llvm.dbg.value(metadata i8* %9, metadata !8398, metadata !DIExpression()), !dbg !8399
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8406
  call void @llvm.dbg.value(metadata i8* %10, metadata !8396, metadata !DIExpression()), !dbg !8399
  %11 = icmp eq i8 %7, 0, !dbg !8407
  br i1 %11, label %12, label %4, !dbg !8407, !llvm.loop !8408

12:                                               ; preds = %4
  ret i8* %9, !dbg !8410
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !8411 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8415, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.value(metadata i32 0, metadata !8416, metadata !DIExpression()), !dbg !8417
  %2 = load i8, i8* %0, align 1, !dbg !8418
  %3 = icmp eq i8 %2, 0, !dbg !8419
  br i1 %3, label %11, label %4, !dbg !8420

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8416, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.value(metadata i8* %6, metadata !8415, metadata !DIExpression()), !dbg !8417
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8421
  call void @llvm.dbg.value(metadata i8* %7, metadata !8415, metadata !DIExpression()), !dbg !8417
  %8 = add i32 %5, 1, !dbg !8423
  call void @llvm.dbg.value(metadata i32 %8, metadata !8416, metadata !DIExpression()), !dbg !8417
  %9 = load i8, i8* %7, align 1, !dbg !8418
  %10 = icmp eq i8 %9, 0, !dbg !8419
  br i1 %10, label %11, label %4, !dbg !8420, !llvm.loop !8424

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8417
  ret i32 %12, !dbg !8426
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8427 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8431, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i32 %1, metadata !8432, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i32 0, metadata !8433, metadata !DIExpression()), !dbg !8434
  %3 = load i8, i8* %0, align 1, !dbg !8435
  %4 = icmp ne i8 %3, 0, !dbg !8436
  %5 = icmp ne i32 %1, 0, !dbg !8437
  %6 = and i1 %4, %5, !dbg !8437
  br i1 %6, label %7, label %16, !dbg !8438

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8433, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %9, metadata !8431, metadata !DIExpression()), !dbg !8434
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8439
  call void @llvm.dbg.value(metadata i8* %10, metadata !8431, metadata !DIExpression()), !dbg !8434
  %11 = add nuw i32 %8, 1, !dbg !8441
  call void @llvm.dbg.value(metadata i32 %11, metadata !8433, metadata !DIExpression()), !dbg !8434
  %12 = load i8, i8* %10, align 1, !dbg !8435
  %13 = icmp ne i8 %12, 0, !dbg !8436
  %14 = icmp ult i32 %11, %1, !dbg !8437
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8437
  br i1 %15, label %7, label %16, !dbg !8438, !llvm.loop !8442

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8434
  ret i32 %17, !dbg !8444
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !8445 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8449, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.value(metadata i8* %1, metadata !8450, metadata !DIExpression()), !dbg !8451
  %3 = load i8, i8* %0, align 1, !dbg !8452
  %4 = load i8, i8* %1, align 1, !dbg !8453
  %5 = icmp ne i8 %3, %4, !dbg !8454
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8455
  br i1 %7, label %18, label %8, !dbg !8455

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8450, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.value(metadata i8* %10, metadata !8449, metadata !DIExpression()), !dbg !8451
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8456
  call void @llvm.dbg.value(metadata i8* %11, metadata !8449, metadata !DIExpression()), !dbg !8451
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8458
  call void @llvm.dbg.value(metadata i8* %12, metadata !8450, metadata !DIExpression()), !dbg !8451
  %13 = load i8, i8* %11, align 1, !dbg !8452
  %14 = load i8, i8* %12, align 1, !dbg !8453
  %15 = icmp ne i8 %13, %14, !dbg !8454
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8455
  br i1 %17, label %18, label %8, !dbg !8455, !llvm.loop !8459

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8452
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8453
  %21 = zext i8 %19 to i32, !dbg !8462
  %22 = zext i8 %20 to i32, !dbg !8463
  %23 = sub nsw i32 %21, %22, !dbg !8464
  ret i32 %23, !dbg !8465
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8470, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8* %1, metadata !8471, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %2, metadata !8472, metadata !DIExpression()), !dbg !8473
  %4 = icmp eq i32 %2, 0, !dbg !8474
  br i1 %4, label %23, label %5, !dbg !8474

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8472, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8* %7, metadata !8471, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i8* %8, metadata !8470, metadata !DIExpression()), !dbg !8473
  %9 = load i8, i8* %8, align 1, !dbg !8475
  %10 = load i8, i8* %7, align 1, !dbg !8476
  %11 = icmp ne i8 %9, %10, !dbg !8477
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8478
  br i1 %13, label %19, label %14, !dbg !8478

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8479
  call void @llvm.dbg.value(metadata i8* %15, metadata !8470, metadata !DIExpression()), !dbg !8473
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8481
  call void @llvm.dbg.value(metadata i8* %16, metadata !8471, metadata !DIExpression()), !dbg !8473
  %17 = add i32 %6, -1, !dbg !8482
  call void @llvm.dbg.value(metadata i32 %17, metadata !8472, metadata !DIExpression()), !dbg !8473
  %18 = icmp eq i32 %17, 0, !dbg !8474
  br i1 %18, label %23, label %5, !dbg !8474, !llvm.loop !8483

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8486
  %21 = zext i8 %10 to i32, !dbg !8487
  %22 = sub nsw i32 %20, %21, !dbg !8488
  br label %23, !dbg !8489

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8489
  ret i32 %24, !dbg !8490
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8491 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8495, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata i8* %1, metadata !8496, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata i8** %2, metadata !8497, metadata !DIExpression()), !dbg !8500
  %4 = icmp eq i8* %0, null, !dbg !8501
  br i1 %4, label %5, label %7, !dbg !8501

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8502
  br label %7, !dbg !8501

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8501
  call void @llvm.dbg.value(metadata i8* %8, metadata !8498, metadata !DIExpression()), !dbg !8500
  %9 = load i8, i8* %8, align 1, !dbg !8503
  %10 = icmp eq i8 %9, 0, !dbg !8503
  br i1 %10, label %33, label %11, !dbg !8504

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8498, metadata !DIExpression()), !dbg !8500
  %14 = zext i8 %12 to i32, !dbg !8503
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8505
  %16 = icmp eq i8* %15, null, !dbg !8504
  br i1 %16, label %21, label %17, !dbg !8506

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8507
  call void @llvm.dbg.value(metadata i8* %18, metadata !8498, metadata !DIExpression()), !dbg !8500
  %19 = load i8, i8* %18, align 1, !dbg !8503
  %20 = icmp eq i8 %19, 0, !dbg !8503
  br i1 %20, label %33, label %11, !dbg !8504, !llvm.loop !8509

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8499, metadata !DIExpression()), !dbg !8500
  %24 = zext i8 %22 to i32, !dbg !8511
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8512
  %26 = icmp eq i8* %25, null, !dbg !8513
  br i1 %26, label %27, label %31, !dbg !8514

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8515
  call void @llvm.dbg.value(metadata i8* %28, metadata !8499, metadata !DIExpression()), !dbg !8500
  %29 = load i8, i8* %28, align 1, !dbg !8511
  %30 = icmp eq i8 %29, 0, !dbg !8511
  br i1 %30, label %33, label %21, !dbg !8517, !llvm.loop !8518

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8520
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8523
  br label %33, !dbg !8524

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8500
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8500
  store i8* %34, i8** %2, align 4, !dbg !8500
  ret i8* %35, !dbg !8525
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8526 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8528, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i8* %1, metadata !8529, metadata !DIExpression()), !dbg !8530
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8531
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8532
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8533
  ret i8* %0, !dbg !8534
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8537, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i8* %1, metadata !8538, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i32 %2, metadata !8539, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i8* %0, metadata !8540, metadata !DIExpression()), !dbg !8542
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8543
  call void @llvm.dbg.value(metadata i32 %4, metadata !8541, metadata !DIExpression()), !dbg !8542
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8544
  call void @llvm.dbg.value(metadata i8* %5, metadata !8537, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i8* %1, metadata !8538, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i32 %2, metadata !8539, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i32 %2, metadata !8539, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8542
  %6 = icmp eq i32 %2, 0, !dbg !8545
  br i1 %6, label %18, label %7, !dbg !8546

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8547
  call void @llvm.dbg.value(metadata i8* %9, metadata !8537, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i8* %10, metadata !8538, metadata !DIExpression()), !dbg !8542
  %12 = load i8, i8* %10, align 1, !dbg !8548
  %13 = icmp eq i8 %12, 0, !dbg !8549
  br i1 %13, label %18, label %14, !dbg !8550

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8551
  call void @llvm.dbg.value(metadata i8* %15, metadata !8538, metadata !DIExpression()), !dbg !8542
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8553
  call void @llvm.dbg.value(metadata i8* %16, metadata !8537, metadata !DIExpression()), !dbg !8542
  store i8 %12, i8* %9, align 1, !dbg !8554
  call void @llvm.dbg.value(metadata i32 %11, metadata !8539, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i32 %11, metadata !8539, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8542
  %17 = icmp eq i32 %11, 0, !dbg !8545
  br i1 %17, label %18, label %7, !dbg !8546, !llvm.loop !8555

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8542
  store i8 0, i8* %19, align 1, !dbg !8557
  ret i8* %0, !dbg !8558
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8563, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %1, metadata !8564, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %2, metadata !8565, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %0, metadata !8566, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %1, metadata !8567, metadata !DIExpression()), !dbg !8568
  %4 = icmp eq i32 %2, 0, !dbg !8569
  br i1 %4, label %31, label %5, !dbg !8571

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %0, metadata !8566, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %2, metadata !8565, metadata !DIExpression()), !dbg !8568
  %6 = add i32 %2, -1, !dbg !8572
  call void @llvm.dbg.value(metadata i32 %6, metadata !8565, metadata !DIExpression()), !dbg !8568
  %7 = icmp eq i32 %6, 0, !dbg !8573
  br i1 %7, label %23, label %8, !dbg !8574

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8575
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8575
  br label %11, !dbg !8575

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %14, metadata !8566, metadata !DIExpression()), !dbg !8568
  %15 = load i8, i8* %14, align 1, !dbg !8576
  %16 = load i8, i8* %13, align 1, !dbg !8577
  %17 = icmp eq i8 %15, %16, !dbg !8578
  br i1 %17, label %18, label %23, !dbg !8575

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8579
  call void @llvm.dbg.value(metadata i8* %19, metadata !8566, metadata !DIExpression()), !dbg !8568
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8581
  call void @llvm.dbg.value(metadata i8* %20, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %12, metadata !8565, metadata !DIExpression()), !dbg !8568
  %21 = add i32 %12, -1, !dbg !8572
  call void @llvm.dbg.value(metadata i32 %21, metadata !8565, metadata !DIExpression()), !dbg !8568
  %22 = icmp eq i32 %21, 0, !dbg !8573
  br i1 %22, label %23, label %11, !dbg !8574, !llvm.loop !8582

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8568
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8568
  %26 = load i8, i8* %24, align 1, !dbg !8584
  %27 = zext i8 %26 to i32, !dbg !8584
  %28 = load i8, i8* %25, align 1, !dbg !8585
  %29 = zext i8 %28 to i32, !dbg !8585
  %30 = sub nsw i32 %27, %29, !dbg !8586
  br label %31, !dbg !8587

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8568
  ret i32 %32, !dbg !8588
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8589 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8593, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %1, metadata !8594, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i32 %2, metadata !8595, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %0, metadata !8596, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %1, metadata !8597, metadata !DIExpression()), !dbg !8598
  %4 = ptrtoint i8* %0 to i32, !dbg !8599
  %5 = ptrtoint i8* %1 to i32, !dbg !8599
  %6 = sub i32 %4, %5, !dbg !8599
  %7 = icmp ult i32 %6, %2, !dbg !8601
  br i1 %7, label %10, label %8, !dbg !8602

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8597, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %0, metadata !8596, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i32 %2, metadata !8595, metadata !DIExpression()), !dbg !8598
  %9 = icmp eq i32 %2, 0, !dbg !8603
  br i1 %9, label %26, label %17, !dbg !8605

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8595, metadata !DIExpression()), !dbg !8598
  %12 = add i32 %11, -1, !dbg !8606
  call void @llvm.dbg.value(metadata i32 %12, metadata !8595, metadata !DIExpression()), !dbg !8598
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8609
  %14 = load i8, i8* %13, align 1, !dbg !8609
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8610
  store i8 %14, i8* %15, align 1, !dbg !8611
  %16 = icmp eq i32 %12, 0, !dbg !8612
  br i1 %16, label %26, label %10, !dbg !8613, !llvm.loop !8614

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8597, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8* %19, metadata !8596, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i32 %20, metadata !8595, metadata !DIExpression()), !dbg !8598
  %21 = load i8, i8* %18, align 1, !dbg !8616
  store i8 %21, i8* %19, align 1, !dbg !8618
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8619
  call void @llvm.dbg.value(metadata i8* %22, metadata !8596, metadata !DIExpression()), !dbg !8598
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8620
  call void @llvm.dbg.value(metadata i8* %23, metadata !8597, metadata !DIExpression()), !dbg !8598
  %24 = add i32 %20, -1, !dbg !8621
  call void @llvm.dbg.value(metadata i32 %24, metadata !8595, metadata !DIExpression()), !dbg !8598
  %25 = icmp eq i32 %24, 0, !dbg !8603
  br i1 %25, label %26, label %17, !dbg !8605, !llvm.loop !8622

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8624
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8625 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8631, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %1, metadata !8632, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i32 %2, metadata !8633, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %0, metadata !8634, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %1, metadata !8635, metadata !DIExpression()), !dbg !8636
  %4 = icmp eq i32 %2, 0, !dbg !8637
  br i1 %4, label %14, label %5, !dbg !8638

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8635, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %7, metadata !8634, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i32 %8, metadata !8633, metadata !DIExpression()), !dbg !8636
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8639
  call void @llvm.dbg.value(metadata i8* %9, metadata !8635, metadata !DIExpression()), !dbg !8636
  %10 = load i8, i8* %6, align 1, !dbg !8641
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8642
  call void @llvm.dbg.value(metadata i8* %11, metadata !8634, metadata !DIExpression()), !dbg !8636
  store i8 %10, i8* %7, align 1, !dbg !8643
  %12 = add i32 %8, -1, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %12, metadata !8633, metadata !DIExpression()), !dbg !8636
  %13 = icmp eq i32 %12, 0, !dbg !8637
  br i1 %13, label %14, label %5, !dbg !8638, !llvm.loop !8645

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8647
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8648 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8652, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 %1, metadata !8653, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 %2, metadata !8654, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i8* %0, metadata !8655, metadata !DIExpression()), !dbg !8657
  %4 = trunc i32 %1 to i8, !dbg !8658
  call void @llvm.dbg.value(metadata i8 %4, metadata !8656, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 %2, metadata !8654, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i8* %0, metadata !8655, metadata !DIExpression()), !dbg !8657
  %5 = icmp eq i32 %2, 0, !dbg !8659
  br i1 %5, label %12, label %6, !dbg !8660

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8654, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i8* %8, metadata !8655, metadata !DIExpression()), !dbg !8657
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8661
  call void @llvm.dbg.value(metadata i8* %9, metadata !8655, metadata !DIExpression()), !dbg !8657
  store i8 %4, i8* %8, align 1, !dbg !8663
  %10 = add i32 %7, -1, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %10, metadata !8654, metadata !DIExpression()), !dbg !8657
  %11 = icmp eq i32 %10, 0, !dbg !8659
  br i1 %11, label %12, label %6, !dbg !8660, !llvm.loop !8665

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8667
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8668 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8672, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %1, metadata !8673, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %2, metadata !8674, metadata !DIExpression()), !dbg !8678
  %4 = icmp eq i32 %2, 0, !dbg !8679
  br i1 %4, label %17, label %5, !dbg !8680

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8681

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8682
  call void @llvm.dbg.value(metadata i8* %9, metadata !8675, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i32 %8, metadata !8674, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i8* %9, metadata !8675, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8682
  %10 = load i8, i8* %9, align 1, !dbg !8683
  %11 = icmp eq i8 %10, %6, !dbg !8686
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8687
  call void @llvm.dbg.value(metadata i8* %12, metadata !8675, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i32 %13, metadata !8674, metadata !DIExpression()), !dbg !8678
  br i1 %15, label %16, label %7, !dbg !8687, !llvm.loop !8688

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8690

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8678
  ret i8* %19, !dbg !8691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !8692 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8694, metadata !DIExpression()), !dbg !8695
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8696
  ret void, !dbg !8697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8700, metadata !DIExpression()), !dbg !8701
  ret i32 -1, !dbg !8702
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32* %1, metadata !8708, metadata !DIExpression()), !dbg !8709
  %3 = ptrtoint i32* %1 to i32, !dbg !8710
  %4 = and i32 %3, -2, !dbg !8710
  %5 = icmp eq i32 %4, 2, !dbg !8710
  br i1 %5, label %6, label %9, !dbg !8710

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8711
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8711
  br label %9, !dbg !8712

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8712
  ret i32 %10, !dbg !8713
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8716, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata i32* %1, metadata !8717, metadata !DIExpression()), !dbg !8718
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8719
  ret i32 %3, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8724, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.value(metadata i32* %1, metadata !8725, metadata !DIExpression()), !dbg !8726
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8727, !srcloc !8729
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8730
  ret i32 %3, !dbg !8731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8737, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i32* %1, metadata !8738, metadata !DIExpression()), !dbg !8741
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %3, metadata !8739, metadata !DIExpression()), !dbg !8741
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8743
  call void @llvm.dbg.value(metadata i32 %4, metadata !8740, metadata !DIExpression()), !dbg !8741
  %5 = icmp ne i32 %3, %4, !dbg !8744
  %6 = sext i1 %5 to i32, !dbg !8745
  ret i32 %6, !dbg !8746
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8747 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8751, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32 %1, metadata !8752, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32 %2, metadata !8753, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32* %3, metadata !8754, metadata !DIExpression()), !dbg !8755
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8756
  ret i32 %5, !dbg !8757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8758 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8760, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32 %1, metadata !8761, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32 %2, metadata !8762, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32* %3, metadata !8763, metadata !DIExpression()), !dbg !8764
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8765, !srcloc !8767
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8768
  ret i32 %5, !dbg !8769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8770 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8772, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 %1, metadata !8773, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 %2, metadata !8774, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32* %3, metadata !8775, metadata !DIExpression()), !dbg !8780
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8781
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8783
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8783
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8783
  br i1 %11, label %33, label %12, !dbg !8783

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8780
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8780
  call void @llvm.dbg.value(metadata i8* %14, metadata !8778, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 %13, metadata !8776, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 %1, metadata !8777, metadata !DIExpression()), !dbg !8780
  br label %15, !dbg !8784

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8786
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8780
  call void @llvm.dbg.value(metadata i8* %17, metadata !8778, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 %16, metadata !8777, metadata !DIExpression()), !dbg !8780
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8787
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8790
  call void @llvm.dbg.value(metadata i8* %19, metadata !8778, metadata !DIExpression()), !dbg !8780
  %20 = load i8, i8* %17, align 1, !dbg !8791
  %21 = zext i8 %20 to i32, !dbg !8792
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8787
  %23 = icmp eq i32 %22, -1, !dbg !8793
  br i1 %23, label %30, label %24, !dbg !8794

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8795
  call void @llvm.dbg.value(metadata i32 %25, metadata !8777, metadata !DIExpression()), !dbg !8780
  %26 = icmp eq i32 %25, 0, !dbg !8796
  br i1 %26, label %27, label %15, !dbg !8797, !llvm.loop !8798

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8800
  call void @llvm.dbg.value(metadata i32 %28, metadata !8776, metadata !DIExpression()), !dbg !8780
  %29 = icmp eq i32 %28, 0, !dbg !8801
  br i1 %29, label %30, label %12, !dbg !8802, !llvm.loop !8803

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8780
  call void @llvm.dbg.value(metadata i32 %31, metadata !8776, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.label(metadata !8779), !dbg !8806
  %32 = sub i32 %2, %31, !dbg !8807
  br label %33, !dbg !8808

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8780
  ret i32 %34, !dbg !8809
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8814, metadata !DIExpression()), !dbg !8815
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8816
  %3 = icmp eq i32 %2, -1, !dbg !8818
  br i1 %3, label %8, label %4, !dbg !8819

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8820
  %6 = icmp eq i32 %5, -1, !dbg !8821
  %7 = sext i1 %6 to i32, !dbg !8820
  br label %8, !dbg !8822

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8815
  ret i32 %9, !dbg !8823
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8824 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8826, metadata !DIExpression()), !dbg !8837
  %8 = bitcast i64* %2 to i8*, !dbg !8838
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8838
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !8827, metadata !DIExpression()), !dbg !8839
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !8839
  store i64 %9, i64* %2, align 8, !dbg !8839
  %10 = bitcast i64* %4 to i8*, !dbg !8840
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8840
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !8835, metadata !DIExpression()), !dbg !8841
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !8841
  store i64 %11, i64* %4, align 8, !dbg !8841
  %12 = bitcast i64* %6 to i8*, !dbg !8842
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8842
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !8836, metadata !DIExpression()), !dbg !8843
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !8843
  store i64 %13, i64* %6, align 8, !dbg !8843
  %14 = trunc i64 %9 to i32, !dbg !8844
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !8844
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #24, !dbg !8846
  %17 = trunc i64 %13 to i32, !dbg !8847
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !8847
  br i1 %16, label %19, label %26, !dbg !8847

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !8847
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !8847
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #24, !dbg !8848
  br i1 %22, label %23, label %26, !dbg !8849

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #24, !dbg !8850
  br i1 %24, label %25, label %26, !dbg !8851

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #24, !dbg !8852
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #24, !dbg !8853
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #24, !dbg !8854
  br label %26, !dbg !8855

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !8837
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8856
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8856
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8856
  ret i32 %27, !dbg !8856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8857 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8862, metadata !DIExpression()), !dbg !8863
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8864, !srcloc !8866
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #24, !dbg !8867
  ret i1 %2, !dbg !8868
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8869 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !8874, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i32 %1, metadata !8875, metadata !DIExpression()), !dbg !8876
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !8877
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !8877
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !8878
  %6 = load i8, i8* %5, align 4, !dbg !8878
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !8879
  %8 = load i16, i16* %7, align 2, !dbg !8879
  %9 = zext i16 %8 to i32, !dbg !8880
  %10 = or i32 %9, %1, !dbg !8881
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #24, !dbg !8882
  ret void, !dbg !8883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8884 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8887, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.value(metadata i8 %1, metadata !8888, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.value(metadata i32 %2, metadata !8889, metadata !DIExpression()), !dbg !8890
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8891, !srcloc !8893
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #24, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8898, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata i8 %1, metadata !8899, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata i32 %2, metadata !8900, metadata !DIExpression()), !dbg !8905
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8906
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !8906
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !8906
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !8901, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata i8* undef, metadata !8902, metadata !DIExpression()), !dbg !8905
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8907
  %8 = bitcast i8** %7 to %union.anon**, !dbg !8907
  %9 = load %union.anon*, %union.anon** %8, align 4, !dbg !8907
  call void @llvm.dbg.value(metadata %union.anon* %9, metadata !8904, metadata !DIExpression()), !dbg !8905
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !8908
  %13 = icmp ne i32 %12, 1048577, !dbg !8908
  %14 = or i1 %13, %11, !dbg !8908
  %15 = xor i32 %2, 786432, !dbg !8908
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !8908
  call void @llvm.dbg.value(metadata i32 %16, metadata !8900, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata i32 %16, metadata !8900, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !8905
  %17 = and i32 %16, 1, !dbg !8910
  %18 = icmp eq i32 %17, 0, !dbg !8912
  %19 = zext i8 %1 to i32, !dbg !8913
  %20 = shl nuw i32 1, %19, !dbg !8913
  br i1 %18, label %25, label %21, !dbg !8914

21:                                               ; preds = %3
  %22 = getelementptr inbounds %union.anon, %union.anon* %9, i32 0, i32 0, !dbg !8915
  %23 = load i32, i32* %22, align 4, !dbg !8917
  %24 = or i32 %23, %20, !dbg !8917
  store i32 %24, i32* %22, align 4, !dbg !8917
  br label %30, !dbg !8918

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !8919
  %27 = getelementptr inbounds %union.anon, %union.anon* %9, i32 0, i32 0, !dbg !8921
  %28 = load i32, i32* %27, align 4, !dbg !8922
  %29 = and i32 %28, %26, !dbg !8922
  store i32 %29, i32* %27, align 4, !dbg !8922
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !8923
  call void @llvm.dbg.value(metadata i32 %31, metadata !8900, metadata !DIExpression()), !dbg !8905
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !8924
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !8924
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #25, !dbg !8925
  ret void, !dbg !8926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8927 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8929, metadata !DIExpression()), !dbg !8930
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8931
  ret i1 %2, !dbg !8932
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_simple_submit(%struct.rtio* noundef %0) #1 !dbg !8933 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9024, metadata !DIExpression()), !dbg !9030
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9031
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9031
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9031
  %5 = tail call fastcc i32 @atomic_get.91(i32* noundef nonnull %4) #24, !dbg !9031
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9031
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9031
  %8 = load i32, i32* %7, align 4, !dbg !9031
  %9 = add i32 %8, %5, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %9, metadata !9027, metadata !DIExpression()), !dbg !9032
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9031
  %11 = tail call fastcc i32 @atomic_get.91(i32* noundef nonnull %10) #24, !dbg !9031
  %12 = icmp eq i32 %9, %11, !dbg !9031
  call void @llvm.dbg.value(metadata i1 %12, metadata !9029, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9032
  br i1 %12, label %23, label %13, !dbg !9031

13:                                               ; preds = %1
  %14 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9033
  %15 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %14, i32 0, i32 0, i32 1, !dbg !9033
  %16 = load i32, i32* %15, align 4, !dbg !9033
  %17 = add i32 %16, 1, !dbg !9033
  store i32 %17, i32* %15, align 4, !dbg !9033
  %18 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9031
  %19 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 0, i32 4, !dbg !9031
  %20 = load i32, i32* %19, align 4, !dbg !9031
  %21 = and i32 %20, %9, !dbg !9031
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 1, i32 %21, !dbg !9031
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %22, metadata !9025, metadata !DIExpression()), !dbg !9030
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %22, %struct.rtio* noundef nonnull %0) #24, !dbg !9036
  br label %23, !dbg !9039

23:                                               ; preds = %1, %13
  ret i32 0, !dbg !9040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.91(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9041 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9043, metadata !DIExpression()), !dbg !9044
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9045
  ret i32 %2, !dbg !9046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9047 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9049, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9050, metadata !DIExpression()), !dbg !9051
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9052
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9052
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9053
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9053
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9054
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9054
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9055
  ret void, !dbg !9056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9057 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9059, metadata !DIExpression()), !dbg !9063
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9060, metadata !DIExpression()), !dbg !9063
  call void @llvm.dbg.value(metadata i32 %2, metadata !9061, metadata !DIExpression()), !dbg !9063
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9064
  %5 = load i8*, i8** %4, align 4, !dbg !9064
  call void @llvm.dbg.value(metadata i8* %5, metadata !9062, metadata !DIExpression()), !dbg !9063
  %6 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9065
  %7 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9065
  %8 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %7, i32 0, i32 0, i32 1, !dbg !9065
  %9 = load i32, i32* %8, align 4, !dbg !9065
  %10 = icmp eq i32 %9, 0, !dbg !9065
  br i1 %10, label %15, label %11, !dbg !9068

11:                                               ; preds = %3
  %12 = add i32 %9, -1, !dbg !9069
  store i32 %12, i32* %8, align 4, !dbg !9069
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9069
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !9069
  tail call fastcc void @atomic_add.94(i32* noundef nonnull %14) #24, !dbg !9069
  br label %15, !dbg !9069

15:                                               ; preds = %11, %3
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %5) #24, !dbg !9071
  %16 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9072
  ret void, !dbg !9073
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.94(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9074 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9076, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata i32 1, metadata !9077, metadata !DIExpression()), !dbg !9078
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9079
  ret void, !dbg !9080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9081 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9085, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.value(metadata i32 %1, metadata !9086, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.value(metadata i8* %2, metadata !9087, metadata !DIExpression()), !dbg !9093
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9094
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9094
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9094
  %7 = tail call fastcc i32 @atomic_get.91(i32* noundef nonnull %6) #24, !dbg !9094
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9094
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9094
  %10 = load i32, i32* %9, align 4, !dbg !9094
  %11 = add i32 %10, %7, !dbg !9094
  call void @llvm.dbg.value(metadata i32 %11, metadata !9090, metadata !DIExpression()), !dbg !9095
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9094
  %13 = tail call fastcc i32 @atomic_get.91(i32* noundef nonnull %12) #24, !dbg !9094
  %14 = sub i32 %11, %13, !dbg !9094
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9094
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9094
  %17 = load i32, i32* %16, align 4, !dbg !9094
  %18 = add i32 %17, 1, !dbg !9094
  %19 = icmp ult i32 %14, %18, !dbg !9094
  call void @llvm.dbg.value(metadata i1 %19, metadata !9092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9095
  br i1 %19, label %22, label %20, !dbg !9094

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9088, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9093
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9096
  tail call fastcc void @atomic_inc(i32* noundef nonnull %21) #24, !dbg !9099
  br label %40, !dbg !9100

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9101
  %24 = load i32, i32* %23, align 4, !dbg !9101
  %25 = add i32 %24, 1, !dbg !9101
  store i32 %25, i32* %23, align 4, !dbg !9101
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9094
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9094
  %28 = load i32, i32* %27, align 4, !dbg !9094
  %29 = and i32 %28, %11, !dbg !9094
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9088, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9093
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9104
  store i32 %1, i32* %30, align 4, !dbg !9106
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9107
  store i8* %2, i8** %31, align 4, !dbg !9108
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9109
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9109
  %34 = load i32, i32* %33, align 4, !dbg !9109
  %35 = icmp eq i32 %34, 0, !dbg !9109
  br i1 %35, label %40, label %36, !dbg !9112

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9113
  store i32 %37, i32* %33, align 4, !dbg !9113
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9113
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9113
  tail call fastcc void @atomic_add.94(i32* noundef nonnull %39) #24, !dbg !9113
  br label %40, !dbg !9113

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9115
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9116 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9120, metadata !DIExpression()), !dbg !9121
  tail call fastcc void @atomic_add.94(i32* noundef %0) #24, !dbg !9122
  ret void, !dbg !9123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_err(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9124 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9126, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9127, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %2, metadata !9128, metadata !DIExpression()), !dbg !9141
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9142
  call void @llvm.dbg.value(metadata i8* undef, metadata !9130, metadata !DIExpression()), !dbg !9141
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9143
  %6 = load i16, i16* %5, align 2, !dbg !9143
  %7 = and i16 %6, 1, !dbg !9144
  %8 = icmp eq i16 %7, 0, !dbg !9145
  call void @llvm.dbg.value(metadata i1 %8, metadata !9131, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9141
  %9 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9146
  %10 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9146
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %10, i32 0, i32 0, i32 1, !dbg !9146
  %12 = load i32, i32* %11, align 4, !dbg !9146
  %13 = icmp eq i32 %12, 0, !dbg !9146
  br i1 %13, label %18, label %14, !dbg !9149

14:                                               ; preds = %3
  %15 = add i32 %12, -1, !dbg !9150
  store i32 %15, i32* %11, align 4, !dbg !9150
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9150
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 3, !dbg !9150
  tail call fastcc void @atomic_add.94(i32* noundef nonnull %17) #24, !dbg !9150
  br label %18, !dbg !9150

18:                                               ; preds = %14, %3
  %19 = load i8*, i8** %4, align 4, !dbg !9152
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %19) #24, !dbg !9153
  br i1 %8, label %69, label %20, !dbg !9154

20:                                               ; preds = %18
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9155
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 3, !dbg !9155
  %23 = tail call fastcc i32 @atomic_get.91(i32* noundef nonnull %22) #24, !dbg !9155
  %24 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9155
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 1, !dbg !9155
  %26 = load i32, i32* %25, align 4, !dbg !9155
  %27 = add i32 %26, %23, !dbg !9155
  call void @llvm.dbg.value(metadata i32 %27, metadata !9132, metadata !DIExpression()), !dbg !9156
  %28 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 2, !dbg !9155
  %29 = tail call fastcc i32 @atomic_get.91(i32* noundef nonnull %28) #24, !dbg !9155
  %30 = icmp eq i32 %27, %29, !dbg !9155
  call void @llvm.dbg.value(metadata i1 %30, metadata !9136, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9156
  br i1 %30, label %71, label %31, !dbg !9155

31:                                               ; preds = %20, %56
  %32 = phi i32 [ %63, %56 ], [ %27, %20 ]
  %33 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9157
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %33, i32 0, i32 0, i32 1, !dbg !9157
  %35 = load i32, i32* %34, align 4, !dbg !9157
  %36 = add i32 %35, 1, !dbg !9157
  store i32 %36, i32* %34, align 4, !dbg !9157
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9157
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 4, !dbg !9157
  %39 = load i32, i32* %38, align 4, !dbg !9157
  %40 = and i32 %39, %32, !dbg !9157
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %37, i32 %40), metadata !9129, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9141
  %41 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 2, !dbg !9158
  %42 = load i16, i16* %41, align 2, !dbg !9158
  %43 = and i16 %42, 1, !dbg !9159
  %44 = icmp eq i16 %43, 0, !dbg !9160
  br i1 %44, label %67, label %45, !dbg !9161

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 4, !dbg !9162
  %47 = load i8*, i8** %46, align 4, !dbg !9162
  call void @llvm.dbg.value(metadata i8* %47, metadata !9130, metadata !DIExpression()), !dbg !9141
  %48 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9163
  %49 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %48, i32 0, i32 0, i32 1, !dbg !9163
  %50 = load i32, i32* %49, align 4, !dbg !9163
  %51 = icmp eq i32 %50, 0, !dbg !9163
  br i1 %51, label %56, label %52, !dbg !9166

52:                                               ; preds = %45
  %53 = add i32 %50, -1, !dbg !9167
  store i32 %53, i32* %49, align 4, !dbg !9167
  %54 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9167
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %54, i32 0, i32 0, i32 3, !dbg !9167
  tail call fastcc void @atomic_add.94(i32* noundef nonnull %55) #24, !dbg !9167
  br label %56, !dbg !9167

56:                                               ; preds = %52, %45
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %47) #24, !dbg !9169
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9170
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 3, !dbg !9170
  %59 = tail call fastcc i32 @atomic_get.91(i32* noundef nonnull %58) #24, !dbg !9170
  %60 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9170
  %61 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 1, !dbg !9170
  %62 = load i32, i32* %61, align 4, !dbg !9170
  %63 = add i32 %62, %59, !dbg !9170
  call void @llvm.dbg.value(metadata i32 %63, metadata !9137, metadata !DIExpression()), !dbg !9171
  %64 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 2, !dbg !9170
  %65 = tail call fastcc i32 @atomic_get.91(i32* noundef nonnull %64) #24, !dbg !9170
  %66 = icmp eq i32 %63, %65, !dbg !9170
  call void @llvm.dbg.value(metadata i1 %66, metadata !9140, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9171
  br i1 %66, label %71, label %31, !dbg !9170

67:                                               ; preds = %31
  %68 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, !dbg !9157
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %68, metadata !9129, metadata !DIExpression()), !dbg !9141
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %68, %struct.rtio* noundef nonnull %0) #24, !dbg !9172
  br label %71, !dbg !9175

69:                                               ; preds = %18
  %70 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9176
  br label %71

71:                                               ; preds = %56, %20, %67, %69
  ret void, !dbg !9178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_concurrent_submit(%struct.rtio* noundef %0) local_unnamed_addr #1 !dbg !9179 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9181, metadata !DIExpression()), !dbg !9212
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.99, i32 0, i32 0), i32 noundef 73) #25, !dbg !9213
  %2 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9218
  %3 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %2, align 4, !dbg !9218
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %3, metadata !9182, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9219, metadata !DIExpression()) #23, !dbg !9226
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9228, !srcloc !9234
  call void @llvm.dbg.value(metadata i32 undef, metadata !9231, metadata !DIExpression()) #23, !dbg !9235
  call void @llvm.dbg.value(metadata i32 undef, metadata !9232, metadata !DIExpression()) #23, !dbg !9235
  call void @llvm.dbg.value(metadata i32 undef, metadata !9225, metadata !DIExpression()) #23, !dbg !9226
  call void @llvm.dbg.value(metadata i32 undef, metadata !9185, metadata !DIExpression()), !dbg !9212
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 6, !dbg !9236
  %6 = load %struct.rtio_sqe*, %struct.rtio_sqe** %5, align 4, !dbg !9236
  %7 = icmp eq %struct.rtio_sqe* %6, null, !dbg !9237
  %8 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9238
  %9 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9238
  br i1 %7, label %10, label %26, !dbg !9239

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 3, !dbg !9240
  %12 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %11) #24, !dbg !9240
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9240
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 1, !dbg !9240
  %15 = load i32, i32* %14, align 4, !dbg !9240
  %16 = add i32 %15, %12, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %16, metadata !9190, metadata !DIExpression()), !dbg !9241
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 2, !dbg !9240
  %18 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %17) #24, !dbg !9240
  %19 = icmp eq i32 %16, %18, !dbg !9240
  call void @llvm.dbg.value(metadata i1 %19, metadata !9194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9241
  br i1 %19, label %45, label %20, !dbg !9240

20:                                               ; preds = %10
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9240
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 4, !dbg !9240
  %23 = load i32, i32* %22, align 4, !dbg !9240
  %24 = and i32 %23, %16, !dbg !9240
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 1, i32 %24, !dbg !9240
  br label %47, !dbg !9240

26:                                               ; preds = %1
  %27 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 1, i32 0, !dbg !9242
  %28 = ptrtoint %struct.rtio_sqe* %6 to i32, !dbg !9242
  %29 = ptrtoint %struct.rtio_sqe* %27 to i32, !dbg !9242
  %30 = sub i32 %28, %29, !dbg !9242
  %31 = sdiv exact i32 %30, 20, !dbg !9242
  call void @llvm.dbg.value(metadata i32 %31, metadata !9195, metadata !DIExpression()), !dbg !9243
  %32 = add nsw i32 %31, 1, !dbg !9242
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 4, !dbg !9242
  %34 = load i32, i32* %33, align 4, !dbg !9242
  %35 = and i32 %32, %34, !dbg !9242
  %36 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !9242
  %37 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %36) #24, !dbg !9242
  %38 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9242
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 4, !dbg !9242
  %40 = load i32, i32* %39, align 4, !dbg !9242
  %41 = and i32 %40, %37, !dbg !9242
  %42 = icmp eq i32 %35, %41, !dbg !9242
  call void @llvm.dbg.value(metadata i1 %42, metadata !9198, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9243
  %43 = and i32 %32, %40, !dbg !9242
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 1, i32 %43, !dbg !9242
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9183, metadata !DIExpression()), !dbg !9212
  br i1 %42, label %45, label %47

45:                                               ; preds = %26, %10
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9184, metadata !DIExpression()), !dbg !9212
  %46 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9244
  store %struct.rtio_sqe* null, %struct.rtio_sqe** %46, align 4, !dbg !9245
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9184, metadata !DIExpression()), !dbg !9212
  br label %140, !dbg !9246

47:                                               ; preds = %20, %26
  %48 = phi %struct.rtio_sqe* [ %44, %26 ], [ %25, %20 ], !dbg !9238
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9184, metadata !DIExpression()), !dbg !9212
  %49 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 8
  %50 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 7
  %51 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9184, metadata !DIExpression()), !dbg !9212
  %52 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9247
  br i1 %52, label %55, label %110, !dbg !9248

53:                                               ; preds = %89
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %109, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9184, metadata !DIExpression()), !dbg !9212
  %54 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9247
  br i1 %54, label %55, label %110, !dbg !9248

55:                                               ; preds = %47, %53
  %56 = phi %struct.rtio_sqe* [ %109, %53 ], [ %48, %47 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9183, metadata !DIExpression()), !dbg !9212
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.101, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9249
  %57 = tail call fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9254
  call void @llvm.dbg.value(metadata i16 %57, metadata !9199, metadata !DIExpression()), !dbg !9255
  %58 = zext i16 %57 to i32, !dbg !9256
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.102, i32 0, i32 0), i32 noundef 73, i32 noundef %58) #25, !dbg !9256
  %59 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %49, align 4, !dbg !9261
  %60 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %59, i32 %58, !dbg !9262
  store %struct.rtio_sqe* %56, %struct.rtio_sqe** %60, align 4, !dbg !9263
  %61 = load i8*, i8** %50, align 4, !dbg !9264
  %62 = getelementptr inbounds i8, i8* %61, i32 %58, !dbg !9265
  store i8 2, i8* %62, align 1, !dbg !9266
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.103, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9267
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9183, metadata !DIExpression()), !dbg !9212
  br label %63, !dbg !9272

63:                                               ; preds = %55, %69
  %64 = phi %struct.rtio_sqe* [ %56, %55 ], [ %88, %69 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %64, metadata !9183, metadata !DIExpression()), !dbg !9212
  %65 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %64, i32 0, i32 2, !dbg !9273
  %66 = load i16, i16* %65, align 2, !dbg !9273
  %67 = and i16 %66, 1, !dbg !9274
  %68 = icmp eq i16 %67, 0, !dbg !9272
  br i1 %68, label %89, label %69, !dbg !9275

69:                                               ; preds = %63
  %70 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9276
  %71 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 1, i32 0, !dbg !9276
  %72 = ptrtoint %struct.rtio_sqe* %64 to i32, !dbg !9276
  %73 = ptrtoint %struct.rtio_sqe* %71 to i32, !dbg !9276
  %74 = sub i32 %72, %73, !dbg !9276
  %75 = sdiv exact i32 %74, 20, !dbg !9276
  call void @llvm.dbg.value(metadata i32 %75, metadata !9201, metadata !DIExpression()), !dbg !9277
  %76 = add nsw i32 %75, 1, !dbg !9276
  %77 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 4, !dbg !9276
  %78 = load i32, i32* %77, align 4, !dbg !9276
  %79 = and i32 %76, %78, !dbg !9276
  %80 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 2, !dbg !9276
  %81 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %80) #24, !dbg !9276
  %82 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9276
  %83 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 0, i32 4, !dbg !9276
  %84 = load i32, i32* %83, align 4, !dbg !9276
  %85 = and i32 %84, %81, !dbg !9276
  %86 = icmp eq i32 %79, %85, !dbg !9276
  call void @llvm.dbg.value(metadata i1 %86, metadata !9204, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9277
  %87 = and i32 %76, %84, !dbg !9276
  %88 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 1, i32 %87, !dbg !9276
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9183, metadata !DIExpression()), !dbg !9212
  br i1 %86, label %89, label %63, !dbg !9272

89:                                               ; preds = %63, %69
  %90 = phi %struct.rtio_sqe* [ null, %69 ], [ %64, %63 ], !dbg !9212
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.104, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef %90) #25, !dbg !9278
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9184, metadata !DIExpression()), !dbg !9212
  %91 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9283
  %92 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 1, i32 0, !dbg !9283
  %93 = ptrtoint %struct.rtio_sqe* %90 to i32, !dbg !9283
  %94 = ptrtoint %struct.rtio_sqe* %92 to i32, !dbg !9283
  %95 = sub i32 %93, %94, !dbg !9283
  %96 = sdiv exact i32 %95, 20, !dbg !9283
  call void @llvm.dbg.value(metadata i32 %96, metadata !9205, metadata !DIExpression()), !dbg !9284
  %97 = add nsw i32 %96, 1, !dbg !9283
  %98 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 4, !dbg !9283
  %99 = load i32, i32* %98, align 4, !dbg !9283
  %100 = and i32 %97, %99, !dbg !9283
  %101 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 2, !dbg !9283
  %102 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %101) #24, !dbg !9283
  %103 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9283
  %104 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 0, i32 4, !dbg !9283
  %105 = load i32, i32* %104, align 4, !dbg !9283
  %106 = and i32 %105, %102, !dbg !9283
  %107 = icmp eq i32 %100, %106, !dbg !9283
  call void @llvm.dbg.value(metadata i1 %107, metadata !9207, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9284
  %108 = and i32 %97, %105, !dbg !9283
  %109 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 1, i32 %108, !dbg !9283
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9183, metadata !DIExpression()), !dbg !9212
  br i1 %107, label %110, label %53, !dbg !9285

110:                                              ; preds = %89, %53, %47
  %111 = phi %struct.rtio_sqe* [ %48, %47 ], [ %90, %53 ], [ %90, %89 ], !dbg !9212
  %112 = phi %struct.rtio_sqe* [ %48, %47 ], [ null, %89 ], [ %109, %53 ], !dbg !9212
  %113 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9244
  store %struct.rtio_sqe* %112, %struct.rtio_sqe** %113, align 4, !dbg !9245
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9184, metadata !DIExpression()), !dbg !9212
  %114 = icmp eq %struct.rtio_sqe* %112, null, !dbg !9286
  br i1 %114, label %140, label %115, !dbg !9246

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  %117 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9287
  %118 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %117, i32 0, i32 0, i32 4
  %119 = load i32, i32* %118, align 4, !dbg !9287
  br label %120, !dbg !9246

120:                                              ; preds = %115, %120
  %121 = phi i32 [ %119, %115 ], [ %135, %120 ], !dbg !9287
  %122 = phi %struct.rtio_sq* [ %117, %115 ], [ %133, %120 ], !dbg !9287
  %123 = phi %struct.rtio_sqe* [ %112, %115 ], [ %139, %120 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9184, metadata !DIExpression()), !dbg !9212
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 1, i32 0, !dbg !9287
  %125 = ptrtoint %struct.rtio_sqe* %123 to i32, !dbg !9287
  %126 = ptrtoint %struct.rtio_sqe* %124 to i32, !dbg !9287
  %127 = sub i32 %125, %126, !dbg !9287
  %128 = sdiv exact i32 %127, 20, !dbg !9287
  call void @llvm.dbg.value(metadata i32 %128, metadata !9208, metadata !DIExpression()), !dbg !9288
  %129 = add nsw i32 %128, 1, !dbg !9287
  %130 = and i32 %129, %121, !dbg !9287
  %131 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 0, i32 2, !dbg !9287
  %132 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %131) #24, !dbg !9287
  %133 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9287
  %134 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 0, i32 4, !dbg !9287
  %135 = load i32, i32* %134, align 4, !dbg !9287
  %136 = and i32 %135, %132, !dbg !9287
  %137 = icmp eq i32 %130, %136, !dbg !9287
  call void @llvm.dbg.value(metadata i1 %137, metadata !9211, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9288
  %138 = and i32 %129, %135, !dbg !9287
  %139 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 1, i32 %138, !dbg !9287
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9183, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9183, metadata !DIExpression()), !dbg !9212
  br i1 %137, label %140, label %120, !dbg !9246

140:                                              ; preds = %120, %45, %110
  %141 = phi %struct.rtio_sqe* [ %111, %110 ], [ null, %45 ], [ %123, %120 ], !dbg !9212
  %142 = extractvalue { i32, i32 } %4, 0, !dbg !9228
  call void @llvm.dbg.value(metadata i32 %142, metadata !9231, metadata !DIExpression()) #23, !dbg !9235
  call void @llvm.dbg.value(metadata i32 %142, metadata !9225, metadata !DIExpression()) #23, !dbg !9226
  call void @llvm.dbg.value(metadata i32 %142, metadata !9185, metadata !DIExpression()), !dbg !9212
  store %struct.rtio_sqe* %141, %struct.rtio_sqe** %5, align 4, !dbg !9289
  tail call fastcc void @conex_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9290
  call void @llvm.dbg.value(metadata i32 undef, metadata !9291, metadata !DIExpression()) #23, !dbg !9297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9296, metadata !DIExpression()) #23, !dbg !9297
  call void @llvm.dbg.value(metadata i32 undef, metadata !9299, metadata !DIExpression()) #23, !dbg !9302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %142) #23, !dbg !9304, !srcloc !9305
  ret i32 0, !dbg !9306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.100(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9307 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9309, metadata !DIExpression()), !dbg !9310
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9311
  ret i32 %2, !dbg !9312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9313 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9317, metadata !DIExpression()), !dbg !9318
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9319
  %3 = load i16, i16* %2, align 4, !dbg !9319
  %4 = zext i16 %3 to i32, !dbg !9320
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9321
  %6 = load i16, i16* %5, align 2, !dbg !9321
  %7 = zext i16 %6 to i32, !dbg !9322
  %8 = sub nsw i32 %4, %7, !dbg !9323
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4, !dbg !9324
  %10 = load i16, i16* %9, align 4, !dbg !9324
  %11 = zext i16 %10 to i32, !dbg !9325
  %12 = icmp sle i32 %8, %11, !dbg !9326
  ret i1 %12, !dbg !9327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* nocapture noundef %0) unnamed_addr #11 !dbg !9328 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9332, metadata !DIExpression()), !dbg !9334
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9335
  %3 = load i16, i16* %2, align 4, !dbg !9335
  call void @llvm.dbg.value(metadata i16 %3, metadata !9333, metadata !DIExpression()), !dbg !9334
  %4 = add i16 %3, 1, !dbg !9336
  store i16 %4, i16* %2, align 4, !dbg !9336
  ret i16 %3, !dbg !9337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9338 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9342, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9343, metadata !DIExpression()), !dbg !9346
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9347
  %4 = load i16, i16* %3, align 2, !dbg !9347
  call void @llvm.dbg.value(metadata i16 %4, metadata !9344, metadata !DIExpression()), !dbg !9348
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9344, metadata !DIExpression()), !dbg !9348
  %6 = load i16, i16* %5, align 4, !dbg !9349
  %7 = icmp ult i16 %4, %6, !dbg !9351
  br i1 %7, label %8, label %13, !dbg !9352

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 8
  %12 = zext i16 %4 to i32, !dbg !9352
  br label %14, !dbg !9352

13:                                               ; preds = %35, %2
  ret void, !dbg !9353

14:                                               ; preds = %8, %35
  %15 = phi i16 [ %6, %8 ], [ %36, %35 ]
  %16 = phi i32 [ %12, %8 ], [ %37, %35 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9344, metadata !DIExpression()), !dbg !9348
  %17 = load i8*, i8** %9, align 4, !dbg !9354
  %18 = load i16, i16* %10, align 4, !dbg !9357
  %19 = trunc i32 %16 to i16, !dbg !9358
  %20 = and i16 %18, %19, !dbg !9358
  %21 = zext i16 %20 to i32, !dbg !9358
  %22 = getelementptr inbounds i8, i8* %17, i32 %21, !dbg !9359
  %23 = load i8, i8* %22, align 1, !dbg !9359
  %24 = and i8 %23, 2, !dbg !9360
  %25 = icmp eq i8 %24, 0, !dbg !9360
  br i1 %25, label %35, label %26, !dbg !9361

26:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.105, i32 0, i32 0), i32 noundef 73, i32 noundef %16) #25, !dbg !9362
  %27 = load i8*, i8** %9, align 4, !dbg !9368
  %28 = getelementptr inbounds i8, i8* %27, i32 %16, !dbg !9369
  %29 = load i8, i8* %28, align 1, !dbg !9370
  %30 = and i8 %29, -3, !dbg !9370
  store i8 %30, i8* %28, align 1, !dbg !9370
  %31 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %11, align 4, !dbg !9371
  %32 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %31, i32 %16, !dbg !9372
  %33 = load %struct.rtio_sqe*, %struct.rtio_sqe** %32, align 4, !dbg !9372
  tail call fastcc void @rtio_iodev_submit.106(%struct.rtio_sqe* noundef %33, %struct.rtio* noundef %0) #24, !dbg !9373
  %34 = load i16, i16* %5, align 4, !dbg !9349
  br label %35, !dbg !9374

35:                                               ; preds = %14, %26
  %36 = phi i16 [ %15, %14 ], [ %34, %26 ], !dbg !9349
  %37 = add nuw nsw i32 %16, 1, !dbg !9375
  call void @llvm.dbg.value(metadata i32 %37, metadata !9344, metadata !DIExpression()), !dbg !9348
  %38 = zext i16 %36 to i32, !dbg !9351
  %39 = icmp ult i32 %37, %38, !dbg !9351
  br i1 %39, label %14, label %13, !dbg !9352, !llvm.loop !9376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit.106(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9378 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9380, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9381, metadata !DIExpression()), !dbg !9382
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9383
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9383
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9384
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9384
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9385
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9385
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9386
  ret void, !dbg !9387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9388 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9390, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9391, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 %2, metadata !9392, metadata !DIExpression()), !dbg !9402
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9403
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9403
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9395, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9219, metadata !DIExpression()) #23, !dbg !9404
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9406, !srcloc !9234
  call void @llvm.dbg.value(metadata i32 undef, metadata !9231, metadata !DIExpression()) #23, !dbg !9408
  call void @llvm.dbg.value(metadata i32 undef, metadata !9232, metadata !DIExpression()) #23, !dbg !9408
  call void @llvm.dbg.value(metadata i32 undef, metadata !9225, metadata !DIExpression()) #23, !dbg !9404
  call void @llvm.dbg.value(metadata i32 undef, metadata !9394, metadata !DIExpression()), !dbg !9402
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9409
  %8 = load i8*, i8** %7, align 4, !dbg !9409
  tail call fastcc void @rtio_cqe_submit.107(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9410
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9411
  call void @llvm.dbg.value(metadata i16 %9, metadata !9396, metadata !DIExpression()), !dbg !9402
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9412
  %11 = load i16, i16* %10, align 2, !dbg !9412
  %12 = and i16 %11, 1, !dbg !9413
  %13 = icmp eq i16 %12, 0, !dbg !9413
  br i1 %13, label %40, label %14, !dbg !9414

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9415
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9415
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9415
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9415
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9415
  %20 = sub i32 %18, %19, !dbg !9415
  %21 = sdiv exact i32 %20, 20, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %21, metadata !9397, metadata !DIExpression()), !dbg !9416
  %22 = add nsw i32 %21, 1, !dbg !9415
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9415
  %24 = load i32, i32* %23, align 4, !dbg !9415
  %25 = and i32 %22, %24, !dbg !9415
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9415
  %27 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %26) #24, !dbg !9415
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9415
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9415
  %30 = load i32, i32* %29, align 4, !dbg !9415
  %31 = and i32 %30, %27, !dbg !9415
  %32 = icmp eq i32 %25, %31, !dbg !9415
  call void @llvm.dbg.value(metadata i1 %32, metadata !9401, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9416
  %33 = and i32 %22, %30, !dbg !9415
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %33, !dbg !9415
  %35 = select i1 %32, %struct.rtio_sqe* null, %struct.rtio_sqe* %34, !dbg !9415
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9393, metadata !DIExpression()), !dbg !9402
  tail call fastcc void @rtio_iodev_submit.106(%struct.rtio_sqe* noundef %35, %struct.rtio* noundef nonnull %0) #24, !dbg !9417
  %36 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 8, !dbg !9418
  %37 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %36, align 4, !dbg !9418
  %38 = zext i16 %9 to i32, !dbg !9419
  %39 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %37, i32 %38, !dbg !9419
  store %struct.rtio_sqe* %35, %struct.rtio_sqe** %39, align 4, !dbg !9420
  br label %47, !dbg !9421

40:                                               ; preds = %3
  %41 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9422
  %42 = load i8*, i8** %41, align 4, !dbg !9422
  %43 = zext i16 %9 to i32, !dbg !9424
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !9424
  %45 = load i8, i8* %44, align 1, !dbg !9425
  %46 = or i8 %45, 1, !dbg !9425
  store i8 %46, i8* %44, align 1, !dbg !9425
  br label %47

47:                                               ; preds = %40, %14
  %48 = extractvalue { i32, i32 } %6, 0, !dbg !9406
  call void @llvm.dbg.value(metadata i32 %48, metadata !9231, metadata !DIExpression()) #23, !dbg !9408
  call void @llvm.dbg.value(metadata i32 %48, metadata !9225, metadata !DIExpression()) #23, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %48, metadata !9394, metadata !DIExpression()), !dbg !9402
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef nonnull %5) #24, !dbg !9426
  call void @llvm.dbg.value(metadata i32 undef, metadata !9291, metadata !DIExpression()) #23, !dbg !9427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9296, metadata !DIExpression()) #23, !dbg !9427
  call void @llvm.dbg.value(metadata i32 undef, metadata !9299, metadata !DIExpression()) #23, !dbg !9429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #23, !dbg !9431, !srcloc !9305
  ret void, !dbg !9432
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit.107(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9433 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9437, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %2, metadata !9439, metadata !DIExpression()), !dbg !9445
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9446
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9446
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9446
  %7 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %6) #24, !dbg !9446
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9446
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9446
  %10 = load i32, i32* %9, align 4, !dbg !9446
  %11 = add i32 %10, %7, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %11, metadata !9442, metadata !DIExpression()), !dbg !9447
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9446
  %13 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %12) #24, !dbg !9446
  %14 = sub i32 %11, %13, !dbg !9446
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9446
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9446
  %17 = load i32, i32* %16, align 4, !dbg !9446
  %18 = add i32 %17, 1, !dbg !9446
  %19 = icmp ult i32 %14, %18, !dbg !9446
  call void @llvm.dbg.value(metadata i1 %19, metadata !9444, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9447
  br i1 %19, label %22, label %20, !dbg !9446

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9440, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9445
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9448
  tail call fastcc void @atomic_inc.110(i32* noundef nonnull %21) #24, !dbg !9451
  br label %40, !dbg !9452

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9453
  %24 = load i32, i32* %23, align 4, !dbg !9453
  %25 = add i32 %24, 1, !dbg !9453
  store i32 %25, i32* %23, align 4, !dbg !9453
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9446
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9446
  %28 = load i32, i32* %27, align 4, !dbg !9446
  %29 = and i32 %28, %11, !dbg !9446
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9440, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9445
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9456
  store i32 %1, i32* %30, align 4, !dbg !9458
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9459
  store i8* %2, i8** %31, align 4, !dbg !9460
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9461
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9461
  %34 = load i32, i32* %33, align 4, !dbg !9461
  %35 = icmp eq i32 %34, 0, !dbg !9461
  br i1 %35, label %40, label %36, !dbg !9464

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9465
  store i32 %37, i32* %33, align 4, !dbg !9465
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9465
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9465
  tail call fastcc void @atomic_add.109(i32* noundef nonnull %39) #24, !dbg !9465
  br label %40, !dbg !9465

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9467
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* nocapture noundef readonly %0, %struct.rtio_sqe* noundef readnone %1) unnamed_addr #9 !dbg !9468 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9473, metadata !DIExpression()), !dbg !9475
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9476
  %4 = load i16, i16* %3, align 2, !dbg !9476
  call void @llvm.dbg.value(metadata i16 %4, metadata !9474, metadata !DIExpression()), !dbg !9475
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2
  %6 = load i16, i16* %5, align 4
  call void @llvm.dbg.value(metadata i16 %4, metadata !9474, metadata !DIExpression()), !dbg !9475
  %7 = icmp ult i16 %4, %6, !dbg !9477
  br i1 %7, label %8, label %23, !dbg !9480

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 8, !dbg !9481
  %10 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %9, align 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4
  %12 = load i16, i16* %11, align 4
  br label %13, !dbg !9480

13:                                               ; preds = %8, %20
  %14 = phi i16 [ %4, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i16 %14, metadata !9474, metadata !DIExpression()), !dbg !9475
  %15 = and i16 %12, %14, !dbg !9484
  %16 = zext i16 %15 to i32, !dbg !9484
  %17 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %10, i32 %16, !dbg !9485
  %18 = load %struct.rtio_sqe*, %struct.rtio_sqe** %17, align 4, !dbg !9485
  %19 = icmp eq %struct.rtio_sqe* %18, %1, !dbg !9486
  br i1 %19, label %23, label %20, !dbg !9487

20:                                               ; preds = %13
  %21 = add nuw i16 %14, 1, !dbg !9488
  call void @llvm.dbg.value(metadata i16 %21, metadata !9474, metadata !DIExpression()), !dbg !9475
  %22 = icmp ult i16 %21, %6, !dbg !9477
  br i1 %22, label %13, label %23, !dbg !9480, !llvm.loop !9489

23:                                               ; preds = %20, %13, %2
  %24 = phi i16 [ %4, %2 ], [ %14, %13 ], [ %6, %20 ], !dbg !9475
  ret i16 %24, !dbg !9491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9492 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9494, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9495, metadata !DIExpression()), !dbg !9496
  tail call fastcc void @conex_sweep(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9497
  tail call fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9498
  ret void, !dbg !9499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep(%struct.rtio* nocapture noundef readonly %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9500 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9502, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9503, metadata !DIExpression()), !dbg !9506
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9507
  %4 = load i16, i16* %3, align 2, !dbg !9507
  call void @llvm.dbg.value(metadata i16 %4, metadata !9504, metadata !DIExpression()), !dbg !9508
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7, !dbg !9509
  %6 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9504, metadata !DIExpression()), !dbg !9508
  %7 = load i16, i16* %6, align 4, !dbg !9513
  %8 = icmp ult i16 %4, %7, !dbg !9514
  br i1 %8, label %9, label %30, !dbg !9515

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = zext i16 %4 to i32, !dbg !9515
  br label %12, !dbg !9515

12:                                               ; preds = %9, %23
  %13 = phi i32 [ %11, %9 ], [ %26, %23 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !9504, metadata !DIExpression()), !dbg !9508
  %14 = load i8*, i8** %5, align 4, !dbg !9509
  %15 = load i16, i16* %10, align 4, !dbg !9516
  %16 = trunc i32 %13 to i16, !dbg !9517
  %17 = and i16 %15, %16, !dbg !9517
  %18 = zext i16 %17 to i32, !dbg !9517
  %19 = getelementptr inbounds i8, i8* %14, i32 %18, !dbg !9518
  %20 = load i8, i8* %19, align 1, !dbg !9518
  %21 = and i8 %20, 1, !dbg !9519
  %22 = icmp eq i8 %21, 0, !dbg !9519
  br i1 %22, label %30, label %23, !dbg !9520

23:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.108, i32 0, i32 0), i32 noundef 73, i32 noundef %13) #25, !dbg !9521
  tail call fastcc void @conex_sweep_task(%struct.rtio* noundef %0) #24, !dbg !9527
  %24 = load i16, i16* %3, align 2, !dbg !9528
  %25 = add i16 %24, 1, !dbg !9528
  store i16 %25, i16* %3, align 2, !dbg !9528
  %26 = add nuw nsw i32 %13, 1, !dbg !9529
  call void @llvm.dbg.value(metadata i32 %26, metadata !9504, metadata !DIExpression()), !dbg !9508
  %27 = load i16, i16* %6, align 4, !dbg !9513
  %28 = zext i16 %27 to i32, !dbg !9514
  %29 = icmp ult i32 %26, %28, !dbg !9514
  br i1 %29, label %12, label %30, !dbg !9515, !llvm.loop !9530

30:                                               ; preds = %23, %12, %2
  ret void, !dbg !9532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @conex_sweep_task(%struct.rtio* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9533 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9535, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* undef, metadata !9536, metadata !DIExpression()), !dbg !9545
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9546
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9546
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9546
  %5 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %4) #24, !dbg !9546
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9546
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9546
  %8 = load i32, i32* %7, align 4, !dbg !9546
  %9 = add i32 %8, %5, !dbg !9546
  call void @llvm.dbg.value(metadata i32 %9, metadata !9538, metadata !DIExpression()), !dbg !9547
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9546
  %11 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %10) #24, !dbg !9546
  %12 = icmp eq i32 %9, %11, !dbg !9546
  call void @llvm.dbg.value(metadata i1 %12, metadata !9540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9547
  br i1 %12, label %48, label %13, !dbg !9546

13:                                               ; preds = %1, %37
  %14 = phi i32 [ %44, %37 ], [ %9, %1 ]
  %15 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9545
  %16 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %15, i32 0, i32 0, i32 1, !dbg !9545
  %17 = load i32, i32* %16, align 4, !dbg !9545
  %18 = add i32 %17, 1, !dbg !9545
  store i32 %18, i32* %16, align 4, !dbg !9545
  %19 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9545
  %20 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 0, i32 4, !dbg !9545
  %21 = load i32, i32* %20, align 4, !dbg !9545
  %22 = and i32 %21, %14, !dbg !9545
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %19, i32 %22), metadata !9537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9545
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 1, i32 %22, i32 2, !dbg !9548
  %24 = load i16, i16* %23, align 2, !dbg !9548
  %25 = and i16 %24, 1, !dbg !9549
  %26 = icmp eq i16 %25, 0, !dbg !9550
  br i1 %26, label %48, label %27, !dbg !9551

27:                                               ; preds = %13
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9552
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 1, !dbg !9552
  %30 = load i32, i32* %29, align 4, !dbg !9552
  %31 = icmp eq i32 %30, 0, !dbg !9552
  br i1 %31, label %37, label %32, !dbg !9555

32:                                               ; preds = %27
  %33 = add i32 %30, -1, !dbg !9556
  store i32 %33, i32* %29, align 4, !dbg !9556
  %34 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9556
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %34, i32 0, i32 0, i32 3, !dbg !9556
  tail call fastcc void @atomic_add.109(i32* noundef nonnull %35) #24, !dbg !9556
  %36 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9558
  br label %37, !dbg !9556

37:                                               ; preds = %32, %27
  %38 = phi %struct.rtio_sq* [ %36, %32 ], [ %28, %27 ], !dbg !9558
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 3, !dbg !9558
  %40 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %39) #24, !dbg !9558
  %41 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9558
  %42 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 1, !dbg !9558
  %43 = load i32, i32* %42, align 4, !dbg !9558
  %44 = add i32 %43, %40, !dbg !9558
  call void @llvm.dbg.value(metadata i32 %44, metadata !9541, metadata !DIExpression()), !dbg !9559
  %45 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 2, !dbg !9558
  %46 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %45) #24, !dbg !9558
  %47 = icmp eq i32 %44, %46, !dbg !9558
  call void @llvm.dbg.value(metadata i1 %47, metadata !9544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9559
  br i1 %47, label %48, label %13, !dbg !9558

48:                                               ; preds = %37, %13, %1
  %49 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9560
  %50 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %49, i32 0, i32 0, i32 1, !dbg !9560
  %51 = load i32, i32* %50, align 4, !dbg !9560
  %52 = icmp eq i32 %51, 0, !dbg !9560
  br i1 %52, label %57, label %53, !dbg !9563

53:                                               ; preds = %48
  %54 = add i32 %51, -1, !dbg !9564
  store i32 %54, i32* %50, align 4, !dbg !9564
  %55 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9564
  %56 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %55, i32 0, i32 0, i32 3, !dbg !9564
  tail call fastcc void @atomic_add.109(i32* noundef nonnull %56) #24, !dbg !9564
  br label %57, !dbg !9564

57:                                               ; preds = %53, %48
  ret void, !dbg !9566
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.109(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9567 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9569, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata i32 1, metadata !9570, metadata !DIExpression()), !dbg !9571
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9572
  ret void, !dbg !9573
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc.110(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9574 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9576, metadata !DIExpression()), !dbg !9577
  tail call fastcc void @atomic_add.109(i32* noundef %0) #24, !dbg !9578
  ret void, !dbg !9579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9580 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9582, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9583, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i32 %2, metadata !9584, metadata !DIExpression()), !dbg !9598
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9599
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9599
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9587, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9219, metadata !DIExpression()) #23, !dbg !9600
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9602, !srcloc !9234
  call void @llvm.dbg.value(metadata i32 undef, metadata !9231, metadata !DIExpression()) #23, !dbg !9604
  call void @llvm.dbg.value(metadata i32 undef, metadata !9232, metadata !DIExpression()) #23, !dbg !9604
  call void @llvm.dbg.value(metadata i32 undef, metadata !9225, metadata !DIExpression()) #23, !dbg !9600
  call void @llvm.dbg.value(metadata i32 undef, metadata !9586, metadata !DIExpression()), !dbg !9598
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9605
  %8 = load i8*, i8** %7, align 4, !dbg !9605
  tail call fastcc void @rtio_cqe_submit.107(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9606
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9607
  call void @llvm.dbg.value(metadata i16 %9, metadata !9588, metadata !DIExpression()), !dbg !9598
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9608
  %11 = load i16, i16* %10, align 2, !dbg !9608
  %12 = and i16 %11, 1, !dbg !9609
  %13 = icmp eq i16 %12, 0, !dbg !9609
  br i1 %13, label %64, label %14, !dbg !9610

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9611
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9611
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9611
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9611
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9611
  %20 = sub i32 %18, %19, !dbg !9611
  %21 = sdiv exact i32 %20, 20, !dbg !9611
  call void @llvm.dbg.value(metadata i32 %21, metadata !9589, metadata !DIExpression()), !dbg !9612
  %22 = add nsw i32 %21, 1, !dbg !9611
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9611
  %24 = load i32, i32* %23, align 4, !dbg !9611
  %25 = and i32 %22, %24, !dbg !9611
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9611
  %27 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %26) #24, !dbg !9611
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9611
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9611
  %30 = load i32, i32* %29, align 4, !dbg !9611
  %31 = and i32 %30, %27, !dbg !9611
  %32 = icmp eq i32 %25, %31, !dbg !9611
  call void @llvm.dbg.value(metadata i1 %32, metadata !9593, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9612
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9585, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9585, metadata !DIExpression()), !dbg !9598
  br i1 %32, label %64, label %33, !dbg !9613

33:                                               ; preds = %14
  %34 = and i32 %22, %30, !dbg !9611
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %34, !dbg !9611
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9585, metadata !DIExpression()), !dbg !9598
  br label %36, !dbg !9614

36:                                               ; preds = %33, %42
  %37 = phi %struct.rtio_sqe* [ %63, %42 ], [ %35, %33 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %37, metadata !9585, metadata !DIExpression()), !dbg !9598
  %38 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 2, !dbg !9615
  %39 = load i16, i16* %38, align 2, !dbg !9615
  %40 = and i16 %39, 1, !dbg !9616
  %41 = icmp eq i16 %40, 0, !dbg !9613
  br i1 %41, label %64, label %42, !dbg !9614

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 4, !dbg !9617
  %44 = load i8*, i8** %43, align 4, !dbg !9617
  tail call fastcc void @rtio_cqe_submit.107(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %44) #24, !dbg !9618
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9619
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 1, i32 0, !dbg !9619
  %47 = ptrtoint %struct.rtio_sqe* %37 to i32, !dbg !9619
  %48 = ptrtoint %struct.rtio_sqe* %46 to i32, !dbg !9619
  %49 = sub i32 %47, %48, !dbg !9619
  %50 = sdiv exact i32 %49, 20, !dbg !9619
  call void @llvm.dbg.value(metadata i32 %50, metadata !9594, metadata !DIExpression()), !dbg !9620
  %51 = add nsw i32 %50, 1, !dbg !9619
  %52 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 4, !dbg !9619
  %53 = load i32, i32* %52, align 4, !dbg !9619
  %54 = and i32 %51, %53, !dbg !9619
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 2, !dbg !9619
  %56 = tail call fastcc i32 @atomic_get.100(i32* noundef nonnull %55) #24, !dbg !9619
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9619
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 4, !dbg !9619
  %59 = load i32, i32* %58, align 4, !dbg !9619
  %60 = and i32 %59, %56, !dbg !9619
  %61 = icmp eq i32 %54, %60, !dbg !9619
  call void @llvm.dbg.value(metadata i1 %61, metadata !9597, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9620
  %62 = and i32 %51, %59, !dbg !9619
  %63 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 1, i32 %62, !dbg !9619
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9585, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9585, metadata !DIExpression()), !dbg !9598
  br i1 %61, label %64, label %36, !dbg !9613

64:                                               ; preds = %42, %36, %14, %3
  %65 = extractvalue { i32, i32 } %6, 0, !dbg !9602
  call void @llvm.dbg.value(metadata i32 %65, metadata !9231, metadata !DIExpression()) #23, !dbg !9604
  call void @llvm.dbg.value(metadata i32 %65, metadata !9225, metadata !DIExpression()) #23, !dbg !9600
  call void @llvm.dbg.value(metadata i32 %65, metadata !9586, metadata !DIExpression()), !dbg !9598
  %66 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9621
  %67 = load i8*, i8** %66, align 4, !dbg !9621
  %68 = zext i16 %9 to i32, !dbg !9622
  %69 = getelementptr inbounds i8, i8* %67, i32 %68, !dbg !9622
  %70 = load i8, i8* %69, align 1, !dbg !9623
  %71 = or i8 %70, 1, !dbg !9623
  store i8 %71, i8* %69, align 1, !dbg !9623
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %5) #24, !dbg !9624
  call void @llvm.dbg.value(metadata i32 undef, metadata !9291, metadata !DIExpression()) #23, !dbg !9625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9296, metadata !DIExpression()) #23, !dbg !9625
  call void @llvm.dbg.value(metadata i32 undef, metadata !9299, metadata !DIExpression()) #23, !dbg !9627
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %65) #23, !dbg !9629, !srcloc !9305
  ret void, !dbg !9630
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9633, metadata !DIExpression()), !dbg !9634
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9635
  ret void, !dbg !9636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9641, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 %1, metadata !9642, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9643, metadata !DIExpression()), !dbg !9647
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9648
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9648
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9648
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9644, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 %0, metadata !9646, metadata !DIExpression()), !dbg !9647
  %7 = icmp slt i32 %0, %1, !dbg !9649
  br i1 %7, label %8, label %22, !dbg !9652

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9646, metadata !DIExpression()), !dbg !9647
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9653
  %11 = icmp eq i32 %10, 0, !dbg !9653
  br i1 %11, label %19, label %12, !dbg !9656

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9657
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9659
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9659
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9661
  br i1 %15, label %19, label %16, !dbg !9662

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9663
  %18 = load i8*, i8** %17, align 4, !dbg !9663
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9664
  br label %19, !dbg !9665

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9666
  call void @llvm.dbg.value(metadata i32 %20, metadata !9646, metadata !DIExpression()), !dbg !9647
  %21 = icmp eq i32 %20, %1, !dbg !9649
  br i1 %21, label %22, label %8, !dbg !9652, !llvm.loop !9667

22:                                               ; preds = %19, %3
  ret void, !dbg !9669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !9670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9672, metadata !DIExpression()), !dbg !9673
  %2 = shl nuw i32 1, %0, !dbg !9674
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9677
  ret i32 %3, !dbg !9678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !9679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9683, metadata !DIExpression()), !dbg !9684
  %2 = shl nuw i32 1, %0, !dbg !9685
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9688
  ret void, !dbg !9689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9693, metadata !DIExpression()), !dbg !9694
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9695
  ret void, !dbg !9696
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !9697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9699, metadata !DIExpression()), !dbg !9700
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9701
  %3 = and i32 %2, %0, !dbg !9701
  %4 = icmp eq i32 %3, %0, !dbg !9702
  %5 = zext i1 %4 to i32, !dbg !9702
  ret i32 %5, !dbg !9703
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9704 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9706, metadata !DIExpression()), !dbg !9707
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9708
  ret void, !dbg !9709
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9712, metadata !DIExpression()), !dbg !9713
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9714
  ret void, !dbg !9715
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9716 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9718, metadata !DIExpression()), !dbg !9719
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9720
  ret void, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9724, metadata !DIExpression()), !dbg !9725
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9726
  ret void, !dbg !9727
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9730, metadata !DIExpression()), !dbg !9731
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9732
  ret void, !dbg !9733
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9734 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9736, metadata !DIExpression()), !dbg !9737
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9738
  ret void, !dbg !9739
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9742, metadata !DIExpression()), !dbg !9743
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9744
  ret i32 0, !dbg !9745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1221 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1225, metadata !DIExpression()), !dbg !9746
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9747
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9749
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9751
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9753
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9755
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9757
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9759
  ret void, !dbg !9761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9764, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.value(metadata i32 0, metadata !9765, metadata !DIExpression()), !dbg !9766
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9767
  %3 = load i32, i32* %2, align 4, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %3, metadata !9765, metadata !DIExpression()), !dbg !9766
  %4 = shl nuw i32 1, %0, !dbg !9768
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9769
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9770
  ret void, !dbg !9771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9774, metadata !DIExpression()), !dbg !9775
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9776
  %3 = or i32 %2, %0, !dbg !9776
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9776
  ret void, !dbg !9777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !9778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9780, metadata !DIExpression()), !dbg !9781
  %2 = icmp slt i32 %0, 32, !dbg !9782
  br i1 %2, label %3, label %5, !dbg !9784

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9785
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9787
  br label %5, !dbg !9788

5:                                                ; preds = %1, %3
  ret void, !dbg !9789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9792, metadata !DIExpression()), !dbg !9793
  %2 = xor i32 %0, -1, !dbg !9794
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9794
  %4 = and i32 %3, %2, !dbg !9794
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9794
  ret void, !dbg !9795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !9796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9800, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i32 %1, metadata !9801, metadata !DIExpression()), !dbg !9802
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9803

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9804
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9806
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9807
  br label %11, !dbg !9808

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9809
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9810
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9811
  br label %11, !dbg !9812

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9813
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9814
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9815
  br label %11, !dbg !9816

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9817
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9818
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9819
  br label %11, !dbg !9820

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9824, metadata !DIExpression()), !dbg !9825
  %2 = xor i32 %0, -1, !dbg !9826
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9826
  %4 = and i32 %3, %2, !dbg !9826
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9826
  ret void, !dbg !9827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9830, metadata !DIExpression()), !dbg !9831
  %2 = xor i32 %0, -1, !dbg !9832
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9832
  %4 = and i32 %3, %2, !dbg !9832
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9832
  ret void, !dbg !9833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9836, metadata !DIExpression()), !dbg !9837
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9838
  %3 = or i32 %2, %0, !dbg !9838
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9838
  ret void, !dbg !9839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9842, metadata !DIExpression()), !dbg !9843
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9844
  %3 = or i32 %2, %0, !dbg !9844
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9844
  ret void, !dbg !9845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !9846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9850, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9851, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i8* %2, metadata !9852, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9853, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9855, metadata !DIExpression()), !dbg !9856
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9857
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9857
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9859
  br i1 %6, label %7, label %9, !dbg !9860

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9861
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9862
  store i8* %2, i8** %8, align 4, !dbg !9863
  br label %9, !dbg !9864

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9856
  ret i32 %10, !dbg !9865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !9866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9868, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9869, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9870, metadata !DIExpression()), !dbg !9871
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9872
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9873
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9874
  store i8* null, i8** %3, align 4, !dbg !9875
  ret void, !dbg !9876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9879, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.value(metadata i8* %1, metadata !9880, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.value(metadata i8* %1, metadata !9881, metadata !DIExpression()), !dbg !9884
  %3 = bitcast i8* %1 to i32*, !dbg !9885
  %4 = load i32, i32* %3, align 4, !dbg !9885
  %5 = add i32 %4, -37, !dbg !9885
  %6 = icmp ult i32 %5, -9, !dbg !9885
  br i1 %6, label %15, label %7, !dbg !9887

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9888
  %9 = inttoptr i32 %8 to i32*, !dbg !9889
  call void @llvm.dbg.value(metadata i32* %9, metadata !9882, metadata !DIExpression()), !dbg !9884
  %10 = load volatile i32, i32* %9, align 4, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %10, metadata !9883, metadata !DIExpression()), !dbg !9884
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9891
  %12 = bitcast i8* %11 to i32*, !dbg !9891
  %13 = load i32, i32* %12, align 4, !dbg !9891
  %14 = or i32 %13, %10, !dbg !9892
  call void @llvm.dbg.value(metadata i32 %14, metadata !9883, metadata !DIExpression()), !dbg !9884
  store volatile i32 %14, i32* %9, align 4, !dbg !9893
  br label %15, !dbg !9894

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9884
  ret i32 %16, !dbg !9895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9898, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i8* %1, metadata !9899, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i8* %1, metadata !9900, metadata !DIExpression()), !dbg !9903
  %3 = bitcast i8* %1 to i32*, !dbg !9904
  %4 = load i32, i32* %3, align 4, !dbg !9904
  %5 = add i32 %4, -37, !dbg !9904
  %6 = icmp ult i32 %5, -9, !dbg !9904
  br i1 %6, label %16, label %7, !dbg !9906

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9907
  %9 = inttoptr i32 %8 to i32*, !dbg !9908
  call void @llvm.dbg.value(metadata i32* %9, metadata !9901, metadata !DIExpression()), !dbg !9903
  %10 = load volatile i32, i32* %9, align 4, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %10, metadata !9902, metadata !DIExpression()), !dbg !9903
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9910
  %12 = bitcast i8* %11 to i32*, !dbg !9910
  %13 = load i32, i32* %12, align 4, !dbg !9910
  %14 = xor i32 %13, -1, !dbg !9911
  %15 = and i32 %10, %14, !dbg !9912
  call void @llvm.dbg.value(metadata i32 %15, metadata !9902, metadata !DIExpression()), !dbg !9903
  store volatile i32 %15, i32* %9, align 4, !dbg !9913
  br label %16, !dbg !9914

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9903
  ret i32 %17, !dbg !9915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #11 !dbg !9916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9918, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i8* %1, metadata !9919, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32* %2, metadata !9920, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i8* %1, metadata !9921, metadata !DIExpression()), !dbg !9925
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9926
  call void @llvm.dbg.value(metadata i32 %4, metadata !9922, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 %4, metadata !9923, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 %4, metadata !9924, metadata !DIExpression()), !dbg !9925
  %5 = bitcast i8* %1 to i32*, !dbg !9927
  %6 = load i32, i32* %5, align 4, !dbg !9927
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !9928

7:                                                ; preds = %3
  br label %10, !dbg !9929

8:                                                ; preds = %3
  br label %10, !dbg !9931

9:                                                ; preds = %3
  br label %10, !dbg !9932

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !9933
  br label %12, !dbg !9934

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !9925
  ret i32 %13, !dbg !9934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !9935 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9937, metadata !DIExpression()), !dbg !9945
  call void @llvm.dbg.value(metadata i8* %1, metadata !9938, metadata !DIExpression()), !dbg !9945
  call void @llvm.dbg.value(metadata i8* %2, metadata !9939, metadata !DIExpression()), !dbg !9945
  call void @llvm.dbg.value(metadata i8* %1, metadata !9940, metadata !DIExpression()), !dbg !9945
  %4 = bitcast i8* %1 to i32*, !dbg !9946
  %5 = load i32, i32* %4, align 4, !dbg !9946
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9947
  call void @llvm.dbg.value(metadata i32 %6, metadata !9944, metadata !DIExpression()), !dbg !9945
  %7 = icmp slt i32 %6, 0, !dbg !9948
  br i1 %7, label %22, label %8, !dbg !9950

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9940, metadata !DIExpression()), !dbg !9945
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9951
  %10 = bitcast i8* %9 to i32*, !dbg !9951
  %11 = load i32, i32* %10, align 4, !dbg !9951
  %12 = lshr i32 %11, 16, !dbg !9951
  %13 = and i32 %12, 7, !dbg !9951
  %14 = lshr i32 %11, 8, !dbg !9952
  %15 = and i32 %14, 31, !dbg !9952
  %16 = shl i32 %13, %15, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %16, metadata !9943, metadata !DIExpression()), !dbg !9945
  %17 = and i32 %11, 255, !dbg !9954
  %18 = or i32 %17, 1073887232, !dbg !9955
  %19 = inttoptr i32 %18 to i32*, !dbg !9956
  call void @llvm.dbg.value(metadata i32* %19, metadata !9941, metadata !DIExpression()), !dbg !9945
  %20 = load volatile i32, i32* %19, align 4, !dbg !9957
  call void @llvm.dbg.value(metadata i32 %20, metadata !9942, metadata !DIExpression()), !dbg !9945
  %21 = or i32 %16, %20, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %21, metadata !9942, metadata !DIExpression()), !dbg !9945
  store volatile i32 %21, i32* %19, align 4, !dbg !9959
  br label %22, !dbg !9960

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9945
  ret i32 %23, !dbg !9961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9966, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 0, metadata !9967, metadata !DIExpression()), !dbg !9968
  %2 = add i32 %0, -1, !dbg !9969
  %3 = icmp ult i32 %2, 4, !dbg !9969
  br i1 %3, label %4, label %7, !dbg !9969

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9969
  %6 = load i32, i32* %5, align 4, !dbg !9969
  call void @llvm.dbg.value(metadata i32 %6, metadata !9967, metadata !DIExpression()), !dbg !9968
  br label %7, !dbg !9970

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9968
  ret i32 %8, !dbg !9971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9972 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9974, metadata !DIExpression()), !dbg !9977
  tail call void @config_enable_default_clocks() #25, !dbg !9978
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9979
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9979
  %4 = lshr i32 %3, 4, !dbg !9979
  %5 = and i32 %4, 15, !dbg !9979
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9979
  %7 = load i8, i8* %6, align 1, !dbg !9979
  %8 = zext i8 %7 to i32, !dbg !9979
  %9 = lshr i32 %2, %8, !dbg !9979
  call void @llvm.dbg.value(metadata i32 %9, metadata !9975, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !9976, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9977
  %10 = icmp ult i32 %9, 32000000, !dbg !9980
  br i1 %10, label %11, label %13, !dbg !9982

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !9983
  br label %13, !dbg !9985

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9986
  tail call fastcc void @set_up_plls() #24, !dbg !9987
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9988
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #24, !dbg !9991
  br label %14, !dbg !9992

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9993
  %16 = icmp eq i32 %15, 12, !dbg !9994
  br i1 %16, label %17, label %14, !dbg !9992, !llvm.loop !9995

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !9997
  br i1 %18, label %19, label %21, !dbg !9999

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !10000
  br label %21, !dbg !10002

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !10003
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !10004
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !10005
  ret i32 0, !dbg !10006
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !10007 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10009
  %2 = and i32 %1, 240, !dbg !10009
  ret i32 %2, !dbg !10010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !10011 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10012
  %2 = icmp eq i32 %1, 1, !dbg !10016
  br i1 %2, label %7, label %3, !dbg !10017

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10018
  br label %4, !dbg !10020

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10021
  %6 = icmp eq i32 %5, 1, !dbg !10022
  br i1 %6, label %7, label %4, !dbg !10020, !llvm.loop !10023

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !10025
  br label %8, !dbg !10028

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !10029
  %10 = icmp eq i32 %9, 1, !dbg !10030
  br i1 %10, label %11, label %8, !dbg !10028, !llvm.loop !10031

11:                                               ; preds = %8
  ret void, !dbg !10033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10034 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10035
  %2 = icmp eq i32 %1, 12, !dbg !10037
  br i1 %2, label %3, label %4, !dbg !10038

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10039
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !10041
  br label %4, !dbg !10042

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !10043
  tail call void @config_pll_sysclock() #25, !dbg !10044
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !10045
  br label %5, !dbg !10046

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !10047
  %7 = icmp eq i32 %6, 1, !dbg !10048
  br i1 %7, label %8, label %5, !dbg !10046, !llvm.loop !10049

8:                                                ; preds = %5
  ret void, !dbg !10051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !10052 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10054, metadata !DIExpression()), !dbg !10055
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10056
  %2 = and i32 %1, -241, !dbg !10056
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10056
  ret void, !dbg !10057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !10058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10060, metadata !DIExpression()), !dbg !10061
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10062
  %3 = and i32 %2, -4, !dbg !10062
  %4 = or i32 %3, %0, !dbg !10062
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10062
  ret void, !dbg !10063
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !10064 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10065
  %2 = and i32 %1, 12, !dbg !10065
  ret i32 %2, !dbg !10066
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !10067 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10069, metadata !DIExpression()), !dbg !10070
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10071
  %2 = and i32 %1, -1793, !dbg !10071
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10071
  ret void, !dbg !10072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !10073 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10075, metadata !DIExpression()), !dbg !10076
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10077
  %2 = and i32 %1, -14337, !dbg !10077
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10077
  ret void, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !10079 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10080
  %2 = icmp eq i32 %1, 1, !dbg !10082
  br i1 %2, label %7, label %3, !dbg !10083

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10084
  br label %4, !dbg !10086

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10087
  %6 = icmp eq i32 %5, 1, !dbg !10088
  br i1 %6, label %7, label %4, !dbg !10086, !llvm.loop !10089

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #24, !dbg !10091
  br label %8, !dbg !10092

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10093
  %10 = icmp eq i32 %9, 4, !dbg !10094
  br i1 %10, label %11, label %8, !dbg !10092, !llvm.loop !10095

11:                                               ; preds = %8
  ret void, !dbg !10097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10098 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10099
  %2 = and i32 %1, -16777217, !dbg !10099
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10099
  ret void, !dbg !10100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10101 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10102
  %2 = or i32 %1, 16777216, !dbg !10102
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10102
  ret void, !dbg !10103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !10104 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10105
  %2 = lshr i32 %1, 25, !dbg !10106
  %3 = and i32 %2, 1, !dbg !10106
  ret i32 %3, !dbg !10107
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !10108 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10109
  %2 = lshr i32 %1, 1, !dbg !10110
  %3 = and i32 %2, 1, !dbg !10110
  ret i32 %3, !dbg !10111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10112 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10113
  %2 = or i32 %1, 1, !dbg !10113
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10113
  ret void, !dbg !10114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10115 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10116
  %2 = or i32 %1, 1, !dbg !10116
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10116
  ret void, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !10118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10119
  %2 = lshr i32 %1, 1, !dbg !10120
  %3 = and i32 %2, 1, !dbg !10120
  ret i32 %3, !dbg !10121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10122 {
  ret i32 16000000, !dbg !10124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10127 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !10128
  ret void, !dbg !10129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10130 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10134, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.value(metadata i32 262144, metadata !10135, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10136, metadata !DIExpression()), !dbg !10137
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10138
  %2 = and i32 %1, -16580609, !dbg !10138
  %3 = or i32 %2, 4456448, !dbg !10138
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10138
  ret void, !dbg !10139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #4 !dbg !10140 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !10141
  %2 = zext i8 %1 to i32, !dbg !10141
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !10141
  ret i32 %3, !dbg !10142
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !10143 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #24, !dbg !10144
  ret void, !dbg !10145
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #15 !dbg !10146 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !10148, metadata !DIExpression()), !dbg !10150
  %2 = bitcast i32* %1 to i8*, !dbg !10151
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10151
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10149, metadata !DIExpression()), !dbg !10152
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10153
  %4 = or i32 %3, 1, !dbg !10153
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10153
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10154
  %6 = and i32 %5, 1, !dbg !10154
  store volatile i32 %6, i32* %1, align 4, !dbg !10155
  %7 = load volatile i32, i32* %1, align 4, !dbg !10156
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10157
  ret void, !dbg !10157
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10158 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10160, metadata !DIExpression()), !dbg !10161
  %2 = tail call fastcc zeroext i1 @device_is_ready.120() #24, !dbg !10162
  br i1 %2, label %3, label %4, !dbg !10164

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !10165
  br label %4, !dbg !10166

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10161
  ret i32 %5, !dbg !10167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.120() unnamed_addr #1 !dbg !10168 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10172, metadata !DIExpression()), !dbg !10173
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10174, !srcloc !10176
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.121() #24, !dbg !10177
  ret i1 %1, !dbg !10178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10179 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10180
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10181
  ret void, !dbg !10182
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10185, metadata !DIExpression()), !dbg !10186
  %2 = icmp eq i32 %0, 10, !dbg !10187
  br i1 %2, label %3, label %4, !dbg !10189

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !10190
  br label %4, !dbg !10192

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10193
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !10194
  ret i32 %0, !dbg !10195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10196 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i8 %0, metadata !10200, metadata !DIExpression()), !dbg !10201
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10202, !srcloc !10204
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !10205
  ret void, !dbg !10206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10209, metadata !DIExpression()), !dbg !10212
  call void @llvm.dbg.value(metadata i8 %0, metadata !10210, metadata !DIExpression()), !dbg !10212
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10213
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10211, metadata !DIExpression()), !dbg !10212
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10214
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10214
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !10215
  ret void, !dbg !10216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.121() unnamed_addr #1 !dbg !10217 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10219, metadata !DIExpression()), !dbg !10220
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !10221
  ret i1 %1, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10223 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10270, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10271, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10272, metadata !DIExpression()), !dbg !10273
  ret void, !dbg !10274
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10275 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10277, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i8 %1, metadata !10278, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10279, metadata !DIExpression()), !dbg !10282
  %5 = bitcast i32* %4 to i8*, !dbg !10283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10283
  call void @llvm.dbg.value(metadata i32* %4, metadata !10281, metadata !DIExpression(DW_OP_deref)), !dbg !10282
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !10284
  call void @llvm.dbg.value(metadata i32 %6, metadata !10280, metadata !DIExpression()), !dbg !10282
  %7 = icmp eq i32 %6, 0, !dbg !10285
  br i1 %7, label %8, label %31, !dbg !10287

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10280, metadata !DIExpression()), !dbg !10282
  %9 = and i32 %2, 131072, !dbg !10288
  %10 = icmp eq i32 %9, 0, !dbg !10290
  br i1 %10, label %28, label %11, !dbg !10291

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10292
  %13 = icmp eq i32 %12, 0, !dbg !10295
  br i1 %13, label %18, label %14, !dbg !10296

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10297
  %16 = shl nuw i32 1, %15, !dbg !10297
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !10299
  br label %25, !dbg !10300

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10301
  %20 = icmp eq i32 %19, 0, !dbg !10303
  %21 = zext i8 %1 to i32, !dbg !10282
  br i1 %20, label %25, label %22, !dbg !10304

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10305
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !10307
  br label %25, !dbg !10308

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10309
  %27 = load i32, i32* %4, align 4, !dbg !10310
  call void @llvm.dbg.value(metadata i32 %30, metadata !10281, metadata !DIExpression()), !dbg !10282
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !10311
  br label %31, !dbg !10312

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10309
  %30 = load i32, i32* %4, align 4, !dbg !10310
  call void @llvm.dbg.value(metadata i32 %30, metadata !10281, metadata !DIExpression()), !dbg !10282
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !10311
  call void @llvm.dbg.value(metadata i32 0, metadata !10280, metadata !DIExpression()), !dbg !10282
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10313
  ret i32 %6, !dbg !10313
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !10314 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10318, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.value(metadata i32* %1, metadata !10319, metadata !DIExpression()), !dbg !10323
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10324
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10324
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10324
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10320, metadata !DIExpression()), !dbg !10323
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10325
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10325
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10325
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10322, metadata !DIExpression()), !dbg !10323
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !10326
  store i32 %9, i32* %1, align 4, !dbg !10327
  ret i32 0, !dbg !10328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !10329 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10331, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata i32 %1, metadata !10332, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata i32 %2, metadata !10333, metadata !DIExpression()), !dbg !10337
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10338
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10338
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10338
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10334, metadata !DIExpression()), !dbg !10337
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10339
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10339
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10339
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10335, metadata !DIExpression()), !dbg !10337
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !10340
  call void @llvm.dbg.value(metadata i32 %10, metadata !10336, metadata !DIExpression()), !dbg !10337
  %11 = xor i32 %1, -1, !dbg !10341
  %12 = and i32 %10, %11, !dbg !10342
  %13 = and i32 %2, %1, !dbg !10343
  %14 = or i32 %12, %13, !dbg !10344
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !10345
  ret i32 0, !dbg !10346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10347 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10349, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %1, metadata !10350, metadata !DIExpression()), !dbg !10353
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10354
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10354
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10354
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10351, metadata !DIExpression()), !dbg !10353
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10355
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10355
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10355
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10352, metadata !DIExpression()), !dbg !10353
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10356
  store volatile i32 %1, i32* %9, align 4, !dbg !10356
  ret i32 0, !dbg !10357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10360, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.value(metadata i32 %1, metadata !10361, metadata !DIExpression()), !dbg !10364
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10365
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10365
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10365
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10362, metadata !DIExpression()), !dbg !10364
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10366
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10366
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10366
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10363, metadata !DIExpression()), !dbg !10364
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10367
  ret i32 0, !dbg !10368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10371, metadata !DIExpression()), !dbg !10375
  call void @llvm.dbg.value(metadata i32 %1, metadata !10372, metadata !DIExpression()), !dbg !10375
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10376
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10376
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10376
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10373, metadata !DIExpression()), !dbg !10375
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10377
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10377
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10377
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10374, metadata !DIExpression()), !dbg !10375
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10378
  %10 = load volatile i32, i32* %9, align 4, !dbg !10378
  %11 = xor i32 %10, %1, !dbg !10378
  store volatile i32 %11, i32* %9, align 4, !dbg !10378
  ret i32 0, !dbg !10379
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10380 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10382, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i8 %1, metadata !10383, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %2, metadata !10384, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %3, metadata !10385, metadata !DIExpression()), !dbg !10392
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10393
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10393
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10393
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10386, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i8* undef, metadata !10387, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 0, metadata !10389, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 0, metadata !10390, metadata !DIExpression()), !dbg !10392
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10394

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10395
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10399
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10400
  %12 = load i32, i32* %11, align 4, !dbg !10400
  %13 = icmp eq i32 %10, %12, !dbg !10401
  br i1 %13, label %14, label %29, !dbg !10402

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10403
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10405
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10406
  br label %29, !dbg !10407

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10408
  %17 = load i8*, i8** %16, align 4, !dbg !10408
  call void @llvm.dbg.value(metadata i8* %17, metadata !10387, metadata !DIExpression()), !dbg !10392
  %18 = zext i8 %1 to i32, !dbg !10409
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10411
  %20 = icmp eq i32 %19, 0, !dbg !10412
  br i1 %20, label %21, label %29, !dbg !10413

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10414
  %23 = load i32, i32* %22, align 4, !dbg !10414
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10415
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10416

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10389, metadata !DIExpression()), !dbg !10392
  br label %27, !dbg !10417

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10389, metadata !DIExpression()), !dbg !10392
  br label %27, !dbg !10419

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10389, metadata !DIExpression()), !dbg !10392
  br label %27, !dbg !10420

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10392
  call void @llvm.dbg.value(metadata i32 %28, metadata !10389, metadata !DIExpression()), !dbg !10392
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10421
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10422
  br label %29, !dbg !10422

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10392
  call void @llvm.dbg.value(metadata i32 %30, metadata !10390, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.label(metadata !10391), !dbg !10423
  ret i32 %30, !dbg !10424
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !10425 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10427, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10428, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i1 %2, metadata !10429, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10431
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10432
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10432
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10432
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10430, metadata !DIExpression()), !dbg !10431
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10433
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10434
  ret i32 %8, !dbg !10435
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !10436 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10442, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10443, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i1 %2, metadata !10444, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10445
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10446
  br i1 %4, label %10, label %5, !dbg !10448

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10449
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !10452
  %8 = or i1 %7, %2, !dbg !10453
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10453
  br i1 %2, label %11, label %13, !dbg !10453

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10454

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10455
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !10458
  br label %13, !dbg !10459

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10445
  ret i32 %14, !dbg !10460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10461 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10465, metadata !DIExpression()), !dbg !10466
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10467
  %3 = icmp eq %struct._snode* %2, null, !dbg !10467
  ret i1 %3, !dbg !10467
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10468 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10472, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10473, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10474, metadata !DIExpression()), !dbg !10476
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10477
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10475, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10474, metadata !DIExpression()), !dbg !10476
  %4 = icmp eq %struct._snode* %3, null, !dbg !10479
  br i1 %4, label %15, label %5, !dbg !10477

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10475, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10474, metadata !DIExpression()), !dbg !10476
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10481
  br i1 %6, label %9, label %11, !dbg !10484

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10475, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10474, metadata !DIExpression()), !dbg !10476
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10481
  br i1 %8, label %9, label %11, !dbg !10484, !llvm.loop !10485

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10486
  br label %15, !dbg !10486

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10475, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10474, metadata !DIExpression()), !dbg !10476
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10479
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10475, metadata !DIExpression()), !dbg !10476
  %14 = icmp eq %struct._snode* %13, null, !dbg !10479
  br i1 %14, label %15, label %7, !dbg !10477, !llvm.loop !10485

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10489 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10493, metadata !DIExpression()), !dbg !10495
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10494, metadata !DIExpression()), !dbg !10495
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10496
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10496
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10496
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10497
  %5 = icmp eq %struct._snode* %4, null, !dbg !10497
  br i1 %5, label %6, label %8, !dbg !10496

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10499
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10499
  br label %8, !dbg !10499

8:                                                ; preds = %6, %2
  ret void, !dbg !10496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10505, metadata !DIExpression()), !dbg !10506
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10507
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10507
  ret %struct._snode* %3, !dbg !10508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10509 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10513, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10514, metadata !DIExpression()), !dbg !10515
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10516
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10517
  ret void, !dbg !10518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10521, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10522, metadata !DIExpression()), !dbg !10523
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10524
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10525
  ret void, !dbg !10526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10527 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10529, metadata !DIExpression()), !dbg !10530
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10531
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10531
  ret %struct._snode* %3, !dbg !10532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10533 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10535, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10536, metadata !DIExpression()), !dbg !10537
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10538
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10539
  ret void, !dbg !10540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10541 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10545, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10546, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10547, metadata !DIExpression()), !dbg !10548
  %4 = icmp eq %struct._snode* %1, null, !dbg !10549
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10551
  br i1 %4, label %6, label %11, !dbg !10552

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10553
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10555
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10555
  br i1 %8, label %9, label %15, !dbg !10553

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10557
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10557
  br label %15, !dbg !10557

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10559
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10561
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10561
  br i1 %13, label %14, label %15, !dbg !10559

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10563
  br label %15, !dbg !10563

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10552
  ret void, !dbg !10552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10565 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10569, metadata !DIExpression()), !dbg !10570
  %2 = icmp eq %struct._snode* %0, null, !dbg !10571
  br i1 %2, label %5, label %3, !dbg !10571

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10571
  br label %5, !dbg !10571

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10571
  ret %struct._snode* %6, !dbg !10571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10572 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10574, metadata !DIExpression()), !dbg !10575
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10576
  ret %struct._snode* %2, !dbg !10576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10577 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10579, metadata !DIExpression()), !dbg !10580
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10581
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10581
  ret %struct._snode* %3, !dbg !10582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10585, metadata !DIExpression()), !dbg !10588
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10589, !range !10590
  call void @llvm.dbg.value(metadata i32 %2, metadata !10586, metadata !DIExpression()), !dbg !10588
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %3, metadata !10587, metadata !DIExpression()), !dbg !10588
  ret i32 %3, !dbg !10592
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10595, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i8* %1, metadata !10596, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i8* %1, metadata !10597, metadata !DIExpression()), !dbg !10598
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10599
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10599
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10600
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10600
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10600
  %8 = shl nuw i32 1, %0, !dbg !10601
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10602
  ret void, !dbg !10603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10604 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10608, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.value(metadata i32 %1, metadata !10609, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10610, metadata !DIExpression()), !dbg !10614
  %4 = bitcast i64* %3 to i8*, !dbg !10615
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10615
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !10612, metadata !DIExpression()), !dbg !10614
  store i64 4294967328, i64* %3, align 8, !dbg !10616
  call void @llvm.dbg.value(metadata i64* %3, metadata !10612, metadata !DIExpression(DW_OP_deref)), !dbg !10614
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10617
  call void @llvm.dbg.value(metadata i32 %5, metadata !10613, metadata !DIExpression()), !dbg !10614
  %6 = icmp eq i32 %5, 0, !dbg !10618
  br i1 %6, label %7, label %8, !dbg !10620

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10621
  br label %8, !dbg !10622

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10623
  ret void, !dbg !10623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10624 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10626, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i8* %0, metadata !10627, metadata !DIExpression()), !dbg !10629
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10630
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10628, metadata !DIExpression()), !dbg !10629
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10631
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10631
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10632
  ret i32 %5, !dbg !10633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10636, metadata !DIExpression()), !dbg !10639
  call void @llvm.dbg.value(metadata i32 %1, metadata !10637, metadata !DIExpression()), !dbg !10639
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10640
  call void @llvm.dbg.value(metadata i32 %3, metadata !10638, metadata !DIExpression()), !dbg !10639
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10641
  ret void, !dbg !10642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10647, metadata !DIExpression()), !dbg !10648
  %2 = sdiv i32 %0, 4, !dbg !10649
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10650
  %6 = add nsw i32 %5, 16, !dbg !10651
  %7 = shl i32 15, %6, !dbg !10652
  %8 = or i32 %7, %2, !dbg !10653
  ret i32 %8, !dbg !10654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10660, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.value(metadata i32 %1, metadata !10661, metadata !DIExpression()), !dbg !10662
  %3 = and i32 %1, 3, !dbg !10663
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !10663
  %5 = load volatile i32, i32* %4, align 4, !dbg !10663
  %6 = lshr i32 %1, 16, !dbg !10663
  %7 = xor i32 %6, -1, !dbg !10663
  %8 = and i32 %5, %7, !dbg !10663
  call void @llvm.dbg.value(metadata i32 %6, metadata !10664, metadata !DIExpression()) #23, !dbg !10668
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10670, !srcloc !10671
  call void @llvm.dbg.value(metadata i32 %9, metadata !10667, metadata !DIExpression()) #23, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %9, metadata !10672, metadata !DIExpression()) #23, !dbg !10677
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10679, !range !8147
  %11 = shl i32 %0, %10, !dbg !10663
  %12 = or i32 %11, %8, !dbg !10663
  store volatile i32 %12, i32* %4, align 4, !dbg !10663
  ret void, !dbg !10680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10681 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10685, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10686, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i32 %2, metadata !10687, metadata !DIExpression()), !dbg !10690
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10691
  %5 = icmp eq %struct._snode* %4, null, !dbg !10691
  br i1 %5, label %21, label %6, !dbg !10691

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10693
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10689, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10688, metadata !DIExpression()), !dbg !10690
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10694
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10694
  %11 = load i32, i32* %10, align 4, !dbg !10694
  %12 = and i32 %11, %2, !dbg !10698
  %13 = icmp eq i32 %12, 0, !dbg !10698
  br i1 %13, label %19, label %14, !dbg !10699

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10688, metadata !DIExpression()), !dbg !10690
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10700
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10700
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10700
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10702
  br label %19, !dbg !10703

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10688, metadata !DIExpression()), !dbg !10690
  %20 = icmp eq %struct._snode* %8, null, !dbg !10704
  br i1 %20, label %21, label %6, !dbg !10704

21:                                               ; preds = %19, %3
  ret void, !dbg !10705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10708, metadata !DIExpression()), !dbg !10709
  %2 = and i32 %0, 3, !dbg !10710
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !10710
  %4 = load volatile i32, i32* %3, align 4, !dbg !10710
  %5 = lshr i32 %0, 16, !dbg !10710
  %6 = and i32 %4, %5, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %5, metadata !10664, metadata !DIExpression()) #23, !dbg !10711
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10713, !srcloc !10671
  call void @llvm.dbg.value(metadata i32 %7, metadata !10667, metadata !DIExpression()) #23, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %7, metadata !10672, metadata !DIExpression()) #23, !dbg !10714
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10716, !range !8147
  %9 = lshr i32 %6, %8, !dbg !10717
  ret i32 %9, !dbg !10718
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10719 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10724, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata i32 %1, metadata !10725, metadata !DIExpression()), !dbg !10726
  %3 = shl i32 %1, 16, !dbg !10727
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10727
  store volatile i32 %3, i32* %4, align 4, !dbg !10727
  ret void, !dbg !10728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10729 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10733, metadata !DIExpression()), !dbg !10734
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10735
  %3 = load volatile i32, i32* %2, align 4, !dbg !10735
  ret i32 %3, !dbg !10736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10737 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10739, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata i32 %1, metadata !10740, metadata !DIExpression()), !dbg !10741
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10742
  store volatile i32 %1, i32* %3, align 4, !dbg !10742
  ret void, !dbg !10743
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10744 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10746, metadata !DIExpression()), !dbg !10747
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10748
  %3 = load volatile i32, i32* %2, align 4, !dbg !10748
  ret i32 %3, !dbg !10749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !10750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10754, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata i32* %1, metadata !10755, metadata !DIExpression()), !dbg !10756
  %3 = and i32 %0, 131072, !dbg !10757
  %4 = icmp eq i32 %3, 0, !dbg !10759
  br i1 %4, label %22, label %5, !dbg !10760

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10761
  %6 = and i32 %0, 2, !dbg !10763
  %7 = icmp eq i32 %6, 0, !dbg !10765
  br i1 %7, label %11, label %8, !dbg !10766

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10767
  %10 = icmp eq i32 %9, 0, !dbg !10767
  br i1 %10, label %33, label %11, !dbg !10770

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10771
  store i32 %12, i32* %1, align 4, !dbg !10771
  %13 = and i32 %0, 16, !dbg !10772
  %14 = icmp eq i32 %13, 0, !dbg !10774
  br i1 %14, label %17, label %15, !dbg !10775

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10776
  br label %31, !dbg !10778

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10779
  %19 = icmp eq i32 %18, 0, !dbg !10781
  br i1 %19, label %33, label %20, !dbg !10782

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10783
  br label %31, !dbg !10785

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10786
  %24 = icmp eq i32 %23, 0, !dbg !10788
  br i1 %24, label %31, label %25, !dbg !10789

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10790
  %27 = icmp eq i32 %26, 0, !dbg !10793
  br i1 %27, label %28, label %31, !dbg !10794

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10795
  br label %33, !dbg !10796

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10756
  ret i32 %34, !dbg !10796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10801, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.value(metadata i32 %1, metadata !10802, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.value(metadata i32 %2, metadata !10803, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.value(metadata i32 %3, metadata !10804, metadata !DIExpression()), !dbg !10812
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10813
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10813
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10813
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10805, metadata !DIExpression()), !dbg !10812
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10814
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10814
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10814
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10806, metadata !DIExpression()), !dbg !10812
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10815
  call void @llvm.dbg.value(metadata i32 %11, metadata !10807, metadata !DIExpression()), !dbg !10812
  %12 = and i32 %2, 48, !dbg !10816
  call void @llvm.dbg.value(metadata i32 %12, metadata !10808, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.value(metadata i32 %2, metadata !10809, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10812
  call void @llvm.dbg.value(metadata i32 %2, metadata !10810, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10812
  call void @llvm.dbg.value(metadata i32 %2, metadata !10811, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10812
  %13 = lshr i32 %2, 6, !dbg !10817
  %14 = and i32 %13, 1, !dbg !10817
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10818
  %15 = lshr i32 %2, 7, !dbg !10819
  %16 = and i32 %15, 3, !dbg !10819
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10820
  %17 = lshr i32 %2, 9, !dbg !10821
  %18 = and i32 %17, 3, !dbg !10821
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10822
  %19 = icmp eq i32 %12, 32, !dbg !10823
  br i1 %19, label %20, label %24, !dbg !10825

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10826
  br i1 %21, label %22, label %23, !dbg !10829

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10830
  br label %24, !dbg !10832

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10833
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10835
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10836
  ret void, !dbg !10837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10840, metadata !DIExpression()), !dbg !10842
  %2 = shl nuw i32 1, %0, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %2, metadata !10841, metadata !DIExpression()), !dbg !10842
  ret i32 %2, !dbg !10844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10845 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10849, metadata !DIExpression()), !dbg !10852
  call void @llvm.dbg.value(metadata i32 %1, metadata !10850, metadata !DIExpression()), !dbg !10852
  call void @llvm.dbg.value(metadata i32 %2, metadata !10851, metadata !DIExpression()), !dbg !10852
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10853
  %5 = load volatile i32, i32* %4, align 4, !dbg !10853
  %6 = xor i32 %1, -1, !dbg !10853
  %7 = and i32 %5, %6, !dbg !10853
  %8 = mul i32 %2, %1, !dbg !10853
  %9 = or i32 %7, %8, !dbg !10853
  store volatile i32 %9, i32* %4, align 4, !dbg !10853
  ret void, !dbg !10854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10855 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10857, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i32 %1, metadata !10858, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i32 %2, metadata !10859, metadata !DIExpression()), !dbg !10860
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10861
  %5 = load volatile i32, i32* %4, align 4, !dbg !10861
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()) #23, !dbg !10862
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10864, !srcloc !10671
  call void @llvm.dbg.value(metadata i32 %6, metadata !10667, metadata !DIExpression()) #23, !dbg !10862
  call void @llvm.dbg.value(metadata i32 %6, metadata !10672, metadata !DIExpression()) #23, !dbg !10865
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10867, !range !8147
  %8 = shl nuw nsw i32 %7, 1, !dbg !10861
  %9 = shl i32 3, %8, !dbg !10861
  %10 = xor i32 %9, -1, !dbg !10861
  %11 = and i32 %5, %10, !dbg !10861
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()) #23, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %6, metadata !10667, metadata !DIExpression()) #23, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %6, metadata !10672, metadata !DIExpression()) #23, !dbg !10870
  %12 = shl i32 %2, %8, !dbg !10861
  %13 = or i32 %11, %12, !dbg !10861
  store volatile i32 %13, i32* %4, align 4, !dbg !10861
  ret void, !dbg !10872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10875, metadata !DIExpression()), !dbg !10878
  call void @llvm.dbg.value(metadata i32 %1, metadata !10876, metadata !DIExpression()), !dbg !10878
  call void @llvm.dbg.value(metadata i32 %2, metadata !10877, metadata !DIExpression()), !dbg !10878
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10879
  %5 = load volatile i32, i32* %4, align 4, !dbg !10879
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()) #23, !dbg !10880
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10882, !srcloc !10671
  call void @llvm.dbg.value(metadata i32 %6, metadata !10667, metadata !DIExpression()) #23, !dbg !10880
  call void @llvm.dbg.value(metadata i32 %6, metadata !10672, metadata !DIExpression()) #23, !dbg !10883
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10885, !range !8147
  %8 = shl nuw nsw i32 %7, 1, !dbg !10879
  %9 = shl i32 3, %8, !dbg !10879
  %10 = xor i32 %9, -1, !dbg !10879
  %11 = and i32 %5, %10, !dbg !10879
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %6, metadata !10667, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %6, metadata !10672, metadata !DIExpression()) #23, !dbg !10888
  %12 = shl i32 %2, %8, !dbg !10879
  %13 = or i32 %11, %12, !dbg !10879
  store volatile i32 %13, i32* %4, align 4, !dbg !10879
  ret void, !dbg !10890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10891 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10893, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 %1, metadata !10894, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 %2, metadata !10895, metadata !DIExpression()), !dbg !10896
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10897
  %5 = load volatile i32, i32* %4, align 4, !dbg !10897
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()) #23, !dbg !10898
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10900, !srcloc !10671
  call void @llvm.dbg.value(metadata i32 %6, metadata !10667, metadata !DIExpression()) #23, !dbg !10898
  call void @llvm.dbg.value(metadata i32 %6, metadata !10672, metadata !DIExpression()) #23, !dbg !10901
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10903, !range !8147
  %8 = shl nuw nsw i32 %7, 2, !dbg !10897
  %9 = shl i32 15, %8, !dbg !10897
  %10 = xor i32 %9, -1, !dbg !10897
  %11 = and i32 %5, %10, !dbg !10897
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()) #23, !dbg !10904
  call void @llvm.dbg.value(metadata i32 %6, metadata !10667, metadata !DIExpression()) #23, !dbg !10904
  call void @llvm.dbg.value(metadata i32 %6, metadata !10672, metadata !DIExpression()) #23, !dbg !10906
  %12 = shl i32 %2, %8, !dbg !10897
  %13 = or i32 %11, %12, !dbg !10897
  store volatile i32 %13, i32* %4, align 4, !dbg !10897
  ret void, !dbg !10908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10909 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10911, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.value(metadata i32 %1, metadata !10912, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.value(metadata i32 %2, metadata !10913, metadata !DIExpression()), !dbg !10914
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10915
  %5 = load volatile i32, i32* %4, align 4, !dbg !10915
  %6 = lshr i32 %1, 8, !dbg !10915
  call void @llvm.dbg.value(metadata i32 %6, metadata !10664, metadata !DIExpression()) #23, !dbg !10916
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10918, !srcloc !10671
  call void @llvm.dbg.value(metadata i32 %7, metadata !10667, metadata !DIExpression()) #23, !dbg !10916
  call void @llvm.dbg.value(metadata i32 %7, metadata !10672, metadata !DIExpression()) #23, !dbg !10919
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10921, !range !8147
  %9 = shl nuw nsw i32 %8, 2, !dbg !10915
  %10 = shl i32 15, %9, !dbg !10915
  %11 = xor i32 %10, -1, !dbg !10915
  %12 = and i32 %5, %11, !dbg !10915
  call void @llvm.dbg.value(metadata i32 %6, metadata !10664, metadata !DIExpression()) #23, !dbg !10922
  call void @llvm.dbg.value(metadata i32 %7, metadata !10667, metadata !DIExpression()) #23, !dbg !10922
  call void @llvm.dbg.value(metadata i32 %7, metadata !10672, metadata !DIExpression()) #23, !dbg !10924
  %13 = shl i32 %2, %9, !dbg !10915
  %14 = or i32 %12, %13, !dbg !10915
  store volatile i32 %14, i32* %4, align 4, !dbg !10915
  ret void, !dbg !10926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10927 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10929, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i32 %1, metadata !10930, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i32 %2, metadata !10931, metadata !DIExpression()), !dbg !10932
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10933
  %5 = load volatile i32, i32* %4, align 4, !dbg !10933
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()) #23, !dbg !10934
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10936, !srcloc !10671
  call void @llvm.dbg.value(metadata i32 %6, metadata !10667, metadata !DIExpression()) #23, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %6, metadata !10672, metadata !DIExpression()) #23, !dbg !10937
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10939, !range !8147
  %8 = shl nuw nsw i32 %7, 1, !dbg !10933
  %9 = shl i32 3, %8, !dbg !10933
  %10 = xor i32 %9, -1, !dbg !10933
  %11 = and i32 %5, %10, !dbg !10933
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()) #23, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %6, metadata !10667, metadata !DIExpression()) #23, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %6, metadata !10672, metadata !DIExpression()) #23, !dbg !10942
  %12 = shl i32 %2, %8, !dbg !10933
  %13 = or i32 %11, %12, !dbg !10933
  store volatile i32 %13, i32* %4, align 4, !dbg !10933
  ret void, !dbg !10944
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10947, metadata !DIExpression()), !dbg !10950
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10951
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10951
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10951
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10948, metadata !DIExpression()), !dbg !10950
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10952
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10953
  %6 = tail call fastcc zeroext i1 @device_is_ready.133() #24, !dbg !10954
  br i1 %6, label %7, label %11, !dbg !10956

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %8, metadata !10949, metadata !DIExpression()), !dbg !10950
  %9 = icmp slt i32 %8, 0, !dbg !10958
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10960
  br label %11, !dbg !10960

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10950
  ret i32 %12, !dbg !10961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.133() unnamed_addr #1 !dbg !10962 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10966, metadata !DIExpression()), !dbg !10967
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10968, !srcloc !10970
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.134() #24, !dbg !10971
  ret i1 %1, !dbg !10972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10973 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10977, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i8 1, metadata !10978, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10979, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32 0, metadata !10980, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10981, metadata !DIExpression()), !dbg !10982
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10983
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10983
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10983
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10979, metadata !DIExpression()), !dbg !10982
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10984
  %6 = bitcast %struct.vnd_sensor_config* %5 to i8*, !dbg !10987
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %7, metadata !10980, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32 %7, metadata !10980, metadata !DIExpression()), !dbg !10982
  ret i32 %7, !dbg !10989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.134() unnamed_addr #1 !dbg !10990 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10992, metadata !DIExpression()), !dbg !10993
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10994
  ret i1 %1, !dbg !10995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10996 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11000, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.value(metadata i32 %1, metadata !11001, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.value(metadata i32 %2, metadata !11002, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.value(metadata i32 %3, metadata !11003, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.value(metadata i32 0, metadata !11004, metadata !DIExpression()), !dbg !11008
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !11009
  %5 = icmp eq i32 %3, 17, !dbg !11010
  br i1 %5, label %6, label %14, !dbg !11011

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11012
  call void @llvm.dbg.value(metadata i32 %7, metadata !11005, metadata !DIExpression()), !dbg !11013
  %8 = icmp eq i32 %7, 0, !dbg !11014
  %9 = shl nuw i32 1, %1, !dbg !11016
  br i1 %8, label %12, label %10, !dbg !11017

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11018
  br label %14, !dbg !11020

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11021
  br label %14, !dbg !11024

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11025
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !11026 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11028, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.value(metadata i8* %1, metadata !11029, metadata !DIExpression()), !dbg !11032
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11033
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11033
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11033
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11030, metadata !DIExpression()), !dbg !11032
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11034
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11034
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !11036
  %9 = icmp eq i32 %8, 0, !dbg !11036
  br i1 %9, label %12, label %10, !dbg !11037

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11038
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !11040
  br label %12, !dbg !11041

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11042
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11044
  %15 = icmp eq i32 %14, 0, !dbg !11044
  br i1 %15, label %19, label %16, !dbg !11045

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11046
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !11047
  store i8 %18, i8* %1, align 1, !dbg !11048
  br label %19, !dbg !11049

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11032
  ret i32 %20, !dbg !11050
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11053, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i8 %1, metadata !11054, metadata !DIExpression()), !dbg !11057
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11058
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11058
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11058
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11055, metadata !DIExpression()), !dbg !11057
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11059

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11060
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !11063
  %10 = icmp eq i32 %9, 0, !dbg !11063
  br i1 %10, label %18, label %11, !dbg !11064

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11065, !srcloc !11072
  call void @llvm.dbg.value(metadata i32 undef, metadata !11068, metadata !DIExpression()) #23, !dbg !11073
  call void @llvm.dbg.value(metadata i32 undef, metadata !11069, metadata !DIExpression()) #23, !dbg !11073
  call void @llvm.dbg.value(metadata i32 undef, metadata !11056, metadata !DIExpression()), !dbg !11057
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11074
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11076
  %15 = icmp eq i32 %14, 0, !dbg !11076
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11065
  br i1 %15, label %17, label %19, !dbg !11077

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11068, metadata !DIExpression()) #23, !dbg !11073
  call void @llvm.dbg.value(metadata i32 %16, metadata !11056, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 undef, metadata !11078, metadata !DIExpression()) #23, !dbg !11081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !11083, !srcloc !11084
  br label %18, !dbg !11085

18:                                               ; preds = %17, %7
  br label %7, !dbg !11060, !llvm.loop !11086

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11065
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11088
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !11089
  call void @llvm.dbg.value(metadata i32 %20, metadata !11078, metadata !DIExpression()) #23, !dbg !11090
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !11092, !srcloc !11084
  ret void, !dbg !11093
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !11094 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11096, metadata !DIExpression()), !dbg !11099
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11100
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11100
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11100
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11097, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i32 0, metadata !11098, metadata !DIExpression()), !dbg !11099
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11101
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11101
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !11103
  %8 = icmp ne i32 %7, 0, !dbg !11103
  %9 = zext i1 %8 to i32, !dbg !11104
  call void @llvm.dbg.value(metadata i32 %9, metadata !11098, metadata !DIExpression()), !dbg !11099
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11105
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !11107
  %12 = icmp eq i32 %11, 0, !dbg !11107
  %13 = or i32 %9, 2, !dbg !11108
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11108
  call void @llvm.dbg.value(metadata i32 %14, metadata !11098, metadata !DIExpression()), !dbg !11099
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11109
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !11111
  %17 = icmp eq i32 %16, 0, !dbg !11111
  %18 = or i32 %14, 4, !dbg !11112
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11112
  call void @llvm.dbg.value(metadata i32 %19, metadata !11098, metadata !DIExpression()), !dbg !11099
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11113
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !11115
  %22 = icmp eq i32 %21, 0, !dbg !11115
  %23 = or i32 %19, 8, !dbg !11116
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %24, metadata !11098, metadata !DIExpression()), !dbg !11099
  %25 = and i32 %24, 8, !dbg !11117
  %26 = icmp eq i32 %25, 0, !dbg !11117
  br i1 %26, label %29, label %27, !dbg !11119

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11120
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !11122
  br label %29, !dbg !11123

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11124
  %31 = icmp eq i32 %30, 0, !dbg !11124
  br i1 %31, label %34, label %32, !dbg !11126

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11127
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !11129
  br label %34, !dbg !11130

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11131
  %36 = icmp eq i32 %35, 0, !dbg !11131
  br i1 %36, label %39, label %37, !dbg !11133

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11134
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !11136
  br label %39, !dbg !11137

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11138
  %41 = icmp eq i32 %40, 0, !dbg !11138
  br i1 %41, label %44, label %42, !dbg !11140

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11141
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !11143
  br label %44, !dbg !11144

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11145
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !11146
  ret i32 %24, !dbg !11147
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11148 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11150, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11151, metadata !DIExpression()), !dbg !11159
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11160
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11160
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11160
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11152, metadata !DIExpression()), !dbg !11159
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11161
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11161
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11161
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11153, metadata !DIExpression()), !dbg !11159
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11162
  %10 = load i8, i8* %9, align 4, !dbg !11162
  %11 = zext i8 %10 to i32, !dbg !11163
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !11164
  call void @llvm.dbg.value(metadata i32 %12, metadata !11155, metadata !DIExpression()), !dbg !11159
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11165
  %14 = load i8, i8* %13, align 1, !dbg !11165
  %15 = zext i8 %14 to i32, !dbg !11166
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !11167
  call void @llvm.dbg.value(metadata i32 %16, metadata !11156, metadata !DIExpression()), !dbg !11159
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11168
  %18 = load i8, i8* %17, align 2, !dbg !11168
  %19 = zext i8 %18 to i32, !dbg !11169
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !11170
  call void @llvm.dbg.value(metadata i32 %20, metadata !11157, metadata !DIExpression()), !dbg !11159
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11171
  %22 = load i8, i8* %21, align 1, !dbg !11171
  %23 = zext i8 %22 to i32, !dbg !11172
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !11173
  call void @llvm.dbg.value(metadata i32 %24, metadata !11158, metadata !DIExpression()), !dbg !11159
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11174

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11176
  br i1 %26, label %69, label %27, !dbg !11178

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11179

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11180
  br i1 %29, label %65, label %30, !dbg !11180

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11182
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11159
  br i1 %31, label %38, label %34, !dbg !11184

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11185
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !11185

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11188
  br i1 %37, label %38, label %69, !dbg !11189

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11190
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !11191
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !11192
  %41 = icmp eq i32 %12, %40, !dbg !11194
  br i1 %41, label %43, label %42, !dbg !11195

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !11196
  br label %43, !dbg !11198

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !11199
  %45 = icmp eq i32 %16, %44, !dbg !11201
  br i1 %45, label %47, label %46, !dbg !11202

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !11203
  br label %47, !dbg !11205

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !11206
  %49 = icmp eq i32 %20, %48, !dbg !11208
  br i1 %49, label %51, label %50, !dbg !11209

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !11210
  br label %51, !dbg !11212

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !11213
  %53 = icmp eq i32 %24, %52, !dbg !11215
  br i1 %53, label %55, label %54, !dbg !11216

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !11217
  br label %55, !dbg !11219

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11220
  %57 = load i32, i32* %56, align 4, !dbg !11220
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11222
  %59 = load i32, i32* %58, align 4, !dbg !11222
  %60 = icmp eq i32 %57, %59, !dbg !11223
  br i1 %60, label %63, label %61, !dbg !11224

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !11225
  %62 = load i32, i32* %56, align 4, !dbg !11227
  store i32 %62, i32* %58, align 4, !dbg !11228
  br label %63, !dbg !11229

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11230
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !11231
  br label %69, !dbg !11232

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11180
  %67 = and i8 %66, 1, !dbg !11180
  %68 = icmp eq i8 %67, 0, !dbg !11180
  br i1 %68, label %30, label %69, !dbg !11180

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11159
  ret i32 %70, !dbg !11233
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !11234 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11236, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11237, metadata !DIExpression()), !dbg !11239
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11240
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11240
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11240
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11238, metadata !DIExpression()), !dbg !11239
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11241
  %7 = load i32, i32* %6, align 4, !dbg !11241
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11242
  store i32 %7, i32* %8, align 4, !dbg !11243
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11244, !range !11245
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !11246
  %11 = trunc i32 %10 to i8, !dbg !11246
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11247
  store i8 %11, i8* %12, align 4, !dbg !11248
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !11249, !range !11250
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !11251
  %15 = trunc i32 %14 to i8, !dbg !11251
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11252
  store i8 %15, i8* %16, align 1, !dbg !11253
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !11254
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11255, !range !11245
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !11256
  %20 = trunc i32 %19 to i8, !dbg !11256
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11257
  store i8 %20, i8* %21, align 2, !dbg !11258
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !11259, !range !11260
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !11261
  %24 = trunc i32 %23 to i8, !dbg !11261
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11262
  store i8 %24, i8* %25, align 1, !dbg !11263
  ret i32 0, !dbg !11264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11269, metadata !DIExpression()), !dbg !11271
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11272
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11272
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11272
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11270, metadata !DIExpression()), !dbg !11271
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11273
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11273
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !11274
  ret i32 %7, !dbg !11275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11280, metadata !DIExpression()), !dbg !11281
  %2 = icmp eq i32 %0, 1024, !dbg !11282
  %3 = select i1 %2, i32 2, i32 0, !dbg !11282
  %4 = icmp eq i32 %0, 1536, !dbg !11282
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11282
  ret i32 %5, !dbg !11283
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11284 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11286, metadata !DIExpression()), !dbg !11288
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11289
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11289
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11289
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11287, metadata !DIExpression()), !dbg !11288
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11290
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11290
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !11291
  ret i32 %7, !dbg !11292
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11297, metadata !DIExpression()), !dbg !11298
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11299
  %3 = icmp ult i32 %2, 4, !dbg !11299
  br i1 %3, label %4, label %7, !dbg !11299

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11299
  %6 = load i32, i32* %5, align 4, !dbg !11299
  br label %7, !dbg !11299

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11300
  ret i32 %8, !dbg !11302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11303 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11305, metadata !DIExpression()), !dbg !11307
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11308
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11308
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11308
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11306, metadata !DIExpression()), !dbg !11307
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11309
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11309
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !11310
  ret i32 %7, !dbg !11311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11316, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.value(metadata i32 %1, metadata !11317, metadata !DIExpression()), !dbg !11318
  %3 = icmp eq i32 %0, 4096, !dbg !11319
  %4 = icmp eq i32 %1, 0, !dbg !11319
  %5 = select i1 %4, i32 4, i32 3, !dbg !11319
  %6 = select i1 %4, i32 3, i32 2, !dbg !11319
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11319
  ret i32 %7, !dbg !11320
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11323, metadata !DIExpression()), !dbg !11325
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11326
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11326
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11326
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11324, metadata !DIExpression()), !dbg !11325
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11327
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11327
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !11328
  ret i32 %7, !dbg !11329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11334, metadata !DIExpression()), !dbg !11335
  %2 = icmp eq i32 %0, 768, !dbg !11336
  %3 = zext i1 %2 to i32, !dbg !11335
  ret i32 %3, !dbg !11338
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11339 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11344, metadata !DIExpression()), !dbg !11345
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11346
  %3 = load volatile i32, i32* %2, align 4, !dbg !11346
  %4 = and i32 %3, 768, !dbg !11346
  ret i32 %4, !dbg !11347
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11348 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11350, metadata !DIExpression()), !dbg !11351
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11352
  %3 = load volatile i32, i32* %2, align 4, !dbg !11352
  %4 = and i32 %3, 4096, !dbg !11352
  ret i32 %4, !dbg !11353
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11354 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11356, metadata !DIExpression()), !dbg !11357
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11358
  %3 = load volatile i32, i32* %2, align 4, !dbg !11358
  %4 = and i32 %3, 12288, !dbg !11358
  ret i32 %4, !dbg !11359
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11360 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11362, metadata !DIExpression()), !dbg !11363
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11364
  %3 = load volatile i32, i32* %2, align 4, !dbg !11364
  %4 = and i32 %3, 1536, !dbg !11364
  ret i32 %4, !dbg !11365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11370, metadata !DIExpression()), !dbg !11371
  %2 = icmp eq i32 %0, 2, !dbg !11372
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11372
  %4 = icmp eq i32 %0, 1, !dbg !11372
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11372
  ret i32 %5, !dbg !11373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11378, metadata !DIExpression()), !dbg !11379
  %2 = icmp ult i32 %0, 3, !dbg !11380
  br i1 %2, label %3, label %6, !dbg !11380

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11380
  %5 = load i32, i32* %4, align 4, !dbg !11380
  br label %6, !dbg !11380

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11381
  ret i32 %7, !dbg !11383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11388, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i32 %1, metadata !11389, metadata !DIExpression()), !dbg !11390
  %3 = icmp eq i32 %0, 4, !dbg !11391
  %4 = icmp eq i32 %1, 0, !dbg !11391
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11391
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11391
  ret i32 %6, !dbg !11392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11397, metadata !DIExpression()), !dbg !11398
  %2 = icmp eq i32 %0, 1, !dbg !11399
  %3 = select i1 %2, i32 768, i32 0, !dbg !11398
  ret i32 %3, !dbg !11401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11402 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11406, metadata !DIExpression()), !dbg !11407
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11408
  %3 = load volatile i32, i32* %2, align 4, !dbg !11408
  %4 = and i32 %3, -8193, !dbg !11408
  store volatile i32 %4, i32* %2, align 4, !dbg !11408
  ret void, !dbg !11409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11410 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11414, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.value(metadata i32 %1, metadata !11415, metadata !DIExpression()), !dbg !11417
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11418
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11418
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11418
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11416, metadata !DIExpression()), !dbg !11417
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11419
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11419
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11420
  ret void, !dbg !11421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11424, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 %1, metadata !11425, metadata !DIExpression()), !dbg !11427
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11428
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11428
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11428
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11426, metadata !DIExpression()), !dbg !11427
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11429
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11429
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11430
  ret void, !dbg !11431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11432 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11434, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata i32 %1, metadata !11435, metadata !DIExpression()), !dbg !11437
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11438
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11438
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11438
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11436, metadata !DIExpression()), !dbg !11437
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11439
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11439
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11440
  ret void, !dbg !11441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11444, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.value(metadata i32 %1, metadata !11445, metadata !DIExpression()), !dbg !11447
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11448
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11448
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11448
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11446, metadata !DIExpression()), !dbg !11447
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11449
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11449
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11450
  ret void, !dbg !11451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11452 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11454, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i32 %1, metadata !11455, metadata !DIExpression()), !dbg !11459
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11460
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11460
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11460
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11456, metadata !DIExpression()), !dbg !11459
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11461
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11461
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11461
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11457, metadata !DIExpression()), !dbg !11459
  %10 = bitcast i32* %3 to i8*, !dbg !11462
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11462
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11463
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11463
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11467
  %14 = bitcast %struct.vnd_sensor_config** %13 to i8**, !dbg !11467
  %15 = load i8*, i8** %14, align 4, !dbg !11467
  call void @llvm.dbg.value(metadata i32* %3, metadata !11458, metadata !DIExpression(DW_OP_deref)), !dbg !11459
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11468
  %17 = icmp slt i32 %16, 0, !dbg !11469
  br i1 %17, label %18, label %21, !dbg !11470

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11471
  %20 = zext i8 %19 to i32, !dbg !11471
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.138, i32 0, i32 0), i32 noundef %20) #25, !dbg !11471
  br label %26, !dbg !11477

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11478
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11478
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11479
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11480
  %25 = load i32, i32* %3, align 4, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %25, metadata !11458, metadata !DIExpression()), !dbg !11459
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11482
  br label %26, !dbg !11483

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11483
  ret void, !dbg !11483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11484 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11486, metadata !DIExpression()), !dbg !11487
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11488
  %3 = load volatile i32, i32* %2, align 4, !dbg !11488
  %4 = or i32 %3, 8192, !dbg !11488
  store volatile i32 %4, i32* %2, align 4, !dbg !11488
  ret void, !dbg !11489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11492, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i8* %1, metadata !11493, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32* %2, metadata !11494, metadata !DIExpression()), !dbg !11496
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11497
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11497
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11497
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11495, metadata !DIExpression()), !dbg !11496
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11498
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11498
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11500
  br i1 %9, label %12, label %10, !dbg !11501

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11502
  br label %12, !dbg !11503

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11496
  ret i32 %13, !dbg !11504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef %0) unnamed_addr #4 !dbg !11505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11507, metadata !DIExpression()), !dbg !11508
  %2 = icmp eq i32 %0, 2, !dbg !11509
  %3 = select i1 %2, i8 87, i8 63, !dbg !11509
  %4 = icmp eq i32 %0, 1, !dbg !11509
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11509
  ret i8 %5, !dbg !11510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11511 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11515, metadata !DIExpression()), !dbg !11517
  call void @llvm.dbg.value(metadata i32 0, metadata !11516, metadata !DIExpression()), !dbg !11517
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11518
  %3 = load volatile i32, i32* %2, align 4, !dbg !11518
  %4 = and i32 %3, -32769, !dbg !11518
  store volatile i32 %4, i32* %2, align 4, !dbg !11518
  ret void, !dbg !11519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11520 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11524, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32 %1, metadata !11525, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32 0, metadata !11526, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32 %2, metadata !11527, metadata !DIExpression()), !dbg !11528
  %4 = mul i32 %1, 25, !dbg !11529
  %5 = shl i32 %2, 2, !dbg !11529
  %6 = udiv i32 %4, %5, !dbg !11529
  %7 = udiv i32 %6, 100, !dbg !11529
  %8 = shl nuw nsw i32 %7, 4, !dbg !11529
  %9 = mul i32 %7, -100, !dbg !11529
  %10 = add i32 %9, %6, !dbg !11529
  %11 = shl i32 %10, 4, !dbg !11529
  %12 = add i32 %11, 50, !dbg !11529
  %13 = udiv i32 %12, 100, !dbg !11529
  %14 = and i32 %13, 240, !dbg !11529
  %15 = add nuw nsw i32 %14, %8, !dbg !11529
  %16 = and i32 %13, 15, !dbg !11529
  %17 = and i32 %15, 65520, !dbg !11532
  %18 = or i32 %17, %16, !dbg !11532
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11533
  store volatile i32 %18, i32* %19, align 4, !dbg !11534
  ret void, !dbg !11535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11536 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11538, metadata !DIExpression()), !dbg !11540
  call void @llvm.dbg.value(metadata i32 %1, metadata !11539, metadata !DIExpression()), !dbg !11540
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11541
  %4 = load volatile i32, i32* %3, align 4, !dbg !11541
  %5 = and i32 %4, -769, !dbg !11541
  %6 = or i32 %5, %1, !dbg !11541
  store volatile i32 %6, i32* %3, align 4, !dbg !11541
  ret void, !dbg !11542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11543 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11545, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i32 %1, metadata !11546, metadata !DIExpression()), !dbg !11547
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11548
  %4 = load volatile i32, i32* %3, align 4, !dbg !11548
  %5 = and i32 %4, -4097, !dbg !11548
  %6 = or i32 %5, %1, !dbg !11548
  store volatile i32 %6, i32* %3, align 4, !dbg !11548
  ret void, !dbg !11549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11552, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i32 %1, metadata !11553, metadata !DIExpression()), !dbg !11554
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11555
  %4 = load volatile i32, i32* %3, align 4, !dbg !11555
  %5 = and i32 %4, -12289, !dbg !11555
  %6 = or i32 %5, %1, !dbg !11555
  store volatile i32 %6, i32* %3, align 4, !dbg !11555
  ret void, !dbg !11556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11557 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11559, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.value(metadata i32 %1, metadata !11560, metadata !DIExpression()), !dbg !11561
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11562
  %4 = load volatile i32, i32* %3, align 4, !dbg !11562
  %5 = and i32 %4, -1537, !dbg !11562
  %6 = or i32 %5, %1, !dbg !11562
  store volatile i32 %6, i32* %3, align 4, !dbg !11562
  ret void, !dbg !11563
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11564 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11566, metadata !DIExpression()), !dbg !11567
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11568
  %3 = load volatile i32, i32* %2, align 4, !dbg !11568
  %4 = lshr i32 %3, 3, !dbg !11569
  %5 = and i32 %4, 1, !dbg !11569
  ret i32 %5, !dbg !11570
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11571 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11573, metadata !DIExpression()), !dbg !11574
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11575
  %3 = load volatile i32, i32* %2, align 4, !dbg !11575
  %4 = and i32 %3, 1, !dbg !11575
  ret i32 %4, !dbg !11576
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11577 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11579, metadata !DIExpression()), !dbg !11580
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11581
  %3 = load volatile i32, i32* %2, align 4, !dbg !11581
  %4 = lshr i32 %3, 1, !dbg !11582
  %5 = and i32 %4, 1, !dbg !11582
  ret i32 %5, !dbg !11583
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11584 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11586, metadata !DIExpression()), !dbg !11587
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11588
  %3 = load volatile i32, i32* %2, align 4, !dbg !11588
  %4 = lshr i32 %3, 8, !dbg !11589
  %5 = and i32 %4, 1, !dbg !11589
  ret i32 %5, !dbg !11590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11591 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11593, metadata !DIExpression()), !dbg !11594
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11595
  store volatile i32 -257, i32* %2, align 4, !dbg !11595
  ret void, !dbg !11596
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11597 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11599, metadata !DIExpression()), !dbg !11601
  %3 = bitcast i32* %2 to i8*, !dbg !11602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11602
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11600, metadata !DIExpression()), !dbg !11603
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11604
  %5 = load volatile i32, i32* %4, align 4, !dbg !11604
  store volatile i32 %5, i32* %2, align 4, !dbg !11605
  %6 = load volatile i32, i32* %2, align 4, !dbg !11606
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11607
  %8 = load volatile i32, i32* %7, align 4, !dbg !11607
  store volatile i32 %8, i32* %2, align 4, !dbg !11608
  %9 = load volatile i32, i32* %2, align 4, !dbg !11609
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11610
  ret void, !dbg !11610
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11611 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11613, metadata !DIExpression()), !dbg !11615
  %3 = bitcast i32* %2 to i8*, !dbg !11616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11616
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11614, metadata !DIExpression()), !dbg !11617
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11618
  %5 = load volatile i32, i32* %4, align 4, !dbg !11618
  store volatile i32 %5, i32* %2, align 4, !dbg !11619
  %6 = load volatile i32, i32* %2, align 4, !dbg !11620
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11621
  %8 = load volatile i32, i32* %7, align 4, !dbg !11621
  store volatile i32 %8, i32* %2, align 4, !dbg !11622
  %9 = load volatile i32, i32* %2, align 4, !dbg !11623
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11624
  ret void, !dbg !11624
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11625 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11627, metadata !DIExpression()), !dbg !11629
  %3 = bitcast i32* %2 to i8*, !dbg !11630
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11630
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11628, metadata !DIExpression()), !dbg !11631
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11632
  %5 = load volatile i32, i32* %4, align 4, !dbg !11632
  store volatile i32 %5, i32* %2, align 4, !dbg !11633
  %6 = load volatile i32, i32* %2, align 4, !dbg !11634
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11635
  %8 = load volatile i32, i32* %7, align 4, !dbg !11635
  store volatile i32 %8, i32* %2, align 4, !dbg !11636
  %9 = load volatile i32, i32* %2, align 4, !dbg !11637
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11638
  ret void, !dbg !11638
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11639 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11641, metadata !DIExpression()), !dbg !11643
  %3 = bitcast i32* %2 to i8*, !dbg !11644
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11644
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11642, metadata !DIExpression()), !dbg !11645
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11646
  %5 = load volatile i32, i32* %4, align 4, !dbg !11646
  store volatile i32 %5, i32* %2, align 4, !dbg !11647
  %6 = load volatile i32, i32* %2, align 4, !dbg !11648
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11649
  %8 = load volatile i32, i32* %7, align 4, !dbg !11649
  store volatile i32 %8, i32* %2, align 4, !dbg !11650
  %9 = load volatile i32, i32* %2, align 4, !dbg !11651
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11652
  ret void, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11653 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11655, metadata !DIExpression()), !dbg !11656
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11657
  %3 = load volatile i32, i32* %2, align 4, !dbg !11657
  %4 = lshr i32 %3, 7, !dbg !11658
  %5 = and i32 %4, 1, !dbg !11658
  ret i32 %5, !dbg !11659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !11660 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11664, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.value(metadata i8 %1, metadata !11665, metadata !DIExpression()), !dbg !11666
  %3 = zext i8 %1 to i32, !dbg !11667
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11668
  store volatile i32 %3, i32* %4, align 4, !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11671 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11673, metadata !DIExpression()), !dbg !11674
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11675
  %3 = load volatile i32, i32* %2, align 4, !dbg !11675
  %4 = lshr i32 %3, 5, !dbg !11676
  %5 = and i32 %4, 1, !dbg !11676
  ret i32 %5, !dbg !11677
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11678 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11682, metadata !DIExpression()), !dbg !11683
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11684
  %3 = load volatile i32, i32* %2, align 4, !dbg !11684
  %4 = trunc i32 %3 to i8, !dbg !11685
  ret i8 %4, !dbg !11686
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11689, metadata !DIExpression()), !dbg !11695
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11696
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11696
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11696
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11690, metadata !DIExpression()), !dbg !11695
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11697
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11697
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11697
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11691, metadata !DIExpression()), !dbg !11695
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11698
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11699
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11699
  %10 = tail call fastcc zeroext i1 @device_is_ready.143(%struct.device* noundef %9) #24, !dbg !11701
  br i1 %10, label %14, label %11, !dbg !11702

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11703
  %13 = zext i8 %12 to i32, !dbg !11703
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.144, i32 0, i32 0), i32 noundef %13) #25, !dbg !11703
  br label %62, !dbg !11709

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11710
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11711
  %17 = bitcast %struct.vnd_sensor_config** %16 to i8**, !dbg !11711
  %18 = load i8*, i8** %17, align 4, !dbg !11711
  %19 = tail call fastcc i32 @clock_control_on.145(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11712
  call void @llvm.dbg.value(metadata i32 %19, metadata !11694, metadata !DIExpression()), !dbg !11695
  %20 = icmp eq i32 %19, 0, !dbg !11713
  br i1 %20, label %24, label %21, !dbg !11715

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11716
  %23 = zext i8 %22 to i32, !dbg !11716
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.146, i32 0, i32 0), i32 noundef %23) #25, !dbg !11716
  br label %62, !dbg !11722

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11723
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11723
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11724
  call void @llvm.dbg.value(metadata i32 %27, metadata !11694, metadata !DIExpression()), !dbg !11695
  %28 = icmp slt i32 %27, 0, !dbg !11725
  br i1 %28, label %62, label %29, !dbg !11727

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11728
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11728
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11729
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11730
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11731
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11732
  %34 = load i32, i32* %33, align 4, !dbg !11732
  %35 = icmp ult i32 %34, 3, !dbg !11734
  br i1 %35, label %39, label %36, !dbg !11734

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 2) #24, !dbg !11735
  %38 = zext i8 %37 to i32, !dbg !11735
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6.147, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11735
  call void @llvm.dbg.value(metadata i32 0, metadata !11692, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i32 0, metadata !11693, metadata !DIExpression()), !dbg !11695
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11734
  %41 = load i32, i32* %40, align 4, !dbg !11734
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.7, i32 0, i32 %34, !dbg !11734
  %43 = load i32, i32* %42, align 4, !dbg !11734
  br label %44, !dbg !11734

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11744
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11744
  call void @llvm.dbg.value(metadata i32 %46, metadata !11693, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i32 %45, metadata !11692, metadata !DIExpression()), !dbg !11695
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11745
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11746
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11747
  %49 = load i8, i8* %48, align 4, !dbg !11747, !range !7352
  %50 = icmp eq i8 %49, 0, !dbg !11747
  br i1 %50, label %52, label %51, !dbg !11749

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11750
  br label %52, !dbg !11752

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11753
  %54 = load i32, i32* %53, align 4, !dbg !11753
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11754
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11755
  %56 = load i8, i8* %55, align 4, !dbg !11755, !range !7352
  %57 = icmp eq i8 %56, 0, !dbg !11755
  br i1 %57, label %60, label %58, !dbg !11757

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11758
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11760
  br label %60, !dbg !11761

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11762
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11763
  br label %62, !dbg !11764

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11695
  ret i32 %63, !dbg !11765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !11766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11770, metadata !DIExpression()), !dbg !11774
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11775
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11775
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11775
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11771, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11772, metadata !DIExpression()), !dbg !11774
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11776
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11777
  ret void, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.143(%struct.device* noundef %0) unnamed_addr #1 !dbg !11779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11783, metadata !DIExpression()), !dbg !11784
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11785, !srcloc !11787
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.148(%struct.device* noundef %0) #24, !dbg !11788
  ret i1 %2, !dbg !11789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.145(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11790 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11792, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata i8* %1, metadata !11793, metadata !DIExpression()), !dbg !11795
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11796
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11796
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11796
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11794, metadata !DIExpression()), !dbg !11795
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11797
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11797
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11798
  ret i32 %8, !dbg !11799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11800 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11804, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i8 0, metadata !11805, metadata !DIExpression()), !dbg !11808
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11809
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11809
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11807, metadata !DIExpression(DW_OP_deref)), !dbg !11808
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11810
  call void @llvm.dbg.value(metadata i32 %4, metadata !11806, metadata !DIExpression()), !dbg !11808
  %5 = icmp slt i32 %4, 0, !dbg !11811
  br i1 %5, label %9, label %6, !dbg !11813

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11814
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11807, metadata !DIExpression()), !dbg !11808
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11815
  br label %9, !dbg !11816

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11808
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11817
  ret i32 %10, !dbg !11817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11818 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11820, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.value(metadata i32 12, metadata !11821, metadata !DIExpression()), !dbg !11822
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11823
  %3 = load volatile i32, i32* %2, align 4, !dbg !11823
  %4 = or i32 %3, 12, !dbg !11823
  store volatile i32 %4, i32* %2, align 4, !dbg !11823
  ret void, !dbg !11824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11827, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 %1, metadata !11828, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 %2, metadata !11829, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 0, metadata !11830, metadata !DIExpression()), !dbg !11831
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11832
  %5 = load volatile i32, i32* %4, align 4, !dbg !11832
  %6 = and i32 %5, -5633, !dbg !11832
  %7 = or i32 %2, %1, !dbg !11832
  %8 = or i32 %7, %6, !dbg !11832
  store volatile i32 %8, i32* %4, align 4, !dbg !11832
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11833
  %10 = load volatile i32, i32* %9, align 4, !dbg !11833
  %11 = and i32 %10, -12289, !dbg !11833
  store volatile i32 %11, i32* %9, align 4, !dbg !11833
  ret void, !dbg !11834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11835 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11837, metadata !DIExpression()), !dbg !11838
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11839
  %3 = load volatile i32, i32* %2, align 4, !dbg !11839
  %4 = or i32 %3, 8, !dbg !11839
  store volatile i32 %4, i32* %2, align 4, !dbg !11839
  ret void, !dbg !11840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11841 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11845, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11846, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.value(metadata i32 0, metadata !11847, metadata !DIExpression()), !dbg !11848
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11849
  %3 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %2, align 4, !dbg !11849
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11850
  %5 = load i8, i8* %4, align 4, !dbg !11850
  %6 = tail call i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11851
  ret i32 %6, !dbg !11852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.148(%struct.device* noundef %0) unnamed_addr #1 !dbg !11853 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11855, metadata !DIExpression()), !dbg !11856
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11857
  ret i1 %2, !dbg !11858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11861, metadata !DIExpression()), !dbg !11862
  tail call fastcc void @__NVIC_SetPriority.150() #24, !dbg !11863
  store i32 3199, i32* @last_load, align 4, !dbg !11864
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11865
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11866
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11867
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11868
  %3 = or i32 %2, 7, !dbg !11868
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11868
  ret i32 0, !dbg !11869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.150() unnamed_addr #16 !dbg !11870 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11872, metadata !DIExpression()), !dbg !11874
  call void @llvm.dbg.value(metadata i32 1, metadata !11873, metadata !DIExpression()), !dbg !11874
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11875
  ret void, !dbg !11878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11881, metadata !DIExpression()), !dbg !11883
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11884
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11885
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11886
  %5 = add i32 %4, %3, !dbg !11886
  store i32 %5, i32* @cycle_count, align 4, !dbg !11886
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11887
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11888
  %7 = sub i32 %5, %6, !dbg !11891
  %8 = udiv i32 %7, 3200, !dbg !11892
  call void @llvm.dbg.value(metadata i32 %8, metadata !11882, metadata !DIExpression()), !dbg !11883
  %9 = mul nuw i32 %8, 3200, !dbg !11893
  %10 = add i32 %9, %6, !dbg !11894
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11894
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11895
  tail call void @z_arm_int_exit() #25, !dbg !11896
  ret void, !dbg !11897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11898 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11903
  call void @llvm.dbg.value(metadata i32 %1, metadata !11900, metadata !DIExpression()), !dbg !11904
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11905
  call void @llvm.dbg.value(metadata i32 %2, metadata !11901, metadata !DIExpression()), !dbg !11904
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11906
  call void @llvm.dbg.value(metadata i32 %3, metadata !11902, metadata !DIExpression()), !dbg !11904
  %4 = and i32 %2, 65536, !dbg !11907
  %5 = icmp ne i32 %4, 0, !dbg !11907
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11909
  %8 = load i32, i32* @last_load, align 4, !dbg !11904
  br i1 %7, label %9, label %13, !dbg !11909

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11910
  %11 = add i32 %10, %8, !dbg !11910
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11910
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11912
  br label %13, !dbg !11913

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11914
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11915
  %16 = add i32 %14, %15, !dbg !11916
  ret i32 %16, !dbg !11917
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11922, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i1 %1, metadata !11923, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11935
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11936
  br i1 %4, label %5, label %8, !dbg !11936

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11938
  %7 = and i32 %6, -2, !dbg !11938
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11938
  store i32 -16777216, i32* @last_load, align 4, !dbg !11940
  br label %54, !dbg !11941

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11942
  call void @llvm.dbg.value(metadata i32 %9, metadata !11927, metadata !DIExpression()), !dbg !11935
  br i1 %3, label %18, label %10, !dbg !11943

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11943
  call void @llvm.dbg.value(metadata i32 undef, metadata !11922, metadata !DIExpression()), !dbg !11935
  %12 = icmp slt i32 %11, 1, !dbg !11944
  br i1 %12, label %18, label %13, !dbg !11944

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !11944
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !11944
  %16 = mul nuw nsw i32 %15, 3200, !dbg !11944
  %17 = add nuw nsw i32 %16, 3199, !dbg !11944
  br label %18, !dbg !11944

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11922, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11945, metadata !DIExpression()) #23, !dbg !11952
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11954, !srcloc !11960
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %21, metadata !11957, metadata !DIExpression()) #23, !dbg !11961
  call void @llvm.dbg.value(metadata i32 undef, metadata !11958, metadata !DIExpression()) #23, !dbg !11961
  call void @llvm.dbg.value(metadata i32 %21, metadata !11951, metadata !DIExpression()) #23, !dbg !11952
  call void @llvm.dbg.value(metadata i32 %21, metadata !11928, metadata !DIExpression()), !dbg !11935
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %22, metadata !11933, metadata !DIExpression()), !dbg !11935
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %23, metadata !11925, metadata !DIExpression()), !dbg !11935
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11964
  %25 = add i32 %24, %22, !dbg !11964
  store i32 %25, i32* @cycle_count, align 4, !dbg !11964
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11965
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11966
  %27 = sub i32 %25, %26, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %27, metadata !11934, metadata !DIExpression()), !dbg !11935
  %28 = icmp slt i32 %27, 0, !dbg !11968
  br i1 %28, label %38, label %29, !dbg !11970

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11924, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i32 undef, metadata !11924, metadata !DIExpression()), !dbg !11935
  %30 = add nuw i32 %19, %27, !dbg !11971
  %31 = urem i32 %30, 3200, !dbg !11973
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11924, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11935
  %32 = sub nuw nsw i32 %19, %31, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %32, metadata !11924, metadata !DIExpression()), !dbg !11935
  %33 = icmp ugt i32 %32, 1024, !dbg !11975
  br i1 %33, label %34, label %36, !dbg !11975

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11924, metadata !DIExpression()), !dbg !11935
  %35 = icmp ugt i32 %32, 16771200, !dbg !11976
  br i1 %35, label %38, label %36, !dbg !11978

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11979
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11980
  call void @llvm.dbg.value(metadata i32 %40, metadata !11926, metadata !DIExpression()), !dbg !11935
  %41 = add nsw i32 %39, -1, !dbg !11981
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11982
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11983
  %42 = icmp ult i32 %23, %40, !dbg !11984
  br i1 %42, label %43, label %48, !dbg !11986

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11987
  %45 = add i32 %23, %9, !dbg !11989
  %46 = sub i32 %45, %40, !dbg !11990
  %47 = add i32 %46, %44, !dbg !11987
  br label %52, !dbg !11991

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11992
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11994
  %51 = add i32 %49, %50, !dbg !11994
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11995
  store i32 %53, i32* @cycle_count, align 4, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %21, metadata !11996, metadata !DIExpression()) #23, !dbg !12002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12001, metadata !DIExpression()) #23, !dbg !12002
  call void @llvm.dbg.value(metadata i32 %21, metadata !12004, metadata !DIExpression()) #23, !dbg !12007
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12009, !srcloc !12010
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12012 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11945, metadata !DIExpression()) #23, !dbg !12016
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12018, !srcloc !11960
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12018
  call void @llvm.dbg.value(metadata i32 %2, metadata !11957, metadata !DIExpression()) #23, !dbg !12020
  call void @llvm.dbg.value(metadata i32 undef, metadata !11958, metadata !DIExpression()) #23, !dbg !12020
  call void @llvm.dbg.value(metadata i32 %2, metadata !11951, metadata !DIExpression()) #23, !dbg !12016
  call void @llvm.dbg.value(metadata i32 %2, metadata !12014, metadata !DIExpression()), !dbg !12021
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12022
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12023
  %5 = add i32 %4, %3, !dbg !12024
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12025
  %7 = sub i32 %5, %6, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %7, metadata !12015, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata i32 %2, metadata !11996, metadata !DIExpression()) #23, !dbg !12027
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12001, metadata !DIExpression()) #23, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %2, metadata !12004, metadata !DIExpression()) #23, !dbg !12029
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12031, !srcloc !12010
  %8 = udiv i32 %7, 3200, !dbg !12032
  ret i32 %8, !dbg !12033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12034 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11945, metadata !DIExpression()) #23, !dbg !12038
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12040, !srcloc !11960
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %2, metadata !11957, metadata !DIExpression()) #23, !dbg !12042
  call void @llvm.dbg.value(metadata i32 undef, metadata !11958, metadata !DIExpression()) #23, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %2, metadata !11951, metadata !DIExpression()) #23, !dbg !12038
  call void @llvm.dbg.value(metadata i32 %2, metadata !12036, metadata !DIExpression()), !dbg !12043
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12044
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12045
  %5 = add i32 %4, %3, !dbg !12046
  call void @llvm.dbg.value(metadata i32 %5, metadata !12037, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 %2, metadata !11996, metadata !DIExpression()) #23, !dbg !12047
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12001, metadata !DIExpression()) #23, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %2, metadata !12004, metadata !DIExpression()) #23, !dbg !12049
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12051, !srcloc !12010
  ret i32 %5, !dbg !12052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !12053 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12054
  %2 = icmp eq i32 %1, -16777216, !dbg !12056
  br i1 %2, label %3, label %6, !dbg !12057

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12058
  %5 = or i32 %4, 1, !dbg !12058
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12058
  br label %6, !dbg !12060

6:                                                ; preds = %3, %0
  ret void, !dbg !12061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !12062 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12063
  %2 = and i32 %1, -2, !dbg !12063
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12063
  ret void, !dbg !12064
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12065 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12091, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.value(metadata i8 %1, metadata !12092, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12093, metadata !DIExpression()), !dbg !12094
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12095
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12095
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12094
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12096
  %8 = load i8, i8* %6, align 4, !dbg !12097
  %9 = zext i8 %8 to i32, !dbg !12098
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12098
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12099
  br i1 %11, label %18, label %24, !dbg !12100

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12094
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12096
  %14 = load i8, i8* %6, align 4, !dbg !12097
  %15 = zext i8 %14 to i32, !dbg !12098
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12098
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12099
  br i1 %17, label %18, label %24, !dbg !12100, !llvm.loop !12101

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12103
  %21 = load i8, i8* %20, align 1, !dbg !12103
  %22 = icmp eq i8 %21, %1, !dbg !12106
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12107
  br i1 %22, label %24, label %12, !dbg !12108

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12094
  ret i32 %25, !dbg !12109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12110 {
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %0, metadata !12121, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i8 %1, metadata !12122, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 %2, metadata !12123, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 0, metadata !12126, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 0, metadata !12127, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i8 0, metadata !12128, metadata !DIExpression()), !dbg !12138
  %4 = icmp eq i8 %1, 0, !dbg !12139
  br i1 %4, label %35, label %5, !dbg !12140

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12139
  br label %9, !dbg !12140

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12128, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 %29, metadata !12126, metadata !DIExpression()), !dbg !12137
  %8 = icmp eq i32 %34, %6, !dbg !12139
  br i1 %8, label %35, label %9, !dbg !12140, !llvm.loop !12141

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12128, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 %11, metadata !12126, metadata !DIExpression()), !dbg !12137
  %12 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 0, !dbg !12143
  %13 = load i32, i32* %12, align 4, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %13, metadata !12125, metadata !DIExpression()), !dbg !12137
  %14 = and i32 %13, 31, !dbg !12144
  %15 = icmp ult i32 %14, 16, !dbg !12145
  br i1 %15, label %16, label %20, !dbg !12146

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12147
  %18 = load i32, i32* %17, align 4, !dbg !12147
  %19 = or i32 %18, 32, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %19, metadata !12126, metadata !DIExpression()), !dbg !12137
  br label %28, !dbg !12150

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12151

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12152
  %23 = load i32, i32* %22, align 4, !dbg !12152
  call void @llvm.dbg.value(metadata i32 %23, metadata !12130, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12153
  %24 = lshr i32 %23, 7, !dbg !12154
  %25 = and i32 %24, 16, !dbg !12154
  %26 = or i32 %25, %23, !dbg !12154
  call void @llvm.dbg.value(metadata i32 %26, metadata !12126, metadata !DIExpression()), !dbg !12137
  br label %28, !dbg !12155

27:                                               ; preds = %20
  br label %28, !dbg !12156

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12137
  call void @llvm.dbg.value(metadata i32 %29, metadata !12126, metadata !DIExpression()), !dbg !12137
  %30 = lshr i32 %13, 5, !dbg !12156
  %31 = and i32 %30, 255, !dbg !12156
  call void @llvm.dbg.value(metadata i32 %31, metadata !12124, metadata !DIExpression()), !dbg !12137
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !12157
  call void @llvm.dbg.value(metadata i32 %32, metadata !12127, metadata !DIExpression()), !dbg !12137
  %33 = icmp slt i32 %32, 0, !dbg !12158
  %34 = add nuw nsw i32 %10, 1, !dbg !12160
  call void @llvm.dbg.value(metadata i32 %34, metadata !12128, metadata !DIExpression()), !dbg !12138
  br i1 %33, label %35, label %7, !dbg !12161

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12167, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata i32 %1, metadata !12168, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata i32 %2, metadata !12169, metadata !DIExpression()), !dbg !12171
  %4 = icmp ugt i32 %0, 175, !dbg !12172
  br i1 %4, label %17, label %5, !dbg !12174

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12175
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12176
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12176
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12170, metadata !DIExpression()), !dbg !12171
  %9 = lshr i32 1888, %6, !dbg !12177
  %10 = and i32 %9, 1, !dbg !12177
  %11 = icmp eq i32 %10, 0, !dbg !12177
  br i1 %11, label %12, label %17, !dbg !12179

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.155(%struct.device* noundef %8) #24, !dbg !12180
  br i1 %13, label %14, label %17, !dbg !12181

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !12182
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !12183
  br label %17, !dbg !12184

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !12171
  ret i32 %18, !dbg !12185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155(%struct.device* noundef %0) unnamed_addr #1 !dbg !12186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12190, metadata !DIExpression()), !dbg !12191
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12192, !srcloc !12194
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156(%struct.device* noundef %0) #24, !dbg !12195
  ret i1 %2, !dbg !12196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156(%struct.device* noundef %0) unnamed_addr #1 !dbg !12197 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12199, metadata !DIExpression()), !dbg !12200
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12201
  ret i1 %2, !dbg !12202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12203 {
  ret void, !dbg !12204
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !12205 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12207, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata i32 0, metadata !12208, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata i32 0, metadata !12209, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata i32 0, metadata !12210, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata i32 0, metadata !12211, metadata !DIExpression()), !dbg !12212
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12213
  call void @llvm.dbg.value(metadata i32 %1, metadata !12207, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !12212
  %2 = lshr i32 %1, 2, !dbg !12214
  %3 = and i32 %2, 3, !dbg !12214
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !12214

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12215
  %6 = lshr i32 %5, 13, !dbg !12217
  %7 = and i32 %6, 7, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %7, metadata !12211, metadata !DIExpression()), !dbg !12212
  %8 = shl nuw nsw i32 65536, %7, !dbg !12218
  br label %31, !dbg !12219

9:                                                ; preds = %0
  br label %31, !dbg !12220

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %11, metadata !12208, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !12212
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %12, metadata !12209, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !12212
  %13 = lshr i32 %11, 18, !dbg !12223
  %14 = and i32 %13, 15, !dbg !12223
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !12224
  %16 = load i8, i8* %15, align 1, !dbg !12224
  %17 = zext i8 %16 to i32, !dbg !12224
  call void @llvm.dbg.value(metadata i32 %17, metadata !12208, metadata !DIExpression()), !dbg !12212
  %18 = lshr i32 %12, 22, !dbg !12225
  %19 = and i32 %18, 3, !dbg !12225
  %20 = add nuw nsw i32 %19, 1, !dbg !12226
  call void @llvm.dbg.value(metadata i32 %20, metadata !12209, metadata !DIExpression()), !dbg !12212
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12227
  %22 = and i32 %21, 65536, !dbg !12228
  call void @llvm.dbg.value(metadata i32 %22, metadata !12210, metadata !DIExpression()), !dbg !12212
  %23 = icmp eq i32 %22, 0, !dbg !12229
  br i1 %23, label %24, label %27, !dbg !12231

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !12232
  %26 = udiv i32 %25, %20, !dbg !12234
  br label %31, !dbg !12235

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !12236
  %29 = udiv i32 %28, %20, !dbg !12238
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !12239
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12240
  %34 = lshr i32 %33, 4, !dbg !12241
  %35 = and i32 %34, 15, !dbg !12241
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !12242
  %37 = load i8, i8* %36, align 1, !dbg !12242
  %38 = zext i8 %37 to i32, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %38, metadata !12207, metadata !DIExpression()), !dbg !12212
  %39 = lshr i32 %32, %38, !dbg !12243
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !12243
  ret void, !dbg !12244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12245 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12253
  %2 = and i32 %1, 16711935, !dbg !12253
  %3 = or i32 %2, 45056, !dbg !12253
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12253
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12254
  %5 = or i32 %4, 256, !dbg !12254
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12254
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !12255
  call void @llvm.dbg.value(metadata i32 %6, metadata !12251, metadata !DIExpression()), !dbg !12256
  br label %7, !dbg !12257

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12258
  %9 = and i32 %8, 512, !dbg !12258
  %10 = icmp eq i32 %9, 0, !dbg !12259
  br i1 %10, label %11, label %15, !dbg !12257

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !12260
  %13 = sub i32 %12, %6, !dbg !12263
  %14 = icmp ugt i32 %13, 2, !dbg !12264
  br i1 %14, label %47, label %7, !dbg !12265, !llvm.loop !12266

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12268
  %17 = and i32 %16, -4, !dbg !12268
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12268
  br label %18, !dbg !12269

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12270
  %20 = and i32 %19, 12, !dbg !12270
  %21 = icmp eq i32 %20, 0, !dbg !12271
  br i1 %21, label %26, label %22, !dbg !12269

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !12272
  %24 = sub i32 %23, %6, !dbg !12275
  %25 = icmp ugt i32 %24, 5000, !dbg !12276
  br i1 %25, label %47, label %18, !dbg !12277, !llvm.loop !12278

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !12280
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !12281
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %28, metadata !12252, metadata !DIExpression()), !dbg !12256
  %29 = icmp eq i32 %28, 0, !dbg !12283
  br i1 %29, label %30, label %47, !dbg !12285

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12286
  %32 = and i32 %31, -285278210, !dbg !12286
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12286
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12287
  %34 = and i32 %33, -262145, !dbg !12287
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12287
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %35, metadata !12251, metadata !DIExpression()), !dbg !12256
  br label %36, !dbg !12289

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12290
  %38 = and i32 %37, 33554432, !dbg !12290
  %39 = icmp eq i32 %38, 0, !dbg !12291
  br i1 %39, label %44, label %40, !dbg !12289

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !12292
  %42 = sub i32 %41, %35, !dbg !12295
  %43 = icmp ugt i32 %42, 2, !dbg !12296
  br i1 %43, label %47, label %36, !dbg !12297, !llvm.loop !12298

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12300
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12301
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12302
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12303
  %46 = or i32 %45, 16777216, !dbg !12303
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12303
  br label %47, !dbg !12304

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !12256
  ret i32 %48, !dbg !12305
}

; Function Attrs: optsize
declare !dbg !12306 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12308 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12311 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12337, metadata !DIExpression()), !dbg !12350
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12351
  br i1 %3, label %385, label %4, !dbg !12353

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12354
  %6 = and i32 %5, 12, !dbg !12354
  call void @llvm.dbg.value(metadata i32 %6, metadata !12340, metadata !DIExpression()), !dbg !12350
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12355
  %8 = and i32 %7, 65536, !dbg !12355
  call void @llvm.dbg.value(metadata i32 %8, metadata !12341, metadata !DIExpression()), !dbg !12350
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12356
  %10 = load i32, i32* %9, align 4, !dbg !12356
  %11 = and i32 %10, 1, !dbg !12358
  %12 = icmp eq i32 %11, 0, !dbg !12359
  br i1 %12, label %69, label %13, !dbg !12360

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !12361
  br i1 %14, label %19, label %15, !dbg !12364

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !12365
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !12366
  br i1 %18, label %19, label %27, !dbg !12366

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12367
  %21 = and i32 %20, 131072, !dbg !12367
  %22 = icmp eq i32 %21, 0, !dbg !12370
  br i1 %22, label %69, label %23, !dbg !12371

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12372
  %25 = load i32, i32* %24, align 4, !dbg !12372
  %26 = icmp eq i32 %25, 0, !dbg !12373
  br i1 %26, label %385, label %69, !dbg !12374

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12375
  %29 = load i32, i32* %28, align 4, !dbg !12375
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !12379

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12380
  %32 = or i32 %31, 65536, !dbg !12380
  br label %48, !dbg !12380

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12382
  %35 = and i32 %34, -65537, !dbg !12382
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12382
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12382
  %37 = and i32 %36, -262145, !dbg !12382
  br label %48, !dbg !12382

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12385
  %40 = or i32 %39, 262144, !dbg !12385
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12385
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12385
  %42 = or i32 %41, 65536, !dbg !12385
  br label %48, !dbg !12385

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12388
  %45 = and i32 %44, -65537, !dbg !12388
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12388
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12388
  %47 = and i32 %46, -262145, !dbg !12388
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12390
  %50 = load i32, i32* %28, align 4, !dbg !12391
  %51 = icmp eq i32 %50, 0, !dbg !12393
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !12394
  call void @llvm.dbg.value(metadata i32 %52, metadata !12338, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 %52, metadata !12338, metadata !DIExpression()), !dbg !12350
  br i1 %51, label %61, label %53, !dbg !12395

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12396
  %55 = and i32 %54, 131072, !dbg !12396
  %56 = icmp eq i32 %55, 0, !dbg !12398
  br i1 %56, label %57, label %69, !dbg !12399

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !12400
  %59 = sub i32 %58, %52, !dbg !12403
  %60 = icmp ugt i32 %59, 100, !dbg !12404
  br i1 %60, label %385, label %53, !dbg !12405, !llvm.loop !12406

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12408
  %63 = and i32 %62, 131072, !dbg !12408
  %64 = icmp eq i32 %63, 0, !dbg !12410
  br i1 %64, label %69, label %65, !dbg !12411

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12412
  %67 = sub i32 %66, %52, !dbg !12415
  %68 = icmp ugt i32 %67, 100, !dbg !12416
  br i1 %68, label %385, label %61, !dbg !12417, !llvm.loop !12418

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !12420
  %71 = and i32 %70, 2, !dbg !12422
  %72 = icmp eq i32 %71, 0, !dbg !12423
  br i1 %72, label %118, label %73, !dbg !12424

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !12425
  br i1 %74, label %79, label %75, !dbg !12428

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !12429
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !12430
  br i1 %78, label %79, label %87, !dbg !12430

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12431
  %81 = and i32 %80, 2, !dbg !12431
  %82 = icmp eq i32 %81, 0, !dbg !12434
  br i1 %82, label %111, label %83, !dbg !12435

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12436
  %85 = load i32, i32* %84, align 4, !dbg !12436
  %86 = icmp eq i32 %85, 1, !dbg !12437
  br i1 %86, label %111, label %385, !dbg !12438

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12439
  %89 = load i32, i32* %88, align 4, !dbg !12439
  %90 = icmp eq i32 %89, 0, !dbg !12442
  br i1 %90, label %101, label %91, !dbg !12443

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12444
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !12446
  call void @llvm.dbg.value(metadata i32 %92, metadata !12338, metadata !DIExpression()), !dbg !12350
  br label %93, !dbg !12447

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12448
  %95 = and i32 %94, 2, !dbg !12448
  %96 = icmp eq i32 %95, 0, !dbg !12449
  br i1 %96, label %97, label %111, !dbg !12447

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !12450
  %99 = sub i32 %98, %92, !dbg !12453
  %100 = icmp ugt i32 %99, 2, !dbg !12454
  br i1 %100, label %385, label %93, !dbg !12455, !llvm.loop !12456

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12458
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !12460
  call void @llvm.dbg.value(metadata i32 %102, metadata !12338, metadata !DIExpression()), !dbg !12350
  br label %103, !dbg !12461

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12462
  %105 = and i32 %104, 2, !dbg !12462
  %106 = icmp eq i32 %105, 0, !dbg !12463
  br i1 %106, label %118, label %107, !dbg !12461

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !12464
  %109 = sub i32 %108, %102, !dbg !12467
  %110 = icmp ugt i32 %109, 2, !dbg !12468
  br i1 %110, label %385, label %103, !dbg !12469, !llvm.loop !12470

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12472
  %113 = and i32 %112, -7937, !dbg !12472
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12472
  %115 = load i32, i32* %114, align 4, !dbg !12472
  %116 = shl i32 %115, 8, !dbg !12472
  %117 = or i32 %116, %113, !dbg !12472
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12472
  br label %118, !dbg !12473

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !12473
  %120 = and i32 %119, 16, !dbg !12475
  %121 = icmp eq i32 %120, 0, !dbg !12476
  br i1 %121, label %215, label %122, !dbg !12477

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !12478
  br i1 %123, label %124, label %179, !dbg !12481

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12482
  %126 = and i32 %125, 512, !dbg !12482
  %127 = icmp eq i32 %126, 0, !dbg !12485
  br i1 %127, label %132, label %128, !dbg !12486

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12487
  %130 = load i32, i32* %129, align 4, !dbg !12487
  %131 = icmp eq i32 %130, 0, !dbg !12488
  br i1 %131, label %385, label %132, !dbg !12489

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12490
  %134 = load i32, i32* %133, align 4, !dbg !12490
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12493
  %136 = and i32 %135, 57344, !dbg !12493
  %137 = icmp ugt i32 %134, %136, !dbg !12494
  br i1 %137, label %138, label %152, !dbg !12495

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #24, !dbg !12496
  %140 = icmp eq i32 %139, 0, !dbg !12499
  br i1 %140, label %141, label %385, !dbg !12500

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12501
  %143 = and i32 %142, -57345, !dbg !12501
  %144 = load i32, i32* %133, align 4, !dbg !12501
  %145 = or i32 %143, %144, !dbg !12501
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12501
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12502
  %147 = and i32 %146, 16777215, !dbg !12502
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12502
  %149 = load i32, i32* %148, align 4, !dbg !12502
  %150 = shl i32 %149, 24, !dbg !12502
  %151 = or i32 %150, %147, !dbg !12502
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12502
  br label %165, !dbg !12503

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12504
  %154 = and i32 %153, -57345, !dbg !12504
  %155 = or i32 %154, %134, !dbg !12504
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12504
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12506
  %157 = and i32 %156, 16777215, !dbg !12506
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12506
  %159 = load i32, i32* %158, align 4, !dbg !12506
  %160 = shl i32 %159, 24, !dbg !12506
  %161 = or i32 %160, %157, !dbg !12506
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12506
  %162 = load i32, i32* %133, align 4, !dbg !12507
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #24, !dbg !12509
  %164 = icmp eq i32 %163, 0, !dbg !12510
  br i1 %164, label %165, label %385, !dbg !12511

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !12512
  %167 = lshr i32 %166, 13, !dbg !12513
  %168 = shl i32 65536, %167, !dbg !12514
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12515
  %170 = lshr i32 %169, 4, !dbg !12516
  %171 = and i32 %170, 15, !dbg !12516
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !12517
  %173 = load i8, i8* %172, align 1, !dbg !12517
  %174 = zext i8 %173 to i32, !dbg !12517
  %175 = lshr i32 %168, %174, !dbg !12518
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !12519
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !12520
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !12521
  call void @llvm.dbg.value(metadata i32 %177, metadata !12339, metadata !DIExpression()), !dbg !12350
  %178 = icmp eq i32 %177, 0, !dbg !12522
  br i1 %178, label %215, label %385, !dbg !12524

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12525
  %181 = load i32, i32* %180, align 4, !dbg !12525
  %182 = icmp eq i32 %181, 0, !dbg !12528
  br i1 %182, label %205, label %183, !dbg !12529

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12530
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !12532
  call void @llvm.dbg.value(metadata i32 %184, metadata !12338, metadata !DIExpression()), !dbg !12350
  br label %185, !dbg !12533

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12534
  %187 = and i32 %186, 512, !dbg !12534
  %188 = icmp eq i32 %187, 0, !dbg !12535
  br i1 %188, label %189, label %193, !dbg !12533

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !12536
  %191 = sub i32 %190, %184, !dbg !12539
  %192 = icmp ugt i32 %191, 2, !dbg !12540
  br i1 %192, label %385, label %185, !dbg !12541, !llvm.loop !12542

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12544
  %195 = and i32 %194, -57345, !dbg !12544
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12544
  %197 = load i32, i32* %196, align 4, !dbg !12544
  %198 = or i32 %195, %197, !dbg !12544
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12544
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12545
  %200 = and i32 %199, 16777215, !dbg !12545
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12545
  %202 = load i32, i32* %201, align 4, !dbg !12545
  %203 = shl i32 %202, 24, !dbg !12545
  %204 = or i32 %203, %200, !dbg !12545
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12545
  br label %215, !dbg !12546

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12547
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12549
  call void @llvm.dbg.value(metadata i32 %206, metadata !12338, metadata !DIExpression()), !dbg !12350
  br label %207, !dbg !12550

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12551
  %209 = and i32 %208, 512, !dbg !12551
  %210 = icmp eq i32 %209, 0, !dbg !12552
  br i1 %210, label %215, label %211, !dbg !12550

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !12553
  %213 = sub i32 %212, %206, !dbg !12556
  %214 = icmp ugt i32 %213, 2, !dbg !12557
  br i1 %214, label %385, label %207, !dbg !12558, !llvm.loop !12559

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !12561
  %217 = and i32 %216, 8, !dbg !12563
  %218 = icmp eq i32 %217, 0, !dbg !12564
  br i1 %218, label %243, label %219, !dbg !12565

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12566
  %221 = load i32, i32* %220, align 4, !dbg !12566
  %222 = icmp eq i32 %221, 0, !dbg !12569
  br i1 %222, label %233, label %223, !dbg !12570

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12571
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !12573
  call void @llvm.dbg.value(metadata i32 %224, metadata !12338, metadata !DIExpression()), !dbg !12350
  br label %225, !dbg !12574

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12575
  %227 = and i32 %226, 2, !dbg !12575
  %228 = icmp eq i32 %227, 0, !dbg !12576
  br i1 %228, label %229, label %243, !dbg !12574

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !12577
  %231 = sub i32 %230, %224, !dbg !12580
  %232 = icmp ugt i32 %231, 2, !dbg !12581
  br i1 %232, label %385, label %225, !dbg !12582, !llvm.loop !12583

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12585
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !12587
  call void @llvm.dbg.value(metadata i32 %234, metadata !12338, metadata !DIExpression()), !dbg !12350
  br label %235, !dbg !12588

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12589
  %237 = and i32 %236, 2, !dbg !12589
  %238 = icmp eq i32 %237, 0, !dbg !12590
  br i1 %238, label %243, label %239, !dbg !12588

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !12591
  %241 = sub i32 %240, %234, !dbg !12594
  %242 = icmp ugt i32 %241, 2, !dbg !12595
  br i1 %242, label %385, label %235, !dbg !12596, !llvm.loop !12597

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !12599
  %245 = and i32 %244, 4, !dbg !12600
  %246 = icmp eq i32 %245, 0, !dbg !12601
  br i1 %246, label %320, label %247, !dbg !12602

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !12342, metadata !DIExpression()), !dbg !12603
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12604
  %249 = and i32 %248, 268435456, !dbg !12604
  %250 = icmp eq i32 %249, 0, !dbg !12604
  br i1 %250, label %251, label %258, !dbg !12605

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !12606
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !12606
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12346, metadata !DIExpression()), !dbg !12606
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12606
  %254 = or i32 %253, 268435456, !dbg !12606
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12606
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12606
  %256 = and i32 %255, 268435456, !dbg !12606
  store volatile i32 %256, i32* %2, align 4, !dbg !12606
  %257 = load volatile i32, i32* %2, align 4, !dbg !12606
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !12607
  call void @llvm.dbg.value(metadata i32 1, metadata !12342, metadata !DIExpression()), !dbg !12603
  br label %258, !dbg !12608

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12342, metadata !DIExpression()), !dbg !12603
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12609
  %260 = and i32 %259, 256, !dbg !12609
  %261 = icmp eq i32 %260, 0, !dbg !12609
  br i1 %261, label %262, label %274, !dbg !12611

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12612
  %264 = or i32 %263, 256, !dbg !12612
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12612
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %265, metadata !12338, metadata !DIExpression()), !dbg !12350
  br label %266, !dbg !12615

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12616
  %268 = and i32 %267, 256, !dbg !12616
  %269 = icmp eq i32 %268, 0, !dbg !12616
  br i1 %269, label %270, label %274, !dbg !12615

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !12617
  %272 = sub i32 %271, %265, !dbg !12620
  %273 = icmp ugt i32 %272, 100, !dbg !12621
  br i1 %273, label %385, label %266, !dbg !12622, !llvm.loop !12623

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12625
  %276 = load i32, i32* %275, align 4, !dbg !12625
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !12628

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12629
  %279 = or i32 %278, 256, !dbg !12629
  br label %295, !dbg !12629

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12631
  %282 = and i32 %281, -257, !dbg !12631
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12631
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12631
  %284 = and i32 %283, -1025, !dbg !12631
  br label %295, !dbg !12631

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12634
  %287 = or i32 %286, 1024, !dbg !12634
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12634
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12634
  %289 = or i32 %288, 256, !dbg !12634
  br label %295, !dbg !12634

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12637
  %292 = and i32 %291, -257, !dbg !12637
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12637
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12637
  %294 = and i32 %293, -1025, !dbg !12637
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12639
  %297 = load i32, i32* %275, align 4, !dbg !12640
  %298 = icmp eq i32 %297, 0, !dbg !12642
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %299, metadata !12338, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 %299, metadata !12338, metadata !DIExpression()), !dbg !12350
  br i1 %298, label %308, label %300, !dbg !12644

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12645
  %302 = and i32 %301, 512, !dbg !12645
  %303 = icmp eq i32 %302, 0, !dbg !12647
  br i1 %303, label %304, label %316, !dbg !12648

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !12649
  %306 = sub i32 %305, %299, !dbg !12652
  %307 = icmp ugt i32 %306, 5000, !dbg !12653
  br i1 %307, label %385, label %300, !dbg !12654, !llvm.loop !12655

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12657
  %310 = and i32 %309, 512, !dbg !12657
  %311 = icmp eq i32 %310, 0, !dbg !12659
  br i1 %311, label %316, label %312, !dbg !12660

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !12661
  %314 = sub i32 %313, %299, !dbg !12664
  %315 = icmp ugt i32 %314, 5000, !dbg !12665
  br i1 %315, label %385, label %308, !dbg !12666, !llvm.loop !12667

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !12669

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12670
  %319 = and i32 %318, -268435457, !dbg !12670
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12670
  br label %320, !dbg !12673

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12674
  %322 = load i32, i32* %321, align 4, !dbg !12674
  %323 = icmp eq i32 %322, 0, !dbg !12676
  br i1 %323, label %384, label %324, !dbg !12677

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !12678
  br i1 %325, label %366, label %326, !dbg !12681

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !12682
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12685
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !12685
  call void @llvm.dbg.value(metadata i32 %328, metadata !12338, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 %328, metadata !12338, metadata !DIExpression()), !dbg !12350
  br i1 %327, label %329, label %358, !dbg !12686

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12687
  %331 = and i32 %330, 33554432, !dbg !12687
  %332 = icmp eq i32 %331, 0, !dbg !12689
  br i1 %332, label %337, label %333, !dbg !12690

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !12691
  %335 = sub i32 %334, %328, !dbg !12694
  %336 = icmp ugt i32 %335, 2, !dbg !12695
  br i1 %336, label %385, label %329, !dbg !12696, !llvm.loop !12697

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12699
  %339 = and i32 %338, -16580609, !dbg !12699
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12699
  %341 = load i32, i32* %340, align 4, !dbg !12699
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12699
  %343 = load i32, i32* %342, align 4, !dbg !12699
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12699
  %345 = load i32, i32* %344, align 4, !dbg !12699
  %346 = or i32 %339, %341, !dbg !12699
  %347 = or i32 %346, %343, !dbg !12699
  %348 = or i32 %347, %345, !dbg !12699
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12699
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12700
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %349, metadata !12338, metadata !DIExpression()), !dbg !12350
  br label %350, !dbg !12702

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12703
  %352 = and i32 %351, 33554432, !dbg !12703
  %353 = icmp eq i32 %352, 0, !dbg !12704
  br i1 %353, label %354, label %384, !dbg !12702

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !12705
  %356 = sub i32 %355, %349, !dbg !12708
  %357 = icmp ugt i32 %356, 2, !dbg !12709
  br i1 %357, label %385, label %350, !dbg !12710, !llvm.loop !12711

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12713
  %360 = and i32 %359, 33554432, !dbg !12713
  %361 = icmp eq i32 %360, 0, !dbg !12715
  br i1 %361, label %384, label %362, !dbg !12716

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !12717
  %364 = sub i32 %363, %328, !dbg !12720
  %365 = icmp ugt i32 %364, 2, !dbg !12721
  br i1 %365, label %385, label %358, !dbg !12722, !llvm.loop !12723

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !12725
  br i1 %367, label %385, label %368, !dbg !12728

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12729
  call void @llvm.dbg.value(metadata i32 %369, metadata !12341, metadata !DIExpression()), !dbg !12350
  %370 = and i32 %369, 65536, !dbg !12731
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12733
  %372 = load i32, i32* %371, align 4, !dbg !12733
  %373 = icmp eq i32 %370, %372, !dbg !12734
  br i1 %373, label %374, label %385, !dbg !12735

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !12736
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12737
  %377 = load i32, i32* %376, align 4, !dbg !12737
  %378 = icmp eq i32 %375, %377, !dbg !12738
  br i1 %378, label %379, label %385, !dbg !12739

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !12740
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12741
  %382 = load i32, i32* %381, align 4, !dbg !12741
  %383 = icmp eq i32 %380, %382, !dbg !12742
  br i1 %383, label %384, label %385, !dbg !12743

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !12744

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !12350
  ret i32 %386, !dbg !12745
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #15 !dbg !12746 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12748, metadata !DIExpression()), !dbg !12757
  call void @llvm.dbg.value(metadata i32 0, metadata !12750, metadata !DIExpression()), !dbg !12757
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12758
  %4 = and i32 %3, 240, !dbg !12758
  %5 = icmp eq i32 %4, 0, !dbg !12759
  br i1 %5, label %6, label %31, !dbg !12760

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12761
  %8 = and i32 %7, 268435456, !dbg !12761
  %9 = icmp eq i32 %8, 0, !dbg !12761
  br i1 %9, label %12, label %10, !dbg !12762

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12763
  call void @llvm.dbg.value(metadata i32 %11, metadata !12749, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12757
  br label %22, !dbg !12765

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !12766
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !12766
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12751, metadata !DIExpression()), !dbg !12766
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12766
  %15 = or i32 %14, 268435456, !dbg !12766
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12766
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12766
  %17 = and i32 %16, 268435456, !dbg !12766
  store volatile i32 %17, i32* %2, align 4, !dbg !12766
  %18 = load volatile i32, i32* %2, align 4, !dbg !12766
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !12767
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12768
  call void @llvm.dbg.value(metadata i32 %19, metadata !12749, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12757
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12769
  %21 = and i32 %20, -268435457, !dbg !12769
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12769
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !12770
  call void @llvm.dbg.value(metadata i32 %24, metadata !12749, metadata !DIExpression()), !dbg !12757
  %25 = icmp eq i32 %24, 6144, !dbg !12771
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !12773
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()), !dbg !12757
  br i1 %27, label %28, label %31, !dbg !12774

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12776
  %30 = or i32 %29, 4, !dbg !12776
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12776
  br label %31, !dbg !12776

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12774
  %34 = and i32 %33, -2, !dbg !12774
  %35 = or i32 %34, %32, !dbg !12774
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12774
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12779
  %37 = and i32 %36, 1, !dbg !12779
  %38 = xor i32 %37, %32, !dbg !12757
  ret i32 %38, !dbg !12781
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.rtio_spsc* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12782 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12795, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i32 %1, metadata !12796, metadata !DIExpression()), !dbg !12799
  %3 = icmp eq %struct.rtio_spsc* %0, null, !dbg !12800
  br i1 %3, label %136, label %4, !dbg !12802

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12803
  %6 = and i32 %5, 1, !dbg !12803
  %7 = icmp ult i32 %6, %1, !dbg !12805
  br i1 %7, label %8, label %20, !dbg !12806

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !12807
  br i1 %9, label %10, label %13, !dbg !12811

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12812
  %12 = or i32 %11, 4, !dbg !12812
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12812
  br label %13, !dbg !12812

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12811
  %15 = and i32 %14, -2, !dbg !12811
  %16 = or i32 %15, %1, !dbg !12811
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12811
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12814
  %18 = and i32 %17, 1, !dbg !12814
  %19 = icmp eq i32 %18, %1, !dbg !12816
  br i1 %19, label %20, label %136, !dbg !12817

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12818
  %22 = load i32, i32* %21, align 4, !dbg !12818
  %23 = and i32 %22, 2, !dbg !12820
  %24 = icmp eq i32 %23, 0, !dbg !12821
  br i1 %24, label %32, label %25, !dbg !12822

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12823
  %27 = and i32 %26, -241, !dbg !12823
  %28 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12823
  %29 = load i32, i32* %28, align 4, !dbg !12823
  %30 = or i32 %27, %29, !dbg !12823
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12823
  %31 = load i32, i32* %21, align 4, !dbg !12825
  br label %32, !dbg !12827

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !12825
  %34 = and i32 %33, 1, !dbg !12828
  %35 = icmp eq i32 %34, 0, !dbg !12829
  br i1 %35, label %93, label %36, !dbg !12830

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12831
  %38 = load i32, i32* %37, align 4, !dbg !12831
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !12834

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12835
  %41 = and i32 %40, 131072, !dbg !12835
  %42 = icmp eq i32 %41, 0, !dbg !12838
  br i1 %42, label %136, label %55, !dbg !12839

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12840
  %45 = and i32 %44, 33554432, !dbg !12840
  %46 = icmp eq i32 %45, 0, !dbg !12844
  br i1 %46, label %136, label %55, !dbg !12845

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12846
  %49 = and i32 %48, 2, !dbg !12846
  %50 = icmp eq i32 %49, 0, !dbg !12850
  br i1 %50, label %136, label %55, !dbg !12851

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12852
  %53 = and i32 %52, 512, !dbg !12852
  %54 = icmp eq i32 %53, 0, !dbg !12855
  br i1 %54, label %136, label %55, !dbg !12856

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12857
  %57 = and i32 %56, -4, !dbg !12857
  %58 = or i32 %57, %38, !dbg !12857
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12857
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !12858
  call void @llvm.dbg.value(metadata i32 %59, metadata !12797, metadata !DIExpression()), !dbg !12799
  %60 = load i32, i32* %37, align 4, !dbg !12859
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !12861

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12862
  %63 = and i32 %62, 12, !dbg !12862
  %64 = icmp eq i32 %63, 8, !dbg !12864
  br i1 %64, label %93, label %65, !dbg !12865

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12866
  %67 = sub i32 %66, %59, !dbg !12869
  %68 = icmp ugt i32 %67, 5000, !dbg !12870
  br i1 %68, label %136, label %61, !dbg !12871, !llvm.loop !12872

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12874
  %71 = and i32 %70, 12, !dbg !12874
  %72 = icmp eq i32 %71, 12, !dbg !12877
  br i1 %72, label %93, label %73, !dbg !12878

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !12879
  %75 = sub i32 %74, %59, !dbg !12882
  %76 = icmp ugt i32 %75, 5000, !dbg !12883
  br i1 %76, label %136, label %69, !dbg !12884, !llvm.loop !12885

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12887
  %79 = and i32 %78, 12, !dbg !12887
  %80 = icmp eq i32 %79, 4, !dbg !12890
  br i1 %80, label %93, label %81, !dbg !12891

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12892
  %83 = sub i32 %82, %59, !dbg !12895
  %84 = icmp ugt i32 %83, 5000, !dbg !12896
  br i1 %84, label %136, label %77, !dbg !12897, !llvm.loop !12898

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12900
  %87 = and i32 %86, 12, !dbg !12900
  %88 = icmp eq i32 %87, 0, !dbg !12902
  br i1 %88, label %93, label %89, !dbg !12903

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !12904
  %91 = sub i32 %90, %59, !dbg !12907
  %92 = icmp ugt i32 %91, 5000, !dbg !12908
  br i1 %92, label %136, label %85, !dbg !12909, !llvm.loop !12910

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12912
  %95 = and i32 %94, 1, !dbg !12912
  %96 = icmp ugt i32 %95, %1, !dbg !12914
  br i1 %96, label %97, label %103, !dbg !12915

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12916
  %99 = and i32 %98, -2, !dbg !12916
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12916
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12919
  %101 = and i32 %100, 1, !dbg !12919
  %102 = icmp eq i32 %101, 0, !dbg !12921
  br i1 %102, label %103, label %136, !dbg !12922

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !12923
  %105 = and i32 %104, 4, !dbg !12925
  %106 = icmp eq i32 %105, 0, !dbg !12926
  br i1 %106, label %114, label %107, !dbg !12927

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12928
  %109 = and i32 %108, -1793, !dbg !12928
  %110 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !12928
  %111 = load i32, i32* %110, align 4, !dbg !12928
  %112 = or i32 %109, %111, !dbg !12928
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12928
  %113 = load i32, i32* %21, align 4, !dbg !12930
  br label %114, !dbg !12932

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !12930
  %116 = and i32 %115, 8, !dbg !12933
  %117 = icmp eq i32 %116, 0, !dbg !12934
  br i1 %117, label %125, label %118, !dbg !12935

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12936
  %120 = and i32 %119, -14337, !dbg !12936
  %121 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !12936
  %122 = load i32, i32* %121, align 4, !dbg !12936
  %123 = shl i32 %122, 3, !dbg !12936
  %124 = or i32 %123, %120, !dbg !12936
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12936
  br label %125, !dbg !12938

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12939
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12940
  %128 = lshr i32 %127, 4, !dbg !12941
  %129 = and i32 %128, 15, !dbg !12941
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !12942
  %131 = load i8, i8* %130, align 1, !dbg !12942
  %132 = zext i8 %131 to i32, !dbg !12942
  %133 = lshr i32 %126, %132, !dbg !12943
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !12944
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !12945
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !12946
  call void @llvm.dbg.value(metadata i32 %135, metadata !12798, metadata !DIExpression()), !dbg !12799
  br label %136, !dbg !12947

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !12799
  ret i32 %137, !dbg !12948
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #5 !dbg !12949 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12957
  call void @llvm.dbg.value(metadata i32 %1, metadata !12951, metadata !DIExpression()), !dbg !12958
  %2 = lshr i32 %1, 2, !dbg !12959
  %3 = and i32 %2, 3, !dbg !12959
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !12959

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12956, metadata !DIExpression()), !dbg !12958
  br label %26, !dbg !12960

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !12963
  %7 = and i32 %6, 15, !dbg !12963
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !12965
  %9 = load i8, i8* %8, align 1, !dbg !12965
  call void @llvm.dbg.value(metadata i8 %9, metadata !12952, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12958
  %10 = lshr i32 %1, 22, !dbg !12966
  %11 = and i32 %10, 3, !dbg !12966
  %12 = add nuw nsw i32 %11, 1, !dbg !12967
  call void @llvm.dbg.value(metadata i32 %12, metadata !12953, metadata !DIExpression()), !dbg !12958
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12968
  %14 = and i32 %13, 65536, !dbg !12968
  %15 = icmp eq i32 %14, 0, !dbg !12970
  %16 = zext i8 %9 to i32, !dbg !12971
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !12971
  %18 = mul nuw i32 %17, %16, !dbg !12971
  %19 = udiv i32 %18, %12, !dbg !12972
  call void @llvm.dbg.value(metadata i32 %19, metadata !12954, metadata !DIExpression()), !dbg !12958
  call void @llvm.dbg.value(metadata i32 %19, metadata !12956, metadata !DIExpression()), !dbg !12958
  br label %26, !dbg !12973

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12974
  %23 = lshr i32 %22, 13, !dbg !12976
  %24 = and i32 %23, 7, !dbg !12976
  call void @llvm.dbg.value(metadata i32 %24, metadata !12955, metadata !DIExpression()), !dbg !12958
  %25 = shl nuw nsw i32 65536, %24, !dbg !12977
  call void @llvm.dbg.value(metadata i32 %25, metadata !12956, metadata !DIExpression()), !dbg !12958
  br label %26, !dbg !12978

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !12979
  call void @llvm.dbg.value(metadata i32 %27, metadata !12956, metadata !DIExpression()), !dbg !12958
  ret i32 %27, !dbg !12980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12981 {
  %4 = alloca %struct.rtio_spsc, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12983, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.value(metadata i32 %1, metadata !12984, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.value(metadata i32 %2, metadata !12985, metadata !DIExpression()), !dbg !12998
  %6 = bitcast %struct.rtio_spsc* %4 to i8*, !dbg !12999
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12999
  call void @llvm.dbg.declare(metadata %struct.rtio_spsc* %4, metadata !12986, metadata !DIExpression()), !dbg !13000
  %7 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !13001
  store i32 2, i32* %7, align 4, !dbg !13002
  %8 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !13003
  store i32 2, i32* %8, align 4, !dbg !13004
  %9 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !13005
  store i32 0, i32* %9, align 4, !dbg !13006
  %10 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !13007
  store i32 256, i32* %10, align 4, !dbg !13008
  %11 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !13009
  store i32 0, i32* %11, align 4, !dbg !13010
  %12 = bitcast i32* %5 to i8*, !dbg !13011
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !13011
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12996, metadata !DIExpression()), !dbg !13011
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13011
  %14 = or i32 %13, 1, !dbg !13011
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13011
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13011
  %16 = and i32 %15, 1, !dbg !13011
  store volatile i32 %16, i32* %5, align 4, !dbg !13011
  %17 = load volatile i32, i32* %5, align 4, !dbg !13011
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !13012
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !13013
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13014
  %19 = and i32 %18, -1996488705, !dbg !13014
  %20 = or i32 %2, %1, !dbg !13014
  %21 = or i32 %20, %19, !dbg !13014
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13014
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !13015
  ret void, !dbg !13015
}

; Function Attrs: optsize
declare !dbg !13016 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.rtio_spsc* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !13020 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13021
  ret void, !dbg !13022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !13023 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13024
  ret void, !dbg !13025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !13026 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13027
  ret i32 %1, !dbg !13028
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !13029 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !13030
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13031
  %3 = lshr i32 %2, 8, !dbg !13032
  %4 = and i32 %3, 7, !dbg !13032
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13033
  %6 = load i8, i8* %5, align 1, !dbg !13033
  %7 = zext i8 %6 to i32, !dbg !13033
  %8 = lshr i32 %1, %7, !dbg !13034
  ret i32 %8, !dbg !13035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !13036 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !13037
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13038
  %3 = lshr i32 %2, 11, !dbg !13039
  %4 = and i32 %3, 7, !dbg !13039
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13040
  %6 = load i8, i8* %5, align 1, !dbg !13040
  %7 = zext i8 %6 to i32, !dbg !13040
  %8 = lshr i32 %1, %7, !dbg !13041
  ret i32 %8, !dbg !13042
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #5 !dbg !13043 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13047, metadata !DIExpression()), !dbg !13048
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13049
  store i32 31, i32* %2, align 4, !dbg !13050
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13051
  %4 = and i32 %3, 262144, !dbg !13053
  %5 = icmp eq i32 %4, 0, !dbg !13054
  br i1 %5, label %8, label %6, !dbg !13055

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13056
  store i32 5, i32* %7, align 4, !dbg !13058
  br label %15, !dbg !13059

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13060
  %10 = and i32 %9, 65536, !dbg !13062
  %11 = icmp eq i32 %10, 0, !dbg !13063
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13064
  br i1 %11, label %14, label %13, !dbg !13065

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !13066
  br label %15, !dbg !13068

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13069
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13071
  %17 = and i32 %16, 1, !dbg !13073
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13074
  store i32 %17, i32* %18, align 4, !dbg !13076
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13077
  %20 = lshr i32 %19, 8, !dbg !13078
  %21 = and i32 %20, 31, !dbg !13078
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13079
  store i32 %21, i32* %22, align 4, !dbg !13080
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13081
  %24 = lshr i32 %23, 8, !dbg !13083
  %25 = and i32 %24, 1, !dbg !13083
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13084
  store i32 %25, i32* %26, align 4, !dbg !13086
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13087
  %28 = lshr i32 %27, 24, !dbg !13088
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13089
  store i32 %28, i32* %29, align 4, !dbg !13090
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13091
  %31 = and i32 %30, 57344, !dbg !13092
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13093
  store i32 %31, i32* %32, align 4, !dbg !13094
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13095
  %34 = and i32 %33, 1024, !dbg !13097
  %35 = icmp eq i32 %34, 0, !dbg !13098
  br i1 %35, label %38, label %36, !dbg !13099

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13100
  store i32 5, i32* %37, align 4, !dbg !13102
  br label %45, !dbg !13103

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13104
  %40 = and i32 %39, 256, !dbg !13106
  %41 = icmp eq i32 %40, 0, !dbg !13107
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13108
  br i1 %41, label %44, label %43, !dbg !13109

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !13110
  br label %45, !dbg !13112

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !13113
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13115
  %47 = and i32 %46, 1, !dbg !13117
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13118
  store i32 %47, i32* %48, align 4, !dbg !13120
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13121
  %50 = and i32 %49, 16777216, !dbg !13123
  %51 = icmp eq i32 %50, 0, !dbg !13124
  %52 = select i1 %51, i32 1, i32 2, !dbg !13125
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !13126
  store i32 %52, i32* %53, align 4, !dbg !13128
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13129
  %55 = and i32 %54, 65536, !dbg !13130
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !13131
  store i32 %55, i32* %56, align 4, !dbg !13132
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13133
  %58 = and i32 %57, 3932160, !dbg !13134
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !13135
  store i32 %58, i32* %59, align 4, !dbg !13136
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13137
  %61 = and i32 %60, 12582912, !dbg !13138
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !13139
  store i32 %61, i32* %62, align 4, !dbg !13140
  ret void, !dbg !13141
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.rtio_spsc* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !13142 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !13146, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i32* %1, metadata !13147, metadata !DIExpression()), !dbg !13148
  %3 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !13149
  store i32 15, i32* %3, align 4, !dbg !13150
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13151
  %5 = and i32 %4, 3, !dbg !13152
  %6 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !13153
  store i32 %5, i32* %6, align 4, !dbg !13154
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13155
  %8 = and i32 %7, 240, !dbg !13156
  %9 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !13157
  store i32 %8, i32* %9, align 4, !dbg !13158
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13159
  %11 = and i32 %10, 1792, !dbg !13160
  %12 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !13161
  store i32 %11, i32* %12, align 4, !dbg !13162
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13163
  %14 = lshr i32 %13, 3, !dbg !13164
  %15 = and i32 %14, 1792, !dbg !13164
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !13165
  store i32 %15, i32* %16, align 4, !dbg !13166
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13167
  %18 = and i32 %17, 1, !dbg !13167
  store i32 %18, i32* %1, align 4, !dbg !13168
  ret void, !dbg !13169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13170 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13171
  %2 = and i32 %1, 128, !dbg !13171
  %3 = icmp eq i32 %2, 0, !dbg !13171
  br i1 %3, label %5, label %4, !dbg !13173

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !13174
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13176
  br label %5, !dbg !13177

5:                                                ; preds = %4, %0
  ret void, !dbg !13178
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13179 {
  ret void, !dbg !13180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !13181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13184, metadata !DIExpression()), !dbg !13185
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13186
  ret void, !dbg !13187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !13188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13191, metadata !DIExpression()), !dbg !13193
  call void @llvm.dbg.value(metadata i32 1000, metadata !13192, metadata !DIExpression()), !dbg !13193
  %2 = udiv i32 %0, 1000, !dbg !13194
  %3 = add nsw i32 %2, -1, !dbg !13195
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13196
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13197
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13198
  ret void, !dbg !13199
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !13200 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13202, metadata !DIExpression()), !dbg !13205
  %3 = bitcast i32* %2 to i8*, !dbg !13206
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13206
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13203, metadata !DIExpression()), !dbg !13207
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13208
  store volatile i32 %4, i32* %2, align 4, !dbg !13207
  call void @llvm.dbg.value(metadata i32 %0, metadata !13204, metadata !DIExpression()), !dbg !13205
  %5 = load volatile i32, i32* %2, align 4, !dbg !13209
  %6 = icmp eq i32 %0, -1, !dbg !13210
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13204, metadata !DIExpression()), !dbg !13205
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13205
  call void @llvm.dbg.value(metadata i32 %8, metadata !13204, metadata !DIExpression()), !dbg !13205
  br label %9, !dbg !13212

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13204, metadata !DIExpression()), !dbg !13205
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13213
  call void @llvm.dbg.value(metadata i32 undef, metadata !13204, metadata !DIExpression()), !dbg !13205
  %12 = shl i32 %11, 15, !dbg !13205
  %13 = ashr i32 %12, 31, !dbg !13205
  %14 = add i32 %13, %10, !dbg !13205
  call void @llvm.dbg.value(metadata i32 %14, metadata !13204, metadata !DIExpression()), !dbg !13205
  %15 = icmp eq i32 %14, 0, !dbg !13216
  br i1 %15, label %16, label %9, !dbg !13212

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13217
  ret void, !dbg !13217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !13218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13220, metadata !DIExpression()), !dbg !13221
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13222
  ret void, !dbg !13223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !13224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13229, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 0, metadata !13230, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %2 = add i32 %0, -32000001, !dbg !13233
  %3 = icmp ult i32 %2, -32000000, !dbg !13233
  br i1 %3, label %22, label %4, !dbg !13233

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13235
  %6 = icmp eq i32 %5, 2048, !dbg !13238
  br i1 %6, label %7, label %9, !dbg !13239

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !13240
  call void @llvm.dbg.value(metadata i32 undef, metadata !13231, metadata !DIExpression()), !dbg !13232
  br i1 %8, label %16, label %17, !dbg !13243

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13244
  %11 = icmp eq i32 %10, 4096, !dbg !13246
  br i1 %11, label %12, label %14, !dbg !13247

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !13248
  call void @llvm.dbg.value(metadata i32 undef, metadata !13231, metadata !DIExpression()), !dbg !13232
  br i1 %13, label %16, label %17, !dbg !13243

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !13251
  call void @llvm.dbg.value(metadata i32 undef, metadata !13231, metadata !DIExpression()), !dbg !13232
  br i1 %15, label %16, label %17, !dbg !13243

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #24, !dbg !13254
  br label %17, !dbg !13257

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #24, !dbg !13258
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13259
  %20 = icmp ne i32 %19, %18, !dbg !13261
  %21 = zext i1 %20 to i32, !dbg !13262
  br label %22, !dbg !13262

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !13232
  call void @llvm.dbg.value(metadata i32 %23, metadata !13230, metadata !DIExpression()), !dbg !13232
  ret i32 %23, !dbg !13263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !13264 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13265
  %2 = and i32 %1, 6144, !dbg !13265
  ret i32 %2, !dbg !13266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #16 !dbg !13267 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13268
  %2 = or i32 %1, 4, !dbg !13268
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13268
  ret void, !dbg !13269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !13270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13272, metadata !DIExpression()), !dbg !13273
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13274
  %3 = and i32 %2, -2, !dbg !13274
  %4 = or i32 %3, %0, !dbg !13274
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13274
  ret void, !dbg !13275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !13276 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13277
  %2 = and i32 %1, 1, !dbg !13277
  ret i32 %2, !dbg !13278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.vnd_sensor_config* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !13279 {
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %0, metadata !13296, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13297, metadata !DIExpression()), !dbg !13300
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13301
  %4 = icmp eq i32 %3, 0, !dbg !13303
  br i1 %4, label %5, label %19, !dbg !13304

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.vnd_sensor_config* noundef %0) #24, !dbg !13305
  call void @llvm.dbg.value(metadata i32 %6, metadata !13299, metadata !DIExpression()), !dbg !13300
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.167() #24, !dbg !13307
  %8 = icmp eq i32 %7, 1, !dbg !13309
  br i1 %8, label %13, label %9, !dbg !13310

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.168() #24, !dbg !13311
  br label %10, !dbg !13313

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.167() #24, !dbg !13314
  %12 = icmp eq i32 %11, 1, !dbg !13315
  br i1 %12, label %13, label %10, !dbg !13313, !llvm.loop !13316

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 0, i32 0, !dbg !13318
  %15 = load i32, i32* %14, align 4, !dbg !13318
  %16 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 0, i32 1, !dbg !13319
  %17 = load i32, i32* %16, align 4, !dbg !13319
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.169(i32 noundef 0, i32 noundef %15, i32 noundef %17) #24, !dbg !13320
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !13321
  call void @llvm.dbg.value(metadata i32 %18, metadata !13298, metadata !DIExpression()), !dbg !13300
  br label %19, !dbg !13322

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !13323
  call void @llvm.dbg.value(metadata i32 %20, metadata !13298, metadata !DIExpression()), !dbg !13300
  ret i32 %20, !dbg !13324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !13325 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13329, metadata !DIExpression()), !dbg !13330
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.171() #24, !dbg !13331
  %2 = icmp ne i32 %1, 0, !dbg !13333
  %3 = zext i1 %2 to i32, !dbg !13334
  call void @llvm.dbg.value(metadata i32 %3, metadata !13329, metadata !DIExpression()), !dbg !13330
  ret i32 %3, !dbg !13335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.vnd_sensor_config* nocapture noundef readonly %1) unnamed_addr #10 !dbg !13336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13340, metadata !DIExpression()), !dbg !13343
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %1, metadata !13341, metadata !DIExpression()), !dbg !13343
  %3 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %1, i32 0, i32 0, !dbg !13344
  %4 = load i32, i32* %3, align 4, !dbg !13344
  %5 = lshr i32 %4, 18, !dbg !13345
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !13346
  %7 = load i8, i8* %6, align 1, !dbg !13346
  %8 = zext i8 %7 to i32, !dbg !13347
  %9 = mul i32 %8, %0, !dbg !13348
  call void @llvm.dbg.value(metadata i32 %9, metadata !13342, metadata !DIExpression()), !dbg !13343
  %10 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %1, i32 0, i32 1, !dbg !13349
  %11 = load i32, i32* %10, align 4, !dbg !13349
  %12 = lshr i32 %11, 22, !dbg !13350
  %13 = add nuw nsw i32 %12, 1, !dbg !13351
  %14 = udiv i32 %9, %13, !dbg !13352
  call void @llvm.dbg.value(metadata i32 %14, metadata !13342, metadata !DIExpression()), !dbg !13343
  ret i32 %14, !dbg !13353
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.167() unnamed_addr #5 !dbg !13354 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13355
  %2 = lshr i32 %1, 1, !dbg !13356
  %3 = and i32 %2, 1, !dbg !13356
  ret i32 %3, !dbg !13357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.168() unnamed_addr #16 !dbg !13358 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13359
  %2 = or i32 %1, 1, !dbg !13359
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13359
  ret void, !dbg !13360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.169(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !13361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13363, metadata !DIExpression()), !dbg !13366
  call void @llvm.dbg.value(metadata i32 %1, metadata !13364, metadata !DIExpression()), !dbg !13366
  call void @llvm.dbg.value(metadata i32 %2, metadata !13365, metadata !DIExpression()), !dbg !13366
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13367
  %5 = and i32 %4, -16580609, !dbg !13367
  %6 = or i32 %1, %0, !dbg !13367
  %7 = or i32 %6, %2, !dbg !13367
  %8 = or i32 %7, %5, !dbg !13367
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13367
  ret void, !dbg !13368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13373, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13374, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i32 0, metadata !13375, metadata !DIExpression()), !dbg !13377
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13378
  %4 = load i32, i32* %3, align 4, !dbg !13378
  %5 = lshr i32 %4, 4, !dbg !13378
  %6 = and i32 %5, 15, !dbg !13378
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13378
  %8 = load i8, i8* %7, align 1, !dbg !13378
  %9 = zext i8 %8 to i32, !dbg !13378
  %10 = lshr i32 %0, %9, !dbg !13378
  call void @llvm.dbg.value(metadata i32 %10, metadata !13376, metadata !DIExpression()), !dbg !13377
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13379
  %12 = icmp ult i32 %11, %10, !dbg !13381
  br i1 %12, label %13, label %16, !dbg !13382

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %14, metadata !13375, metadata !DIExpression()), !dbg !13377
  %15 = icmp eq i32 %14, 0, !dbg !13385
  br i1 %15, label %16, label %30, !dbg !13387

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.170() #24, !dbg !13388
  br label %17, !dbg !13390

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.171() #24, !dbg !13391
  %19 = icmp eq i32 %18, 1, !dbg !13392
  br i1 %19, label %20, label %17, !dbg !13390, !llvm.loop !13393

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13395
  tail call fastcc void @LL_RCC_SetAHBPrescaler.172(i32 noundef %21) #24, !dbg !13396
  tail call fastcc void @LL_RCC_SetSysClkSource.173() #24, !dbg !13397
  br label %22, !dbg !13398

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.174() #24, !dbg !13399
  %24 = icmp eq i32 %23, 12, !dbg !13400
  br i1 %24, label %25, label %22, !dbg !13398, !llvm.loop !13401

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13403
  %27 = load i32, i32* %26, align 4, !dbg !13403
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.175(i32 noundef %27) #24, !dbg !13404
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13405
  %29 = load i32, i32* %28, align 4, !dbg !13405
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.176(i32 noundef %29) #24, !dbg !13406
  br label %30, !dbg !13407

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13408
  %33 = icmp ugt i32 %32, %10, !dbg !13410
  br i1 %33, label %34, label %36, !dbg !13411

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13412
  call void @llvm.dbg.value(metadata i32 %35, metadata !13375, metadata !DIExpression()), !dbg !13377
  br label %36, !dbg !13414

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13377
  call void @llvm.dbg.value(metadata i32 %37, metadata !13375, metadata !DIExpression()), !dbg !13377
  %38 = icmp eq i32 %37, 0, !dbg !13415
  br i1 %38, label %39, label %40, !dbg !13417

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13418
  br label %40, !dbg !13420

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.170() unnamed_addr #16 !dbg !13422 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13423
  %2 = or i32 %1, 16777216, !dbg !13423
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13423
  ret void, !dbg !13424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.171() unnamed_addr #5 !dbg !13425 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13426
  %2 = lshr i32 %1, 25, !dbg !13427
  %3 = and i32 %2, 1, !dbg !13427
  ret i32 %3, !dbg !13428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.172(i32 noundef %0) unnamed_addr #16 !dbg !13429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13431, metadata !DIExpression()), !dbg !13432
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13433
  %3 = and i32 %2, -241, !dbg !13433
  %4 = or i32 %3, %0, !dbg !13433
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13433
  ret void, !dbg !13434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.173() unnamed_addr #16 !dbg !13435 {
  call void @llvm.dbg.value(metadata i32 3, metadata !13437, metadata !DIExpression()), !dbg !13438
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13439
  %2 = or i32 %1, 3, !dbg !13439
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13439
  ret void, !dbg !13440
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.174() unnamed_addr #5 !dbg !13441 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13442
  %2 = and i32 %1, 12, !dbg !13442
  ret i32 %2, !dbg !13443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.175(i32 noundef %0) unnamed_addr #16 !dbg !13444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13446, metadata !DIExpression()), !dbg !13447
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13448
  %3 = and i32 %2, -1793, !dbg !13448
  %4 = or i32 %3, %0, !dbg !13448
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13448
  ret void, !dbg !13449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.176(i32 noundef %0) unnamed_addr #16 !dbg !13450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13452, metadata !DIExpression()), !dbg !13453
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13454
  %3 = and i32 %2, -14337, !dbg !13454
  %4 = or i32 %3, %0, !dbg !13454
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13454
  ret void, !dbg !13455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.vnd_sensor_config* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !13456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13460, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i32 %1, metadata !13461, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %2, metadata !13462, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13463, metadata !DIExpression()), !dbg !13466
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13467
  %6 = icmp eq i32 %5, 0, !dbg !13469
  br i1 %6, label %7, label %25, !dbg !13470

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.vnd_sensor_config* noundef %2) #24, !dbg !13471
  call void @llvm.dbg.value(metadata i32 %8, metadata !13465, metadata !DIExpression()), !dbg !13466
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !13473
  %10 = icmp eq i32 %9, 1, !dbg !13475
  br i1 %10, label %19, label %11, !dbg !13476

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13477
  br i1 %12, label %13, label %14, !dbg !13480

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13481
  br label %15, !dbg !13483

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !13484
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !13486
  br label %16, !dbg !13487

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !13488
  %18 = icmp eq i32 %17, 1, !dbg !13489
  br i1 %18, label %19, label %16, !dbg !13487, !llvm.loop !13490

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %2, i32 0, i32 0, !dbg !13492
  %21 = load i32, i32* %20, align 4, !dbg !13492
  %22 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %2, i32 0, i32 1, !dbg !13493
  %23 = load i32, i32* %22, align 4, !dbg !13493
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.169(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #24, !dbg !13494
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !13495
  call void @llvm.dbg.value(metadata i32 %24, metadata !13464, metadata !DIExpression()), !dbg !13466
  br label %25, !dbg !13496

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !13497
  call void @llvm.dbg.value(metadata i32 %26, metadata !13464, metadata !DIExpression()), !dbg !13466
  ret i32 %26, !dbg !13498
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !13499 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13500
  %2 = lshr i32 %1, 17, !dbg !13501
  %3 = and i32 %2, 1, !dbg !13501
  ret i32 %3, !dbg !13502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !13503 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13504
  %2 = or i32 %1, 262144, !dbg !13504
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13504
  ret void, !dbg !13505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !13506 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13507
  %2 = and i32 %1, -262145, !dbg !13507
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13507
  ret void, !dbg !13508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !13509 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13510
  %2 = or i32 %1, 65536, !dbg !13510
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13510
  ret void, !dbg !13511
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13512 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13515, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13515, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13515, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13531
  ret void, !dbg !13532
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13533 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13537, metadata !DIExpression()), !dbg !13539
  %2 = icmp eq i8* %0, null, !dbg !13540
  br i1 %2, label %29, label %3, !dbg !13542

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13543
  %5 = icmp eq i8 %4, 0, !dbg !13544
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13545
  br i1 %6, label %29, label %8, !dbg !13545

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13538, metadata !DIExpression()), !dbg !13539
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13546

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13538, metadata !DIExpression()), !dbg !13539
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13548
  br i1 %10, label %11, label %15, !dbg !13553

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13554
  %13 = load i8*, i8** %12, align 4, !dbg !13554
  %14 = icmp eq i8* %13, %0, !dbg !13555
  br i1 %14, label %29, label %15, !dbg !13556

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13557
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13538, metadata !DIExpression()), !dbg !13539
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13558
  br i1 %17, label %7, label %8, !dbg !13559, !llvm.loop !13560

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13538, metadata !DIExpression()), !dbg !13539
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13562
  br i1 %20, label %21, label %26, !dbg !13566

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13567
  %23 = load i8*, i8** %22, align 4, !dbg !13567
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13568
  %25 = icmp eq i32 %24, 0, !dbg !13569
  br i1 %25, label %29, label %26, !dbg !13570

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13571
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13538, metadata !DIExpression()), !dbg !13539
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13572
  br i1 %28, label %29, label %18, !dbg !13546, !llvm.loop !13573

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13539
  ret %struct.device* %30, !dbg !13575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !13576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13580, metadata !DIExpression()), !dbg !13581
  %2 = icmp eq %struct.device* %0, null, !dbg !13582
  br i1 %2, label %14, label %3, !dbg !13584

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13585
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13585
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13586
  %7 = load i8, i8* %6, align 1, !dbg !13586
  %8 = and i8 %7, 1, !dbg !13586
  %9 = icmp eq i8 %8, 0, !dbg !13586
  br i1 %9, label %14, label %10, !dbg !13587

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13588
  %12 = load i8, i8* %11, align 1, !dbg !13588
  %13 = icmp eq i8 %12, 0, !dbg !13589
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13581
  ret i1 %15, !dbg !13590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !13591 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13596, metadata !DIExpression()), !dbg !13597
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13598
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13599
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13600 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13608, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13609, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata i8* %2, metadata !13610, metadata !DIExpression()), !dbg !13613
  %5 = bitcast i32* %4 to i8*, !dbg !13614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13614
  call void @llvm.dbg.value(metadata i32 0, metadata !13611, metadata !DIExpression()), !dbg !13613
  store i32 0, i32* %4, align 4, !dbg !13615
  call void @llvm.dbg.value(metadata i32* %4, metadata !13611, metadata !DIExpression(DW_OP_deref)), !dbg !13613
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13616
  call void @llvm.dbg.value(metadata i16* %6, metadata !13612, metadata !DIExpression()), !dbg !13613
  %7 = load i32, i32* %4, align 4, !dbg !13617
  call void @llvm.dbg.value(metadata i32 %7, metadata !13611, metadata !DIExpression()), !dbg !13613
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13618
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13619
  ret i32 %8, !dbg !13620
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13621 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13625, metadata !DIExpression()), !dbg !13631
  call void @llvm.dbg.value(metadata i32* %1, metadata !13626, metadata !DIExpression()), !dbg !13631
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13632
  %4 = load i16*, i16** %3, align 4, !dbg !13632
  call void @llvm.dbg.value(metadata i16* %4, metadata !13627, metadata !DIExpression()), !dbg !13631
  %5 = icmp eq i16* %4, null, !dbg !13633
  br i1 %5, label %14, label %6, !dbg !13634

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13635
  call void @llvm.dbg.value(metadata i32 %7, metadata !13628, metadata !DIExpression()), !dbg !13635
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13636
  %9 = load i16, i16* %8, align 2, !dbg !13636
  %10 = add i16 %9, -32767, !dbg !13637
  %11 = icmp ult i16 %10, 2, !dbg !13637
  %12 = add i32 %7, 1, !dbg !13638
  call void @llvm.dbg.value(metadata i32 %12, metadata !13628, metadata !DIExpression()), !dbg !13635
  br i1 %11, label %13, label %6, !dbg !13637, !llvm.loop !13640

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13643
  br label %14, !dbg !13644

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13646 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13650, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.value(metadata i32 %1, metadata !13651, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13652, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.value(metadata i8* %3, metadata !13653, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.value(metadata i32 0, metadata !13654, metadata !DIExpression()), !dbg !13662
  %5 = icmp eq i32 %1, 0, !dbg !13663
  br i1 %5, label %16, label %8, !dbg !13664

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13654, metadata !DIExpression()), !dbg !13662
  %7 = icmp eq i32 %15, %1, !dbg !13663
  br i1 %7, label %16, label %8, !dbg !13664, !llvm.loop !13665

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13654, metadata !DIExpression()), !dbg !13662
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13667
  %11 = load i16, i16* %10, align 2, !dbg !13667
  call void @llvm.dbg.value(metadata i16 %11, metadata !13656, metadata !DIExpression()), !dbg !13668
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13669
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13659, metadata !DIExpression()), !dbg !13668
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13670
  call void @llvm.dbg.value(metadata i32 %13, metadata !13660, metadata !DIExpression()), !dbg !13668
  %14 = icmp slt i32 %13, 0, !dbg !13671
  %15 = add nuw i32 %9, 1, !dbg !13673
  call void @llvm.dbg.value(metadata i32 %15, metadata !13654, metadata !DIExpression()), !dbg !13662
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13675 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13679, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13680, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13681, metadata !DIExpression()), !dbg !13682
  %2 = sext i16 %0 to i32, !dbg !13683
  %3 = icmp slt i16 %0, 1, !dbg !13685
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13686
  %6 = add nsw i32 %2, -1, !dbg !13686
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13686
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13686
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13680, metadata !DIExpression()), !dbg !13682
  ret %struct.device* %8, !dbg !13687
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13688 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13690, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13691, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.value(metadata i8* %2, metadata !13692, metadata !DIExpression()), !dbg !13695
  %5 = bitcast i32* %4 to i8*, !dbg !13696
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13696
  call void @llvm.dbg.value(metadata i32 0, metadata !13693, metadata !DIExpression()), !dbg !13695
  store i32 0, i32* %4, align 4, !dbg !13697
  call void @llvm.dbg.value(metadata i32* %4, metadata !13693, metadata !DIExpression(DW_OP_deref)), !dbg !13695
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13698
  call void @llvm.dbg.value(metadata i16* %6, metadata !13694, metadata !DIExpression()), !dbg !13695
  %7 = load i32, i32* %4, align 4, !dbg !13699
  call void @llvm.dbg.value(metadata i32 %7, metadata !13693, metadata !DIExpression()), !dbg !13695
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13700
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13701
  ret i32 %8, !dbg !13702
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13705, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata i32* %1, metadata !13706, metadata !DIExpression()), !dbg !13710
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13711
  %4 = load i16*, i16** %3, align 4, !dbg !13711
  call void @llvm.dbg.value(metadata i16* %4, metadata !13707, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata i32 0, metadata !13708, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata i32 0, metadata !13709, metadata !DIExpression()), !dbg !13710
  %5 = icmp eq i16* %4, null, !dbg !13712
  br i1 %5, label %22, label %6, !dbg !13714

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13708, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata i16* %8, metadata !13707, metadata !DIExpression()), !dbg !13710
  %9 = load i16, i16* %8, align 2, !dbg !13715
  %10 = icmp eq i16 %9, -32768, !dbg !13719
  call void @llvm.dbg.value(metadata i32 undef, metadata !13708, metadata !DIExpression()), !dbg !13710
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13720
  call void @llvm.dbg.value(metadata i16* %11, metadata !13707, metadata !DIExpression()), !dbg !13710
  %12 = zext i1 %10 to i32, !dbg !13721
  %13 = add i32 %7, %12, !dbg !13721
  call void @llvm.dbg.value(metadata i32 %13, metadata !13708, metadata !DIExpression()), !dbg !13710
  %14 = icmp eq i32 %13, 2, !dbg !13722
  br i1 %14, label %15, label %6, !dbg !13723

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13710
  call void @llvm.dbg.value(metadata i32 %16, metadata !13709, metadata !DIExpression()), !dbg !13710
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13724
  %18 = load i16, i16* %17, align 2, !dbg !13724
  %19 = icmp eq i16 %18, 32767, !dbg !13725
  %20 = add i32 %16, 1, !dbg !13726
  call void @llvm.dbg.value(metadata i32 %20, metadata !13709, metadata !DIExpression()), !dbg !13710
  br i1 %19, label %21, label %15, !dbg !13728, !llvm.loop !13729

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13731
  br label %22, !dbg !13732

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13733
  call void @llvm.dbg.value(metadata i16* %23, metadata !13707, metadata !DIExpression()), !dbg !13710
  ret i16* %23, !dbg !13734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !13735 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13738
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13739
  ret i32* %2, !dbg !13740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13741 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13889, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13890, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13891, metadata !DIExpression()), !dbg !13892
  ret void, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13898, metadata !DIExpression()), !dbg !13900
  call void @llvm.dbg.value(metadata i32 %1, metadata !13899, metadata !DIExpression()), !dbg !13900
  ret void, !dbg !13901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13902 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13906, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i32 %1, metadata !13907, metadata !DIExpression()), !dbg !13908
  ret void, !dbg !13909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13914, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i8* %1, metadata !13915, metadata !DIExpression()), !dbg !13916
  ret i32 -134, !dbg !13917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13922, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i8* %1, metadata !13923, metadata !DIExpression()), !dbg !13924
  ret i32 -134, !dbg !13925
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13929, metadata !DIExpression()), !dbg !13930
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13931, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 undef, metadata !13934, metadata !DIExpression()) #23, !dbg !13938
  call void @llvm.dbg.value(metadata i32 undef, metadata !13935, metadata !DIExpression()) #23, !dbg !13938
  br label %3, !dbg !13939

3:                                                ; preds = %3, %1
  br label %3, !dbg !13940, !llvm.loop !13943
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13950, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13951, metadata !DIExpression()), !dbg !13952
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.181, i32 0, i32 0), i32 noundef 69) #25, !dbg !13953
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13958
  unreachable, !dbg !13958
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13961, metadata !DIExpression()), !dbg !13962
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13963
  unreachable, !dbg !13963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13966, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13967, metadata !DIExpression()), !dbg !13970
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13971, !srcloc !13937
  call void @llvm.dbg.value(metadata i32 undef, metadata !13934, metadata !DIExpression()) #23, !dbg !13973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13935, metadata !DIExpression()) #23, !dbg !13973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13968, metadata !DIExpression()), !dbg !13970
  %4 = tail call fastcc %struct.k_thread* @k_current_get.184() #26, !dbg !13974
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13969, metadata !DIExpression()), !dbg !13970
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13975
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.185, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !13975
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13980
  br i1 %6, label %15, label %7, !dbg !13982

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13983, metadata !DIExpression()), !dbg !13988
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13990
  %9 = load i32, i32* %8, align 4, !dbg !13990
  %10 = and i32 %9, 511, !dbg !13991
  %11 = icmp eq i32 %10, 0, !dbg !13992
  br i1 %11, label %13, label %12, !dbg !13993

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 69) #25, !dbg !13994
  br label %13, !dbg !14000

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !14001
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.187, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !14001
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !14006
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13983, metadata !DIExpression()), !dbg !14007
  br label %17, !dbg !14012

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !14001
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.187, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #25, !dbg !14001
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !14006
  br label %17, !dbg !14013

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %18, metadata !13934, metadata !DIExpression()) #23, !dbg !13973
  call void @llvm.dbg.value(metadata i32 %18, metadata !13968, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #23, !dbg !14017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !14019, !srcloc !14020
  tail call fastcc void @k_thread_abort.188(%struct.k_thread* noundef %4) #24, !dbg !14021
  ret void, !dbg !14024
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.184() unnamed_addr #12 !dbg !14025 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.196() #26, !dbg !14029
  ret %struct.k_thread* %1, !dbg !14030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !14031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14035, metadata !DIExpression()), !dbg !14036
  %2 = icmp ult i32 %0, 5, !dbg !14037
  br i1 %2, label %3, label %6, !dbg !14037

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14037
  %5 = load i8*, i8** %4, align 4, !dbg !14037
  br label %6, !dbg !14037

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.190, i32 0, i32 0), %1 ], !dbg !14038
  ret i8* %7, !dbg !14040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14045, metadata !DIExpression()), !dbg !14047
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14048
  br i1 %2, label %9, label %3, !dbg !14049

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !14050
  call void @llvm.dbg.value(metadata i8* %4, metadata !14046, metadata !DIExpression()), !dbg !14047
  %5 = icmp eq i8* %4, null, !dbg !14051
  br i1 %5, label %9, label %6, !dbg !14053

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14054
  %8 = icmp eq i8 %7, 0, !dbg !14055
  br i1 %8, label %9, label %10, !dbg !14056

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.189, i32 0, i32 0), metadata !14046, metadata !DIExpression()), !dbg !14047
  br label %10, !dbg !14057

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.189, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14047
  call void @llvm.dbg.value(metadata i8* %11, metadata !14046, metadata !DIExpression()), !dbg !14047
  ret i8* %11, !dbg !14059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.188(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14064, metadata !DIExpression()), !dbg !14065
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14066, !srcloc !14068
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !14069
  ret void, !dbg !14070
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.196() unnamed_addr #12 !dbg !14071 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14072, !srcloc !14074
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !14075
  ret %struct.k_thread* %1, !dbg !14076
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14081, metadata !DIExpression()), !dbg !14084
  call void @llvm.dbg.value(metadata i32 %1, metadata !14082, metadata !DIExpression()), !dbg !14084
  call void @llvm.dbg.value(metadata i32 %2, metadata !14083, metadata !DIExpression()), !dbg !14084
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !14085
  ret void, !dbg !14086
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14087 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14091, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata i8* %1, metadata !14092, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata i32 %2, metadata !14093, metadata !DIExpression()), !dbg !14094
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !14095
  ret void, !dbg !14096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14097 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !14098
  ret void, !dbg !14099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14102, metadata !DIExpression()), !dbg !14103
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !14104
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14105
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14106
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14107
  %4 = trunc i32 %0 to i8, !dbg !14108
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14109
  store i8 %4, i8* %5, align 4, !dbg !14110
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14111
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !14112
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14113
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14114
  store i8* %8, i8** %9, align 4, !dbg !14115
  ret void, !dbg !14116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14119, metadata !DIExpression()), !dbg !14125
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14126
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14120, metadata !DIExpression()), !dbg !14125
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14127
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14121, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i8* null, metadata !14124, metadata !DIExpression()), !dbg !14125
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14128
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14129
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !14130
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !14131
  ret void, !dbg !14132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14133 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14137, metadata !DIExpression()), !dbg !14138
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14139
  ret i8* %2, !dbg !14140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14146, metadata !DIExpression()), !dbg !14147
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14148
  %3 = load i8, i8* %2, align 1, !dbg !14149
  %4 = and i8 %3, -5, !dbg !14149
  store i8 %4, i8* %2, align 1, !dbg !14149
  ret void, !dbg !14150
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14151 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14154
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14155
  %3 = ptrtoint i8* %2 to i32, !dbg !14164
  %4 = add i32 %3, 2048, !dbg !14165
  call void @llvm.dbg.value(metadata i32 %4, metadata !14159, metadata !DIExpression()) #23, !dbg !14166
  call void @llvm.dbg.value(metadata i32 %4, metadata !14167, metadata !DIExpression()) #23, !dbg !14170
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14172, !srcloc !14173
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14174
  %6 = or i32 %5, 512, !dbg !14174
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14174
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -2, i32 noundef 255) #25, !dbg !14175
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -5, i32 noundef 0) #25, !dbg !14178
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -12, i32 noundef 0) #25, !dbg !14179
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -11, i32 noundef 0) #25, !dbg !14180
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -10, i32 noundef 0) #25, !dbg !14181
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -4, i32 noundef 0) #25, !dbg !14182
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14183
  %8 = or i32 %7, 458752, !dbg !14183
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14183
  tail call void @z_arm_fault_init() #25, !dbg !14184
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14185
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14186
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14189
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14190
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14191
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14192
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !14192
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14153, metadata !DIExpression()), !dbg !14193
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14194
  call void @z_device_state_init() #25, !dbg !14195
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14196
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14197
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14198
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14199
  unreachable, !dbg !14199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2421, metadata !DIExpression()), !dbg !14200
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14201
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14201
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2422, metadata !DIExpression()), !dbg !14200
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2422, metadata !DIExpression()), !dbg !14200
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14202
  br i1 %7, label %8, label %35, !dbg !14203

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2422, metadata !DIExpression()), !dbg !14200
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14204
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14204
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2432, metadata !DIExpression()), !dbg !14205
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14206
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14206
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14207
  call void @llvm.dbg.value(metadata i32 %14, metadata !2436, metadata !DIExpression()), !dbg !14205
  %15 = icmp eq %struct.device* %11, null, !dbg !14208
  br i1 %15, label %32, label %16, !dbg !14210

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14211
  br i1 %17, label %26, label %18, !dbg !14214

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14215
  call void @llvm.dbg.value(metadata i32 %19, metadata !2436, metadata !DIExpression()), !dbg !14205
  %20 = icmp ult i32 %19, 255, !dbg !14217
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14217
  call void @llvm.dbg.value(metadata i32 %21, metadata !2436, metadata !DIExpression()), !dbg !14205
  %22 = trunc i32 %21 to i8, !dbg !14218
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14219
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14219
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14220
  store i8 %22, i8* %25, align 1, !dbg !14221
  br label %26, !dbg !14222

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14223
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14223
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14224
  %30 = load i8, i8* %29, align 1, !dbg !14225
  %31 = or i8 %30, 1, !dbg !14225
  store i8 %31, i8* %29, align 1, !dbg !14225
  br label %32, !dbg !14226

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14227
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2422, metadata !DIExpression()), !dbg !14200
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14202
  br i1 %34, label %8, label %35, !dbg !14203, !llvm.loop !14228

35:                                               ; preds = %32, %1
  ret void, !dbg !14230
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.205(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !14231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14233, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.value(metadata i32 %1, metadata !14234, metadata !DIExpression()), !dbg !14235
  %3 = trunc i32 %1 to i8, !dbg !14236
  %4 = shl i8 %3, 4, !dbg !14236
  %5 = and i32 %0, 15, !dbg !14239
  %6 = add nsw i32 %5, -4, !dbg !14240
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14241
  store volatile i8 %4, i8* %7, align 1, !dbg !14242
  ret void, !dbg !14243
}

; Function Attrs: optsize
declare !dbg !14244 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #6 !dbg !14245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14248, metadata !DIExpression()), !dbg !14249
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14250
  store i8 1, i8* %2, align 1, !dbg !14251
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14252
  store i8 1, i8* %3, align 4, !dbg !14253
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14254
  store i32 0, i32* %4, align 4, !dbg !14255
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14256
  store i32 0, i32* %5, align 4, !dbg !14257
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14258
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14259
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14260
  ret void, !dbg !14261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14262 {
  tail call void @z_sched_init() #25, !dbg !14267
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14268
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.206, i32 0, i32 0)) #25, !dbg !14269
  call void @llvm.dbg.value(metadata i8* %1, metadata !14266, metadata !DIExpression()), !dbg !14270
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14271
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14272
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14273
  ret i8* %1, !dbg !14274
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14275 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14279, metadata !DIExpression()), !dbg !14280
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14281
  unreachable, !dbg !14282
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14283 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14285, metadata !DIExpression()), !dbg !14288
  call void @llvm.dbg.value(metadata i8* %1, metadata !14286, metadata !DIExpression()), !dbg !14288
  call void @llvm.dbg.value(metadata i8* %2, metadata !14287, metadata !DIExpression()), !dbg !14288
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14289
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14290
  tail call void @boot_banner() #25, !dbg !14291
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14292
  tail call void @z_init_static_threads() #25, !dbg !14293
  tail call void @main() #25, !dbg !14294
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14295
  %5 = and i8 %4, -2, !dbg !14295
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14295
  ret void, !dbg !14296
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14297 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14307, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i8* %1, metadata !14308, metadata !DIExpression()), !dbg !14309
  ret void, !dbg !14310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14311 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14313, metadata !DIExpression()), !dbg !14315
  call void @llvm.dbg.value(metadata i8* %1, metadata !14314, metadata !DIExpression()), !dbg !14315
  ret void, !dbg !14316
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14317 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14318, !srcloc !14325
  call void @llvm.dbg.value(metadata i32 %1, metadata !14321, metadata !DIExpression()) #23, !dbg !14326
  %2 = icmp ne i32 %1, 0, !dbg !14327
  ret i1 %2, !dbg !14328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !14329 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14330
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14331
  %3 = load i8, i8* %2, align 4, !dbg !14332
  %4 = or i8 %3, 1, !dbg !14332
  store i8 %4, i8* %2, align 4, !dbg !14332
  ret void, !dbg !14333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !14334 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14335
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14336
  %3 = load i8, i8* %2, align 4, !dbg !14337
  %4 = and i8 %3, -2, !dbg !14337
  store i8 %4, i8* %2, align 4, !dbg !14337
  ret void, !dbg !14338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !14339 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14340
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14341
  %3 = load i8, i8* %2, align 4, !dbg !14341
  %4 = and i8 %3, 1, !dbg !14342
  %5 = icmp ne i8 %4, 0, !dbg !14343
  ret i1 %5, !dbg !14344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14349, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata i8* %1, metadata !14350, metadata !DIExpression()), !dbg !14351
  ret i32 -88, !dbg !14352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14357, metadata !DIExpression()), !dbg !14358
  ret i8* null, !dbg !14359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14360 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14364, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8* %1, metadata !14365, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i32 %2, metadata !14366, metadata !DIExpression()), !dbg !14367
  ret i32 -88, !dbg !14368
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2445 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2559, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i8* %1, metadata !2560, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 %2, metadata !2561, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 0, metadata !2562, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i8 undef, metadata !2564, metadata !DIExpression()), !dbg !14369
  %4 = icmp eq i8* %1, null, !dbg !14370
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14372
  br i1 %6, label %46, label %7, !dbg !14372

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14373
  %9 = load i8, i8* %8, align 1, !dbg !14373
  call void @llvm.dbg.value(metadata i8 %9, metadata !2564, metadata !DIExpression()), !dbg !14369
  %10 = add i32 %2, -1, !dbg !14374
  call void @llvm.dbg.value(metadata i32 %10, metadata !2561, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i8 0, metadata !2565, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i8 %9, metadata !2564, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 0, metadata !2562, metadata !DIExpression()), !dbg !14369
  %11 = icmp eq i8 %9, 0, !dbg !14376
  br i1 %11, label %12, label %15, !dbg !14378

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14379
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14380
  store i8 0, i8* %14, align 1, !dbg !14381
  br label %46, !dbg !14382

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2565, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i8 %17, metadata !2564, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 %18, metadata !2562, metadata !DIExpression()), !dbg !14369
  %19 = zext i8 %17 to i32, !dbg !14383
  %20 = zext i8 %16 to i32, !dbg !14384
  %21 = shl nuw i32 1, %20, !dbg !14384
  call void @llvm.dbg.value(metadata i32 %21, metadata !2563, metadata !DIExpression()), !dbg !14369
  %22 = and i32 %21, %19, !dbg !14386
  %23 = icmp eq i32 %22, 0, !dbg !14388
  br i1 %23, label %42, label %24, !dbg !14389

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14390
  %26 = sub i32 %10, %18, !dbg !14391
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14392
  %28 = load i8*, i8** %27, align 4, !dbg !14392
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14393
  %30 = load i32, i32* %29, align 4, !dbg !14393
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14394
  %32 = add i32 %31, %18, !dbg !14395
  call void @llvm.dbg.value(metadata i32 %32, metadata !2562, metadata !DIExpression()), !dbg !14369
  %33 = trunc i32 %21 to i8, !dbg !14396
  %34 = xor i8 %33, -1, !dbg !14396
  %35 = and i8 %17, %34, !dbg !14396
  call void @llvm.dbg.value(metadata i8 %35, metadata !2564, metadata !DIExpression()), !dbg !14369
  %36 = icmp eq i8 %35, 0, !dbg !14397
  br i1 %36, label %12, label %37, !dbg !14399

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14400
  %39 = sub i32 %10, %32, !dbg !14402
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.209, i32 0, i32 0), i32 noundef 1) #24, !dbg !14403
  %41 = add i32 %40, %32, !dbg !14404
  call void @llvm.dbg.value(metadata i32 %41, metadata !2562, metadata !DIExpression()), !dbg !14369
  br label %42, !dbg !14405

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14369
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14369
  call void @llvm.dbg.value(metadata i8 %44, metadata !2564, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 %43, metadata !2562, metadata !DIExpression()), !dbg !14369
  %45 = add i8 %16, 1, !dbg !14406
  call void @llvm.dbg.value(metadata i8 %45, metadata !2565, metadata !DIExpression()), !dbg !14375
  br label %15, !dbg !14378

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.210, i32 0, i32 0), %3 ], !dbg !14369
  ret i8* %47, !dbg !14407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14408 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14412, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i32 %1, metadata !14413, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i8* %2, metadata !14414, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i32 %3, metadata !14415, metadata !DIExpression()), !dbg !14417
  %5 = icmp ult i32 %1, %3, !dbg !14418
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14418
  call void @llvm.dbg.value(metadata i32 %6, metadata !14416, metadata !DIExpression()), !dbg !14417
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14419
  ret i32 %6, !dbg !14420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14421 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14425, metadata !DIExpression()), !dbg !14426
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14427
  ret void, !dbg !14428
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14438, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14439, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i32 %2, metadata !14440, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14441, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i8* %4, metadata !14442, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i8* %5, metadata !14443, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i8* %6, metadata !14444, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i32 %7, metadata !14445, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i32 %8, metadata !14446, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i8* undef, metadata !14447, metadata !DIExpression()), !dbg !14449
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14450
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !14451
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14452
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14453
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14454
  call void @llvm.dbg.value(metadata i8* %13, metadata !14448, metadata !DIExpression()), !dbg !14449
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14455
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14456
  store i8* null, i8** %14, align 4, !dbg !14457
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14458
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14458
  br i1 %16, label %20, label %17, !dbg !14460

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14461
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14461
  br label %20, !dbg !14462

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14449
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14463
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14465
  ret i8* %13, !dbg !14466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !14467 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14472, metadata !DIExpression()), !dbg !14473
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14474
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14475
  ret void, !dbg !14476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !14477 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14482, metadata !DIExpression()), !dbg !14486
  call void @llvm.dbg.value(metadata i32 %1, metadata !14483, metadata !DIExpression()), !dbg !14486
  call void @llvm.dbg.value(metadata i32 %2, metadata !14484, metadata !DIExpression()), !dbg !14486
  call void @llvm.dbg.value(metadata i32 %3, metadata !14485, metadata !DIExpression()), !dbg !14486
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14487
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14488
  %6 = trunc i32 %3 to i8, !dbg !14489
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14490
  store i8 %6, i8* %7, align 4, !dbg !14491
  %8 = trunc i32 %2 to i8, !dbg !14492
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14493
  store i8 %8, i8* %9, align 1, !dbg !14494
  %10 = trunc i32 %1 to i8, !dbg !14495
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14496
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14496
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14496
  store i8 %10, i8* %13, align 2, !dbg !14497
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14498
  store i8 0, i8* %14, align 1, !dbg !14499
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14500
  ret void, !dbg !14501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !14502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14507, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %2, metadata !14508, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 0, metadata !14513, metadata !DIExpression()), !dbg !14514
  %4 = add i32 %2, 7, !dbg !14515
  %5 = and i32 %4, -8, !dbg !14515
  %6 = add i32 %5, 64, !dbg !14515
  call void @llvm.dbg.value(metadata i32 %6, metadata !14509, metadata !DIExpression()), !dbg !14514
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.220(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14517
  call void @llvm.dbg.value(metadata i8* %7, metadata !14512, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %5, metadata !14510, metadata !DIExpression()), !dbg !14514
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14518
  call void @llvm.dbg.value(metadata i8* %8, metadata !14511, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 0, metadata !14513, metadata !DIExpression()), !dbg !14514
  %9 = ptrtoint i8* %7 to i32, !dbg !14519
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14520
  store i32 %9, i32* %10, align 4, !dbg !14521
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14522
  store i32 %5, i32* %11, align 4, !dbg !14523
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14524
  store i32 0, i32* %12, align 4, !dbg !14525
  call void @llvm.dbg.value(metadata i8* %8, metadata !14511, metadata !DIExpression()), !dbg !14514
  ret i8* %8, !dbg !14526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.220(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14527 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14531, metadata !DIExpression()), !dbg !14532
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14533
  ret i8* %2, !dbg !14534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14535 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14540, metadata !DIExpression()), !dbg !14541
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14542
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14543
  ret void, !dbg !14544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14545 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14547, metadata !DIExpression()), !dbg !14548
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14549
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14550
  ret void, !dbg !14551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14552 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14556, metadata !DIExpression()), !dbg !14557
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14558
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14559
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14560
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14561
  ret void, !dbg !14562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !14563 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14568, metadata !DIExpression()), !dbg !14569
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14570
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14571
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14572
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14573
  ret void, !dbg !14574
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14575 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14592, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14583, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14584, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 %2, metadata !14585, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14586, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i8* %4, metadata !14587, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i8* %5, metadata !14588, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i8* %6, metadata !14589, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 %7, metadata !14590, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 %8, metadata !14591, metadata !DIExpression()), !dbg !14593
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !14594
  %13 = icmp eq i64 %11, -1, !dbg !14595
  br i1 %13, label %15, label %14, !dbg !14597

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14598
  br label %15, !dbg !14600

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14602 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14607, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14606, metadata !DIExpression()), !dbg !14608
  %4 = icmp eq i64 %3, 0, !dbg !14609
  br i1 %4, label %5, label %6, !dbg !14611

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14612
  br label %7, !dbg !14614

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14615
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14617
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14622, metadata !DIExpression()), !dbg !14623
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14624, !srcloc !14626
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14627
  ret void, !dbg !14628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14629 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14632, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14631, metadata !DIExpression()), !dbg !14633
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14634
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14635
  ret void, !dbg !14636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14637 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14639, metadata !DIExpression()), !dbg !14659
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14660

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14661
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14657, metadata !DIExpression()), !dbg !14662
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14663

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14639, metadata !DIExpression()), !dbg !14659
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14664
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14664
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14667
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14667
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14668
  %9 = load i32, i32* %8, align 4, !dbg !14668
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14669
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14669
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14670
  %13 = load i8*, i8** %12, align 4, !dbg !14670
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14671
  %15 = load i8*, i8** %14, align 4, !dbg !14671
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14672
  %17 = load i8*, i8** %16, align 4, !dbg !14672
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14673
  %19 = load i32, i32* %18, align 4, !dbg !14673
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14674
  %21 = load i32, i32* %20, align 4, !dbg !14674
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !14675
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14676
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14677
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14678
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14678
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14679
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14639, metadata !DIExpression()), !dbg !14659
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14680
  br i1 %27, label %2, label %1, !dbg !14660, !llvm.loop !14682

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14661
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14657, metadata !DIExpression()), !dbg !14662
  br label %29, !dbg !14663

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14684
  ret void, !dbg !14685

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14657, metadata !DIExpression()), !dbg !14662
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14686
  %33 = load i32, i32* %32, align 4, !dbg !14686
  %34 = icmp eq i32 %33, -1, !dbg !14690
  br i1 %34, label %43, label %35, !dbg !14691

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14692
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14692
  %38 = icmp sgt i32 %33, 0, !dbg !14694
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14694
  %40 = zext i32 %39 to i64, !dbg !14694
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.223(i64 noundef %40) #24, !dbg !14694
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14695
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !14695
  br label %43, !dbg !14696

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14697
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14657, metadata !DIExpression()), !dbg !14662
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14698
  br i1 %45, label %30, label %29, !dbg !14663, !llvm.loop !14700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.223(i64 noundef %0) unnamed_addr #4 !dbg !14702 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14704, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i64 %0, metadata !14706, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i32 1000, metadata !14709, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i32 10000, metadata !14710, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i8 1, metadata !14711, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i8 0, metadata !14712, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i8 1, metadata !14713, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i8 0, metadata !14714, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i8 1, metadata !14715, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i8 0, metadata !14716, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i64 0, metadata !14717, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata i64 0, metadata !14717, metadata !DIExpression()), !dbg !14721
  %2 = mul i64 %0, 10, !dbg !14723
  ret i64 %2, !dbg !14729
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14730 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14732, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i8* %1, metadata !14733, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i8* %2, metadata !14734, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i8* %3, metadata !14735, metadata !DIExpression()), !dbg !14736
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14737
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14738
  %7 = load i8, i8* %6, align 4, !dbg !14739
  %8 = or i8 %7, 4, !dbg !14739
  store i8 %8, i8* %6, align 4, !dbg !14739
  tail call void @z_thread_essential_clear() #24, !dbg !14740
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14741
  unreachable, !dbg !14741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14746, metadata !DIExpression()), !dbg !14747
  ret i32 -134, !dbg !14748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14749 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14753, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata i32 %1, metadata !14754, metadata !DIExpression()), !dbg !14755
  ret i32 -134, !dbg !14756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #4 !dbg !14757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14764, metadata !DIExpression()), !dbg !14766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14765, metadata !DIExpression()), !dbg !14766
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14767
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14769
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14766
  ret i32 %6, !dbg !14770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #4 !dbg !14771 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14775, metadata !DIExpression()), !dbg !14776
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14777
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14776
  ret i32 %3, !dbg !14779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14780 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14782
  ret void, !dbg !14783
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14786, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.value(metadata i8* %1, metadata !14787, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.value(metadata i8* %2, metadata !14788, metadata !DIExpression()), !dbg !14789
  br label %4, !dbg !14790

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14791, !srcloc !14798
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()) #23, !dbg !14799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14795, metadata !DIExpression()) #23, !dbg !14799
  tail call fastcc void @k_cpu_idle() #24, !dbg !14800
  br label %4, !dbg !14790, !llvm.loop !14801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14803 {
  tail call void @arch_cpu_idle() #25, !dbg !14804
  ret void, !dbg !14805
}

; Function Attrs: optsize
declare !dbg !14806 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14807 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14812, metadata !DIExpression()), !dbg !14815
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14816
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14816
  %5 = load i8, i8* %4, align 2, !dbg !14816
  call void @llvm.dbg.value(metadata i8 %5, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14815
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14817
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14817
  %8 = load i8, i8* %7, align 2, !dbg !14817
  call void @llvm.dbg.value(metadata i8 %8, metadata !14814, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14815
  %9 = icmp eq i8 %8, %5, !dbg !14818
  %10 = sext i8 %5 to i32, !dbg !14820
  %11 = sext i8 %8 to i32, !dbg !14820
  %12 = sub nsw i32 %11, %10, !dbg !14820
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14820
  ret i32 %13, !dbg !14821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14826, metadata !DIExpression()), !dbg !14827
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14828
  %3 = icmp eq i32 %2, 0, !dbg !14830
  br i1 %3, label %8, label %4, !dbg !14831

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14832
  %6 = add i32 %5, %2, !dbg !14834
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14835
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14836
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14837
  br label %8, !dbg !14838

8:                                                ; preds = %4, %1
  ret void, !dbg !14839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14844, metadata !DIExpression()), !dbg !14846
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14847
  call void @llvm.dbg.value(metadata i32 %1, metadata !14845, metadata !DIExpression()), !dbg !14846
  ret i32 %1, !dbg !14848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14853, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata i32 %1, metadata !14854, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata i32 0, metadata !14855, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !14871
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14873, !srcloc !14879
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14873
  call void @llvm.dbg.value(metadata i32 %4, metadata !14876, metadata !DIExpression()) #23, !dbg !14880
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !14880
  call void @llvm.dbg.value(metadata i32 %4, metadata !14870, metadata !DIExpression()) #23, !dbg !14871
  call void @llvm.dbg.value(metadata i32 %4, metadata !14861, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14855, metadata !DIExpression()), !dbg !14863
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14881
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14884
  %6 = icmp sgt i32 %0, 0, !dbg !14885
  %7 = icmp sgt i32 %5, 2, !dbg !14887
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14887
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14887
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14888
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14889
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14890
  call void @llvm.dbg.value(metadata i32 %4, metadata !14891, metadata !DIExpression()) #23, !dbg !14897
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !14897
  call void @llvm.dbg.value(metadata i32 %4, metadata !14899, metadata !DIExpression()) #23, !dbg !14902
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14904, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !14855, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14855, metadata !DIExpression()), !dbg !14863
  ret void, !dbg !14906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14909, metadata !DIExpression()), !dbg !14910
  call void @llvm.dbg.value(metadata i32 %0, metadata !14911, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14926
  call void @llvm.dbg.value(metadata i32 1000, metadata !14914, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i32 10000, metadata !14915, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i8 1, metadata !14916, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i1 true, metadata !14917, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14926
  call void @llvm.dbg.value(metadata i1 true, metadata !14918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14926
  call void @llvm.dbg.value(metadata i8 0, metadata !14919, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i1 true, metadata !14920, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14926
  call void @llvm.dbg.value(metadata i1 false, metadata !14921, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14926
  call void @llvm.dbg.value(metadata i64 0, metadata !14922, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i64 0, metadata !14922, metadata !DIExpression()), !dbg !14926
  %2 = mul i32 %0, 10, !dbg !14928
  ret i32 %2, !dbg !14934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14937, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !14940
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14942, !srcloc !14879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14942
  call void @llvm.dbg.value(metadata i32 %3, metadata !14876, metadata !DIExpression()) #23, !dbg !14944
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !14944
  call void @llvm.dbg.value(metadata i32 %3, metadata !14870, metadata !DIExpression()) #23, !dbg !14940
  call void @llvm.dbg.value(metadata i32 %3, metadata !14938, metadata !DIExpression()), !dbg !14939
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14945
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14947
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14948
  br i1 %6, label %7, label %8, !dbg !14949

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14950
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !14952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !14952
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !14954
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14956, !srcloc !14905
  br label %24, !dbg !14957

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14958
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !14959
  %10 = icmp eq i32 %9, 0, !dbg !14959
  br i1 %10, label %21, label %11, !dbg !14961

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !14962
  br i1 %12, label %13, label %21, !dbg !14963

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14964
  %15 = icmp sgt i32 %14, %0, !dbg !14967
  br i1 %15, label %19, label %16, !dbg !14968

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14969
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !14969
  call void @llvm.dbg.value(metadata i32 %18, metadata !14938, metadata !DIExpression()), !dbg !14939
  br label %22, !dbg !14971

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14972
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14972
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14974
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14939
  call void @llvm.dbg.value(metadata i32 %23, metadata !14938, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata i32 %23, metadata !14891, metadata !DIExpression()) #23, !dbg !14976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !14976
  call void @llvm.dbg.value(metadata i32 %23, metadata !14899, metadata !DIExpression()) #23, !dbg !14978
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14980, !srcloc !14905
  br label %24, !dbg !14981

24:                                               ; preds = %22, %7
  ret void, !dbg !14981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !14982 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14986, metadata !DIExpression()), !dbg !14988
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14989
  %3 = icmp eq i32 %2, 0, !dbg !14989
  br i1 %3, label %16, label %4, !dbg !14990

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14991
  br i1 %5, label %16, label %6, !dbg !14992

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14993
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14993
  %9 = load i8, i8* %8, align 2, !dbg !14993
  %10 = sext i8 %9 to i32, !dbg !14994
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14995
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14996
  br i1 %12, label %16, label %13, !dbg !14997

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14998
  %15 = xor i1 %14, true, !dbg !14999
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14988
  call void @llvm.dbg.value(metadata i1 %17, metadata !14987, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14988
  ret i1 %17, !dbg !15000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15001 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15005, metadata !DIExpression()), !dbg !15007
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15008
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15006, metadata !DIExpression()), !dbg !15007
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !15009
  br i1 %3, label %5, label %4, !dbg !15011

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !15012
  br label %5, !dbg !15014

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15005, metadata !DIExpression()), !dbg !15007
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15015
  ret i32 %6, !dbg !15016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15019, metadata !DIExpression()), !dbg !15021
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15022
  %3 = load i8, i8* %2, align 1, !dbg !15022
  call void @llvm.dbg.value(metadata i8 %3, metadata !15020, metadata !DIExpression()), !dbg !15021
  %4 = and i8 %3, 31, !dbg !15023
  %5 = icmp ne i8 %4, 0, !dbg !15024
  ret i1 %5, !dbg !15025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15026 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15028, metadata !DIExpression()), !dbg !15029
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15030
  br i1 %2, label %3, label %7, !dbg !15032

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15033, metadata !DIExpression()) #23, !dbg !15036
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15039
  %5 = load i8, i8* %4, align 1, !dbg !15040
  %6 = and i8 %5, 127, !dbg !15040
  store i8 %6, i8* %4, align 1, !dbg !15040
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15041, metadata !DIExpression()) #23, !dbg !15044
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15048
  br label %7, !dbg !15049

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15050, metadata !DIExpression()) #23, !dbg !15053
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15055
  %9 = load i8, i8* %8, align 1, !dbg !15056
  %10 = or i8 %9, -128, !dbg !15056
  store i8 %10, i8* %8, align 1, !dbg !15056
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15057, metadata !DIExpression()) #23, !dbg !15060
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15064, metadata !DIExpression()) #23, !dbg !15072
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15070, metadata !DIExpression()) #23, !dbg !15072
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15074
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15071, metadata !DIExpression()) #23, !dbg !15072
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15076
  br i1 %12, label %23, label %13, !dbg !15074

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15071, metadata !DIExpression()) #23, !dbg !15072
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15071, metadata !DIExpression()) #23, !dbg !15072
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !15079
  %17 = icmp sgt i32 %16, 0, !dbg !15082
  br i1 %17, label %18, label %20, !dbg !15083

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15084
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !15086
  br label %25, !dbg !15087

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !15076
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15071, metadata !DIExpression()) #23, !dbg !15072
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15076
  br i1 %22, label %23, label %13, !dbg !15074, !llvm.loop !15088

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15090
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !15091
  br label %25, !dbg !15092

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15093
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15094
  %28 = zext i1 %27 to i32, !dbg !15094
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !15095
  ret void, !dbg !15096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15099, metadata !DIExpression()), !dbg !15100
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !15101
  ret i1 %2, !dbg !15102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !15103 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15105, metadata !DIExpression()), !dbg !15107
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15106, metadata !DIExpression()), !dbg !15107
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15108
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !15109
  ret void, !dbg !15110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15111 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15115, metadata !DIExpression()), !dbg !15116
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !15117
  br i1 %2, label %6, label %3, !dbg !15117

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15118
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15118
  br label %6, !dbg !15117

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15117
  ret %struct._dnode* %7, !dbg !15119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15120 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15124, metadata !DIExpression()), !dbg !15128
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15125, metadata !DIExpression()), !dbg !15128
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15129
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15129
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15126, metadata !DIExpression()), !dbg !15128
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15130
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15131
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15132
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15133
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15134
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15135
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15136
  ret void, !dbg !15137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15142, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15143, metadata !DIExpression()), !dbg !15144
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15145
  br i1 %3, label %6, label %4, !dbg !15146

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15147
  br label %6, !dbg !15146

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15146
  ret %struct._dnode* %7, !dbg !15148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15149 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15153, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15154, metadata !DIExpression()), !dbg !15156
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15157
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15157
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15155, metadata !DIExpression()), !dbg !15156
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15158
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15159
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15160
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15161
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15162
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15163
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15164
  ret void, !dbg !15165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15168, metadata !DIExpression()), !dbg !15170
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15171
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15178, metadata !DIExpression()) #23, !dbg !15180
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15181
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15182
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15182
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15169, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15183, metadata !DIExpression()) #23, !dbg !15189
  call void @llvm.dbg.value(metadata i32 %0, metadata !15188, metadata !DIExpression()) #23, !dbg !15189
  %6 = icmp eq i32 %0, 0, !dbg !15192
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15194
  br i1 %6, label %8, label %15, !dbg !15195

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15196
  br i1 %9, label %15, label %10, !dbg !15198

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15199
  br i1 %11, label %15, label %12, !dbg !15201

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15202
  %14 = icmp eq i32 %13, 0, !dbg !15202
  br i1 %14, label %18, label %15, !dbg !15204

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15205
  br i1 %16, label %18, label %17, !dbg !15208

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15209
  br label %18, !dbg !15211

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15194
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15194
  ret void, !dbg !15212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !15213 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15217, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15218, metadata !DIExpression()), !dbg !15220
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15221
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15219, metadata !DIExpression()), !dbg !15220
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15218, metadata !DIExpression()), !dbg !15220
  ret %struct.k_thread* %3, !dbg !15222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15225, metadata !DIExpression()), !dbg !15226
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15227
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15228
  %4 = xor i1 %3, true, !dbg !15229
  ret i1 %4, !dbg !15230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15231 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15233, metadata !DIExpression()), !dbg !15234
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15235
  %3 = load i16, i16* %2, align 2, !dbg !15235
  %4 = icmp ult i16 %3, 128, !dbg !15236
  %5 = zext i1 %4 to i32, !dbg !15236
  ret i32 %5, !dbg !15237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15238 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15244, metadata !DIExpression()), !dbg !15245
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15246
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15247
  %4 = xor i1 %3, true, !dbg !15248
  ret i1 %4, !dbg !15249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15250 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15256, metadata !DIExpression()), !dbg !15257
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15258
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15258
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15259
  ret i1 %4, !dbg !15260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15263, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15264, metadata !DIExpression()), !dbg !15265
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15266
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15266
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15267
  br i1 %5, label %9, label %6, !dbg !15268

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15269
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15269
  br label %9, !dbg !15268

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15268
  ret %struct._dnode* %10, !dbg !15270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15271 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15275, metadata !DIExpression()), !dbg !15276
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15277
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15277
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15278
  ret i1 %4, !dbg !15279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15280 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15284, metadata !DIExpression()), !dbg !15287
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15288
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15288
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15285, metadata !DIExpression()), !dbg !15287
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15289
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15289
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15286, metadata !DIExpression()), !dbg !15287
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15290
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15291
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15292
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15293
  tail call fastcc void @sys_dnode_init.226(%struct._dnode* noundef %0) #24, !dbg !15294
  ret void, !dbg !15295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.226(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15296 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15298, metadata !DIExpression()), !dbg !15299
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15300
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15301
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15302
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15303
  ret void, !dbg !15304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15305 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15309, metadata !DIExpression()), !dbg !15311
  call void @llvm.dbg.value(metadata i32 128, metadata !15310, metadata !DIExpression()), !dbg !15311
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15312
  %3 = load i8, i8* %2, align 1, !dbg !15312
  %4 = icmp slt i8 %3, 0, !dbg !15313
  ret i1 %4, !dbg !15314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15319, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 %1, metadata !15320, metadata !DIExpression()), !dbg !15321
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15322
  ret i1 %3, !dbg !15323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !15324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15326, metadata !DIExpression()), !dbg !15327
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15328
  ret i1 %2, !dbg !15329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15332, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 %1, metadata !15333, metadata !DIExpression()), !dbg !15334
  %3 = icmp slt i32 %0, %1, !dbg !15335
  ret i1 %3, !dbg !15336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15339, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata i32 0, metadata !15340, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15345
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15347, !srcloc !14879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15347
  call void @llvm.dbg.value(metadata i32 %3, metadata !14876, metadata !DIExpression()) #23, !dbg !15349
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15349
  call void @llvm.dbg.value(metadata i32 %3, metadata !14870, metadata !DIExpression()) #23, !dbg !15345
  call void @llvm.dbg.value(metadata i32 %3, metadata !15342, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !15340, metadata !DIExpression()), !dbg !15344
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15350
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !15355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15355
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !15357
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15359, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !15340, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !15340, metadata !DIExpression()), !dbg !15344
  ret void, !dbg !15360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15363, metadata !DIExpression()), !dbg !15364
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15365
  br i1 %2, label %24, label %3, !dbg !15367

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15368
  br i1 %4, label %5, label %24, !dbg !15369

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15050, metadata !DIExpression()) #23, !dbg !15370
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15373
  %7 = load i8, i8* %6, align 1, !dbg !15374
  %8 = or i8 %7, -128, !dbg !15374
  store i8 %8, i8* %6, align 1, !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15057, metadata !DIExpression()) #23, !dbg !15375
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15064, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15070, metadata !DIExpression()) #23, !dbg !15377
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15379
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15071, metadata !DIExpression()) #23, !dbg !15377
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15380
  br i1 %10, label %21, label %11, !dbg !15379

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15071, metadata !DIExpression()) #23, !dbg !15377
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15381
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15071, metadata !DIExpression()) #23, !dbg !15377
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15382
  %15 = icmp sgt i32 %14, 0, !dbg !15383
  br i1 %15, label %16, label %18, !dbg !15384

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15385
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15386
  br label %23, !dbg !15387

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15380
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15071, metadata !DIExpression()) #23, !dbg !15377
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15380
  br i1 %20, label %21, label %11, !dbg !15379, !llvm.loop !15388

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15390
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15391
  br label %23, !dbg !15392

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15393
  br label %24, !dbg !15394

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15398, metadata !DIExpression()), !dbg !15399
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15400
  br i1 %2, label %6, label %3, !dbg !15401

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15402
  %5 = xor i1 %4, true, !dbg !15401
  br label %6, !dbg !15401

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15404 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15406, metadata !DIExpression()), !dbg !15410
  call void @llvm.dbg.value(metadata i32 0, metadata !15407, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15412
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15414, !srcloc !14879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15414
  call void @llvm.dbg.value(metadata i32 %3, metadata !14876, metadata !DIExpression()) #23, !dbg !15416
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15416
  call void @llvm.dbg.value(metadata i32 %3, metadata !14870, metadata !DIExpression()) #23, !dbg !15412
  call void @llvm.dbg.value(metadata i32 %3, metadata !15409, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()), !dbg !15411
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15417
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !15420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15420
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !15422
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15424, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !15407, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()), !dbg !15411
  ret void, !dbg !15425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15428, metadata !DIExpression()), !dbg !15430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15431
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15433, !srcloc !14879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15433
  call void @llvm.dbg.value(metadata i32 %3, metadata !14876, metadata !DIExpression()) #23, !dbg !15435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15435
  call void @llvm.dbg.value(metadata i32 %3, metadata !14870, metadata !DIExpression()) #23, !dbg !15431
  call void @llvm.dbg.value(metadata i32 %3, metadata !15429, metadata !DIExpression()), !dbg !15430
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15436
  br i1 %4, label %5, label %6, !dbg !15438

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !15439
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15439
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !15442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15444, !srcloc !14905
  br label %8, !dbg !15445

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.231(%struct.k_thread* noundef %0) #24, !dbg !15446
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15447
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15448
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15448
  br label %8, !dbg !15449

8:                                                ; preds = %6, %5
  ret void, !dbg !15449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15452, metadata !DIExpression()), !dbg !15453
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15454
  %3 = load i8, i8* %2, align 1, !dbg !15454
  %4 = and i8 %3, 4, !dbg !15455
  %5 = icmp eq i8 %4, 0, !dbg !15456
  ret i1 %5, !dbg !15457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.231(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15458 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15460, metadata !DIExpression()), !dbg !15461
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15462
  %3 = load i8, i8* %2, align 1, !dbg !15463
  %4 = and i8 %3, -5, !dbg !15463
  store i8 %4, i8* %2, align 1, !dbg !15463
  ret void, !dbg !15464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15465 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15467, metadata !DIExpression()), !dbg !15469
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15470
  br i1 %4, label %5, label %9, !dbg !15472

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15473
  br i1 %6, label %7, label %9, !dbg !15474

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15475, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15480, metadata !DIExpression()) #23, !dbg !15481
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15484
  br label %10, !dbg !15485

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !15486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15486
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !15489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15491, !srcloc !14905
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15497, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i32 %0, metadata !15499, metadata !DIExpression()), !dbg !15504
  %2 = icmp eq i32 %0, 0, !dbg !15506
  br i1 %2, label %3, label %6, !dbg !15507

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15508, !srcloc !15515
  call void @llvm.dbg.value(metadata i32 %4, metadata !15511, metadata !DIExpression()) #23, !dbg !15516
  %5 = icmp eq i32 %4, 0, !dbg !15517
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15498
  ret i1 %7, !dbg !15518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !15519 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15522
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15521, metadata !DIExpression()), !dbg !15523
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15524
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15525
  ret i1 %3, !dbg !15526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15529, metadata !DIExpression()), !dbg !15531
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15532
  call void @llvm.dbg.value(metadata i32 %2, metadata !15530, metadata !DIExpression()), !dbg !15531
  ret i32 %2, !dbg !15533
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15534 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15536, metadata !DIExpression()), !dbg !15540
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15541
  call void @llvm.dbg.value(metadata i32 0, metadata !15537, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15543
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15545, !srcloc !14879
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15545
  call void @llvm.dbg.value(metadata i32 %4, metadata !14876, metadata !DIExpression()) #23, !dbg !15547
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15547
  call void @llvm.dbg.value(metadata i32 %4, metadata !14870, metadata !DIExpression()) #23, !dbg !15543
  call void @llvm.dbg.value(metadata i32 %4, metadata !15539, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata i32 undef, metadata !15537, metadata !DIExpression()), !dbg !15542
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15548
  br i1 %5, label %6, label %10, !dbg !15552

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15033, metadata !DIExpression()) #23, !dbg !15553
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15556
  %8 = load i8, i8* %7, align 1, !dbg !15557
  %9 = and i8 %8, 127, !dbg !15557
  store i8 %9, i8* %7, align 1, !dbg !15557
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15041, metadata !DIExpression()) #23, !dbg !15558
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15560
  br label %10, !dbg !15561

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15562
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15563
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15564
  %13 = zext i1 %12 to i32, !dbg !15564
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !15565
  call void @llvm.dbg.value(metadata i32 %4, metadata !14891, metadata !DIExpression()) #23, !dbg !15566
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15566
  call void @llvm.dbg.value(metadata i32 %4, metadata !14899, metadata !DIExpression()) #23, !dbg !15568
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15570, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !15537, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata i32 undef, metadata !15537, metadata !DIExpression()), !dbg !15542
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15571
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15573
  br i1 %15, label %16, label %17, !dbg !15574

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15575
  br label %17, !dbg !15577

17:                                               ; preds = %16, %10
  ret void, !dbg !15578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15579 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15581, metadata !DIExpression()), !dbg !15582
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15583
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15584
  ret i32 %3, !dbg !15585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15586 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()), !dbg !15589
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15590
  %3 = load i8, i8* %2, align 1, !dbg !15591
  %4 = or i8 %3, 16, !dbg !15591
  store i8 %4, i8* %2, align 1, !dbg !15591
  ret void, !dbg !15592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15593 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15594, !srcloc !14879
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15594
  call void @llvm.dbg.value(metadata i32 %2, metadata !14876, metadata !DIExpression()) #23, !dbg !15596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15596
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15597
  ret void, !dbg !15598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15601, metadata !DIExpression()), !dbg !15602
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15603
  br i1 %2, label %3, label %5, !dbg !15605

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15606
  br label %6, !dbg !15608

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14899, metadata !DIExpression()) #23, !dbg !15609
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15612, !srcloc !14905
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15614 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15616, metadata !DIExpression()), !dbg !15618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15619
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15621, !srcloc !14879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15621
  call void @llvm.dbg.value(metadata i32 %3, metadata !14876, metadata !DIExpression()) #23, !dbg !15623
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15623
  call void @llvm.dbg.value(metadata i32 %3, metadata !14870, metadata !DIExpression()) #23, !dbg !15619
  call void @llvm.dbg.value(metadata i32 %3, metadata !15617, metadata !DIExpression()), !dbg !15618
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15624
  br i1 %4, label %6, label %5, !dbg !15626

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !15627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15627
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !15630
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15632, !srcloc !14905
  br label %8, !dbg !15633

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15634
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15635
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15636
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15636
  br label %8, !dbg !15637

8:                                                ; preds = %6, %5
  ret void, !dbg !15637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15640, metadata !DIExpression()), !dbg !15641
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15642
  %3 = load i8, i8* %2, align 1, !dbg !15642
  %4 = and i8 %3, 16, !dbg !15643
  %5 = icmp ne i8 %4, 0, !dbg !15644
  ret i1 %5, !dbg !15645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15648, metadata !DIExpression()), !dbg !15649
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15650
  %3 = load i8, i8* %2, align 1, !dbg !15651
  %4 = and i8 %3, -17, !dbg !15651
  store i8 %4, i8* %2, align 1, !dbg !15651
  ret void, !dbg !15652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15653 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15663, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15661, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15662, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.value(metadata i32 0, metadata !15664, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15669
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15671, !srcloc !14879
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15671
  call void @llvm.dbg.value(metadata i32 %5, metadata !14876, metadata !DIExpression()) #23, !dbg !15673
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15673
  call void @llvm.dbg.value(metadata i32 %5, metadata !14870, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 %5, metadata !15666, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i32 undef, metadata !15664, metadata !DIExpression()), !dbg !15668
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15674
  call void @llvm.dbg.value(metadata i32 %5, metadata !14891, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata i32 %5, metadata !14899, metadata !DIExpression()) #23, !dbg !15679
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !15681, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !15664, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i32 undef, metadata !15664, metadata !DIExpression()), !dbg !15668
  ret void, !dbg !15682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15683 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15687, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15685, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15686, metadata !DIExpression()), !dbg !15688
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15689
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15690
  ret void, !dbg !15691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15692 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15696, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15697, metadata !DIExpression()), !dbg !15698
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15699
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15700
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15701
  br i1 %3, label %21, label %4, !dbg !15703

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15704
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15706
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15707
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15064, metadata !DIExpression()) #23, !dbg !15708
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15070, metadata !DIExpression()) #23, !dbg !15708
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15710
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15071, metadata !DIExpression()) #23, !dbg !15708
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15711
  br i1 %8, label %19, label %9, !dbg !15710

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15071, metadata !DIExpression()) #23, !dbg !15708
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15071, metadata !DIExpression()) #23, !dbg !15708
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15713
  %13 = icmp sgt i32 %12, 0, !dbg !15714
  br i1 %13, label %14, label %16, !dbg !15715

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15716
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15717
  br label %21, !dbg !15718

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15711
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15071, metadata !DIExpression()) #23, !dbg !15708
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15711
  br i1 %18, label %19, label %9, !dbg !15710, !llvm.loop !15719

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15721
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15722
  br label %21, !dbg !15723

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15725 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15730, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15729, metadata !DIExpression()), !dbg !15731
  %4 = icmp eq i64 %3, -1, !dbg !15732
  br i1 %4, label %6, label %5, !dbg !15734

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.232(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15735
  br label %6, !dbg !15737

6:                                                ; preds = %5, %2
  ret void, !dbg !15738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.232(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15739 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15742, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15741, metadata !DIExpression()), !dbg !15743
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15744
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15745
  ret void, !dbg !15746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15747 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15749, metadata !DIExpression()), !dbg !15757
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15758
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15758
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15750, metadata !DIExpression()), !dbg !15757
  call void @llvm.dbg.value(metadata i32 0, metadata !15751, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15760
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15762, !srcloc !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #23, !dbg !15760
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !15751, metadata !DIExpression()), !dbg !15759
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15765
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15766
  %7 = load i8, i8* %6, align 1, !dbg !15766
  %8 = and i8 %7, 40, !dbg !15767
  %9 = icmp eq i8 %8, 0, !dbg !15767
  call void @llvm.dbg.value(metadata i1 %9, metadata !15754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15768
  br i1 %9, label %10, label %17, !dbg !15769

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15770
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !15770
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !15770
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !15774
  br i1 %14, label %16, label %15, !dbg !15775

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15776
  br label %16, !dbg !15778

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.231(%struct.k_thread* noundef nonnull %3) #24, !dbg !15779
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15780
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15781
  br label %17, !dbg !15782

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15762
  call void @llvm.dbg.value(metadata i32 %18, metadata !14876, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %18, metadata !14870, metadata !DIExpression()) #23, !dbg !15760
  call void @llvm.dbg.value(metadata i32 %18, metadata !15753, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !14891, metadata !DIExpression()) #23, !dbg !15783
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !15787, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !15751, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !15751, metadata !DIExpression()), !dbg !15759
  ret void, !dbg !15788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15789 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15791, metadata !DIExpression()), !dbg !15792
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15793
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15794
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15795
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !15796
  ret void, !dbg !15797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15800, metadata !DIExpression()), !dbg !15801
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15802
  %3 = load i8, i8* %2, align 1, !dbg !15803
  %4 = and i8 %3, -3, !dbg !15803
  store i8 %4, i8* %2, align 1, !dbg !15803
  ret void, !dbg !15804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15807, metadata !DIExpression()), !dbg !15808
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15809
  br i1 %2, label %3, label %7, !dbg !15811

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15033, metadata !DIExpression()) #23, !dbg !15812
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15815
  %5 = load i8, i8* %4, align 1, !dbg !15816
  %6 = and i8 %5, 127, !dbg !15816
  store i8 %6, i8* %4, align 1, !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15041, metadata !DIExpression()) #23, !dbg !15817
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15819
  br label %7, !dbg !15820

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15821
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15822
  %10 = zext i1 %9 to i32, !dbg !15822
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15823
  ret void, !dbg !15824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15827, metadata !DIExpression()), !dbg !15828
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15829
  %3 = load i8, i8* %2, align 1, !dbg !15830
  %4 = or i8 %3, 2, !dbg !15830
  store i8 %4, i8* %2, align 1, !dbg !15830
  ret void, !dbg !15831
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !15832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15834, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i32 0, metadata !15835, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15840
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15842, !srcloc !14879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15842
  call void @llvm.dbg.value(metadata i32 %3, metadata !14876, metadata !DIExpression()) #23, !dbg !15844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15844
  call void @llvm.dbg.value(metadata i32 %3, metadata !14870, metadata !DIExpression()) #23, !dbg !15840
  call void @llvm.dbg.value(metadata i32 %3, metadata !15837, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15835, metadata !DIExpression()), !dbg !15839
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15845
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15848
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !15850
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15852, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !15835, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15835, metadata !DIExpression()), !dbg !15839
  ret void, !dbg !15853
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15854 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15860, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i32 %0, metadata !15858, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15859, metadata !DIExpression()), !dbg !15865
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15866
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15867
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15868
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15869
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15870
  call void @llvm.dbg.value(metadata i32 %6, metadata !15861, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i32 0, metadata !15862, metadata !DIExpression()), !dbg !15871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15872
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15874, !srcloc !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #23, !dbg !15876
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15876
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #23, !dbg !15872
  call void @llvm.dbg.value(metadata i32 undef, metadata !15864, metadata !DIExpression()), !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !15862, metadata !DIExpression()), !dbg !15871
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15877
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15881
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15882
  br i1 %10, label %11, label %12, !dbg !15883

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15884
  br label %12, !dbg !15886

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15874
  call void @llvm.dbg.value(metadata i32 %13, metadata !14876, metadata !DIExpression()) #23, !dbg !15876
  call void @llvm.dbg.value(metadata i32 %13, metadata !14870, metadata !DIExpression()) #23, !dbg !15872
  call void @llvm.dbg.value(metadata i32 %13, metadata !15864, metadata !DIExpression()), !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14891, metadata !DIExpression()) #23, !dbg !15887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15887
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15889
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !15891, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !15862, metadata !DIExpression()), !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !15862, metadata !DIExpression()), !dbg !15871
  ret i32 %6, !dbg !15892
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15893 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15898, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i64 undef, metadata !15900, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15897, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15899, metadata !DIExpression()), !dbg !15901
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15902
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15904
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15906, !srcloc !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #23, !dbg !15908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #23, !dbg !15904
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15909
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15910
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15475, metadata !DIExpression()) #23, !dbg !15911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15480, metadata !DIExpression()) #23, !dbg !15911
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15913
  ret i32 %9, !dbg !15914
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15915 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15919, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15920, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.value(metadata i32 0, metadata !15921, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15926
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15928, !srcloc !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #23, !dbg !15930
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15930
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #23, !dbg !15926
  call void @llvm.dbg.value(metadata i32 undef, metadata !15923, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15920, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !15921, metadata !DIExpression()), !dbg !15925
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15920, metadata !DIExpression()), !dbg !15924
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15934
  br i1 %5, label %7, label %6, !dbg !15936

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15937
  br label %7, !dbg !15939

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15928
  call void @llvm.dbg.value(metadata i32 %8, metadata !14876, metadata !DIExpression()) #23, !dbg !15930
  call void @llvm.dbg.value(metadata i32 %8, metadata !14870, metadata !DIExpression()) #23, !dbg !15926
  call void @llvm.dbg.value(metadata i32 %8, metadata !15923, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.value(metadata i32 undef, metadata !14891, metadata !DIExpression()) #23, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15940
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15944, !srcloc !14905
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15920, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !15921, metadata !DIExpression()), !dbg !15925
  ret %struct.k_thread* %4, !dbg !15945
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15946 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15948, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15949, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 0, metadata !15950, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15955
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15957, !srcloc !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #23, !dbg !15959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #23, !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !15952, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15949, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15954
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15960
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15949, metadata !DIExpression()), !dbg !15953
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15963
  br i1 %5, label %8, label %6, !dbg !15965

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15966
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15968
  br label %8, !dbg !15969

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15957
  call void @llvm.dbg.value(metadata i32 %9, metadata !14876, metadata !DIExpression()) #23, !dbg !15959
  call void @llvm.dbg.value(metadata i32 %9, metadata !14870, metadata !DIExpression()) #23, !dbg !15955
  call void @llvm.dbg.value(metadata i32 %9, metadata !15952, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14891, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15972
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15974, !srcloc !14905
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15949, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15954
  ret %struct.k_thread* %4, !dbg !15975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15976 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15978, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15834, metadata !DIExpression()) #23, !dbg !15980
  call void @llvm.dbg.value(metadata i32 0, metadata !15835, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !15983
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15985, !srcloc !14879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15985
  call void @llvm.dbg.value(metadata i32 %3, metadata !14876, metadata !DIExpression()) #23, !dbg !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !15987
  call void @llvm.dbg.value(metadata i32 %3, metadata !14870, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata i32 %3, metadata !15837, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15835, metadata !DIExpression()) #23, !dbg !15982
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !15989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !15989
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !15991
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15993, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !15835, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15835, metadata !DIExpression()) #23, !dbg !15982
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15994
  ret void, !dbg !15995
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15996 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15998, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.value(metadata i32 %1, metadata !15999, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.value(metadata i8 0, metadata !16000, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.value(metadata i32 0, metadata !16001, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !16006
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16008, !srcloc !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #23, !dbg !16010
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !16010
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #23, !dbg !16006
  call void @llvm.dbg.value(metadata i32 undef, metadata !16003, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.value(metadata i8 poison, metadata !16000, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.value(metadata i32 undef, metadata !16001, metadata !DIExpression()), !dbg !16005
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !16011
  call void @llvm.dbg.value(metadata i1 %6, metadata !16000, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16004
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16014

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15033, metadata !DIExpression()) #23, !dbg !16015
  %11 = load i8, i8* %4, align 1, !dbg !16021
  %12 = and i8 %11, 127, !dbg !16021
  store i8 %12, i8* %4, align 1, !dbg !16021
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15041, metadata !DIExpression()) #23, !dbg !16022
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16024
  store i8 %9, i8* %8, align 2, !dbg !16025
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15050, metadata !DIExpression()) #23, !dbg !16026
  %13 = load i8, i8* %4, align 1, !dbg !16028
  %14 = or i8 %13, -128, !dbg !16028
  store i8 %14, i8* %4, align 1, !dbg !16028
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15057, metadata !DIExpression()) #23, !dbg !16029
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15064, metadata !DIExpression()) #23, !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15070, metadata !DIExpression()) #23, !dbg !16031
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16033
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15071, metadata !DIExpression()) #23, !dbg !16031
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16034
  br i1 %16, label %26, label %17, !dbg !16033

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15071, metadata !DIExpression()) #23, !dbg !16031
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16035
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15071, metadata !DIExpression()) #23, !dbg !16031
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !16036
  %21 = icmp sgt i32 %20, 0, !dbg !16037
  br i1 %21, label %22, label %23, !dbg !16038

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !16039
  br label %27, !dbg !16040

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !16034
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15071, metadata !DIExpression()) #23, !dbg !16031
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16034
  br i1 %25, label %26, label %17, !dbg !16033, !llvm.loop !16041

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !16043
  br label %27, !dbg !16044

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16045
  br label %29, !dbg !16046

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16047
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16008
  call void @llvm.dbg.value(metadata i32 %30, metadata !14876, metadata !DIExpression()) #23, !dbg !16010
  call void @llvm.dbg.value(metadata i32 %30, metadata !14870, metadata !DIExpression()) #23, !dbg !16006
  call void @llvm.dbg.value(metadata i32 %30, metadata !16003, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14891, metadata !DIExpression()) #23, !dbg !16049
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !16049
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16051
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !16053, !srcloc !14905
  call void @llvm.dbg.value(metadata i8 poison, metadata !16000, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.value(metadata i32 undef, metadata !16001, metadata !DIExpression()), !dbg !16005
  ret i1 %6, !dbg !16054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16059, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata i32 %1, metadata !16060, metadata !DIExpression()), !dbg !16062
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16063
  call void @llvm.dbg.value(metadata i1 %3, metadata !16061, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16062
  br i1 %3, label %4, label %12, !dbg !16064

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16066
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16067
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16067
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16067
  %9 = load i8, i8* %8, align 1, !dbg !16067
  %10 = icmp eq i8 %9, 0, !dbg !16068
  br i1 %10, label %11, label %12, !dbg !16069

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16070
  br label %12, !dbg !16072

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16073
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16074 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16076, metadata !DIExpression()), !dbg !16079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !16080
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16082, !srcloc !14879
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16082
  call void @llvm.dbg.value(metadata i32 %2, metadata !14876, metadata !DIExpression()) #23, !dbg !16084
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !16084
  call void @llvm.dbg.value(metadata i32 %2, metadata !14870, metadata !DIExpression()) #23, !dbg !16080
  call void @llvm.dbg.value(metadata i32 %2, metadata !16078, metadata !DIExpression()), !dbg !16079
  call void @llvm.dbg.value(metadata i32 undef, metadata !16076, metadata !DIExpression()), !dbg !16079
  tail call fastcc void @z_sched_lock() #24, !dbg !16085
  call void @llvm.dbg.value(metadata i32 %2, metadata !14891, metadata !DIExpression()) #23, !dbg !16088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !16088
  call void @llvm.dbg.value(metadata i32 %2, metadata !14899, metadata !DIExpression()) #23, !dbg !16090
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16092, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !16076, metadata !DIExpression()), !dbg !16079
  call void @llvm.dbg.value(metadata i32 undef, metadata !16076, metadata !DIExpression()), !dbg !16079
  ret void, !dbg !16093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16094 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16095
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16096
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16096
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16096
  %5 = load i8, i8* %4, align 1, !dbg !16097
  %6 = add i8 %5, -1, !dbg !16097
  store i8 %6, i8* %4, align 1, !dbg !16097
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16098, !srcloc !16100
  ret void, !dbg !16101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16102 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16104, metadata !DIExpression()), !dbg !16107
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !16108
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16110, !srcloc !14879
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16110
  call void @llvm.dbg.value(metadata i32 %2, metadata !14876, metadata !DIExpression()) #23, !dbg !16112
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !16112
  call void @llvm.dbg.value(metadata i32 %2, metadata !14870, metadata !DIExpression()) #23, !dbg !16108
  call void @llvm.dbg.value(metadata i32 %2, metadata !16106, metadata !DIExpression()), !dbg !16107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16104, metadata !DIExpression()), !dbg !16107
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16113
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16116
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16116
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16116
  %7 = load i8, i8* %6, align 1, !dbg !16117
  %8 = add i8 %7, 1, !dbg !16117
  store i8 %8, i8* %6, align 1, !dbg !16117
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16118
  call void @llvm.dbg.value(metadata i32 %2, metadata !14891, metadata !DIExpression()) #23, !dbg !16119
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !16119
  call void @llvm.dbg.value(metadata i32 %2, metadata !14899, metadata !DIExpression()) #23, !dbg !16121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16123, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 1, metadata !16104, metadata !DIExpression()), !dbg !16107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16104, metadata !DIExpression()), !dbg !16107
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16124
  ret void, !dbg !16125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16126 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16127
  ret %struct.k_thread* %1, !dbg !16128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16129 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16133, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16134, metadata !DIExpression()), !dbg !16138
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16139
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16135, metadata !DIExpression()), !dbg !16138
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16140
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16136, metadata !DIExpression()), !dbg !16138
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16141
  call void @llvm.dbg.value(metadata i32 %5, metadata !16137, metadata !DIExpression()), !dbg !16138
  %6 = icmp sgt i32 %5, 0, !dbg !16142
  br i1 %6, label %17, label %7, !dbg !16144

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16145
  br i1 %8, label %17, label %9, !dbg !16147

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16148
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16148
  %12 = load i32, i32* %11, align 8, !dbg !16148
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16150
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16150
  %15 = load i32, i32* %14, align 8, !dbg !16150
  %16 = icmp ult i32 %12, %15, !dbg !16151
  br label %17, !dbg !16152

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16153
  ret i1 %18, !dbg !16154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16155 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16172, metadata !DIExpression()), !dbg !16187
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16173, metadata !DIExpression()), !dbg !16187
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16188
  %5 = load i32, i32* %4, align 4, !dbg !16189
  %6 = add nsw i32 %5, 1, !dbg !16189
  store i32 %6, i32* %4, align 4, !dbg !16189
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16190
  store i32 %5, i32* %7, align 8, !dbg !16191
  %8 = load i32, i32* %4, align 4, !dbg !16192
  %9 = icmp eq i32 %8, 0, !dbg !16193
  br i1 %9, label %10, label %32, !dbg !16194

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16195
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16195
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16175, metadata !DIExpression()), !dbg !16195
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16195
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16195
  %14 = load i32, i32* %13, align 4, !dbg !16195
  %15 = shl i32 %14, 2, !dbg !16195
  %16 = alloca i8, i32 %15, align 8, !dbg !16195
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16195
  store i8* %16, i8** %17, align 4, !dbg !16195
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16195
  %19 = alloca i8, i32 %14, align 8, !dbg !16195
  store i8* %19, i8** %18, align 4, !dbg !16195
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16195
  store i32 -1, i32* %20, align 4, !dbg !16195
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16196
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16184, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16174, metadata !DIExpression()), !dbg !16187
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16198
  br i1 %22, label %23, label %24, !dbg !16195

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16198
  br label %32, !dbg !16199

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16174, metadata !DIExpression()), !dbg !16187
  %26 = load i32, i32* %4, align 4, !dbg !16200
  %27 = add nsw i32 %26, 1, !dbg !16200
  store i32 %27, i32* %4, align 4, !dbg !16200
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16202
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16202
  store i32 %26, i32* %29, align 8, !dbg !16203
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16196
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16184, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16174, metadata !DIExpression()), !dbg !16187
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16198
  br i1 %31, label %23, label %24, !dbg !16195, !llvm.loop !16204

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16206
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16207
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16208
  ret void, !dbg !16209
}

; Function Attrs: optsize
declare !dbg !16210 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16215 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16218 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16220, metadata !DIExpression()), !dbg !16222
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16221, metadata !DIExpression()), !dbg !16222
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16223
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16224
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16225
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16226
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16226
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16228
  br i1 %7, label %8, label %10, !dbg !16229

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16230
  store i32 0, i32* %9, align 4, !dbg !16232
  br label %10, !dbg !16233

10:                                               ; preds = %8, %2
  ret void, !dbg !16234
}

; Function Attrs: optsize
declare !dbg !16235 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16236 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16240, metadata !DIExpression()), !dbg !16243
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16241, metadata !DIExpression()), !dbg !16243
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16244
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16245
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16242, metadata !DIExpression()), !dbg !16243
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16241, metadata !DIExpression()), !dbg !16243
  ret %struct.k_thread* %4, !dbg !16246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16247 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16251, metadata !DIExpression()), !dbg !16252
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16253
  ret %struct.rbnode* %2, !dbg !16254
}

; Function Attrs: optsize
declare !dbg !16255 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !16258 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16268, metadata !DIExpression()), !dbg !16272
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16273
  %3 = load i32, i32* %2, align 4, !dbg !16273
  %4 = icmp eq i32 %3, 0, !dbg !16275
  br i1 %4, label %10, label %5, !dbg !16276

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16269, metadata !DIExpression()), !dbg !16272
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16277, !range !8147
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16278
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16270, metadata !DIExpression()), !dbg !16272
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16279
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16271, metadata !DIExpression()), !dbg !16272
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16269, metadata !DIExpression()), !dbg !16272
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16272
  ret %struct.k_thread* %11, !dbg !16280
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16281 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16285, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 0, metadata !16286, metadata !DIExpression()), !dbg !16288
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16289
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16287, metadata !DIExpression()), !dbg !16288
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16290
  br i1 %3, label %8, label %4, !dbg !16291

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16292
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16294
  call void @llvm.dbg.value(metadata i32 1, metadata !16286, metadata !DIExpression()), !dbg !16288
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16289
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16287, metadata !DIExpression()), !dbg !16288
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16290
  br i1 %7, label %8, label %4, !dbg !16291, !llvm.loop !16295

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16288
  ret i32 %9, !dbg !16297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !16298 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16300, metadata !DIExpression()), !dbg !16301
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16302
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16303
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16304
  ret %struct.k_thread* %4, !dbg !16305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !16306 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16315, metadata !DIExpression()), !dbg !16316
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16317
  tail call fastcc void @sys_dlist_init.239(%struct._dnode* noundef nonnull %2) #24, !dbg !16318
  ret void, !dbg !16319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.239(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !16320 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16324, metadata !DIExpression()), !dbg !16325
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16326
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16327
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16328
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16329
  ret void, !dbg !16330
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16331 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16332
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16333
  ret void, !dbg !16334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16340, metadata !DIExpression()), !dbg !16341
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16342
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16342
  %4 = load i8, i8* %3, align 2, !dbg !16342
  %5 = sext i8 %4 to i32, !dbg !16343
  ret i32 %5, !dbg !16344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16349, metadata !DIExpression()), !dbg !16352
  call void @llvm.dbg.value(metadata i32 %1, metadata !16350, metadata !DIExpression()), !dbg !16352
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16351, metadata !DIExpression()), !dbg !16352
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16353
  ret void, !dbg !16354
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16355 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16356
  br i1 %1, label %8, label %2, !dbg !16357

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16358
  br i1 %3, label %8, label %4, !dbg !16359

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16360
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16361
  %7 = xor i1 %6, true, !dbg !16359
  br label %8, !dbg !16359

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !16363 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16364, !range !7352
  %2 = icmp eq i8 %1, 0, !dbg !16364
  ret i1 %2, !dbg !16365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16366 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !16369
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16371, !srcloc !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #23, !dbg !16373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !16373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #23, !dbg !16369
  call void @llvm.dbg.value(metadata i32 undef, metadata !16368, metadata !DIExpression()), !dbg !16374
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16375
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15033, metadata !DIExpression()) #23, !dbg !16378
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16380
  %4 = load i8, i8* %3, align 1, !dbg !16381
  %5 = and i8 %4, 127, !dbg !16381
  store i8 %5, i8* %3, align 1, !dbg !16381
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15041, metadata !DIExpression()) #23, !dbg !16382
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16384
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16385
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15050, metadata !DIExpression()) #23, !dbg !16386
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16388
  %8 = load i8, i8* %7, align 1, !dbg !16389
  %9 = or i8 %8, -128, !dbg !16389
  store i8 %9, i8* %7, align 1, !dbg !16389
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15057, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15064, metadata !DIExpression()) #23, !dbg !16392
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15070, metadata !DIExpression()) #23, !dbg !16392
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16394
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15071, metadata !DIExpression()) #23, !dbg !16392
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16395
  br i1 %11, label %22, label %12, !dbg !16394

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15071, metadata !DIExpression()) #23, !dbg !16392
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16396
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15071, metadata !DIExpression()) #23, !dbg !16392
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16397
  %16 = icmp sgt i32 %15, 0, !dbg !16398
  br i1 %16, label %17, label %19, !dbg !16399

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16400
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16401
  br label %24, !dbg !16402

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16395
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15071, metadata !DIExpression()) #23, !dbg !16392
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16395
  br i1 %21, label %22, label %12, !dbg !16394, !llvm.loop !16403

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16405
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16406
  br label %24, !dbg !16407

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16371
  call void @llvm.dbg.value(metadata i32 %25, metadata !14876, metadata !DIExpression()) #23, !dbg !16373
  call void @llvm.dbg.value(metadata i32 %25, metadata !14870, metadata !DIExpression()) #23, !dbg !16369
  call void @llvm.dbg.value(metadata i32 %25, metadata !16368, metadata !DIExpression()), !dbg !16374
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16408
  call void @llvm.dbg.value(metadata i32 undef, metadata !15475, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15480, metadata !DIExpression()) #23, !dbg !16409
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16411
  ret void, !dbg !16412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16413 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16417, metadata !DIExpression()), !dbg !16420
  %3 = icmp eq i64 %2, -1, !dbg !16421
  br i1 %3, label %4, label %6, !dbg !16423

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16424
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !16426
  br label %11, !dbg !16427

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16418, metadata !DIExpression()), !dbg !16420
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16428
  %8 = sext i32 %7 to i64, !dbg !16428
  call void @llvm.dbg.value(metadata i64 %8, metadata !16418, metadata !DIExpression()), !dbg !16420
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !16429
  %10 = trunc i64 %9 to i32, !dbg !16429
  call void @llvm.dbg.value(metadata i32 %10, metadata !16419, metadata !DIExpression()), !dbg !16420
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16420
  ret i32 %12, !dbg !16430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16431 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16435, metadata !DIExpression()), !dbg !16436
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16437, !srcloc !16439
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16440
  ret void, !dbg !16441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16442 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16446, metadata !DIExpression()), !dbg !16450
  %2 = icmp eq i64 %0, 0, !dbg !16451
  br i1 %2, label %3, label %4, !dbg !16453

3:                                                ; preds = %1
  tail call fastcc void @k_yield.246() #24, !dbg !16454
  br label %29, !dbg !16456

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16448, metadata !DIExpression()), !dbg !16450
  %5 = icmp sgt i64 %0, -3, !dbg !16457
  br i1 %5, label %6, label %10, !dbg !16459

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16460
  %8 = trunc i64 %0 to i32, !dbg !16462
  %9 = add i32 %7, %8, !dbg !16462
  call void @llvm.dbg.value(metadata i32 %9, metadata !16447, metadata !DIExpression()), !dbg !16450
  br label %13, !dbg !16463

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16464
  %12 = sub i32 -2, %11, !dbg !16464
  call void @llvm.dbg.value(metadata i32 %12, metadata !16447, metadata !DIExpression()), !dbg !16450
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16466
  call void @llvm.dbg.value(metadata i32 %14, metadata !16447, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !16467
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16469, !srcloc !14879
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16469
  call void @llvm.dbg.value(metadata i32 %16, metadata !14876, metadata !DIExpression()) #23, !dbg !16471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !16471
  call void @llvm.dbg.value(metadata i32 %16, metadata !14870, metadata !DIExpression()) #23, !dbg !16467
  call void @llvm.dbg.value(metadata i32 %16, metadata !16449, metadata !DIExpression()), !dbg !16450
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16472
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16473
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !16474
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16475
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16476
  tail call fastcc void @z_add_thread_timeout.232(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !16476
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16477
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !16478
  call void @llvm.dbg.value(metadata i32 %16, metadata !15475, metadata !DIExpression()) #23, !dbg !16479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15480, metadata !DIExpression()) #23, !dbg !16479
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16481
  %22 = zext i32 %14 to i64, !dbg !16482
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16483
  %24 = zext i32 %23 to i64, !dbg !16483
  %25 = sub nsw i64 %22, %24, !dbg !16484
  call void @llvm.dbg.value(metadata i64 %25, metadata !16446, metadata !DIExpression()), !dbg !16450
  %26 = icmp sgt i64 %25, 0, !dbg !16485
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16485
  %28 = trunc i64 %27 to i32, !dbg !16485
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16450
  ret i32 %30, !dbg !16486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16487 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16489, metadata !DIExpression()), !dbg !16490
  call void @llvm.dbg.value(metadata i64 %0, metadata !14911, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i32 10000, metadata !14914, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i32 1000, metadata !14915, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i8 1, metadata !14916, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i1 false, metadata !14917, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16491
  call void @llvm.dbg.value(metadata i1 false, metadata !14918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16491
  call void @llvm.dbg.value(metadata i8 0, metadata !14919, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i1 false, metadata !14920, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16491
  call void @llvm.dbg.value(metadata i1 true, metadata !14921, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16491
  call void @llvm.dbg.value(metadata i64 0, metadata !14922, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i64 0, metadata !14922, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i64 %0, metadata !14911, metadata !DIExpression()), !dbg !16491
  %2 = udiv i64 %0, 10, !dbg !16493
  ret i64 %2, !dbg !16497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield.246() unnamed_addr #1 !dbg !16498 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16499, !srcloc !16501
  tail call void @z_impl_k_yield() #24, !dbg !16502
  ret void, !dbg !16503
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16508, metadata !DIExpression()), !dbg !16510
  %2 = sext i32 %0 to i64, !dbg !16511
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16512
  call void @llvm.dbg.value(metadata i64 %3, metadata !16509, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16510
  %4 = shl i64 %3, 32, !dbg !16513
  %5 = ashr exact i64 %4, 32, !dbg !16513
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16514
  call void @llvm.dbg.value(metadata i32 %6, metadata !16509, metadata !DIExpression()), !dbg !16510
  %7 = sext i32 %6 to i64, !dbg !16515
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16516
  %9 = trunc i64 %8 to i32, !dbg !16516
  ret i32 %9, !dbg !16517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16518 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16520, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.value(metadata i64 %0, metadata !14911, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14914, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 10000, metadata !14915, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i8 1, metadata !14916, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i1 false, metadata !14917, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16522
  call void @llvm.dbg.value(metadata i1 true, metadata !14918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16522
  call void @llvm.dbg.value(metadata i8 0, metadata !14919, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i1 false, metadata !14920, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16522
  call void @llvm.dbg.value(metadata i1 true, metadata !14921, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16522
  call void @llvm.dbg.value(metadata i64 0, metadata !14922, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i64 0, metadata !14922, metadata !DIExpression()), !dbg !16522
  %2 = add i64 %0, 99, !dbg !16524
  call void @llvm.dbg.value(metadata i64 %2, metadata !14911, metadata !DIExpression()), !dbg !16522
  %3 = udiv i64 %2, 100, !dbg !16525
  ret i64 %3, !dbg !16526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16527 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16529, metadata !DIExpression()), !dbg !16530
  call void @llvm.dbg.value(metadata i64 %0, metadata !14911, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i32 10000, metadata !14914, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14915, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i8 1, metadata !14916, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i1 false, metadata !14917, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16531
  call void @llvm.dbg.value(metadata i1 false, metadata !14918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16531
  call void @llvm.dbg.value(metadata i8 0, metadata !14919, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i1 true, metadata !14920, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16531
  call void @llvm.dbg.value(metadata i1 false, metadata !14921, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16531
  call void @llvm.dbg.value(metadata i64 0, metadata !14922, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i64 0, metadata !14922, metadata !DIExpression()), !dbg !16531
  %2 = mul i64 %0, 100, !dbg !16533
  ret i64 %2, !dbg !16535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16538, metadata !DIExpression()), !dbg !16539
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16540
  br i1 %2, label %14, label %3, !dbg !16542

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16543
  %5 = icmp slt i32 %4, 0, !dbg !16545
  br i1 %5, label %6, label %10, !dbg !16546

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16547
  %8 = load i8, i8* %7, align 1, !dbg !16547
  %9 = icmp eq i8 %8, 16, !dbg !16550
  br i1 %9, label %10, label %14, !dbg !16551

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16552
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16553
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16554, !srcloc !15515
  call void @llvm.dbg.value(metadata i32 %11, metadata !15511, metadata !DIExpression()) #23, !dbg !16558
  %12 = icmp eq i32 %11, 0, !dbg !16559
  br i1 %12, label %13, label %14, !dbg !16560

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16561
  br label %14, !dbg !16563

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16567, metadata !DIExpression()), !dbg !16568
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16569
  %3 = load i8, i8* %2, align 1, !dbg !16569
  %4 = and i8 %3, 2, !dbg !16570
  %5 = icmp ne i8 %4, 0, !dbg !16571
  ret i1 %5, !dbg !16572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !16573 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16578
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16577, metadata !DIExpression()), !dbg !16579
  ret %struct.k_thread* %1, !dbg !16580
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16581 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16582, !srcloc !15515
  call void @llvm.dbg.value(metadata i32 %1, metadata !15511, metadata !DIExpression()) #23, !dbg !16585
  %2 = icmp eq i32 %1, 0, !dbg !16586
  br i1 %2, label %3, label %8, !dbg !16587

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16588
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16589
  %6 = icmp ne i32 %5, 0, !dbg !16587
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16591 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16593, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !16596
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16598, !srcloc !14879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16598
  call void @llvm.dbg.value(metadata i32 %3, metadata !14876, metadata !DIExpression()) #23, !dbg !16600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %3, metadata !14870, metadata !DIExpression()) #23, !dbg !16596
  call void @llvm.dbg.value(metadata i32 %3, metadata !16594, metadata !DIExpression()), !dbg !16595
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16601
  %5 = load i8, i8* %4, align 4, !dbg !16601
  %6 = and i8 %5, 1, !dbg !16603
  %7 = icmp eq i8 %6, 0, !dbg !16604
  br i1 %7, label %9, label %8, !dbg !16605

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !16606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !16606
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !16609
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16611, !srcloc !14905
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !16612, !srcloc !16614
  br label %24, !dbg !16615

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16616
  %11 = load i8, i8* %10, align 1, !dbg !16616
  %12 = and i8 %11, 8, !dbg !16618
  %13 = icmp eq i8 %12, 0, !dbg !16619
  br i1 %13, label %15, label %14, !dbg !16620

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !16621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !16621
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !16624
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16626, !srcloc !14905
  br label %24, !dbg !16627

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16628
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16629
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16631
  br i1 %17, label %18, label %23, !dbg !16632

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16633, !srcloc !15515
  call void @llvm.dbg.value(metadata i32 %19, metadata !15511, metadata !DIExpression()) #23, !dbg !16636
  %20 = icmp eq i32 %19, 0, !dbg !16637
  br i1 %20, label %21, label %23, !dbg !16638

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15475, metadata !DIExpression()) #23, !dbg !16639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15480, metadata !DIExpression()) #23, !dbg !16639
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16642
  br label %23, !dbg !16643

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14891, metadata !DIExpression()) #23, !dbg !16644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !16644
  call void @llvm.dbg.value(metadata i32 %3, metadata !14899, metadata !DIExpression()) #23, !dbg !16646
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16648, !srcloc !14905
  br label %24, !dbg !16649

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16652, metadata !DIExpression()), !dbg !16653
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16654
  %3 = load i8, i8* %2, align 1, !dbg !16654
  %4 = and i8 %3, 8, !dbg !16656
  %5 = icmp eq i8 %4, 0, !dbg !16657
  br i1 %5, label %6, label %20, !dbg !16658

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16659
  %8 = or i8 %7, 8, !dbg !16659
  store i8 %8, i8* %2, align 1, !dbg !16659
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16661
  br i1 %9, label %10, label %12, !dbg !16663

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15033, metadata !DIExpression()) #23, !dbg !16664
  %11 = and i8 %8, 95, !dbg !16667
  store i8 %11, i8* %2, align 1, !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15041, metadata !DIExpression()) #23, !dbg !16668
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16670
  br label %12, !dbg !16671

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16672
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16672
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16674
  br i1 %15, label %17, label %16, !dbg !16675

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16676
  br label %17, !dbg !16678

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16679
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16680
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16681
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16682
  br label %20, !dbg !16683

20:                                               ; preds = %17, %1
  ret void, !dbg !16684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16685 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16689, metadata !DIExpression()), !dbg !16691
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16692
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16690, metadata !DIExpression()), !dbg !16691
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16693
  br i1 %3, label %10, label %4, !dbg !16694

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16695
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16697
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16698, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata i32 0, metadata !16703, metadata !DIExpression()), !dbg !16704
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16706
  store i32 0, i32* %7, align 4, !dbg !16707
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16708
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16692
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16690, metadata !DIExpression()), !dbg !16691
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16693
  br i1 %9, label %10, label %4, !dbg !16694, !llvm.loop !16709

10:                                               ; preds = %4, %1
  ret void, !dbg !16711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16712 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16717, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16716, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !16721
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16723, !srcloc !14879
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16723
  call void @llvm.dbg.value(metadata i32 %4, metadata !14876, metadata !DIExpression()) #23, !dbg !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !16725
  call void @llvm.dbg.value(metadata i32 %4, metadata !14870, metadata !DIExpression()) #23, !dbg !16721
  call void @llvm.dbg.value(metadata i32 %4, metadata !16718, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.value(metadata i32 0, metadata !16719, metadata !DIExpression()), !dbg !16720
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16726
  %6 = load i8, i8* %5, align 1, !dbg !16726
  %7 = and i8 %6, 8, !dbg !16728
  %8 = icmp eq i8 %7, 0, !dbg !16729
  br i1 %8, label %9, label %24, !dbg !16730

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16717, metadata !DIExpression()), !dbg !16720
  %11 = icmp eq i64 %10, 0, !dbg !16731
  br i1 %11, label %24, label %12, !dbg !16733

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16734
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16736
  br i1 %14, label %24, label %15, !dbg !16737

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16738
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !16738
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16739
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !16740
  br i1 %19, label %24, label %20, !dbg !16741

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16742
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !16744
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16745
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !16746
  call void @llvm.dbg.value(metadata i32 %4, metadata !15475, metadata !DIExpression()) #23, !dbg !16747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15480, metadata !DIExpression()) #23, !dbg !16747
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16749
  call void @llvm.dbg.value(metadata i32 %23, metadata !16719, metadata !DIExpression()), !dbg !16720
  br label %26, !dbg !16750

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16751
  call void @llvm.dbg.value(metadata i32 %25, metadata !16719, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.value(metadata i32 %4, metadata !14891, metadata !DIExpression()) #23, !dbg !16752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !16752
  call void @llvm.dbg.value(metadata i32 %4, metadata !14899, metadata !DIExpression()) #23, !dbg !16754
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16756, !srcloc !14905
  br label %26, !dbg !16757

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16720
  ret i32 %27, !dbg !16758
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16759 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16763, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i32 %1, metadata !16764, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i8* %2, metadata !16765, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i8 0, metadata !16767, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i32 0, metadata !16768, metadata !DIExpression()), !dbg !16772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14864, metadata !DIExpression()) #23, !dbg !16773
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16775, !srcloc !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()) #23, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()) #23, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #23, !dbg !16773
  call void @llvm.dbg.value(metadata i32 undef, metadata !16770, metadata !DIExpression()), !dbg !16772
  call void @llvm.dbg.value(metadata i8 poison, metadata !16767, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()), !dbg !16772
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !16778
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16766, metadata !DIExpression()), !dbg !16771
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16781
  br i1 %7, label %12, label %8, !dbg !16783

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16784, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata i32 %1, metadata !16790, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata i8* %2, metadata !16791, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16698, metadata !DIExpression()), !dbg !16795
  call void @llvm.dbg.value(metadata i32 %1, metadata !16703, metadata !DIExpression()), !dbg !16795
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16797
  store i32 %1, i32* %9, align 4, !dbg !16798
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16799
  store i8* %2, i8** %10, align 4, !dbg !16800
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16801
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16802
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !16803
  call void @llvm.dbg.value(metadata i8 1, metadata !16767, metadata !DIExpression()), !dbg !16771
  br label %12, !dbg !16804

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16775
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16775
  call void @llvm.dbg.value(metadata i32 %14, metadata !14876, metadata !DIExpression()) #23, !dbg !16777
  call void @llvm.dbg.value(metadata i32 %14, metadata !14870, metadata !DIExpression()) #23, !dbg !16773
  call void @llvm.dbg.value(metadata i32 %14, metadata !16770, metadata !DIExpression()), !dbg !16772
  call void @llvm.dbg.value(metadata i8 poison, metadata !16767, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14891, metadata !DIExpression()) #23, !dbg !16805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14896, metadata !DIExpression()) #23, !dbg !16805
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16809, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()), !dbg !16772
  ret i1 %13, !dbg !16810
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16811 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16817, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i64 undef, metadata !16819, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16816, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16818, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i8** %4, metadata !16820, metadata !DIExpression()), !dbg !16822
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16823
  call void @llvm.dbg.value(metadata i32 %6, metadata !16821, metadata !DIExpression()), !dbg !16822
  %7 = icmp eq i8** %4, null, !dbg !16824
  br i1 %7, label %12, label %8, !dbg !16826

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16827
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16829
  %11 = load i8*, i8** %10, align 4, !dbg !16829
  store i8* %11, i8** %4, align 4, !dbg !16830
  br label %12, !dbg !16831

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16833 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16835
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16836
  ret void, !dbg !16837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16838 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16848, metadata !DIExpression()), !dbg !16865
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16846, metadata !DIExpression()), !dbg !16865
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16847, metadata !DIExpression()), !dbg !16865
  %5 = icmp eq i64 %4, -1, !dbg !16866
  br i1 %5, label %55, label %6, !dbg !16868

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16869
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16870
  call void @llvm.dbg.value(metadata i32 0, metadata !16849, metadata !DIExpression()), !dbg !16871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !16879
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16881, !srcloc !16887
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16881
  call void @llvm.dbg.value(metadata i32 %9, metadata !16884, metadata !DIExpression()) #23, !dbg !16888
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !16888
  call void @llvm.dbg.value(metadata i32 %9, metadata !16878, metadata !DIExpression()) #23, !dbg !16879
  call void @llvm.dbg.value(metadata i32 %9, metadata !16855, metadata !DIExpression()), !dbg !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()), !dbg !16871
  %10 = icmp slt i64 %4, -1, !dbg !16889
  br i1 %10, label %11, label %17, !dbg !16890

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16891
  %13 = add i64 %4, %12, !dbg !16892
  %14 = sub i64 -2, %13, !dbg !16892
  call void @llvm.dbg.value(metadata i64 %14, metadata !16859, metadata !DIExpression()), !dbg !16893
  %15 = icmp sgt i64 %14, 1, !dbg !16894
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16894
  br label %22, !dbg !16895

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16896
  %19 = tail call fastcc i32 @elapsed.255() #24, !dbg !16898
  %20 = sext i32 %19 to i64, !dbg !16898
  %21 = add nsw i64 %18, %20, !dbg !16899
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16900
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16901
  store i64 %23, i64* %24, align 8, !dbg !16902
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !16903
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16856, metadata !DIExpression()), !dbg !16905
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16906
  br i1 %26, label %42, label %27, !dbg !16906

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16907
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16856, metadata !DIExpression()), !dbg !16905
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16911
  %31 = load i64, i64* %30, align 8, !dbg !16911
  %32 = icmp slt i64 %28, %31, !dbg !16912
  br i1 %32, label %33, label %38, !dbg !16913

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16911
  %35 = sub nsw i64 %31, %28, !dbg !16914
  store i64 %35, i64* %34, align 8, !dbg !16914
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16916
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16917
  tail call fastcc void @sys_dlist_insert.256(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !16918
  br label %44, !dbg !16919

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16920
  store i64 %39, i64* %24, align 8, !dbg !16920
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !16921
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16856, metadata !DIExpression()), !dbg !16905
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16906
  br i1 %41, label %42, label %27, !dbg !16906, !llvm.loop !16922

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16924
  tail call fastcc void @sys_dlist_append.257(%struct._dnode* noundef %43) #24, !dbg !16927
  br label %44, !dbg !16928

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !16929
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16930
  br i1 %46, label %47, label %54, !dbg !16931

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !16932
  call void @llvm.dbg.value(metadata i32 %48, metadata !16862, metadata !DIExpression()), !dbg !16933
  %49 = icmp ne i32 %48, 0, !dbg !16934
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16936
  br i1 %52, label %54, label %53, !dbg !16936

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16937
  br label %54, !dbg !16939

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16940, metadata !DIExpression()) #23, !dbg !16946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !16946
  call void @llvm.dbg.value(metadata i32 %9, metadata !16948, metadata !DIExpression()) #23, !dbg !16951
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16953, !srcloc !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()), !dbg !16871
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16955
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.255() unnamed_addr #1 !dbg !16956 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16959
  %2 = icmp eq i32 %1, 0, !dbg !16960
  br i1 %2, label %3, label %5, !dbg !16959

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16961
  br label %5, !dbg !16959

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16959
  ret i32 %6, !dbg !16962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16963 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.260() #24, !dbg !16969
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16967, metadata !DIExpression()), !dbg !16970
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16971
  ret %struct._timeout* %2, !dbg !16972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.256(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16973 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16977, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16978, metadata !DIExpression()), !dbg !16981
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16982
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16982
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16979, metadata !DIExpression()), !dbg !16981
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16983
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16984
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16985
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16986
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16987
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16988
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16989
  ret void, !dbg !16990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16991 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16995, metadata !DIExpression()), !dbg !16997
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16998
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.258(%struct._dnode* noundef %2) #24, !dbg !16999
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16996, metadata !DIExpression()), !dbg !16997
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17000
  ret %struct._timeout* %4, !dbg !17001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.257(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17002 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17007, metadata !DIExpression()), !dbg !17010
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17008, metadata !DIExpression()), !dbg !17010
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17011
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17009, metadata !DIExpression()), !dbg !17010
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17012
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17013
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17014
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17015
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17016
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17017
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17018
  ret void, !dbg !17019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17020 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17025
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17022, metadata !DIExpression()), !dbg !17026
  %2 = tail call fastcc i32 @elapsed.255() #24, !dbg !17027
  call void @llvm.dbg.value(metadata i32 %2, metadata !17023, metadata !DIExpression()), !dbg !17026
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17028
  br i1 %3, label %14, label %4, !dbg !17030

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17031
  %6 = load i64, i64* %5, align 8, !dbg !17031
  %7 = sext i32 %2 to i64, !dbg !17032
  %8 = sub nsw i64 %6, %7, !dbg !17033
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17034
  br i1 %9, label %14, label %10, !dbg !17035

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17036
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17036
  %13 = trunc i64 %12 to i32, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %13, metadata !17024, metadata !DIExpression()), !dbg !17026
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17038
  call void @llvm.dbg.value(metadata i32 %15, metadata !17024, metadata !DIExpression()), !dbg !17026
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17039
  %17 = icmp ne i32 %16, 0, !dbg !17041
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17042
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17042
  call void @llvm.dbg.value(metadata i32 %20, metadata !17024, metadata !DIExpression()), !dbg !17026
  ret i32 %20, !dbg !17043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.258(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17044 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17048, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17049, metadata !DIExpression()), !dbg !17050
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17051
  br i1 %2, label %5, label %3, !dbg !17052

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.259(%struct._dnode* noundef nonnull %0) #24, !dbg !17053
  br label %5, !dbg !17052

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17052
  ret %struct._dnode* %6, !dbg !17054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.259(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17055 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17057, metadata !DIExpression()), !dbg !17059
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17058, metadata !DIExpression()), !dbg !17059
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17060
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17061
  br i1 %3, label %7, label %4, !dbg !17062

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17063
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17063
  br label %7, !dbg !17062

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17062
  ret %struct._dnode* %8, !dbg !17064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.260() unnamed_addr #10 !dbg !17065 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17069, metadata !DIExpression()), !dbg !17070
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.261() #24, !dbg !17071
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17071
  ret %struct._dnode* %3, !dbg !17072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.261() unnamed_addr #10 !dbg !17073 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17077, metadata !DIExpression()), !dbg !17078
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17079
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17080
  ret i1 %2, !dbg !17081
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17082 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17086, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 -22, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 0, metadata !17088, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17093
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17095, !srcloc !16887
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16878, metadata !DIExpression()) #23, !dbg !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i32 -22, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()), !dbg !17092
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17087, metadata !DIExpression()), !dbg !17091
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.264(%struct._dnode* noundef %3) #24, !dbg !17098
  br i1 %4, label %5, label %6, !dbg !17102

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17103
  call void @llvm.dbg.value(metadata i32 0, metadata !17087, metadata !DIExpression()), !dbg !17091
  br label %6, !dbg !17105

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17091
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17095
  call void @llvm.dbg.value(metadata i32 %8, metadata !16884, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 %8, metadata !16878, metadata !DIExpression()) #23, !dbg !17093
  call void @llvm.dbg.value(metadata i32 %8, metadata !17090, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i32 %7, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 undef, metadata !16940, metadata !DIExpression()) #23, !dbg !17106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !17106
  call void @llvm.dbg.value(metadata i32 undef, metadata !16948, metadata !DIExpression()) #23, !dbg !17108
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !17110, !srcloc !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()), !dbg !17092
  ret i32 %7, !dbg !17111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.264(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17112 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17118, metadata !DIExpression()), !dbg !17119
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17120
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17120
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17121
  ret i1 %4, !dbg !17122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !17123 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17125, metadata !DIExpression()), !dbg !17126
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17127
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17129
  br i1 %3, label %10, label %4, !dbg !17130

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17131
  %6 = load i64, i64* %5, align 8, !dbg !17131
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17133
  %8 = load i64, i64* %7, align 8, !dbg !17134
  %9 = add nsw i64 %8, %6, !dbg !17134
  store i64 %9, i64* %7, align 8, !dbg !17134
  br label %10, !dbg !17135

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17136
  tail call fastcc void @sys_dlist_remove.265(%struct._dnode* noundef %11) #24, !dbg !17137
  ret void, !dbg !17138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.265(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !17139 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17143, metadata !DIExpression()), !dbg !17146
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17147
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17147
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17144, metadata !DIExpression()), !dbg !17146
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17148
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17148
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17145, metadata !DIExpression()), !dbg !17146
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17149
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17150
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17151
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17152
  tail call fastcc void @sys_dnode_init.266(%struct._dnode* noundef %0) #24, !dbg !17153
  ret void, !dbg !17154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.266(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17155 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17157, metadata !DIExpression()), !dbg !17158
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17159
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17160
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17161
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17162
  ret void, !dbg !17163
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17164 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17170, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata i64 0, metadata !17171, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata i32 0, metadata !17172, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17177
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17179, !srcloc !16887
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17179
  call void @llvm.dbg.value(metadata i32 %3, metadata !16884, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 %3, metadata !16878, metadata !DIExpression()) #23, !dbg !17177
  call void @llvm.dbg.value(metadata i32 %3, metadata !17174, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i64 0, metadata !17171, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17172, metadata !DIExpression()), !dbg !17176
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17182
  call void @llvm.dbg.value(metadata i64 %4, metadata !17171, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata i32 %3, metadata !16940, metadata !DIExpression()) #23, !dbg !17185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !17185
  call void @llvm.dbg.value(metadata i32 %3, metadata !16948, metadata !DIExpression()) #23, !dbg !17187
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17189, !srcloc !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !17172, metadata !DIExpression()), !dbg !17176
  ret i64 %4, !dbg !17190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17191 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i64 0, metadata !17194, metadata !DIExpression()), !dbg !17197
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.267(%struct._timeout* noundef %0) #24, !dbg !17198
  br i1 %2, label %21, label %3, !dbg !17200

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17201
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17195, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata i64 0, metadata !17194, metadata !DIExpression()), !dbg !17197
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17203
  br i1 %5, label %16, label %6, !dbg !17205

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17195, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata i64 %8, metadata !17194, metadata !DIExpression()), !dbg !17197
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17206
  %10 = load i64, i64* %9, align 8, !dbg !17206
  %11 = add nsw i64 %10, %8, !dbg !17208
  call void @llvm.dbg.value(metadata i64 %11, metadata !17194, metadata !DIExpression()), !dbg !17197
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17209
  br i1 %12, label %16, label %13, !dbg !17211

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17212
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17195, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata i64 %11, metadata !17194, metadata !DIExpression()), !dbg !17197
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17203
  br i1 %15, label %16, label %6, !dbg !17205, !llvm.loop !17213

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17197
  call void @llvm.dbg.value(metadata i64 %17, metadata !17194, metadata !DIExpression()), !dbg !17197
  %18 = tail call fastcc i32 @elapsed.255() #24, !dbg !17215
  %19 = sext i32 %18 to i64, !dbg !17215
  %20 = sub nsw i64 %17, %19, !dbg !17216
  br label %21, !dbg !17217

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17197
  ret i64 %22, !dbg !17218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.267(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17219 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17223, metadata !DIExpression()), !dbg !17224
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17225
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.264(%struct._dnode* noundef %2) #24, !dbg !17226
  %4 = xor i1 %3, true, !dbg !17227
  ret i1 %4, !dbg !17228
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17229 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17231, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i64 0, metadata !17232, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i32 0, metadata !17233, metadata !DIExpression()), !dbg !17237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17238
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17240, !srcloc !16887
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17240
  call void @llvm.dbg.value(metadata i32 %3, metadata !16884, metadata !DIExpression()) #23, !dbg !17242
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17242
  call void @llvm.dbg.value(metadata i32 %3, metadata !16878, metadata !DIExpression()) #23, !dbg !17238
  call void @llvm.dbg.value(metadata i32 %3, metadata !17235, metadata !DIExpression()), !dbg !17237
  call void @llvm.dbg.value(metadata i64 0, metadata !17232, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i32 undef, metadata !17233, metadata !DIExpression()), !dbg !17237
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17243
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17246
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17232, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17236
  call void @llvm.dbg.value(metadata i32 %3, metadata !16940, metadata !DIExpression()) #23, !dbg !17247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !17247
  call void @llvm.dbg.value(metadata i32 %3, metadata !16948, metadata !DIExpression()) #23, !dbg !17249
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17251, !srcloc !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !17233, metadata !DIExpression()), !dbg !17237
  %6 = add i64 %5, %4, !dbg !17252
  ret i64 %6, !dbg !17253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17254 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17256, metadata !DIExpression()), !dbg !17260
  call void @llvm.dbg.value(metadata i32 0, metadata !17257, metadata !DIExpression()), !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17262
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17264, !srcloc !16887
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17264
  call void @llvm.dbg.value(metadata i32 %2, metadata !16884, metadata !DIExpression()) #23, !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17266
  call void @llvm.dbg.value(metadata i32 %2, metadata !16878, metadata !DIExpression()) #23, !dbg !17262
  call void @llvm.dbg.value(metadata i32 %2, metadata !17259, metadata !DIExpression()), !dbg !17261
  call void @llvm.dbg.value(metadata i32 -1, metadata !17256, metadata !DIExpression()), !dbg !17260
  call void @llvm.dbg.value(metadata i32 undef, metadata !17257, metadata !DIExpression()), !dbg !17261
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !17267
  call void @llvm.dbg.value(metadata i32 %3, metadata !17256, metadata !DIExpression()), !dbg !17260
  call void @llvm.dbg.value(metadata i32 %2, metadata !16940, metadata !DIExpression()) #23, !dbg !17270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !17270
  call void @llvm.dbg.value(metadata i32 %2, metadata !16948, metadata !DIExpression()) #23, !dbg !17272
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17274, !srcloc !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !17257, metadata !DIExpression()), !dbg !17261
  ret i32 %3, !dbg !17275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17278, metadata !DIExpression()), !dbg !17288
  call void @llvm.dbg.value(metadata i1 %1, metadata !17279, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17288
  call void @llvm.dbg.value(metadata i32 0, metadata !17280, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17290
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17292, !srcloc !16887
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16878, metadata !DIExpression()) #23, !dbg !17290
  call void @llvm.dbg.value(metadata i32 undef, metadata !17282, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata i32 undef, metadata !17280, metadata !DIExpression()), !dbg !17289
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !17295
  call void @llvm.dbg.value(metadata i32 %4, metadata !17283, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i1 undef, metadata !17286, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17296
  %5 = icmp slt i32 %4, 2, !dbg !17297
  call void @llvm.dbg.value(metadata i1 %5, metadata !17287, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17296
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17298
  call void @llvm.dbg.value(metadata i1 %6, metadata !17286, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17296
  br i1 %7, label %11, label %8, !dbg !17298

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17300
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17300
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17302
  br label %11, !dbg !17303

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17292
  call void @llvm.dbg.value(metadata i32 %12, metadata !16884, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %12, metadata !16878, metadata !DIExpression()) #23, !dbg !17290
  call void @llvm.dbg.value(metadata i32 %12, metadata !17282, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata i32 undef, metadata !16940, metadata !DIExpression()) #23, !dbg !17304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !17304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16948, metadata !DIExpression()) #23, !dbg !17306
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17308, !srcloc !16954
  call void @llvm.dbg.value(metadata i32 1, metadata !17280, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata i32 undef, metadata !17280, metadata !DIExpression()), !dbg !17289
  ret void, !dbg !17309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17314, metadata !DIExpression()), !dbg !17319
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17320
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17321
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17323, !srcloc !16887
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17325
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17325
  call void @llvm.dbg.value(metadata i32 undef, metadata !16878, metadata !DIExpression()) #23, !dbg !17321
  call void @llvm.dbg.value(metadata i32 undef, metadata !17315, metadata !DIExpression()), !dbg !17319
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17319
  call void @llvm.dbg.value(metadata i32 undef, metadata !17315, metadata !DIExpression()), !dbg !17319
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !17326
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17327
  br i1 %4, label %28, label %5, !dbg !17328

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17329
  %10 = load i64, i64* %9, align 8, !dbg !17329
  %11 = sext i32 %8 to i64, !dbg !17330
  %12 = icmp sgt i64 %10, %11, !dbg !17331
  br i1 %12, label %26, label %13, !dbg !17332

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17319
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17316, metadata !DIExpression()), !dbg !17333
  %15 = trunc i64 %10 to i32, !dbg !17334
  call void @llvm.dbg.value(metadata i32 %15, metadata !17318, metadata !DIExpression()), !dbg !17333
  %16 = sext i32 %15 to i64, !dbg !17335
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17336
  %18 = add i64 %17, %16, !dbg !17336
  store i64 %18, i64* @curr_tick, align 8, !dbg !17336
  store i64 0, i64* %9, align 8, !dbg !17337
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !17338
  call void @llvm.dbg.value(metadata i32 %14, metadata !16940, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 %14, metadata !16948, metadata !DIExpression()) #23, !dbg !17341
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17343, !srcloc !16954
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17344
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17344
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17346
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17348, !srcloc !16887
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !16878, metadata !DIExpression()) #23, !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !17315, metadata !DIExpression()), !dbg !17319
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17351
  %23 = sub nsw i32 %22, %15, !dbg !17351
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17319
  call void @llvm.dbg.value(metadata i32 undef, metadata !17315, metadata !DIExpression()), !dbg !17319
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !17326
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17327
  br i1 %25, label %28, label %5, !dbg !17328, !llvm.loop !17352

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17354
  store i64 %27, i64* %9, align 8, !dbg !17354
  br label %32, !dbg !17357

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17319
  %31 = sext i32 %30 to i64, !dbg !17358
  br label %32, !dbg !17358

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17358
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17319
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17359
  %37 = add i64 %36, %33, !dbg !17359
  store i64 %37, i64* @curr_tick, align 8, !dbg !17359
  store i32 0, i32* @announce_remaining, align 4, !dbg !17360
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !17361
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17362
  call void @llvm.dbg.value(metadata i32 %35, metadata !16940, metadata !DIExpression()) #23, !dbg !17363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !17363
  call void @llvm.dbg.value(metadata i32 %35, metadata !16948, metadata !DIExpression()) #23, !dbg !17365
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17367, !srcloc !16954
  ret void, !dbg !17368
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17369 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17373, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i32 0, metadata !17374, metadata !DIExpression()), !dbg !17378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17379
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17381, !srcloc !16887
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17381
  call void @llvm.dbg.value(metadata i32 %2, metadata !16884, metadata !DIExpression()) #23, !dbg !17383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17383
  call void @llvm.dbg.value(metadata i32 %2, metadata !16878, metadata !DIExpression()) #23, !dbg !17379
  call void @llvm.dbg.value(metadata i32 %2, metadata !17376, metadata !DIExpression()), !dbg !17378
  call void @llvm.dbg.value(metadata i64 0, metadata !17373, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i32 undef, metadata !17374, metadata !DIExpression()), !dbg !17378
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17384
  %4 = tail call fastcc i32 @elapsed.255() #24, !dbg !17387
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17373, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17377
  call void @llvm.dbg.value(metadata i32 %2, metadata !16940, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16945, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata i32 %2, metadata !16948, metadata !DIExpression()) #23, !dbg !17390
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17392, !srcloc !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !17374, metadata !DIExpression()), !dbg !17378
  %5 = sext i32 %4 to i64, !dbg !17387
  %6 = add i64 %3, %5, !dbg !17393
  ret i64 %6, !dbg !17394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17395 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17396
  %2 = trunc i64 %1 to i32, !dbg !17397
  ret i32 %2, !dbg !17398
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17399 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17400
  ret i64 %1, !dbg !17401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17404, metadata !DIExpression()), !dbg !17411
  %2 = icmp eq i32 %0, 0, !dbg !17412
  br i1 %2, label %10, label %3, !dbg !17414

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17415
  call void @llvm.dbg.value(metadata i32 %4, metadata !17405, metadata !DIExpression()), !dbg !17411
  %5 = shl i32 %0, 5, !dbg !17416
  call void @llvm.dbg.value(metadata i32 %5, metadata !17406, metadata !DIExpression()), !dbg !17411
  br label %6, !dbg !17417

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17418
  call void @llvm.dbg.value(metadata i32 %7, metadata !17407, metadata !DIExpression()), !dbg !17419
  %8 = sub i32 %7, %4, !dbg !17420
  %9 = icmp ult i32 %8, %5, !dbg !17422
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17424 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17425
  ret i32 %1, !dbg !17426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17427 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17429
  ret i32 %1, !dbg !17430
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17431 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17435, metadata !DIExpression()), !dbg !17437
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17438

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17439
  br label %14, !dbg !17443

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17436, metadata !DIExpression()), !dbg !17437
  %6 = icmp slt i64 %2, -1, !dbg !17444
  br i1 %6, label %7, label %9, !dbg !17447

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17448
  br label %14, !dbg !17449

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17451
  %11 = icmp ugt i64 %2, 1, !dbg !17452
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17452
  %13 = add nsw i64 %10, %12, !dbg !17453
  br label %14, !dbg !17454

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17455
  ret i64 %15, !dbg !17456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_timer_expiration_handler(%struct._timeout* noundef %0) #1 !dbg !17457 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17459, metadata !DIExpression()), !dbg !17470
  %2 = bitcast %struct._timeout* %0 to %struct.k_timer*, !dbg !17471
  call void @llvm.dbg.value(metadata %struct.k_timer* %2, metadata !17460, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17472, metadata !DIExpression()) #23, !dbg !17479
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17481, !srcloc !17487
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17481
  call void @llvm.dbg.value(metadata i32 %4, metadata !17484, metadata !DIExpression()) #23, !dbg !17488
  call void @llvm.dbg.value(metadata i32 undef, metadata !17485, metadata !DIExpression()) #23, !dbg !17488
  call void @llvm.dbg.value(metadata i32 %4, metadata !17478, metadata !DIExpression()) #23, !dbg !17479
  call void @llvm.dbg.value(metadata i32 %4, metadata !17462, metadata !DIExpression()), !dbg !17470
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 2, !dbg !17489
  %6 = load i64, i64* %5, align 8, !dbg !17489
  switch i64 %6, label %7 [
    i64 0, label %21
    i64 -1, label %21
  ], !dbg !17490

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 undef, metadata !17467, metadata !DIExpression()), !dbg !17491
  %8 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17492
  %9 = add nsw i64 %8, 1, !dbg !17492
  %10 = load i64, i64* %5, align 8, !dbg !17492
  %11 = add nsw i64 %9, %10, !dbg !17492
  %12 = icmp sgt i64 %11, 0, !dbg !17492
  br i1 %12, label %13, label %18, !dbg !17492

13:                                               ; preds = %7
  %14 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17492
  %15 = load i64, i64* %5, align 8, !dbg !17492
  %16 = add i64 %14, %15, !dbg !17492
  %17 = sub i64 -3, %16, !dbg !17492
  br label %18, !dbg !17492

18:                                               ; preds = %7, %13
  %19 = phi i64 [ %17, %13 ], [ -2, %7 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !17467, metadata !DIExpression()), !dbg !17491
  %20 = insertvalue [1 x i64] poison, i64 %19, 0, !dbg !17493
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %0, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %20) #25, !dbg !17493
  br label %21, !dbg !17494

21:                                               ; preds = %1, %1, %18
  %22 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 2, !dbg !17495
  %23 = bitcast %struct._timeout* %22 to i32*, !dbg !17495
  %24 = load i32, i32* %23, align 8, !dbg !17496
  %25 = add i32 %24, 1, !dbg !17496
  store i32 %25, i32* %23, align 8, !dbg !17496
  %26 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 1, !dbg !17497
  %27 = bitcast void (%struct._timeout*)** %26 to void (%struct.k_timer*)**, !dbg !17497
  %28 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17497
  %29 = icmp eq void (%struct.k_timer*)* %28, null, !dbg !17499
  br i1 %29, label %34, label %30, !dbg !17500

30:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %4, metadata !17501, metadata !DIExpression()) #23, !dbg !17507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17506, metadata !DIExpression()) #23, !dbg !17507
  call void @llvm.dbg.value(metadata i32 %4, metadata !17510, metadata !DIExpression()) #23, !dbg !17513
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !17515, !srcloc !17516
  %31 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17517
  tail call void %31(%struct.k_timer* noundef nonnull %2) #25, !dbg !17518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17472, metadata !DIExpression()) #23, !dbg !17519
  %32 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17521, !srcloc !17487
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !17521
  call void @llvm.dbg.value(metadata i32 %33, metadata !17484, metadata !DIExpression()) #23, !dbg !17523
  call void @llvm.dbg.value(metadata i32 undef, metadata !17485, metadata !DIExpression()) #23, !dbg !17523
  call void @llvm.dbg.value(metadata i32 %33, metadata !17478, metadata !DIExpression()) #23, !dbg !17519
  call void @llvm.dbg.value(metadata i32 %33, metadata !17462, metadata !DIExpression()), !dbg !17470
  br label %34, !dbg !17524

34:                                               ; preds = %30, %21
  %35 = phi i32 [ %33, %30 ], [ %4, %21 ], !dbg !17470
  call void @llvm.dbg.value(metadata i32 %35, metadata !17462, metadata !DIExpression()), !dbg !17470
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, !dbg !17525
  %37 = bitcast %struct._timeout* %36 to %struct._wait_q_t*, !dbg !17525
  %38 = tail call fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef nonnull %37) #24, !dbg !17526
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17461, metadata !DIExpression()), !dbg !17470
  %39 = icmp eq %struct.k_thread* %38, null, !dbg !17527
  br i1 %39, label %40, label %41, !dbg !17529

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %35, metadata !17501, metadata !DIExpression()) #23, !dbg !17530
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17506, metadata !DIExpression()) #23, !dbg !17530
  call void @llvm.dbg.value(metadata i32 %35, metadata !17510, metadata !DIExpression()) #23, !dbg !17533
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17535, !srcloc !17516
  br label %43, !dbg !17536

41:                                               ; preds = %34
  tail call void @z_unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %38) #25, !dbg !17537
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17538, metadata !DIExpression()), !dbg !17544
  call void @llvm.dbg.value(metadata i32 0, metadata !17543, metadata !DIExpression()), !dbg !17544
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %38, i32 0, i32 7, i32 1, !dbg !17546
  store i32 0, i32* %42, align 4, !dbg !17547
  call void @llvm.dbg.value(metadata i32 %35, metadata !17501, metadata !DIExpression()) #23, !dbg !17548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17506, metadata !DIExpression()) #23, !dbg !17548
  call void @llvm.dbg.value(metadata i32 %35, metadata !17510, metadata !DIExpression()) #23, !dbg !17550
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17552, !srcloc !17516
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %38) #25, !dbg !17553
  br label %43, !dbg !17554

43:                                               ; preds = %41, %40
  ret void, !dbg !17554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !17555 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17556, !srcloc !17558
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !17559
  ret i64 %1, !dbg !17560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17561 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17565, metadata !DIExpression()), !dbg !17566
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17567
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.275(%struct._dnode* noundef %2) #24, !dbg !17568
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17569
  ret %struct.k_thread* %4, !dbg !17570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.275(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17571 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17576, metadata !DIExpression()), !dbg !17577
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.276(%struct._dnode* noundef %0) #24, !dbg !17578
  br i1 %2, label %6, label %3, !dbg !17578

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17579
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17579
  br label %6, !dbg !17578

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17578
  ret %struct._dnode* %7, !dbg !17580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.276(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17581 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17585, metadata !DIExpression()), !dbg !17586
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17587
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17587
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17588
  ret i1 %4, !dbg !17589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_timer_init(%struct.k_timer* noundef %0, void (%struct.k_timer*)* noundef %1, void (%struct.k_timer*)* noundef %2) local_unnamed_addr #6 !dbg !17590 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17596, metadata !DIExpression()), !dbg !17599
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %1, metadata !17597, metadata !DIExpression()), !dbg !17599
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %2, metadata !17598, metadata !DIExpression()), !dbg !17599
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 2, !dbg !17600
  store void (%struct.k_timer*)* %1, void (%struct.k_timer*)** %4, align 8, !dbg !17601
  %5 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17602
  store void (%struct.k_timer*)* %2, void (%struct.k_timer*)** %5, align 4, !dbg !17603
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17604
  store i32 0, i32* %6, align 8, !dbg !17605
  %7 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17606
  tail call fastcc void @z_waitq_init.279(%struct._wait_q_t* noundef nonnull %7) #24, !dbg !17609
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17610
  tail call fastcc void @z_init_timeout.280(%struct._timeout* noundef %8) #24, !dbg !17611
  %9 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 6, !dbg !17612
  store i8* null, i8** %9, align 4, !dbg !17613
  ret void, !dbg !17614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.279(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17615 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17619, metadata !DIExpression()), !dbg !17620
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17621
  tail call fastcc void @sys_dlist_init.282(%struct._dnode* noundef %2) #24, !dbg !17622
  ret void, !dbg !17623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.280(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17624 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17626, metadata !DIExpression()), !dbg !17627
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17628
  tail call fastcc void @sys_dnode_init.281(%struct._dnode* noundef %2) #24, !dbg !17629
  ret void, !dbg !17630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.281(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17631 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17635, metadata !DIExpression()), !dbg !17636
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17637
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17638
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17639
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17640
  ret void, !dbg !17641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.282(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17642 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17646, metadata !DIExpression()), !dbg !17647
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17648
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17649
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17650
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17651
  ret void, !dbg !17652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17653 {
  %4 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17658, metadata !DIExpression()), !dbg !17660
  %5 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17659, metadata !DIExpression()), !dbg !17660
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17657, metadata !DIExpression()), !dbg !17660
  %6 = icmp eq i64 %4, -1, !dbg !17661
  br i1 %6, label %23, label %7, !dbg !17663

7:                                                ; preds = %3
  %8 = icmp sgt i64 %5, 0, !dbg !17664
  %9 = icmp sgt i64 %5, 2, !dbg !17664
  %10 = select i1 %9, i64 %5, i64 2, !dbg !17664
  %11 = add nsw i64 %10, -1, !dbg !17664
  %12 = select i1 %8, i64 %11, i64 %5, !dbg !17664
  call void @llvm.dbg.value(metadata i64 %12, metadata !17659, metadata !DIExpression()), !dbg !17660
  %13 = icmp sgt i64 %4, -2, !dbg !17666
  %14 = icmp sgt i64 %4, 1, !dbg !17668
  %15 = select i1 %14, i64 %4, i64 1, !dbg !17668
  %16 = add nsw i64 %15, -1, !dbg !17668
  %17 = select i1 %13, i64 %16, i64 %4, !dbg !17668
  call void @llvm.dbg.value(metadata i64 %17, metadata !17658, metadata !DIExpression()), !dbg !17660
  %18 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17669
  %19 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %18) #25, !dbg !17670
  %20 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 4, i32 0, !dbg !17671
  store i64 %12, i64* %20, align 8, !dbg !17671
  %21 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17672
  store i32 0, i32* %21, align 8, !dbg !17673
  %22 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !17674
  tail call void @z_add_timeout(%struct._timeout* noundef %18, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %22) #25, !dbg !17674
  br label %23, !dbg !17675

23:                                               ; preds = %3, %7
  ret void, !dbg !17675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_stop(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17676 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17678, metadata !DIExpression()), !dbg !17683
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17684
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %2) #25, !dbg !17685
  %4 = icmp eq i32 %3, 0, !dbg !17686
  call void @llvm.dbg.value(metadata i1 %4, metadata !17679, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17683
  br i1 %4, label %5, label %15, !dbg !17687

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17688
  %7 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %6, align 4, !dbg !17688
  %8 = icmp eq void (%struct.k_timer*)* %7, null, !dbg !17690
  br i1 %8, label %10, label %9, !dbg !17691

9:                                                ; preds = %5
  tail call void %7(%struct.k_timer* noundef nonnull %0) #25, !dbg !17692
  br label %10, !dbg !17694

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17695
  %12 = tail call %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef nonnull %11) #25, !dbg !17696
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !17680, metadata !DIExpression()), !dbg !17697
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !17698
  br i1 %13, label %15, label %14, !dbg !17700

14:                                               ; preds = %10
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %12) #25, !dbg !17701
  tail call fastcc void @z_reschedule_unlocked.285() #24, !dbg !17703
  br label %15, !dbg !17704

15:                                               ; preds = %10, %14, %1
  ret void, !dbg !17705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.285() unnamed_addr #1 !dbg !17706 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17707, !srcloc !17487
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17707
  call void @llvm.dbg.value(metadata i32 %2, metadata !17484, metadata !DIExpression()) #23, !dbg !17709
  call void @llvm.dbg.value(metadata i32 undef, metadata !17485, metadata !DIExpression()) #23, !dbg !17709
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !17710
  ret void, !dbg !17711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_get(%struct.k_timer* nocapture noundef %0) local_unnamed_addr #1 !dbg !17712 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17716, metadata !DIExpression()), !dbg !17719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17472, metadata !DIExpression()) #23, !dbg !17720
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17722, !srcloc !17487
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17722
  call void @llvm.dbg.value(metadata i32 %3, metadata !17484, metadata !DIExpression()) #23, !dbg !17724
  call void @llvm.dbg.value(metadata i32 undef, metadata !17485, metadata !DIExpression()) #23, !dbg !17724
  call void @llvm.dbg.value(metadata i32 %3, metadata !17478, metadata !DIExpression()) #23, !dbg !17720
  call void @llvm.dbg.value(metadata i32 %3, metadata !17717, metadata !DIExpression()), !dbg !17719
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17725
  %5 = load i32, i32* %4, align 8, !dbg !17725
  call void @llvm.dbg.value(metadata i32 %5, metadata !17718, metadata !DIExpression()), !dbg !17719
  store i32 0, i32* %4, align 8, !dbg !17726
  call void @llvm.dbg.value(metadata i32 %3, metadata !17501, metadata !DIExpression()) #23, !dbg !17727
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17506, metadata !DIExpression()) #23, !dbg !17727
  call void @llvm.dbg.value(metadata i32 %3, metadata !17510, metadata !DIExpression()) #23, !dbg !17729
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17731, !srcloc !17516
  ret i32 %5, !dbg !17732
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17733 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17735, metadata !DIExpression()), !dbg !17738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17472, metadata !DIExpression()) #23, !dbg !17739
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17741, !srcloc !17487
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17741
  call void @llvm.dbg.value(metadata i32 %3, metadata !17484, metadata !DIExpression()) #23, !dbg !17743
  call void @llvm.dbg.value(metadata i32 undef, metadata !17485, metadata !DIExpression()) #23, !dbg !17743
  call void @llvm.dbg.value(metadata i32 %3, metadata !17478, metadata !DIExpression()) #23, !dbg !17739
  call void @llvm.dbg.value(metadata i32 %3, metadata !17736, metadata !DIExpression()), !dbg !17738
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17744
  %5 = load i32, i32* %4, align 8, !dbg !17744
  call void @llvm.dbg.value(metadata i32 %5, metadata !17737, metadata !DIExpression()), !dbg !17738
  %6 = icmp eq i32 %5, 0, !dbg !17745
  br i1 %6, label %7, label %17, !dbg !17747

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17748
  %9 = tail call fastcc zeroext i1 @z_is_inactive_timeout.286(%struct._timeout* noundef %8) #24, !dbg !17751
  br i1 %9, label %17, label %10, !dbg !17752

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17753
  %12 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17755
  %13 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %12, %struct._wait_q_t* noundef nonnull %11, [1 x i64] [i64 -1]) #25, !dbg !17755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17472, metadata !DIExpression()) #23, !dbg !17756
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17758, !srcloc !17487
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17758
  call void @llvm.dbg.value(metadata i32 %15, metadata !17484, metadata !DIExpression()) #23, !dbg !17760
  call void @llvm.dbg.value(metadata i32 undef, metadata !17485, metadata !DIExpression()) #23, !dbg !17760
  call void @llvm.dbg.value(metadata i32 %15, metadata !17478, metadata !DIExpression()) #23, !dbg !17756
  call void @llvm.dbg.value(metadata i32 %15, metadata !17736, metadata !DIExpression()), !dbg !17738
  %16 = load i32, i32* %4, align 8, !dbg !17761
  call void @llvm.dbg.value(metadata i32 %16, metadata !17737, metadata !DIExpression()), !dbg !17738
  br label %17, !dbg !17762

17:                                               ; preds = %1, %10, %7
  %18 = phi i32 [ 0, %7 ], [ %16, %10 ], [ %5, %1 ], !dbg !17738
  %19 = phi i32 [ %3, %7 ], [ %15, %10 ], [ %3, %1 ], !dbg !17738
  call void @llvm.dbg.value(metadata i32 %19, metadata !17736, metadata !DIExpression()), !dbg !17738
  call void @llvm.dbg.value(metadata i32 %18, metadata !17737, metadata !DIExpression()), !dbg !17738
  store i32 0, i32* %4, align 8, !dbg !17763
  call void @llvm.dbg.value(metadata i32 %19, metadata !17501, metadata !DIExpression()) #23, !dbg !17764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17506, metadata !DIExpression()) #23, !dbg !17764
  call void @llvm.dbg.value(metadata i32 %19, metadata !17510, metadata !DIExpression()) #23, !dbg !17766
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !17768, !srcloc !17516
  ret i32 %18, !dbg !17769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.286(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17770 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17776, metadata !DIExpression()), !dbg !17777
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17778
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.287(%struct._dnode* noundef %2) #24, !dbg !17779
  %4 = xor i1 %3, true, !dbg !17780
  ret i1 %4, !dbg !17781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.287(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17782 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17788, metadata !DIExpression()), !dbg !17789
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17790
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17790
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17791
  ret i1 %4, !dbg !17792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17793 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.290, i32 0, i32 0)) #25, !dbg !17795
  ret void, !dbg !17796
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!496, !2, !2847, !27, !260, !528, !549, !2849, !2851, !2885, !559, !615, !2887, !2890, !2901, !2947, !2949, !2977, !3005, !3048, !3120, !3165, !644, !794, !3193, !830, !840, !865, !973, !984, !1101, !1249, !3198, !1367, !1433, !1700, !1940, !3219, !2053, !2140, !3221, !3292, !3341, !2175, !3344, !2182, !2550, !3362, !2570, !3364, !2685, !2724, !3367}
!llvm.ident = !{!3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369, !3369}
!llvm.module.flags = !{!3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !119, line: 12, type: !252, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !103, globals: !116, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_RTIO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_RTIO_IODEV", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_LAST", value: 68)
!103 = !{!104, !105, !108, !109, !113, !114}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !110, line: 46, baseType: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !112)
!112 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !{!25, !117, !227, !229, !235, !237, !245}
!117 = !DIGlobalVariableExpression(var: !118, expr: !DIExpression())
!118 = distinct !DIGlobalVariable(name: "simple_exec", scope: !27, file: !119, line: 24, type: !120, isLocal: false, isDefinition: true)
!119 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_simple_executor", file: !121, line: 57, size: 32, elements: !122)
!121 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_simple.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !120, file: !121, line: 58, baseType: !124, size: 32)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !126)
!125 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !124, file: !125, line: 211, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !131)
!131 = !{!132, !222, !226}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !130, file: !125, line: 177, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!108, !136}
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !138)
!138 = !{!139, !141, !145, !210}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !137, file: !125, line: 228, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !137, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !143, line: 22, baseType: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !137, file: !125, line: 254, baseType: !146, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !148)
!148 = !{!149, !159}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !147, file: !125, line: 143, baseType: !150, size: 160)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_spsc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = !{!153, !154, !155, !156, !157}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !150, file: !151, line: 60, baseType: !24, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !150, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !150, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !150, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !150, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !147, file: !125, line: 144, baseType: !160, offset: 160)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, elements: !197)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !162)
!162 = !{!163, !166, !167, !170, !200, !201}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !161, file: !125, line: 110, baseType: !164, size: 8)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !161, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !161, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !169)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !161, file: !125, line: 116, baseType: !171, size: 32, offset: 32)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !174)
!174 = !{!175, !186, !199}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !173, file: !125, line: 308, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !178, file: !125, line: 271, baseType: !181, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184, !136}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !173, file: !125, line: 311, baseType: !187, size: 32, offset: 32)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !188, file: !125, line: 299, baseType: !150, size: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !188, file: !125, line: 300, baseType: !192, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !197)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !194)
!194 = !{!195, !196}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !193, file: !125, line: 289, baseType: !184, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !193, file: !125, line: 290, baseType: !136, size: 32, offset: 32)
!197 = !{!198}
!198 = !DISubrange(count: -1)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !173, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !161, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !125, line: 127, baseType: !202, size: 64, offset: 96)
!202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !125, line: 127, size: 64, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !125, line: 128, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !202, file: !125, line: 128, size: 64, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !205, file: !125, line: 129, baseType: !113, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !205, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !137, file: !125, line: 257, baseType: !211, size: 32, offset: 96)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !213)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !212, file: !125, line: 162, baseType: !150, size: 160)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !212, file: !125, line: 163, baseType: !216, offset: 160)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, elements: !197)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !218)
!218 = !{!219, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !217, file: !125, line: 151, baseType: !220, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !108)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !217, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !130, file: !125, line: 182, baseType: !223, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DISubroutineType(types: !225)
!225 = !{null, !136, !184, !108}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !130, file: !125, line: 187, baseType: !223, size: 32, offset: 64)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "ez_io", scope: !27, file: !119, line: 25, type: !137, isLocal: false, isDefinition: true, align: 32)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "bufs", scope: !27, file: !119, line: 27, type: !231, isLocal: true, isDefinition: true)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 1024, elements: !232)
!232 = !{!233, !234}
!233 = !DISubrange(count: 8)
!234 = !DISubrange(count: 16)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(name: "z_rtio_simple_api", scope: !27, file: !121, line: 64, type: !129, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "_sq_ez_io", scope: !27, file: !119, line: 25, type: !239, isLocal: true, isDefinition: true)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__sq_ez_io", file: !119, line: 25, size: 1440, elements: !240)
!240 = !{!241, !242}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !239, file: !119, line: 25, baseType: !150, size: 160)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !239, file: !119, line: 25, baseType: !243, size: 1280, offset: 160)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1280, elements: !244)
!244 = !{!233}
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "_cq_ez_io", scope: !27, file: !119, line: 25, type: !247, isLocal: true, isDefinition: true)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__cq_ez_io", file: !119, line: 25, size: 672, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !247, file: !119, line: 25, baseType: !150, size: 160)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !247, file: !119, line: 25, baseType: !251, size: 512, offset: 160)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 512, elements: !244)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !253, file: !254, line: 17, baseType: !105, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !253, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "log_const_vnd_sensor", scope: !260, file: !265, line: 14, type: !489, isLocal: false, isDefinition: true)
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !262, globals: !450, splitDebugInlining: false, nameTableKind: None)
!261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!262 = !{!104, !108, !263, !109, !443, !113, !114}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_data", file: !265, line: 21, size: 960, elements: !266)
!265 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!266 = !{!267, !357, !407, !430, !449}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !264, file: !265, line: 22, baseType: !268, size: 96)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !269)
!269 = !{!270, !345, !356}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !268, file: !125, line: 308, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !274)
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !273, file: !125, line: 271, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !279, !298}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !282)
!282 = !{!283, !284, !285, !286, !289, !290}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !281, file: !125, line: 110, baseType: !164, size: 8)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !281, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !281, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !281, file: !125, line: 116, baseType: !287, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !281, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !125, line: 127, baseType: !291, size: 64, offset: 96)
!291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !125, line: 127, size: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, scope: !291, file: !125, line: 128, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !291, file: !125, line: 128, size: 64, elements: !295)
!295 = !{!296, !297}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !294, file: !125, line: 129, baseType: !113, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !294, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !300)
!300 = !{!301, !319, !320, !334}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !299, file: !125, line: 228, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !303, file: !125, line: 211, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !309)
!309 = !{!310, !314, !318}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !308, file: !125, line: 177, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{!108, !298}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !308, file: !125, line: 182, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !298, !279, !108}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !308, file: !125, line: 187, baseType: !315, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !299, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !299, file: !125, line: 254, baseType: !321, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !323)
!323 = !{!324, !332}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !322, file: !125, line: 143, baseType: !325, size: 160)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !326)
!326 = !{!327, !328, !329, !330, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !325, file: !151, line: 60, baseType: !24, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !325, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !325, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !325, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !325, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !322, file: !125, line: 144, baseType: !333, offset: 160)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !197)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !299, file: !125, line: 257, baseType: !335, size: 32, offset: 96)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !337)
!337 = !{!338, !339}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !336, file: !125, line: 162, baseType: !325, size: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !336, file: !125, line: 163, baseType: !340, offset: 160)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !197)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !341, file: !125, line: 151, baseType: !220, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !341, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !268, file: !125, line: 311, baseType: !346, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !347, file: !125, line: 299, baseType: !325, size: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !347, file: !125, line: 300, baseType: !351, offset: 160)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, elements: !197)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !353)
!353 = !{!354, !355}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !352, file: !125, line: 289, baseType: !279, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !352, file: !125, line: 290, baseType: !298, size: 32, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !268, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !264, file: !265, line: 23, baseType: !358, size: 448, offset: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !388, !394, !399, !400, !405, !406}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !359, line: 1324, baseType: !362, size: 192)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !381, !387}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !362, file: !363, line: 245, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !369)
!369 = !{!370, !376}
!370 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 38, baseType: !371, size: 32)
!371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 38, size: 32, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !371, file: !367, line: 39, baseType: !374, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !371, file: !367, line: 40, baseType: !374, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 42, baseType: !377, size: 32, offset: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 42, size: 32, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !377, file: !367, line: 43, baseType: !374, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !377, file: !367, line: 44, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !362, file: !363, line: 246, baseType: !382, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !386}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !362, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !358, file: !359, line: 1327, baseType: !389, size: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !363, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !358, file: !359, line: 1330, baseType: !395, size: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !358, file: !359, line: 1333, baseType: !395, size: 32, offset: 288)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !358, file: !359, line: 1336, baseType: !401, size: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !402, file: !110, line: 66, baseType: !109, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !358, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !358, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !265, line: 24, baseType: !408, size: 32, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !412)
!411 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!412 = !{!413, !414, !415, !416, !423, !424}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !411, line: 380, baseType: !105, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !410, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !410, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !410, file: !411, line: 386, baseType: !417, size: 32, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !418, file: !411, line: 359, baseType: !164, size: 8)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !418, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!422 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !410, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !410, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !411, line: 43, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !429)
!429 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !264, file: !265, line: 25, baseType: !431, size: 320, offset: 608)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !359, line: 4204, size: 320, elements: !432)
!432 = !{!433, !434, !438, !441, !442, !444, !445, !446, !447, !448}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !431, file: !359, line: 4206, baseType: !389, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !431, file: !359, line: 4208, baseType: !435, offset: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !431, file: !359, line: 4210, baseType: !439, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !440, line: 214, baseType: !32)
!440 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !431, file: !359, line: 4212, baseType: !113, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !431, file: !359, line: 4214, baseType: !443, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !431, file: !359, line: 4216, baseType: !443, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !431, file: !359, line: 4218, baseType: !443, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !431, file: !359, line: 4220, baseType: !443, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !431, file: !359, line: 4222, baseType: !113, size: 32, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !431, file: !359, line: 4227, baseType: !164, size: 8, offset: 288)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sample_number", scope: !264, file: !265, line: 26, baseType: !113, size: 32, offset: 928)
!450 = !{!258, !451, !458, !463, !465, !476, !478, !485, !487}
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_sq_0", scope: !260, file: !265, line: 152, type: !453, isLocal: false, isDefinition: true)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc_vnd_sensor_iodev_sq_0", file: !265, line: 152, size: 672, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !453, file: !265, line: 152, baseType: !325, size: 160)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !453, file: !265, line: 152, baseType: !457, size: 512, offset: 160)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 512, elements: !244)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !260, file: !265, line: 152, type: !460, isLocal: false, isDefinition: true, align: 16)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 4)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !260, file: !265, line: 152, type: !409, isLocal: false, isDefinition: true, align: 32)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !260, file: !265, line: 152, type: !467, isLocal: true, isDefinition: true, align: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !470)
!469 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !468, file: !469, line: 60, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DISubroutineType(types: !474)
!474 = !{!108, !408}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !468, file: !469, line: 65, baseType: !408, size: 32, offset: 32)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !260, file: !265, line: 152, type: !418, isLocal: true, isDefinition: true, align: 8)
!478 = !DIGlobalVariableExpression(var: !479, expr: !DIExpression())
!479 = distinct !DIGlobalVariable(name: "vnd_sensor_config_0", scope: !260, file: !265, line: 152, type: !480, isLocal: true, isDefinition: true)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_config", file: !265, line: 16, size: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !481, file: !265, line: 17, baseType: !113, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !481, file: !265, line: 18, baseType: !439, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "vnd_sensor_data_0", scope: !260, file: !265, line: 152, type: !264, isLocal: true, isDefinition: true)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_api", scope: !260, file: !265, line: 127, type: !272, isLocal: true, isDefinition: true)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !254, line: 17, baseType: !105, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !490, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !496, file: !501, line: 82, type: !507, isLocal: false, isDefinition: true, align: 16)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !498, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!498 = !{!499, !505, !510, !512, !514, !516, !518, !520, !522, !524, !494}
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !496, file: !501, line: 16, type: !502, isLocal: false, isDefinition: true, align: 16)
!501 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 176, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 11)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !496, file: !501, line: 21, type: !507, isLocal: false, isDefinition: true, align: 16)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 48, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 3)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !496, file: !501, line: 28, type: !460, isLocal: false, isDefinition: true, align: 16)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !496, file: !501, line: 35, type: !460, isLocal: false, isDefinition: true, align: 16)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_56", scope: !496, file: !501, line: 42, type: !460, isLocal: false, isDefinition: true, align: 16)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_62", scope: !496, file: !501, line: 49, type: !460, isLocal: false, isDefinition: true, align: 16)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !496, file: !501, line: 56, type: !460, isLocal: false, isDefinition: true, align: 16)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !496, file: !501, line: 63, type: !460, isLocal: false, isDefinition: true, align: 16)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !496, file: !501, line: 70, type: !460, isLocal: false, isDefinition: true, align: 16)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !496, file: !501, line: 77, type: !460, isLocal: false, isDefinition: true, align: 16)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !528, file: !541, line: 18, type: !542, isLocal: false, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !530, globals: !540, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!530 = !{!22, !104, !24, !531, !533, !535, !439, !108, !536, !537, !538, !539, !443, !209, !168, !105}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!540 = !{!526}
!541 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !543, file: !254, line: 17, baseType: !105, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !543, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(name: "_char_out", scope: !549, file: !553, line: 54, type: !554, isLocal: false, isDefinition: true)
!549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !551, globals: !552, splitDebugInlining: false, nameTableKind: None)
!550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!551 = !{!104, !108}
!552 = !{!547}
!553 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 32)
!555 = !DISubroutineType(types: !556)
!556 = !{!108, !108}
!557 = !DIGlobalVariableExpression(var: !558, expr: !DIExpression())
!558 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !559, file: !589, line: 60, type: !590, isLocal: true, isDefinition: true, align: 32)
!559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !561, globals: !588, splitDebugInlining: false, nameTableKind: None)
!560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!561 = !{!562, !582}
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !564, line: 386, baseType: !565)
!564 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 370, size: 448, elements: !566)
!566 = !{!567, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !565, file: !564, line: 372, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !565, file: !564, line: 373, baseType: !568, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !565, file: !564, line: 374, baseType: !568, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !565, file: !564, line: 375, baseType: !568, size: 32, offset: 96)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !565, file: !564, line: 376, baseType: !568, size: 32, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !565, file: !564, line: 377, baseType: !568, size: 32, offset: 160)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !565, file: !564, line: 378, baseType: !568, size: 32, offset: 192)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !565, file: !564, line: 379, baseType: !568, size: 32, offset: 224)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !565, file: !564, line: 380, baseType: !568, size: 32, offset: 256)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !565, file: !564, line: 381, baseType: !568, size: 32, offset: 288)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !565, file: !564, line: 382, baseType: !568, size: 32, offset: 320)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !565, file: !564, line: 383, baseType: !568, size: 32, offset: 352)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !565, file: !564, line: 384, baseType: !568, size: 32, offset: 384)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !565, file: !564, line: 385, baseType: !568, size: 32, offset: 416)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !564, line: 364, baseType: !584)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 360, size: 64, elements: !585)
!585 = !{!586, !587}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !584, file: !564, line: 362, baseType: !568, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !584, file: !564, line: 363, baseType: !568, size: 32, offset: 32)
!588 = !{!557}
!589 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !591)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !592)
!592 = !{!593, !612}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !591, file: !469, line: 60, baseType: !594, size: 32)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = !DISubroutineType(types: !596)
!596 = !{!108, !597}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 32)
!598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !600)
!600 = !{!601, !602, !603, !604, !610, !611}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !599, file: !411, line: 380, baseType: !105, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !599, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !599, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !599, file: !411, line: 386, baseType: !605, size: 32, offset: 96)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 32)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !607)
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !606, file: !411, line: 359, baseType: !164, size: 8)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !606, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !599, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !599, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !591, file: !469, line: 65, baseType: !597, size: 32, offset: 32)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !615, file: !618, line: 71, type: !619, isLocal: true, isDefinition: true, align: 32)
!615 = distinct !DICompileUnit(language: DW_LANG_C99, file: !616, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !617, splitDebugInlining: false, nameTableKind: None)
!616 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!617 = !{!613}
!618 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !621)
!621 = !{!622, !641}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !620, file: !469, line: 60, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 32)
!624 = !DISubroutineType(types: !625)
!625 = !{!108, !626}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !629)
!629 = !{!630, !631, !632, !633, !639, !640}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !628, file: !411, line: 380, baseType: !105, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !628, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !628, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !628, file: !411, line: 386, baseType: !634, size: 32, offset: 96)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 32)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !636)
!636 = !{!637, !638}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !635, file: !411, line: 359, baseType: !164, size: 8)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !635, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !628, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !628, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !620, file: !469, line: 65, baseType: !626, size: 32, offset: 32)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !644, file: !651, line: 17, type: !787, isLocal: false, isDefinition: true)
!644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !646, globals: !647, splitDebugInlining: false, nameTableKind: None)
!645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!646 = !{!439, !108, !113, !104}
!647 = !{!642, !648, !783}
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !650, file: !651, line: 198, type: !769, isLocal: true, isDefinition: true)
!650 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !651, file: !651, line: 175, type: !652, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !644, retainedNodes: !764)
!651 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !DISubroutineType(types: !653)
!653 = !{null, !654}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !657)
!656 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = !{!658, !721, !734, !735, !736, !737, !743, !759}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !655, file: !656, line: 247, baseType: !659, size: 384)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !660)
!660 = !{!661, !688, !695, !696, !697, !708, !709, !710}
!661 = !DIDerivedType(tag: DW_TAG_member, scope: !659, file: !656, line: 60, baseType: !662, size: 64)
!662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !659, file: !656, line: 60, size: 64, elements: !663)
!663 = !{!664, !679}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !662, file: !656, line: 61, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !667)
!667 = !{!668, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, scope: !666, file: !367, line: 38, baseType: !669, size: 32)
!669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !666, file: !367, line: 38, size: 32, elements: !670)
!670 = !{!671, !673}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !669, file: !367, line: 39, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !669, file: !367, line: 40, baseType: !672, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, scope: !666, file: !367, line: 42, baseType: !675, size: 32, offset: 32)
!675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !666, file: !367, line: 42, size: 32, elements: !676)
!676 = !{!677, !678}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !675, file: !367, line: 43, baseType: !672, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !675, file: !367, line: 44, baseType: !672, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !662, file: !656, line: 62, baseType: !680, size: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !682)
!681 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !680, file: !681, line: 50, baseType: !684, size: 64)
!684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !685, size: 64, elements: !686)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!686 = !{!687}
!687 = !DISubrange(count: 2)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !659, file: !656, line: 68, baseType: !689, size: 32, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !692)
!692 = !{!693}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !691, file: !363, line: 232, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !666)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !659, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !659, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!697 = !DIDerivedType(tag: DW_TAG_member, scope: !659, file: !656, line: 90, baseType: !698, size: 16, offset: 112)
!698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !659, file: !656, line: 90, size: 16, elements: !699)
!699 = !{!700, !707}
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !656, line: 91, baseType: !701, size: 16)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !698, file: !656, line: 91, size: 16, elements: !702)
!702 = !{!703, !706}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !701, file: !656, line: 96, baseType: !704, size: 8)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !705)
!705 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !701, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !698, file: !656, line: 100, baseType: !168, size: 16)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !659, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !659, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !656, line: 131, baseType: !711, size: 192, offset: 192)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !712)
!712 = !{!713, !714, !720}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !711, file: !363, line: 245, baseType: !665, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !711, file: !363, line: 246, baseType: !715, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !716)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!717 = !DISubroutineType(types: !718)
!718 = !{null, !719}
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !711, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !655, file: !656, line: 250, baseType: !722, size: 288, offset: 384)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !724)
!723 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!724 = !{!725, !726, !727, !728, !729, !730, !731, !732, !733}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !722, file: !723, line: 26, baseType: !113, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !722, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !722, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !722, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !722, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !722, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !722, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !722, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !722, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !655, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !655, file: !656, line: 256, baseType: !690, size: 64, offset: 704)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !655, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !655, file: !656, line: 300, baseType: !738, size: 96, offset: 800)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !739)
!739 = !{!740, !741, !742}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !738, file: !656, line: 153, baseType: !22, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !738, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !738, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !655, file: !656, line: 325, baseType: !744, size: 32, offset: 896)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !746)
!746 = !{!747, !756, !757}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !745, file: !359, line: 5074, baseType: !748, size: 96)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !750)
!749 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!750 = !{!751, !754, !755}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !748, file: !749, line: 57, baseType: !752, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 32)
!753 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !749, line: 57, flags: DIFlagFwdDecl)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !748, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !748, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !745, file: !359, line: 5075, baseType: !690, size: 64, offset: 96)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !745, file: !359, line: 5076, baseType: !758, offset: 160)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !655, file: !656, line: 343, baseType: !760, size: 64, offset: 928)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !761)
!761 = !{!762, !763}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !760, file: !723, line: 63, baseType: !113, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !760, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!764 = !{!765, !766, !767, !768}
!765 = !DILocalVariable(name: "thread", arg: 1, scope: !650, file: !651, line: 175, type: !654)
!766 = !DILocalVariable(name: "region_num", scope: !650, file: !651, line: 200, type: !164)
!767 = !DILocalVariable(name: "guard_start", scope: !650, file: !651, line: 265, type: !22)
!768 = !DILocalVariable(name: "guard_size", scope: !650, file: !651, line: 266, type: !439)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !770, size: 96, elements: !781)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !771, line: 52, size: 96, elements: !772)
!771 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!772 = !{!773, !774, !775}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !770, file: !771, line: 53, baseType: !22, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !770, file: !771, line: 54, baseType: !439, size: 32, offset: 32)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !770, file: !771, line: 55, baseType: !776, size: 32, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !777, line: 151, baseType: !778)
!777 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !777, line: 149, size: 32, elements: !779)
!779 = !{!780}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !778, file: !777, line: 150, baseType: !113, size: 32)
!781 = !{!782}
!782 = !DISubrange(count: 1)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "static_regions", scope: !644, file: !651, line: 62, type: !785, isLocal: true, isDefinition: true)
!785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !786, size: 96, elements: !781)
!786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !770)
!787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !789)
!789 = !{!790, !791}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !788, file: !254, line: 17, baseType: !105, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !788, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !794, file: !827, line: 39, type: !164, isLocal: true, isDefinition: true)
!794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, globals: !826, splitDebugInlining: false, nameTableKind: None)
!795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!796 = !{!797, !104, !108, !814, !164}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !799, line: 1168, baseType: !800)
!799 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 1155, size: 352, elements: !801)
!801 = !{!802, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !800, file: !799, line: 1157, baseType: !803, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !568)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !800, file: !799, line: 1158, baseType: !568, size: 32, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !800, file: !799, line: 1159, baseType: !568, size: 32, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !800, file: !799, line: 1160, baseType: !568, size: 32, offset: 96)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !800, file: !799, line: 1161, baseType: !568, size: 32, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !800, file: !799, line: 1162, baseType: !568, size: 32, offset: 160)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !800, file: !799, line: 1163, baseType: !568, size: 32, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !800, file: !799, line: 1164, baseType: !568, size: 32, offset: 224)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !800, file: !799, line: 1165, baseType: !568, size: 32, offset: 256)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !800, file: !799, line: 1166, baseType: !568, size: 32, offset: 288)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !800, file: !799, line: 1167, baseType: !568, size: 32, offset: 320)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !817, line: 27, size: 96, elements: !818)
!817 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!818 = !{!819, !820, !821}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !816, file: !817, line: 29, baseType: !113, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !816, file: !817, line: 31, baseType: !105, size: 32, offset: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !816, file: !817, line: 37, baseType: !822, size: 32, offset: 64)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !777, line: 146, baseType: !823)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !777, line: 141, size: 32, elements: !824)
!824 = !{!825}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !823, file: !777, line: 143, baseType: !113, size: 32)
!826 = !{!792}
!827 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !830, file: !837, line: 21, type: !554, isLocal: true, isDefinition: true)
!830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !831, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !832, globals: !836, splitDebugInlining: false, nameTableKind: None)
!831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!832 = !{!833, !108, !104}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !835, line: 22, baseType: !108)
!835 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !{!828}
!837 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !840, file: !845, line: 13, type: !862, isLocal: true, isDefinition: true)
!840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !842, splitDebugInlining: false, nameTableKind: None)
!841 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!842 = !{!843, !838}
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "mpu_config", scope: !840, file: !845, line: 37, type: !846, isLocal: false, isDefinition: true)
!845 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !817, line: 41, size: 64, elements: !848)
!848 = !{!849, !850}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !847, file: !817, line: 43, baseType: !113, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !847, file: !817, line: 45, baseType: !851, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !853)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !817, line: 27, size: 96, elements: !854)
!854 = !{!855, !856, !857}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !853, file: !817, line: 29, baseType: !113, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !853, file: !817, line: 31, baseType: !105, size: 32, offset: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !853, file: !817, line: 37, baseType: !858, size: 32, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !777, line: 146, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !777, line: 141, size: 32, elements: !860)
!860 = !{!861}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !859, file: !777, line: 143, baseType: !113, size: 32)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 192, elements: !686)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !865, file: !962, line: 36, type: !963, isLocal: true, isDefinition: true, align: 32)
!865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !866, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !867, retainedTypes: !879, globals: !961, splitDebugInlining: false, nameTableKind: None)
!866 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!867 = !{!868, !874}
!868 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !869, line: 506, baseType: !32, size: 32, elements: !870)
!869 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!870 = !{!871, !872, !873}
!871 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!872 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!873 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !869, line: 512, baseType: !32, size: 32, elements: !875)
!875 = !{!876, !877, !878}
!876 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!877 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!878 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!879 = !{!880, !950, !955, !915, !874, !868, !960, !104}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !869, line: 523, size: 288, elements: !883)
!883 = !{!884, !905, !911, !916, !920, !921, !922, !926, !946}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !882, file: !869, line: 524, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !888, !903, !904}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !891)
!891 = !{!892, !893, !894, !895, !901, !902}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !890, file: !411, line: 380, baseType: !105, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !890, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !890, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !890, file: !411, line: 386, baseType: !896, size: 32, offset: 96)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !898)
!898 = !{!899, !900}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !897, file: !411, line: 359, baseType: !164, size: 8)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !897, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !890, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !890, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !869, line: 237, baseType: !164)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !869, line: 257, baseType: !113)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !882, file: !869, line: 530, baseType: !906, size: 32, offset: 32)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 32)
!907 = !DISubroutineType(types: !908)
!908 = !{!108, !888, !909}
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !869, line: 229, baseType: !113)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !882, file: !869, line: 532, baseType: !912, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!108, !888, !915, !910}
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !869, line: 216, baseType: !113)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !882, file: !869, line: 535, baseType: !917, size: 32, offset: 96)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DISubroutineType(types: !919)
!919 = !{!108, !888, !915}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !882, file: !869, line: 537, baseType: !917, size: 32, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !882, file: !869, line: 539, baseType: !917, size: 32, offset: 160)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !882, file: !869, line: 541, baseType: !923, size: 32, offset: 192)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!108, !888, !903, !868, !874}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !882, file: !869, line: 544, baseType: !927, size: 32, offset: 224)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DISubroutineType(types: !929)
!929 = !{!108, !888, !930, !422}
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !869, line: 478, size: 96, elements: !932)
!932 = !{!933, !940, !945}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !931, file: !869, line: 482, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !935, line: 33, baseType: !936)
!935 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !935, line: 29, size: 32, elements: !937)
!937 = !{!938}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !936, file: !935, line: 30, baseType: !939, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !931, file: !869, line: 485, baseType: !941, size: 32, offset: 32)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !869, line: 464, baseType: !942)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DISubroutineType(types: !944)
!944 = !{null, !888, !930, !915}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !931, file: !869, line: 493, baseType: !915, size: 32, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !882, file: !869, line: 547, baseType: !947, size: 32, offset: 256)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DISubroutineType(types: !949)
!949 = !{!113, !888}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !869, line: 428, size: 32, elements: !953)
!953 = !{!954}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !952, file: !869, line: 434, baseType: !915, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !869, line: 441, size: 32, elements: !958)
!958 = !{!959}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !957, file: !869, line: 447, baseType: !915, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!961 = !{!863}
!962 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !965)
!965 = !{!966, !970}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !964, file: !469, line: 60, baseType: !967, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!108, !888}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !964, file: !469, line: 65, baseType: !888, size: 32, offset: 32)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_simple", scope: !973, file: !976, line: 12, type: !977, isLocal: false, isDefinition: true)
!973 = distinct !DICompileUnit(language: DW_LANG_C99, file: !974, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !551, globals: !975, splitDebugInlining: false, nameTableKind: None)
!974 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!975 = !{!971}
!976 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !979)
!979 = !{!980, !981}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !978, file: !254, line: 17, baseType: !105, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !978, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_concurrent", scope: !984, file: !1093, line: 13, type: !1094, isLocal: false, isDefinition: true)
!984 = distinct !DICompileUnit(language: DW_LANG_C99, file: !985, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !986, globals: !1092, splitDebugInlining: false, nameTableKind: None)
!985 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!986 = !{!987, !104, !108}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_concurrent_executor", file: !989, line: 61, size: 224, elements: !990)
!989 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_concurrent.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!990 = !{!991, !1081, !1083, !1084, !1085, !1086, !1088, !1089, !1090}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !988, file: !989, line: 62, baseType: !992, size: 32)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !993)
!993 = !{!994}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !992, file: !125, line: 211, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !998)
!998 = !{!999, !1076, !1080}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !997, file: !125, line: 177, baseType: !1000, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!108, !1003}
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !1005)
!1005 = !{!1006, !1008, !1009, !1065}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !1004, file: !125, line: 228, baseType: !1007, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !1004, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !1004, file: !125, line: 254, baseType: !1010, size: 32, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !1012)
!1012 = !{!1013, !1021}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !1011, file: !125, line: 143, baseType: !1014, size: 160)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019, !1020}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !1014, file: !151, line: 60, baseType: !24, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !1014, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1014, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1014, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1014, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1011, file: !125, line: 144, baseType: !1022, offset: 160)
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, elements: !197)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1056, !1057}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1023, file: !125, line: 110, baseType: !164, size: 8)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1023, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1023, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !1023, file: !125, line: 116, baseType: !1029, size: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !1032)
!1032 = !{!1033, !1044, !1055}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1031, file: !125, line: 308, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !1037)
!1037 = !{!1038}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !1036, file: !125, line: 271, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{null, !1042, !1003}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !1031, file: !125, line: 311, baseType: !1045, size: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !1046, file: !125, line: 299, baseType: !1014, size: 160)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1046, file: !125, line: 300, baseType: !1050, offset: 160)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1051, elements: !197)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !1052)
!1052 = !{!1053, !1054}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !1051, file: !125, line: 289, baseType: !1042, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1051, file: !125, line: 290, baseType: !1003, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1031, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1023, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, scope: !1023, file: !125, line: 127, baseType: !1058, size: 64, offset: 96)
!1058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1023, file: !125, line: 127, size: 64, elements: !1059)
!1059 = !{!1060}
!1060 = !DIDerivedType(tag: DW_TAG_member, scope: !1058, file: !125, line: 128, baseType: !1061, size: 64)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1058, file: !125, line: 128, size: 64, elements: !1062)
!1062 = !{!1063, !1064}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1061, file: !125, line: 129, baseType: !113, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1061, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !1004, file: !125, line: 257, baseType: !1066, size: 32, offset: 96)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !1068)
!1068 = !{!1069, !1070}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !1067, file: !125, line: 162, baseType: !1014, size: 160)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1067, file: !125, line: 163, baseType: !1071, offset: 160)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, elements: !197)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1072, file: !125, line: 151, baseType: !220, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1072, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !997, file: !125, line: 182, baseType: !1077, size: 32, offset: 32)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !1003, !1042, !108}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !997, file: !125, line: 187, baseType: !1077, size: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !988, file: !989, line: 65, baseType: !1082, offset: 32)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "task_in", scope: !988, file: !989, line: 68, baseType: !168, size: 16, offset: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "task_out", scope: !988, file: !989, line: 68, baseType: !168, size: 16, offset: 48)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "task_mask", scope: !988, file: !989, line: 68, baseType: !168, size: 16, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sqe", scope: !988, file: !989, line: 71, baseType: !1087, size: 32, offset: 96)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "last_sqe", scope: !988, file: !989, line: 74, baseType: !1087, size: 32, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "task_status", scope: !988, file: !989, line: 77, baseType: !209, size: 32, offset: 160)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "task_cur", scope: !988, file: !989, line: 80, baseType: !1091, size: 32, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1092 = !{!982}
!1093 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !1096)
!1096 = !{!1097, !1098}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1095, file: !254, line: 17, baseType: !105, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1095, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !1101, file: !1173, line: 48, type: !1244, isLocal: true, isDefinition: true)
!1101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1102, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1103, retainedTypes: !1159, globals: !1170, splitDebugInlining: false, nameTableKind: None)
!1102 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!1103 = !{!30, !1104}
!1104 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !564, line: 69, baseType: !108, size: 32, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158}
!1106 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1107 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1108 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1109 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1110 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1111 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1112 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1113 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1114 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1115 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1116 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1117 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!1118 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1119 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1120 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1121 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1122 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1123 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1124 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1125 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1126 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!1127 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!1128 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!1129 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!1130 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!1131 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!1132 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!1133 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!1134 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!1135 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!1136 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!1137 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!1138 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1139 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!1140 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!1141 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!1142 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1143 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1144 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1145 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1146 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1147 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1148 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1149 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1150 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1151 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1152 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1153 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1154 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1155 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1156 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!1157 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!1158 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!1159 = !{!439, !108, !104, !1160}
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !564, line: 270, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 262, size: 192, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1168, !1169}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1162, file: !564, line: 264, baseType: !568, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1162, file: !564, line: 265, baseType: !568, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1162, file: !564, line: 266, baseType: !568, size: 32, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1162, file: !564, line: 267, baseType: !568, size: 32, offset: 96)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1162, file: !564, line: 268, baseType: !568, size: 32, offset: 128)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1162, file: !564, line: 269, baseType: !568, size: 32, offset: 160)
!1170 = !{!1171, !1174, !1190, !1201, !1217, !1099, !1219, !1232, !1234, !1236, !1238, !1240, !1242}
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !1101, file: !1173, line: 424, type: !460, isLocal: false, isDefinition: true, align: 16)
!1173 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !1101, file: !1173, line: 424, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1188, !1189}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1177, file: !411, line: 380, baseType: !105, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1177, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1177, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1177, file: !411, line: 386, baseType: !1183, size: 32, offset: 96)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1185)
!1185 = !{!1186, !1187}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1184, file: !411, line: 359, baseType: !164, size: 8)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1184, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1177, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1177, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !1101, file: !1173, line: 424, type: !1192, isLocal: true, isDefinition: true, align: 32)
!1192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1194)
!1194 = !{!1195, !1200}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1193, file: !469, line: 60, baseType: !1196, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!108, !1199}
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1193, file: !469, line: 65, baseType: !1199, size: 32, offset: 32)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "exti_data", scope: !1101, file: !1173, line: 423, type: !1203, isLocal: true, isDefinition: true)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1173, line: 107, size: 1024, elements: !1204)
!1204 = !{!1205}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1203, file: !1173, line: 109, baseType: !1206, size: 1024)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 1024, elements: !1216)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1173, line: 101, size: 64, elements: !1208)
!1208 = !{!1209, !1215}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1207, file: !1173, line: 102, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1211, line: 63, baseType: !1212)
!1211 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{null, !108, !104}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1207, file: !1173, line: 103, baseType: !104, size: 32, offset: 32)
!1216 = !{!234}
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !1101, file: !1173, line: 424, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1221, file: !1173, line: 493, type: !1226, isLocal: true, isDefinition: true, align: 32)
!1221 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1173, file: !1173, line: 460, type: !1222, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !1224)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{null, !1199}
!1224 = !{!1225}
!1225 = !DILocalVariable(name: "dev", arg: 1, scope: !1221, file: !1173, line: 460, type: !1199)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1226, file: !10, line: 55, baseType: !220, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1226, file: !10, line: 57, baseType: !220, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1226, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1226, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1221, file: !1173, line: 497, type: !1226, isLocal: true, isDefinition: true, align: 32)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1221, file: !1173, line: 507, type: !1226, isLocal: true, isDefinition: true, align: 32)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1221, file: !1173, line: 512, type: !1226, isLocal: true, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1221, file: !1173, line: 516, type: !1226, isLocal: true, isDefinition: true, align: 32)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1221, file: !1173, line: 523, type: !1226, isLocal: true, isDefinition: true, align: 32)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1221, file: !1173, line: 527, type: !1226, isLocal: true, isDefinition: true, align: 32)
!1244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, size: 512, elements: !1216)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !564, line: 127, baseType: !1104)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1249, file: !1293, line: 398, type: !1326, isLocal: true, isDefinition: true)
!1249 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1250, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1251, retainedTypes: !1264, globals: !1290, splitDebugInlining: false, nameTableKind: None)
!1250 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!1251 = !{!1252, !30, !1257}
!1252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1253, line: 190, baseType: !32, size: 32, elements: !1254)
!1253 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1254 = !{!1255, !1256}
!1255 = !DIEnumerator(name: "SUCCESS", value: 0)
!1256 = !DIEnumerator(name: "ERROR", value: 1)
!1257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1258, line: 44, baseType: !32, size: 32, elements: !1259)
!1258 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1259 = !{!1260, !1261, !1262, !1263}
!1260 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1261 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1262 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1263 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1264 = !{!104, !108, !113, !1265, !1283, !1289}
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !564, line: 386, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 370, size: 448, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1267, file: !564, line: 372, baseType: !568, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1267, file: !564, line: 373, baseType: !568, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1267, file: !564, line: 374, baseType: !568, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1267, file: !564, line: 375, baseType: !568, size: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1267, file: !564, line: 376, baseType: !568, size: 32, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1267, file: !564, line: 377, baseType: !568, size: 32, offset: 160)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1267, file: !564, line: 378, baseType: !568, size: 32, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1267, file: !564, line: 379, baseType: !568, size: 32, offset: 224)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1267, file: !564, line: 380, baseType: !568, size: 32, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1267, file: !564, line: 381, baseType: !568, size: 32, offset: 288)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1267, file: !564, line: 382, baseType: !568, size: 32, offset: 320)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1267, file: !564, line: 383, baseType: !568, size: 32, offset: 352)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1267, file: !564, line: 384, baseType: !568, size: 32, offset: 384)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1267, file: !564, line: 385, baseType: !568, size: 32, offset: 416)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1285, line: 343, size: 64, elements: !1286)
!1285 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1284, file: !1285, line: 344, baseType: !113, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1284, file: !1285, line: 345, baseType: !113, size: 32, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1290 = !{!1291, !1297, !1313, !1324, !1247}
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1249, file: !1293, line: 752, type: !1294, isLocal: false, isDefinition: true, align: 16)
!1293 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 512, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 32)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1249, file: !1293, line: 752, type: !1299, isLocal: false, isDefinition: true, align: 32)
!1299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1301)
!1301 = !{!1302, !1303, !1304, !1305, !1311, !1312}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1300, file: !411, line: 380, baseType: !105, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1300, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1300, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1300, file: !411, line: 386, baseType: !1306, size: 32, offset: 96)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1308)
!1308 = !{!1309, !1310}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1307, file: !411, line: 359, baseType: !164, size: 8)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1307, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1300, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1300, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1249, file: !1293, line: 752, type: !1315, isLocal: true, isDefinition: true, align: 32)
!1315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1317)
!1317 = !{!1318, !1323}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1316, file: !469, line: 60, baseType: !1319, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!108, !1322}
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1316, file: !469, line: 65, baseType: !1322, size: 32, offset: 32)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1249, file: !1293, line: 752, type: !1307, isLocal: true, isDefinition: true, align: 8)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1258, line: 100, size: 224, elements: !1327)
!1327 = !{!1328, !1334, !1335, !1344, !1349, !1354, !1360}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1326, file: !1258, line: 101, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1258, line: 76, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!108, !1322, !1333}
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1258, line: 56, baseType: !104)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1326, file: !1258, line: 102, baseType: !1329, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1326, file: !1258, line: 103, baseType: !1336, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1258, line: 83, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!108, !1322, !1333, !1340, !104}
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1258, line: 72, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{null, !1322, !1333, !104}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1326, file: !1258, line: 104, baseType: !1345, size: 32, offset: 96)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1258, line: 79, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!108, !1322, !1333, !1289}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1326, file: !1258, line: 105, baseType: !1350, size: 32, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1258, line: 88, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 32)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!1257, !1322, !1333}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1326, file: !1258, line: 106, baseType: !1355, size: 32, offset: 160)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1258, line: 92, baseType: !1356)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 32)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!108, !1322, !1333, !1359}
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1258, line: 64, baseType: !104)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1326, file: !1258, line: 107, baseType: !1361, size: 32, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1258, line: 96, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!108, !1322, !1333, !104}
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1367, file: !1424, line: 603, type: !1426, isLocal: true, isDefinition: true, align: 32)
!1367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1369, globals: !1421, splitDebugInlining: false, nameTableKind: None)
!1368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!1369 = !{!104, !108, !1370}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1373, line: 336, size: 160, elements: !1374)
!1373 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1374 = !{!1375, !1395, !1399, !1403, !1416}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1372, file: !1373, line: 365, baseType: !1376, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 32)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!108, !1379, !1394}
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1392, !1393}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1381, file: !411, line: 380, baseType: !105, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1381, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1381, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1381, file: !411, line: 386, baseType: !1387, size: 32, offset: 96)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1389)
!1389 = !{!1390, !1391}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1388, file: !411, line: 359, baseType: !164, size: 8)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1388, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1381, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1381, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1372, file: !1373, line: 366, baseType: !1396, size: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1397 = !DISubroutineType(types: !1398)
!1398 = !{null, !1379, !165}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1372, file: !1373, line: 374, baseType: !1400, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!108, !1379}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1372, file: !1373, line: 377, baseType: !1404, size: 32, offset: 96)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!108, !1379, !1407}
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1373, line: 122, size: 64, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1415}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1409, file: !1373, line: 123, baseType: !113, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1409, file: !1373, line: 124, baseType: !164, size: 8, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1409, file: !1373, line: 125, baseType: !164, size: 8, offset: 40)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1409, file: !1373, line: 126, baseType: !164, size: 8, offset: 48)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1409, file: !1373, line: 127, baseType: !164, size: 8, offset: 56)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1372, file: !1373, line: 379, baseType: !1417, size: 32, offset: 128)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!108, !1379, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1421 = !{!1365, !1422}
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1367, file: !1424, line: 38, type: !1425, isLocal: true, isDefinition: true)
!1424 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1379)
!1426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1428)
!1428 = !{!1429, !1430}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1427, file: !469, line: 60, baseType: !1400, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1427, file: !469, line: 65, baseType: !1379, size: 32, offset: 32)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1433, file: !1583, line: 762, type: !1679, isLocal: true, isDefinition: true)
!1433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1435, retainedTypes: !1442, globals: !1580, splitDebugInlining: false, nameTableKind: None)
!1434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!1435 = !{!30, !868, !874, !1436, !1257}
!1436 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1211, line: 43, baseType: !32, size: 32, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441}
!1438 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1439 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1440 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1441 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1442 = !{!104, !108, !1443, !1507, !1512, !915, !874, !868, !1517, !1518, !113, !1532, !1488, !443, !1540, !1541}
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !869, line: 523, size: 288, elements: !1446)
!1446 = !{!1447, !1466, !1470, !1474, !1478, !1479, !1480, !1484, !1503}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1445, file: !869, line: 524, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!108, !1451, !903, !904}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1464, !1465}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1453, file: !411, line: 380, baseType: !105, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1453, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1453, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1453, file: !411, line: 386, baseType: !1459, size: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1460, file: !411, line: 359, baseType: !164, size: 8)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1460, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1453, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1453, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1445, file: !869, line: 530, baseType: !1467, size: 32, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!108, !1451, !909}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1445, file: !869, line: 532, baseType: !1471, size: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!108, !1451, !915, !910}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1445, file: !869, line: 535, baseType: !1475, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!108, !1451, !915}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1445, file: !869, line: 537, baseType: !1475, size: 32, offset: 128)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1445, file: !869, line: 539, baseType: !1475, size: 32, offset: 160)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1445, file: !869, line: 541, baseType: !1481, size: 32, offset: 192)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!108, !1451, !903, !868, !874}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1445, file: !869, line: 544, baseType: !1485, size: 32, offset: 224)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!108, !1451, !1488, !422}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !869, line: 478, size: 96, elements: !1490)
!1490 = !{!1491, !1497, !1502}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1489, file: !869, line: 482, baseType: !1492, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !935, line: 33, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !935, line: 29, size: 32, elements: !1494)
!1494 = !{!1495}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1493, file: !935, line: 30, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1489, file: !869, line: 485, baseType: !1498, size: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !869, line: 464, baseType: !1499)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{null, !1451, !1488, !915}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1489, file: !869, line: 493, baseType: !915, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1445, file: !869, line: 547, baseType: !1504, size: 32, offset: 256)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!113, !1451}
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !869, line: 428, size: 32, elements: !1510)
!1510 = !{!1511}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1509, file: !869, line: 434, baseType: !915, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !869, line: 441, size: 32, elements: !1515)
!1515 = !{!1516}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1514, file: !869, line: 447, baseType: !915, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !564, line: 314, baseType: !1520)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 303, size: 320, elements: !1521)
!1521 = !{!1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1520, file: !564, line: 305, baseType: !568, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1520, file: !564, line: 306, baseType: !568, size: 32, offset: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1520, file: !564, line: 307, baseType: !568, size: 32, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1520, file: !564, line: 308, baseType: !568, size: 32, offset: 96)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1520, file: !564, line: 309, baseType: !568, size: 32, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1520, file: !564, line: 310, baseType: !568, size: 32, offset: 160)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1520, file: !564, line: 311, baseType: !568, size: 32, offset: 192)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1520, file: !564, line: 312, baseType: !568, size: 32, offset: 224)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1520, file: !564, line: 313, baseType: !1531, size: 64, offset: 256)
!1531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 64, elements: !686)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !564, line: 325, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 320, size: 192, elements: !1535)
!1535 = !{!1536, !1537, !1538}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1534, file: !564, line: 322, baseType: !568, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1534, file: !564, line: 323, baseType: !568, size: 32, offset: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1534, file: !564, line: 324, baseType: !1539, size: 128, offset: 64)
!1539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 128, elements: !461)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1543)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1258, line: 100, size: 224, elements: !1544)
!1544 = !{!1545, !1550, !1551, !1560, !1565, !1570, !1575}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1543, file: !1258, line: 101, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1258, line: 76, baseType: !1547)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!108, !1451, !1333}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1543, file: !1258, line: 102, baseType: !1546, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1543, file: !1258, line: 103, baseType: !1552, size: 32, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1258, line: 83, baseType: !1553)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!108, !1451, !1333, !1556, !104}
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1258, line: 72, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{null, !1451, !1333, !104}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1543, file: !1258, line: 104, baseType: !1561, size: 32, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1258, line: 79, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!108, !1451, !1333, !1289}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1543, file: !1258, line: 105, baseType: !1566, size: 32, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1258, line: 88, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!1257, !1451, !1333}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1543, file: !1258, line: 106, baseType: !1571, size: 32, offset: 160)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1258, line: 92, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!108, !1451, !1333, !1359}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1543, file: !1258, line: 107, baseType: !1576, size: 32, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1258, line: 96, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!108, !1451, !1333, !104}
!1580 = !{!1581, !1585, !1587, !1597, !1602, !1604, !1606, !1611, !1613, !1615, !1620, !1622, !1624, !1626, !1628, !1630, !1635, !1637, !1639, !1653, !1655, !1657, !1659, !1661, !1663, !1665, !1667, !1669, !1671, !1673, !1431, !1675, !1677, !1690, !1692, !1694, !1696}
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1433, file: !1583, line: 762, type: !1584, isLocal: false, isDefinition: true, align: 16)
!1583 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 128, elements: !244)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1433, file: !1583, line: 762, type: !1452, isLocal: false, isDefinition: true, align: 32)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1433, file: !1583, line: 762, type: !1589, isLocal: true, isDefinition: true, align: 32)
!1589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1591)
!1591 = !{!1592, !1596}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1590, file: !469, line: 60, baseType: !1593, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!108, !1451}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1590, file: !469, line: 65, baseType: !1451, size: 32, offset: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1433, file: !1583, line: 766, type: !1599, isLocal: false, isDefinition: true, align: 16)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 144, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 9)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1433, file: !1583, line: 766, type: !1452, isLocal: false, isDefinition: true, align: 32)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1433, file: !1583, line: 766, type: !1589, isLocal: true, isDefinition: true, align: 32)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_62", scope: !1433, file: !1583, line: 770, type: !1608, isLocal: false, isDefinition: true, align: 16)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 96, elements: !1609)
!1609 = !{!1610}
!1610 = !DISubrange(count: 6)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__device_dts_ord_62", scope: !1433, file: !1583, line: 770, type: !1452, isLocal: false, isDefinition: true, align: 32)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_62", scope: !1433, file: !1583, line: 770, type: !1589, isLocal: true, isDefinition: true, align: 32)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_56", scope: !1433, file: !1583, line: 774, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 80, elements: !1618)
!1618 = !{!1619}
!1619 = !DISubrange(count: 5)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__device_dts_ord_56", scope: !1433, file: !1583, line: 774, type: !1452, isLocal: false, isDefinition: true, align: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_56", scope: !1433, file: !1583, line: 774, type: !1589, isLocal: true, isDefinition: true, align: 32)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !1433, file: !1583, line: 778, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "__device_dts_ord_57", scope: !1433, file: !1583, line: 778, type: !1452, isLocal: false, isDefinition: true, align: 32)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_57", scope: !1433, file: !1583, line: 778, type: !1589, isLocal: true, isDefinition: true, align: 32)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1433, file: !1583, line: 790, type: !1632, isLocal: false, isDefinition: true, align: 16)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 112, elements: !1633)
!1633 = !{!1634}
!1634 = !DISubrange(count: 7)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1433, file: !1583, line: 790, type: !1452, isLocal: false, isDefinition: true, align: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1433, file: !1583, line: 790, type: !1589, isLocal: true, isDefinition: true, align: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1433, file: !1583, line: 762, type: !1641, isLocal: true, isDefinition: true)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1642, line: 237, size: 128, elements: !1643)
!1642 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1643 = !{!1644, !1645, !1646}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1641, file: !1642, line: 239, baseType: !1514, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1641, file: !1642, line: 241, baseType: !1451, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1641, file: !1642, line: 243, baseType: !1647, size: 64, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !935, line: 40, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !935, line: 35, size: 64, elements: !1649)
!1649 = !{!1650, !1652}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1648, file: !935, line: 36, baseType: !1651, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1648, file: !935, line: 37, baseType: !1651, size: 32, offset: 32)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1433, file: !1583, line: 762, type: !1460, isLocal: true, isDefinition: true, align: 8)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1433, file: !1583, line: 766, type: !1641, isLocal: true, isDefinition: true)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1433, file: !1583, line: 766, type: !1460, isLocal: true, isDefinition: true, align: 8)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1433, file: !1583, line: 770, type: !1641, isLocal: true, isDefinition: true)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_62", scope: !1433, file: !1583, line: 770, type: !1460, isLocal: true, isDefinition: true, align: 8)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1433, file: !1583, line: 774, type: !1641, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_56", scope: !1433, file: !1583, line: 774, type: !1460, isLocal: true, isDefinition: true, align: 8)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1433, file: !1583, line: 778, type: !1641, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_57", scope: !1433, file: !1583, line: 778, type: !1460, isLocal: true, isDefinition: true, align: 8)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1433, file: !1583, line: 790, type: !1641, isLocal: true, isDefinition: true)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1433, file: !1583, line: 790, type: !1460, isLocal: true, isDefinition: true, align: 8)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1433, file: !1583, line: 656, type: !1444, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1433, file: !1583, line: 766, type: !1679, isLocal: true, isDefinition: true)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1642, line: 224, size: 160, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1680, file: !1642, line: 226, baseType: !1509, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1680, file: !1642, line: 228, baseType: !1289, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1680, file: !1642, line: 230, baseType: !108, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1680, file: !1642, line: 231, baseType: !1686, size: 64, offset: 96)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1285, line: 343, size: 64, elements: !1687)
!1687 = !{!1688, !1689}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1686, file: !1285, line: 344, baseType: !113, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1686, file: !1285, line: 345, baseType: !113, size: 32, offset: 32)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1433, file: !1583, line: 770, type: !1679, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1433, file: !1583, line: 774, type: !1679, isLocal: true, isDefinition: true)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1433, file: !1583, line: 778, type: !1679, isLocal: true, isDefinition: true)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1433, file: !1583, line: 790, type: !1679, isLocal: true, isDefinition: true)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1700, file: !1838, line: 44, type: !1933, isLocal: false, isDefinition: true)
!1700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1701, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1702, retainedTypes: !1735, globals: !1835, splitDebugInlining: false, nameTableKind: None)
!1701 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!1702 = !{!30, !1703, !1710, !1717, !1724, !1730, !1257}
!1703 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1373, line: 47, baseType: !32, size: 32, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709}
!1705 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1706 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1707 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1708 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1709 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1710 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1373, line: 75, baseType: !32, size: 32, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716}
!1712 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1713 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1714 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1715 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1716 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1373, line: 92, baseType: !32, size: 32, elements: !1718)
!1718 = !{!1719, !1720, !1721, !1722, !1723}
!1719 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1720 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1721 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1722 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1723 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1724 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1373, line: 84, baseType: !32, size: 32, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729}
!1726 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1727 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1728 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1729 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1730 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1373, line: 107, baseType: !32, size: 32, elements: !1731)
!1731 = !{!1732, !1733, !1734}
!1732 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1733 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1734 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1735 = !{!104, !108, !1736, !165, !164, !1785, !113, !1333, !1796, !168}
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1738)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1373, line: 336, size: 160, elements: !1739)
!1739 = !{!1740, !1759, !1763, !1767, !1780}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1738, file: !1373, line: 365, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{!108, !1744, !1394}
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1747)
!1747 = !{!1748, !1749, !1750, !1751, !1757, !1758}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1746, file: !411, line: 380, baseType: !105, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1746, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1746, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1746, file: !411, line: 386, baseType: !1752, size: 32, offset: 96)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1754)
!1754 = !{!1755, !1756}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1753, file: !411, line: 359, baseType: !164, size: 8)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1753, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1746, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1746, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1738, file: !1373, line: 366, baseType: !1760, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{null, !1744, !165}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1738, file: !1373, line: 374, baseType: !1764, size: 32, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!108, !1744}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1738, file: !1373, line: 377, baseType: !1768, size: 32, offset: 96)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!108, !1744, !1771}
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1773)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1373, line: 122, size: 64, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1779}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1773, file: !1373, line: 123, baseType: !113, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1773, file: !1373, line: 124, baseType: !164, size: 8, offset: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1773, file: !1373, line: 125, baseType: !164, size: 8, offset: 40)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1773, file: !1373, line: 126, baseType: !164, size: 8, offset: 48)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1773, file: !1373, line: 127, baseType: !164, size: 8, offset: 56)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1738, file: !1373, line: 379, baseType: !1781, size: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!108, !1744, !1784}
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !564, line: 505, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 496, size: 224, elements: !1788)
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1794, !1795}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1787, file: !564, line: 498, baseType: !568, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1787, file: !564, line: 499, baseType: !568, size: 32, offset: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1787, file: !564, line: 500, baseType: !568, size: 32, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1787, file: !564, line: 501, baseType: !568, size: 32, offset: 96)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1787, file: !564, line: 502, baseType: !568, size: 32, offset: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1787, file: !564, line: 503, baseType: !568, size: 32, offset: 160)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1787, file: !564, line: 504, baseType: !568, size: 32, offset: 192)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1258, line: 100, size: 224, elements: !1799)
!1799 = !{!1800, !1805, !1806, !1815, !1820, !1825, !1830}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1798, file: !1258, line: 101, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1258, line: 76, baseType: !1802)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{!108, !1744, !1333}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1798, file: !1258, line: 102, baseType: !1801, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1798, file: !1258, line: 103, baseType: !1807, size: 32, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1258, line: 83, baseType: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!108, !1744, !1333, !1811, !104}
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1258, line: 72, baseType: !1812)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{null, !1744, !1333, !104}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1798, file: !1258, line: 104, baseType: !1816, size: 32, offset: 96)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1258, line: 79, baseType: !1817)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!108, !1744, !1333, !1289}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1798, file: !1258, line: 105, baseType: !1821, size: 32, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1258, line: 88, baseType: !1822)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!1257, !1744, !1333}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1798, file: !1258, line: 106, baseType: !1826, size: 32, offset: 160)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1258, line: 92, baseType: !1827)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!108, !1744, !1333, !1359}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1798, file: !1258, line: 107, baseType: !1831, size: 32, offset: 192)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1258, line: 96, baseType: !1832)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!108, !1744, !1333, !104}
!1835 = !{!1698, !1836, !1839, !1841, !1848, !1850, !1852, !1854, !1856, !1858, !1902, !1905, !1907, !1910, !1913, !1915, !1921, !1923, !1925, !1927, !1929, !1931}
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !1700, file: !1838, line: 1914, type: !1584, isLocal: false, isDefinition: true, align: 16)
!1838 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !1700, file: !1838, line: 1914, type: !1745, isLocal: false, isDefinition: true, align: 32)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !1700, file: !1838, line: 1914, type: !1843, isLocal: true, isDefinition: true, align: 32)
!1843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1844)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1845)
!1845 = !{!1846, !1847}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1844, file: !469, line: 60, baseType: !1764, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1844, file: !469, line: 65, baseType: !1744, size: 32, offset: 32)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1700, file: !1838, line: 1914, type: !1584, isLocal: false, isDefinition: true, align: 16)
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1700, file: !1838, line: 1914, type: !1745, isLocal: false, isDefinition: true, align: 32)
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1700, file: !1838, line: 1914, type: !1843, isLocal: true, isDefinition: true, align: 32)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !1700, file: !1838, line: 1914, type: !1753, isLocal: true, isDefinition: true, align: 8)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1700, file: !1838, line: 1914, type: !1753, isLocal: true, isDefinition: true, align: 8)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1700, file: !1838, line: 1914, type: !1860, isLocal: true, isDefinition: true)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1862, line: 22, size: 224, elements: !1863)
!1862 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1863 = !{!1864, !1865, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1861, file: !1862, line: 24, baseType: !1785, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1861, file: !1862, line: 26, baseType: !1866, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1285, line: 343, size: 64, elements: !1869)
!1869 = !{!1870, !1871}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1868, file: !1285, line: 344, baseType: !113, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1868, file: !1285, line: 345, baseType: !113, size: 32, offset: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1861, file: !1862, line: 28, baseType: !439, size: 32, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1861, file: !1862, line: 30, baseType: !422, size: 8, offset: 96)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1861, file: !1862, line: 32, baseType: !108, size: 32, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1861, file: !1862, line: 34, baseType: !422, size: 8, offset: 160)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1861, file: !1862, line: 36, baseType: !422, size: 8, offset: 168)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1861, file: !1862, line: 38, baseType: !422, size: 8, offset: 176)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1861, file: !1862, line: 40, baseType: !422, size: 8, offset: 184)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1861, file: !1862, line: 41, baseType: !1880, size: 32, offset: 192)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1883, line: 60, size: 64, elements: !1884)
!1883 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1884 = !{!1885, !1901}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1882, file: !1883, line: 69, baseType: !1886, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1883, line: 50, size: 64, elements: !1889)
!1889 = !{!1890, !1899, !1900}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1888, file: !1883, line: 52, baseType: !1891, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1893)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1894, line: 37, baseType: !1895)
!1894 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1894, line: 32, size: 64, elements: !1896)
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1895, file: !1894, line: 34, baseType: !113, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1895, file: !1894, line: 36, baseType: !113, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1888, file: !1883, line: 54, baseType: !164, size: 8, offset: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1888, file: !1883, line: 56, baseType: !164, size: 8, offset: 40)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1882, file: !1883, line: 71, baseType: !164, size: 8, offset: 32)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1700, file: !1838, line: 1914, type: !1904, isLocal: true, isDefinition: true)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1867, size: 64, elements: !781)
!1905 = !DIGlobalVariableExpression(var: !1906, expr: !DIExpression())
!1906 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_39", scope: !1700, file: !1838, line: 1914, type: !1881, isLocal: true, isDefinition: true)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_39", scope: !1700, file: !1838, line: 1914, type: !1909, isLocal: true, isDefinition: true)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1887, size: 64, elements: !781)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_39", scope: !1700, file: !1838, line: 1914, type: !1912, isLocal: true, isDefinition: true)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 128, elements: !686)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1700, file: !1838, line: 1539, type: !1737, isLocal: true, isDefinition: true)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1700, file: !1838, line: 1914, type: !1917, isLocal: true, isDefinition: true)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1862, line: 74, size: 64, elements: !1918)
!1918 = !{!1919, !1920}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1917, file: !1862, line: 76, baseType: !113, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1917, file: !1862, line: 78, baseType: !1744, size: 32, offset: 32)
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1700, file: !1838, line: 1914, type: !1860, isLocal: true, isDefinition: true)
!1923 = !DIGlobalVariableExpression(var: !1924, expr: !DIExpression())
!1924 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1700, file: !1838, line: 1914, type: !1904, isLocal: true, isDefinition: true)
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1700, file: !1838, line: 1914, type: !1881, isLocal: true, isDefinition: true)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1700, file: !1838, line: 1914, type: !1909, isLocal: true, isDefinition: true)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1700, file: !1838, line: 1914, type: !1912, isLocal: true, isDefinition: true)
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1700, file: !1838, line: 1914, type: !1917, isLocal: true, isDefinition: true)
!1933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !1935)
!1935 = !{!1936, !1937}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1934, file: !254, line: 17, baseType: !105, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1934, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1940, file: !2018, line: 65, type: !568, isLocal: true, isDefinition: true)
!1940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1942, retainedTypes: !1943, globals: !2015, splitDebugInlining: false, nameTableKind: None)
!1941 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!1942 = !{!1104}
!1943 = !{!109, !1944, !220, !164, !113, !1952, !1983}
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !799, line: 712, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 706, size: 128, elements: !1947)
!1947 = !{!1948, !1949, !1950, !1951}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1946, file: !799, line: 708, baseType: !568, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1946, file: !799, line: 709, baseType: !568, size: 32, offset: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1946, file: !799, line: 710, baseType: !568, size: 32, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1946, file: !799, line: 711, baseType: !803, size: 32, offset: 96)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !799, line: 360, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 345, size: 28704, elements: !1955)
!1955 = !{!1956, !1958, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1973, !1978, !1982}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1954, file: !799, line: 347, baseType: !1957, size: 256)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 256, elements: !244)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1954, file: !799, line: 348, baseType: !1959, size: 768, offset: 256)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1960)
!1960 = !{!1961}
!1961 = !DISubrange(count: 24)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1954, file: !799, line: 349, baseType: !1957, size: 256, offset: 1024)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1954, file: !799, line: 350, baseType: !1959, size: 768, offset: 1280)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1954, file: !799, line: 351, baseType: !1957, size: 256, offset: 2048)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1954, file: !799, line: 352, baseType: !1959, size: 768, offset: 2304)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1954, file: !799, line: 353, baseType: !1957, size: 256, offset: 3072)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1954, file: !799, line: 354, baseType: !1959, size: 768, offset: 3328)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1954, file: !799, line: 355, baseType: !1957, size: 256, offset: 4096)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1954, file: !799, line: 356, baseType: !1970, size: 1792, offset: 4352)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1971)
!1971 = !{!1972}
!1972 = !DISubrange(count: 56)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1954, file: !799, line: 357, baseType: !1974, size: 1920, offset: 6144)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1975, size: 1920, elements: !1976)
!1975 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!1976 = !{!1977}
!1977 = !DISubrange(count: 240)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1954, file: !799, line: 358, baseType: !1979, size: 20608, offset: 8064)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1980)
!1980 = !{!1981}
!1981 = !DISubrange(count: 644)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1954, file: !799, line: 359, baseType: !568, size: 32, offset: 28672)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !799, line: 402, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 379, size: 1120, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1991, !1992, !1993, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2006, !2007, !2008, !2010, !2012, !2014}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1985, file: !799, line: 381, baseType: !803, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1985, file: !799, line: 382, baseType: !568, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1985, file: !799, line: 383, baseType: !568, size: 32, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1985, file: !799, line: 384, baseType: !568, size: 32, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1985, file: !799, line: 385, baseType: !568, size: 32, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1985, file: !799, line: 386, baseType: !568, size: 32, offset: 160)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1985, file: !799, line: 387, baseType: !1994, size: 96, offset: 192)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1975, size: 96, elements: !1995)
!1995 = !{!1996}
!1996 = !DISubrange(count: 12)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1985, file: !799, line: 388, baseType: !568, size: 32, offset: 288)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1985, file: !799, line: 389, baseType: !568, size: 32, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1985, file: !799, line: 390, baseType: !568, size: 32, offset: 352)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1985, file: !799, line: 391, baseType: !568, size: 32, offset: 384)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1985, file: !799, line: 392, baseType: !568, size: 32, offset: 416)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1985, file: !799, line: 393, baseType: !568, size: 32, offset: 448)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1985, file: !799, line: 394, baseType: !568, size: 32, offset: 480)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1985, file: !799, line: 395, baseType: !2005, size: 64, offset: 512)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 64, elements: !686)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1985, file: !799, line: 396, baseType: !803, size: 32, offset: 576)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1985, file: !799, line: 397, baseType: !803, size: 32, offset: 608)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1985, file: !799, line: 398, baseType: !2009, size: 128, offset: 640)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 128, elements: !461)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1985, file: !799, line: 399, baseType: !2011, size: 160, offset: 768)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 160, elements: !1618)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1985, file: !799, line: 400, baseType: !2013, size: 160, offset: 928)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1618)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1985, file: !799, line: 401, baseType: !568, size: 32, offset: 1088)
!2015 = !{!2016, !2042, !2045, !2047, !2049, !1938}
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1940, file: !2018, line: 285, type: !2019, isLocal: true, isDefinition: true, align: 32)
!2018 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2021)
!2021 = !{!2022, !2041}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2020, file: !469, line: 60, baseType: !2023, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{!108, !2026}
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2028)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2029)
!2029 = !{!2030, !2031, !2032, !2033, !2039, !2040}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2028, file: !411, line: 380, baseType: !105, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2028, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2028, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2028, file: !411, line: 386, baseType: !2034, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2035, file: !411, line: 359, baseType: !164, size: 8)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2035, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2028, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2028, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2020, file: !469, line: 65, baseType: !2026, size: 32, offset: 32)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "lock", scope: !1940, file: !2018, line: 34, type: !2044, isLocal: true, isDefinition: true)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "last_load", scope: !1940, file: !2018, line: 36, type: !113, isLocal: true, isDefinition: true)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1940, file: !2018, line: 48, type: !113, isLocal: true, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1940, file: !2018, line: 54, type: !113, isLocal: true, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2053, file: !2134, line: 22, type: !2136, isLocal: true, isDefinition: true)
!2053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2054, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !867, retainedTypes: !2055, globals: !2131, splitDebugInlining: false, nameTableKind: None)
!2054 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2055 = !{!2056, !2120, !2125, !915, !874, !868, !2130, !104}
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !869, line: 523, size: 288, elements: !2059)
!2059 = !{!2060, !2079, !2083, !2087, !2091, !2092, !2093, !2097, !2116}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2058, file: !869, line: 524, baseType: !2061, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!108, !2064, !903, !904}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2077, !2078}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2066, file: !411, line: 380, baseType: !105, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2066, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2066, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2066, file: !411, line: 386, baseType: !2072, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2073, file: !411, line: 359, baseType: !164, size: 8)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2073, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2066, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2066, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2058, file: !869, line: 530, baseType: !2080, size: 32, offset: 32)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 32)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{!108, !2064, !909}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2058, file: !869, line: 532, baseType: !2084, size: 32, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!108, !2064, !915, !910}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2058, file: !869, line: 535, baseType: !2088, size: 32, offset: 96)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!108, !2064, !915}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2058, file: !869, line: 537, baseType: !2088, size: 32, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2058, file: !869, line: 539, baseType: !2088, size: 32, offset: 160)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2058, file: !869, line: 541, baseType: !2094, size: 32, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!108, !2064, !903, !868, !874}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2058, file: !869, line: 544, baseType: !2098, size: 32, offset: 224)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!108, !2064, !2101, !422}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !869, line: 478, size: 96, elements: !2103)
!2103 = !{!2104, !2110, !2115}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2102, file: !869, line: 482, baseType: !2105, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !935, line: 33, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !935, line: 29, size: 32, elements: !2107)
!2107 = !{!2108}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2106, file: !935, line: 30, baseType: !2109, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2102, file: !869, line: 485, baseType: !2111, size: 32, offset: 32)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !869, line: 464, baseType: !2112)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{null, !2064, !2101, !915}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2102, file: !869, line: 493, baseType: !915, size: 32, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2058, file: !869, line: 547, baseType: !2117, size: 32, offset: 256)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!113, !2064}
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !869, line: 428, size: 32, elements: !2123)
!2123 = !{!2124}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2122, file: !869, line: 434, baseType: !915, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2127)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !869, line: 441, size: 32, elements: !2128)
!2128 = !{!2129}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2127, file: !869, line: 447, baseType: !915, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 32)
!2131 = !{!2132, !2051}
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2133 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2053, file: !2134, line: 37, type: !2135, isLocal: true, isDefinition: true)
!2134 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2137, size: 352, elements: !503)
!2137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2064)
!2138 = !DIGlobalVariableExpression(var: !2139, expr: !DIExpression())
!2139 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2140, file: !2164, line: 129, type: !2172, isLocal: false, isDefinition: true)
!2140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2141, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2142, globals: !2161, splitDebugInlining: false, nameTableKind: None)
!2141 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2142 = !{!2143}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !564, line: 386, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 370, size: 448, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2145, file: !564, line: 372, baseType: !568, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2145, file: !564, line: 373, baseType: !568, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2145, file: !564, line: 374, baseType: !568, size: 32, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2145, file: !564, line: 375, baseType: !568, size: 32, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2145, file: !564, line: 376, baseType: !568, size: 32, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2145, file: !564, line: 377, baseType: !568, size: 32, offset: 160)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2145, file: !564, line: 378, baseType: !568, size: 32, offset: 192)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2145, file: !564, line: 379, baseType: !568, size: 32, offset: 224)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2145, file: !564, line: 380, baseType: !568, size: 32, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2145, file: !564, line: 381, baseType: !568, size: 32, offset: 288)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2145, file: !564, line: 382, baseType: !568, size: 32, offset: 320)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2145, file: !564, line: 383, baseType: !568, size: 32, offset: 352)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2145, file: !564, line: 384, baseType: !568, size: 32, offset: 384)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2145, file: !564, line: 385, baseType: !568, size: 32, offset: 416)
!2161 = !{!2162, !2165, !2169, !2138}
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2140, file: !2164, line: 126, type: !113, isLocal: false, isDefinition: true)
!2164 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !2140, file: !2164, line: 127, type: !2167, isLocal: false, isDefinition: true)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2168, size: 72, elements: !1600)
!2168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2140, file: !2164, line: 128, type: !2171, isLocal: false, isDefinition: true)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2168, size: 128, elements: !1216)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2168, size: 64, elements: !244)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2175, file: !2178, line: 23, type: !2179, isLocal: false, isDefinition: true)
!2175 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2176, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !551, globals: !2177, splitDebugInlining: false, nameTableKind: None)
!2176 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2177 = !{!2173}
!2178 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2182, file: !2186, line: 37, type: !2438, isLocal: false, isDefinition: true)
!2182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2183, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2184, retainedTypes: !2193, globals: !2266, splitDebugInlining: false, nameTableKind: None)
!2183 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2184 = !{!2185, !30, !1104}
!2185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2186, line: 63, baseType: !32, size: 32, elements: !2187)
!2186 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2187 = !{!2188, !2189, !2190, !2191, !2192}
!2188 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2189 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2190 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2191 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2192 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2193 = !{!439, !104, !108, !2194, !443, !113, !2224, !220, !164, !2249}
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2197, line: 51, size: 64, elements: !2198)
!2197 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2198 = !{!2199, !2219}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2196, file: !2197, line: 52, baseType: !2200, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2197, line: 38, baseType: !2201)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!108, !2204, !209, !168}
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2207)
!2207 = !{!2208, !2209, !2210, !2211, !2217, !2218}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2206, file: !411, line: 380, baseType: !105, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2206, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2206, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2206, file: !411, line: 386, baseType: !2212, size: 32, offset: 96)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2214)
!2214 = !{!2215, !2216}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2213, file: !411, line: 359, baseType: !164, size: 8)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2213, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2206, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2206, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2196, file: !2197, line: 53, baseType: !2220, size: 32, offset: 32)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2197, line: 47, baseType: !2221)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!108, !2204, !209, !168, !113}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !799, line: 402, baseType: !2226)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 379, size: 1120, elements: !2227)
!2227 = !{!2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2226, file: !799, line: 381, baseType: !803, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2226, file: !799, line: 382, baseType: !568, size: 32, offset: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2226, file: !799, line: 383, baseType: !568, size: 32, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2226, file: !799, line: 384, baseType: !568, size: 32, offset: 96)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2226, file: !799, line: 385, baseType: !568, size: 32, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2226, file: !799, line: 386, baseType: !568, size: 32, offset: 160)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2226, file: !799, line: 387, baseType: !1994, size: 96, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2226, file: !799, line: 388, baseType: !568, size: 32, offset: 288)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2226, file: !799, line: 389, baseType: !568, size: 32, offset: 320)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2226, file: !799, line: 390, baseType: !568, size: 32, offset: 352)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2226, file: !799, line: 391, baseType: !568, size: 32, offset: 384)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2226, file: !799, line: 392, baseType: !568, size: 32, offset: 416)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2226, file: !799, line: 393, baseType: !568, size: 32, offset: 448)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2226, file: !799, line: 394, baseType: !568, size: 32, offset: 480)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2226, file: !799, line: 395, baseType: !2005, size: 64, offset: 512)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2226, file: !799, line: 396, baseType: !803, size: 32, offset: 576)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2226, file: !799, line: 397, baseType: !803, size: 32, offset: 608)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2226, file: !799, line: 398, baseType: !2009, size: 128, offset: 640)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2226, file: !799, line: 399, baseType: !2011, size: 160, offset: 768)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2226, file: !799, line: 400, baseType: !2013, size: 160, offset: 928)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2226, file: !799, line: 401, baseType: !568, size: 32, offset: 1088)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !799, line: 360, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 345, size: 28704, elements: !2252)
!2252 = !{!2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2251, file: !799, line: 347, baseType: !1957, size: 256)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2251, file: !799, line: 348, baseType: !1959, size: 768, offset: 256)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2251, file: !799, line: 349, baseType: !1957, size: 256, offset: 1024)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2251, file: !799, line: 350, baseType: !1959, size: 768, offset: 1280)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2251, file: !799, line: 351, baseType: !1957, size: 256, offset: 2048)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2251, file: !799, line: 352, baseType: !1959, size: 768, offset: 2304)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2251, file: !799, line: 353, baseType: !1957, size: 256, offset: 3072)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2251, file: !799, line: 354, baseType: !1959, size: 768, offset: 3328)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2251, file: !799, line: 355, baseType: !1957, size: 256, offset: 4096)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2251, file: !799, line: 356, baseType: !1970, size: 1792, offset: 4352)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2251, file: !799, line: 357, baseType: !1974, size: 1920, offset: 6144)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2251, file: !799, line: 358, baseType: !1979, size: 20608, offset: 8064)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2251, file: !799, line: 359, baseType: !568, size: 32, offset: 28672)
!2266 = !{!2180, !2267, !2389, !2398, !2400, !2403, !2408, !2410, !2415}
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(name: "_kernel", scope: !2182, file: !2186, line: 40, type: !2269, isLocal: false, isDefinition: true)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !363, line: 158, size: 288, elements: !2270)
!2270 = !{!2271, !2384}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2269, file: !363, line: 159, baseType: !2272, size: 192)
!2272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2273, size: 192, elements: !781)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !363, line: 100, size: 192, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2378, !2379, !2380, !2381}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2273, file: !363, line: 102, baseType: !113, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2273, file: !363, line: 105, baseType: !443, size: 32, offset: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2273, file: !363, line: 108, baseType: !2278, size: 32, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !2280)
!2280 = !{!2281, !2339, !2351, !2352, !2353, !2354, !2360, !2373}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2279, file: !656, line: 247, baseType: !2282, size: 384)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !2283)
!2283 = !{!2284, !2308, !2315, !2316, !2317, !2326, !2327, !2328}
!2284 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !656, line: 60, baseType: !2285, size: 64)
!2285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !656, line: 60, size: 64, elements: !2286)
!2286 = !{!2287, !2302}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2285, file: !656, line: 61, baseType: !2288, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2289)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2290)
!2290 = !{!2291, !2297}
!2291 = !DIDerivedType(tag: DW_TAG_member, scope: !2289, file: !367, line: 38, baseType: !2292, size: 32)
!2292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2289, file: !367, line: 38, size: 32, elements: !2293)
!2293 = !{!2294, !2296}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2292, file: !367, line: 39, baseType: !2295, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2292, file: !367, line: 40, baseType: !2295, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, scope: !2289, file: !367, line: 42, baseType: !2298, size: 32, offset: 32)
!2298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2289, file: !367, line: 42, size: 32, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2298, file: !367, line: 43, baseType: !2295, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2298, file: !367, line: 44, baseType: !2295, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2285, file: !656, line: 62, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !2304)
!2304 = !{!2305}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2303, file: !681, line: 50, baseType: !2306, size: 64)
!2306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2307, size: 64, elements: !686)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2282, file: !656, line: 68, baseType: !2309, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2311)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2312)
!2312 = !{!2313}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2311, file: !363, line: 232, baseType: !2314, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2289)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2282, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2282, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!2317 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !656, line: 90, baseType: !2318, size: 16, offset: 112)
!2318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !656, line: 90, size: 16, elements: !2319)
!2319 = !{!2320, !2325}
!2320 = !DIDerivedType(tag: DW_TAG_member, scope: !2318, file: !656, line: 91, baseType: !2321, size: 16)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2318, file: !656, line: 91, size: 16, elements: !2322)
!2322 = !{!2323, !2324}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2321, file: !656, line: 96, baseType: !704, size: 8)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2321, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2318, file: !656, line: 100, baseType: !168, size: 16)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2282, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2282, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2282, file: !656, line: 131, baseType: !2329, size: 192, offset: 192)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2330)
!2330 = !{!2331, !2332, !2338}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2329, file: !363, line: 245, baseType: !2288, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2329, file: !363, line: 246, baseType: !2333, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2334)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{null, !2337}
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2329, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2279, file: !656, line: 250, baseType: !2340, size: 288, offset: 384)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !2341)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2340, file: !723, line: 26, baseType: !113, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2340, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2340, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2340, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2340, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2340, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2340, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2340, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2340, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2279, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2279, file: !656, line: 256, baseType: !2310, size: 64, offset: 704)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2279, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2279, file: !656, line: 300, baseType: !2355, size: 96, offset: 800)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !2356)
!2356 = !{!2357, !2358, !2359}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2355, file: !656, line: 153, baseType: !22, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2355, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2355, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2279, file: !656, line: 325, baseType: !2361, size: 32, offset: 896)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2363)
!2363 = !{!2364, !2370, !2371}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2362, file: !359, line: 5074, baseType: !2365, size: 96)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !2366)
!2366 = !{!2367, !2368, !2369}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2365, file: !749, line: 57, baseType: !752, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2365, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2365, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2362, file: !359, line: 5075, baseType: !2310, size: 64, offset: 96)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2362, file: !359, line: 5076, baseType: !2372, offset: 160)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2279, file: !656, line: 343, baseType: !2374, size: 64, offset: 928)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !2375)
!2375 = !{!2376, !2377}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2374, file: !723, line: 63, baseType: !113, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2374, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2273, file: !363, line: 111, baseType: !2278, size: 32, offset: 96)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2273, file: !363, line: 124, baseType: !108, size: 32, offset: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2273, file: !363, line: 127, baseType: !164, size: 8, offset: 160)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2273, file: !363, line: 153, baseType: !2382, offset: 168)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2383, line: 33, elements: !437)
!2383 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2269, file: !363, line: 170, baseType: !2385, size: 96, offset: 192)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !2386)
!2386 = !{!2387, !2388}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2385, file: !363, line: 86, baseType: !2278, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2385, file: !363, line: 90, baseType: !2314, size: 64, offset: 32)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2182, file: !2186, line: 43, type: !2391, isLocal: false, isDefinition: true, align: 512)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 8704, elements: !2396)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2393, line: 47, size: 8, elements: !2394)
!2393 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2394 = !{!2395}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2392, file: !2393, line: 48, baseType: !107, size: 8)
!2396 = !{!2397}
!2397 = !DISubrange(count: 1088)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2182, file: !2186, line: 44, type: !2279, isLocal: false, isDefinition: true)
!2400 = !DIGlobalVariableExpression(var: !2401, expr: !DIExpression())
!2401 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2182, file: !2186, line: 48, type: !2402, isLocal: false, isDefinition: true)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2279, size: 1024, elements: !781)
!2403 = !DIGlobalVariableExpression(var: !2404, expr: !DIExpression())
!2404 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2182, file: !2186, line: 86, type: !2405, isLocal: false, isDefinition: true, align: 512)
!2405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 16896, elements: !2406)
!2406 = !{!782, !2407}
!2407 = !DISubrange(count: 2112)
!2408 = !DIGlobalVariableExpression(var: !2409, expr: !DIExpression())
!2409 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2182, file: !2186, line: 217, type: !422, isLocal: false, isDefinition: true)
!2410 = !DIGlobalVariableExpression(var: !2411, expr: !DIExpression())
!2411 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2182, file: !2186, line: 50, type: !2412, isLocal: true, isDefinition: true, align: 512)
!2412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 2560, elements: !2413)
!2413 = !{!782, !2414}
!2414 = !DISubrange(count: 320)
!2415 = !DIGlobalVariableExpression(var: !2416, expr: !DIExpression())
!2416 = distinct !DIGlobalVariable(name: "levels", scope: !2417, file: !2186, line: 232, type: !2437, isLocal: true, isDefinition: true)
!2417 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2186, file: !2186, line: 230, type: !2418, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !2420)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{null, !2185}
!2420 = !{!2421, !2422, !2432, !2436}
!2421 = !DILocalVariable(name: "level", arg: 1, scope: !2417, file: !2186, line: 230, type: !2185)
!2422 = !DILocalVariable(name: "entry", scope: !2417, file: !2186, line: 244, type: !2423)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2425)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2426)
!2426 = !{!2427, !2431}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2425, file: !469, line: 60, baseType: !2428, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{!108, !2204}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2425, file: !469, line: 65, baseType: !2204, size: 32, offset: 32)
!2432 = !DILocalVariable(name: "dev", scope: !2433, file: !2186, line: 247, type: !2204)
!2433 = distinct !DILexicalBlock(scope: !2434, file: !2186, line: 246, column: 64)
!2434 = distinct !DILexicalBlock(scope: !2435, file: !2186, line: 246, column: 2)
!2435 = distinct !DILexicalBlock(scope: !2417, file: !2186, line: 246, column: 2)
!2436 = !DILocalVariable(name: "rc", scope: !2433, file: !2186, line: 248, type: !108)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2423, size: 192, elements: !1609)
!2438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2439)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !2440)
!2440 = !{!2441, !2442}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2439, file: !254, line: 17, baseType: !105, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2439, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(name: "states_str", scope: !2445, file: !2446, line: 276, type: !2567, isLocal: true, isDefinition: true)
!2445 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2446, file: !2446, line: 271, type: !2447, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2558)
!2446 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!105, !2449, !443, !439}
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !656, line: 347, baseType: !2450)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !2452)
!2452 = !{!2453, !2511, !2523, !2524, !2525, !2526, !2532, !2545}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2451, file: !656, line: 247, baseType: !2454, size: 384)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !2455)
!2455 = !{!2456, !2480, !2487, !2488, !2489, !2498, !2499, !2500}
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !656, line: 60, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !656, line: 60, size: 64, elements: !2458)
!2458 = !{!2459, !2474}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2457, file: !656, line: 61, baseType: !2460, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2462)
!2462 = !{!2463, !2469}
!2463 = !DIDerivedType(tag: DW_TAG_member, scope: !2461, file: !367, line: 38, baseType: !2464, size: 32)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2461, file: !367, line: 38, size: 32, elements: !2465)
!2465 = !{!2466, !2468}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2464, file: !367, line: 39, baseType: !2467, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2464, file: !367, line: 40, baseType: !2467, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, scope: !2461, file: !367, line: 42, baseType: !2470, size: 32, offset: 32)
!2470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2461, file: !367, line: 42, size: 32, elements: !2471)
!2471 = !{!2472, !2473}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2470, file: !367, line: 43, baseType: !2467, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2470, file: !367, line: 44, baseType: !2467, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2457, file: !656, line: 62, baseType: !2475, size: 64)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !2476)
!2476 = !{!2477}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2475, file: !681, line: 50, baseType: !2478, size: 64)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2479, size: 64, elements: !686)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2454, file: !656, line: 68, baseType: !2481, size: 32, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2483)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2484)
!2484 = !{!2485}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2483, file: !363, line: 232, baseType: !2486, size: 64)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2461)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2454, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2454, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!2489 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !656, line: 90, baseType: !2490, size: 16, offset: 112)
!2490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !656, line: 90, size: 16, elements: !2491)
!2491 = !{!2492, !2497}
!2492 = !DIDerivedType(tag: DW_TAG_member, scope: !2490, file: !656, line: 91, baseType: !2493, size: 16)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2490, file: !656, line: 91, size: 16, elements: !2494)
!2494 = !{!2495, !2496}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2493, file: !656, line: 96, baseType: !704, size: 8)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2493, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2490, file: !656, line: 100, baseType: !168, size: 16)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2454, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2454, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2454, file: !656, line: 131, baseType: !2501, size: 192, offset: 192)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2502)
!2502 = !{!2503, !2504, !2510}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2501, file: !363, line: 245, baseType: !2460, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2501, file: !363, line: 246, baseType: !2505, size: 32, offset: 64)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2506)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !2509}
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2501, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2451, file: !656, line: 250, baseType: !2512, size: 288, offset: 384)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !2513)
!2513 = !{!2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2512, file: !723, line: 26, baseType: !113, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2512, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2512, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2512, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2512, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2512, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2512, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2512, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2512, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2451, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2451, file: !656, line: 256, baseType: !2482, size: 64, offset: 704)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2451, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2451, file: !656, line: 300, baseType: !2527, size: 96, offset: 800)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !2528)
!2528 = !{!2529, !2530, !2531}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2527, file: !656, line: 153, baseType: !22, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2527, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2527, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2451, file: !656, line: 325, baseType: !2533, size: 32, offset: 896)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 32)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2535)
!2535 = !{!2536, !2542, !2543}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2534, file: !359, line: 5074, baseType: !2537, size: 96)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !2538)
!2538 = !{!2539, !2540, !2541}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2537, file: !749, line: 57, baseType: !752, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2537, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2537, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2534, file: !359, line: 5075, baseType: !2482, size: 64, offset: 96)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2534, file: !359, line: 5076, baseType: !2544, offset: 160)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2451, file: !656, line: 343, baseType: !2546, size: 64, offset: 928)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !2547)
!2547 = !{!2548, !2549}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2546, file: !723, line: 63, baseType: !113, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2546, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2552, globals: !2554, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2552 = !{!104, !105, !109, !164, !108, !2553, !24, !439, !443, !22, !113, !114}
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!2554 = !{!2443, !2555}
!2555 = !DIGlobalVariableExpression(var: !2556, expr: !DIExpression())
!2556 = distinct !DIGlobalVariable(name: "states_sz", scope: !2445, file: !2446, line: 279, type: !2557, isLocal: true, isDefinition: true)
!2557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2135, size: 256, elements: !244)
!2558 = !{!2559, !2560, !2561, !2562, !2563, !2564, !2565}
!2559 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2445, file: !2446, line: 271, type: !2449)
!2560 = !DILocalVariable(name: "buf", arg: 2, scope: !2445, file: !2446, line: 271, type: !443)
!2561 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2445, file: !2446, line: 271, type: !439)
!2562 = !DILocalVariable(name: "off", scope: !2445, file: !2446, line: 273, type: !439)
!2563 = !DILocalVariable(name: "bit", scope: !2445, file: !2446, line: 274, type: !164)
!2564 = !DILocalVariable(name: "thread_state", scope: !2445, file: !2446, line: 275, type: !164)
!2565 = !DILocalVariable(name: "index", scope: !2566, file: !2446, line: 293, type: !164)
!2566 = distinct !DILexicalBlock(scope: !2445, file: !2446, line: 293, column: 2)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !244)
!2568 = !DIGlobalVariableExpression(var: !2569, expr: !DIExpression())
!2569 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2570, file: !2678, line: 56, type: !2667, isLocal: false, isDefinition: true)
!2570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2571, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2572, globals: !2675, splitDebugInlining: false, nameTableKind: None)
!2571 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2572 = !{!2573, !443, !104, !2673, !209, !109, !220, !108, !113, !114, !2674}
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 32)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !2575)
!2575 = !{!2576, !2634, !2646, !2647, !2648, !2649, !2655, !2668}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2574, file: !656, line: 247, baseType: !2577, size: 384)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !2578)
!2578 = !{!2579, !2603, !2610, !2611, !2612, !2621, !2622, !2623}
!2579 = !DIDerivedType(tag: DW_TAG_member, scope: !2577, file: !656, line: 60, baseType: !2580, size: 64)
!2580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2577, file: !656, line: 60, size: 64, elements: !2581)
!2581 = !{!2582, !2597}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2580, file: !656, line: 61, baseType: !2583, size: 64)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2585)
!2585 = !{!2586, !2592}
!2586 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !367, line: 38, baseType: !2587, size: 32)
!2587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !367, line: 38, size: 32, elements: !2588)
!2588 = !{!2589, !2591}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2587, file: !367, line: 39, baseType: !2590, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2587, file: !367, line: 40, baseType: !2590, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !367, line: 42, baseType: !2593, size: 32, offset: 32)
!2593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !367, line: 42, size: 32, elements: !2594)
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2593, file: !367, line: 43, baseType: !2590, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2593, file: !367, line: 44, baseType: !2590, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2580, file: !656, line: 62, baseType: !2598, size: 64)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !2599)
!2599 = !{!2600}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2598, file: !681, line: 50, baseType: !2601, size: 64)
!2601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2602, size: 64, elements: !686)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2577, file: !656, line: 68, baseType: !2604, size: 32, offset: 64)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2606)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2607)
!2607 = !{!2608}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2606, file: !363, line: 232, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2584)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2577, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2577, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!2612 = !DIDerivedType(tag: DW_TAG_member, scope: !2577, file: !656, line: 90, baseType: !2613, size: 16, offset: 112)
!2613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2577, file: !656, line: 90, size: 16, elements: !2614)
!2614 = !{!2615, !2620}
!2615 = !DIDerivedType(tag: DW_TAG_member, scope: !2613, file: !656, line: 91, baseType: !2616, size: 16)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2613, file: !656, line: 91, size: 16, elements: !2617)
!2617 = !{!2618, !2619}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2616, file: !656, line: 96, baseType: !704, size: 8)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2616, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2613, file: !656, line: 100, baseType: !168, size: 16)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2577, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2577, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2577, file: !656, line: 131, baseType: !2624, size: 192, offset: 192)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2625)
!2625 = !{!2626, !2627, !2633}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2624, file: !363, line: 245, baseType: !2583, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2624, file: !363, line: 246, baseType: !2628, size: 32, offset: 64)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2629)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 32)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{null, !2632}
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2624, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2574, file: !656, line: 250, baseType: !2635, size: 288, offset: 384)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2635, file: !723, line: 26, baseType: !113, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2635, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2635, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2635, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2635, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2635, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2635, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2635, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2635, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2574, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2574, file: !656, line: 256, baseType: !2605, size: 64, offset: 704)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2574, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2574, file: !656, line: 300, baseType: !2650, size: 96, offset: 800)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !2651)
!2651 = !{!2652, !2653, !2654}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2650, file: !656, line: 153, baseType: !22, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2650, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2650, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2574, file: !656, line: 325, baseType: !2656, size: 32, offset: 896)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2658)
!2658 = !{!2659, !2665, !2666}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2657, file: !359, line: 5074, baseType: !2660, size: 96)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !2661)
!2661 = !{!2662, !2663, !2664}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2660, file: !749, line: 57, baseType: !752, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2660, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2660, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2657, file: !359, line: 5075, baseType: !2605, size: 64, offset: 96)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2657, file: !359, line: 5076, baseType: !2667, offset: 160)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2574, file: !656, line: 343, baseType: !2669, size: 64, offset: 928)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !2670)
!2670 = !{!2671, !2672}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2669, file: !723, line: 63, baseType: !113, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2669, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2675 = !{!2568, !2676, !2679, !2681}
!2676 = !DIGlobalVariableExpression(var: !2677, expr: !DIExpression())
!2677 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2570, file: !2678, line: 404, type: !108, isLocal: true, isDefinition: true)
!2678 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2679 = !DIGlobalVariableExpression(var: !2680, expr: !DIExpression())
!2680 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2570, file: !2678, line: 405, type: !108, isLocal: true, isDefinition: true)
!2681 = !DIGlobalVariableExpression(var: !2682, expr: !DIExpression())
!2682 = distinct !DIGlobalVariable(name: "pending_current", scope: !2570, file: !2678, line: 425, type: !2573, isLocal: true, isDefinition: true)
!2683 = !DIGlobalVariableExpression(var: !2684, expr: !DIExpression())
!2684 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2685, file: !2715, line: 15, type: !114, isLocal: true, isDefinition: true)
!2685 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2686, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2687, globals: !2712, splitDebugInlining: false, nameTableKind: None)
!2686 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2687 = !{!109, !104, !220, !113, !114, !108, !2688, !443, !111}
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 32)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2690)
!2690 = !{!2691, !2706, !2711}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2689, file: !363, line: 245, baseType: !2692, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2693)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2694)
!2694 = !{!2695, !2701}
!2695 = !DIDerivedType(tag: DW_TAG_member, scope: !2693, file: !367, line: 38, baseType: !2696, size: 32)
!2696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2693, file: !367, line: 38, size: 32, elements: !2697)
!2697 = !{!2698, !2700}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2696, file: !367, line: 39, baseType: !2699, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2696, file: !367, line: 40, baseType: !2699, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, scope: !2693, file: !367, line: 42, baseType: !2702, size: 32, offset: 32)
!2702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2693, file: !367, line: 42, size: 32, elements: !2703)
!2703 = !{!2704, !2705}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2702, file: !367, line: 43, baseType: !2699, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2702, file: !367, line: 44, baseType: !2699, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2689, file: !363, line: 246, baseType: !2707, size: 32, offset: 64)
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2708)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DISubroutineType(types: !2710)
!2710 = !{null, !2688}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2689, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2712 = !{!2683, !2713, !2717, !2719}
!2713 = !DIGlobalVariableExpression(var: !2714, expr: !DIExpression())
!2714 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2685, file: !2715, line: 19, type: !2716, isLocal: true, isDefinition: true)
!2715 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2717 = !DIGlobalVariableExpression(var: !2718, expr: !DIExpression())
!2718 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2685, file: !2715, line: 25, type: !108, isLocal: true, isDefinition: true)
!2719 = !DIGlobalVariableExpression(var: !2720, expr: !DIExpression())
!2720 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2685, file: !2715, line: 17, type: !2721, isLocal: true, isDefinition: true)
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2693)
!2722 = !DIGlobalVariableExpression(var: !2723, expr: !DIExpression())
!2723 = distinct !DIGlobalVariable(name: "lock", scope: !2724, file: !2846, line: 16, type: !2838, isLocal: true, isDefinition: true)
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2726, globals: !2845, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2726 = !{!2727, !443, !109, !104, !108, !2773, !2844}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !2729)
!2729 = !{!2730, !2755, !2761, !2765, !2766, !2771, !2772}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2728, file: !359, line: 1324, baseType: !2731, size: 192)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2732)
!2732 = !{!2733, !2748, !2754}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2731, file: !363, line: 245, baseType: !2734, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2736)
!2736 = !{!2737, !2743}
!2737 = !DIDerivedType(tag: DW_TAG_member, scope: !2735, file: !367, line: 38, baseType: !2738, size: 32)
!2738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2735, file: !367, line: 38, size: 32, elements: !2739)
!2739 = !{!2740, !2742}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2738, file: !367, line: 39, baseType: !2741, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2738, file: !367, line: 40, baseType: !2741, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2735, file: !367, line: 42, baseType: !2744, size: 32, offset: 32)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2735, file: !367, line: 42, size: 32, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2744, file: !367, line: 43, baseType: !2741, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2744, file: !367, line: 44, baseType: !2741, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2731, file: !363, line: 246, baseType: !2749, size: 32, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2750)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 32)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{null, !2753}
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2731, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2728, file: !359, line: 1327, baseType: !2756, size: 64, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2758)
!2758 = !{!2759}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2757, file: !363, line: 232, baseType: !2760, size: 64)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2735)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !2728, file: !359, line: 1330, baseType: !2762, size: 32, offset: 256)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 32)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{null, !2727}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !2728, file: !359, line: 1333, baseType: !2762, size: 32, offset: 288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2728, file: !359, line: 1336, baseType: !2767, size: 64, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !2768)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !2769)
!2769 = !{!2770}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2768, file: !110, line: 66, baseType: !109, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2728, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2728, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 32)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !2775)
!2775 = !{!2776, !2805, !2817, !2818, !2819, !2820, !2826, !2839}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2774, file: !656, line: 247, baseType: !2777, size: 384)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !2778)
!2778 = !{!2779, !2789, !2791, !2792, !2793, !2802, !2803, !2804}
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2777, file: !656, line: 60, baseType: !2780, size: 64)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2777, file: !656, line: 60, size: 64, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2780, file: !656, line: 61, baseType: !2734, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2780, file: !656, line: 62, baseType: !2784, size: 64)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !2785)
!2785 = !{!2786}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2784, file: !681, line: 50, baseType: !2787, size: 64)
!2787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2788, size: 64, elements: !686)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2777, file: !656, line: 68, baseType: !2790, size: 32, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2777, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2777, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!2793 = !DIDerivedType(tag: DW_TAG_member, scope: !2777, file: !656, line: 90, baseType: !2794, size: 16, offset: 112)
!2794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2777, file: !656, line: 90, size: 16, elements: !2795)
!2795 = !{!2796, !2801}
!2796 = !DIDerivedType(tag: DW_TAG_member, scope: !2794, file: !656, line: 91, baseType: !2797, size: 16)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2794, file: !656, line: 91, size: 16, elements: !2798)
!2798 = !{!2799, !2800}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2797, file: !656, line: 96, baseType: !704, size: 8)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2797, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2794, file: !656, line: 100, baseType: !168, size: 16)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2777, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2777, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2777, file: !656, line: 131, baseType: !2731, size: 192, offset: 192)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2774, file: !656, line: 250, baseType: !2806, size: 288, offset: 384)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2806, file: !723, line: 26, baseType: !113, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2806, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2806, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2806, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2806, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2806, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2806, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2806, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2806, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2774, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2774, file: !656, line: 256, baseType: !2756, size: 64, offset: 704)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2774, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2774, file: !656, line: 300, baseType: !2821, size: 96, offset: 800)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !2822)
!2822 = !{!2823, !2824, !2825}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2821, file: !656, line: 153, baseType: !22, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2821, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2821, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2774, file: !656, line: 325, baseType: !2827, size: 32, offset: 896)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 32)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2829)
!2829 = !{!2830, !2836, !2837}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2828, file: !359, line: 5074, baseType: !2831, size: 96)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !2832)
!2832 = !{!2833, !2834, !2835}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2831, file: !749, line: 57, baseType: !752, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2831, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2831, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2828, file: !359, line: 5075, baseType: !2756, size: 64, offset: 96)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2828, file: !359, line: 5076, baseType: !2838, offset: 160)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2774, file: !656, line: 343, baseType: !2840, size: 64, offset: 928)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !2841)
!2841 = !{!2842, !2843}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2840, file: !723, line: 63, baseType: !113, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2840, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 32)
!2845 = !{!2722}
!2846 = !DIFile(filename: "zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !551, splitDebugInlining: false, nameTableKind: None)
!2848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !551, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2853, retainedTypes: !2873, splitDebugInlining: false, nameTableKind: None)
!2852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2853 = !{!2854, !2862}
!2854 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2855, line: 69, baseType: !32, size: 32, elements: !2856)
!2855 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2856 = !{!2857, !2858, !2859, !2860, !2861}
!2857 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2858 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2859 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2860 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2861 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2862 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2855, line: 56, baseType: !32, size: 32, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2864 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2865 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2866 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2867 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2868 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2869 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2870 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2871 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2872 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2873 = !{!108, !2854, !2862, !2874, !705, !429, !2876, !2877, !165, !169, !105, !439, !104, !22, !32, !536, !2879, !2880, !144, !537, !112, !538, !2875, !2881, !2882, !2883, !2884}
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2855, line: 31, baseType: !2875)
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !112)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !440, line: 329, baseType: !32)
!2877 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2855, line: 32, baseType: !2878)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !440, line: 145, baseType: !108)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 32)
!2885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2887 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2888, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2889, splitDebugInlining: false, nameTableKind: None)
!2888 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2889 = !{!105, !165, !108, !32}
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2892, retainedTypes: !551, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2892 = !{!2893, !30}
!2893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2894, line: 27, baseType: !32, size: 32, elements: !2895)
!2894 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2895 = !{!2896, !2897, !2898, !2899, !2900}
!2896 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2897 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2898 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2899 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2900 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2901 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2902, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2903, retainedTypes: !2904, splitDebugInlining: false, nameTableKind: None)
!2902 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2903 = !{!1104, !2893, !30}
!2904 = !{!1246, !2905, !104, !108, !220, !113, !164, !2922}
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !799, line: 360, baseType: !2907)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 345, size: 28704, elements: !2908)
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2907, file: !799, line: 347, baseType: !1957, size: 256)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2907, file: !799, line: 348, baseType: !1959, size: 768, offset: 256)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2907, file: !799, line: 349, baseType: !1957, size: 256, offset: 1024)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2907, file: !799, line: 350, baseType: !1959, size: 768, offset: 1280)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2907, file: !799, line: 351, baseType: !1957, size: 256, offset: 2048)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2907, file: !799, line: 352, baseType: !1959, size: 768, offset: 2304)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2907, file: !799, line: 353, baseType: !1957, size: 256, offset: 3072)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2907, file: !799, line: 354, baseType: !1959, size: 768, offset: 3328)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2907, file: !799, line: 355, baseType: !1957, size: 256, offset: 4096)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2907, file: !799, line: 356, baseType: !1970, size: 1792, offset: 4352)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2907, file: !799, line: 357, baseType: !1974, size: 1920, offset: 6144)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2907, file: !799, line: 358, baseType: !1979, size: 20608, offset: 8064)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2907, file: !799, line: 359, baseType: !568, size: 32, offset: 28672)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !799, line: 402, baseType: !2924)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 379, size: 1120, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2924, file: !799, line: 381, baseType: !803, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2924, file: !799, line: 382, baseType: !568, size: 32, offset: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2924, file: !799, line: 383, baseType: !568, size: 32, offset: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2924, file: !799, line: 384, baseType: !568, size: 32, offset: 96)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2924, file: !799, line: 385, baseType: !568, size: 32, offset: 128)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2924, file: !799, line: 386, baseType: !568, size: 32, offset: 160)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2924, file: !799, line: 387, baseType: !1994, size: 96, offset: 192)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2924, file: !799, line: 388, baseType: !568, size: 32, offset: 288)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2924, file: !799, line: 389, baseType: !568, size: 32, offset: 320)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2924, file: !799, line: 390, baseType: !568, size: 32, offset: 352)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2924, file: !799, line: 391, baseType: !568, size: 32, offset: 384)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2924, file: !799, line: 392, baseType: !568, size: 32, offset: 416)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2924, file: !799, line: 393, baseType: !568, size: 32, offset: 448)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2924, file: !799, line: 394, baseType: !568, size: 32, offset: 480)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2924, file: !799, line: 395, baseType: !2005, size: 64, offset: 512)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2924, file: !799, line: 396, baseType: !803, size: 32, offset: 576)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2924, file: !799, line: 397, baseType: !803, size: 32, offset: 608)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2924, file: !799, line: 398, baseType: !2009, size: 128, offset: 640)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2924, file: !799, line: 399, baseType: !2011, size: 160, offset: 768)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2924, file: !799, line: 400, baseType: !2013, size: 160, offset: 928)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2924, file: !799, line: 401, baseType: !568, size: 32, offset: 1088)
!2947 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2948, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !551, splitDebugInlining: false, nameTableKind: None)
!2948 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2950, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2951, splitDebugInlining: false, nameTableKind: None)
!2950 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2951 = !{!104, !108, !22, !2952}
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !799, line: 402, baseType: !2954)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 379, size: 1120, elements: !2955)
!2955 = !{!2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2954, file: !799, line: 381, baseType: !803, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2954, file: !799, line: 382, baseType: !568, size: 32, offset: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2954, file: !799, line: 383, baseType: !568, size: 32, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2954, file: !799, line: 384, baseType: !568, size: 32, offset: 96)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2954, file: !799, line: 385, baseType: !568, size: 32, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2954, file: !799, line: 386, baseType: !568, size: 32, offset: 160)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2954, file: !799, line: 387, baseType: !1994, size: 96, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2954, file: !799, line: 388, baseType: !568, size: 32, offset: 288)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2954, file: !799, line: 389, baseType: !568, size: 32, offset: 320)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2954, file: !799, line: 390, baseType: !568, size: 32, offset: 352)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2954, file: !799, line: 391, baseType: !568, size: 32, offset: 384)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2954, file: !799, line: 392, baseType: !568, size: 32, offset: 416)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2954, file: !799, line: 393, baseType: !568, size: 32, offset: 448)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2954, file: !799, line: 394, baseType: !568, size: 32, offset: 480)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2954, file: !799, line: 395, baseType: !2005, size: 64, offset: 512)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2954, file: !799, line: 396, baseType: !803, size: 32, offset: 576)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2954, file: !799, line: 397, baseType: !803, size: 32, offset: 608)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2954, file: !799, line: 398, baseType: !2009, size: 128, offset: 640)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2954, file: !799, line: 399, baseType: !2011, size: 160, offset: 768)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2954, file: !799, line: 400, baseType: !2013, size: 160, offset: 928)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2954, file: !799, line: 401, baseType: !568, size: 32, offset: 1088)
!2977 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2978, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2979, splitDebugInlining: false, nameTableKind: None)
!2978 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!2979 = !{!2980, !104, !108}
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !799, line: 402, baseType: !2982)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 379, size: 1120, elements: !2983)
!2983 = !{!2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2982, file: !799, line: 381, baseType: !803, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2982, file: !799, line: 382, baseType: !568, size: 32, offset: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2982, file: !799, line: 383, baseType: !568, size: 32, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2982, file: !799, line: 384, baseType: !568, size: 32, offset: 96)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2982, file: !799, line: 385, baseType: !568, size: 32, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2982, file: !799, line: 386, baseType: !568, size: 32, offset: 160)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2982, file: !799, line: 387, baseType: !1994, size: 96, offset: 192)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2982, file: !799, line: 388, baseType: !568, size: 32, offset: 288)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2982, file: !799, line: 389, baseType: !568, size: 32, offset: 320)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2982, file: !799, line: 390, baseType: !568, size: 32, offset: 352)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2982, file: !799, line: 391, baseType: !568, size: 32, offset: 384)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2982, file: !799, line: 392, baseType: !568, size: 32, offset: 416)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2982, file: !799, line: 393, baseType: !568, size: 32, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2982, file: !799, line: 394, baseType: !568, size: 32, offset: 480)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2982, file: !799, line: 395, baseType: !2005, size: 64, offset: 512)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2982, file: !799, line: 396, baseType: !803, size: 32, offset: 576)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2982, file: !799, line: 397, baseType: !803, size: 32, offset: 608)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2982, file: !799, line: 398, baseType: !2009, size: 128, offset: 640)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2982, file: !799, line: 399, baseType: !2011, size: 160, offset: 768)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2982, file: !799, line: 400, baseType: !2013, size: 160, offset: 928)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2982, file: !799, line: 401, baseType: !568, size: 32, offset: 1088)
!3005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3007, splitDebugInlining: false, nameTableKind: None)
!3006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3007 = !{!3008, !113, !104, !108}
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 32)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3010, line: 98, size: 256, elements: !3011)
!3010 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3011 = !{!3012, !3017, !3022, !3027, !3032, !3037, !3042, !3047}
!3012 = !DIDerivedType(tag: DW_TAG_member, scope: !3009, file: !3010, line: 99, baseType: !3013, size: 32)
!3013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3009, file: !3010, line: 99, size: 32, elements: !3014)
!3014 = !{!3015, !3016}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3013, file: !3010, line: 99, baseType: !113, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3013, file: !3010, line: 99, baseType: !113, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, scope: !3009, file: !3010, line: 100, baseType: !3018, size: 32, offset: 32)
!3018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3009, file: !3010, line: 100, size: 32, elements: !3019)
!3019 = !{!3020, !3021}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3018, file: !3010, line: 100, baseType: !113, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3018, file: !3010, line: 100, baseType: !113, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, scope: !3009, file: !3010, line: 101, baseType: !3023, size: 32, offset: 64)
!3023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3009, file: !3010, line: 101, size: 32, elements: !3024)
!3024 = !{!3025, !3026}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3023, file: !3010, line: 101, baseType: !113, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3023, file: !3010, line: 101, baseType: !113, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, scope: !3009, file: !3010, line: 102, baseType: !3028, size: 32, offset: 96)
!3028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3009, file: !3010, line: 102, size: 32, elements: !3029)
!3029 = !{!3030, !3031}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3028, file: !3010, line: 102, baseType: !113, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3028, file: !3010, line: 102, baseType: !113, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, scope: !3009, file: !3010, line: 103, baseType: !3033, size: 32, offset: 128)
!3033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3009, file: !3010, line: 103, size: 32, elements: !3034)
!3034 = !{!3035, !3036}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3033, file: !3010, line: 103, baseType: !113, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3033, file: !3010, line: 103, baseType: !113, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, scope: !3009, file: !3010, line: 104, baseType: !3038, size: 32, offset: 160)
!3038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3009, file: !3010, line: 104, size: 32, elements: !3039)
!3039 = !{!3040, !3041}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3038, file: !3010, line: 104, baseType: !113, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3038, file: !3010, line: 104, baseType: !113, size: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, scope: !3009, file: !3010, line: 105, baseType: !3043, size: 32, offset: 192)
!3043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3009, file: !3010, line: 105, size: 32, elements: !3044)
!3044 = !{!3045, !3046}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3043, file: !3010, line: 105, baseType: !113, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3043, file: !3010, line: 105, baseType: !113, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3009, file: !3010, line: 106, baseType: !113, size: 32, offset: 224)
!3048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2892, retainedTypes: !3050, splitDebugInlining: false, nameTableKind: None)
!3049 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3050 = !{!3051, !104, !108, !3076, !3119, !113}
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !799, line: 402, baseType: !3053)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 379, size: 1120, elements: !3054)
!3054 = !{!3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3053, file: !799, line: 381, baseType: !803, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3053, file: !799, line: 382, baseType: !568, size: 32, offset: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3053, file: !799, line: 383, baseType: !568, size: 32, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3053, file: !799, line: 384, baseType: !568, size: 32, offset: 96)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3053, file: !799, line: 385, baseType: !568, size: 32, offset: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3053, file: !799, line: 386, baseType: !568, size: 32, offset: 160)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3053, file: !799, line: 387, baseType: !1994, size: 96, offset: 192)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3053, file: !799, line: 388, baseType: !568, size: 32, offset: 288)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3053, file: !799, line: 389, baseType: !568, size: 32, offset: 320)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3053, file: !799, line: 390, baseType: !568, size: 32, offset: 352)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3053, file: !799, line: 391, baseType: !568, size: 32, offset: 384)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3053, file: !799, line: 392, baseType: !568, size: 32, offset: 416)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3053, file: !799, line: 393, baseType: !568, size: 32, offset: 448)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3053, file: !799, line: 394, baseType: !568, size: 32, offset: 480)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3053, file: !799, line: 395, baseType: !2005, size: 64, offset: 512)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3053, file: !799, line: 396, baseType: !803, size: 32, offset: 576)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3053, file: !799, line: 397, baseType: !803, size: 32, offset: 608)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3053, file: !799, line: 398, baseType: !2009, size: 128, offset: 640)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3053, file: !799, line: 399, baseType: !2011, size: 160, offset: 768)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3053, file: !799, line: 400, baseType: !2013, size: 160, offset: 928)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3053, file: !799, line: 401, baseType: !568, size: 32, offset: 1088)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3010, line: 141, baseType: !3078)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3010, line: 97, size: 256, elements: !3079)
!3079 = !{!3080}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3078, file: !3010, line: 107, baseType: !3081, size: 256)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3010, line: 98, size: 256, elements: !3082)
!3082 = !{!3083, !3088, !3093, !3098, !3103, !3108, !3113, !3118}
!3083 = !DIDerivedType(tag: DW_TAG_member, scope: !3081, file: !3010, line: 99, baseType: !3084, size: 32)
!3084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3081, file: !3010, line: 99, size: 32, elements: !3085)
!3085 = !{!3086, !3087}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3084, file: !3010, line: 99, baseType: !113, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3084, file: !3010, line: 99, baseType: !113, size: 32)
!3088 = !DIDerivedType(tag: DW_TAG_member, scope: !3081, file: !3010, line: 100, baseType: !3089, size: 32, offset: 32)
!3089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3081, file: !3010, line: 100, size: 32, elements: !3090)
!3090 = !{!3091, !3092}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3089, file: !3010, line: 100, baseType: !113, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3089, file: !3010, line: 100, baseType: !113, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, scope: !3081, file: !3010, line: 101, baseType: !3094, size: 32, offset: 64)
!3094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3081, file: !3010, line: 101, size: 32, elements: !3095)
!3095 = !{!3096, !3097}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3094, file: !3010, line: 101, baseType: !113, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3094, file: !3010, line: 101, baseType: !113, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, scope: !3081, file: !3010, line: 102, baseType: !3099, size: 32, offset: 96)
!3099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3081, file: !3010, line: 102, size: 32, elements: !3100)
!3100 = !{!3101, !3102}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3099, file: !3010, line: 102, baseType: !113, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3099, file: !3010, line: 102, baseType: !113, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, scope: !3081, file: !3010, line: 103, baseType: !3104, size: 32, offset: 128)
!3104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3081, file: !3010, line: 103, size: 32, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3104, file: !3010, line: 103, baseType: !113, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3104, file: !3010, line: 103, baseType: !113, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, scope: !3081, file: !3010, line: 104, baseType: !3109, size: 32, offset: 160)
!3109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3081, file: !3010, line: 104, size: 32, elements: !3110)
!3110 = !{!3111, !3112}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3109, file: !3010, line: 104, baseType: !113, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3109, file: !3010, line: 104, baseType: !113, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, scope: !3081, file: !3010, line: 105, baseType: !3114, size: 32, offset: 192)
!3114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3081, file: !3010, line: 105, size: 32, elements: !3115)
!3115 = !{!3116, !3117}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3114, file: !3010, line: 105, baseType: !113, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3114, file: !3010, line: 105, baseType: !113, size: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3081, file: !3010, line: 106, baseType: !113, size: 32, offset: 224)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!3120 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3121, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1942, retainedTypes: !3122, splitDebugInlining: false, nameTableKind: None)
!3121 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3122 = !{!1246, !220, !164, !113, !3123, !3140}
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !799, line: 360, baseType: !3125)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 345, size: 28704, elements: !3126)
!3126 = !{!3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3125, file: !799, line: 347, baseType: !1957, size: 256)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3125, file: !799, line: 348, baseType: !1959, size: 768, offset: 256)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3125, file: !799, line: 349, baseType: !1957, size: 256, offset: 1024)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3125, file: !799, line: 350, baseType: !1959, size: 768, offset: 1280)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3125, file: !799, line: 351, baseType: !1957, size: 256, offset: 2048)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3125, file: !799, line: 352, baseType: !1959, size: 768, offset: 2304)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3125, file: !799, line: 353, baseType: !1957, size: 256, offset: 3072)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3125, file: !799, line: 354, baseType: !1959, size: 768, offset: 3328)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3125, file: !799, line: 355, baseType: !1957, size: 256, offset: 4096)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3125, file: !799, line: 356, baseType: !1970, size: 1792, offset: 4352)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3125, file: !799, line: 357, baseType: !1974, size: 1920, offset: 6144)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3125, file: !799, line: 358, baseType: !1979, size: 20608, offset: 8064)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3125, file: !799, line: 359, baseType: !568, size: 32, offset: 28672)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !799, line: 402, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 379, size: 1120, elements: !3143)
!3143 = !{!3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3142, file: !799, line: 381, baseType: !803, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3142, file: !799, line: 382, baseType: !568, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3142, file: !799, line: 383, baseType: !568, size: 32, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3142, file: !799, line: 384, baseType: !568, size: 32, offset: 96)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3142, file: !799, line: 385, baseType: !568, size: 32, offset: 128)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3142, file: !799, line: 386, baseType: !568, size: 32, offset: 160)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3142, file: !799, line: 387, baseType: !1994, size: 96, offset: 192)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3142, file: !799, line: 388, baseType: !568, size: 32, offset: 288)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3142, file: !799, line: 389, baseType: !568, size: 32, offset: 320)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3142, file: !799, line: 390, baseType: !568, size: 32, offset: 352)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3142, file: !799, line: 391, baseType: !568, size: 32, offset: 384)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3142, file: !799, line: 392, baseType: !568, size: 32, offset: 416)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3142, file: !799, line: 393, baseType: !568, size: 32, offset: 448)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3142, file: !799, line: 394, baseType: !568, size: 32, offset: 480)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3142, file: !799, line: 395, baseType: !2005, size: 64, offset: 512)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3142, file: !799, line: 396, baseType: !803, size: 32, offset: 576)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3142, file: !799, line: 397, baseType: !803, size: 32, offset: 608)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3142, file: !799, line: 398, baseType: !2009, size: 128, offset: 640)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3142, file: !799, line: 399, baseType: !2011, size: 160, offset: 768)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3142, file: !799, line: 400, baseType: !2013, size: 160, offset: 928)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3142, file: !799, line: 401, baseType: !568, size: 32, offset: 1088)
!3165 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3166, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3167, splitDebugInlining: false, nameTableKind: None)
!3166 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3167 = !{!3168, !104, !108}
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 32)
!3169 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !799, line: 402, baseType: !3170)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 379, size: 1120, elements: !3171)
!3171 = !{!3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3170, file: !799, line: 381, baseType: !803, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3170, file: !799, line: 382, baseType: !568, size: 32, offset: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3170, file: !799, line: 383, baseType: !568, size: 32, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3170, file: !799, line: 384, baseType: !568, size: 32, offset: 96)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3170, file: !799, line: 385, baseType: !568, size: 32, offset: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3170, file: !799, line: 386, baseType: !568, size: 32, offset: 160)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3170, file: !799, line: 387, baseType: !1994, size: 96, offset: 192)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3170, file: !799, line: 388, baseType: !568, size: 32, offset: 288)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3170, file: !799, line: 389, baseType: !568, size: 32, offset: 320)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3170, file: !799, line: 390, baseType: !568, size: 32, offset: 352)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3170, file: !799, line: 391, baseType: !568, size: 32, offset: 384)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3170, file: !799, line: 392, baseType: !568, size: 32, offset: 416)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3170, file: !799, line: 393, baseType: !568, size: 32, offset: 448)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3170, file: !799, line: 394, baseType: !568, size: 32, offset: 480)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3170, file: !799, line: 395, baseType: !2005, size: 64, offset: 512)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3170, file: !799, line: 396, baseType: !803, size: 32, offset: 576)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3170, file: !799, line: 397, baseType: !803, size: 32, offset: 608)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3170, file: !799, line: 398, baseType: !2009, size: 128, offset: 640)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3170, file: !799, line: 399, baseType: !2011, size: 160, offset: 768)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3170, file: !799, line: 400, baseType: !2013, size: 160, offset: 928)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3170, file: !799, line: 401, baseType: !568, size: 32, offset: 1088)
!3193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3194, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3195, splitDebugInlining: false, nameTableKind: None)
!3194 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3195 = !{!107, !443, !439, !1394, !3196, !165, !104}
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 32)
!3197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3199, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3200, splitDebugInlining: false, nameTableKind: None)
!3199 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3200 = !{!3201}
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !564, line: 386, baseType: !3203)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 370, size: 448, elements: !3204)
!3204 = !{!3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3203, file: !564, line: 372, baseType: !568, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3203, file: !564, line: 373, baseType: !568, size: 32, offset: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3203, file: !564, line: 374, baseType: !568, size: 32, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3203, file: !564, line: 375, baseType: !568, size: 32, offset: 96)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3203, file: !564, line: 376, baseType: !568, size: 32, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3203, file: !564, line: 377, baseType: !568, size: 32, offset: 160)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3203, file: !564, line: 378, baseType: !568, size: 32, offset: 192)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3203, file: !564, line: 379, baseType: !568, size: 32, offset: 224)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3203, file: !564, line: 380, baseType: !568, size: 32, offset: 256)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3203, file: !564, line: 381, baseType: !568, size: 32, offset: 288)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3203, file: !564, line: 382, baseType: !568, size: 32, offset: 320)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3203, file: !564, line: 383, baseType: !568, size: 32, offset: 352)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3203, file: !564, line: 384, baseType: !568, size: 32, offset: 384)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3203, file: !564, line: 385, baseType: !568, size: 32, offset: 416)
!3219 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3220, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3220 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3221 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3222, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3223, retainedTypes: !3239, splitDebugInlining: false, nameTableKind: None)
!3222 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3223 = !{!3224, !3231, !3235}
!3224 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3225, line: 39, baseType: !32, size: 32, elements: !3226)
!3225 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3226 = !{!3227, !3228, !3229, !3230}
!3227 = !DIEnumerator(name: "HAL_OK", value: 0)
!3228 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3229 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3230 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3231 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1253, line: 183, baseType: !32, size: 32, elements: !3232)
!3232 = !{!3233, !3234}
!3233 = !DIEnumerator(name: "DISABLE", value: 0)
!3234 = !DIEnumerator(name: "ENABLE", value: 1)
!3235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1253, line: 177, baseType: !32, size: 32, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIEnumerator(name: "RESET", value: 0)
!3238 = !DIEnumerator(name: "SET", value: 1)
!3239 = !{!3240, !104, !113, !164, !3258, !3259, !3265, !168, !3278, !114, !3291}
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !564, line: 386, baseType: !3242)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 370, size: 448, elements: !3243)
!3243 = !{!3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3242, file: !564, line: 372, baseType: !568, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3242, file: !564, line: 373, baseType: !568, size: 32, offset: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3242, file: !564, line: 374, baseType: !568, size: 32, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3242, file: !564, line: 375, baseType: !568, size: 32, offset: 96)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3242, file: !564, line: 376, baseType: !568, size: 32, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3242, file: !564, line: 377, baseType: !568, size: 32, offset: 160)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3242, file: !564, line: 378, baseType: !568, size: 32, offset: 192)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3242, file: !564, line: 379, baseType: !568, size: 32, offset: 224)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3242, file: !564, line: 380, baseType: !568, size: 32, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3242, file: !564, line: 381, baseType: !568, size: 32, offset: 288)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3242, file: !564, line: 382, baseType: !568, size: 32, offset: 320)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3242, file: !564, line: 383, baseType: !568, size: 32, offset: 352)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3242, file: !564, line: 384, baseType: !568, size: 32, offset: 384)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3242, file: !564, line: 385, baseType: !568, size: 32, offset: 416)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !564, line: 364, baseType: !3261)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 360, size: 64, elements: !3262)
!3262 = !{!3263, !3264}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3261, file: !564, line: 362, baseType: !568, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3261, file: !564, line: 363, baseType: !568, size: 32, offset: 32)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 32)
!3266 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !564, line: 286, baseType: !3267)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 275, size: 288, elements: !3268)
!3268 = !{!3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3267, file: !564, line: 277, baseType: !568, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3267, file: !564, line: 278, baseType: !568, size: 32, offset: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3267, file: !564, line: 279, baseType: !568, size: 32, offset: 64)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3267, file: !564, line: 280, baseType: !568, size: 32, offset: 96)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3267, file: !564, line: 281, baseType: !568, size: 32, offset: 128)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3267, file: !564, line: 282, baseType: !568, size: 32, offset: 160)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3267, file: !564, line: 283, baseType: !568, size: 32, offset: 192)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3267, file: !564, line: 284, baseType: !568, size: 32, offset: 224)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3267, file: !564, line: 285, baseType: !568, size: 32, offset: 256)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !564, line: 314, baseType: !3280)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 303, size: 320, elements: !3281)
!3281 = !{!3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3280, file: !564, line: 305, baseType: !568, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3280, file: !564, line: 306, baseType: !568, size: 32, offset: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3280, file: !564, line: 307, baseType: !568, size: 32, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3280, file: !564, line: 308, baseType: !568, size: 32, offset: 96)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3280, file: !564, line: 309, baseType: !568, size: 32, offset: 128)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3280, file: !564, line: 310, baseType: !568, size: 32, offset: 160)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3280, file: !564, line: 311, baseType: !568, size: 32, offset: 192)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3280, file: !564, line: 312, baseType: !568, size: 32, offset: 224)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3280, file: !564, line: 313, baseType: !1531, size: 64, offset: 256)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!3292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3294, retainedTypes: !3295, splitDebugInlining: false, nameTableKind: None)
!3293 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3294 = !{!1252}
!3295 = !{!3296, !113, !3304, !3310, !3323}
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !799, line: 712, baseType: !3298)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 706, size: 128, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3298, file: !799, line: 708, baseType: !568, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3298, file: !799, line: 709, baseType: !568, size: 32, offset: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3298, file: !799, line: 710, baseType: !568, size: 32, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3298, file: !799, line: 711, baseType: !803, size: 32, offset: 96)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !564, line: 364, baseType: !3306)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 360, size: 64, elements: !3307)
!3307 = !{!3308, !3309}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3306, file: !564, line: 362, baseType: !568, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3306, file: !564, line: 363, baseType: !568, size: 32, offset: 32)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !564, line: 286, baseType: !3312)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 275, size: 288, elements: !3313)
!3313 = !{!3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3312, file: !564, line: 277, baseType: !568, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3312, file: !564, line: 278, baseType: !568, size: 32, offset: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3312, file: !564, line: 279, baseType: !568, size: 32, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3312, file: !564, line: 280, baseType: !568, size: 32, offset: 96)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3312, file: !564, line: 281, baseType: !568, size: 32, offset: 128)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3312, file: !564, line: 282, baseType: !568, size: 32, offset: 160)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3312, file: !564, line: 283, baseType: !568, size: 32, offset: 192)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3312, file: !564, line: 284, baseType: !568, size: 32, offset: 224)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3312, file: !564, line: 285, baseType: !568, size: 32, offset: 256)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 32)
!3324 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !564, line: 386, baseType: !3325)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !564, line: 370, size: 448, elements: !3326)
!3326 = !{!3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3325, file: !564, line: 372, baseType: !568, size: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3325, file: !564, line: 373, baseType: !568, size: 32, offset: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3325, file: !564, line: 374, baseType: !568, size: 32, offset: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3325, file: !564, line: 375, baseType: !568, size: 32, offset: 96)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3325, file: !564, line: 376, baseType: !568, size: 32, offset: 128)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3325, file: !564, line: 377, baseType: !568, size: 32, offset: 160)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3325, file: !564, line: 378, baseType: !568, size: 32, offset: 192)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3325, file: !564, line: 379, baseType: !568, size: 32, offset: 224)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3325, file: !564, line: 380, baseType: !568, size: 32, offset: 256)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3325, file: !564, line: 381, baseType: !568, size: 32, offset: 288)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3325, file: !564, line: 382, baseType: !568, size: 32, offset: 320)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3325, file: !564, line: 383, baseType: !568, size: 32, offset: 352)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3325, file: !564, line: 384, baseType: !568, size: 32, offset: 384)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3325, file: !564, line: 385, baseType: !568, size: 32, offset: 416)
!3341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3343, splitDebugInlining: false, nameTableKind: None)
!3342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3343 = !{!104, !439}
!3344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3346, retainedTypes: !551, splitDebugInlining: false, nameTableKind: None)
!3345 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3346 = !{!3347, !3354, !30}
!3347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3348, line: 14, baseType: !32, size: 32, elements: !3349)
!3348 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3349 = !{!3350, !3351, !3352, !3353}
!3350 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3351 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3352 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3353 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3348, line: 42, baseType: !32, size: 32, elements: !3355)
!3355 = !{!3356, !3357, !3358, !3359, !3360, !3361}
!3356 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3357 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3358 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3359 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3360 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3361 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3363, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !551, splitDebugInlining: false, nameTableKind: None)
!3363 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3365, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3366, splitDebugInlining: false, nameTableKind: None)
!3365 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3366 = !{!22, !104, !108}
!3367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !551, splitDebugInlining: false, nameTableKind: None)
!3368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3369 = !{!"Ubuntu clang version 14.0.6"}
!3370 = !{i32 7, !"Dwarf Version", i32 4}
!3371 = !{i32 2, !"Debug Info Version", i32 3}
!3372 = !{i32 1, !"wchar_size", i32 4}
!3373 = !{i32 1, !"min_enum_size", i32 4}
!3374 = !{i32 1, !"branch-target-enforcement", i32 0}
!3375 = !{i32 1, !"sign-return-address", i32 0}
!3376 = !{i32 1, !"sign-return-address-all", i32 0}
!3377 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3378 = !{i32 7, !"frame-pointer", i32 2}
!3379 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3380, file: !3380, line: 26, type: !3381, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !437)
!3380 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3381 = !DISubroutineType(types: !3382)
!3382 = !{null}
!3383 = !DILocation(line: 28, column: 1, scope: !3379)
!3384 = !{i64 2152501588, i64 2152501608, i64 2152501671}
!3385 = !DILocation(line: 29, column: 1, scope: !3379)
!3386 = !{i64 2152506064, i64 2152506084, i64 2152506147}
!3387 = !DILocation(line: 30, column: 1, scope: !3379)
!3388 = !{i64 2152506483, i64 2152506503, i64 2152506566}
!3389 = !DILocation(line: 31, column: 1, scope: !3379)
!3390 = !{i64 2152506902, i64 2152506922, i64 2152506985}
!3391 = !DILocation(line: 33, column: 1, scope: !3379)
!3392 = !{i64 2152507194, i64 2152507214, i64 2152507277}
!3393 = !DILocation(line: 35, column: 1, scope: !3379)
!3394 = !{i64 2152507519, i64 2152507539, i64 2152507602}
!3395 = !DILocation(line: 50, column: 1, scope: !3379)
!3396 = !{i64 2152507946, i64 2152507966, i64 2152508029}
!3397 = !DILocation(line: 54, column: 1, scope: !3379)
!3398 = !{i64 2152508385, i64 2152508405, i64 2152508468}
!3399 = !DILocation(line: 61, column: 1, scope: !3379)
!3400 = !{i64 2152508702, i64 2152508722, i64 2152508785}
!3401 = !DILocation(line: 63, column: 1, scope: !3379)
!3402 = !{i64 2152509082, i64 2152509102, i64 2152509165}
!3403 = !DILocation(line: 64, column: 1, scope: !3379)
!3404 = !{i64 2152509604, i64 2152509624, i64 2152509687}
!3405 = !DILocation(line: 65, column: 1, scope: !3379)
!3406 = !{i64 2152510102, i64 2152510122, i64 2152510185}
!3407 = !DILocation(line: 66, column: 1, scope: !3379)
!3408 = !{i64 2152510584, i64 2152510604, i64 2152510667}
!3409 = !DILocation(line: 67, column: 1, scope: !3379)
!3410 = !{i64 2152511091, i64 2152511111, i64 2152511174}
!3411 = !DILocation(line: 68, column: 1, scope: !3379)
!3412 = !{i64 2152511579, i64 2152511599, i64 2152511662}
!3413 = !DILocation(line: 70, column: 1, scope: !3379)
!3414 = !{i64 2152512047, i64 2152512067, i64 2152512130}
!3415 = !DILocation(line: 71, column: 1, scope: !3379)
!3416 = !{i64 2152512489, i64 2152512509, i64 2152512572}
!3417 = !DILocation(line: 72, column: 1, scope: !3379)
!3418 = !{i64 2152512947, i64 2152512967, i64 2152513030}
!3419 = !DILocation(line: 79, column: 1, scope: !3379)
!3420 = !{i64 2152513401, i64 2152513421, i64 2152513484}
!3421 = !DILocation(line: 80, column: 1, scope: !3379)
!3422 = !{i64 2152513912, i64 2152513932, i64 2152513995}
!3423 = !DILocation(line: 82, column: 1, scope: !3379)
!3424 = !{i64 2152514403, i64 2152514423, i64 2152514486}
!3425 = !DILocation(line: 97, column: 1, scope: !3379)
!3426 = !{i64 2152514740, i64 2152514760, i64 2152514823}
!3427 = !DILocation(line: 99, column: 1, scope: !3379)
!3428 = !{i64 2152514958, i64 2152514978, i64 2152515041}
!3429 = !DILocation(line: 102, column: 1, scope: !3379)
!3430 = !{i64 2152515215, i64 2152515235, i64 2152515298}
!3431 = !DILocation(line: 105, column: 1, scope: !3379)
!3432 = !{i64 2152515455, i64 2152515475, i64 2152515538}
!3433 = !DILocation(line: 115, column: 1, scope: !3379)
!3434 = !{i64 2152519855, i64 2152519875, i64 2152519938}
!3435 = !DILocation(line: 118, column: 1, scope: !3379)
!3436 = !{i64 2152520199, i64 2152520219, i64 2152520282}
!3437 = !DILocation(line: 32, column: 1, scope: !3438)
!3438 = !DILexicalBlockFile(scope: !3379, file: !3439, discriminator: 0)
!3439 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3440 = !{i64 2152520555, i64 2152520575, i64 2152520638}
!3441 = !DILocation(line: 33, column: 1, scope: !3438)
!3442 = !{i64 2152521067, i64 2152521087, i64 2152521150}
!3443 = !DILocation(line: 53, column: 1, scope: !3438)
!3444 = !{i64 2152521575, i64 2152521595, i64 2152521658}
!3445 = !DILocation(line: 54, column: 1, scope: !3438)
!3446 = !{i64 2152521993, i64 2152522013, i64 2152522076}
!3447 = !DILocation(line: 55, column: 1, scope: !3438)
!3448 = !{i64 2152522411, i64 2152522431, i64 2152522494}
!3449 = !DILocation(line: 56, column: 1, scope: !3438)
!3450 = !{i64 2152522829, i64 2152522849, i64 2152522912}
!3451 = !DILocation(line: 57, column: 1, scope: !3438)
!3452 = !{i64 2152523247, i64 2152523267, i64 2152523330}
!3453 = !DILocation(line: 58, column: 1, scope: !3438)
!3454 = !{i64 2152523665, i64 2152523685, i64 2152523748}
!3455 = !DILocation(line: 59, column: 1, scope: !3438)
!3456 = !{i64 2152524083, i64 2152524103, i64 2152524166}
!3457 = !DILocation(line: 60, column: 1, scope: !3438)
!3458 = !{i64 2152524507, i64 2152524527, i64 2152524590}
!3459 = !DILocation(line: 61, column: 1, scope: !3438)
!3460 = !{i64 2152524824, i64 2152524844, i64 2152524907}
!3461 = !DILocation(line: 70, column: 1, scope: !3438)
!3462 = !{i64 2152525053, i64 2152525073, i64 2152525136}
!3463 = !DILocation(line: 72, column: 1, scope: !3438)
!3464 = !{i64 2152525385, i64 2152525405, i64 2152525468}
!3465 = !DILocation(line: 73, column: 1, scope: !3438)
!3466 = !{i64 2152525835, i64 2152525855, i64 2152525918}
!3467 = !DILocation(line: 74, column: 1, scope: !3438)
!3468 = !{i64 2152526285, i64 2152526305, i64 2152526368}
!3469 = !DILocation(line: 75, column: 1, scope: !3438)
!3470 = !{i64 2152526735, i64 2152526755, i64 2152526818}
!3471 = !DILocation(line: 76, column: 1, scope: !3438)
!3472 = !{i64 2152527185, i64 2152527205, i64 2152527268}
!3473 = !DILocation(line: 77, column: 1, scope: !3438)
!3474 = !{i64 2152527635, i64 2152527655, i64 2152527718}
!3475 = !DILocation(line: 78, column: 1, scope: !3438)
!3476 = !{i64 2152528085, i64 2152528105, i64 2152528168}
!3477 = !DILocation(line: 79, column: 1, scope: !3438)
!3478 = !{i64 2152528535, i64 2152528555, i64 2152528618}
!3479 = !DILocation(line: 80, column: 1, scope: !3438)
!3480 = !{i64 2152533049, i64 2152533069, i64 2152533132}
!3481 = !DILocation(line: 84, column: 1, scope: !3438)
!3482 = !{i64 2152533381, i64 2152533401, i64 2152533464}
!3483 = !DILocation(line: 91, column: 1, scope: !3438)
!3484 = !{i64 2152533778, i64 2152533798, i64 2152533861}
!3485 = !DILocation(line: 93, column: 1, scope: !3438)
!3486 = !{i64 2152534145, i64 2152534165, i64 2152534228}
!3487 = !DILocation(line: 106, column: 1, scope: !3438)
!3488 = !{i64 2152534415, i64 2152534435, i64 2152534498}
!3489 = !DILocation(line: 11, column: 1, scope: !3490)
!3490 = !DILexicalBlockFile(scope: !3379, file: !3491, discriminator: 0)
!3491 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3492 = distinct !DISubprogram(name: "main", scope: !119, file: !119, line: 29, type: !3381, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3493)
!3493 = !{!3494, !3511, !3513, !3515, !3519, !3521, !3522, !3524, !3526, !3529, !3531, !3532, !3537, !3538, !3539, !3543, !3545}
!3494 = !DILocalVariable(name: "vnd_sensor", scope: !3492, file: !119, line: 31, type: !3495)
!3495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3496)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 32)
!3497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3498)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !3499)
!3499 = !{!3500, !3501, !3502, !3503, !3509, !3510}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3498, file: !411, line: 380, baseType: !105, size: 32)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3498, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3498, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3498, file: !411, line: 386, baseType: !3504, size: 32, offset: 96)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 32)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !3506)
!3506 = !{!3507, !3508}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3505, file: !411, line: 359, baseType: !164, size: 8)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3505, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3498, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3498, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!3511 = !DILocalVariable(name: "iodev", scope: !3492, file: !119, line: 32, type: !3512)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!3513 = !DILocalVariable(name: "n", scope: !3514, file: !119, line: 35, type: !108)
!3514 = distinct !DILexicalBlock(scope: !3492, file: !119, line: 35, column: 2)
!3515 = !DILocalVariable(name: "sqe", scope: !3516, file: !119, line: 36, type: !3518)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !119, line: 35, column: 30)
!3517 = distinct !DILexicalBlock(scope: !3514, file: !119, line: 35, column: 2)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!3519 = !DILocalVariable(name: "idx", scope: !3520, file: !119, line: 36, type: !24)
!3520 = distinct !DILexicalBlock(scope: !3516, file: !119, line: 36, column: 26)
!3521 = !DILocalVariable(name: "acq", scope: !3520, file: !119, line: 36, type: !422)
!3522 = !DILocalVariable(name: "m", scope: !3523, file: !119, line: 44, type: !108)
!3523 = distinct !DILexicalBlock(scope: !3492, file: !119, line: 43, column: 15)
!3524 = !DILocalVariable(name: "userdata", scope: !3523, file: !119, line: 45, type: !3525)
!3525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !461)
!3526 = !DILocalVariable(name: "cqe", scope: !3527, file: !119, line: 55, type: !3528)
!3527 = distinct !DILexicalBlock(scope: !3523, file: !119, line: 54, column: 17)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3529 = !DILocalVariable(name: "idx", scope: !3530, file: !119, line: 55, type: !24)
!3530 = distinct !DILexicalBlock(scope: !3527, file: !119, line: 55, column: 27)
!3531 = !DILocalVariable(name: "has_consumable", scope: !3530, file: !119, line: 55, type: !422)
!3532 = !DILocalVariable(name: "_str", scope: !3533, file: !119, line: 81, type: !105)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !119, line: 81, column: 4)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !119, line: 80, column: 27)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !119, line: 80, column: 3)
!3536 = distinct !DILexicalBlock(scope: !3523, file: !119, line: 80, column: 3)
!3537 = !DILocalVariable(name: "is_user_context", scope: !3533, file: !119, line: 81, type: !422)
!3538 = !DILocalVariable(name: "filters", scope: !3533, file: !119, line: 81, type: !113)
!3539 = !DILocalVariable(name: "sqe", scope: !3540, file: !119, line: 90, type: !3518)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !119, line: 89, column: 27)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !119, line: 89, column: 3)
!3542 = distinct !DILexicalBlock(scope: !3523, file: !119, line: 89, column: 3)
!3543 = !DILocalVariable(name: "idx", scope: !3544, file: !119, line: 90, type: !24)
!3544 = distinct !DILexicalBlock(scope: !3540, file: !119, line: 90, column: 27)
!3545 = !DILocalVariable(name: "acq", scope: !3544, file: !119, line: 90, type: !422)
!3546 = !DILocation(line: 0, scope: !3492)
!3547 = !DILocation(line: 32, column: 41, scope: !3492)
!3548 = !DILocation(line: 0, scope: !3514)
!3549 = !DILocation(line: 36, column: 26, scope: !3520)
!3550 = !DILocation(line: 35, column: 2, scope: !3514)
!3551 = !DILocation(line: 43, column: 2, scope: !3492)
!3552 = !DILocation(line: 0, scope: !3520)
!3553 = !DILocation(line: 36, column: 26, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !119, line: 36, column: 26)
!3555 = distinct !DILexicalBlock(scope: !3520, file: !119, line: 36, column: 26)
!3556 = !DILocation(line: 0, scope: !3516)
!3557 = !DILocation(line: 38, column: 50, scope: !3516)
!3558 = !DILocation(line: 38, column: 3, scope: !3516)
!3559 = !DILocation(line: 40, column: 3, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !119, line: 40, column: 3)
!3561 = distinct !DILexicalBlock(scope: !3516, file: !119, line: 40, column: 3)
!3562 = !DILocation(line: 40, column: 3, scope: !3561)
!3563 = !DILocation(line: 40, column: 3, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3560, file: !119, line: 40, column: 3)
!3565 = !DILocation(line: 35, column: 26, scope: !3517)
!3566 = !DILocation(line: 35, column: 20, scope: !3517)
!3567 = distinct !{!3567, !3550, !3568}
!3568 = !DILocation(line: 41, column: 2, scope: !3514)
!3569 = !DILocation(line: 0, scope: !3523)
!3570 = !DILocation(line: 45, column: 3, scope: !3523)
!3571 = !DILocation(line: 45, column: 12, scope: !3523)
!3572 = !DILocation(line: 47, column: 3, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !119, line: 47, column: 3)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !119, line: 47, column: 3)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !119, line: 47, column: 3)
!3576 = distinct !DILexicalBlock(scope: !3523, file: !119, line: 47, column: 3)
!3577 = !DILocation(line: 48, column: 3, scope: !3523)
!3578 = !DILocation(line: 54, column: 3, scope: !3523)
!3579 = !DILocation(line: 55, column: 27, scope: !3530)
!3580 = !DILocation(line: 0, scope: !3530)
!3581 = !DILocation(line: 0, scope: !3527)
!3582 = !DILocation(line: 58, column: 5, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !119, line: 58, column: 5)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !119, line: 58, column: 5)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !119, line: 58, column: 5)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !119, line: 58, column: 5)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !119, line: 57, column: 21)
!3588 = distinct !DILexicalBlock(scope: !3527, file: !119, line: 57, column: 8)
!3589 = !DILocation(line: 59, column: 5, scope: !3587)
!3590 = !DILocation(line: 60, column: 5, scope: !3587)
!3591 = distinct !{!3591, !3578, !3592}
!3592 = !DILocation(line: 71, column: 3, scope: !3523)
!3593 = !DILocation(line: 55, column: 27, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !119, line: 55, column: 27)
!3595 = distinct !DILexicalBlock(scope: !3530, file: !119, line: 55, column: 27)
!3596 = !DILocation(line: 62, column: 4, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !119, line: 62, column: 4)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !119, line: 62, column: 4)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !119, line: 62, column: 4)
!3600 = distinct !DILexicalBlock(scope: !3527, file: !119, line: 62, column: 4)
!3601 = !DILocation(line: 64, column: 13, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3527, file: !119, line: 64, column: 8)
!3603 = !DILocation(line: 64, column: 20, scope: !3602)
!3604 = !DILocation(line: 64, column: 8, scope: !3527)
!3605 = !DILocation(line: 65, column: 5, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !119, line: 65, column: 5)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !119, line: 65, column: 5)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !119, line: 65, column: 5)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !119, line: 65, column: 5)
!3610 = distinct !DILexicalBlock(scope: !3602, file: !119, line: 64, column: 25)
!3611 = !DILocation(line: 66, column: 4, scope: !3610)
!3612 = !DILocation(line: 68, column: 23, scope: !3527)
!3613 = !DILocation(line: 68, column: 4, scope: !3527)
!3614 = !DILocation(line: 68, column: 16, scope: !3527)
!3615 = !DILocation(line: 69, column: 4, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !119, line: 69, column: 4)
!3617 = distinct !DILexicalBlock(scope: !3527, file: !119, line: 69, column: 4)
!3618 = !DILocation(line: 69, column: 4, scope: !3617)
!3619 = !DILocation(line: 69, column: 4, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3616, file: !119, line: 69, column: 4)
!3621 = !DILocation(line: 70, column: 5, scope: !3527)
!3622 = !DILocation(line: 54, column: 12, scope: !3523)
!3623 = !DILocation(line: 79, column: 3, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !119, line: 79, column: 3)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !119, line: 79, column: 3)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !119, line: 79, column: 3)
!3627 = distinct !DILexicalBlock(scope: !3523, file: !119, line: 79, column: 3)
!3628 = !DILocation(line: 80, column: 3, scope: !3536)
!3629 = !DILocation(line: 0, scope: !3533)
!3630 = !DILocation(line: 81, column: 4, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !119, line: 81, column: 4)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !119, line: 81, column: 4)
!3633 = distinct !DILexicalBlock(scope: !3533, file: !119, line: 81, column: 4)
!3634 = !DILocation(line: 81, column: 4, scope: !3632)
!3635 = !DILocation(line: 80, column: 23, scope: !3535)
!3636 = !DILocation(line: 80, column: 17, scope: !3535)
!3637 = distinct !{!3637, !3628, !3638}
!3638 = !DILocation(line: 82, column: 3, scope: !3536)
!3639 = !DILocation(line: 83, column: 3, scope: !3523)
!3640 = !DILocation(line: 84, column: 3, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !119, line: 84, column: 3)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !119, line: 84, column: 3)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !119, line: 84, column: 3)
!3644 = distinct !DILexicalBlock(scope: !3523, file: !119, line: 84, column: 3)
!3645 = !DILocation(line: 90, column: 27, scope: !3544)
!3646 = !DILocation(line: 89, column: 3, scope: !3542)
!3647 = !DILocation(line: 0, scope: !3544)
!3648 = !DILocation(line: 90, column: 27, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !119, line: 90, column: 27)
!3650 = distinct !DILexicalBlock(scope: !3544, file: !119, line: 90, column: 27)
!3651 = !DILocation(line: 0, scope: !3540)
!3652 = !DILocation(line: 93, column: 9, scope: !3540)
!3653 = !DILocation(line: 92, column: 4, scope: !3540)
!3654 = !DILocation(line: 95, column: 4, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !119, line: 95, column: 4)
!3656 = distinct !DILexicalBlock(scope: !3540, file: !119, line: 95, column: 4)
!3657 = !DILocation(line: 95, column: 4, scope: !3656)
!3658 = !DILocation(line: 95, column: 4, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3655, file: !119, line: 95, column: 4)
!3660 = !DILocation(line: 89, column: 23, scope: !3541)
!3661 = !DILocation(line: 89, column: 17, scope: !3541)
!3662 = distinct !{!3662, !3646, !3663}
!3663 = !DILocation(line: 96, column: 3, scope: !3542)
!3664 = !DILocation(line: 97, column: 2, scope: !3492)
!3665 = distinct !{!3665, !3551, !3664}
!3666 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3667, file: !3667, line: 175, type: !3668, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3670)
!3667 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3668 = !DISubroutineType(types: !3669)
!3669 = !{!107, !108}
!3670 = !{!3671}
!3671 = !DILocalVariable(name: "level", arg: 1, scope: !3666, file: !3667, line: 175, type: !108)
!3672 = !DILocation(line: 0, scope: !3666)
!3673 = !DILocation(line: 177, column: 2, scope: !3666)
!3674 = !DILocation(line: 189, column: 1, scope: !3666)
!3675 = distinct !DISubprogram(name: "atomic_get", scope: !3676, file: !3676, line: 159, type: !3677, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3682)
!3676 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!3679, !3680}
!3679 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !143, line: 23, baseType: !142)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 32)
!3681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!3682 = !{!3683}
!3683 = !DILocalVariable(name: "target", arg: 1, scope: !3675, file: !3676, line: 159, type: !3680)
!3684 = !DILocation(line: 0, scope: !3675)
!3685 = !DILocation(line: 161, column: 9, scope: !3675)
!3686 = !DILocation(line: 161, column: 2, scope: !3675)
!3687 = distinct !DISubprogram(name: "rtio_sqe_prep_read", scope: !125, file: !125, line: 341, type: !3688, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3690)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{null, !3518, !171, !704, !209, !113, !104}
!3690 = !{!3691, !3692, !3693, !3694, !3695, !3696}
!3691 = !DILocalVariable(name: "sqe", arg: 1, scope: !3687, file: !125, line: 341, type: !3518)
!3692 = !DILocalVariable(name: "iodev", arg: 2, scope: !3687, file: !125, line: 342, type: !171)
!3693 = !DILocalVariable(name: "prio", arg: 3, scope: !3687, file: !125, line: 343, type: !704)
!3694 = !DILocalVariable(name: "buf", arg: 4, scope: !3687, file: !125, line: 344, type: !209)
!3695 = !DILocalVariable(name: "len", arg: 5, scope: !3687, file: !125, line: 345, type: !113)
!3696 = !DILocalVariable(name: "userdata", arg: 6, scope: !3687, file: !125, line: 346, type: !104)
!3697 = !DILocation(line: 0, scope: !3687)
!3698 = !DILocation(line: 348, column: 7, scope: !3687)
!3699 = !DILocation(line: 348, column: 10, scope: !3687)
!3700 = !DILocation(line: 349, column: 7, scope: !3687)
!3701 = !DILocation(line: 349, column: 12, scope: !3687)
!3702 = !DILocation(line: 350, column: 7, scope: !3687)
!3703 = !DILocation(line: 350, column: 13, scope: !3687)
!3704 = !DILocation(line: 351, column: 7, scope: !3687)
!3705 = !DILocation(line: 351, column: 15, scope: !3687)
!3706 = !DILocation(line: 352, column: 7, scope: !3687)
!3707 = !DILocation(line: 352, column: 11, scope: !3687)
!3708 = !DILocation(line: 353, column: 7, scope: !3687)
!3709 = !DILocation(line: 353, column: 16, scope: !3687)
!3710 = !DILocation(line: 354, column: 1, scope: !3687)
!3711 = distinct !DISubprogram(name: "atomic_add", scope: !3676, file: !3676, line: 86, type: !3712, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3715)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!3679, !3714, !3679}
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3715 = !{!3716, !3717}
!3716 = !DILocalVariable(name: "target", arg: 1, scope: !3711, file: !3676, line: 86, type: !3714)
!3717 = !DILocalVariable(name: "value", arg: 2, scope: !3711, file: !3676, line: 86, type: !3679)
!3718 = !DILocation(line: 0, scope: !3711)
!3719 = !DILocation(line: 88, column: 9, scope: !3711)
!3720 = !DILocation(line: 88, column: 2, scope: !3711)
!3721 = distinct !DISubprogram(name: "rtio_submit", scope: !3722, file: !3722, line: 75, type: !3723, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3725)
!3722 = !DIFile(filename: "zephyr/include/generated/syscalls/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!108, !136, !113}
!3725 = !{!3726, !3727}
!3726 = !DILocalVariable(name: "r", arg: 1, scope: !3721, file: !3722, line: 75, type: !136)
!3727 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3721, file: !3722, line: 75, type: !113)
!3728 = !DILocation(line: 0, scope: !3721)
!3729 = !DILocation(line: 84, column: 2, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3721, file: !3722, line: 84, column: 2)
!3731 = !{i64 2152442609}
!3732 = !DILocation(line: 85, column: 9, scope: !3721)
!3733 = !DILocation(line: 85, column: 2, scope: !3721)
!3734 = distinct !DISubprogram(name: "k_msleep", scope: !359, file: !359, line: 439, type: !3735, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3737)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!220, !220}
!3737 = !{!3738}
!3738 = !DILocalVariable(name: "ms", arg: 1, scope: !3734, file: !359, line: 439, type: !220)
!3739 = !DILocation(line: 0, scope: !3734)
!3740 = !DILocation(line: 441, column: 17, scope: !3734)
!3741 = !DILocation(line: 441, column: 9, scope: !3734)
!3742 = !DILocation(line: 441, column: 2, scope: !3734)
!3743 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3744, file: !3744, line: 403, type: !3745, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3747)
!3744 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3745 = !DISubroutineType(types: !3746)
!3746 = !{!114, !114}
!3747 = !{!3748}
!3748 = !DILocalVariable(name: "t", arg: 1, scope: !3743, file: !3744, line: 403, type: !114)
!3749 = !DILocation(line: 0, scope: !3743)
!3750 = !DILocalVariable(name: "t", arg: 1, scope: !3751, file: !3744, line: 102, type: !114)
!3751 = distinct !DISubprogram(name: "z_tmcvt", scope: !3744, file: !3744, line: 102, type: !3752, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3754)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!114, !114, !113, !113, !422, !422, !422, !422}
!3754 = !{!3750, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764}
!3755 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3751, file: !3744, line: 102, type: !113)
!3756 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3751, file: !3744, line: 103, type: !113)
!3757 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3751, file: !3744, line: 103, type: !422)
!3758 = !DILocalVariable(name: "result32", arg: 5, scope: !3751, file: !3744, line: 104, type: !422)
!3759 = !DILocalVariable(name: "round_up", arg: 6, scope: !3751, file: !3744, line: 104, type: !422)
!3760 = !DILocalVariable(name: "round_off", arg: 7, scope: !3751, file: !3744, line: 105, type: !422)
!3761 = !DILocalVariable(name: "mul_ratio", scope: !3751, file: !3744, line: 107, type: !422)
!3762 = !DILocalVariable(name: "div_ratio", scope: !3751, file: !3744, line: 109, type: !422)
!3763 = !DILocalVariable(name: "off", scope: !3751, file: !3744, line: 116, type: !114)
!3764 = !DILocalVariable(name: "rdivisor", scope: !3765, file: !3744, line: 119, type: !113)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !3744, line: 118, column: 18)
!3766 = distinct !DILexicalBlock(scope: !3751, file: !3744, line: 118, column: 6)
!3767 = !DILocation(line: 0, scope: !3751, inlinedAt: !3768)
!3768 = distinct !DILocation(line: 406, column: 9, scope: !3743)
!3769 = !DILocation(line: 145, column: 13, scope: !3770, inlinedAt: !3768)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !3744, line: 144, column: 10)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !3744, line: 142, column: 7)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !3744, line: 141, column: 24)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !3744, line: 141, column: 13)
!3774 = distinct !DILexicalBlock(scope: !3751, file: !3744, line: 134, column: 6)
!3775 = !DILocation(line: 406, column: 2, scope: !3743)
!3776 = distinct !DISubprogram(name: "k_sleep", scope: !3777, file: !3777, line: 91, type: !3778, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3784)
!3777 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!220, !3780}
!3780 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !3781)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !3782)
!3782 = !{!3783}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3781, file: !110, line: 66, baseType: !109, size: 64)
!3784 = !{!3785}
!3785 = !DILocalVariable(name: "timeout", arg: 1, scope: !3776, file: !3777, line: 91, type: !3780)
!3786 = !DILocation(line: 0, scope: !3776)
!3787 = !DILocation(line: 99, column: 2, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3776, file: !3777, line: 99, column: 2)
!3789 = !{i64 2152230904}
!3790 = !DILocation(line: 100, column: 9, scope: !3776)
!3791 = !DILocation(line: 100, column: 2, scope: !3776)
!3792 = distinct !DISubprogram(name: "z_impl_rtio_submit", scope: !125, file: !125, line: 744, type: !3723, scopeLine: 745, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3793)
!3793 = !{!3794, !3795, !3796, !3797}
!3794 = !DILocalVariable(name: "r", arg: 1, scope: !3792, file: !125, line: 744, type: !136)
!3795 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3792, file: !125, line: 744, type: !113)
!3796 = !DILocalVariable(name: "res", scope: !3792, file: !125, line: 746, type: !108)
!3797 = !DILocalVariable(name: "acquired", scope: !3798, file: !125, line: 763, type: !24)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !125, line: 763, column: 2)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !125, line: 763, column: 2)
!3800 = distinct !DILexicalBlock(scope: !3792, file: !125, line: 763, column: 2)
!3801 = !DILocation(line: 0, scope: !3792)
!3802 = !DILocation(line: 763, column: 2, scope: !3799)
!3803 = !DILocation(line: 763, column: 2, scope: !3800)
!3804 = !DILocation(line: 0, scope: !3798)
!3805 = !DILocation(line: 763, column: 2, scope: !3798)
!3806 = !DILocation(line: 768, column: 11, scope: !3792)
!3807 = !DILocation(line: 768, column: 21, scope: !3792)
!3808 = !DILocation(line: 768, column: 26, scope: !3792)
!3809 = !DILocation(line: 768, column: 8, scope: !3792)
!3810 = !DILocation(line: 769, column: 10, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3792, file: !125, line: 769, column: 6)
!3812 = !DILocation(line: 769, column: 6, scope: !3792)
!3813 = !DILocation(line: 784, column: 9, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3792, file: !125, line: 784, column: 9)
!3815 = !DILocation(line: 784, column: 37, scope: !3792)
!3816 = !DILocation(line: 784, column: 2, scope: !3792)
!3817 = !DILocation(line: 788, column: 3, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3792, file: !125, line: 784, column: 51)
!3819 = distinct !{!3819, !3816, !3820}
!3820 = !DILocation(line: 790, column: 2, scope: !3792)
!3821 = !DILocation(line: 794, column: 1, scope: !3792)
!3822 = distinct !DISubprogram(name: "k_yield", scope: !3777, file: !3777, line: 140, type: !3381, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !437)
!3823 = !DILocation(line: 148, column: 2, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3822, file: !3777, line: 148, column: 2)
!3825 = !{i64 2152231108}
!3826 = !DILocation(line: 149, column: 2, scope: !3822)
!3827 = !DILocation(line: 150, column: 1, scope: !3822)
!3828 = distinct !DISubprogram(name: "vnd_sensor_iodev_submit", scope: !265, file: !265, line: 74, type: !277, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3829)
!3829 = !{!3830, !3831, !3832, !3833, !3834, !3836, !3838}
!3830 = !DILocalVariable(name: "sqe", arg: 1, scope: !3828, file: !265, line: 74, type: !279)
!3831 = !DILocalVariable(name: "r", arg: 2, scope: !3828, file: !265, line: 74, type: !298)
!3832 = !DILocalVariable(name: "data", scope: !3828, file: !265, line: 76, type: !263)
!3833 = !DILocalVariable(name: "dev", scope: !3828, file: !265, line: 77, type: !408)
!3834 = !DILocalVariable(name: "iodev_sqe", scope: !3828, file: !265, line: 78, type: !3835)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3836 = !DILocalVariable(name: "idx", scope: !3837, file: !265, line: 78, type: !24)
!3837 = distinct !DILexicalBlock(scope: !3828, file: !265, line: 78, column: 37)
!3838 = !DILocalVariable(name: "acq", scope: !3837, file: !265, line: 78, type: !422)
!3839 = !DILocation(line: 0, scope: !3828)
!3840 = !DILocation(line: 76, column: 65, scope: !3828)
!3841 = !DILocation(line: 77, column: 35, scope: !3828)
!3842 = !DILocation(line: 78, column: 37, scope: !3837)
!3843 = !DILocation(line: 0, scope: !3837)
!3844 = !DILocation(line: 78, column: 37, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !265, line: 78, column: 37)
!3846 = distinct !DILexicalBlock(scope: !3837, file: !265, line: 78, column: 37)
!3847 = !DILocation(line: 81, column: 14, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !265, line: 80, column: 25)
!3849 = distinct !DILexicalBlock(scope: !3828, file: !265, line: 80, column: 6)
!3850 = !DILocation(line: 81, column: 18, scope: !3848)
!3851 = !DILocation(line: 82, column: 14, scope: !3848)
!3852 = !DILocation(line: 82, column: 16, scope: !3848)
!3853 = !DILocation(line: 83, column: 3, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !265, line: 83, column: 3)
!3855 = distinct !DILexicalBlock(scope: !3848, file: !265, line: 83, column: 3)
!3856 = !DILocation(line: 83, column: 3, scope: !3855)
!3857 = !DILocation(line: 83, column: 3, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3854, file: !265, line: 83, column: 3)
!3859 = !DILocation(line: 85, column: 3, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !265, line: 85, column: 3)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !265, line: 85, column: 3)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !265, line: 85, column: 3)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !265, line: 85, column: 3)
!3864 = distinct !DILexicalBlock(scope: !3849, file: !265, line: 84, column: 9)
!3865 = !DILocation(line: 86, column: 3, scope: !3864)
!3866 = !DILocation(line: 88, column: 1, scope: !3828)
!3867 = distinct !DISubprogram(name: "atomic_get", scope: !3676, file: !3676, line: 159, type: !3677, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3868)
!3868 = !{!3869}
!3869 = !DILocalVariable(name: "target", arg: 1, scope: !3867, file: !3676, line: 159, type: !3680)
!3870 = !DILocation(line: 0, scope: !3867)
!3871 = !DILocation(line: 161, column: 9, scope: !3867)
!3872 = !DILocation(line: 161, column: 2, scope: !3867)
!3873 = distinct !DISubprogram(name: "atomic_add", scope: !3676, file: !3676, line: 86, type: !3712, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3874)
!3874 = !{!3875, !3876}
!3875 = !DILocalVariable(name: "target", arg: 1, scope: !3873, file: !3676, line: 86, type: !3714)
!3876 = !DILocalVariable(name: "value", arg: 2, scope: !3873, file: !3676, line: 86, type: !3679)
!3877 = !DILocation(line: 0, scope: !3873)
!3878 = !DILocation(line: 88, column: 9, scope: !3873)
!3879 = !DILocation(line: 88, column: 2, scope: !3873)
!3880 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3667, file: !3667, line: 175, type: !3668, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3881)
!3881 = !{!3882}
!3882 = !DILocalVariable(name: "level", arg: 1, scope: !3880, file: !3667, line: 175, type: !108)
!3883 = !DILocation(line: 0, scope: !3880)
!3884 = !DILocation(line: 177, column: 2, scope: !3880)
!3885 = !DILocation(line: 189, column: 1, scope: !3880)
!3886 = distinct !DISubprogram(name: "rtio_sqe_err", scope: !125, file: !125, line: 592, type: !316, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3887)
!3887 = !{!3888, !3889, !3890}
!3888 = !DILocalVariable(name: "r", arg: 1, scope: !3886, file: !125, line: 592, type: !298)
!3889 = !DILocalVariable(name: "sqe", arg: 2, scope: !3886, file: !125, line: 592, type: !279)
!3890 = !DILocalVariable(name: "result", arg: 3, scope: !3886, file: !125, line: 592, type: !108)
!3891 = !DILocation(line: 0, scope: !3886)
!3892 = !DILocation(line: 594, column: 5, scope: !3886)
!3893 = !DILocation(line: 594, column: 15, scope: !3886)
!3894 = !DILocation(line: 594, column: 20, scope: !3886)
!3895 = !DILocation(line: 594, column: 2, scope: !3886)
!3896 = !DILocation(line: 595, column: 1, scope: !3886)
!3897 = distinct !DISubprogram(name: "vnd_sensor_init", scope: !265, file: !265, line: 111, type: !473, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3898)
!3898 = !{!3899, !3900, !3902, !3903}
!3899 = !DILocalVariable(name: "dev", arg: 1, scope: !3897, file: !265, line: 111, type: !408)
!3900 = !DILocalVariable(name: "config", scope: !3897, file: !265, line: 113, type: !3901)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!3902 = !DILocalVariable(name: "data", scope: !3897, file: !265, line: 114, type: !263)
!3903 = !DILocalVariable(name: "sample_period", scope: !3897, file: !265, line: 115, type: !113)
!3904 = !DILocation(line: 0, scope: !3897)
!3905 = !DILocation(line: 113, column: 48, scope: !3897)
!3906 = !DILocation(line: 114, column: 38, scope: !3897)
!3907 = !DILocation(line: 115, column: 35, scope: !3897)
!3908 = !DILocation(line: 117, column: 8, scope: !3897)
!3909 = !DILocation(line: 117, column: 12, scope: !3897)
!3910 = !DILocation(line: 119, column: 22, scope: !3897)
!3911 = !DILocation(line: 119, column: 2, scope: !3897)
!3912 = !DILocation(line: 121, column: 30, scope: !3897)
!3913 = !DILocation(line: 121, column: 2, scope: !3897)
!3914 = !DILocation(line: 124, column: 2, scope: !3897)
!3915 = distinct !DISubprogram(name: "vnd_sensor_timer_expiry", scope: !265, file: !265, line: 103, type: !396, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3916)
!3916 = !{!3917, !3918}
!3917 = !DILocalVariable(name: "timer", arg: 1, scope: !3915, file: !265, line: 103, type: !398)
!3918 = !DILocalVariable(name: "data", scope: !3915, file: !265, line: 105, type: !263)
!3919 = !DILocation(line: 0, scope: !3915)
!3920 = !DILocation(line: 106, column: 3, scope: !3915)
!3921 = !DILocation(line: 108, column: 30, scope: !3915)
!3922 = !DILocation(line: 108, column: 2, scope: !3915)
!3923 = !DILocation(line: 109, column: 1, scope: !3915)
!3924 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3744, file: !3744, line: 403, type: !3745, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3925)
!3925 = !{!3926}
!3926 = !DILocalVariable(name: "t", arg: 1, scope: !3924, file: !3744, line: 403, type: !114)
!3927 = !DILocation(line: 0, scope: !3924)
!3928 = !DILocalVariable(name: "t", arg: 1, scope: !3929, file: !3744, line: 102, type: !114)
!3929 = distinct !DISubprogram(name: "z_tmcvt", scope: !3744, file: !3744, line: 102, type: !3752, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3930)
!3930 = !{!3928, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940}
!3931 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3929, file: !3744, line: 102, type: !113)
!3932 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3929, file: !3744, line: 103, type: !113)
!3933 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3929, file: !3744, line: 103, type: !422)
!3934 = !DILocalVariable(name: "result32", arg: 5, scope: !3929, file: !3744, line: 104, type: !422)
!3935 = !DILocalVariable(name: "round_up", arg: 6, scope: !3929, file: !3744, line: 104, type: !422)
!3936 = !DILocalVariable(name: "round_off", arg: 7, scope: !3929, file: !3744, line: 105, type: !422)
!3937 = !DILocalVariable(name: "mul_ratio", scope: !3929, file: !3744, line: 107, type: !422)
!3938 = !DILocalVariable(name: "div_ratio", scope: !3929, file: !3744, line: 109, type: !422)
!3939 = !DILocalVariable(name: "off", scope: !3929, file: !3744, line: 116, type: !114)
!3940 = !DILocalVariable(name: "rdivisor", scope: !3941, file: !3744, line: 119, type: !113)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !3744, line: 118, column: 18)
!3942 = distinct !DILexicalBlock(scope: !3929, file: !3744, line: 118, column: 6)
!3943 = !DILocation(line: 0, scope: !3929, inlinedAt: !3944)
!3944 = distinct !DILocation(line: 406, column: 9, scope: !3924)
!3945 = !DILocation(line: 145, column: 13, scope: !3946, inlinedAt: !3944)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !3744, line: 144, column: 10)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !3744, line: 142, column: 7)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !3744, line: 141, column: 24)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !3744, line: 141, column: 13)
!3950 = distinct !DILexicalBlock(scope: !3929, file: !3744, line: 134, column: 6)
!3951 = !DILocation(line: 406, column: 2, scope: !3924)
!3952 = distinct !DISubprogram(name: "k_timer_start", scope: !3777, file: !3777, line: 426, type: !3953, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{null, !398, !401, !401}
!3955 = !{!3956, !3957, !3958}
!3956 = !DILocalVariable(name: "timer", arg: 1, scope: !3952, file: !3777, line: 426, type: !398)
!3957 = !DILocalVariable(name: "duration", arg: 2, scope: !3952, file: !3777, line: 426, type: !401)
!3958 = !DILocalVariable(name: "period", arg: 3, scope: !3952, file: !3777, line: 426, type: !401)
!3959 = !DILocation(line: 0, scope: !3952)
!3960 = !DILocation(line: 437, column: 2, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3952, file: !3777, line: 437, column: 2)
!3962 = !{i64 2152234554}
!3963 = !DILocation(line: 438, column: 2, scope: !3952)
!3964 = !DILocation(line: 439, column: 1, scope: !3952)
!3965 = distinct !DISubprogram(name: "vnd_sensor_handle_int", scope: !265, file: !265, line: 90, type: !3966, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3968)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !408}
!3968 = !{!3969, !3970, !3971, !3972, !3974}
!3969 = !DILocalVariable(name: "dev", arg: 1, scope: !3965, file: !265, line: 90, type: !408)
!3970 = !DILocalVariable(name: "data", scope: !3965, file: !265, line: 92, type: !263)
!3971 = !DILocalVariable(name: "iodev_sqe", scope: !3965, file: !265, line: 93, type: !3835)
!3972 = !DILocalVariable(name: "idx", scope: !3973, file: !265, line: 93, type: !24)
!3973 = distinct !DILexicalBlock(scope: !3965, file: !265, line: 93, column: 37)
!3974 = !DILocalVariable(name: "has_consumable", scope: !3973, file: !265, line: 93, type: !422)
!3975 = !DILocation(line: 0, scope: !3965)
!3976 = !DILocation(line: 92, column: 38, scope: !3965)
!3977 = !DILocation(line: 93, column: 37, scope: !3973)
!3978 = !DILocation(line: 0, scope: !3973)
!3979 = !DILocation(line: 93, column: 37, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !265, line: 93, column: 37)
!3981 = distinct !DILexicalBlock(scope: !3973, file: !265, line: 93, column: 37)
!3982 = !DILocation(line: 96, column: 44, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !265, line: 95, column: 25)
!3984 = distinct !DILexicalBlock(scope: !3965, file: !265, line: 95, column: 6)
!3985 = !DILocation(line: 96, column: 60, scope: !3983)
!3986 = !DILocation(line: 96, column: 3, scope: !3983)
!3987 = !DILocation(line: 97, column: 3, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !265, line: 97, column: 3)
!3989 = distinct !DILexicalBlock(scope: !3983, file: !265, line: 97, column: 3)
!3990 = !DILocation(line: 97, column: 3, scope: !3989)
!3991 = !DILocation(line: 97, column: 3, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3988, file: !265, line: 97, column: 3)
!3993 = !DILocation(line: 99, column: 3, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !265, line: 99, column: 3)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !265, line: 99, column: 3)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !265, line: 99, column: 3)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !265, line: 99, column: 3)
!3998 = distinct !DILexicalBlock(scope: !3984, file: !265, line: 98, column: 9)
!3999 = !DILocation(line: 101, column: 1, scope: !3965)
!4000 = distinct !DISubprogram(name: "vnd_sensor_iodev_execute", scope: !265, file: !265, line: 55, type: !4001, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4003)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{null, !408, !279, !298}
!4003 = !{!4004, !4005, !4006, !4007}
!4004 = !DILocalVariable(name: "dev", arg: 1, scope: !4000, file: !265, line: 55, type: !408)
!4005 = !DILocalVariable(name: "sqe", arg: 2, scope: !4000, file: !265, line: 56, type: !279)
!4006 = !DILocalVariable(name: "r", arg: 3, scope: !4000, file: !265, line: 56, type: !298)
!4007 = !DILocalVariable(name: "result", scope: !4000, file: !265, line: 58, type: !108)
!4008 = !DILocation(line: 0, scope: !4000)
!4009 = !DILocation(line: 60, column: 11, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4000, file: !265, line: 60, column: 6)
!4011 = !DILocation(line: 60, column: 14, scope: !4010)
!4012 = !DILocation(line: 60, column: 6, scope: !4000)
!4013 = !DILocation(line: 63, column: 3, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !265, line: 63, column: 3)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !265, line: 63, column: 3)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !265, line: 63, column: 3)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !265, line: 63, column: 3)
!4018 = distinct !DILexicalBlock(scope: !4010, file: !265, line: 62, column: 9)
!4019 = !DILocation(line: 67, column: 6, scope: !4000)
!4020 = !DILocation(line: 61, column: 44, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4010, file: !265, line: 60, column: 29)
!4022 = !DILocation(line: 61, column: 54, scope: !4021)
!4023 = !DILocation(line: 61, column: 12, scope: !4021)
!4024 = !DILocation(line: 67, column: 13, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4000, file: !265, line: 67, column: 6)
!4026 = !DILocation(line: 68, column: 3, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4025, file: !265, line: 67, column: 18)
!4028 = !DILocation(line: 69, column: 2, scope: !4027)
!4029 = !DILocation(line: 70, column: 3, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4025, file: !265, line: 69, column: 9)
!4031 = !DILocation(line: 72, column: 1, scope: !4000)
!4032 = distinct !DISubprogram(name: "vnd_sensor_iodev_read", scope: !265, file: !265, line: 29, type: !4033, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4035)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{!108, !408, !209, !113}
!4035 = !{!4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043}
!4036 = !DILocalVariable(name: "dev", arg: 1, scope: !4032, file: !265, line: 29, type: !408)
!4037 = !DILocalVariable(name: "buf", arg: 2, scope: !4032, file: !265, line: 29, type: !209)
!4038 = !DILocalVariable(name: "buf_len", arg: 3, scope: !4032, file: !265, line: 30, type: !113)
!4039 = !DILocalVariable(name: "config", scope: !4032, file: !265, line: 32, type: !3901)
!4040 = !DILocalVariable(name: "data", scope: !4032, file: !265, line: 33, type: !263)
!4041 = !DILocalVariable(name: "sample_number", scope: !4032, file: !265, line: 34, type: !113)
!4042 = !DILocalVariable(name: "key", scope: !4032, file: !265, line: 35, type: !113)
!4043 = !DILocalVariable(name: "i", scope: !4044, file: !265, line: 48, type: !108)
!4044 = distinct !DILexicalBlock(scope: !4032, file: !265, line: 48, column: 2)
!4045 = !DILocation(line: 0, scope: !4032)
!4046 = !DILocation(line: 32, column: 48, scope: !4032)
!4047 = !DILocation(line: 33, column: 38, scope: !4032)
!4048 = !DILocation(line: 37, column: 2, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !265, line: 37, column: 2)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !265, line: 37, column: 2)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !265, line: 37, column: 2)
!4052 = distinct !DILexicalBlock(scope: !4032, file: !265, line: 37, column: 2)
!4053 = !DILocation(line: 55, column: 2, scope: !4054, inlinedAt: !4061)
!4054 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4058)
!4055 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!32}
!4058 = !{!4059, !4060}
!4059 = !DILocalVariable(name: "key", scope: !4054, file: !4055, line: 44, type: !32)
!4060 = !DILocalVariable(name: "tmp", scope: !4054, file: !4055, line: 53, type: !32)
!4061 = distinct !DILocation(line: 39, column: 8, scope: !4032)
!4062 = !{i64 1667944}
!4063 = !DILocation(line: 0, scope: !4054, inlinedAt: !4061)
!4064 = !DILocation(line: 40, column: 24, scope: !4032)
!4065 = !DILocation(line: 40, column: 37, scope: !4032)
!4066 = !DILocalVariable(name: "key", arg: 1, scope: !4067, file: !4055, line: 84, type: !32)
!4067 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4070)
!4068 = !DISubroutineType(types: !4069)
!4069 = !{null, !32}
!4070 = !{!4066}
!4071 = !DILocation(line: 0, scope: !4067, inlinedAt: !4072)
!4072 = distinct !DILocation(line: 41, column: 2, scope: !4032)
!4073 = !DILocation(line: 95, column: 2, scope: !4067, inlinedAt: !4072)
!4074 = !{i64 1668761}
!4075 = !DILocation(line: 43, column: 24, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4032, file: !265, line: 43, column: 6)
!4077 = !DILocation(line: 43, column: 14, scope: !4076)
!4078 = !DILocation(line: 43, column: 6, scope: !4032)
!4079 = !DILocation(line: 0, scope: !4044)
!4080 = !DILocation(line: 48, column: 22, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4044, file: !265, line: 48, column: 2)
!4082 = !DILocation(line: 48, column: 20, scope: !4081)
!4083 = !DILocation(line: 48, column: 2, scope: !4044)
!4084 = !DILocation(line: 44, column: 3, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !265, line: 44, column: 3)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !265, line: 44, column: 3)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !265, line: 44, column: 3)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !265, line: 44, column: 3)
!4089 = distinct !DILexicalBlock(scope: !4076, file: !265, line: 43, column: 37)
!4090 = !DILocation(line: 45, column: 3, scope: !4089)
!4091 = !DILocation(line: 49, column: 26, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4081, file: !265, line: 48, column: 62)
!4093 = !DILocation(line: 49, column: 48, scope: !4092)
!4094 = !DILocation(line: 49, column: 12, scope: !4092)
!4095 = !DILocation(line: 49, column: 3, scope: !4092)
!4096 = !DILocation(line: 49, column: 10, scope: !4092)
!4097 = !DILocation(line: 48, column: 58, scope: !4081)
!4098 = distinct !{!4098, !4083, !4099}
!4099 = !DILocation(line: 50, column: 2, scope: !4044)
!4100 = !DILocation(line: 53, column: 1, scope: !4032)
!4101 = distinct !DISubprogram(name: "rtio_sqe_ok", scope: !125, file: !125, line: 578, type: !316, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4102)
!4102 = !{!4103, !4104, !4105}
!4103 = !DILocalVariable(name: "r", arg: 1, scope: !4101, file: !125, line: 578, type: !298)
!4104 = !DILocalVariable(name: "sqe", arg: 2, scope: !4101, file: !125, line: 578, type: !279)
!4105 = !DILocalVariable(name: "result", arg: 3, scope: !4101, file: !125, line: 578, type: !108)
!4106 = !DILocation(line: 0, scope: !4101)
!4107 = !DILocation(line: 580, column: 5, scope: !4101)
!4108 = !DILocation(line: 580, column: 15, scope: !4101)
!4109 = !DILocation(line: 580, column: 20, scope: !4101)
!4110 = !DILocation(line: 580, column: 2, scope: !4101)
!4111 = !DILocation(line: 581, column: 1, scope: !4101)
!4112 = distinct !DISubprogram(name: "cbvprintf_package", scope: !541, file: !541, line: 233, type: !4113, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4122)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{!108, !104, !439, !113, !105, !4115}
!4115 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4116, line: 99, baseType: !4117)
!4116 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4116, line: 40, baseType: !4118)
!4118 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !541, baseType: !4119)
!4119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4120)
!4120 = !{!4121}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4119, file: !541, line: 18, baseType: !104, size: 32)
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4158, !4167, !4170, !4171, !4174, !4177, !4180, !4183, !4189}
!4123 = !DILocalVariable(name: "packaged", arg: 1, scope: !4112, file: !541, line: 233, type: !104)
!4124 = !DILocalVariable(name: "len", arg: 2, scope: !4112, file: !541, line: 233, type: !439)
!4125 = !DILocalVariable(name: "flags", arg: 3, scope: !4112, file: !541, line: 233, type: !113)
!4126 = !DILocalVariable(name: "fmt", arg: 4, scope: !4112, file: !541, line: 234, type: !105)
!4127 = !DILocalVariable(name: "ap", arg: 5, scope: !4112, file: !541, line: 234, type: !4115)
!4128 = !DILocalVariable(name: "buf0", scope: !4112, file: !541, line: 247, type: !209)
!4129 = !DILocalVariable(name: "buf", scope: !4112, file: !541, line: 248, type: !209)
!4130 = !DILocalVariable(name: "size", scope: !4112, file: !541, line: 249, type: !32)
!4131 = !DILocalVariable(name: "align", scope: !4112, file: !541, line: 250, type: !32)
!4132 = !DILocalVariable(name: "str_ptr_pos", scope: !4112, file: !541, line: 251, type: !4133)
!4133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !1216)
!4134 = !DILocalVariable(name: "str_ptr_arg", scope: !4112, file: !541, line: 252, type: !4133)
!4135 = !DILocalVariable(name: "s_idx", scope: !4112, file: !541, line: 253, type: !32)
!4136 = !DILocalVariable(name: "s_rw_cnt", scope: !4112, file: !541, line: 254, type: !32)
!4137 = !DILocalVariable(name: "s_ro_cnt", scope: !4112, file: !541, line: 255, type: !32)
!4138 = !DILocalVariable(name: "arg_idx", scope: !4112, file: !541, line: 256, type: !108)
!4139 = !DILocalVariable(name: "i", scope: !4112, file: !541, line: 257, type: !32)
!4140 = !DILocalVariable(name: "s", scope: !4112, file: !541, line: 258, type: !105)
!4141 = !DILocalVariable(name: "parsing", scope: !4112, file: !541, line: 259, type: !422)
!4142 = !DILocalVariable(name: "rws_pos_en", scope: !4112, file: !541, line: 263, type: !422)
!4143 = !DILocalVariable(name: "fros_cnt", scope: !4112, file: !541, line: 268, type: !108)
!4144 = !DILocalVariable(name: "is_str_arg", scope: !4112, file: !541, line: 269, type: !422)
!4145 = !DILocalVariable(name: "pkg_hdr", scope: !4112, file: !541, line: 270, type: !4146)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 32)
!4147 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4148, line: 78, size: 32, elements: !4149)
!4148 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4149 = !{!4150, !4157}
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4147, file: !4148, line: 80, baseType: !4151, size: 32)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4148, line: 45, size: 32, elements: !4152)
!4152 = !{!4153, !4154, !4155, !4156}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4151, file: !4148, line: 47, baseType: !164, size: 8)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4151, file: !4148, line: 50, baseType: !164, size: 8, offset: 8)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4151, file: !4148, line: 53, baseType: !164, size: 8, offset: 16)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4151, file: !4148, line: 56, baseType: !164, size: 8, offset: 24)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4147, file: !4148, line: 82, baseType: !104, size: 32)
!4158 = !DILocalVariable(name: "v", scope: !4159, file: !541, line: 567, type: !4163)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !541, line: 562, column: 14)
!4160 = distinct !DILexicalBlock(scope: !4161, file: !541, line: 481, column: 18)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !541, line: 466, column: 3)
!4162 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 343, column: 15)
!4163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4112, file: !541, line: 567, size: 64, elements: !4164)
!4164 = !{!4165, !4166}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4163, file: !541, line: 567, baseType: !534, size: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4163, file: !541, line: 567, baseType: !532, size: 64)
!4167 = !DILocalVariable(name: "is_ro", scope: !4168, file: !541, line: 620, type: !422)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !541, line: 613, column: 19)
!4169 = distinct !DILexicalBlock(scope: !4162, file: !541, line: 613, column: 7)
!4170 = !DILocalVariable(name: "do_ro", scope: !4168, file: !541, line: 621, type: !422)
!4171 = !DILocalVariable(name: "s_ptr_idx", scope: !4172, file: !541, line: 626, type: !113)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !541, line: 625, column: 11)
!4173 = distinct !DILexicalBlock(scope: !4168, file: !541, line: 623, column: 8)
!4174 = !DILocalVariable(name: "v", scope: !4175, file: !541, line: 684, type: !108)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !541, line: 683, column: 35)
!4176 = distinct !DILexicalBlock(scope: !4169, file: !541, line: 683, column: 14)
!4177 = !DILocalVariable(name: "v", scope: !4178, file: !541, line: 691, type: !144)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !541, line: 690, column: 36)
!4179 = distinct !DILexicalBlock(scope: !4176, file: !541, line: 690, column: 14)
!4180 = !DILocalVariable(name: "v", scope: !4181, file: !541, line: 698, type: !112)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !541, line: 697, column: 41)
!4182 = distinct !DILexicalBlock(scope: !4179, file: !541, line: 697, column: 14)
!4183 = !DILocalVariable(name: "pos", scope: !4184, file: !541, line: 762, type: !164)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !541, line: 757, column: 31)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !541, line: 757, column: 3)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !541, line: 757, column: 3)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !541, line: 756, column: 16)
!4188 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 756, column: 6)
!4189 = !DILabel(scope: !4168, name: "process_string", file: !541, line: 615)
!4190 = !DILocation(line: 0, scope: !4112)
!4191 = !DILocation(line: 251, column: 2, scope: !4112)
!4192 = !DILocation(line: 251, column: 10, scope: !4112)
!4193 = !DILocation(line: 252, column: 2, scope: !4112)
!4194 = !DILocation(line: 252, column: 10, scope: !4112)
!4195 = !DILocation(line: 263, column: 29, scope: !4112)
!4196 = !DILocation(line: 263, column: 21, scope: !4112)
!4197 = !DILocation(line: 268, column: 21, scope: !4112)
!4198 = !DILocation(line: 268, column: 19, scope: !4112)
!4199 = !DILocation(line: 273, column: 6, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 273, column: 6)
!4201 = !DILocation(line: 273, column: 26, scope: !4200)
!4202 = !DILocation(line: 273, column: 6, scope: !4112)
!4203 = !DILocation(line: 297, column: 6, scope: !4112)
!4204 = !DILocation(line: 305, column: 11, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 305, column: 6)
!4206 = !DILocation(line: 305, column: 6, scope: !4112)
!4207 = !DILocation(line: 327, column: 19, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 327, column: 6)
!4209 = !DILocation(line: 327, column: 22, scope: !4208)
!4210 = !DILocation(line: 327, column: 33, scope: !4208)
!4211 = !DILocation(line: 327, column: 50, scope: !4208)
!4212 = !DILocation(line: 327, column: 6, scope: !4112)
!4213 = !DILocation(line: 338, column: 9, scope: !4112)
!4214 = !DILocation(line: 341, column: 2, scope: !4112)
!4215 = !DILocation(line: 472, column: 8, scope: !4161)
!4216 = !DILocation(line: 473, column: 14, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !541, line: 473, column: 9)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !541, line: 472, column: 18)
!4219 = distinct !DILexicalBlock(scope: !4161, file: !541, line: 472, column: 8)
!4220 = !DILocation(line: 473, column: 9, scope: !4218)
!4221 = !DILocation(line: 479, column: 5, scope: !4218)
!4222 = !DILocation(line: 468, column: 9, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4161, file: !541, line: 468, column: 8)
!4224 = !DILocation(line: 468, column: 8, scope: !4223)
!4225 = !DILocation(line: 468, column: 15, scope: !4223)
!4226 = !DILocation(line: 468, column: 8, scope: !4161)
!4227 = distinct !{!4227, !4228, !4229}
!4228 = !DILocation(line: 343, column: 2, scope: !4112)
!4229 = !DILocation(line: 712, column: 2, scope: !4112)
!4230 = !DILocation(line: 481, column: 4, scope: !4161)
!4231 = !DILocation(line: 484, column: 12, scope: !4160)
!4232 = !DILocation(line: 485, column: 5, scope: !4160)
!4233 = !DILocation(line: 505, column: 5, scope: !4160)
!4234 = !DILocation(line: 518, column: 5, scope: !4160)
!4235 = !DILocation(line: 523, column: 5, scope: !4160)
!4236 = !DILocation(line: 532, column: 9, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4160, file: !541, line: 532, column: 9)
!4238 = !DILocation(line: 532, column: 17, scope: !4237)
!4239 = !DILocation(line: 532, column: 9, scope: !4160)
!4240 = !DILocation(line: 533, column: 10, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !541, line: 533, column: 10)
!4242 = distinct !DILexicalBlock(scope: !4237, file: !541, line: 532, column: 25)
!4243 = !DILocation(line: 533, column: 18, scope: !4241)
!4244 = !DILocation(line: 0, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4159, file: !541, line: 569, column: 9)
!4246 = !DILocation(line: 0, scope: !4159)
!4247 = !DILocation(line: 579, column: 20, scope: !4159)
!4248 = !DILocation(line: 579, column: 11, scope: !4159)
!4249 = !DILocation(line: 580, column: 9, scope: !4159)
!4250 = !DILocation(line: 582, column: 21, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !541, line: 582, column: 10)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !541, line: 580, column: 23)
!4253 = distinct !DILexicalBlock(scope: !4159, file: !541, line: 580, column: 9)
!4254 = !DILocation(line: 582, column: 28, scope: !4251)
!4255 = !DILocation(line: 582, column: 10, scope: !4252)
!4256 = !DILocation(line: 0, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !541, line: 587, column: 17)
!4258 = distinct !DILexicalBlock(scope: !4252, file: !541, line: 585, column: 10)
!4259 = !DILocation(line: 593, column: 9, scope: !4159)
!4260 = !DILocation(line: 600, column: 5, scope: !4160)
!4261 = !DILocation(line: 605, column: 18, scope: !4162)
!4262 = !DILocation(line: 605, column: 9, scope: !4162)
!4263 = !DILocation(line: 608, column: 20, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4162, file: !541, line: 608, column: 7)
!4265 = !DILocation(line: 608, column: 23, scope: !4264)
!4266 = !DILocation(line: 608, column: 34, scope: !4264)
!4267 = !DILocation(line: 608, column: 41, scope: !4264)
!4268 = !DILocation(line: 608, column: 7, scope: !4162)
!4269 = !DILocation(line: 613, column: 7, scope: !4162)
!4270 = !DILocation(line: 614, column: 8, scope: !4168)
!4271 = !DILocation(line: 614, column: 4, scope: !4168)
!4272 = !DILocation(line: 255, column: 15, scope: !4112)
!4273 = !DILocation(line: 256, column: 6, scope: !4112)
!4274 = !DILocation(line: 254, column: 15, scope: !4112)
!4275 = !DILocation(line: 253, column: 15, scope: !4112)
!4276 = !DILocation(line: 320, column: 7, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4205, file: !541, line: 305, column: 20)
!4278 = !DILocation(line: 615, column: 1, scope: !4168)
!4279 = !DILocation(line: 616, column: 8, scope: !4168)
!4280 = !DILocation(line: 617, column: 5, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !541, line: 616, column: 22)
!4282 = distinct !DILexicalBlock(scope: !4168, file: !541, line: 616, column: 8)
!4283 = !DILocation(line: 617, column: 25, scope: !4281)
!4284 = !DILocation(line: 618, column: 4, scope: !4281)
!4285 = !DILocation(line: 620, column: 26, scope: !4168)
!4286 = !DILocation(line: 620, column: 29, scope: !4168)
!4287 = !DILocation(line: 620, column: 17, scope: !4168)
!4288 = !DILocation(line: 620, column: 43, scope: !4168)
!4289 = !DILocation(line: 0, scope: !4168)
!4290 = !DILocation(line: 623, column: 14, scope: !4173)
!4291 = !DILocation(line: 626, column: 26, scope: !4172)
!4292 = !DILocation(line: 626, column: 37, scope: !4172)
!4293 = !DILocation(line: 0, scope: !4172)
!4294 = !DILocation(line: 634, column: 15, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4172, file: !541, line: 634, column: 9)
!4296 = !DILocation(line: 644, column: 9, scope: !4172)
!4297 = !DILocation(line: 649, column: 27, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !541, line: 644, column: 23)
!4299 = distinct !DILexicalBlock(scope: !4172, file: !541, line: 644, column: 9)
!4300 = !DILocation(line: 649, column: 6, scope: !4298)
!4301 = !DILocation(line: 649, column: 25, scope: !4298)
!4302 = !DILocation(line: 650, column: 27, scope: !4298)
!4303 = !DILocation(line: 650, column: 6, scope: !4298)
!4304 = !DILocation(line: 650, column: 25, scope: !4298)
!4305 = !DILocation(line: 651, column: 10, scope: !4298)
!4306 = !DILocation(line: 653, column: 26, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !541, line: 651, column: 17)
!4308 = distinct !DILexicalBlock(scope: !4298, file: !541, line: 651, column: 10)
!4309 = !DILocation(line: 654, column: 15, scope: !4307)
!4310 = !DILocation(line: 655, column: 6, scope: !4307)
!4311 = !DILocation(line: 656, column: 15, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4308, file: !541, line: 655, column: 13)
!4313 = !DILocation(line: 658, column: 16, scope: !4299)
!4314 = !DILocation(line: 663, column: 10, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !541, line: 658, column: 23)
!4316 = distinct !DILexicalBlock(scope: !4299, file: !541, line: 658, column: 16)
!4317 = !DILocation(line: 664, column: 5, scope: !4315)
!4318 = !DILocation(line: 664, column: 16, scope: !4316)
!4319 = !DILocation(line: 669, column: 10, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !541, line: 664, column: 28)
!4321 = distinct !DILexicalBlock(scope: !4316, file: !541, line: 664, column: 16)
!4322 = !DILocation(line: 670, column: 5, scope: !4320)
!4323 = !DILocation(line: 675, column: 13, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4321, file: !541, line: 670, column: 12)
!4325 = !DILocation(line: 675, column: 27, scope: !4324)
!4326 = !DILocation(line: 675, column: 10, scope: !4324)
!4327 = !DILocation(line: 678, column: 10, scope: !4172)
!4328 = !DILocation(line: 680, column: 8, scope: !4168)
!4329 = !DILocation(line: 683, column: 14, scope: !4169)
!4330 = !DILocation(line: 684, column: 12, scope: !4175)
!4331 = !DILocation(line: 0, scope: !4175)
!4332 = !DILocation(line: 686, column: 8, scope: !4175)
!4333 = !DILocation(line: 687, column: 5, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !541, line: 686, column: 22)
!4335 = distinct !DILexicalBlock(scope: !4175, file: !541, line: 686, column: 8)
!4336 = !DILocation(line: 687, column: 17, scope: !4334)
!4337 = !DILocation(line: 688, column: 4, scope: !4334)
!4338 = !DILocation(line: 698, column: 18, scope: !4181)
!4339 = !DILocation(line: 0, scope: !4181)
!4340 = !DILocation(line: 700, column: 8, scope: !4181)
!4341 = !DILocation(line: 704, column: 6, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !541, line: 703, column: 12)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !541, line: 701, column: 9)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !541, line: 700, column: 22)
!4345 = distinct !DILexicalBlock(scope: !4181, file: !541, line: 700, column: 8)
!4346 = !DILocation(line: 704, column: 24, scope: !4342)
!4347 = !DILocation(line: 706, column: 4, scope: !4344)
!4348 = !DILocation(line: 0, scope: !4176)
!4349 = !DILocation(line: 0, scope: !4162)
!4350 = !DILocation(line: 720, column: 6, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 720, column: 6)
!4352 = !DILocation(line: 720, column: 17, scope: !4351)
!4353 = !DILocation(line: 720, column: 31, scope: !4351)
!4354 = !DILocation(line: 720, column: 6, scope: !4112)
!4355 = !DILocation(line: 729, column: 6, scope: !4112)
!4356 = !DILocation(line: 730, column: 21, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !541, line: 729, column: 20)
!4358 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 729, column: 6)
!4359 = !DILocation(line: 730, column: 27, scope: !4357)
!4360 = !DILocation(line: 730, column: 3, scope: !4357)
!4361 = !DILocation(line: 737, column: 22, scope: !4112)
!4362 = !DILocation(line: 737, column: 20, scope: !4112)
!4363 = !DILocation(line: 0, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 739, column: 6)
!4365 = !DILocation(line: 745, column: 17, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4364, file: !541, line: 743, column: 9)
!4367 = !DILocation(line: 745, column: 25, scope: !4366)
!4368 = !DILocation(line: 746, column: 17, scope: !4366)
!4369 = !DILocation(line: 746, column: 28, scope: !4366)
!4370 = !DILocation(line: 749, column: 29, scope: !4112)
!4371 = !DILocation(line: 749, column: 16, scope: !4112)
!4372 = !DILocation(line: 749, column: 27, scope: !4112)
!4373 = !DILocation(line: 756, column: 6, scope: !4188)
!4374 = !DILocation(line: 756, column: 6, scope: !4112)
!4375 = !DILocation(line: 757, column: 3, scope: !4186)
!4376 = !DILocation(line: 758, column: 10, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4184, file: !541, line: 758, column: 8)
!4378 = !DILocation(line: 758, column: 25, scope: !4377)
!4379 = !DILocation(line: 758, column: 8, scope: !4184)
!4380 = !DILocation(line: 0, scope: !4184)
!4381 = !DILocation(line: 765, column: 8, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4184, file: !541, line: 765, column: 8)
!4383 = !DILocation(line: 765, column: 19, scope: !4382)
!4384 = !DILocation(line: 765, column: 23, scope: !4382)
!4385 = !DILocation(line: 765, column: 8, scope: !4184)
!4386 = !DILocation(line: 762, column: 33, scope: !4184)
!4387 = !DILocation(line: 769, column: 8, scope: !4184)
!4388 = !DILocation(line: 769, column: 11, scope: !4184)
!4389 = !DILocation(line: 757, column: 27, scope: !4185)
!4390 = !DILocation(line: 757, column: 17, scope: !4185)
!4391 = distinct !{!4391, !4375, !4392}
!4392 = !DILocation(line: 770, column: 3, scope: !4186)
!4393 = !DILocation(line: 774, column: 16, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4395, file: !541, line: 774, column: 2)
!4395 = distinct !DILexicalBlock(scope: !4112, file: !541, line: 774, column: 2)
!4396 = !DILocation(line: 774, column: 2, scope: !4395)
!4397 = !DILocation(line: 776, column: 16, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !541, line: 776, column: 7)
!4399 = distinct !DILexicalBlock(scope: !4394, file: !541, line: 774, column: 30)
!4400 = !DILocation(line: 776, column: 19, scope: !4398)
!4401 = !DILocation(line: 776, column: 34, scope: !4398)
!4402 = !DILocation(line: 776, column: 7, scope: !4399)
!4403 = !DILocation(line: 780, column: 7, scope: !4399)
!4404 = !DILocation(line: 782, column: 13, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !541, line: 780, column: 19)
!4406 = distinct !DILexicalBlock(scope: !4399, file: !541, line: 780, column: 7)
!4407 = !DILocation(line: 782, column: 8, scope: !4405)
!4408 = !DILocation(line: 782, column: 11, scope: !4405)
!4409 = !DILocation(line: 783, column: 3, scope: !4405)
!4410 = !DILocation(line: 785, column: 26, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4406, file: !541, line: 783, column: 10)
!4412 = !DILocation(line: 785, column: 41, scope: !4411)
!4413 = !DILocation(line: 785, column: 24, scope: !4411)
!4414 = !DILocation(line: 785, column: 8, scope: !4411)
!4415 = !DILocation(line: 787, column: 52, scope: !4411)
!4416 = !DILocation(line: 789, column: 11, scope: !4411)
!4417 = !DILocation(line: 789, column: 21, scope: !4411)
!4418 = !DILocation(line: 0, scope: !4406)
!4419 = !DILocation(line: 793, column: 7, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4399, file: !541, line: 793, column: 7)
!4421 = !DILocation(line: 793, column: 18, scope: !4420)
!4422 = !DILocation(line: 793, column: 22, scope: !4420)
!4423 = !DILocation(line: 793, column: 29, scope: !4420)
!4424 = !DILocation(line: 793, column: 7, scope: !4399)
!4425 = !DILocation(line: 797, column: 12, scope: !4399)
!4426 = !DILocation(line: 797, column: 7, scope: !4399)
!4427 = !DILocation(line: 797, column: 10, scope: !4399)
!4428 = !DILocation(line: 799, column: 3, scope: !4399)
!4429 = !DILocation(line: 800, column: 7, scope: !4399)
!4430 = !DILocation(line: 801, column: 2, scope: !4399)
!4431 = !DILocation(line: 338, column: 4, scope: !4112)
!4432 = !DILocation(line: 774, column: 26, scope: !4394)
!4433 = distinct !{!4433, !4396, !4434}
!4434 = !DILocation(line: 801, column: 2, scope: !4395)
!4435 = !DILocation(line: 808, column: 9, scope: !4112)
!4436 = !DILocation(line: 808, column: 2, scope: !4112)
!4437 = !DILocation(line: 813, column: 1, scope: !4112)
!4438 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !541, file: !541, line: 33, type: !4439, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4441)
!4439 = !DISubroutineType(types: !4440)
!4440 = !{!422, !105}
!4441 = !{!4442}
!4442 = !DILocalVariable(name: "addr", arg: 1, scope: !4438, file: !541, line: 33, type: !105)
!4443 = !DILocation(line: 0, scope: !4438)
!4444 = !DILocation(line: 41, column: 9, scope: !4438)
!4445 = !DILocation(line: 41, column: 2, scope: !4438)
!4446 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4447, file: !4447, line: 24, type: !4448, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4450)
!4447 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!422, !13}
!4450 = !{!4451}
!4451 = !DILocalVariable(name: "addr", arg: 1, scope: !4446, file: !4447, line: 24, type: !13)
!4452 = !DILocation(line: 0, scope: !4446)
!4453 = !DILocation(line: 49, column: 30, scope: !4446)
!4454 = !DILocation(line: 49, column: 57, scope: !4446)
!4455 = !DILocation(line: 49, column: 2, scope: !4446)
!4456 = distinct !DISubprogram(name: "cbprintf_package", scope: !541, file: !541, line: 815, type: !4457, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!108, !104, !439, !113, !105, null}
!4459 = !{!4460, !4461, !4462, !4463, !4464, !4465}
!4460 = !DILocalVariable(name: "packaged", arg: 1, scope: !4456, file: !541, line: 815, type: !104)
!4461 = !DILocalVariable(name: "len", arg: 2, scope: !4456, file: !541, line: 815, type: !439)
!4462 = !DILocalVariable(name: "flags", arg: 3, scope: !4456, file: !541, line: 815, type: !113)
!4463 = !DILocalVariable(name: "format", arg: 4, scope: !4456, file: !541, line: 816, type: !105)
!4464 = !DILocalVariable(name: "ap", scope: !4456, file: !541, line: 818, type: !4115)
!4465 = !DILocalVariable(name: "ret", scope: !4456, file: !541, line: 819, type: !108)
!4466 = !DILocation(line: 0, scope: !4456)
!4467 = !DILocation(line: 818, column: 2, scope: !4456)
!4468 = !DILocation(line: 818, column: 10, scope: !4456)
!4469 = !DILocation(line: 821, column: 2, scope: !4456)
!4470 = !DILocation(line: 822, column: 8, scope: !4456)
!4471 = !DILocation(line: 823, column: 2, scope: !4456)
!4472 = !DILocation(line: 825, column: 1, scope: !4456)
!4473 = !DILocation(line: 824, column: 2, scope: !4456)
!4474 = distinct !DISubprogram(name: "cbpprintf_external", scope: !541, file: !541, line: 827, type: !4475, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4485)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{!108, !4477, !4481, !104, !104}
!4477 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4148, line: 297, baseType: !4478)
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 32)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!108, null}
!4481 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4148, line: 328, baseType: !4482)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 32)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!108, !4477, !104, !105, !4115}
!4485 = !{!4486, !4487, !4488, !4489, !4490, !4491, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504}
!4486 = !DILocalVariable(name: "out", arg: 1, scope: !4474, file: !541, line: 827, type: !4477)
!4487 = !DILocalVariable(name: "formatter", arg: 2, scope: !4474, file: !541, line: 828, type: !4481)
!4488 = !DILocalVariable(name: "ctx", arg: 3, scope: !4474, file: !541, line: 829, type: !104)
!4489 = !DILocalVariable(name: "packaged", arg: 4, scope: !4474, file: !541, line: 829, type: !104)
!4490 = !DILocalVariable(name: "buf", scope: !4474, file: !541, line: 831, type: !209)
!4491 = !DILocalVariable(name: "hdr", scope: !4474, file: !541, line: 832, type: !4492)
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 32)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4148, line: 96, size: 64, elements: !4494)
!4494 = !{!4495, !4496}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4493, file: !4148, line: 98, baseType: !4147, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4493, file: !4148, line: 101, baseType: !443, size: 32, offset: 32)
!4497 = !DILocalVariable(name: "s", scope: !4474, file: !541, line: 833, type: !443)
!4498 = !DILocalVariable(name: "ps", scope: !4474, file: !541, line: 833, type: !539)
!4499 = !DILocalVariable(name: "i", scope: !4474, file: !541, line: 834, type: !32)
!4500 = !DILocalVariable(name: "args_size", scope: !4474, file: !541, line: 834, type: !32)
!4501 = !DILocalVariable(name: "s_nbr", scope: !4474, file: !541, line: 834, type: !32)
!4502 = !DILocalVariable(name: "ros_nbr", scope: !4474, file: !541, line: 834, type: !32)
!4503 = !DILocalVariable(name: "rws_nbr", scope: !4474, file: !541, line: 834, type: !32)
!4504 = !DILocalVariable(name: "s_idx", scope: !4474, file: !541, line: 834, type: !32)
!4505 = !DILocation(line: 0, scope: !4474)
!4506 = !DILocation(line: 836, column: 10, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4474, file: !541, line: 836, column: 6)
!4508 = !DILocation(line: 836, column: 6, scope: !4474)
!4509 = !DILocation(line: 842, column: 28, scope: !4474)
!4510 = !DILocation(line: 842, column: 14, scope: !4474)
!4511 = !DILocation(line: 852, column: 16, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !541, line: 852, column: 2)
!4513 = distinct !DILexicalBlock(scope: !4474, file: !541, line: 852, column: 2)
!4514 = !DILocation(line: 852, column: 2, scope: !4513)
!4515 = !DILocation(line: 841, column: 28, scope: !4474)
!4516 = !DILocation(line: 841, column: 14, scope: !4474)
!4517 = !DILocation(line: 841, column: 32, scope: !4474)
!4518 = !DILocation(line: 847, column: 19, scope: !4474)
!4519 = !DILocation(line: 843, column: 28, scope: !4474)
!4520 = !DILocation(line: 843, column: 14, scope: !4474)
!4521 = !DILocation(line: 847, column: 31, scope: !4474)
!4522 = !DILocation(line: 844, column: 28, scope: !4474)
!4523 = !DILocation(line: 844, column: 14, scope: !4474)
!4524 = !DILocation(line: 847, column: 45, scope: !4474)
!4525 = !DILocation(line: 847, column: 41, scope: !4474)
!4526 = !DILocation(line: 854, column: 24, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4512, file: !541, line: 852, column: 30)
!4528 = !DILocation(line: 854, column: 11, scope: !4527)
!4529 = !DILocation(line: 855, column: 30, scope: !4527)
!4530 = !DILocation(line: 855, column: 22, scope: !4527)
!4531 = !DILocation(line: 855, column: 8, scope: !4527)
!4532 = !DILocation(line: 857, column: 7, scope: !4527)
!4533 = !DILocation(line: 859, column: 8, scope: !4527)
!4534 = !DILocation(line: 859, column: 18, scope: !4527)
!4535 = !DILocation(line: 859, column: 5, scope: !4527)
!4536 = !DILocation(line: 852, column: 26, scope: !4512)
!4537 = distinct !{!4537, !4514, !4538}
!4538 = !DILocation(line: 860, column: 2, scope: !4513)
!4539 = !DILocation(line: 863, column: 6, scope: !4474)
!4540 = !DILocation(line: 866, column: 56, scope: !4474)
!4541 = !DILocation(line: 866, column: 9, scope: !4474)
!4542 = !DILocation(line: 866, column: 2, scope: !4474)
!4543 = !DILocation(line: 867, column: 1, scope: !4474)
!4544 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !541, file: !541, line: 179, type: !4545, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4547)
!4545 = !DISubroutineType(types: !4546)
!4546 = !{!108, !4477, !4481, !104, !105, !104}
!4547 = !{!4548, !4549, !4550, !4551, !4552, !4553}
!4548 = !DILocalVariable(name: "out", arg: 1, scope: !4544, file: !541, line: 179, type: !4477)
!4549 = !DILocalVariable(name: "formatter", arg: 2, scope: !4544, file: !541, line: 180, type: !4481)
!4550 = !DILocalVariable(name: "ctx", arg: 3, scope: !4544, file: !541, line: 181, type: !104)
!4551 = !DILocalVariable(name: "fmt", arg: 4, scope: !4544, file: !541, line: 182, type: !105)
!4552 = !DILocalVariable(name: "buf", arg: 5, scope: !4544, file: !541, line: 182, type: !104)
!4553 = !DILocalVariable(name: "u", scope: !4544, file: !541, line: 187, type: !4554)
!4554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4544, file: !541, line: 184, size: 32, elements: !4555)
!4555 = !{!4556, !4557}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4554, file: !541, line: 185, baseType: !4115, size: 32)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4554, file: !541, line: 186, baseType: !104, size: 32)
!4558 = !DILocation(line: 0, scope: !4544)
!4559 = !DILocation(line: 191, column: 9, scope: !4544)
!4560 = !DILocation(line: 191, column: 2, scope: !4544)
!4561 = distinct !DISubprogram(name: "is_ptr", scope: !541, file: !541, line: 881, type: !4562, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4564)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{!422, !105, !108}
!4564 = !{!4565, !4566, !4567, !4568, !4569}
!4565 = !DILocalVariable(name: "fmt", arg: 1, scope: !4561, file: !541, line: 881, type: !105)
!4566 = !DILocalVariable(name: "n", arg: 2, scope: !4561, file: !541, line: 881, type: !108)
!4567 = !DILocalVariable(name: "c", scope: !4561, file: !541, line: 883, type: !107)
!4568 = !DILocalVariable(name: "mod", scope: !4561, file: !541, line: 884, type: !422)
!4569 = !DILocalVariable(name: "cnt", scope: !4561, file: !541, line: 885, type: !108)
!4570 = !DILocation(line: 0, scope: !4561)
!4571 = !DILocation(line: 887, column: 14, scope: !4561)
!4572 = !DILocation(line: 887, column: 22, scope: !4561)
!4573 = !DILocation(line: 887, column: 2, scope: !4561)
!4574 = !DILocation(line: 887, column: 18, scope: !4561)
!4575 = !DILocation(line: 888, column: 7, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4561, file: !541, line: 887, column: 31)
!4577 = !DILocation(line: 889, column: 12, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !541, line: 889, column: 8)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !541, line: 888, column: 12)
!4580 = distinct !DILexicalBlock(scope: !4576, file: !541, line: 888, column: 7)
!4581 = !DILocation(line: 889, column: 8, scope: !4579)
!4582 = !DILocation(line: 890, column: 11, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !541, line: 890, column: 9)
!4584 = distinct !DILexicalBlock(scope: !4578, file: !541, line: 889, column: 18)
!4585 = !DILocation(line: 890, column: 9, scope: !4584)
!4586 = !DILocation(line: 892, column: 16, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4583, file: !541, line: 892, column: 16)
!4588 = !DILocation(line: 892, column: 16, scope: !4583)
!4589 = !DILocation(line: 895, column: 15, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4578, file: !541, line: 895, column: 15)
!4591 = !DILocation(line: 895, column: 15, scope: !4578)
!4592 = !DILocation(line: 900, column: 9, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4576, file: !541, line: 900, column: 7)
!4594 = !DILocation(line: 900, column: 7, scope: !4576)
!4595 = distinct !{!4595, !4573, !4596}
!4596 = !DILocation(line: 903, column: 2, scope: !4561)
!4597 = !DILocation(line: 906, column: 1, scope: !4561)
!4598 = distinct !DISubprogram(name: "is_fmt_spec", scope: !541, file: !541, line: 873, type: !4599, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4601)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!422, !107}
!4601 = !{!4602}
!4602 = !DILocalVariable(name: "c", arg: 1, scope: !4598, file: !541, line: 873, type: !107)
!4603 = !DILocation(line: 0, scope: !4598)
!4604 = !DILocation(line: 875, column: 19, scope: !4598)
!4605 = !DILocation(line: 875, column: 2, scope: !4598)
!4606 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !541, file: !541, line: 908, type: !4607, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4613)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!108, !104, !439, !4609, !104, !113, !3119, !439}
!4609 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4148, line: 308, baseType: !4610)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 32)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!108, !13, !439, !104}
!4613 = !{!4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4631, !4632, !4633, !4634, !4635, !4641, !4644, !4645, !4646, !4648, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4664, !4667, !4668, !4669, !4670, !4671, !4672, !4674, !4677, !4678, !4679}
!4614 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4606, file: !541, line: 908, type: !104)
!4615 = !DILocalVariable(name: "in_len", arg: 2, scope: !4606, file: !541, line: 909, type: !439)
!4616 = !DILocalVariable(name: "cb", arg: 3, scope: !4606, file: !541, line: 910, type: !4609)
!4617 = !DILocalVariable(name: "ctx", arg: 4, scope: !4606, file: !541, line: 911, type: !104)
!4618 = !DILocalVariable(name: "flags", arg: 5, scope: !4606, file: !541, line: 912, type: !113)
!4619 = !DILocalVariable(name: "strl", arg: 6, scope: !4606, file: !541, line: 913, type: !3119)
!4620 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4606, file: !541, line: 914, type: !439)
!4621 = !DILocalVariable(name: "buf", scope: !4606, file: !541, line: 918, type: !209)
!4622 = !DILocalVariable(name: "buf32", scope: !4606, file: !541, line: 919, type: !1289)
!4623 = !DILocalVariable(name: "args_size", scope: !4606, file: !541, line: 920, type: !32)
!4624 = !DILocalVariable(name: "ros_nbr", scope: !4606, file: !541, line: 920, type: !32)
!4625 = !DILocalVariable(name: "rws_nbr", scope: !4606, file: !541, line: 920, type: !32)
!4626 = !DILocalVariable(name: "fmt_present", scope: !4606, file: !541, line: 921, type: !422)
!4627 = !DILocalVariable(name: "rw_cpy", scope: !4606, file: !541, line: 922, type: !422)
!4628 = !DILocalVariable(name: "ro_cpy", scope: !4606, file: !541, line: 923, type: !422)
!4629 = !DILocalVariable(name: "in_desc", scope: !4606, file: !541, line: 924, type: !4630)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 32)
!4631 = !DILocalVariable(name: "out_len", scope: !4606, file: !541, line: 960, type: !108)
!4632 = !DILocalVariable(name: "fmt", scope: !4606, file: !541, line: 965, type: !105)
!4633 = !DILocalVariable(name: "str_pos", scope: !4606, file: !541, line: 966, type: !209)
!4634 = !DILocalVariable(name: "strl_cnt", scope: !4606, file: !541, line: 967, type: !439)
!4635 = !DILocalVariable(name: "i", scope: !4636, file: !541, line: 973, type: !108)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !541, line: 973, column: 4)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !541, line: 972, column: 15)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !541, line: 972, column: 7)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !541, line: 970, column: 18)
!4640 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 970, column: 6)
!4641 = !DILocalVariable(name: "str", scope: !4642, file: !541, line: 974, type: !105)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !541, line: 973, column: 38)
!4643 = distinct !DILexicalBlock(scope: !4636, file: !541, line: 973, column: 4)
!4644 = !DILocalVariable(name: "len", scope: !4642, file: !541, line: 975, type: !108)
!4645 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4639, file: !541, line: 990, type: !422)
!4646 = !DILocalVariable(name: "i", scope: !4647, file: !541, line: 995, type: !108)
!4647 = distinct !DILexicalBlock(scope: !4639, file: !541, line: 995, column: 3)
!4648 = !DILocalVariable(name: "arg_idx", scope: !4649, file: !541, line: 996, type: !164)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !541, line: 995, column: 37)
!4650 = distinct !DILexicalBlock(scope: !4647, file: !541, line: 995, column: 3)
!4651 = !DILocalVariable(name: "arg_pos", scope: !4649, file: !541, line: 997, type: !164)
!4652 = !DILocalVariable(name: "str", scope: !4649, file: !541, line: 998, type: !105)
!4653 = !DILocalVariable(name: "is_ro", scope: !4649, file: !541, line: 999, type: !422)
!4654 = !DILocalVariable(name: "len", scope: !4649, file: !541, line: 1000, type: !108)
!4655 = !DILocalVariable(name: "out_desc", scope: !4606, file: !541, line: 1038, type: !4151)
!4656 = !DILocalVariable(name: "cpy_str_pos", scope: !4606, file: !541, line: 1040, type: !4133)
!4657 = !DILocalVariable(name: "keep_str_pos", scope: !4606, file: !541, line: 1042, type: !4133)
!4658 = !DILocalVariable(name: "scpy_cnt", scope: !4606, file: !541, line: 1043, type: !164)
!4659 = !DILocalVariable(name: "keep_cnt", scope: !4606, file: !541, line: 1044, type: !164)
!4660 = !DILocalVariable(name: "dst", scope: !4606, file: !541, line: 1045, type: !209)
!4661 = !DILocalVariable(name: "rv", scope: !4606, file: !541, line: 1046, type: !108)
!4662 = !DILocalVariable(name: "i", scope: !4663, file: !541, line: 1074, type: !108)
!4663 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 1074, column: 2)
!4664 = !DILocalVariable(name: "arg_idx", scope: !4665, file: !541, line: 1075, type: !164)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !541, line: 1074, column: 36)
!4666 = distinct !DILexicalBlock(scope: !4663, file: !541, line: 1074, column: 2)
!4667 = !DILocalVariable(name: "arg_pos", scope: !4665, file: !541, line: 1076, type: !164)
!4668 = !DILocalVariable(name: "str", scope: !4665, file: !541, line: 1077, type: !105)
!4669 = !DILocalVariable(name: "is_ro", scope: !4665, file: !541, line: 1078, type: !422)
!4670 = !DILocalVariable(name: "in_desc_backup", scope: !4606, file: !541, line: 1114, type: !4151)
!4671 = !DILocalVariable(name: "strs_len", scope: !4606, file: !541, line: 1134, type: !439)
!4672 = !DILocalVariable(name: "i", scope: !4673, file: !541, line: 1143, type: !108)
!4673 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 1143, column: 2)
!4674 = !DILocalVariable(name: "loc", scope: !4675, file: !541, line: 1144, type: !164)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !541, line: 1143, column: 37)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !541, line: 1143, column: 2)
!4677 = !DILocalVariable(name: "str", scope: !4675, file: !541, line: 1145, type: !105)
!4678 = !DILocalVariable(name: "str_len", scope: !4675, file: !541, line: 1146, type: !168)
!4679 = !DILabel(scope: !4680, name: "calculate_string_length", file: !541, line: 1021)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !541, line: 1020, column: 56)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !541, line: 1020, column: 15)
!4682 = distinct !DILexicalBlock(scope: !4649, file: !541, line: 1014, column: 8)
!4683 = !DILocation(line: 0, scope: !4606)
!4684 = !DILocation(line: 919, column: 20, scope: !4606)
!4685 = !DILocation(line: 921, column: 27, scope: !4606)
!4686 = !DILocation(line: 921, column: 21, scope: !4606)
!4687 = !DILocation(line: 926, column: 18, scope: !4606)
!4688 = !DILocation(line: 926, column: 11, scope: !4606)
!4689 = !DILocation(line: 926, column: 34, scope: !4606)
!4690 = !DILocation(line: 931, column: 21, scope: !4606)
!4691 = !DILocation(line: 931, column: 12, scope: !4606)
!4692 = !DILocation(line: 932, column: 11, scope: !4606)
!4693 = !DILocation(line: 932, column: 19, scope: !4606)
!4694 = !DILocation(line: 938, column: 21, scope: !4606)
!4695 = !DILocation(line: 938, column: 12, scope: !4606)
!4696 = !DILocation(line: 939, column: 19, scope: !4606)
!4697 = !DILocation(line: 939, column: 23, scope: !4606)
!4698 = !DILocation(line: 946, column: 14, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 946, column: 6)
!4700 = !DILocation(line: 947, column: 7, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !541, line: 947, column: 7)
!4702 = distinct !DILexicalBlock(scope: !4699, file: !541, line: 946, column: 26)
!4703 = !DILocation(line: 947, column: 7, scope: !4702)
!4704 = !DILocation(line: 948, column: 4, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4701, file: !541, line: 947, column: 11)
!4706 = !DILocation(line: 949, column: 3, scope: !4705)
!4707 = !DILocation(line: 958, column: 23, scope: !4606)
!4708 = !DILocation(line: 958, column: 14, scope: !4606)
!4709 = !DILocation(line: 958, column: 27, scope: !4606)
!4710 = !DILocation(line: 965, column: 41, scope: !4606)
!4711 = !DILocation(line: 965, column: 20, scope: !4606)
!4712 = !DILocation(line: 966, column: 22, scope: !4606)
!4713 = !DILocation(line: 970, column: 9, scope: !4640)
!4714 = !DILocation(line: 970, column: 6, scope: !4606)
!4715 = !DILocation(line: 972, column: 7, scope: !4639)
!4716 = !DILocation(line: 0, scope: !4636)
!4717 = !DILocation(line: 973, column: 4, scope: !4636)
!4718 = !DILocation(line: 974, column: 46, scope: !4642)
!4719 = !DILocation(line: 974, column: 40, scope: !4642)
!4720 = !DILocation(line: 974, column: 23, scope: !4642)
!4721 = !DILocation(line: 0, scope: !4642)
!4722 = !DILocation(line: 975, column: 15, scope: !4642)
!4723 = !DILocation(line: 978, column: 14, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4642, file: !541, line: 978, column: 9)
!4725 = !DILocation(line: 979, column: 25, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4724, file: !541, line: 978, column: 38)
!4727 = !DILocation(line: 979, column: 19, scope: !4726)
!4728 = !DILocation(line: 979, column: 6, scope: !4726)
!4729 = !DILocation(line: 979, column: 23, scope: !4726)
!4730 = !DILocation(line: 980, column: 5, scope: !4726)
!4731 = !DILocation(line: 981, column: 13, scope: !4642)
!4732 = !DILocation(line: 982, column: 12, scope: !4642)
!4733 = !DILocation(line: 973, column: 34, scope: !4643)
!4734 = !DILocation(line: 973, column: 22, scope: !4643)
!4735 = distinct !{!4735, !4717, !4736}
!4736 = !DILocation(line: 983, column: 4, scope: !4636)
!4737 = !DILocation(line: 985, column: 16, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !541, line: 985, column: 8)
!4739 = distinct !DILexicalBlock(scope: !4638, file: !541, line: 984, column: 10)
!4740 = !DILocation(line: 967, column: 9, scope: !4606)
!4741 = !DILocation(line: 971, column: 11, scope: !4639)
!4742 = !DILocation(line: 0, scope: !4639)
!4743 = !DILocation(line: 0, scope: !4647)
!4744 = !DILocation(line: 995, column: 21, scope: !4650)
!4745 = !DILocation(line: 995, column: 3, scope: !4647)
!4746 = !DILocation(line: 990, column: 34, scope: !4639)
!4747 = !DILocation(line: 990, column: 26, scope: !4639)
!4748 = !DILocation(line: 996, column: 30, scope: !4649)
!4749 = !DILocation(line: 0, scope: !4649)
!4750 = !DILocation(line: 997, column: 30, scope: !4649)
!4751 = !DILocation(line: 997, column: 22, scope: !4649)
!4752 = !DILocation(line: 998, column: 39, scope: !4649)
!4753 = !DILocation(line: 998, column: 22, scope: !4649)
!4754 = !DILocation(line: 999, column: 17, scope: !4649)
!4755 = !DILocation(line: 1002, column: 20, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4649, file: !541, line: 1002, column: 8)
!4757 = !DILocation(line: 996, column: 22, scope: !4649)
!4758 = !DILocation(line: 1002, column: 35, scope: !4756)
!4759 = !DILocation(line: 1002, column: 23, scope: !4756)
!4760 = !DILocation(line: 1002, column: 8, scope: !4649)
!4761 = !DILocation(line: 1003, column: 5, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !541, line: 1003, column: 5)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !541, line: 1003, column: 5)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !541, line: 1003, column: 5)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !541, line: 1003, column: 5)
!4766 = distinct !DILexicalBlock(scope: !4756, file: !541, line: 1002, column: 45)
!4767 = !DILocation(line: 1010, column: 13, scope: !4766)
!4768 = !DILocation(line: 1011, column: 5, scope: !4766)
!4769 = !DILocation(line: 1014, column: 8, scope: !4649)
!4770 = !DILocation(line: 1015, column: 9, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4682, file: !541, line: 1014, column: 15)
!4772 = !DILocation(line: 1018, column: 14, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !541, line: 1017, column: 12)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !541, line: 1015, column: 9)
!4775 = !DILocation(line: 1020, column: 4, scope: !4771)
!4776 = !DILocation(line: 1020, column: 15, scope: !4682)
!4777 = !DILocation(line: 1021, column: 1, scope: !4680)
!4778 = !DILocation(line: 1022, column: 11, scope: !4680)
!4779 = !DILocation(line: 1025, column: 14, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4680, file: !541, line: 1025, column: 9)
!4781 = !DILocation(line: 1026, column: 25, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4780, file: !541, line: 1025, column: 38)
!4783 = !DILocation(line: 1026, column: 19, scope: !4782)
!4784 = !DILocation(line: 1026, column: 6, scope: !4782)
!4785 = !DILocation(line: 1026, column: 23, scope: !4782)
!4786 = !DILocation(line: 1027, column: 5, scope: !4782)
!4787 = !DILocation(line: 1031, column: 21, scope: !4680)
!4788 = !DILocation(line: 1031, column: 13, scope: !4680)
!4789 = !DILocation(line: 1032, column: 4, scope: !4680)
!4790 = !DILocation(line: 995, column: 33, scope: !4650)
!4791 = distinct !{!4791, !4745, !4792}
!4792 = !DILocation(line: 1033, column: 3, scope: !4647)
!4793 = !DILocation(line: 1040, column: 10, scope: !4606)
!4794 = !DILocation(line: 1042, column: 10, scope: !4606)
!4795 = !DILocation(line: 1052, column: 6, scope: !4606)
!4796 = !DILocation(line: 1055, column: 9, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !541, line: 1052, column: 14)
!4798 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 1052, column: 6)
!4799 = !DILocation(line: 1056, column: 2, scope: !4797)
!4800 = !DILocation(line: 1056, column: 21, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4798, file: !541, line: 1056, column: 13)
!4802 = !DILocation(line: 1066, column: 3, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !541, line: 1065, column: 11)
!4804 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 1065, column: 6)
!4805 = !DILocation(line: 1067, column: 2, scope: !4803)
!4806 = !DILocation(line: 1068, column: 10, scope: !4606)
!4807 = !DILocation(line: 0, scope: !4663)
!4808 = !DILocation(line: 1074, column: 20, scope: !4666)
!4809 = !DILocation(line: 1074, column: 2, scope: !4663)
!4810 = !DILocation(line: 1110, column: 24, scope: !4606)
!4811 = !DILocation(line: 1053, column: 12, scope: !4797)
!4812 = !DILocation(line: 1054, column: 12, scope: !4797)
!4813 = !DILocation(line: 1108, column: 30, scope: !4606)
!4814 = !DILocation(line: 1108, column: 40, scope: !4606)
!4815 = !DILocation(line: 1108, column: 38, scope: !4606)
!4816 = !DILocation(line: 1109, column: 31, scope: !4606)
!4817 = !DILocation(line: 1109, column: 24, scope: !4606)
!4818 = !DILocation(line: 1110, column: 31, scope: !4606)
!4819 = !DILocation(line: 1114, column: 31, scope: !4606)
!4820 = !DILocation(line: 1114, column: 48, scope: !4606)
!4821 = !DILocation(line: 1115, column: 13, scope: !4606)
!4822 = !DILocation(line: 1118, column: 7, scope: !4606)
!4823 = !DILocation(line: 1119, column: 9, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 1119, column: 6)
!4825 = !DILocation(line: 1119, column: 6, scope: !4606)
!4826 = !DILocation(line: 1075, column: 29, scope: !4665)
!4827 = !DILocation(line: 1075, column: 21, scope: !4665)
!4828 = !DILocation(line: 0, scope: !4665)
!4829 = !DILocation(line: 1076, column: 29, scope: !4665)
!4830 = !DILocation(line: 1076, column: 21, scope: !4665)
!4831 = !DILocation(line: 1077, column: 38, scope: !4665)
!4832 = !DILocation(line: 1077, column: 21, scope: !4665)
!4833 = !DILocation(line: 1078, column: 16, scope: !4665)
!4834 = !DILocation(line: 1080, column: 19, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4665, file: !541, line: 1080, column: 7)
!4836 = !DILocation(line: 1080, column: 34, scope: !4835)
!4837 = !DILocation(line: 1080, column: 22, scope: !4835)
!4838 = !DILocation(line: 1080, column: 7, scope: !4665)
!4839 = !DILocation(line: 1084, column: 7, scope: !4665)
!4840 = !DILocation(line: 1085, column: 8, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !541, line: 1084, column: 14)
!4842 = distinct !DILexicalBlock(scope: !4665, file: !541, line: 1084, column: 7)
!4843 = !DILocation(line: 1087, column: 25, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !541, line: 1085, column: 49)
!4845 = distinct !DILexicalBlock(scope: !4841, file: !541, line: 1085, column: 8)
!4846 = !DILocation(line: 1088, column: 4, scope: !4844)
!4847 = !DILocation(line: 1088, column: 15, scope: !4845)
!4848 = !DILocation(line: 1090, column: 26, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !541, line: 1088, column: 61)
!4850 = distinct !DILexicalBlock(scope: !4845, file: !541, line: 1088, column: 15)
!4851 = !DILocation(line: 1091, column: 4, scope: !4849)
!4852 = !DILocation(line: 1095, column: 8, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4842, file: !541, line: 1094, column: 10)
!4854 = !DILocation(line: 1097, column: 25, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !541, line: 1095, column: 49)
!4856 = distinct !DILexicalBlock(scope: !4853, file: !541, line: 1095, column: 8)
!4857 = !DILocation(line: 1098, column: 4, scope: !4855)
!4858 = !DILocation(line: 1100, column: 26, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4856, file: !541, line: 1098, column: 11)
!4860 = !DILocation(line: 1100, column: 5, scope: !4859)
!4861 = !DILocation(line: 1100, column: 30, scope: !4859)
!4862 = !DILocation(line: 1101, column: 26, scope: !4859)
!4863 = !DILocation(line: 0, scope: !4842)
!4864 = !DILocation(line: 1074, column: 32, scope: !4666)
!4865 = distinct !{!4865, !4809, !4866}
!4866 = !DILocation(line: 1104, column: 2, scope: !4663)
!4867 = !DILocation(line: 1124, column: 13, scope: !4606)
!4868 = !DILocation(line: 1127, column: 10, scope: !4606)
!4869 = !DILocation(line: 1127, column: 7, scope: !4606)
!4870 = !DILocation(line: 1128, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 1128, column: 6)
!4872 = !DILocation(line: 1128, column: 6, scope: !4606)
!4873 = !DILocation(line: 1134, column: 27, scope: !4606)
!4874 = !DILocation(line: 1136, column: 7, scope: !4606)
!4875 = !DILocation(line: 1137, column: 9, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4606, file: !541, line: 1137, column: 6)
!4877 = !DILocation(line: 1137, column: 6, scope: !4606)
!4878 = !DILocation(line: 1131, column: 10, scope: !4606)
!4879 = !DILocation(line: 1140, column: 10, scope: !4606)
!4880 = !DILocation(line: 0, scope: !4673)
!4881 = !DILocation(line: 1143, column: 20, scope: !4676)
!4882 = !DILocation(line: 1143, column: 2, scope: !4673)
!4883 = !DILocation(line: 1144, column: 3, scope: !4675)
!4884 = !DILocation(line: 1144, column: 17, scope: !4675)
!4885 = !DILocation(line: 0, scope: !4675)
!4886 = !DILocation(line: 1144, column: 11, scope: !4675)
!4887 = !DILocation(line: 1145, column: 38, scope: !4675)
!4888 = !DILocation(line: 1145, column: 21, scope: !4675)
!4889 = !DILocation(line: 1146, column: 22, scope: !4675)
!4890 = !DILocation(line: 1146, column: 29, scope: !4675)
!4891 = !DILocation(line: 1148, column: 8, scope: !4675)
!4892 = !DILocation(line: 1149, column: 10, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4675, file: !541, line: 1149, column: 7)
!4894 = !DILocation(line: 1149, column: 7, scope: !4675)
!4895 = !DILocation(line: 1154, column: 8, scope: !4675)
!4896 = !DILocation(line: 1155, column: 10, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4675, file: !541, line: 1155, column: 7)
!4898 = !DILocation(line: 1155, column: 7, scope: !4675)
!4899 = !DILocation(line: 1159, column: 2, scope: !4676)
!4900 = !DILocation(line: 1152, column: 11, scope: !4675)
!4901 = !DILocation(line: 1158, column: 11, scope: !4675)
!4902 = !DILocation(line: 1143, column: 33, scope: !4676)
!4903 = distinct !{!4903, !4882, !4904}
!4904 = !DILocation(line: 1159, column: 2, scope: !4673)
!4905 = !DILocation(line: 1162, column: 8, scope: !4606)
!4906 = !DILocation(line: 1164, column: 2, scope: !4606)
!4907 = !DILocation(line: 1165, column: 1, scope: !4606)
!4908 = distinct !DISubprogram(name: "get_package_len", scope: !541, file: !541, line: 196, type: !4909, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4911)
!4909 = !DISubroutineType(types: !4910)
!4910 = !{!439, !104}
!4911 = !{!4912, !4913, !4914, !4915, !4916, !4917, !4918}
!4912 = !DILocalVariable(name: "packaged", arg: 1, scope: !4908, file: !541, line: 196, type: !104)
!4913 = !DILocalVariable(name: "buf", scope: !4908, file: !541, line: 200, type: !209)
!4914 = !DILocalVariable(name: "start", scope: !4908, file: !541, line: 201, type: !209)
!4915 = !DILocalVariable(name: "args_size", scope: !4908, file: !541, line: 202, type: !32)
!4916 = !DILocalVariable(name: "s_nbr", scope: !4908, file: !541, line: 202, type: !32)
!4917 = !DILocalVariable(name: "ros_nbr", scope: !4908, file: !541, line: 202, type: !32)
!4918 = !DILocalVariable(name: "i", scope: !4919, file: !541, line: 215, type: !108)
!4919 = distinct !DILexicalBlock(scope: !4908, file: !541, line: 215, column: 2)
!4920 = !DILocation(line: 0, scope: !4908)
!4921 = !DILocation(line: 204, column: 14, scope: !4908)
!4922 = !DILocation(line: 204, column: 21, scope: !4908)
!4923 = !DILocation(line: 205, column: 14, scope: !4908)
!4924 = !DILocation(line: 206, column: 14, scope: !4908)
!4925 = !DILocation(line: 209, column: 6, scope: !4908)
!4926 = !DILocation(line: 212, column: 6, scope: !4908)
!4927 = !DILocation(line: 0, scope: !4919)
!4928 = !DILocation(line: 215, column: 20, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4919, file: !541, line: 215, column: 2)
!4930 = !DILocation(line: 215, column: 2, scope: !4919)
!4931 = !DILocation(line: 220, column: 33, scope: !4908)
!4932 = !DILocation(line: 220, column: 2, scope: !4908)
!4933 = !DILocation(line: 216, column: 6, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4929, file: !541, line: 215, column: 34)
!4935 = !DILocation(line: 217, column: 10, scope: !4934)
!4936 = !DILocation(line: 217, column: 36, scope: !4934)
!4937 = !DILocation(line: 217, column: 7, scope: !4934)
!4938 = !DILocation(line: 215, column: 30, scope: !4929)
!4939 = distinct !{!4939, !4930, !4940}
!4940 = !DILocation(line: 218, column: 2, scope: !4919)
!4941 = distinct !DISubprogram(name: "append_string", scope: !541, file: !541, line: 223, type: !4942, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !4944)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{!108, !4609, !104, !105, !168}
!4944 = !{!4945, !4946, !4947, !4948}
!4945 = !DILocalVariable(name: "cb", arg: 1, scope: !4941, file: !541, line: 223, type: !4609)
!4946 = !DILocalVariable(name: "ctx", arg: 2, scope: !4941, file: !541, line: 223, type: !104)
!4947 = !DILocalVariable(name: "str", arg: 3, scope: !4941, file: !541, line: 223, type: !105)
!4948 = !DILocalVariable(name: "strl", arg: 4, scope: !4941, file: !541, line: 223, type: !168)
!4949 = !DILocation(line: 0, scope: !4941)
!4950 = !DILocation(line: 225, column: 9, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4941, file: !541, line: 225, column: 6)
!4952 = !DILocation(line: 225, column: 6, scope: !4941)
!4953 = !DILocation(line: 226, column: 14, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4951, file: !541, line: 225, column: 18)
!4955 = !DILocation(line: 226, column: 12, scope: !4954)
!4956 = !DILocation(line: 226, column: 3, scope: !4954)
!4957 = !DILocation(line: 229, column: 14, scope: !4941)
!4958 = !DILocation(line: 229, column: 9, scope: !4941)
!4959 = !DILocation(line: 229, column: 27, scope: !4941)
!4960 = !DILocation(line: 229, column: 39, scope: !4941)
!4961 = !DILocation(line: 230, column: 17, scope: !4941)
!4962 = !DILocation(line: 230, column: 9, scope: !4941)
!4963 = !DILocation(line: 230, column: 2, scope: !4941)
!4964 = !DILocation(line: 231, column: 1, scope: !4941)
!4965 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !553, file: !553, line: 45, type: !555, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !4966)
!4966 = !{!4967}
!4967 = !DILocalVariable(name: "c", arg: 1, scope: !4965, file: !553, line: 45, type: !108)
!4968 = !DILocation(line: 0, scope: !4965)
!4969 = !DILocation(line: 50, column: 2, scope: !4965)
!4970 = distinct !DISubprogram(name: "__printk_hook_install", scope: !553, file: !553, line: 63, type: !4971, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !4973)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{null, !554}
!4973 = !{!4974}
!4974 = !DILocalVariable(name: "fn", arg: 1, scope: !4970, file: !553, line: 63, type: !554)
!4975 = !DILocation(line: 0, scope: !4970)
!4976 = !DILocation(line: 65, column: 12, scope: !4970)
!4977 = !DILocation(line: 66, column: 1, scope: !4970)
!4978 = distinct !DISubprogram(name: "__printk_get_hook", scope: !553, file: !553, line: 76, type: !4979, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !437)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!104}
!4981 = !DILocation(line: 78, column: 9, scope: !4978)
!4982 = !DILocation(line: 78, column: 2, scope: !4978)
!4983 = distinct !DISubprogram(name: "vprintk", scope: !553, file: !553, line: 113, type: !4984, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !4992)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{null, !105, !4986}
!4986 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4116, line: 99, baseType: !4987)
!4987 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4116, line: 40, baseType: !4988)
!4988 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !553, baseType: !4989)
!4989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4990)
!4990 = !{!4991}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4989, file: !553, line: 79, baseType: !104, size: 32)
!4992 = !{!4993, !4994, !4995}
!4993 = !DILocalVariable(name: "fmt", arg: 1, scope: !4983, file: !553, line: 113, type: !105)
!4994 = !DILocalVariable(name: "ap", arg: 2, scope: !4983, file: !553, line: 113, type: !4986)
!4995 = !DILocalVariable(name: "ctx", scope: !4996, file: !553, line: 121, type: !4998)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !553, line: 120, column: 27)
!4997 = distinct !DILexicalBlock(scope: !4983, file: !553, line: 120, column: 6)
!4998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !553, line: 81, size: 32, elements: !4999)
!4999 = !{!5000, !5001}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4998, file: !553, line: 85, baseType: !32, size: 32)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4998, file: !553, line: 86, baseType: !5002, offset: 32)
!5002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !5003)
!5003 = !{!5004}
!5004 = !DISubrange(count: 0)
!5005 = !DILocation(line: 0, scope: !4983)
!5006 = !DILocation(line: 148, column: 3, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4997, file: !553, line: 138, column: 9)
!5008 = !DILocation(line: 155, column: 1, scope: !4983)
!5009 = distinct !DISubprogram(name: "char_out", scope: !553, file: !553, line: 107, type: !5010, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !5012)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!108, !108, !104}
!5012 = !{!5013, !5014}
!5013 = !DILocalVariable(name: "c", arg: 1, scope: !5009, file: !553, line: 107, type: !108)
!5014 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5009, file: !553, line: 107, type: !104)
!5015 = !DILocation(line: 0, scope: !5009)
!5016 = !DILocation(line: 110, column: 9, scope: !5009)
!5017 = !DILocation(line: 110, column: 2, scope: !5009)
!5018 = distinct !DISubprogram(name: "cbvprintf", scope: !4148, file: !4148, line: 739, type: !5019, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !5021)
!5019 = !DISubroutineType(types: !5020)
!5020 = !{!108, !4477, !104, !105, !4986}
!5021 = !{!5022, !5023, !5024, !5025}
!5022 = !DILocalVariable(name: "out", arg: 1, scope: !5018, file: !4148, line: 739, type: !4477)
!5023 = !DILocalVariable(name: "ctx", arg: 2, scope: !5018, file: !4148, line: 739, type: !104)
!5024 = !DILocalVariable(name: "format", arg: 3, scope: !5018, file: !4148, line: 739, type: !105)
!5025 = !DILocalVariable(name: "ap", arg: 4, scope: !5018, file: !4148, line: 739, type: !4986)
!5026 = !DILocation(line: 0, scope: !5018)
!5027 = !DILocation(line: 741, column: 9, scope: !5018)
!5028 = !DILocation(line: 741, column: 2, scope: !5018)
!5029 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !553, file: !553, line: 157, type: !5030, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !5032)
!5030 = !DISubroutineType(types: !5031)
!5031 = !{null, !443, !439}
!5032 = !{!5033, !5034, !5035}
!5033 = !DILocalVariable(name: "c", arg: 1, scope: !5029, file: !553, line: 157, type: !443)
!5034 = !DILocalVariable(name: "n", arg: 2, scope: !5029, file: !553, line: 157, type: !439)
!5035 = !DILocalVariable(name: "i", scope: !5029, file: !553, line: 159, type: !439)
!5036 = !DILocation(line: 0, scope: !5029)
!5037 = !DILocation(line: 164, column: 16, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5039, file: !553, line: 164, column: 2)
!5039 = distinct !DILexicalBlock(scope: !5029, file: !553, line: 164, column: 2)
!5040 = !DILocation(line: 164, column: 2, scope: !5039)
!5041 = !DILocation(line: 165, column: 3, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5038, file: !553, line: 164, column: 26)
!5043 = !DILocation(line: 165, column: 13, scope: !5042)
!5044 = !DILocation(line: 164, column: 22, scope: !5038)
!5045 = distinct !{!5045, !5040, !5046}
!5046 = !DILocation(line: 166, column: 2, scope: !5039)
!5047 = !DILocation(line: 171, column: 1, scope: !5029)
!5048 = distinct !DISubprogram(name: "printk", scope: !553, file: !553, line: 203, type: !5049, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !5051)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{null, !105, null}
!5051 = !{!5052, !5053}
!5052 = !DILocalVariable(name: "fmt", arg: 1, scope: !5048, file: !553, line: 203, type: !105)
!5053 = !DILocalVariable(name: "ap", scope: !5048, file: !553, line: 205, type: !4986)
!5054 = !DILocation(line: 0, scope: !5048)
!5055 = !DILocation(line: 205, column: 2, scope: !5048)
!5056 = !DILocation(line: 205, column: 10, scope: !5048)
!5057 = !DILocation(line: 207, column: 2, scope: !5048)
!5058 = !DILocation(line: 209, column: 2, scope: !5048)
!5059 = !DILocation(line: 211, column: 2, scope: !5048)
!5060 = !DILocation(line: 212, column: 1, scope: !5048)
!5061 = distinct !DISubprogram(name: "snprintk", scope: !553, file: !553, line: 239, type: !5062, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !5064)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{!108, !443, !439, !105, null}
!5064 = !{!5065, !5066, !5067, !5068, !5069}
!5065 = !DILocalVariable(name: "str", arg: 1, scope: !5061, file: !553, line: 239, type: !443)
!5066 = !DILocalVariable(name: "size", arg: 2, scope: !5061, file: !553, line: 239, type: !439)
!5067 = !DILocalVariable(name: "fmt", arg: 3, scope: !5061, file: !553, line: 239, type: !105)
!5068 = !DILocalVariable(name: "ap", scope: !5061, file: !553, line: 241, type: !4986)
!5069 = !DILocalVariable(name: "ret", scope: !5061, file: !553, line: 242, type: !108)
!5070 = !DILocation(line: 0, scope: !5061)
!5071 = !DILocation(line: 241, column: 2, scope: !5061)
!5072 = !DILocation(line: 241, column: 10, scope: !5061)
!5073 = !DILocation(line: 244, column: 2, scope: !5061)
!5074 = !DILocation(line: 245, column: 8, scope: !5061)
!5075 = !DILocation(line: 246, column: 2, scope: !5061)
!5076 = !DILocation(line: 249, column: 1, scope: !5061)
!5077 = !DILocation(line: 248, column: 2, scope: !5061)
!5078 = distinct !DISubprogram(name: "vsnprintk", scope: !553, file: !553, line: 251, type: !5079, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !5081)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!108, !443, !439, !105, !4986}
!5081 = !{!5082, !5083, !5084, !5085, !5086}
!5082 = !DILocalVariable(name: "str", arg: 1, scope: !5078, file: !553, line: 251, type: !443)
!5083 = !DILocalVariable(name: "size", arg: 2, scope: !5078, file: !553, line: 251, type: !439)
!5084 = !DILocalVariable(name: "fmt", arg: 3, scope: !5078, file: !553, line: 251, type: !105)
!5085 = !DILocalVariable(name: "ap", arg: 4, scope: !5078, file: !553, line: 251, type: !4986)
!5086 = !DILocalVariable(name: "ctx", scope: !5078, file: !553, line: 253, type: !5087)
!5087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !553, line: 217, size: 96, elements: !5088)
!5088 = !{!5089, !5090, !5091}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5087, file: !553, line: 218, baseType: !443, size: 32)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5087, file: !553, line: 219, baseType: !108, size: 32, offset: 32)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5087, file: !553, line: 220, baseType: !108, size: 32, offset: 64)
!5092 = !DILocation(line: 0, scope: !5078)
!5093 = !DILocation(line: 253, column: 2, scope: !5078)
!5094 = !DILocation(line: 253, column: 21, scope: !5078)
!5095 = !DILocation(line: 253, column: 27, scope: !5078)
!5096 = !DILocation(line: 255, column: 2, scope: !5078)
!5097 = !DILocation(line: 257, column: 10, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5078, file: !553, line: 257, column: 6)
!5099 = !DILocation(line: 257, column: 22, scope: !5098)
!5100 = !DILocation(line: 257, column: 16, scope: !5098)
!5101 = !DILocation(line: 257, column: 6, scope: !5078)
!5102 = !DILocation(line: 258, column: 3, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5098, file: !553, line: 257, column: 27)
!5104 = !DILocation(line: 258, column: 18, scope: !5103)
!5105 = !DILocation(line: 259, column: 2, scope: !5103)
!5106 = !DILocation(line: 262, column: 1, scope: !5078)
!5107 = !DILocation(line: 261, column: 2, scope: !5078)
!5108 = distinct !DISubprogram(name: "str_out", scope: !553, file: !553, line: 223, type: !5109, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !549, retainedNodes: !5112)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!108, !108, !5111}
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5087, size: 32)
!5112 = !{!5113, !5114}
!5113 = !DILocalVariable(name: "c", arg: 1, scope: !5108, file: !553, line: 223, type: !108)
!5114 = !DILocalVariable(name: "ctx", arg: 2, scope: !5108, file: !553, line: 223, type: !5111)
!5115 = !DILocation(line: 0, scope: !5108)
!5116 = !DILocation(line: 225, column: 11, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5108, file: !553, line: 225, column: 6)
!5118 = !DILocation(line: 225, column: 15, scope: !5117)
!5119 = !DILocation(line: 0, scope: !5117)
!5120 = !DILocation(line: 225, column: 23, scope: !5117)
!5121 = !DILocation(line: 225, column: 45, scope: !5117)
!5122 = !DILocation(line: 225, column: 37, scope: !5117)
!5123 = !DILocation(line: 225, column: 6, scope: !5108)
!5124 = !DILocation(line: 226, column: 8, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5117, file: !553, line: 225, column: 50)
!5126 = !DILocation(line: 226, column: 13, scope: !5125)
!5127 = !DILocation(line: 227, column: 3, scope: !5125)
!5128 = !DILocation(line: 230, column: 29, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5108, file: !553, line: 230, column: 6)
!5130 = !DILocation(line: 230, column: 17, scope: !5129)
!5131 = !DILocation(line: 230, column: 6, scope: !5108)
!5132 = !DILocation(line: 231, column: 22, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5129, file: !553, line: 230, column: 34)
!5134 = !DILocation(line: 231, column: 3, scope: !5133)
!5135 = !DILocation(line: 231, column: 26, scope: !5133)
!5136 = !DILocation(line: 232, column: 2, scope: !5133)
!5137 = !DILocation(line: 233, column: 28, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5129, file: !553, line: 232, column: 9)
!5139 = !DILocation(line: 233, column: 22, scope: !5138)
!5140 = !DILocation(line: 233, column: 3, scope: !5138)
!5141 = !DILocation(line: 233, column: 26, scope: !5138)
!5142 = !DILocation(line: 237, column: 1, scope: !5108)
!5143 = distinct !DISubprogram(name: "z_thread_entry", scope: !5144, file: !5144, line: 30, type: !5145, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !5152)
!5144 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5145 = !DISubroutineType(types: !5146)
!5146 = !{null, !5147, !104, !104, !104}
!5147 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5148, line: 46, baseType: !5149)
!5148 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5150, size: 32)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{null, !104, !104, !104}
!5152 = !{!5153, !5154, !5155, !5156}
!5153 = !DILocalVariable(name: "entry", arg: 1, scope: !5143, file: !5144, line: 30, type: !5147)
!5154 = !DILocalVariable(name: "p1", arg: 2, scope: !5143, file: !5144, line: 31, type: !104)
!5155 = !DILocalVariable(name: "p2", arg: 3, scope: !5143, file: !5144, line: 31, type: !104)
!5156 = !DILocalVariable(name: "p3", arg: 4, scope: !5143, file: !5144, line: 31, type: !104)
!5157 = !DILocation(line: 0, scope: !5143)
!5158 = !DILocation(line: 36, column: 2, scope: !5143)
!5159 = !DILocation(line: 38, column: 17, scope: !5143)
!5160 = !DILocation(line: 38, column: 2, scope: !5143)
!5161 = !DILocation(line: 45, column: 2, scope: !5143)
!5162 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !5163, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !437)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!5165}
!5165 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !656, line: 347, baseType: !5166)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 32)
!5167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !5168)
!5168 = !{!5169, !5227, !5239, !5240, !5241, !5242, !5248, !5261}
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5167, file: !656, line: 247, baseType: !5170, size: 384)
!5170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !5171)
!5171 = !{!5172, !5196, !5203, !5204, !5205, !5214, !5215, !5216}
!5172 = !DIDerivedType(tag: DW_TAG_member, scope: !5170, file: !656, line: 60, baseType: !5173, size: 64)
!5173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5170, file: !656, line: 60, size: 64, elements: !5174)
!5174 = !{!5175, !5190}
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5173, file: !656, line: 61, baseType: !5176, size: 64)
!5176 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !5177)
!5177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !5178)
!5178 = !{!5179, !5185}
!5179 = !DIDerivedType(tag: DW_TAG_member, scope: !5177, file: !367, line: 38, baseType: !5180, size: 32)
!5180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5177, file: !367, line: 38, size: 32, elements: !5181)
!5181 = !{!5182, !5184}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5180, file: !367, line: 39, baseType: !5183, size: 32)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5177, size: 32)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5180, file: !367, line: 40, baseType: !5183, size: 32)
!5185 = !DIDerivedType(tag: DW_TAG_member, scope: !5177, file: !367, line: 42, baseType: !5186, size: 32, offset: 32)
!5186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5177, file: !367, line: 42, size: 32, elements: !5187)
!5187 = !{!5188, !5189}
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5186, file: !367, line: 43, baseType: !5183, size: 32)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5186, file: !367, line: 44, baseType: !5183, size: 32)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5173, file: !656, line: 62, baseType: !5191, size: 64)
!5191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !5192)
!5192 = !{!5193}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5191, file: !681, line: 50, baseType: !5194, size: 64)
!5194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5195, size: 64, elements: !686)
!5195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5191, size: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5170, file: !656, line: 68, baseType: !5197, size: 32, offset: 64)
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 32)
!5198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !5199)
!5199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !5200)
!5200 = !{!5201}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5199, file: !363, line: 232, baseType: !5202, size: 64)
!5202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !5177)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5170, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5170, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!5205 = !DIDerivedType(tag: DW_TAG_member, scope: !5170, file: !656, line: 90, baseType: !5206, size: 16, offset: 112)
!5206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5170, file: !656, line: 90, size: 16, elements: !5207)
!5207 = !{!5208, !5213}
!5208 = !DIDerivedType(tag: DW_TAG_member, scope: !5206, file: !656, line: 91, baseType: !5209, size: 16)
!5209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5206, file: !656, line: 91, size: 16, elements: !5210)
!5210 = !{!5211, !5212}
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5209, file: !656, line: 96, baseType: !704, size: 8)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5209, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5206, file: !656, line: 100, baseType: !168, size: 16)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5170, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5170, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5170, file: !656, line: 131, baseType: !5217, size: 192, offset: 192)
!5217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !5218)
!5218 = !{!5219, !5220, !5226}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5217, file: !363, line: 245, baseType: !5176, size: 64)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5217, file: !363, line: 246, baseType: !5221, size: 32, offset: 64)
!5221 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !5222)
!5222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 32)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{null, !5225}
!5225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5217, size: 32)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5217, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5167, file: !656, line: 250, baseType: !5228, size: 288, offset: 384)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !5229)
!5229 = !{!5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5228, file: !723, line: 26, baseType: !113, size: 32)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5228, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5228, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5228, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5228, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5228, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5228, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5228, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5228, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5167, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5167, file: !656, line: 256, baseType: !5198, size: 64, offset: 704)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5167, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5167, file: !656, line: 300, baseType: !5243, size: 96, offset: 800)
!5243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !5244)
!5244 = !{!5245, !5246, !5247}
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5243, file: !656, line: 153, baseType: !22, size: 32)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5243, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5243, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5167, file: !656, line: 325, baseType: !5249, size: 32, offset: 896)
!5249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5250, size: 32)
!5250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !5251)
!5251 = !{!5252, !5258, !5259}
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5250, file: !359, line: 5074, baseType: !5253, size: 96)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !5254)
!5254 = !{!5255, !5256, !5257}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5253, file: !749, line: 57, baseType: !752, size: 32)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5253, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5253, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5250, file: !359, line: 5075, baseType: !5198, size: 64, offset: 96)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5250, file: !359, line: 5076, baseType: !5260, offset: 160)
!5260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5167, file: !656, line: 343, baseType: !5262, size: 64, offset: 928)
!5262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !5263)
!5263 = !{!5264, !5265}
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5262, file: !723, line: 63, baseType: !113, size: 32)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5262, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!5266 = !DILocation(line: 535, column: 9, scope: !5162)
!5267 = !DILocation(line: 535, column: 2, scope: !5162)
!5268 = distinct !DISubprogram(name: "k_thread_abort", scope: !3777, file: !3777, line: 188, type: !5269, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !5271)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{null, !5165}
!5271 = !{!5272}
!5272 = !DILocalVariable(name: "thread", arg: 1, scope: !5268, file: !3777, line: 188, type: !5165)
!5273 = !DILocation(line: 0, scope: !5268)
!5274 = !DILocation(line: 197, column: 2, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5268, file: !3777, line: 197, column: 2)
!5276 = !{i64 2152229869}
!5277 = !DILocation(line: 198, column: 2, scope: !5268)
!5278 = !DILocation(line: 199, column: 1, scope: !5268)
!5279 = distinct !DISubprogram(name: "z_current_get", scope: !3777, file: !3777, line: 173, type: !5163, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !437)
!5280 = !DILocation(line: 180, column: 2, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5279, file: !3777, line: 180, column: 2)
!5282 = !{i64 2152229801}
!5283 = !DILocation(line: 181, column: 9, scope: !5279)
!5284 = !DILocation(line: 181, column: 2, scope: !5279)
!5285 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2855, file: !2855, line: 1338, type: !5286, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5294)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{!108, !4477, !104, !105, !5288, !113}
!5288 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4116, line: 99, baseType: !5289)
!5289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4116, line: 40, baseType: !5290)
!5290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2855, baseType: !5291)
!5291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5292)
!5292 = !{!5293}
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5291, file: !2855, baseType: !104, size: 32)
!5294 = !{!5295, !5296, !5297, !5298, !5299, !5300, !5304, !5305, !5306, !5308, !5313, !5356, !5359, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5371, !5372, !5373, !5377, !5380, !5382, !5385, !5386, !5387, !5392, !5398, !5401, !5405, !5411, !5415, !5418, !5420, !5423}
!5295 = !DILocalVariable(name: "out", arg: 1, scope: !5285, file: !2855, line: 1338, type: !4477)
!5296 = !DILocalVariable(name: "ctx", arg: 2, scope: !5285, file: !2855, line: 1338, type: !104)
!5297 = !DILocalVariable(name: "fp", arg: 3, scope: !5285, file: !2855, line: 1338, type: !105)
!5298 = !DILocalVariable(name: "ap", arg: 4, scope: !5285, file: !2855, line: 1339, type: !5288)
!5299 = !DILocalVariable(name: "flags", arg: 5, scope: !5285, file: !2855, line: 1339, type: !113)
!5300 = !DILocalVariable(name: "buf", scope: !5285, file: !2855, line: 1341, type: !5301)
!5301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !5302)
!5302 = !{!5303}
!5303 = !DISubrange(count: 22)
!5304 = !DILocalVariable(name: "count", scope: !5285, file: !2855, line: 1342, type: !439)
!5305 = !DILocalVariable(name: "sint", scope: !5285, file: !2855, line: 1343, type: !2874)
!5306 = !DILocalVariable(name: "tagged_ap", scope: !5285, file: !2855, line: 1345, type: !5307)
!5307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!5308 = !DILocalVariable(name: "rc", scope: !5309, file: !2855, line: 1377, type: !108)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !2855, line: 1377, column: 4)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !2855, line: 1376, column: 19)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1376, column: 7)
!5312 = distinct !DILexicalBlock(scope: !5285, file: !2855, line: 1375, column: 19)
!5313 = !DILocalVariable(name: "state", scope: !5312, file: !2855, line: 1395, type: !5314)
!5314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5285, file: !2855, line: 1392, size: 192, elements: !5315)
!5315 = !{!5316, !5324}
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5314, file: !2855, line: 1393, baseType: !5317, size: 64)
!5317 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2855, line: 166, size: 64, elements: !5318)
!5318 = !{!5319, !5320, !5321, !5322, !5323}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5317, file: !2855, line: 168, baseType: !2874, size: 64)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5317, file: !2855, line: 171, baseType: !2877, size: 64)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5317, file: !2855, line: 174, baseType: !534, size: 64)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5317, file: !2855, line: 177, baseType: !532, size: 64)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5317, file: !2855, line: 180, baseType: !104, size: 32)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5314, file: !2855, line: 1394, baseType: !5325, size: 96, offset: 64)
!5325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2855, line: 189, size: 96, elements: !5326)
!5326 = !{!5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5351}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5325, file: !2855, line: 191, baseType: !422, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5325, file: !2855, line: 194, baseType: !422, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5325, file: !2855, line: 197, baseType: !422, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5325, file: !2855, line: 200, baseType: !422, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5325, file: !2855, line: 203, baseType: !422, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5325, file: !2855, line: 206, baseType: !422, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5325, file: !2855, line: 209, baseType: !422, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5325, file: !2855, line: 212, baseType: !422, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5325, file: !2855, line: 219, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5325, file: !2855, line: 222, baseType: !422, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5325, file: !2855, line: 229, baseType: !422, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5325, file: !2855, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5325, file: !2855, line: 238, baseType: !422, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5325, file: !2855, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5325, file: !2855, line: 244, baseType: !422, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5325, file: !2855, line: 247, baseType: !422, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5325, file: !2855, line: 252, baseType: !422, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5325, file: !2855, line: 257, baseType: !422, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5325, file: !2855, line: 260, baseType: !165, size: 8, offset: 24)
!5346 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2855, line: 262, baseType: !5347, size: 32, offset: 32)
!5347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2855, line: 262, size: 32, elements: !5348)
!5348 = !{!5349, !5350}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5347, file: !2855, line: 267, baseType: !108, size: 32)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5347, file: !2855, line: 289, baseType: !108, size: 32)
!5351 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2855, line: 292, baseType: !5352, size: 32, offset: 64)
!5352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2855, line: 292, size: 32, elements: !5353)
!5353 = !{!5354, !5355}
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5352, file: !2855, line: 297, baseType: !108, size: 32)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5352, file: !2855, line: 306, baseType: !108, size: 32)
!5356 = !DILocalVariable(name: "conv", scope: !5312, file: !2855, line: 1400, type: !5357)
!5357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5358)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5325, size: 32)
!5359 = !DILocalVariable(name: "value", scope: !5312, file: !2855, line: 1401, type: !5360)
!5360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5361)
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 32)
!5362 = !DILocalVariable(name: "sp", scope: !5312, file: !2855, line: 1402, type: !105)
!5363 = !DILocalVariable(name: "width", scope: !5312, file: !2855, line: 1403, type: !108)
!5364 = !DILocalVariable(name: "precision", scope: !5312, file: !2855, line: 1404, type: !108)
!5365 = !DILocalVariable(name: "bps", scope: !5312, file: !2855, line: 1405, type: !105)
!5366 = !DILocalVariable(name: "bpe", scope: !5312, file: !2855, line: 1406, type: !105)
!5367 = !DILocalVariable(name: "sign", scope: !5312, file: !2855, line: 1407, type: !107)
!5368 = !DILocalVariable(name: "arg", scope: !5369, file: !2855, line: 1432, type: !108)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !2855, line: 1431, column: 24)
!5370 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1431, column: 7)
!5371 = !DILocalVariable(name: "specifier_cat", scope: !5312, file: !2855, line: 1468, type: !2854)
!5372 = !DILocalVariable(name: "length_mod", scope: !5312, file: !2855, line: 1470, type: !2862)
!5373 = !DILocalVariable(name: "rc", scope: !5374, file: !2855, line: 1575, type: !108)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !2855, line: 1575, column: 4)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !2855, line: 1574, column: 43)
!5376 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1574, column: 7)
!5377 = !DILocalVariable(name: "rc", scope: !5378, file: !2855, line: 1584, type: !108)
!5378 = distinct !DILexicalBlock(scope: !5379, file: !2855, line: 1584, column: 4)
!5379 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1582, column: 28)
!5380 = !DILocalVariable(name: "len", scope: !5381, file: !2855, line: 1589, type: !439)
!5381 = distinct !DILexicalBlock(scope: !5379, file: !2855, line: 1586, column: 13)
!5382 = !DILocalVariable(name: "len", scope: !5383, file: !2855, line: 1641, type: !439)
!5383 = distinct !DILexicalBlock(scope: !5384, file: !2855, line: 1640, column: 24)
!5384 = distinct !DILexicalBlock(scope: !5379, file: !2855, line: 1640, column: 8)
!5385 = !DILocalVariable(name: "nj_len", scope: !5312, file: !2855, line: 1722, type: !439)
!5386 = !DILocalVariable(name: "pad_len", scope: !5312, file: !2855, line: 1723, type: !108)
!5387 = !DILocalVariable(name: "pad", scope: !5388, file: !2855, line: 1751, type: !107)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !2855, line: 1750, column: 26)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !2855, line: 1750, column: 8)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !2855, line: 1747, column: 18)
!5391 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1747, column: 7)
!5392 = !DILocalVariable(name: "rc", scope: !5393, file: !2855, line: 1758, type: !108)
!5393 = distinct !DILexicalBlock(scope: !5394, file: !2855, line: 1758, column: 7)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !2855, line: 1757, column: 21)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !2855, line: 1757, column: 10)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !2855, line: 1756, column: 26)
!5397 = distinct !DILexicalBlock(scope: !5388, file: !2855, line: 1756, column: 9)
!5398 = !DILocalVariable(name: "rc", scope: !5399, file: !2855, line: 1765, type: !108)
!5399 = distinct !DILexicalBlock(scope: !5400, file: !2855, line: 1765, column: 6)
!5400 = distinct !DILexicalBlock(scope: !5388, file: !2855, line: 1764, column: 25)
!5401 = !DILocalVariable(name: "rc", scope: !5402, file: !2855, line: 1774, type: !108)
!5402 = distinct !DILexicalBlock(scope: !5403, file: !2855, line: 1774, column: 4)
!5403 = distinct !DILexicalBlock(scope: !5404, file: !2855, line: 1773, column: 18)
!5404 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1773, column: 7)
!5405 = !DILocalVariable(name: "rc", scope: !5406, file: !2855, line: 1819, type: !108)
!5406 = distinct !DILexicalBlock(scope: !5407, file: !2855, line: 1819, column: 5)
!5407 = distinct !DILexicalBlock(scope: !5408, file: !2855, line: 1818, column: 44)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !2855, line: 1818, column: 8)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !2855, line: 1817, column: 10)
!5410 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1777, column: 7)
!5411 = !DILocalVariable(name: "rc", scope: !5412, file: !2855, line: 1823, type: !108)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !2855, line: 1823, column: 5)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !2855, line: 1822, column: 26)
!5414 = distinct !DILexicalBlock(scope: !5409, file: !2855, line: 1822, column: 8)
!5415 = !DILocalVariable(name: "rc", scope: !5416, file: !2855, line: 1828, type: !108)
!5416 = distinct !DILexicalBlock(scope: !5417, file: !2855, line: 1828, column: 5)
!5417 = distinct !DILexicalBlock(scope: !5409, file: !2855, line: 1827, column: 26)
!5418 = !DILocalVariable(name: "rc", scope: !5419, file: !2855, line: 1831, type: !108)
!5419 = distinct !DILexicalBlock(scope: !5409, file: !2855, line: 1831, column: 4)
!5420 = !DILocalVariable(name: "rc", scope: !5421, file: !2855, line: 1836, type: !108)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !2855, line: 1836, column: 4)
!5422 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1835, column: 21)
!5423 = !DILabel(scope: !5379, name: "prec_int_pad0", file: !2855, line: 1634)
!5424 = !DILocation(line: 0, scope: !5285)
!5425 = !DILocation(line: 1341, column: 2, scope: !5285)
!5426 = !DILocation(line: 1341, column: 7, scope: !5285)
!5427 = !DILocation(line: 1375, column: 2, scope: !5285)
!5428 = !DILocation(line: 1342, column: 9, scope: !5285)
!5429 = !DILocation(line: 1375, column: 9, scope: !5285)
!5430 = !DILocation(line: 1377, column: 4, scope: !5309)
!5431 = !DILocation(line: 0, scope: !5309)
!5432 = !DILocation(line: 1377, column: 4, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5309, file: !2855, line: 1377, column: 4)
!5434 = distinct !{!5434, !5427, !5435}
!5435 = !DILocation(line: 1839, column: 2, scope: !5285)
!5436 = !DILocation(line: 1392, column: 3, scope: !5312)
!5437 = !DILocation(line: 1395, column: 5, scope: !5312)
!5438 = !DILocation(line: 0, scope: !5312)
!5439 = !DILocation(line: 1409, column: 8, scope: !5312)
!5440 = !DILocation(line: 1414, column: 13, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1414, column: 7)
!5442 = !DILocation(line: 1414, column: 7, scope: !5312)
!5443 = !DILocation(line: 1415, column: 12, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5441, file: !2855, line: 1414, column: 25)
!5445 = !DILocation(line: 1417, column: 14, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5444, file: !2855, line: 1417, column: 8)
!5447 = !DILocation(line: 1417, column: 8, scope: !5444)
!5448 = !DILocation(line: 1418, column: 21, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5446, file: !2855, line: 1417, column: 19)
!5450 = !DILocation(line: 1419, column: 13, scope: !5449)
!5451 = !DILocation(line: 1420, column: 4, scope: !5449)
!5452 = !DILocation(line: 1421, column: 20, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5441, file: !2855, line: 1421, column: 14)
!5454 = !DILocation(line: 1421, column: 14, scope: !5441)
!5455 = !DILocation(line: 1431, column: 13, scope: !5370)
!5456 = !DILocation(line: 1431, column: 7, scope: !5312)
!5457 = !DILocation(line: 1432, column: 14, scope: !5369)
!5458 = !DILocation(line: 0, scope: !5369)
!5459 = !DILocation(line: 1434, column: 12, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5369, file: !2855, line: 1434, column: 8)
!5461 = !DILocation(line: 1434, column: 8, scope: !5369)
!5462 = !DILocation(line: 1435, column: 24, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5460, file: !2855, line: 1434, column: 17)
!5464 = !DILocation(line: 1436, column: 4, scope: !5463)
!5465 = !DILocation(line: 1439, column: 20, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5370, file: !2855, line: 1439, column: 14)
!5467 = !DILocation(line: 1439, column: 14, scope: !5370)
!5468 = !DILocation(line: 1469, column: 37, scope: !5312)
!5469 = !DILocation(line: 1448, column: 20, scope: !5312)
!5470 = !DILocation(line: 1449, column: 22, scope: !5312)
!5471 = !DILocation(line: 1471, column: 34, scope: !5312)
!5472 = !DILocation(line: 1478, column: 7, scope: !5312)
!5473 = !DILocation(line: 1479, column: 4, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !2855, line: 1478, column: 40)
!5475 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1478, column: 7)
!5476 = !DILocation(line: 1484, column: 19, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5474, file: !2855, line: 1479, column: 24)
!5478 = !DILocation(line: 1484, column: 17, scope: !5477)
!5479 = !DILocation(line: 1485, column: 5, scope: !5477)
!5480 = !DILocation(line: 1492, column: 20, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !2855, line: 1491, column: 12)
!5482 = distinct !DILexicalBlock(scope: !5477, file: !2855, line: 1487, column: 9)
!5483 = !DILocation(line: 1492, column: 18, scope: !5481)
!5484 = !DILocation(line: 1494, column: 5, scope: !5477)
!5485 = !DILocation(line: 1497, column: 23, scope: !5477)
!5486 = !DILocation(line: 1496, column: 17, scope: !5477)
!5487 = !DILocation(line: 1498, column: 5, scope: !5477)
!5488 = !DILocation(line: 1501, column: 23, scope: !5477)
!5489 = !DILocation(line: 1500, column: 17, scope: !5477)
!5490 = !DILocation(line: 1502, column: 5, scope: !5477)
!5491 = !DILocation(line: 1513, column: 23, scope: !5477)
!5492 = !DILocation(line: 1513, column: 6, scope: !5477)
!5493 = !DILocation(line: 1512, column: 17, scope: !5477)
!5494 = !DILocation(line: 1514, column: 5, scope: !5477)
!5495 = !DILocation(line: 0, scope: !5477)
!5496 = !DILocation(line: 1516, column: 8, scope: !5474)
!5497 = !DILocation(line: 1517, column: 19, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !2855, line: 1516, column: 33)
!5499 = distinct !DILexicalBlock(scope: !5474, file: !2855, line: 1516, column: 8)
!5500 = !DILocation(line: 1517, column: 17, scope: !5498)
!5501 = !DILocation(line: 1518, column: 4, scope: !5498)
!5502 = !DILocation(line: 1519, column: 19, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !2855, line: 1518, column: 39)
!5504 = distinct !DILexicalBlock(scope: !5499, file: !2855, line: 1518, column: 15)
!5505 = !DILocation(line: 1519, column: 17, scope: !5503)
!5506 = !DILocation(line: 1520, column: 4, scope: !5503)
!5507 = !DILocation(line: 1522, column: 4, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !2855, line: 1521, column: 47)
!5509 = distinct !DILexicalBlock(scope: !5475, file: !2855, line: 1521, column: 14)
!5510 = !DILocation(line: 1527, column: 19, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5508, file: !2855, line: 1522, column: 24)
!5512 = !DILocation(line: 1527, column: 17, scope: !5511)
!5513 = !DILocation(line: 1528, column: 5, scope: !5511)
!5514 = !DILocation(line: 0, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5511, file: !2855, line: 1530, column: 9)
!5516 = !DILocation(line: 1540, column: 23, scope: !5511)
!5517 = !DILocation(line: 1539, column: 17, scope: !5511)
!5518 = !DILocation(line: 1542, column: 5, scope: !5511)
!5519 = !DILocation(line: 1545, column: 23, scope: !5511)
!5520 = !DILocation(line: 1544, column: 17, scope: !5511)
!5521 = !DILocation(line: 1547, column: 5, scope: !5511)
!5522 = !DILocation(line: 1551, column: 23, scope: !5511)
!5523 = !DILocation(line: 1551, column: 6, scope: !5511)
!5524 = !DILocation(line: 1550, column: 17, scope: !5511)
!5525 = !DILocation(line: 1552, column: 5, scope: !5511)
!5526 = !DILocation(line: 0, scope: !5511)
!5527 = !DILocation(line: 1554, column: 8, scope: !5508)
!5528 = !DILocation(line: 1555, column: 19, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5530, file: !2855, line: 1554, column: 33)
!5530 = distinct !DILexicalBlock(scope: !5508, file: !2855, line: 1554, column: 8)
!5531 = !DILocation(line: 1555, column: 17, scope: !5529)
!5532 = !DILocation(line: 1556, column: 4, scope: !5529)
!5533 = !DILocation(line: 1557, column: 19, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !2855, line: 1556, column: 39)
!5535 = distinct !DILexicalBlock(scope: !5530, file: !2855, line: 1556, column: 15)
!5536 = !DILocation(line: 1557, column: 17, scope: !5534)
!5537 = !DILocation(line: 1558, column: 4, scope: !5534)
!5538 = !DILocation(line: 0, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !2855, line: 1560, column: 8)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !2855, line: 1559, column: 45)
!5541 = distinct !DILexicalBlock(scope: !5509, file: !2855, line: 1559, column: 14)
!5542 = !DILocation(line: 1566, column: 17, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !2855, line: 1565, column: 46)
!5544 = distinct !DILexicalBlock(scope: !5541, file: !2855, line: 1565, column: 14)
!5545 = !DILocation(line: 1566, column: 15, scope: !5543)
!5546 = !DILocation(line: 1567, column: 3, scope: !5543)
!5547 = !DILocation(line: 1574, column: 21, scope: !5376)
!5548 = !DILocation(line: 1575, column: 4, scope: !5374)
!5549 = !DILocation(line: 0, scope: !5374)
!5550 = !DILocation(line: 1575, column: 4, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5374, file: !2855, line: 1575, column: 4)
!5552 = !DILocation(line: 1582, column: 17, scope: !5312)
!5553 = !DILocation(line: 1582, column: 3, scope: !5312)
!5554 = !DILocation(line: 1584, column: 4, scope: !5378)
!5555 = !DILocation(line: 0, scope: !5378)
!5556 = !DILocation(line: 1584, column: 4, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5378, file: !2855, line: 1584, column: 4)
!5558 = !DILocation(line: 1587, column: 31, scope: !5381)
!5559 = !DILocation(line: 1591, column: 18, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5381, file: !2855, line: 1591, column: 8)
!5561 = !DILocation(line: 1591, column: 8, scope: !5381)
!5562 = !DILocation(line: 1592, column: 11, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5560, file: !2855, line: 1591, column: 24)
!5564 = !DILocation(line: 0, scope: !5381)
!5565 = !DILocation(line: 1593, column: 4, scope: !5563)
!5566 = !DILocation(line: 1594, column: 11, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5560, file: !2855, line: 1593, column: 11)
!5568 = !DILocation(line: 1604, column: 51, scope: !5379)
!5569 = !DILocation(line: 1604, column: 13, scope: !5379)
!5570 = !DILocation(line: 1604, column: 11, scope: !5379)
!5571 = !DILocation(line: 1606, column: 4, scope: !5379)
!5572 = !DILocation(line: 1609, column: 14, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5379, file: !2855, line: 1609, column: 8)
!5574 = !DILocation(line: 1609, column: 8, scope: !5379)
!5575 = !DILocation(line: 1619, column: 18, scope: !5379)
!5576 = !DILocation(line: 1620, column: 13, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5379, file: !2855, line: 1620, column: 8)
!5578 = !DILocation(line: 1620, column: 8, scope: !5379)
!5579 = !DILocation(line: 1622, column: 36, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5577, file: !2855, line: 1620, column: 18)
!5581 = !DILocation(line: 1622, column: 17, scope: !5580)
!5582 = !DILocation(line: 1623, column: 4, scope: !5580)
!5583 = !DILocation(line: 1632, column: 29, scope: !5379)
!5584 = !DILocation(line: 1632, column: 10, scope: !5379)
!5585 = !DILocation(line: 1632, column: 4, scope: !5379)
!5586 = !DILocation(line: 1407, column: 8, scope: !5312)
!5587 = !DILocation(line: 0, scope: !5379)
!5588 = !DILocation(line: 1634, column: 3, scope: !5379)
!5589 = !DILocation(line: 1640, column: 18, scope: !5384)
!5590 = !DILocation(line: 1640, column: 8, scope: !5379)
!5591 = !DILocation(line: 1729, column: 13, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1729, column: 7)
!5593 = !DILocation(line: 1641, column: 22, scope: !5383)
!5594 = !DILocation(line: 0, scope: !5383)
!5595 = !DILocation(line: 1646, column: 21, scope: !5383)
!5596 = !DILocation(line: 1649, column: 13, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5383, file: !2855, line: 1649, column: 9)
!5598 = !DILocation(line: 1649, column: 9, scope: !5383)
!5599 = !DILocation(line: 1650, column: 35, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5597, file: !2855, line: 1649, column: 34)
!5601 = !DILocation(line: 1650, column: 23, scope: !5600)
!5602 = !DILocation(line: 1651, column: 5, scope: !5600)
!5603 = !DILocation(line: 1660, column: 15, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5379, file: !2855, line: 1660, column: 8)
!5605 = !DILocation(line: 1660, column: 19, scope: !5604)
!5606 = !DILocation(line: 1660, column: 8, scope: !5379)
!5607 = !DILocation(line: 1661, column: 23, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5604, file: !2855, line: 1660, column: 28)
!5609 = !DILocation(line: 1661, column: 11, scope: !5608)
!5610 = !DILocation(line: 1665, column: 22, scope: !5608)
!5611 = !DILocation(line: 1666, column: 21, scope: !5608)
!5612 = !DILocation(line: 1668, column: 5, scope: !5608)
!5613 = !DILocation(line: 1677, column: 30, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5615, file: !2855, line: 1676, column: 49)
!5615 = distinct !DILexicalBlock(scope: !5379, file: !2855, line: 1676, column: 8)
!5616 = !DILocation(line: 1677, column: 5, scope: !5614)
!5617 = !DILocation(line: 1680, column: 4, scope: !5379)
!5618 = !DILocation(line: 0, scope: !5560)
!5619 = !DILocation(line: 1597, column: 14, scope: !5381)
!5620 = !DILocation(line: 1699, column: 11, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1699, column: 7)
!5622 = !DILocation(line: 1699, column: 7, scope: !5312)
!5623 = !DILocation(line: 1725, column: 7, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1725, column: 7)
!5625 = !DILocation(line: 1725, column: 12, scope: !5624)
!5626 = !DILocation(line: 1747, column: 13, scope: !5391)
!5627 = !DILocation(line: 1747, column: 7, scope: !5312)
!5628 = !DILocation(line: 1722, column: 24, scope: !5312)
!5629 = !DILocation(line: 1725, column: 7, scope: !5312)
!5630 = !DILocation(line: 1729, column: 7, scope: !5312)
!5631 = !DILocation(line: 1736, column: 13, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5312, file: !2855, line: 1736, column: 7)
!5633 = !DILocation(line: 1735, column: 19, scope: !5312)
!5634 = !DILocation(line: 1736, column: 7, scope: !5312)
!5635 = !DILocation(line: 1748, column: 10, scope: !5390)
!5636 = !DILocation(line: 1750, column: 15, scope: !5389)
!5637 = !DILocation(line: 1750, column: 8, scope: !5390)
!5638 = !DILocation(line: 0, scope: !5388)
!5639 = !DILocation(line: 1756, column: 15, scope: !5397)
!5640 = !DILocation(line: 1756, column: 9, scope: !5388)
!5641 = !DILocation(line: 1758, column: 7, scope: !5393)
!5642 = !DILocation(line: 0, scope: !5393)
!5643 = !DILocation(line: 1758, column: 7, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5393, file: !2855, line: 1758, column: 7)
!5645 = !DILocation(line: 1764, column: 5, scope: !5388)
!5646 = !DILocation(line: 0, scope: !5390)
!5647 = !DILocation(line: 1764, column: 20, scope: !5388)
!5648 = !DILocation(line: 1764, column: 17, scope: !5388)
!5649 = !DILocation(line: 1765, column: 6, scope: !5399)
!5650 = !DILocation(line: 0, scope: !5399)
!5651 = !DILocation(line: 1765, column: 6, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5399, file: !2855, line: 1765, column: 6)
!5653 = distinct !{!5653, !5645, !5654}
!5654 = !DILocation(line: 1766, column: 5, scope: !5388)
!5655 = !DILocation(line: 1773, column: 12, scope: !5404)
!5656 = !DILocation(line: 1773, column: 7, scope: !5312)
!5657 = !DILocation(line: 1773, column: 7, scope: !5404)
!5658 = !DILocation(line: 1774, column: 4, scope: !5402)
!5659 = !DILocation(line: 0, scope: !5402)
!5660 = !DILocation(line: 1774, column: 4, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5402, file: !2855, line: 1774, column: 4)
!5662 = !DILocation(line: 1818, column: 8, scope: !5408)
!5663 = !DILocation(line: 1818, column: 27, scope: !5408)
!5664 = !DILocation(line: 1818, column: 25, scope: !5408)
!5665 = !DILocation(line: 1818, column: 8, scope: !5409)
!5666 = !DILocation(line: 1819, column: 5, scope: !5406)
!5667 = !DILocation(line: 0, scope: !5406)
!5668 = !DILocation(line: 1819, column: 5, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5406, file: !2855, line: 1819, column: 5)
!5670 = !DILocation(line: 1822, column: 14, scope: !5414)
!5671 = !DILocation(line: 1822, column: 8, scope: !5409)
!5672 = !DILocation(line: 1823, column: 5, scope: !5412)
!5673 = !DILocation(line: 0, scope: !5412)
!5674 = !DILocation(line: 1823, column: 5, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5412, file: !2855, line: 1823, column: 5)
!5676 = !DILocation(line: 1826, column: 20, scope: !5409)
!5677 = !DILocation(line: 1827, column: 4, scope: !5409)
!5678 = !DILocation(line: 0, scope: !5409)
!5679 = !DILocation(line: 1827, column: 21, scope: !5409)
!5680 = !DILocation(line: 1827, column: 18, scope: !5409)
!5681 = !DILocation(line: 1828, column: 5, scope: !5416)
!5682 = !DILocation(line: 0, scope: !5416)
!5683 = !DILocation(line: 1828, column: 5, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5416, file: !2855, line: 1828, column: 5)
!5685 = distinct !{!5685, !5677, !5686}
!5686 = !DILocation(line: 1829, column: 4, scope: !5409)
!5687 = !DILocation(line: 1831, column: 4, scope: !5419)
!5688 = !DILocation(line: 0, scope: !5419)
!5689 = !DILocation(line: 1831, column: 4, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5419, file: !2855, line: 1831, column: 4)
!5691 = !DILocation(line: 1835, column: 16, scope: !5312)
!5692 = !DILocation(line: 1835, column: 3, scope: !5312)
!5693 = !DILocation(line: 1836, column: 4, scope: !5421)
!5694 = !DILocation(line: 0, scope: !5421)
!5695 = !DILocation(line: 1836, column: 4, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5421, file: !2855, line: 1836, column: 4)
!5697 = !DILocation(line: 1837, column: 4, scope: !5422)
!5698 = distinct !{!5698, !5692, !5699}
!5699 = !DILocation(line: 1838, column: 3, scope: !5312)
!5700 = !DILocation(line: 1844, column: 1, scope: !5285)
!5701 = distinct !DISubprogram(name: "extract_conversion", scope: !2855, file: !2855, line: 642, type: !5702, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5704)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!105, !5358, !105}
!5704 = !{!5705, !5706}
!5705 = !DILocalVariable(name: "conv", arg: 1, scope: !5701, file: !2855, line: 642, type: !5358)
!5706 = !DILocalVariable(name: "sp", arg: 2, scope: !5701, file: !2855, line: 643, type: !105)
!5707 = !DILocation(line: 0, scope: !5701)
!5708 = !DILocation(line: 645, column: 10, scope: !5701)
!5709 = !DILocation(line: 653, column: 2, scope: !5701)
!5710 = !DILocation(line: 654, column: 6, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5701, file: !2855, line: 654, column: 6)
!5712 = !DILocation(line: 654, column: 10, scope: !5711)
!5713 = !DILocation(line: 654, column: 6, scope: !5701)
!5714 = !DILocation(line: 655, column: 24, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5711, file: !2855, line: 654, column: 18)
!5716 = !DILocation(line: 655, column: 19, scope: !5715)
!5717 = !DILocation(line: 656, column: 3, scope: !5715)
!5718 = !DILocation(line: 659, column: 7, scope: !5701)
!5719 = !DILocation(line: 660, column: 7, scope: !5701)
!5720 = !DILocation(line: 661, column: 7, scope: !5701)
!5721 = !DILocation(line: 662, column: 7, scope: !5701)
!5722 = !DILocation(line: 663, column: 7, scope: !5701)
!5723 = !DILocation(line: 665, column: 2, scope: !5701)
!5724 = !DILocation(line: 666, column: 1, scope: !5701)
!5725 = distinct !DISubprogram(name: "outs", scope: !2855, file: !2855, line: 1319, type: !5726, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5728)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!108, !4477, !104, !105, !105}
!5728 = !{!5729, !5730, !5731, !5732, !5733, !5734}
!5729 = !DILocalVariable(name: "out", arg: 1, scope: !5725, file: !2855, line: 1319, type: !4477)
!5730 = !DILocalVariable(name: "ctx", arg: 2, scope: !5725, file: !2855, line: 1320, type: !104)
!5731 = !DILocalVariable(name: "sp", arg: 3, scope: !5725, file: !2855, line: 1321, type: !105)
!5732 = !DILocalVariable(name: "ep", arg: 4, scope: !5725, file: !2855, line: 1322, type: !105)
!5733 = !DILocalVariable(name: "count", scope: !5725, file: !2855, line: 1324, type: !439)
!5734 = !DILocalVariable(name: "rc", scope: !5735, file: !2855, line: 1327, type: !108)
!5735 = distinct !DILexicalBlock(scope: !5725, file: !2855, line: 1326, column: 45)
!5736 = !DILocation(line: 0, scope: !5725)
!5737 = !DILocation(line: 1326, column: 2, scope: !5725)
!5738 = !DILocation(line: 1324, column: 9, scope: !5725)
!5739 = !DILocation(line: 1326, column: 13, scope: !5725)
!5740 = !DILocation(line: 1326, column: 19, scope: !5725)
!5741 = !DILocation(line: 1327, column: 21, scope: !5735)
!5742 = !DILocation(line: 1326, column: 36, scope: !5725)
!5743 = !DILocation(line: 1326, column: 39, scope: !5725)
!5744 = !DILocation(line: 1327, column: 24, scope: !5735)
!5745 = !DILocation(line: 1327, column: 16, scope: !5735)
!5746 = !DILocation(line: 1327, column: 12, scope: !5735)
!5747 = !DILocation(line: 0, scope: !5735)
!5748 = !DILocation(line: 1329, column: 10, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5735, file: !2855, line: 1329, column: 7)
!5750 = !DILocation(line: 1329, column: 7, scope: !5735)
!5751 = distinct !{!5751, !5737, !5752}
!5752 = !DILocation(line: 1333, column: 2, scope: !5725)
!5753 = !DILocation(line: 1336, column: 1, scope: !5725)
!5754 = distinct !DISubprogram(name: "encode_uint", scope: !2855, file: !2855, line: 788, type: !5755, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5757)
!5755 = !DISubroutineType(types: !5756)
!5756 = !{!443, !2877, !5358, !443, !105}
!5757 = !{!5758, !5759, !5760, !5761, !5762, !5763, !5765, !5766}
!5758 = !DILocalVariable(name: "value", arg: 1, scope: !5754, file: !2855, line: 788, type: !2877)
!5759 = !DILocalVariable(name: "conv", arg: 2, scope: !5754, file: !2855, line: 789, type: !5358)
!5760 = !DILocalVariable(name: "bps", arg: 3, scope: !5754, file: !2855, line: 790, type: !443)
!5761 = !DILocalVariable(name: "bpe", arg: 4, scope: !5754, file: !2855, line: 791, type: !105)
!5762 = !DILocalVariable(name: "upcase", scope: !5754, file: !2855, line: 793, type: !422)
!5763 = !DILocalVariable(name: "radix", scope: !5754, file: !2855, line: 794, type: !5764)
!5764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5765 = !DILocalVariable(name: "bp", scope: !5754, file: !2855, line: 795, type: !443)
!5766 = !DILocalVariable(name: "lsv", scope: !5767, file: !2855, line: 798, type: !32)
!5767 = distinct !DILexicalBlock(scope: !5754, file: !2855, line: 797, column: 5)
!5768 = !DILocation(line: 0, scope: !5754)
!5769 = !DILocation(line: 793, column: 35, scope: !5754)
!5770 = !DILocation(line: 793, column: 24, scope: !5754)
!5771 = !DILocation(line: 793, column: 16, scope: !5754)
!5772 = !DILocation(line: 794, column: 29, scope: !5754)
!5773 = !DILocation(line: 795, column: 24, scope: !5754)
!5774 = !DILocation(line: 795, column: 17, scope: !5754)
!5775 = !DILocation(line: 797, column: 2, scope: !5754)
!5776 = !DILocation(line: 802, column: 9, scope: !5767)
!5777 = !DILocation(line: 798, column: 22, scope: !5767)
!5778 = !DILocation(line: 0, scope: !5767)
!5779 = !DILocation(line: 800, column: 16, scope: !5767)
!5780 = !DILocation(line: 800, column: 11, scope: !5767)
!5781 = !DILocation(line: 800, column: 4, scope: !5767)
!5782 = !DILocation(line: 800, column: 9, scope: !5767)
!5783 = !DILocation(line: 803, column: 18, scope: !5754)
!5784 = !DILocation(line: 803, column: 24, scope: !5754)
!5785 = !DILocation(line: 803, column: 2, scope: !5767)
!5786 = distinct !{!5786, !5775, !5787}
!5787 = !DILocation(line: 803, column: 37, scope: !5754)
!5788 = !DILocation(line: 808, column: 12, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5754, file: !2855, line: 808, column: 6)
!5790 = !DILocation(line: 808, column: 6, scope: !5754)
!5791 = !DILocation(line: 809, column: 7, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5789, file: !2855, line: 808, column: 23)
!5793 = !DILocation(line: 813, column: 3, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !2855, line: 811, column: 27)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !2855, line: 811, column: 14)
!5796 = distinct !DILexicalBlock(scope: !5792, file: !2855, line: 809, column: 7)
!5797 = !DILocation(line: 0, scope: !5796)
!5798 = !DILocation(line: 818, column: 2, scope: !5754)
!5799 = distinct !DISubprogram(name: "store_count", scope: !2855, file: !2855, line: 1280, type: !5800, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5804)
!5800 = !DISubroutineType(types: !5801)
!5801 = !{null, !5802, !104, !108}
!5802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 32)
!5803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5325)
!5804 = !{!5805, !5806, !5807}
!5805 = !DILocalVariable(name: "conv", arg: 1, scope: !5799, file: !2855, line: 1280, type: !5802)
!5806 = !DILocalVariable(name: "dp", arg: 2, scope: !5799, file: !2855, line: 1281, type: !104)
!5807 = !DILocalVariable(name: "count", arg: 3, scope: !5799, file: !2855, line: 1282, type: !108)
!5808 = !DILocation(line: 0, scope: !5799)
!5809 = !DILocation(line: 1284, column: 38, scope: !5799)
!5810 = !DILocation(line: 1284, column: 2, scope: !5799)
!5811 = !DILocation(line: 1286, column: 4, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5799, file: !2855, line: 1284, column: 50)
!5813 = !DILocation(line: 1286, column: 14, scope: !5812)
!5814 = !DILocation(line: 1287, column: 3, scope: !5812)
!5815 = !DILocation(line: 1289, column: 24, scope: !5812)
!5816 = !DILocation(line: 1289, column: 22, scope: !5812)
!5817 = !DILocation(line: 1290, column: 3, scope: !5812)
!5818 = !DILocation(line: 1292, column: 18, scope: !5812)
!5819 = !DILocation(line: 1292, column: 4, scope: !5812)
!5820 = !DILocation(line: 1292, column: 16, scope: !5812)
!5821 = !DILocation(line: 1293, column: 3, scope: !5812)
!5822 = !DILocation(line: 1295, column: 4, scope: !5812)
!5823 = !DILocation(line: 1295, column: 15, scope: !5812)
!5824 = !DILocation(line: 1296, column: 3, scope: !5812)
!5825 = !DILocation(line: 1298, column: 22, scope: !5812)
!5826 = !DILocation(line: 1298, column: 4, scope: !5812)
!5827 = !DILocation(line: 1298, column: 20, scope: !5812)
!5828 = !DILocation(line: 1299, column: 3, scope: !5812)
!5829 = !DILocation(line: 1301, column: 21, scope: !5812)
!5830 = !DILocation(line: 1301, column: 4, scope: !5812)
!5831 = !DILocation(line: 1301, column: 19, scope: !5812)
!5832 = !DILocation(line: 1302, column: 3, scope: !5812)
!5833 = !DILocation(line: 1304, column: 4, scope: !5812)
!5834 = !DILocation(line: 1304, column: 17, scope: !5812)
!5835 = !DILocation(line: 1305, column: 3, scope: !5812)
!5836 = !DILocation(line: 1307, column: 4, scope: !5812)
!5837 = !DILocation(line: 1307, column: 20, scope: !5812)
!5838 = !DILocation(line: 1308, column: 3, scope: !5812)
!5839 = !DILocation(line: 1316, column: 1, scope: !5799)
!5840 = distinct !DISubprogram(name: "isupper", scope: !5841, file: !5841, line: 16, type: !555, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5842)
!5841 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5842 = !{!5843}
!5843 = !DILocalVariable(name: "a", arg: 1, scope: !5840, file: !5841, line: 16, type: !108)
!5844 = !DILocation(line: 0, scope: !5840)
!5845 = !DILocation(line: 18, column: 29, scope: !5840)
!5846 = !DILocation(line: 18, column: 45, scope: !5840)
!5847 = !DILocation(line: 18, column: 2, scope: !5840)
!5848 = distinct !DISubprogram(name: "conversion_radix", scope: !2855, file: !2855, line: 761, type: !5849, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5851)
!5849 = !DISubroutineType(types: !5850)
!5850 = !{!439, !107}
!5851 = !{!5852}
!5852 = !DILocalVariable(name: "specifier", arg: 1, scope: !5848, file: !2855, line: 761, type: !107)
!5853 = !DILocation(line: 0, scope: !5848)
!5854 = !DILocation(line: 763, column: 2, scope: !5848)
!5855 = !DILocation(line: 770, column: 3, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5848, file: !2855, line: 763, column: 21)
!5857 = !DILocation(line: 774, column: 3, scope: !5856)
!5858 = !DILocation(line: 0, scope: !5856)
!5859 = !DILocation(line: 776, column: 1, scope: !5848)
!5860 = distinct !DISubprogram(name: "extract_flags", scope: !2855, file: !2855, line: 339, type: !5702, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5861)
!5861 = !{!5862, !5863, !5864}
!5862 = !DILocalVariable(name: "conv", arg: 1, scope: !5860, file: !2855, line: 339, type: !5358)
!5863 = !DILocalVariable(name: "sp", arg: 2, scope: !5860, file: !2855, line: 340, type: !105)
!5864 = !DILocalVariable(name: "loop", scope: !5860, file: !2855, line: 342, type: !422)
!5865 = !DILocation(line: 0, scope: !5860)
!5866 = !DILocation(line: 344, column: 2, scope: !5860)
!5867 = !DILocation(line: 345, column: 11, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5860, file: !2855, line: 344, column: 5)
!5869 = !DILocation(line: 345, column: 3, scope: !5868)
!5870 = !DILocation(line: 351, column: 4, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5868, file: !2855, line: 345, column: 16)
!5872 = !DILocation(line: 354, column: 4, scope: !5871)
!5873 = !DILocation(line: 357, column: 4, scope: !5871)
!5874 = !DILocation(line: 360, column: 4, scope: !5871)
!5875 = !DILocation(line: 0, scope: !5871)
!5876 = !DILocation(line: 370, column: 12, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5860, file: !2855, line: 370, column: 6)
!5878 = !DILocation(line: 370, column: 22, scope: !5877)
!5879 = !DILocation(line: 371, column: 19, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5877, file: !2855, line: 370, column: 42)
!5881 = !DILocation(line: 372, column: 2, scope: !5880)
!5882 = !DILocation(line: 376, column: 2, scope: !5860)
!5883 = distinct !DISubprogram(name: "extract_width", scope: !2855, file: !2855, line: 388, type: !5702, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5884)
!5884 = !{!5885, !5886, !5887, !5888}
!5885 = !DILocalVariable(name: "conv", arg: 1, scope: !5883, file: !2855, line: 388, type: !5358)
!5886 = !DILocalVariable(name: "sp", arg: 2, scope: !5883, file: !2855, line: 389, type: !105)
!5887 = !DILocalVariable(name: "wp", scope: !5883, file: !2855, line: 398, type: !105)
!5888 = !DILocalVariable(name: "width", scope: !5883, file: !2855, line: 399, type: !439)
!5889 = !DILocation(line: 0, scope: !5883)
!5890 = !DILocation(line: 391, column: 8, scope: !5883)
!5891 = !DILocation(line: 391, column: 22, scope: !5883)
!5892 = !DILocation(line: 393, column: 6, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5883, file: !2855, line: 393, column: 6)
!5894 = !DILocation(line: 393, column: 10, scope: !5893)
!5895 = !DILocation(line: 393, column: 6, scope: !5883)
!5896 = !DILocation(line: 394, column: 20, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !2855, line: 393, column: 18)
!5898 = !DILocation(line: 395, column: 10, scope: !5897)
!5899 = !DILocation(line: 395, column: 3, scope: !5897)
!5900 = !DILocation(line: 399, column: 17, scope: !5883)
!5901 = !DILocation(line: 401, column: 6, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5883, file: !2855, line: 401, column: 6)
!5903 = !DILocation(line: 401, column: 9, scope: !5902)
!5904 = !DILocation(line: 401, column: 6, scope: !5883)
!5905 = !DILocation(line: 402, column: 23, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5902, file: !2855, line: 401, column: 16)
!5907 = !DILocation(line: 403, column: 9, scope: !5906)
!5908 = !DILocation(line: 403, column: 21, scope: !5906)
!5909 = !DILocation(line: 405, column: 11, scope: !5906)
!5910 = !DILocation(line: 404, column: 21, scope: !5906)
!5911 = !DILocation(line: 406, column: 2, scope: !5906)
!5912 = !DILocation(line: 409, column: 1, scope: !5883)
!5913 = distinct !DISubprogram(name: "extract_prec", scope: !2855, file: !2855, line: 420, type: !5702, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5914)
!5914 = !{!5915, !5916, !5917}
!5915 = !DILocalVariable(name: "conv", arg: 1, scope: !5913, file: !2855, line: 420, type: !5358)
!5916 = !DILocalVariable(name: "sp", arg: 2, scope: !5913, file: !2855, line: 421, type: !105)
!5917 = !DILocalVariable(name: "prec", scope: !5913, file: !2855, line: 435, type: !439)
!5918 = !DILocation(line: 0, scope: !5913)
!5919 = !DILocation(line: 423, column: 24, scope: !5913)
!5920 = !DILocation(line: 423, column: 28, scope: !5913)
!5921 = !DILocation(line: 423, column: 8, scope: !5913)
!5922 = !DILocation(line: 423, column: 21, scope: !5913)
!5923 = !DILocation(line: 425, column: 6, scope: !5913)
!5924 = !DILocation(line: 428, column: 2, scope: !5913)
!5925 = !DILocation(line: 430, column: 6, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5913, file: !2855, line: 430, column: 6)
!5927 = !DILocation(line: 430, column: 10, scope: !5926)
!5928 = !DILocation(line: 430, column: 6, scope: !5913)
!5929 = !DILocation(line: 431, column: 19, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5926, file: !2855, line: 430, column: 18)
!5931 = !DILocation(line: 432, column: 10, scope: !5930)
!5932 = !DILocation(line: 432, column: 3, scope: !5930)
!5933 = !DILocation(line: 435, column: 16, scope: !5913)
!5934 = !DILocation(line: 437, column: 8, scope: !5913)
!5935 = !DILocation(line: 437, column: 19, scope: !5913)
!5936 = !DILocation(line: 439, column: 10, scope: !5913)
!5937 = !DILocation(line: 438, column: 20, scope: !5913)
!5938 = !DILocation(line: 441, column: 9, scope: !5913)
!5939 = !DILocation(line: 442, column: 1, scope: !5913)
!5940 = distinct !DISubprogram(name: "extract_length", scope: !2855, file: !2855, line: 453, type: !5702, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5941)
!5941 = !{!5942, !5943}
!5942 = !DILocalVariable(name: "conv", arg: 1, scope: !5940, file: !2855, line: 453, type: !5358)
!5943 = !DILocalVariable(name: "sp", arg: 2, scope: !5940, file: !2855, line: 454, type: !105)
!5944 = !DILocation(line: 0, scope: !5940)
!5945 = !DILocation(line: 456, column: 10, scope: !5940)
!5946 = !DILocation(line: 456, column: 2, scope: !5940)
!5947 = !DILocation(line: 458, column: 8, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5949, file: !2855, line: 458, column: 7)
!5949 = distinct !DILexicalBlock(scope: !5940, file: !2855, line: 456, column: 15)
!5950 = !DILocation(line: 458, column: 7, scope: !5948)
!5951 = !DILocation(line: 458, column: 13, scope: !5948)
!5952 = !DILocation(line: 0, scope: !5948)
!5953 = !DILocation(line: 458, column: 7, scope: !5949)
!5954 = !DILocation(line: 459, column: 21, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5948, file: !2855, line: 458, column: 21)
!5956 = !DILocation(line: 460, column: 4, scope: !5955)
!5957 = !DILocation(line: 461, column: 3, scope: !5955)
!5958 = !DILocation(line: 462, column: 21, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5948, file: !2855, line: 461, column: 10)
!5960 = !DILocation(line: 466, column: 8, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5949, file: !2855, line: 466, column: 7)
!5962 = !DILocation(line: 466, column: 7, scope: !5961)
!5963 = !DILocation(line: 466, column: 13, scope: !5961)
!5964 = !DILocation(line: 0, scope: !5961)
!5965 = !DILocation(line: 466, column: 7, scope: !5949)
!5966 = !DILocation(line: 467, column: 21, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5961, file: !2855, line: 466, column: 21)
!5968 = !DILocation(line: 468, column: 4, scope: !5967)
!5969 = !DILocation(line: 469, column: 3, scope: !5967)
!5970 = !DILocation(line: 470, column: 21, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5961, file: !2855, line: 469, column: 10)
!5972 = !DILocation(line: 474, column: 9, scope: !5949)
!5973 = !DILocation(line: 474, column: 20, scope: !5949)
!5974 = !DILocation(line: 475, column: 3, scope: !5949)
!5975 = !DILocation(line: 476, column: 3, scope: !5949)
!5976 = !DILocation(line: 478, column: 9, scope: !5949)
!5977 = !DILocation(line: 478, column: 20, scope: !5949)
!5978 = !DILocation(line: 479, column: 3, scope: !5949)
!5979 = !DILocation(line: 480, column: 3, scope: !5949)
!5980 = !DILocation(line: 482, column: 9, scope: !5949)
!5981 = !DILocation(line: 482, column: 20, scope: !5949)
!5982 = !DILocation(line: 483, column: 3, scope: !5949)
!5983 = !DILocation(line: 484, column: 3, scope: !5949)
!5984 = !DILocation(line: 486, column: 9, scope: !5949)
!5985 = !DILocation(line: 486, column: 20, scope: !5949)
!5986 = !DILocation(line: 487, column: 3, scope: !5949)
!5987 = !DILocation(line: 492, column: 21, scope: !5949)
!5988 = !DILocation(line: 493, column: 3, scope: !5949)
!5989 = !DILocation(line: 495, column: 9, scope: !5949)
!5990 = !DILocation(line: 495, column: 20, scope: !5949)
!5991 = !DILocation(line: 496, column: 3, scope: !5949)
!5992 = !DILocation(line: 498, column: 2, scope: !5940)
!5993 = distinct !DISubprogram(name: "extract_specifier", scope: !2855, file: !2855, line: 513, type: !5702, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !5994)
!5994 = !{!5995, !5996, !5997, !5998}
!5995 = !DILocalVariable(name: "conv", arg: 1, scope: !5993, file: !2855, line: 513, type: !5358)
!5996 = !DILocalVariable(name: "sp", arg: 2, scope: !5993, file: !2855, line: 514, type: !105)
!5997 = !DILocalVariable(name: "unsupported", scope: !5993, file: !2855, line: 516, type: !422)
!5998 = !DILabel(scope: !5999, name: "int_conv", file: !2855, line: 526)
!5999 = distinct !DILexicalBlock(scope: !5993, file: !2855, line: 520, column: 27)
!6000 = !DILocation(line: 0, scope: !5993)
!6001 = !DILocation(line: 518, column: 20, scope: !5993)
!6002 = !DILocation(line: 518, column: 8, scope: !5993)
!6003 = !DILocation(line: 518, column: 18, scope: !5993)
!6004 = !DILocation(line: 520, column: 2, scope: !5993)
!6005 = !DILocation(line: 525, column: 3, scope: !5999)
!6006 = !DILocation(line: 0, scope: !5999)
!6007 = !DILocation(line: 526, column: 1, scope: !5999)
!6008 = !DILocation(line: 528, column: 24, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5999, file: !2855, line: 528, column: 7)
!6010 = !DILocation(line: 528, column: 7, scope: !5999)
!6011 = !DILocation(line: 535, column: 23, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5999, file: !2855, line: 535, column: 7)
!6013 = !DILocation(line: 535, column: 7, scope: !5999)
!6014 = !DILocation(line: 536, column: 36, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6012, file: !2855, line: 535, column: 31)
!6016 = !DILocation(line: 537, column: 3, scope: !6015)
!6017 = !DILocation(line: 570, column: 9, scope: !5999)
!6018 = !DILocation(line: 570, column: 23, scope: !5999)
!6019 = !DILocation(line: 575, column: 4, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6021, file: !2855, line: 573, column: 48)
!6021 = distinct !DILexicalBlock(scope: !5999, file: !2855, line: 573, column: 7)
!6022 = !DILocation(line: 603, column: 9, scope: !5999)
!6023 = !DILocation(line: 603, column: 23, scope: !5999)
!6024 = !DILocation(line: 605, column: 24, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !5999, file: !2855, line: 605, column: 7)
!6026 = !DILocation(line: 605, column: 7, scope: !5999)
!6027 = !DILocation(line: 612, column: 9, scope: !5999)
!6028 = !DILocation(line: 612, column: 23, scope: !5999)
!6029 = !DILocation(line: 619, column: 24, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !5999, file: !2855, line: 619, column: 7)
!6031 = !DILocation(line: 619, column: 7, scope: !5999)
!6032 = !DILocation(line: 625, column: 9, scope: !5999)
!6033 = !DILocation(line: 625, column: 17, scope: !5999)
!6034 = !DILocation(line: 626, column: 3, scope: !5999)
!6035 = !DILocation(line: 629, column: 20, scope: !5993)
!6036 = !DILocation(line: 629, column: 8, scope: !5993)
!6037 = !DILocation(line: 518, column: 23, scope: !5993)
!6038 = !DILocation(line: 631, column: 2, scope: !5993)
!6039 = distinct !DISubprogram(name: "extract_decimal", scope: !2855, file: !2855, line: 318, type: !6040, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !6042)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{!439, !535}
!6042 = !{!6043, !6044, !6045}
!6043 = !DILocalVariable(name: "str", arg: 1, scope: !6039, file: !2855, line: 318, type: !535)
!6044 = !DILocalVariable(name: "sp", scope: !6039, file: !2855, line: 320, type: !105)
!6045 = !DILocalVariable(name: "val", scope: !6039, file: !2855, line: 321, type: !439)
!6046 = !DILocation(line: 0, scope: !6039)
!6047 = !DILocation(line: 320, column: 19, scope: !6039)
!6048 = !DILocation(line: 323, column: 37, scope: !6039)
!6049 = !DILocation(line: 323, column: 17, scope: !6039)
!6050 = !DILocation(line: 323, column: 9, scope: !6039)
!6051 = !DILocation(line: 323, column: 2, scope: !6039)
!6052 = !DILocation(line: 324, column: 13, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6039, file: !2855, line: 323, column: 43)
!6054 = !DILocation(line: 324, column: 24, scope: !6053)
!6055 = !DILocation(line: 324, column: 19, scope: !6053)
!6056 = !DILocation(line: 324, column: 27, scope: !6053)
!6057 = distinct !{!6057, !6051, !6058}
!6058 = !DILocation(line: 325, column: 2, scope: !6039)
!6059 = !DILocation(line: 326, column: 7, scope: !6039)
!6060 = !DILocation(line: 327, column: 2, scope: !6039)
!6061 = distinct !DISubprogram(name: "isdigit", scope: !5841, file: !5841, line: 43, type: !555, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !6062)
!6062 = !{!6063}
!6063 = !DILocalVariable(name: "a", arg: 1, scope: !6061, file: !5841, line: 43, type: !108)
!6064 = !DILocation(line: 0, scope: !6061)
!6065 = !DILocation(line: 45, column: 29, scope: !6061)
!6066 = !DILocation(line: 45, column: 45, scope: !6061)
!6067 = !DILocation(line: 45, column: 2, scope: !6061)
!6068 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6069, file: !6069, line: 9, type: !3381, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !437)
!6069 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!6070 = !DILocation(line: 11, column: 1, scope: !6068)
!6071 = !{i64 2147564181, i64 2147564224, i64 2147564264}
!6072 = !DILocation(line: 12, column: 1, scope: !6068)
!6073 = !{i64 2147568408, i64 2147568451, i64 2147568491}
!6074 = !DILocation(line: 13, column: 1, scope: !6068)
!6075 = !{i64 2147568617, i64 2147568660, i64 2147568700}
!6076 = !DILocation(line: 14, column: 1, scope: !6068)
!6077 = !{i64 2147568786, i64 2147568829, i64 2147568869}
!6078 = !DILocation(line: 15, column: 1, scope: !6068)
!6079 = !{i64 2147568949, i64 2147568992, i64 2147569032}
!6080 = !DILocation(line: 16, column: 1, scope: !6068)
!6081 = !{i64 2147569133, i64 2147569176, i64 2147569216}
!6082 = !DILocation(line: 17, column: 1, scope: !6068)
!6083 = !{i64 2147569312, i64 2147569355, i64 2147569395}
!6084 = !DILocation(line: 18, column: 1, scope: !6068)
!6085 = !{i64 2147569554, i64 2147569597, i64 2147569637}
!6086 = !DILocation(line: 19, column: 1, scope: !6068)
!6087 = !{i64 2147569789, i64 2147569832, i64 2147569872}
!6088 = !DILocation(line: 20, column: 1, scope: !6068)
!6089 = !{i64 2147569975, i64 2147570018, i64 2147570058}
!6090 = !DILocation(line: 21, column: 1, scope: !6068)
!6091 = !{i64 2147570191, i64 2147570234, i64 2147570274}
!6092 = !DILocation(line: 22, column: 1, scope: !6068)
!6093 = !{i64 2147570394, i64 2147570437, i64 2147570477}
!6094 = !DILocation(line: 23, column: 1, scope: !6068)
!6095 = !{i64 2147570597, i64 2147570640, i64 2147570680}
!6096 = !DILocation(line: 24, column: 1, scope: !6068)
!6097 = !{i64 2147570772, i64 2147570815, i64 2147570855}
!6098 = !DILocation(line: 25, column: 1, scope: !6068)
!6099 = !{i64 2147570980, i64 2147571023, i64 2147571063}
!6100 = !DILocation(line: 26, column: 1, scope: !6068)
!6101 = !{i64 2147571184, i64 2147571227, i64 2147571267}
!6102 = !DILocation(line: 27, column: 1, scope: !6068)
!6103 = !{i64 2147571377, i64 2147571420, i64 2147571460}
!6104 = !DILocation(line: 28, column: 1, scope: !6068)
!6105 = !{i64 2147571579, i64 2147571622, i64 2147571662}
!6106 = !DILocation(line: 29, column: 1, scope: !6068)
!6107 = !{i64 2147571778, i64 2147571821, i64 2147571861}
!6108 = !DILocation(line: 30, column: 1, scope: !6068)
!6109 = !{i64 2147572005, i64 2147572048, i64 2147572088}
!6110 = !DILocation(line: 31, column: 1, scope: !6068)
!6111 = !{i64 2147572207, i64 2147572250, i64 2147572290}
!6112 = !DILocation(line: 32, column: 1, scope: !6068)
!6113 = !{i64 2147572422, i64 2147572465, i64 2147572505}
!6114 = !DILocation(line: 33, column: 1, scope: !6068)
!6115 = !{i64 2147572594, i64 2147572637, i64 2147572677}
!6116 = !DILocation(line: 34, column: 1, scope: !6068)
!6117 = !{i64 2147572796, i64 2147572839, i64 2147572879}
!6118 = !DILocation(line: 35, column: 1, scope: !6068)
!6119 = !{i64 2147573022, i64 2147573065, i64 2147573105}
!6120 = !DILocation(line: 36, column: 1, scope: !6068)
!6121 = !{i64 2147573221, i64 2147573264, i64 2147573304}
!6122 = !DILocation(line: 37, column: 1, scope: !6068)
!6123 = !{i64 2147573396, i64 2147573439, i64 2147573479}
!6124 = !DILocation(line: 38, column: 1, scope: !6068)
!6125 = !{i64 2147573649, i64 2147573692, i64 2147573732}
!6126 = !DILocation(line: 39, column: 1, scope: !6068)
!6127 = !{i64 2147573887, i64 2147573930, i64 2147573970}
!6128 = !DILocation(line: 40, column: 1, scope: !6068)
!6129 = !{i64 2147574122, i64 2147574165, i64 2147574205}
!6130 = !DILocation(line: 41, column: 1, scope: !6068)
!6131 = !{i64 2147574354, i64 2147574397, i64 2147574437}
!6132 = !DILocation(line: 42, column: 1, scope: !6068)
!6133 = !{i64 2147574580, i64 2147574623, i64 2147574663}
!6134 = !DILocation(line: 43, column: 1, scope: !6068)
!6135 = !{i64 2147574839, i64 2147574882, i64 2147574922}
!6136 = !DILocation(line: 44, column: 1, scope: !6068)
!6137 = !{i64 2147575065, i64 2147575108, i64 2147575148}
!6138 = !DILocation(line: 45, column: 1, scope: !6068)
!6139 = !{i64 2147575306, i64 2147575349, i64 2147575389}
!6140 = !DILocation(line: 46, column: 1, scope: !6068)
!6141 = !{i64 2147575550, i64 2147575593, i64 2147575633}
!6142 = !DILocation(line: 47, column: 1, scope: !6068)
!6143 = !{i64 2147575791, i64 2147575834, i64 2147575874}
!6144 = !DILocation(line: 48, column: 1, scope: !6068)
!6145 = !{i64 2147576026, i64 2147576069, i64 2147576109}
!6146 = !DILocation(line: 49, column: 1, scope: !6068)
!6147 = !{i64 2147576252, i64 2147576295, i64 2147576335}
!6148 = !DILocation(line: 50, column: 1, scope: !6068)
!6149 = !{i64 2147576478, i64 2147576521, i64 2147576561}
!6150 = !DILocation(line: 51, column: 1, scope: !6068)
!6151 = !{i64 2147576722, i64 2147576765, i64 2147576805}
!6152 = !DILocation(line: 52, column: 1, scope: !6068)
!6153 = !{i64 2147576960, i64 2147577003, i64 2147577043}
!6154 = !DILocation(line: 53, column: 1, scope: !6068)
!6155 = !{i64 2147581295, i64 2147581338, i64 2147581378}
!6156 = !DILocation(line: 54, column: 1, scope: !6068)
!6157 = !{i64 2147581533, i64 2147581576, i64 2147581616}
!6158 = !DILocation(line: 55, column: 1, scope: !6068)
!6159 = !{i64 2147581777, i64 2147581820, i64 2147581860}
!6160 = !DILocation(line: 56, column: 1, scope: !6068)
!6161 = !{i64 2147582027, i64 2147582070, i64 2147582110}
!6162 = !DILocation(line: 57, column: 1, scope: !6068)
!6163 = !{i64 2147582274, i64 2147582317, i64 2147582357}
!6164 = !DILocation(line: 58, column: 1, scope: !6068)
!6165 = !{i64 2147582509, i64 2147582552, i64 2147582592}
!6166 = !DILocation(line: 59, column: 1, scope: !6068)
!6167 = !{i64 2147582744, i64 2147582787, i64 2147582827}
!6168 = !DILocation(line: 60, column: 1, scope: !6068)
!6169 = !{i64 2147582979, i64 2147583022, i64 2147583062}
!6170 = !DILocation(line: 61, column: 1, scope: !6068)
!6171 = !{i64 2147583217, i64 2147583260, i64 2147583300}
!6172 = !DILocation(line: 62, column: 1, scope: !6068)
!6173 = !{i64 2147583458, i64 2147583501, i64 2147583541}
!6174 = !DILocation(line: 63, column: 1, scope: !6068)
!6175 = !{i64 2147583717, i64 2147583760, i64 2147583800}
!6176 = !DILocation(line: 64, column: 1, scope: !6068)
!6177 = !{i64 2147583997, i64 2147584040, i64 2147584080}
!6178 = !DILocation(line: 65, column: 1, scope: !6068)
!6179 = !{i64 2147584226, i64 2147584269, i64 2147584309}
!6180 = !DILocation(line: 66, column: 1, scope: !6068)
!6181 = !{i64 2147584455, i64 2147584498, i64 2147584538}
!6182 = !DILocation(line: 67, column: 1, scope: !6068)
!6183 = !{i64 2147584663, i64 2147584706, i64 2147584746}
!6184 = !DILocation(line: 68, column: 1, scope: !6068)
!6185 = !{i64 2147584874, i64 2147584917, i64 2147584957}
!6186 = !DILocation(line: 69, column: 1, scope: !6068)
!6187 = !{i64 2147585109, i64 2147585152, i64 2147585192}
!6188 = !DILocation(line: 70, column: 1, scope: !6068)
!6189 = !{i64 2147585338, i64 2147585381, i64 2147585421}
!6190 = !DILocation(line: 71, column: 1, scope: !6068)
!6191 = !{i64 2147585555, i64 2147585598, i64 2147585638}
!6192 = !DILocation(line: 72, column: 1, scope: !6068)
!6193 = !{i64 2147585784, i64 2147585827, i64 2147585867}
!6194 = !DILocation(line: 73, column: 1, scope: !6068)
!6195 = !{i64 2147586022, i64 2147586065, i64 2147586105}
!6196 = !DILocation(line: 74, column: 1, scope: !6068)
!6197 = !{i64 2147586254, i64 2147586297, i64 2147586337}
!6198 = !DILocation(line: 75, column: 1, scope: !6068)
!6199 = !{i64 2147586480, i64 2147586523, i64 2147586563}
!6200 = !DILocation(line: 76, column: 1, scope: !6068)
!6201 = !{i64 2147586697, i64 2147586740, i64 2147586780}
!6202 = !DILocation(line: 77, column: 1, scope: !6068)
!6203 = !{i64 2147586929, i64 2147586972, i64 2147587012}
!6204 = !DILocation(line: 78, column: 1, scope: !6068)
!6205 = !{i64 2147587155, i64 2147587198, i64 2147587238}
!6206 = !DILocation(line: 79, column: 1, scope: !6068)
!6207 = !{i64 2147587369, i64 2147587412, i64 2147587452}
!6208 = !DILocation(line: 80, column: 1, scope: !6068)
!6209 = !{i64 2147587589, i64 2147587632, i64 2147587672}
!6210 = !DILocation(line: 81, column: 1, scope: !6068)
!6211 = !{i64 2147587821, i64 2147587864, i64 2147587904}
!6212 = !DILocation(line: 82, column: 1, scope: !6068)
!6213 = !{i64 2147588029, i64 2147588072, i64 2147588112}
!6214 = !DILocation(line: 83, column: 1, scope: !6068)
!6215 = !{i64 2147588234, i64 2147588277, i64 2147588317}
!6216 = !DILocation(line: 84, column: 1, scope: !6068)
!6217 = !{i64 2147588451, i64 2147588494, i64 2147588534}
!6218 = !DILocation(line: 85, column: 1, scope: !6068)
!6219 = !{i64 2147588665, i64 2147588708, i64 2147588748}
!6220 = !DILocation(line: 86, column: 1, scope: !6068)
!6221 = !{i64 2147588891, i64 2147588934, i64 2147588974}
!6222 = !DILocation(line: 87, column: 1, scope: !6068)
!6223 = !{i64 2147589111, i64 2147589154, i64 2147589194}
!6224 = !DILocation(line: 88, column: 1, scope: !6068)
!6225 = !{i64 2147593377, i64 2147593420, i64 2147593460}
!6226 = !DILocation(line: 89, column: 1, scope: !6068)
!6227 = !{i64 2147593609, i64 2147593652, i64 2147593692}
!6228 = !DILocation(line: 90, column: 1, scope: !6068)
!6229 = !{i64 2147593844, i64 2147593887, i64 2147593927}
!6230 = !DILocation(line: 91, column: 1, scope: !6068)
!6231 = !{i64 2147594094, i64 2147594137, i64 2147594177}
!6232 = !DILocation(line: 92, column: 1, scope: !6068)
!6233 = !{i64 2147594344, i64 2147594387, i64 2147594427}
!6234 = !DILocation(line: 93, column: 1, scope: !6068)
!6235 = !{i64 2147594582, i64 2147594625, i64 2147594665}
!6236 = !DILocation(line: 94, column: 1, scope: !6068)
!6237 = !{i64 2147594793, i64 2147594836, i64 2147594876}
!6238 = !DILocation(line: 95, column: 1, scope: !6068)
!6239 = !{i64 2147595010, i64 2147595053, i64 2147595093}
!6240 = !DILocation(line: 96, column: 1, scope: !6068)
!6241 = !{i64 2147595206, i64 2147595249, i64 2147595289}
!6242 = !DILocation(line: 97, column: 1, scope: !6068)
!6243 = !{i64 2147595408, i64 2147595451, i64 2147595491}
!6244 = !DILocation(line: 98, column: 1, scope: !6068)
!6245 = !{i64 2147595601, i64 2147595644, i64 2147595684}
!6246 = !DILocation(line: 99, column: 1, scope: !6068)
!6247 = !{i64 2147595809, i64 2147595852, i64 2147595892}
!6248 = !DILocation(line: 100, column: 1, scope: !6068)
!6249 = !{i64 2147596005, i64 2147596048, i64 2147596088}
!6250 = !DILocation(line: 101, column: 1, scope: !6068)
!6251 = !{i64 2147596210, i64 2147596253, i64 2147596293}
!6252 = !DILocation(line: 102, column: 1, scope: !6068)
!6253 = !{i64 2147596421, i64 2147596464, i64 2147596504}
!6254 = !DILocation(line: 103, column: 1, scope: !6068)
!6255 = !{i64 2147596620, i64 2147596663, i64 2147596703}
!6256 = !DILocation(line: 104, column: 1, scope: !6068)
!6257 = !{i64 2147596795, i64 2147596838, i64 2147596878}
!6258 = !DILocation(line: 105, column: 1, scope: !6068)
!6259 = !{i64 2147596979, i64 2147597022, i64 2147597062}
!6260 = !DILocation(line: 106, column: 1, scope: !6068)
!6261 = !{i64 2147597181, i64 2147597224, i64 2147597264}
!6262 = !DILocation(line: 107, column: 1, scope: !6068)
!6263 = !{i64 2147597383, i64 2147597426, i64 2147597466}
!6264 = !DILocation(line: 108, column: 1, scope: !6068)
!6265 = !{i64 2147597588, i64 2147597631, i64 2147597671}
!6266 = !DILocation(line: 109, column: 1, scope: !6068)
!6267 = !{i64 2147597781, i64 2147597824, i64 2147597864}
!6268 = !DILocation(line: 110, column: 1, scope: !6068)
!6269 = !{i64 2147597947, i64 2147597990, i64 2147598030}
!6270 = !DILocation(line: 111, column: 1, scope: !6068)
!6271 = !{i64 2147598131, i64 2147598174, i64 2147598214}
!6272 = !DILocation(line: 112, column: 1, scope: !6068)
!6273 = !{i64 2147598321, i64 2147598364, i64 2147598404}
!6274 = !DILocation(line: 113, column: 1, scope: !6068)
!6275 = !{i64 2147598505, i64 2147598548, i64 2147598588}
!6276 = !DILocation(line: 114, column: 1, scope: !6068)
!6277 = !{i64 2147598719, i64 2147598762, i64 2147598802}
!6278 = !DILocation(line: 115, column: 1, scope: !6068)
!6279 = !{i64 2147598930, i64 2147598973, i64 2147599013}
!6280 = !DILocation(line: 116, column: 1, scope: !6068)
!6281 = !{i64 2147599153, i64 2147599196, i64 2147599236}
!6282 = !DILocation(line: 117, column: 1, scope: !6068)
!6283 = !{i64 2147599337, i64 2147599380, i64 2147599420}
!6284 = !DILocation(line: 118, column: 1, scope: !6068)
!6285 = !{i64 2147599551, i64 2147599594, i64 2147599634}
!6286 = !DILocation(line: 119, column: 1, scope: !6068)
!6287 = !{i64 2147599717, i64 2147599760, i64 2147599800}
!6288 = !DILocation(line: 120, column: 1, scope: !6068)
!6289 = !{i64 2147599898, i64 2147599941, i64 2147599981}
!6290 = !DILocation(line: 121, column: 1, scope: !6068)
!6291 = !{i64 2147600091, i64 2147600134, i64 2147600174}
!6292 = !DILocation(line: 122, column: 1, scope: !6068)
!6293 = !{i64 2147600317, i64 2147600360, i64 2147600400}
!6294 = !DILocation(line: 123, column: 1, scope: !6068)
!6295 = !{i64 2147600531, i64 2147600574, i64 2147600614}
!6296 = !DILocation(line: 124, column: 1, scope: !6068)
!6297 = !{i64 2147600757, i64 2147600800, i64 2147600840}
!6298 = !DILocation(line: 125, column: 1, scope: !6068)
!6299 = !{i64 2147600974, i64 2147601017, i64 2147601057}
!6300 = !DILocation(line: 126, column: 1, scope: !6068)
!6301 = !{i64 2147601251, i64 2147601294, i64 2147601334}
!6302 = !DILocation(line: 127, column: 1, scope: !6068)
!6303 = !{i64 2147601477, i64 2147601520, i64 2147601560}
!6304 = !DILocation(line: 128, column: 1, scope: !6068)
!6305 = !{i64 2147601673, i64 2147601716, i64 2147601756}
!6306 = !DILocation(line: 129, column: 1, scope: !6068)
!6307 = !{i64 2147601938, i64 2147601981, i64 2147602021}
!6308 = !DILocation(line: 130, column: 1, scope: !6068)
!6309 = !{i64 2147602152, i64 2147602195, i64 2147602235}
!6310 = !DILocation(line: 131, column: 1, scope: !6068)
!6311 = !{i64 2147602327, i64 2147602370, i64 2147602410}
!6312 = !DILocation(line: 132, column: 1, scope: !6068)
!6313 = !{i64 2147606642, i64 2147606685, i64 2147606725}
!6314 = !DILocation(line: 133, column: 1, scope: !6068)
!6315 = !{i64 2147606841, i64 2147606884, i64 2147606924}
!6316 = !DILocation(line: 134, column: 1, scope: !6068)
!6317 = !{i64 2147607083, i64 2147607126, i64 2147607166}
!6318 = !DILocation(line: 135, column: 1, scope: !6068)
!6319 = !{i64 2147607246, i64 2147607289, i64 2147607329}
!6320 = !DILocation(line: 136, column: 1, scope: !6068)
!6321 = !{i64 2147607433, i64 2147607476, i64 2147607516}
!6322 = !DILocation(line: 137, column: 1, scope: !6068)
!6323 = !{i64 2147607641, i64 2147607684, i64 2147607724}
!6324 = !DILocation(line: 138, column: 1, scope: !6068)
!6325 = !{i64 2147607837, i64 2147607880, i64 2147607920}
!6326 = !DILocation(line: 139, column: 1, scope: !6068)
!6327 = !{i64 2147608030, i64 2147608073, i64 2147608113}
!6328 = !DILocation(line: 140, column: 1, scope: !6068)
!6329 = !{i64 2147608212, i64 2147608255, i64 2147608295}
!6330 = !DILocation(line: 141, column: 1, scope: !6068)
!6331 = !{i64 2147608426, i64 2147608469, i64 2147608509}
!6332 = !DILocation(line: 142, column: 1, scope: !6068)
!6333 = !{i64 2147608637, i64 2147608680, i64 2147608720}
!6334 = !DILocation(line: 143, column: 1, scope: !6068)
!6335 = !{i64 2147608857, i64 2147608900, i64 2147608940}
!6336 = !DILocation(line: 144, column: 1, scope: !6068)
!6337 = !{i64 2147609064, i64 2147609107, i64 2147609147}
!6338 = !DILocation(line: 145, column: 1, scope: !6068)
!6339 = !{i64 2147609337, i64 2147609380, i64 2147609420}
!6340 = !DILocation(line: 146, column: 1, scope: !6068)
!6341 = !{i64 2147609585, i64 2147609628, i64 2147609668}
!6342 = !DILocation(line: 147, column: 1, scope: !6068)
!6343 = !{i64 2147609784, i64 2147609827, i64 2147609867}
!6344 = !DILocation(line: 148, column: 1, scope: !6068)
!6345 = !{i64 2147610019, i64 2147610062, i64 2147610102}
!6346 = !DILocation(line: 149, column: 1, scope: !6068)
!6347 = !{i64 2147610269, i64 2147610312, i64 2147610352}
!6348 = !DILocation(line: 150, column: 1, scope: !6068)
!6349 = !{i64 2147610471, i64 2147610514, i64 2147610554}
!6350 = !DILocation(line: 151, column: 1, scope: !6068)
!6351 = !{i64 2147610694, i64 2147610737, i64 2147610777}
!6352 = !DILocation(line: 152, column: 1, scope: !6068)
!6353 = !{i64 2147610908, i64 2147610951, i64 2147610991}
!6354 = !DILocation(line: 153, column: 1, scope: !6068)
!6355 = !{i64 2147611152, i64 2147611195, i64 2147611235}
!6356 = !DILocation(line: 154, column: 1, scope: !6068)
!6357 = !{i64 2147611381, i64 2147611424, i64 2147611464}
!6358 = !DILocation(line: 155, column: 1, scope: !6068)
!6359 = !{i64 2147611610, i64 2147611653, i64 2147611693}
!6360 = !DILocation(line: 156, column: 1, scope: !6068)
!6361 = !{i64 2147611818, i64 2147611861, i64 2147611901}
!6362 = !DILocation(line: 157, column: 1, scope: !6068)
!6363 = !{i64 2147612056, i64 2147612099, i64 2147612139}
!6364 = !DILocation(line: 158, column: 1, scope: !6068)
!6365 = !{i64 2147612282, i64 2147612325, i64 2147612365}
!6366 = !DILocation(line: 159, column: 1, scope: !6068)
!6367 = !{i64 2147612541, i64 2147612584, i64 2147612624}
!6368 = !DILocation(line: 160, column: 1, scope: !6068)
!6369 = !{i64 2147612761, i64 2147612804, i64 2147612844}
!6370 = !DILocation(line: 161, column: 1, scope: !6068)
!6371 = !{i64 2147612993, i64 2147613036, i64 2147613076}
!6372 = !DILocation(line: 162, column: 1, scope: !6068)
!6373 = !{i64 2147613234, i64 2147613277, i64 2147613317}
!6374 = !DILocation(line: 163, column: 1, scope: !6068)
!6375 = !{i64 2147613475, i64 2147613518, i64 2147613558}
!6376 = !DILocation(line: 164, column: 1, scope: !6068)
!6377 = !{i64 2147613698, i64 2147613741, i64 2147613781}
!6378 = !DILocation(line: 165, column: 1, scope: !6068)
!6379 = !{i64 2147613915, i64 2147613958, i64 2147613998}
!6380 = !DILocation(line: 166, column: 1, scope: !6068)
!6381 = !{i64 2147614156, i64 2147614199, i64 2147614239}
!6382 = !DILocation(line: 167, column: 1, scope: !6068)
!6383 = !{i64 2147614343, i64 2147614386, i64 2147614426}
!6384 = !DILocation(line: 168, column: 1, scope: !6068)
!6385 = !{i64 2147614506, i64 2147614549, i64 2147614589}
!6386 = !DILocation(line: 169, column: 1, scope: !6068)
!6387 = !{i64 2147614711, i64 2147614754, i64 2147614794}
!6388 = !DILocation(line: 170, column: 1, scope: !6068)
!6389 = !{i64 2147614904, i64 2147614947, i64 2147614987}
!6390 = !DILocation(line: 171, column: 1, scope: !6068)
!6391 = !{i64 2147619224, i64 2147619267, i64 2147619307}
!6392 = !DILocation(line: 172, column: 1, scope: !6068)
!6393 = !{i64 2147619447, i64 2147619490, i64 2147619530}
!6394 = !DILocation(line: 173, column: 1, scope: !6068)
!6395 = !{i64 2147619676, i64 2147619719, i64 2147619759}
!6396 = !DILocation(line: 174, column: 1, scope: !6068)
!6397 = !{i64 2147619890, i64 2147619933, i64 2147619973}
!6398 = !DILocation(line: 175, column: 1, scope: !6068)
!6399 = !{i64 2147620092, i64 2147620135, i64 2147620175}
!6400 = !DILocation(line: 176, column: 1, scope: !6068)
!6401 = !{i64 2147620288, i64 2147620331, i64 2147620371}
!6402 = !DILocation(line: 177, column: 1, scope: !6068)
!6403 = !{i64 2147620500, i64 2147620543, i64 2147620583}
!6404 = !DILocation(line: 178, column: 1, scope: !6068)
!6405 = !{i64 2147620721, i64 2147620764, i64 2147620804}
!6406 = !DILocation(line: 179, column: 1, scope: !6068)
!6407 = !{i64 2147620935, i64 2147620978, i64 2147621018}
!6408 = !DILocation(line: 180, column: 1, scope: !6068)
!6409 = !{i64 2147621125, i64 2147621168, i64 2147621208}
!6410 = !DILocation(line: 181, column: 1, scope: !6068)
!6411 = !{i64 2147621324, i64 2147621367, i64 2147621407}
!6412 = !DILocation(line: 182, column: 1, scope: !6068)
!6413 = !{i64 2147621529, i64 2147621572, i64 2147621612}
!6414 = !DILocation(line: 183, column: 1, scope: !6068)
!6415 = !{i64 2147621749, i64 2147621792, i64 2147621832}
!6416 = !DILocation(line: 184, column: 1, scope: !6068)
!6417 = !{i64 2147621950, i64 2147621993, i64 2147622033}
!6418 = !DILocation(line: 185, column: 1, scope: !6068)
!6419 = !{i64 2147622149, i64 2147622192, i64 2147622232}
!6420 = !DILocation(line: 186, column: 1, scope: !6068)
!6421 = !{i64 2147622354, i64 2147622397, i64 2147622437}
!6422 = !DILocation(line: 187, column: 1, scope: !6068)
!6423 = !{i64 2147622523, i64 2147622566, i64 2147622606}
!6424 = !DILocation(line: 188, column: 1, scope: !6068)
!6425 = !{i64 2147622707, i64 2147622750, i64 2147622790}
!6426 = !DILocation(line: 189, column: 1, scope: !6068)
!6427 = !{i64 2147622891, i64 2147622934, i64 2147622974}
!6428 = !DILocation(line: 190, column: 1, scope: !6068)
!6429 = !{i64 2147623078, i64 2147623121, i64 2147623161}
!6430 = !DILocation(line: 191, column: 1, scope: !6068)
!6431 = !{i64 2147623262, i64 2147623305, i64 2147623345}
!6432 = !DILocation(line: 192, column: 1, scope: !6068)
!6433 = !{i64 2147623500, i64 2147623543, i64 2147623583}
!6434 = !DILocation(line: 193, column: 1, scope: !6068)
!6435 = !{i64 2147623730, i64 2147623773, i64 2147623813}
!6436 = !DILocation(line: 194, column: 1, scope: !6068)
!6437 = !{i64 2147623959, i64 2147624002, i64 2147624042}
!6438 = !DILocation(line: 195, column: 1, scope: !6068)
!6439 = !{i64 2147624146, i64 2147624189, i64 2147624229}
!6440 = !DILocation(line: 196, column: 1, scope: !6068)
!6441 = !{i64 2147624342, i64 2147624385, i64 2147624425}
!6442 = !DILocation(line: 197, column: 1, scope: !6068)
!6443 = !{i64 2147624550, i64 2147624593, i64 2147624633}
!6444 = !DILocation(line: 198, column: 1, scope: !6068)
!6445 = !{i64 2147624762, i64 2147624805, i64 2147624845}
!6446 = !DILocation(line: 199, column: 1, scope: !6068)
!6447 = !{i64 2147624961, i64 2147625004, i64 2147625044}
!6448 = !DILocation(line: 200, column: 1, scope: !6068)
!6449 = !{i64 2147625199, i64 2147625242, i64 2147625282}
!6450 = !DILocation(line: 201, column: 1, scope: !6068)
!6451 = !{i64 2147625395, i64 2147625438, i64 2147625478}
!6452 = !DILocation(line: 202, column: 1, scope: !6068)
!6453 = !{i64 2147625597, i64 2147625640, i64 2147625680}
!6454 = !DILocation(line: 203, column: 1, scope: !6068)
!6455 = !{i64 2147625790, i64 2147625833, i64 2147625873}
!6456 = !DILocation(line: 204, column: 1, scope: !6068)
!6457 = !{i64 2147626024, i64 2147626067, i64 2147626107}
!6458 = !DILocation(line: 205, column: 1, scope: !6068)
!6459 = !{i64 2147626187, i64 2147626230, i64 2147626270}
!6460 = !DILocation(line: 206, column: 1, scope: !6068)
!6461 = !{i64 2147626426, i64 2147626469, i64 2147626509}
!6462 = !DILocation(line: 207, column: 1, scope: !6068)
!6463 = !{i64 2147626665, i64 2147626708, i64 2147626748}
!6464 = !DILocation(line: 208, column: 1, scope: !6068)
!6465 = !{i64 2147626901, i64 2147626944, i64 2147626984}
!6466 = !DILocation(line: 209, column: 1, scope: !6068)
!6467 = !{i64 2147627131, i64 2147627174, i64 2147627214}
!6468 = !DILocation(line: 210, column: 1, scope: !6068)
!6469 = !{i64 2147627318, i64 2147627361, i64 2147627401}
!6470 = !DILocation(line: 211, column: 1, scope: !6068)
!6471 = !{i64 2147627517, i64 2147627560, i64 2147627600}
!6472 = !DILocation(line: 212, column: 1, scope: !6068)
!6473 = !{i64 2147627788, i64 2147627831, i64 2147627871}
!6474 = !DILocation(line: 213, column: 1, scope: !6068)
!6475 = !{i64 2147627963, i64 2147628006, i64 2147628046}
!6476 = !DILocation(line: 214, column: 1, scope: !6068)
!6477 = !{i64 2147628197, i64 2147628240, i64 2147628280}
!6478 = !DILocation(line: 215, column: 1, scope: !6068)
!6479 = !{i64 2147632466, i64 2147632509, i64 2147632549}
!6480 = !DILocation(line: 216, column: 1, scope: !6068)
!6481 = !{i64 2147632684, i64 2147632727, i64 2147632767}
!6482 = !DILocation(line: 217, column: 1, scope: !6068)
!6483 = !{i64 2147632874, i64 2147632917, i64 2147632957}
!6484 = !DILocation(line: 218, column: 1, scope: !6068)
!6485 = !{i64 2147633106, i64 2147633149, i64 2147633189}
!6486 = !DILocation(line: 219, column: 1, scope: !6068)
!6487 = !{i64 2147633326, i64 2147633369, i64 2147633409}
!6488 = !DILocation(line: 220, column: 1, scope: !6068)
!6489 = !{i64 2147633522, i64 2147633565, i64 2147633605}
!6490 = !DILocation(line: 221, column: 1, scope: !6068)
!6491 = !{i64 2147633728, i64 2147633771, i64 2147633811}
!6492 = !DILocation(line: 222, column: 1, scope: !6068)
!6493 = !{i64 2147633933, i64 2147633976, i64 2147634016}
!6494 = !DILocation(line: 223, column: 1, scope: !6068)
!6495 = !{i64 2147634159, i64 2147634202, i64 2147634242}
!6496 = !DILocation(line: 224, column: 1, scope: !6068)
!6497 = !{i64 2147634367, i64 2147634410, i64 2147634450}
!6498 = !DILocation(line: 225, column: 1, scope: !6068)
!6499 = !{i64 2147634563, i64 2147634606, i64 2147634646}
!6500 = !DILocation(line: 226, column: 1, scope: !6068)
!6501 = !{i64 2147634795, i64 2147634838, i64 2147634878}
!6502 = !DILocation(line: 227, column: 1, scope: !6068)
!6503 = !{i64 2147634979, i64 2147635022, i64 2147635062}
!6504 = !DILocation(line: 228, column: 1, scope: !6068)
!6505 = !{i64 2147635188, i64 2147635231, i64 2147635271}
!6506 = !DILocation(line: 229, column: 1, scope: !6068)
!6507 = !{i64 2147635396, i64 2147635439, i64 2147635479}
!6508 = !DILocation(line: 230, column: 1, scope: !6068)
!6509 = !{i64 2147635592, i64 2147635635, i64 2147635675}
!6510 = !DILocation(line: 231, column: 1, scope: !6068)
!6511 = !{i64 2147635776, i64 2147635819, i64 2147635859}
!6512 = !DILocation(line: 232, column: 1, scope: !6068)
!6513 = !{i64 2147636002, i64 2147636045, i64 2147636085}
!6514 = !DILocation(line: 233, column: 1, scope: !6068)
!6515 = !{i64 2147636228, i64 2147636271, i64 2147636311}
!6516 = !DILocation(line: 234, column: 1, scope: !6068)
!6517 = !{i64 2147636454, i64 2147636497, i64 2147636537}
!6518 = !DILocation(line: 235, column: 1, scope: !6068)
!6519 = !{i64 2147636680, i64 2147636723, i64 2147636763}
!6520 = !DILocation(line: 236, column: 1, scope: !6068)
!6521 = !{i64 2147636906, i64 2147636949, i64 2147636989}
!6522 = !DILocation(line: 237, column: 1, scope: !6068)
!6523 = !{i64 2147637138, i64 2147637181, i64 2147637221}
!6524 = !DILocation(line: 238, column: 1, scope: !6068)
!6525 = !{i64 2147637376, i64 2147637419, i64 2147637459}
!6526 = !DILocation(line: 239, column: 1, scope: !6068)
!6527 = !{i64 2147637608, i64 2147637651, i64 2147637691}
!6528 = !DILocation(line: 240, column: 1, scope: !6068)
!6529 = !{i64 2147637810, i64 2147637853, i64 2147637893}
!6530 = !DILocation(line: 241, column: 1, scope: !6068)
!6531 = !{i64 2147638060, i64 2147638103, i64 2147638143}
!6532 = !DILocation(line: 242, column: 1, scope: !6068)
!6533 = !{i64 2147638298, i64 2147638341, i64 2147638381}
!6534 = !DILocation(line: 243, column: 1, scope: !6068)
!6535 = !{i64 2147638506, i64 2147638549, i64 2147638589}
!6536 = !DILocation(line: 244, column: 1, scope: !6068)
!6537 = !{i64 2147638702, i64 2147638745, i64 2147638785}
!6538 = !DILocation(line: 245, column: 1, scope: !6068)
!6539 = !{i64 2147638886, i64 2147638929, i64 2147638969}
!6540 = !DILocation(line: 246, column: 1, scope: !6068)
!6541 = !{i64 2147639103, i64 2147639146, i64 2147639186}
!6542 = !DILocation(line: 247, column: 1, scope: !6068)
!6543 = !{i64 2147639308, i64 2147639351, i64 2147639391}
!6544 = !DILocation(line: 248, column: 1, scope: !6068)
!6545 = !{i64 2147639543, i64 2147639586, i64 2147639626}
!6546 = !DILocation(line: 249, column: 1, scope: !6068)
!6547 = !{i64 2147639766, i64 2147639809, i64 2147639849}
!6548 = !DILocation(line: 250, column: 1, scope: !6068)
!6549 = !{i64 2147639989, i64 2147640032, i64 2147640072}
!6550 = !DILocation(line: 251, column: 1, scope: !6068)
!6551 = !{i64 2147640227, i64 2147640270, i64 2147640310}
!6552 = !DILocation(line: 252, column: 1, scope: !6068)
!6553 = !{i64 2147640465, i64 2147640508, i64 2147640548}
!6554 = !DILocation(line: 253, column: 1, scope: !6068)
!6555 = !{i64 2147640682, i64 2147640725, i64 2147640765}
!6556 = !DILocation(line: 254, column: 1, scope: !6068)
!6557 = !{i64 2147640887, i64 2147640930, i64 2147640970}
!6558 = !DILocation(line: 255, column: 1, scope: !6068)
!6559 = !{i64 2147641080, i64 2147641123, i64 2147641163}
!6560 = !DILocation(line: 256, column: 1, scope: !6068)
!6561 = !{i64 2147645394, i64 2147645437, i64 2147645477}
!6562 = !DILocation(line: 257, column: 1, scope: !6068)
!6563 = !{i64 2147645602, i64 2147645645, i64 2147645685}
!6564 = !DILocation(line: 258, column: 1, scope: !6068)
!6565 = !{i64 2147645798, i64 2147645841, i64 2147645881}
!6566 = !DILocation(line: 259, column: 1, scope: !6068)
!6567 = !{i64 2147646012, i64 2147646055, i64 2147646095}
!6568 = !DILocation(line: 260, column: 1, scope: !6068)
!6569 = !{i64 2147646220, i64 2147646263, i64 2147646303}
!6570 = !DILocation(line: 261, column: 1, scope: !6068)
!6571 = !{i64 2147646410, i64 2147646453, i64 2147646493}
!6572 = !DILocation(line: 262, column: 1, scope: !6068)
!6573 = !{i64 2147646624, i64 2147646667, i64 2147646707}
!6574 = !DILocation(line: 263, column: 1, scope: !6068)
!6575 = !{i64 2147646886, i64 2147646929, i64 2147646969}
!6576 = !DILocation(line: 264, column: 1, scope: !6068)
!6577 = !{i64 2147647097, i64 2147647140, i64 2147647180}
!6578 = !DILocation(line: 265, column: 1, scope: !6068)
!6579 = !{i64 2147647341, i64 2147647384, i64 2147647424}
!6580 = !DILocation(line: 266, column: 1, scope: !6068)
!6581 = !{i64 2147647552, i64 2147647595, i64 2147647635}
!6582 = !DILocation(line: 267, column: 1, scope: !6068)
!6583 = !{i64 2147647781, i64 2147647824, i64 2147647864}
!6584 = !DILocation(line: 268, column: 1, scope: !6068)
!6585 = !{i64 2147648046, i64 2147648089, i64 2147648129}
!6586 = !DILocation(line: 269, column: 1, scope: !6068)
!6587 = !{i64 2147648251, i64 2147648294, i64 2147648334}
!6588 = !DILocation(line: 270, column: 1, scope: !6068)
!6589 = !{i64 2147648447, i64 2147648490, i64 2147648530}
!6590 = !DILocation(line: 271, column: 1, scope: !6068)
!6591 = !{i64 2147648670, i64 2147648713, i64 2147648753}
!6592 = !DILocation(line: 272, column: 1, scope: !6068)
!6593 = !{i64 2147648833, i64 2147648876, i64 2147648916}
!6594 = !DILocation(line: 273, column: 1, scope: !6068)
!6595 = !{i64 2147649038, i64 2147649081, i64 2147649121}
!6596 = !DILocation(line: 274, column: 1, scope: !6068)
!6597 = !{i64 2147649258, i64 2147649301, i64 2147649341}
!6598 = !DILocation(line: 275, column: 1, scope: !6068)
!6599 = !{i64 2147649472, i64 2147649515, i64 2147649555}
!6600 = !DILocation(line: 276, column: 1, scope: !6068)
!6601 = !{i64 2147649716, i64 2147649759, i64 2147649799}
!6602 = !DILocation(line: 277, column: 1, scope: !6068)
!6603 = !{i64 2147649948, i64 2147649991, i64 2147650031}
!6604 = !DILocation(line: 278, column: 1, scope: !6068)
!6605 = !{i64 2147650162, i64 2147650205, i64 2147650245}
!6606 = !DILocation(line: 279, column: 1, scope: !6068)
!6607 = !{i64 2147650373, i64 2147650416, i64 2147650456}
!6608 = !DILocation(line: 280, column: 1, scope: !6068)
!6609 = !{i64 2147650566, i64 2147650609, i64 2147650649}
!6610 = !DILocation(line: 281, column: 1, scope: !6068)
!6611 = !{i64 2147650765, i64 2147650808, i64 2147650848}
!6612 = !DILocation(line: 282, column: 1, scope: !6068)
!6613 = !{i64 2147650937, i64 2147650980, i64 2147651020}
!6614 = !DILocation(line: 283, column: 1, scope: !6068)
!6615 = !{i64 2147651130, i64 2147651173, i64 2147651213}
!6616 = !DILocation(line: 284, column: 1, scope: !6068)
!6617 = !{i64 2147651326, i64 2147651369, i64 2147651409}
!6618 = !DILocation(line: 285, column: 1, scope: !6068)
!6619 = !{i64 2147651489, i64 2147651532, i64 2147651572}
!6620 = !DILocation(line: 286, column: 1, scope: !6068)
!6621 = !{i64 2147651691, i64 2147651734, i64 2147651774}
!6622 = !DILocation(line: 287, column: 1, scope: !6068)
!6623 = !{i64 2147651896, i64 2147651939, i64 2147651979}
!6624 = !DILocation(line: 288, column: 1, scope: !6068)
!6625 = !{i64 2147652104, i64 2147652147, i64 2147652187}
!6626 = !DILocation(line: 289, column: 1, scope: !6068)
!6627 = !{i64 2147652297, i64 2147652340, i64 2147652380}
!6628 = !DILocation(line: 290, column: 1, scope: !6068)
!6629 = !{i64 2147652484, i64 2147652527, i64 2147652567}
!6630 = !DILocation(line: 291, column: 1, scope: !6068)
!6631 = !{i64 2147652711, i64 2147652754, i64 2147652794}
!6632 = !DILocation(line: 292, column: 1, scope: !6068)
!6633 = !{i64 2147652877, i64 2147652920, i64 2147652960}
!6634 = !DILocation(line: 293, column: 1, scope: !6068)
!6635 = !{i64 2147653091, i64 2147653134, i64 2147653174}
!6636 = !DILocation(line: 294, column: 1, scope: !6068)
!6637 = !{i64 2147653317, i64 2147653360, i64 2147653400}
!6638 = !DILocation(line: 295, column: 1, scope: !6068)
!6639 = !{i64 2147653525, i64 2147653568, i64 2147653608}
!6640 = !DILocation(line: 296, column: 1, scope: !6068)
!6641 = !{i64 2147653721, i64 2147653764, i64 2147653804}
!6642 = !DILocation(line: 297, column: 1, scope: !6068)
!6643 = !{i64 2147653938, i64 2147653981, i64 2147654021}
!6644 = !DILocation(line: 298, column: 1, scope: !6068)
!6645 = !{i64 2147658291, i64 2147658334, i64 2147658374}
!6646 = !DILocation(line: 299, column: 1, scope: !6068)
!6647 = !{i64 2147658523, i64 2147658566, i64 2147658606}
!6648 = !DILocation(line: 300, column: 1, scope: !6068)
!6649 = !{i64 2147658740, i64 2147658783, i64 2147658823}
!6650 = !DILocation(line: 301, column: 1, scope: !6068)
!6651 = !{i64 2147658947, i64 2147658990, i64 2147659030}
!6652 = !DILocation(line: 302, column: 1, scope: !6068)
!6653 = !{i64 2147659148, i64 2147659191, i64 2147659231}
!6654 = !DILocation(line: 303, column: 1, scope: !6068)
!6655 = !{i64 2147659380, i64 2147659423, i64 2147659463}
!6656 = !DILocation(line: 304, column: 1, scope: !6068)
!6657 = !{i64 2147659588, i64 2147659631, i64 2147659671}
!6658 = !DILocation(line: 305, column: 1, scope: !6068)
!6659 = !{i64 2147659778, i64 2147659821, i64 2147659861}
!6660 = !DILocation(line: 306, column: 1, scope: !6068)
!6661 = !{i64 2147660004, i64 2147660047, i64 2147660087}
!6662 = !DILocation(line: 307, column: 1, scope: !6068)
!6663 = !{i64 2147660193, i64 2147660236, i64 2147660276}
!6664 = !DILocation(line: 308, column: 1, scope: !6068)
!6665 = !{i64 2147660464, i64 2147660507, i64 2147660547}
!6666 = !DILocation(line: 309, column: 1, scope: !6068)
!6667 = !{i64 2147660684, i64 2147660727, i64 2147660767}
!6668 = !DILocation(line: 310, column: 1, scope: !6068)
!6669 = !{i64 2147660937, i64 2147660980, i64 2147661020}
!6670 = !DILocation(line: 311, column: 1, scope: !6068)
!6671 = !{i64 2147661145, i64 2147661188, i64 2147661228}
!6672 = !DILocation(line: 312, column: 1, scope: !6068)
!6673 = !{i64 2147661377, i64 2147661420, i64 2147661460}
!6674 = !DILocation(line: 313, column: 1, scope: !6068)
!6675 = !{i64 2147661588, i64 2147661631, i64 2147661671}
!6676 = !DILocation(line: 314, column: 1, scope: !6068)
!6677 = !{i64 2147661778, i64 2147661821, i64 2147661861}
!6678 = !DILocation(line: 315, column: 1, scope: !6068)
!6679 = !{i64 2147661992, i64 2147662035, i64 2147662075}
!6680 = !DILocation(line: 316, column: 1, scope: !6068)
!6681 = !{i64 2147662191, i64 2147662234, i64 2147662274}
!6682 = !DILocation(line: 317, column: 1, scope: !6068)
!6683 = !{i64 2147662378, i64 2147662421, i64 2147662461}
!6684 = !DILocation(line: 318, column: 1, scope: !6068)
!6685 = !{i64 2147662586, i64 2147662629, i64 2147662669}
!6686 = !DILocation(line: 319, column: 1, scope: !6068)
!6687 = !{i64 2147662815, i64 2147662858, i64 2147662898}
!6688 = !DILocation(line: 320, column: 1, scope: !6068)
!6689 = !{i64 2147663017, i64 2147663060, i64 2147663100}
!6690 = !DILocation(line: 321, column: 1, scope: !6068)
!6691 = !{i64 2147663216, i64 2147663259, i64 2147663299}
!6692 = !DILocation(line: 322, column: 1, scope: !6068)
!6693 = !{i64 2147663433, i64 2147663476, i64 2147663516}
!6694 = !DILocation(line: 324, column: 1, scope: !6068)
!6695 = distinct !DISubprogram(name: "stm32l1_init", scope: !589, file: !589, line: 31, type: !595, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !6696)
!6696 = !{!6697, !6698}
!6697 = !DILocalVariable(name: "arg", arg: 1, scope: !6695, file: !589, line: 31, type: !597)
!6698 = !DILocalVariable(name: "key", scope: !6695, file: !589, line: 33, type: !113)
!6699 = !DILocation(line: 0, scope: !6695)
!6700 = !DILocation(line: 55, column: 2, scope: !6701, inlinedAt: !6705)
!6701 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !6702)
!6702 = !{!6703, !6704}
!6703 = !DILocalVariable(name: "key", scope: !6701, file: !4055, line: 44, type: !32)
!6704 = !DILocalVariable(name: "tmp", scope: !6701, file: !4055, line: 53, type: !32)
!6705 = distinct !DILocation(line: 37, column: 8, scope: !6695)
!6706 = !{i64 1541820}
!6707 = !DILocation(line: 0, scope: !6701, inlinedAt: !6705)
!6708 = !DILocalVariable(name: "key", arg: 1, scope: !6709, file: !4055, line: 84, type: !32)
!6709 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !6710)
!6710 = !{!6708}
!6711 = !DILocation(line: 0, scope: !6709, inlinedAt: !6712)
!6712 = distinct !DILocation(line: 44, column: 2, scope: !6695)
!6713 = !DILocation(line: 95, column: 2, scope: !6709, inlinedAt: !6712)
!6714 = !{i64 1542637}
!6715 = !DILocation(line: 48, column: 18, scope: !6695)
!6716 = !DILocation(line: 54, column: 2, scope: !6695)
!6717 = !DILocation(line: 55, column: 2, scope: !6695)
!6718 = !DILocation(line: 57, column: 2, scope: !6695)
!6719 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6720, file: !6720, line: 531, type: !6721, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !6723)
!6720 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6721 = !DISubroutineType(types: !6722)
!6722 = !{null, !113}
!6723 = !{!6724, !6725}
!6724 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6719, file: !6720, line: 531, type: !113)
!6725 = !DILocalVariable(name: "tmpreg", scope: !6719, file: !6720, line: 533, type: !568)
!6726 = !DILocation(line: 0, scope: !6719)
!6727 = !DILocation(line: 533, column: 3, scope: !6719)
!6728 = !DILocation(line: 533, column: 17, scope: !6719)
!6729 = !DILocation(line: 534, column: 3, scope: !6719)
!6730 = !DILocation(line: 536, column: 12, scope: !6719)
!6731 = !DILocation(line: 536, column: 10, scope: !6719)
!6732 = !DILocation(line: 537, column: 9, scope: !6719)
!6733 = !DILocation(line: 538, column: 1, scope: !6719)
!6734 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !6735, file: !6735, line: 272, type: !6721, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !6736)
!6735 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6736 = !{!6737}
!6737 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !6734, file: !6735, line: 272, type: !113)
!6738 = !DILocation(line: 0, scope: !6734)
!6739 = !DILocation(line: 274, column: 3, scope: !6734)
!6740 = !DILocation(line: 275, column: 1, scope: !6734)
!6741 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !618, file: !618, line: 26, type: !624, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !615, retainedNodes: !6742)
!6742 = !{!6743}
!6743 = !DILocalVariable(name: "dev", arg: 1, scope: !6741, file: !618, line: 26, type: !626)
!6744 = !DILocation(line: 0, scope: !6741)
!6745 = !DILocation(line: 68, column: 2, scope: !6741)
!6746 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6747, file: !6747, line: 14, type: !5049, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !6748)
!6747 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6748 = !{!6749, !6750}
!6749 = !DILocalVariable(name: "fmt", arg: 1, scope: !6746, file: !6747, line: 14, type: !105)
!6750 = !DILocalVariable(name: "ap", scope: !6746, file: !6747, line: 16, type: !6751)
!6751 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4116, line: 99, baseType: !6752)
!6752 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4116, line: 40, baseType: !6753)
!6753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6747, baseType: !6754)
!6754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6755)
!6755 = !{!6756}
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6754, file: !6747, line: 16, baseType: !104, size: 32)
!6757 = !DILocation(line: 0, scope: !6746)
!6758 = !DILocation(line: 16, column: 2, scope: !6746)
!6759 = !DILocation(line: 16, column: 10, scope: !6746)
!6760 = !DILocation(line: 18, column: 2, scope: !6746)
!6761 = !DILocation(line: 19, column: 2, scope: !6746)
!6762 = !DILocation(line: 20, column: 2, scope: !6746)
!6763 = !DILocation(line: 21, column: 1, scope: !6746)
!6764 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6747, file: !6747, line: 23, type: !6765, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !6767)
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !105, !6751}
!6767 = !{!6768, !6769}
!6768 = !DILocalVariable(name: "fmt", arg: 1, scope: !6764, file: !6747, line: 23, type: !105)
!6769 = !DILocalVariable(name: "ap", arg: 2, scope: !6764, file: !6747, line: 23, type: !6751)
!6770 = !DILocation(line: 0, scope: !6764)
!6771 = !DILocation(line: 25, column: 2, scope: !6764)
!6772 = !DILocation(line: 26, column: 1, scope: !6764)
!6773 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6747, file: !6747, line: 52, type: !6774, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !6776)
!6774 = !DISubroutineType(types: !6775)
!6775 = !{null, !108, !13, !439}
!6776 = !{!6777, !6778, !6779, !6780}
!6777 = !DILocalVariable(name: "level", arg: 1, scope: !6773, file: !6747, line: 52, type: !108)
!6778 = !DILocalVariable(name: "data", arg: 2, scope: !6773, file: !6747, line: 52, type: !13)
!6779 = !DILocalVariable(name: "size", arg: 3, scope: !6773, file: !6747, line: 52, type: !439)
!6780 = !DILocalVariable(name: "data_buffer", scope: !6773, file: !6747, line: 54, type: !105)
!6781 = !DILocation(line: 0, scope: !6773)
!6782 = !DILocation(line: 55, column: 14, scope: !6773)
!6783 = !DILocation(line: 55, column: 2, scope: !6773)
!6784 = !DILocation(line: 56, column: 3, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6773, file: !6747, line: 55, column: 20)
!6786 = !DILocation(line: 57, column: 3, scope: !6785)
!6787 = !DILocation(line: 59, column: 7, scope: !6785)
!6788 = distinct !{!6788, !6783, !6789}
!6789 = !DILocation(line: 65, column: 2, scope: !6773)
!6790 = !DILocation(line: 66, column: 1, scope: !6773)
!6791 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3667, file: !3667, line: 175, type: !3668, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !6792)
!6792 = !{!6793}
!6793 = !DILocalVariable(name: "level", arg: 1, scope: !6791, file: !3667, line: 175, type: !108)
!6794 = !DILocation(line: 0, scope: !6791)
!6795 = !DILocation(line: 177, column: 2, scope: !6791)
!6796 = !DILocation(line: 189, column: 1, scope: !6791)
!6797 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6747, file: !6747, line: 28, type: !6798, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !6800)
!6798 = !DISubroutineType(types: !6799)
!6799 = !{null, !105, !439}
!6800 = !{!6801, !6802, !6803, !6805, !6807}
!6801 = !DILocalVariable(name: "data", arg: 1, scope: !6797, file: !6747, line: 28, type: !105)
!6802 = !DILocalVariable(name: "length", arg: 2, scope: !6797, file: !6747, line: 28, type: !439)
!6803 = !DILocalVariable(name: "i", scope: !6804, file: !6747, line: 30, type: !439)
!6804 = distinct !DILexicalBlock(scope: !6797, file: !6747, line: 30, column: 2)
!6805 = !DILocalVariable(name: "i", scope: !6806, file: !6747, line: 40, type: !439)
!6806 = distinct !DILexicalBlock(scope: !6797, file: !6747, line: 40, column: 2)
!6807 = !DILocalVariable(name: "c", scope: !6808, file: !6747, line: 42, type: !165)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6747, line: 41, column: 19)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !6747, line: 41, column: 7)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !6747, line: 40, column: 54)
!6811 = distinct !DILexicalBlock(scope: !6806, file: !6747, line: 40, column: 2)
!6812 = !DILocation(line: 0, scope: !6797)
!6813 = !DILocation(line: 0, scope: !6804)
!6814 = !DILocation(line: 30, column: 2, scope: !6804)
!6815 = !DILocation(line: 38, column: 2, scope: !6797)
!6816 = !DILocation(line: 0, scope: !6806)
!6817 = !DILocation(line: 40, column: 2, scope: !6806)
!6818 = !DILocation(line: 31, column: 9, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !6747, line: 31, column: 7)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6747, line: 30, column: 54)
!6821 = distinct !DILexicalBlock(scope: !6804, file: !6747, line: 30, column: 2)
!6822 = !DILocation(line: 31, column: 7, scope: !6820)
!6823 = !DILocation(line: 32, column: 35, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6819, file: !6747, line: 31, column: 19)
!6825 = !DILocation(line: 32, column: 20, scope: !6824)
!6826 = !DILocation(line: 32, column: 4, scope: !6824)
!6827 = !DILocation(line: 33, column: 3, scope: !6824)
!6828 = !DILocation(line: 34, column: 4, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6819, file: !6747, line: 33, column: 10)
!6830 = !DILocation(line: 30, column: 50, scope: !6821)
!6831 = !DILocation(line: 30, column: 24, scope: !6821)
!6832 = distinct !{!6832, !6814, !6833}
!6833 = !DILocation(line: 36, column: 2, scope: !6804)
!6834 = !DILocation(line: 49, column: 2, scope: !6797)
!6835 = !DILocation(line: 50, column: 1, scope: !6797)
!6836 = !DILocation(line: 41, column: 9, scope: !6809)
!6837 = !DILocation(line: 41, column: 7, scope: !6810)
!6838 = !DILocation(line: 42, column: 22, scope: !6808)
!6839 = !DILocation(line: 0, scope: !6808)
!6840 = !DILocation(line: 44, column: 25, scope: !6808)
!6841 = !DILocation(line: 44, column: 17, scope: !6808)
!6842 = !DILocation(line: 44, column: 33, scope: !6808)
!6843 = !DILocation(line: 44, column: 4, scope: !6808)
!6844 = !DILocation(line: 45, column: 3, scope: !6808)
!6845 = !DILocation(line: 46, column: 4, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6809, file: !6747, line: 45, column: 10)
!6847 = !DILocation(line: 40, column: 50, scope: !6811)
!6848 = !DILocation(line: 40, column: 24, scope: !6811)
!6849 = distinct !{!6849, !6817, !6850}
!6850 = !DILocation(line: 48, column: 2, scope: !6806)
!6851 = distinct !DISubprogram(name: "isprint", scope: !5841, file: !5841, line: 37, type: !555, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !6852)
!6852 = !{!6853}
!6853 = !DILocalVariable(name: "c", arg: 1, scope: !6851, file: !5841, line: 37, type: !108)
!6854 = !DILocation(line: 0, scope: !6851)
!6855 = !DILocation(line: 39, column: 38, scope: !6851)
!6856 = !DILocation(line: 39, column: 2, scope: !6851)
!6857 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6858, file: !6858, line: 57, type: !6859, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !6905)
!6858 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6859 = !DISubroutineType(types: !6860)
!6860 = !{null, !32, !6861}
!6861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6862, size: 32)
!6862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6863)
!6863 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3010, line: 141, baseType: !6864)
!6864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3010, line: 97, size: 256, elements: !6865)
!6865 = !{!6866}
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6864, file: !3010, line: 107, baseType: !6867, size: 256)
!6867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3010, line: 98, size: 256, elements: !6868)
!6868 = !{!6869, !6874, !6879, !6884, !6889, !6894, !6899, !6904}
!6869 = !DIDerivedType(tag: DW_TAG_member, scope: !6867, file: !3010, line: 99, baseType: !6870, size: 32)
!6870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6867, file: !3010, line: 99, size: 32, elements: !6871)
!6871 = !{!6872, !6873}
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6870, file: !3010, line: 99, baseType: !113, size: 32)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6870, file: !3010, line: 99, baseType: !113, size: 32)
!6874 = !DIDerivedType(tag: DW_TAG_member, scope: !6867, file: !3010, line: 100, baseType: !6875, size: 32, offset: 32)
!6875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6867, file: !3010, line: 100, size: 32, elements: !6876)
!6876 = !{!6877, !6878}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6875, file: !3010, line: 100, baseType: !113, size: 32)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6875, file: !3010, line: 100, baseType: !113, size: 32)
!6879 = !DIDerivedType(tag: DW_TAG_member, scope: !6867, file: !3010, line: 101, baseType: !6880, size: 32, offset: 64)
!6880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6867, file: !3010, line: 101, size: 32, elements: !6881)
!6881 = !{!6882, !6883}
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6880, file: !3010, line: 101, baseType: !113, size: 32)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6880, file: !3010, line: 101, baseType: !113, size: 32)
!6884 = !DIDerivedType(tag: DW_TAG_member, scope: !6867, file: !3010, line: 102, baseType: !6885, size: 32, offset: 96)
!6885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6867, file: !3010, line: 102, size: 32, elements: !6886)
!6886 = !{!6887, !6888}
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6885, file: !3010, line: 102, baseType: !113, size: 32)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6885, file: !3010, line: 102, baseType: !113, size: 32)
!6889 = !DIDerivedType(tag: DW_TAG_member, scope: !6867, file: !3010, line: 103, baseType: !6890, size: 32, offset: 128)
!6890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6867, file: !3010, line: 103, size: 32, elements: !6891)
!6891 = !{!6892, !6893}
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6890, file: !3010, line: 103, baseType: !113, size: 32)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6890, file: !3010, line: 103, baseType: !113, size: 32)
!6894 = !DIDerivedType(tag: DW_TAG_member, scope: !6867, file: !3010, line: 104, baseType: !6895, size: 32, offset: 160)
!6895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6867, file: !3010, line: 104, size: 32, elements: !6896)
!6896 = !{!6897, !6898}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6895, file: !3010, line: 104, baseType: !113, size: 32)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6895, file: !3010, line: 104, baseType: !113, size: 32)
!6899 = !DIDerivedType(tag: DW_TAG_member, scope: !6867, file: !3010, line: 105, baseType: !6900, size: 32, offset: 192)
!6900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6867, file: !3010, line: 105, size: 32, elements: !6901)
!6901 = !{!6902, !6903}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6900, file: !3010, line: 105, baseType: !113, size: 32)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6900, file: !3010, line: 105, baseType: !113, size: 32)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6867, file: !3010, line: 106, baseType: !113, size: 32, offset: 224)
!6905 = !{!6906, !6907}
!6906 = !DILocalVariable(name: "reason", arg: 1, scope: !6857, file: !6858, line: 57, type: !32)
!6907 = !DILocalVariable(name: "esf", arg: 2, scope: !6857, file: !6858, line: 57, type: !6861)
!6908 = !DILocation(line: 0, scope: !6857)
!6909 = !DILocation(line: 60, column: 10, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6857, file: !6858, line: 60, column: 6)
!6911 = !DILocation(line: 60, column: 6, scope: !6857)
!6912 = !DILocation(line: 61, column: 3, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6910, file: !6858, line: 60, column: 19)
!6914 = !DILocation(line: 62, column: 2, scope: !6913)
!6915 = !DILocation(line: 63, column: 2, scope: !6857)
!6916 = !DILocation(line: 64, column: 1, scope: !6857)
!6917 = distinct !DISubprogram(name: "esf_dump", scope: !6858, file: !6858, line: 20, type: !6918, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !6920)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{null, !6861}
!6920 = !{!6921}
!6921 = !DILocalVariable(name: "esf", arg: 1, scope: !6917, file: !6858, line: 20, type: !6861)
!6922 = !DILocation(line: 0, scope: !6917)
!6923 = !DILocation(line: 22, column: 2, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6925, file: !6858, line: 22, column: 2)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !6858, line: 22, column: 2)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6858, line: 22, column: 2)
!6927 = distinct !DILexicalBlock(scope: !6917, file: !6858, line: 22, column: 2)
!6928 = !DILocation(line: 24, column: 2, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !6858, line: 24, column: 2)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6858, line: 24, column: 2)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6858, line: 24, column: 2)
!6932 = distinct !DILexicalBlock(scope: !6917, file: !6858, line: 24, column: 2)
!6933 = !DILocation(line: 26, column: 2, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6858, line: 26, column: 2)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6858, line: 26, column: 2)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6858, line: 26, column: 2)
!6937 = distinct !DILexicalBlock(scope: !6917, file: !6858, line: 26, column: 2)
!6938 = !DILocation(line: 53, column: 2, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6940, file: !6858, line: 53, column: 2)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !6858, line: 53, column: 2)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6858, line: 53, column: 2)
!6942 = distinct !DILexicalBlock(scope: !6917, file: !6858, line: 53, column: 2)
!6943 = !DILocation(line: 55, column: 1, scope: !6917)
!6944 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6858, file: !6858, line: 82, type: !6945, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !6960)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{null, !6861, !6947}
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6948, size: 32)
!6948 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !723, line: 37, baseType: !6949)
!6949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !6950)
!6950 = !{!6951, !6952, !6953, !6954, !6955, !6956, !6957, !6958, !6959}
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6949, file: !723, line: 26, baseType: !113, size: 32)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6949, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6949, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6949, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6949, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6949, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6949, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6949, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6949, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!6960 = !{!6961, !6962, !6963}
!6961 = !DILocalVariable(name: "esf", arg: 1, scope: !6944, file: !6858, line: 82, type: !6861)
!6962 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6944, file: !6858, line: 82, type: !6947)
!6963 = !DILocalVariable(name: "reason", scope: !6944, file: !6858, line: 88, type: !32)
!6964 = !DILocation(line: 0, scope: !6944)
!6965 = !DILocation(line: 88, column: 35, scope: !6944)
!6966 = !DILocation(line: 108, column: 2, scope: !6944)
!6967 = !DILocation(line: 131, column: 1, scope: !6944)
!6968 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6858, file: !6858, line: 133, type: !6969, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !6971)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{null, !104}
!6971 = !{!6972, !6973, !6974}
!6972 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6968, file: !6858, line: 133, type: !104)
!6973 = !DILocalVariable(name: "ssf_contents", scope: !6968, file: !6858, line: 135, type: !1289)
!6974 = !DILocalVariable(name: "oops_esf", scope: !6968, file: !6858, line: 136, type: !6863)
!6975 = !DILocation(line: 0, scope: !6968)
!6976 = !DILocation(line: 136, column: 2, scope: !6968)
!6977 = !DILocation(line: 136, column: 15, scope: !6968)
!6978 = !DILocation(line: 139, column: 22, scope: !6968)
!6979 = !DILocation(line: 139, column: 17, scope: !6968)
!6980 = !DILocation(line: 139, column: 20, scope: !6968)
!6981 = !DILocation(line: 141, column: 2, scope: !6968)
!6982 = !DILocation(line: 142, column: 2, scope: !6968)
!6983 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6984, file: !6984, line: 40, type: !4068, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !6985)
!6984 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6985 = !{!6986}
!6986 = !DILocalVariable(name: "irq", arg: 1, scope: !6983, file: !6984, line: 40, type: !32)
!6987 = !DILocation(line: 0, scope: !6983)
!6988 = !DILocation(line: 42, column: 2, scope: !6983)
!6989 = !DILocation(line: 43, column: 1, scope: !6983)
!6990 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !799, file: !799, line: 1508, type: !6991, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !6993)
!6991 = !DISubroutineType(types: !6992)
!6992 = !{null, !1246}
!6993 = !{!6994}
!6994 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6990, file: !799, line: 1508, type: !1246)
!6995 = !DILocation(line: 0, scope: !6990)
!6996 = !DILocation(line: 1510, column: 23, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6990, file: !799, line: 1510, column: 7)
!6998 = !DILocation(line: 1510, column: 7, scope: !6990)
!6999 = !DILocation(line: 1512, column: 5, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6997, file: !799, line: 1511, column: 3)
!7001 = !{i64 2149986582}
!7002 = !DILocation(line: 1513, column: 81, scope: !7000)
!7003 = !DILocation(line: 1513, column: 60, scope: !7000)
!7004 = !DILocation(line: 1513, column: 34, scope: !7000)
!7005 = !DILocation(line: 1513, column: 5, scope: !7000)
!7006 = !DILocation(line: 1513, column: 43, scope: !7000)
!7007 = !DILocation(line: 1514, column: 5, scope: !7000)
!7008 = !{i64 2149986696}
!7009 = !DILocation(line: 1515, column: 3, scope: !7000)
!7010 = !DILocation(line: 1516, column: 1, scope: !6990)
!7011 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6984, file: !6984, line: 45, type: !4068, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !7012)
!7012 = !{!7013}
!7013 = !DILocalVariable(name: "irq", arg: 1, scope: !7011, file: !6984, line: 45, type: !32)
!7014 = !DILocation(line: 0, scope: !7011)
!7015 = !DILocation(line: 47, column: 2, scope: !7011)
!7016 = !DILocation(line: 48, column: 1, scope: !7011)
!7017 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !799, file: !799, line: 1546, type: !6991, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !7018)
!7018 = !{!7019}
!7019 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7017, file: !799, line: 1546, type: !1246)
!7020 = !DILocation(line: 0, scope: !7017)
!7021 = !DILocation(line: 1548, column: 23, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7017, file: !799, line: 1548, column: 7)
!7023 = !DILocation(line: 1548, column: 7, scope: !7017)
!7024 = !DILocation(line: 1550, column: 81, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7022, file: !799, line: 1549, column: 3)
!7026 = !DILocation(line: 1550, column: 60, scope: !7025)
!7027 = !DILocation(line: 1550, column: 34, scope: !7025)
!7028 = !DILocation(line: 1550, column: 5, scope: !7025)
!7029 = !DILocation(line: 1550, column: 43, scope: !7025)
!7030 = !DILocation(line: 271, column: 3, scope: !7031, inlinedAt: !7033)
!7031 = distinct !DISubprogram(name: "__DSB", scope: !7032, file: !7032, line: 269, type: !3381, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !437)
!7032 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7033 = distinct !DILocation(line: 1551, column: 5, scope: !7025)
!7034 = !{i64 2444084}
!7035 = !DILocation(line: 260, column: 3, scope: !7036, inlinedAt: !7037)
!7036 = distinct !DISubprogram(name: "__ISB", scope: !7032, file: !7032, line: 258, type: !3381, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !437)
!7037 = distinct !DILocation(line: 1552, column: 5, scope: !7025)
!7038 = !{i64 2443801}
!7039 = !DILocation(line: 1553, column: 3, scope: !7025)
!7040 = !DILocation(line: 1554, column: 1, scope: !7017)
!7041 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6984, file: !6984, line: 50, type: !7042, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !7044)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{!108, !32}
!7044 = !{!7045}
!7045 = !DILocalVariable(name: "irq", arg: 1, scope: !7041, file: !6984, line: 50, type: !32)
!7046 = !DILocation(line: 0, scope: !7041)
!7047 = !DILocation(line: 52, column: 20, scope: !7041)
!7048 = !DILocation(line: 52, column: 9, scope: !7041)
!7049 = !DILocation(line: 52, column: 41, scope: !7041)
!7050 = !DILocation(line: 52, column: 39, scope: !7041)
!7051 = !DILocation(line: 52, column: 2, scope: !7041)
!7052 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6984, file: !6984, line: 64, type: !7053, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !7055)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{null, !32, !32, !113}
!7055 = !{!7056, !7057, !7058}
!7056 = !DILocalVariable(name: "irq", arg: 1, scope: !7052, file: !6984, line: 64, type: !32)
!7057 = !DILocalVariable(name: "prio", arg: 2, scope: !7052, file: !6984, line: 64, type: !32)
!7058 = !DILocalVariable(name: "flags", arg: 3, scope: !7052, file: !6984, line: 64, type: !113)
!7059 = !DILocation(line: 0, scope: !7052)
!7060 = !DILocation(line: 83, column: 8, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6984, line: 82, column: 9)
!7062 = distinct !DILexicalBlock(scope: !7052, file: !6984, line: 76, column: 6)
!7063 = !DILocation(line: 95, column: 2, scope: !7052)
!7064 = !DILocation(line: 96, column: 1, scope: !7052)
!7065 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !799, file: !799, line: 1638, type: !7066, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !7068)
!7066 = !DISubroutineType(types: !7067)
!7067 = !{null, !1246, !113}
!7068 = !{!7069, !7070}
!7069 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7065, file: !799, line: 1638, type: !1246)
!7070 = !DILocalVariable(name: "priority", arg: 2, scope: !7065, file: !799, line: 1638, type: !113)
!7071 = !DILocation(line: 0, scope: !7065)
!7072 = !DILocation(line: 0, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7065, file: !799, line: 1640, column: 7)
!7074 = !DILocation(line: 1640, column: 7, scope: !7065)
!7075 = !DILocation(line: 1648, column: 1, scope: !7065)
!7076 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6984, file: !6984, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !7077)
!7077 = !{!7078}
!7078 = !DILocalVariable(name: "unused", arg: 1, scope: !7076, file: !6984, line: 155, type: !13)
!7079 = !DILocation(line: 0, scope: !7076)
!7080 = !DILocation(line: 159, column: 2, scope: !7076)
!7081 = !DILocation(line: 160, column: 1, scope: !7076)
!7082 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7083, file: !7083, line: 87, type: !3381, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !437)
!7083 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7084 = !DILocation(line: 89, column: 2, scope: !7082)
!7085 = !DILocation(line: 90, column: 2, scope: !7082)
!7086 = !DILocation(line: 91, column: 1, scope: !7082)
!7087 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7083, file: !7083, line: 23, type: !3381, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7088 = !DISubprogram(name: "z_arm_int_exit", scope: !7089, file: !7089, line: 153, type: !3381, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7089 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7090 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7091, file: !7091, line: 256, type: !3381, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2949, retainedNodes: !437)
!7091 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7092 = !DILocation(line: 258, column: 2, scope: !7090)
!7093 = !DILocation(line: 262, column: 2, scope: !7090)
!7094 = !DILocation(line: 263, column: 2, scope: !7090)
!7095 = !DILocation(line: 267, column: 2, scope: !7090)
!7096 = !DILocation(line: 268, column: 2, scope: !7090)
!7097 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7091, file: !7091, line: 53, type: !3381, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2949, retainedNodes: !437)
!7098 = !DILocation(line: 55, column: 12, scope: !7097)
!7099 = !DILocation(line: 271, column: 3, scope: !7100, inlinedAt: !7101)
!7100 = distinct !DISubprogram(name: "__DSB", scope: !7032, file: !7032, line: 269, type: !3381, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2949, retainedNodes: !437)
!7101 = distinct !DILocation(line: 56, column: 2, scope: !7097)
!7102 = !{i64 2442755}
!7103 = !DILocation(line: 260, column: 3, scope: !7104, inlinedAt: !7105)
!7104 = distinct !DISubprogram(name: "__ISB", scope: !7032, file: !7032, line: 258, type: !3381, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2949, retainedNodes: !437)
!7105 = distinct !DILocation(line: 57, column: 2, scope: !7097)
!7106 = !{i64 2442472}
!7107 = !DILocation(line: 58, column: 1, scope: !7097)
!7108 = distinct !DISubprogram(name: "arch_swap", scope: !7109, file: !7109, line: 33, type: !7042, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !7110)
!7109 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7110 = !{!7111}
!7111 = !DILocalVariable(name: "key", arg: 1, scope: !7108, file: !7109, line: 33, type: !32)
!7112 = !DILocation(line: 0, scope: !7108)
!7113 = !DILocation(line: 36, column: 2, scope: !7108)
!7114 = !DILocation(line: 36, column: 17, scope: !7108)
!7115 = !DILocation(line: 36, column: 25, scope: !7108)
!7116 = !DILocation(line: 37, column: 37, scope: !7108)
!7117 = !DILocation(line: 37, column: 17, scope: !7108)
!7118 = !DILocation(line: 37, column: 35, scope: !7108)
!7119 = !DILocation(line: 41, column: 12, scope: !7108)
!7120 = !DILocalVariable(name: "key", arg: 1, scope: !7121, file: !4055, line: 84, type: !32)
!7121 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !7122)
!7122 = !{!7120}
!7123 = !DILocation(line: 0, scope: !7121, inlinedAt: !7124)
!7124 = distinct !DILocation(line: 44, column: 2, scope: !7108)
!7125 = !DILocation(line: 95, column: 2, scope: !7121, inlinedAt: !7124)
!7126 = !{i64 1665755}
!7127 = !DILocation(line: 53, column: 9, scope: !7108)
!7128 = !DILocation(line: 53, column: 24, scope: !7108)
!7129 = !DILocation(line: 53, column: 2, scope: !7108)
!7130 = distinct !DISubprogram(name: "arch_new_thread", scope: !7131, file: !7131, line: 56, type: !7132, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3005, retainedNodes: !7239)
!7131 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7132 = !DISubroutineType(types: !7133)
!7133 = !{null, !7134, !7234, !443, !5147, !104, !104, !104}
!7134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7135, size: 32)
!7135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !7136)
!7136 = !{!7137, !7195, !7207, !7208, !7209, !7210, !7216, !7229}
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7135, file: !656, line: 247, baseType: !7138, size: 384)
!7138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !7139)
!7139 = !{!7140, !7164, !7171, !7172, !7173, !7182, !7183, !7184}
!7140 = !DIDerivedType(tag: DW_TAG_member, scope: !7138, file: !656, line: 60, baseType: !7141, size: 64)
!7141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7138, file: !656, line: 60, size: 64, elements: !7142)
!7142 = !{!7143, !7158}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7141, file: !656, line: 61, baseType: !7144, size: 64)
!7144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7145)
!7145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7146)
!7146 = !{!7147, !7153}
!7147 = !DIDerivedType(tag: DW_TAG_member, scope: !7145, file: !367, line: 38, baseType: !7148, size: 32)
!7148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7145, file: !367, line: 38, size: 32, elements: !7149)
!7149 = !{!7150, !7152}
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7148, file: !367, line: 39, baseType: !7151, size: 32)
!7151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7145, size: 32)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7148, file: !367, line: 40, baseType: !7151, size: 32)
!7153 = !DIDerivedType(tag: DW_TAG_member, scope: !7145, file: !367, line: 42, baseType: !7154, size: 32, offset: 32)
!7154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7145, file: !367, line: 42, size: 32, elements: !7155)
!7155 = !{!7156, !7157}
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7154, file: !367, line: 43, baseType: !7151, size: 32)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7154, file: !367, line: 44, baseType: !7151, size: 32)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7141, file: !656, line: 62, baseType: !7159, size: 64)
!7159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !7160)
!7160 = !{!7161}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7159, file: !681, line: 50, baseType: !7162, size: 64)
!7162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7163, size: 64, elements: !686)
!7163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7159, size: 32)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7138, file: !656, line: 68, baseType: !7165, size: 32, offset: 64)
!7165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7166, size: 32)
!7166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7167)
!7167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7168)
!7168 = !{!7169}
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7167, file: !363, line: 232, baseType: !7170, size: 64)
!7170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7145)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7138, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7138, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!7173 = !DIDerivedType(tag: DW_TAG_member, scope: !7138, file: !656, line: 90, baseType: !7174, size: 16, offset: 112)
!7174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7138, file: !656, line: 90, size: 16, elements: !7175)
!7175 = !{!7176, !7181}
!7176 = !DIDerivedType(tag: DW_TAG_member, scope: !7174, file: !656, line: 91, baseType: !7177, size: 16)
!7177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7174, file: !656, line: 91, size: 16, elements: !7178)
!7178 = !{!7179, !7180}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7177, file: !656, line: 96, baseType: !704, size: 8)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7177, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7174, file: !656, line: 100, baseType: !168, size: 16)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7138, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7138, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7138, file: !656, line: 131, baseType: !7185, size: 192, offset: 192)
!7185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7186)
!7186 = !{!7187, !7188, !7194}
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7185, file: !363, line: 245, baseType: !7144, size: 64)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7185, file: !363, line: 246, baseType: !7189, size: 32, offset: 64)
!7189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7190)
!7190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7191, size: 32)
!7191 = !DISubroutineType(types: !7192)
!7192 = !{null, !7193}
!7193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7185, size: 32)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7185, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7135, file: !656, line: 250, baseType: !7196, size: 288, offset: 384)
!7196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !7197)
!7197 = !{!7198, !7199, !7200, !7201, !7202, !7203, !7204, !7205, !7206}
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7196, file: !723, line: 26, baseType: !113, size: 32)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7196, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7196, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7196, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7196, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7196, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7196, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7196, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7196, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7135, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7135, file: !656, line: 256, baseType: !7166, size: 64, offset: 704)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7135, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7135, file: !656, line: 300, baseType: !7211, size: 96, offset: 800)
!7211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !7212)
!7212 = !{!7213, !7214, !7215}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7211, file: !656, line: 153, baseType: !22, size: 32)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7211, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7211, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7135, file: !656, line: 325, baseType: !7217, size: 32, offset: 896)
!7217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7218, size: 32)
!7218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !7219)
!7219 = !{!7220, !7226, !7227}
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7218, file: !359, line: 5074, baseType: !7221, size: 96)
!7221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !7222)
!7222 = !{!7223, !7224, !7225}
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7221, file: !749, line: 57, baseType: !752, size: 32)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7221, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7221, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7218, file: !359, line: 5075, baseType: !7166, size: 64, offset: 96)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7218, file: !359, line: 5076, baseType: !7228, offset: 160)
!7228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7135, file: !656, line: 343, baseType: !7230, size: 64, offset: 928)
!7230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !7231)
!7231 = !{!7232, !7233}
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7230, file: !723, line: 63, baseType: !113, size: 32)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7230, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!7234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7235, size: 32)
!7235 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5148, line: 44, baseType: !7236)
!7236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2393, line: 47, size: 8, elements: !7237)
!7237 = !{!7238}
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7236, file: !2393, line: 48, baseType: !107, size: 8)
!7239 = !{!7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247}
!7240 = !DILocalVariable(name: "thread", arg: 1, scope: !7130, file: !7131, line: 56, type: !7134)
!7241 = !DILocalVariable(name: "stack", arg: 2, scope: !7130, file: !7131, line: 56, type: !7234)
!7242 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7130, file: !7131, line: 57, type: !443)
!7243 = !DILocalVariable(name: "entry", arg: 4, scope: !7130, file: !7131, line: 57, type: !5147)
!7244 = !DILocalVariable(name: "p1", arg: 5, scope: !7130, file: !7131, line: 58, type: !104)
!7245 = !DILocalVariable(name: "p2", arg: 6, scope: !7130, file: !7131, line: 58, type: !104)
!7246 = !DILocalVariable(name: "p3", arg: 7, scope: !7130, file: !7131, line: 58, type: !104)
!7247 = !DILocalVariable(name: "iframe", scope: !7130, file: !7131, line: 60, type: !3008)
!7248 = !DILocation(line: 0, scope: !7130)
!7249 = !DILocation(line: 85, column: 11, scope: !7130)
!7250 = !DILocation(line: 93, column: 10, scope: !7130)
!7251 = !DILocation(line: 98, column: 13, scope: !7130)
!7252 = !DILocation(line: 100, column: 15, scope: !7130)
!7253 = !DILocation(line: 100, column: 10, scope: !7130)
!7254 = !DILocation(line: 100, column: 13, scope: !7130)
!7255 = !DILocation(line: 101, column: 15, scope: !7130)
!7256 = !DILocation(line: 101, column: 10, scope: !7130)
!7257 = !DILocation(line: 101, column: 13, scope: !7130)
!7258 = !DILocation(line: 102, column: 15, scope: !7130)
!7259 = !DILocation(line: 102, column: 10, scope: !7130)
!7260 = !DILocation(line: 102, column: 13, scope: !7130)
!7261 = !DILocation(line: 103, column: 15, scope: !7130)
!7262 = !DILocation(line: 103, column: 10, scope: !7130)
!7263 = !DILocation(line: 103, column: 13, scope: !7130)
!7264 = !DILocation(line: 106, column: 10, scope: !7130)
!7265 = !DILocation(line: 106, column: 15, scope: !7130)
!7266 = !DILocation(line: 122, column: 29, scope: !7130)
!7267 = !DILocation(line: 122, column: 23, scope: !7130)
!7268 = !DILocation(line: 122, column: 27, scope: !7130)
!7269 = !DILocation(line: 123, column: 15, scope: !7130)
!7270 = !DILocation(line: 123, column: 23, scope: !7130)
!7271 = !DILocation(line: 143, column: 1, scope: !7130)
!7272 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7131, file: !7131, line: 385, type: !7273, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3005, retainedNodes: !7276)
!7273 = !DISubroutineType(types: !7274)
!7274 = !{!113, !7275, !7275}
!7275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!7276 = !{!7277, !7278, !7279, !7282}
!7277 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7272, file: !7131, line: 385, type: !7275)
!7278 = !DILocalVariable(name: "psp", arg: 2, scope: !7272, file: !7131, line: 385, type: !7275)
!7279 = !DILocalVariable(name: "thread", scope: !7272, file: !7131, line: 388, type: !7280)
!7280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7281, size: 32)
!7281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7135)
!7282 = !DILocalVariable(name: "guard_len", scope: !7272, file: !7131, line: 405, type: !113)
!7283 = !DILocation(line: 0, scope: !7272)
!7284 = !DILocation(line: 388, column: 34, scope: !7272)
!7285 = !DILocation(line: 390, column: 13, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7272, file: !7131, line: 390, column: 6)
!7287 = !DILocation(line: 390, column: 6, scope: !7272)
!7288 = !DILocation(line: 438, column: 6, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7272, file: !7131, line: 438, column: 6)
!7290 = !DILocation(line: 438, column: 6, scope: !7272)
!7291 = !DILocation(line: 442, column: 3, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7289, file: !7131, line: 440, column: 22)
!7293 = !DILocation(line: 455, column: 1, scope: !7272)
!7294 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7131, file: !7131, line: 530, type: !7295, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3005, retainedNodes: !7297)
!7295 = !DISubroutineType(types: !7296)
!7296 = !{null, !7134, !443, !5147}
!7297 = !{!7298, !7299, !7300}
!7298 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7294, file: !7131, line: 530, type: !7134)
!7299 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7294, file: !7131, line: 530, type: !443)
!7300 = !DILocalVariable(name: "_main", arg: 3, scope: !7294, file: !7131, line: 531, type: !5147)
!7301 = !DILocation(line: 0, scope: !7294)
!7302 = !DILocation(line: 535, column: 11, scope: !7294)
!7303 = !DILocation(line: 560, column: 2, scope: !7294)
!7304 = !DILocation(line: 576, column: 2, scope: !7294)
!7305 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7306 = !DILocation(line: 603, column: 2, scope: !7294)
!7307 = distinct !DISubprogram(name: "z_arm_fault", scope: !7308, file: !7308, line: 1036, type: !7309, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7324)
!7308 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7309 = !DISubroutineType(types: !7310)
!7310 = !{null, !113, !113, !113, !7311}
!7311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7312, size: 32)
!7312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !723, line: 37, baseType: !7313)
!7313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !7314)
!7314 = !{!7315, !7316, !7317, !7318, !7319, !7320, !7321, !7322, !7323}
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7313, file: !723, line: 26, baseType: !113, size: 32)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7313, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7313, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7313, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7313, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7313, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7313, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7313, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7313, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!7324 = !{!7325, !7326, !7327, !7328, !7329, !7330, !7331, !7332, !7333, !7334}
!7325 = !DILocalVariable(name: "msp", arg: 1, scope: !7307, file: !7308, line: 1036, type: !113)
!7326 = !DILocalVariable(name: "psp", arg: 2, scope: !7307, file: !7308, line: 1036, type: !113)
!7327 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7307, file: !7308, line: 1036, type: !113)
!7328 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7307, file: !7308, line: 1037, type: !7311)
!7329 = !DILocalVariable(name: "reason", scope: !7307, file: !7308, line: 1039, type: !113)
!7330 = !DILocalVariable(name: "fault", scope: !7307, file: !7308, line: 1040, type: !108)
!7331 = !DILocalVariable(name: "recoverable", scope: !7307, file: !7308, line: 1041, type: !422)
!7332 = !DILocalVariable(name: "nested_exc", scope: !7307, file: !7308, line: 1041, type: !422)
!7333 = !DILocalVariable(name: "esf", scope: !7307, file: !7308, line: 1042, type: !3076)
!7334 = !DILocalVariable(name: "esf_copy", scope: !7307, file: !7308, line: 1047, type: !3077)
!7335 = !DILocation(line: 0, scope: !7307)
!7336 = !DILocation(line: 1040, column: 19, scope: !7307)
!7337 = !DILocation(line: 1040, column: 24, scope: !7307)
!7338 = !DILocation(line: 1041, column: 2, scope: !7307)
!7339 = !DILocation(line: 1047, column: 2, scope: !7307)
!7340 = !DILocation(line: 1047, column: 15, scope: !7307)
!7341 = !DILocalVariable(name: "key", arg: 1, scope: !7342, file: !4055, line: 84, type: !32)
!7342 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7343)
!7343 = !{!7341}
!7344 = !DILocation(line: 0, scope: !7342, inlinedAt: !7345)
!7345 = distinct !DILocation(line: 1050, column: 2, scope: !7307)
!7346 = !DILocation(line: 95, column: 2, scope: !7342, inlinedAt: !7345)
!7347 = !{i64 1698999}
!7348 = !DILocation(line: 1055, column: 9, scope: !7307)
!7349 = !DILocation(line: 1063, column: 11, scope: !7307)
!7350 = !DILocation(line: 1064, column: 6, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7307, file: !7308, line: 1064, column: 6)
!7352 = !{i8 0, i8 2}
!7353 = !DILocation(line: 1064, column: 6, scope: !7307)
!7354 = !DILocation(line: 1070, column: 20, scope: !7307)
!7355 = !DILocation(line: 1070, column: 2, scope: !7307)
!7356 = !DILocation(line: 1089, column: 6, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7307, file: !7308, line: 1089, column: 6)
!7358 = !DILocation(line: 0, scope: !7357)
!7359 = !DILocation(line: 1089, column: 6, scope: !7307)
!7360 = !DILocation(line: 1090, column: 28, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7362, file: !7308, line: 1090, column: 7)
!7362 = distinct !DILexicalBlock(scope: !7357, file: !7308, line: 1089, column: 18)
!7363 = !DILocation(line: 1090, column: 44, scope: !7361)
!7364 = !DILocation(line: 1090, column: 7, scope: !7362)
!7365 = !DILocation(line: 1091, column: 24, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7361, file: !7308, line: 1090, column: 50)
!7367 = !DILocation(line: 1092, column: 3, scope: !7366)
!7368 = !DILocation(line: 1094, column: 23, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7357, file: !7308, line: 1093, column: 9)
!7370 = !DILocation(line: 1097, column: 2, scope: !7307)
!7371 = !DILocation(line: 1098, column: 1, scope: !7307)
!7372 = distinct !DISubprogram(name: "get_esf", scope: !7308, file: !7308, line: 894, type: !7373, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7376)
!7373 = !DISubroutineType(types: !7374)
!7374 = !{!3076, !113, !113, !113, !7375}
!7375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!7376 = !{!7377, !7378, !7379, !7380, !7381, !7382}
!7377 = !DILocalVariable(name: "msp", arg: 1, scope: !7372, file: !7308, line: 894, type: !113)
!7378 = !DILocalVariable(name: "psp", arg: 2, scope: !7372, file: !7308, line: 894, type: !113)
!7379 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7372, file: !7308, line: 894, type: !113)
!7380 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7372, file: !7308, line: 895, type: !7375)
!7381 = !DILocalVariable(name: "alternative_state_exc", scope: !7372, file: !7308, line: 897, type: !422)
!7382 = !DILocalVariable(name: "ptr_esf", scope: !7372, file: !7308, line: 898, type: !3076)
!7383 = !DILocation(line: 0, scope: !7372)
!7384 = !DILocation(line: 900, column: 14, scope: !7372)
!7385 = !DILocation(line: 902, column: 49, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7372, file: !7308, line: 902, column: 6)
!7387 = !DILocation(line: 902, column: 6, scope: !7372)
!7388 = !DILocation(line: 983, column: 44, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7372, file: !7308, line: 983, column: 6)
!7390 = !DILocation(line: 985, column: 3, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !7308, line: 985, column: 3)
!7392 = distinct !DILexicalBlock(scope: !7393, file: !7308, line: 985, column: 3)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !7308, line: 985, column: 3)
!7394 = distinct !DILexicalBlock(scope: !7395, file: !7308, line: 985, column: 3)
!7395 = distinct !DILexicalBlock(scope: !7389, file: !7308, line: 984, column: 47)
!7396 = !DILocation(line: 986, column: 3, scope: !7395)
!7397 = !DILocation(line: 983, column: 18, scope: !7389)
!7398 = !DILocation(line: 991, column: 7, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !7308, line: 990, column: 30)
!7400 = distinct !DILexicalBlock(scope: !7372, file: !7308, line: 990, column: 6)
!7401 = !DILocation(line: 998, column: 16, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !7308, line: 995, column: 10)
!7403 = distinct !DILexicalBlock(scope: !7399, file: !7308, line: 991, column: 7)
!7404 = !DILocation(line: 1002, column: 2, scope: !7372)
!7405 = !DILocation(line: 1003, column: 1, scope: !7372)
!7406 = distinct !DISubprogram(name: "fault_handle", scope: !7308, file: !7308, line: 786, type: !7407, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7409)
!7407 = !DISubroutineType(types: !7408)
!7408 = !{!113, !3076, !108, !7375}
!7409 = !{!7410, !7411, !7412, !7413}
!7410 = !DILocalVariable(name: "esf", arg: 1, scope: !7406, file: !7308, line: 786, type: !3076)
!7411 = !DILocalVariable(name: "fault", arg: 2, scope: !7406, file: !7308, line: 786, type: !108)
!7412 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7406, file: !7308, line: 786, type: !7375)
!7413 = !DILocalVariable(name: "reason", scope: !7406, file: !7308, line: 788, type: !113)
!7414 = !DILocation(line: 0, scope: !7406)
!7415 = !DILocation(line: 790, column: 15, scope: !7406)
!7416 = !DILocation(line: 792, column: 2, scope: !7406)
!7417 = !DILocation(line: 794, column: 12, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7406, file: !7308, line: 792, column: 17)
!7419 = !DILocation(line: 795, column: 3, scope: !7418)
!7420 = !DILocation(line: 800, column: 12, scope: !7418)
!7421 = !DILocation(line: 801, column: 3, scope: !7418)
!7422 = !DILocation(line: 803, column: 12, scope: !7418)
!7423 = !DILocation(line: 804, column: 3, scope: !7418)
!7424 = !DILocation(line: 806, column: 12, scope: !7418)
!7425 = !DILocation(line: 807, column: 3, scope: !7418)
!7426 = !DILocation(line: 814, column: 3, scope: !7418)
!7427 = !DILocation(line: 815, column: 3, scope: !7418)
!7428 = !DILocation(line: 820, column: 3, scope: !7418)
!7429 = !DILocation(line: 821, column: 3, scope: !7418)
!7430 = !DILocation(line: 829, column: 2, scope: !7406)
!7431 = distinct !DISubprogram(name: "hard_fault", scope: !7308, file: !7308, line: 709, type: !7432, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7434)
!7432 = !DISubroutineType(types: !7433)
!7433 = !{!113, !3076, !7375}
!7434 = !{!7435, !7436, !7437}
!7435 = !DILocalVariable(name: "esf", arg: 1, scope: !7431, file: !7308, line: 709, type: !3076)
!7436 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7431, file: !7308, line: 709, type: !7375)
!7437 = !DILocalVariable(name: "reason", scope: !7431, file: !7308, line: 711, type: !113)
!7438 = !DILocation(line: 0, scope: !7431)
!7439 = !DILocation(line: 713, column: 2, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !7308, line: 713, column: 2)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !7308, line: 713, column: 2)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !7308, line: 713, column: 2)
!7443 = distinct !DILexicalBlock(scope: !7431, file: !7308, line: 713, column: 2)
!7444 = !DILocation(line: 732, column: 15, scope: !7431)
!7445 = !DILocation(line: 734, column: 12, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7431, file: !7308, line: 734, column: 6)
!7447 = !DILocation(line: 734, column: 17, scope: !7446)
!7448 = !DILocation(line: 734, column: 41, scope: !7446)
!7449 = !DILocation(line: 734, column: 6, scope: !7431)
!7450 = !DILocation(line: 735, column: 3, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !7308, line: 735, column: 3)
!7452 = distinct !DILexicalBlock(scope: !7453, file: !7308, line: 735, column: 3)
!7453 = distinct !DILexicalBlock(scope: !7454, file: !7308, line: 735, column: 3)
!7454 = distinct !DILexicalBlock(scope: !7455, file: !7308, line: 735, column: 3)
!7455 = distinct !DILexicalBlock(scope: !7446, file: !7308, line: 734, column: 47)
!7456 = !DILocation(line: 736, column: 2, scope: !7455)
!7457 = !DILocation(line: 736, column: 19, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7446, file: !7308, line: 736, column: 13)
!7459 = !DILocation(line: 736, column: 49, scope: !7458)
!7460 = !DILocation(line: 736, column: 13, scope: !7446)
!7461 = !DILocation(line: 737, column: 3, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !7308, line: 737, column: 3)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !7308, line: 737, column: 3)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !7308, line: 737, column: 3)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !7308, line: 737, column: 3)
!7466 = distinct !DILexicalBlock(scope: !7458, file: !7308, line: 736, column: 55)
!7467 = !DILocation(line: 738, column: 2, scope: !7466)
!7468 = !DILocation(line: 738, column: 19, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7458, file: !7308, line: 738, column: 13)
!7470 = !DILocation(line: 738, column: 24, scope: !7469)
!7471 = !DILocation(line: 738, column: 47, scope: !7469)
!7472 = !DILocation(line: 738, column: 13, scope: !7458)
!7473 = !DILocation(line: 739, column: 3, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !7308, line: 739, column: 3)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !7308, line: 739, column: 3)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !7308, line: 739, column: 3)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !7308, line: 739, column: 3)
!7478 = distinct !DILexicalBlock(scope: !7469, file: !7308, line: 738, column: 53)
!7479 = !DILocation(line: 740, column: 7, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7478, file: !7308, line: 740, column: 7)
!7481 = !DILocation(line: 740, column: 7, scope: !7478)
!7482 = !DILocation(line: 741, column: 4, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7484, file: !7308, line: 741, column: 4)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !7308, line: 741, column: 4)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !7308, line: 741, column: 4)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !7308, line: 741, column: 4)
!7487 = distinct !DILexicalBlock(scope: !7480, file: !7308, line: 740, column: 38)
!7488 = !DILocation(line: 742, column: 24, scope: !7487)
!7489 = !DILocation(line: 743, column: 3, scope: !7487)
!7490 = !DILocation(line: 743, column: 20, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7480, file: !7308, line: 743, column: 14)
!7492 = !DILocation(line: 743, column: 25, scope: !7491)
!7493 = !DILocation(line: 743, column: 52, scope: !7491)
!7494 = !DILocation(line: 743, column: 14, scope: !7480)
!7495 = !DILocation(line: 744, column: 13, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7491, file: !7308, line: 743, column: 58)
!7497 = !DILocation(line: 745, column: 3, scope: !7496)
!7498 = !DILocation(line: 745, column: 20, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7491, file: !7308, line: 745, column: 14)
!7500 = !DILocation(line: 745, column: 25, scope: !7499)
!7501 = !DILocation(line: 745, column: 52, scope: !7499)
!7502 = !DILocation(line: 745, column: 14, scope: !7491)
!7503 = !DILocation(line: 746, column: 13, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7499, file: !7308, line: 745, column: 58)
!7505 = !DILocation(line: 747, column: 3, scope: !7504)
!7506 = !DILocation(line: 747, column: 20, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7499, file: !7308, line: 747, column: 14)
!7508 = !DILocation(line: 747, column: 52, scope: !7507)
!7509 = !DILocation(line: 747, column: 14, scope: !7499)
!7510 = !DILocation(line: 748, column: 13, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7507, file: !7308, line: 747, column: 58)
!7512 = !DILocation(line: 753, column: 3, scope: !7511)
!7513 = !DILocation(line: 766, column: 2, scope: !7431)
!7514 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7308, file: !7308, line: 229, type: !7407, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7515)
!7515 = !{!7516, !7517, !7518, !7519, !7520, !7521, !7524}
!7516 = !DILocalVariable(name: "esf", arg: 1, scope: !7514, file: !7308, line: 229, type: !3076)
!7517 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7514, file: !7308, line: 229, type: !108)
!7518 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7514, file: !7308, line: 230, type: !7375)
!7519 = !DILocalVariable(name: "reason", scope: !7514, file: !7308, line: 232, type: !113)
!7520 = !DILocalVariable(name: "mmfar", scope: !7514, file: !7308, line: 233, type: !113)
!7521 = !DILocalVariable(name: "temp", scope: !7522, file: !7308, line: 254, type: !113)
!7522 = distinct !DILexicalBlock(scope: !7523, file: !7308, line: 244, column: 48)
!7523 = distinct !DILexicalBlock(scope: !7514, file: !7308, line: 244, column: 6)
!7524 = !DILocalVariable(name: "min_stack_ptr", scope: !7525, file: !7308, line: 309, type: !113)
!7525 = distinct !DILexicalBlock(scope: !7526, file: !7308, line: 308, column: 43)
!7526 = distinct !DILexicalBlock(scope: !7527, file: !7308, line: 308, column: 7)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !7308, line: 289, column: 40)
!7528 = distinct !DILexicalBlock(scope: !7514, file: !7308, line: 288, column: 6)
!7529 = !DILocation(line: 0, scope: !7514)
!7530 = !DILocation(line: 235, column: 2, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !7308, line: 235, column: 2)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !7308, line: 235, column: 2)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !7308, line: 235, column: 2)
!7534 = distinct !DILexicalBlock(scope: !7514, file: !7308, line: 235, column: 2)
!7535 = !DILocation(line: 237, column: 12, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7514, file: !7308, line: 237, column: 6)
!7537 = !DILocation(line: 237, column: 17, scope: !7536)
!7538 = !DILocation(line: 237, column: 41, scope: !7536)
!7539 = !DILocation(line: 237, column: 6, scope: !7514)
!7540 = !DILocation(line: 238, column: 3, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !7308, line: 238, column: 3)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !7308, line: 238, column: 3)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !7308, line: 238, column: 3)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !7308, line: 238, column: 3)
!7545 = distinct !DILexicalBlock(scope: !7536, file: !7308, line: 237, column: 47)
!7546 = !DILocation(line: 240, column: 2, scope: !7545)
!7547 = !DILocation(line: 241, column: 12, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7514, file: !7308, line: 241, column: 6)
!7549 = !DILocation(line: 241, column: 17, scope: !7548)
!7550 = !DILocation(line: 241, column: 43, scope: !7548)
!7551 = !DILocation(line: 241, column: 6, scope: !7514)
!7552 = !DILocation(line: 242, column: 3, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !7308, line: 242, column: 3)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !7308, line: 242, column: 3)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !7308, line: 242, column: 3)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !7308, line: 242, column: 3)
!7557 = distinct !DILexicalBlock(scope: !7548, file: !7308, line: 241, column: 49)
!7558 = !DILocation(line: 243, column: 2, scope: !7557)
!7559 = !DILocation(line: 244, column: 12, scope: !7523)
!7560 = !DILocation(line: 244, column: 17, scope: !7523)
!7561 = !DILocation(line: 244, column: 42, scope: !7523)
!7562 = !DILocation(line: 244, column: 6, scope: !7514)
!7563 = !DILocation(line: 245, column: 3, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !7308, line: 245, column: 3)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !7308, line: 245, column: 3)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !7308, line: 245, column: 3)
!7567 = distinct !DILexicalBlock(scope: !7522, file: !7308, line: 245, column: 3)
!7568 = !DILocation(line: 254, column: 24, scope: !7522)
!7569 = !DILocation(line: 0, scope: !7522)
!7570 = !DILocation(line: 256, column: 13, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7522, file: !7308, line: 256, column: 7)
!7572 = !DILocation(line: 256, column: 18, scope: !7571)
!7573 = !DILocation(line: 256, column: 44, scope: !7571)
!7574 = !DILocation(line: 256, column: 7, scope: !7522)
!7575 = !DILocation(line: 258, column: 4, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !7308, line: 258, column: 4)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !7308, line: 258, column: 4)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !7308, line: 258, column: 4)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !7308, line: 258, column: 4)
!7580 = distinct !DILexicalBlock(scope: !7571, file: !7308, line: 256, column: 50)
!7581 = !DILocation(line: 259, column: 24, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7580, file: !7308, line: 259, column: 8)
!7583 = !DILocation(line: 259, column: 8, scope: !7580)
!7584 = !DILocation(line: 261, column: 15, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7582, file: !7308, line: 259, column: 30)
!7586 = !DILocation(line: 262, column: 4, scope: !7585)
!7587 = !DILocation(line: 265, column: 12, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7514, file: !7308, line: 265, column: 6)
!7589 = !DILocation(line: 265, column: 17, scope: !7588)
!7590 = !DILocation(line: 265, column: 42, scope: !7588)
!7591 = !DILocation(line: 265, column: 6, scope: !7514)
!7592 = !DILocation(line: 266, column: 3, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !7308, line: 266, column: 3)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !7308, line: 266, column: 3)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !7308, line: 266, column: 3)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !7308, line: 266, column: 3)
!7597 = distinct !DILexicalBlock(scope: !7588, file: !7308, line: 265, column: 48)
!7598 = !DILocation(line: 267, column: 2, scope: !7597)
!7599 = !DILocation(line: 288, column: 12, scope: !7528)
!7600 = !DILocation(line: 288, column: 17, scope: !7528)
!7601 = !DILocation(line: 288, column: 41, scope: !7528)
!7602 = !DILocation(line: 289, column: 9, scope: !7528)
!7603 = !DILocation(line: 289, column: 14, scope: !7528)
!7604 = !DILocation(line: 288, column: 6, scope: !7514)
!7605 = !DILocation(line: 308, column: 12, scope: !7526)
!7606 = !DILocation(line: 308, column: 17, scope: !7526)
!7607 = !DILocation(line: 308, column: 7, scope: !7527)
!7608 = !DILocation(line: 310, column: 6, scope: !7525)
!7609 = !DILocation(line: 309, column: 29, scope: !7525)
!7610 = !DILocation(line: 0, scope: !7525)
!7611 = !DILocation(line: 312, column: 8, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7525, file: !7308, line: 312, column: 8)
!7613 = !DILocation(line: 312, column: 8, scope: !7525)
!7614 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7615, file: !7032, line: 1099, type: !113)
!7615 = distinct !DISubprogram(name: "__set_PSP", scope: !7032, file: !7032, line: 1099, type: !6721, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7616)
!7616 = !{!7614}
!7617 = !DILocation(line: 0, scope: !7615, inlinedAt: !7618)
!7618 = distinct !DILocation(line: 338, column: 5, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7612, file: !7308, line: 312, column: 23)
!7620 = !DILocation(line: 1101, column: 3, scope: !7615, inlinedAt: !7618)
!7621 = !{i64 2493724}
!7622 = !DILocation(line: 341, column: 4, scope: !7619)
!7623 = !DILocation(line: 366, column: 12, scope: !7514)
!7624 = !DILocation(line: 369, column: 15, scope: !7514)
!7625 = !DILocation(line: 371, column: 2, scope: !7514)
!7626 = distinct !DISubprogram(name: "bus_fault", scope: !7308, file: !7308, line: 383, type: !7627, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7629)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{!108, !3076, !108, !7375}
!7629 = !{!7630, !7631, !7632, !7633, !7634}
!7630 = !DILocalVariable(name: "esf", arg: 1, scope: !7626, file: !7308, line: 383, type: !3076)
!7631 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7626, file: !7308, line: 383, type: !108)
!7632 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7626, file: !7308, line: 383, type: !7375)
!7633 = !DILocalVariable(name: "reason", scope: !7626, file: !7308, line: 385, type: !113)
!7634 = !DILocalVariable(name: "bfar", scope: !7635, file: !7308, line: 405, type: !113)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !7308, line: 395, column: 42)
!7636 = distinct !DILexicalBlock(scope: !7626, file: !7308, line: 395, column: 6)
!7637 = !DILocation(line: 0, scope: !7626)
!7638 = !DILocation(line: 387, column: 2, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !7308, line: 387, column: 2)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !7308, line: 387, column: 2)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !7308, line: 387, column: 2)
!7642 = distinct !DILexicalBlock(scope: !7626, file: !7308, line: 387, column: 2)
!7643 = !DILocation(line: 389, column: 11, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7626, file: !7308, line: 389, column: 6)
!7645 = !DILocation(line: 389, column: 16, scope: !7644)
!7646 = !DILocation(line: 389, column: 6, scope: !7626)
!7647 = !DILocation(line: 390, column: 3, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7308, line: 390, column: 3)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !7308, line: 390, column: 3)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !7308, line: 390, column: 3)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7308, line: 390, column: 3)
!7652 = distinct !DILexicalBlock(scope: !7644, file: !7308, line: 389, column: 39)
!7653 = !DILocation(line: 391, column: 2, scope: !7652)
!7654 = !DILocation(line: 392, column: 11, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7626, file: !7308, line: 392, column: 6)
!7656 = !DILocation(line: 392, column: 16, scope: !7655)
!7657 = !DILocation(line: 392, column: 6, scope: !7626)
!7658 = !DILocation(line: 393, column: 3, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !7308, line: 393, column: 3)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !7308, line: 393, column: 3)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !7308, line: 393, column: 3)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !7308, line: 393, column: 3)
!7663 = distinct !DILexicalBlock(scope: !7655, file: !7308, line: 392, column: 41)
!7664 = !DILocation(line: 394, column: 2, scope: !7663)
!7665 = !DILocation(line: 395, column: 11, scope: !7636)
!7666 = !DILocation(line: 395, column: 16, scope: !7636)
!7667 = !DILocation(line: 395, column: 6, scope: !7626)
!7668 = !DILocation(line: 396, column: 3, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !7308, line: 396, column: 3)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !7308, line: 396, column: 3)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !7308, line: 396, column: 3)
!7672 = distinct !DILexicalBlock(scope: !7635, file: !7308, line: 396, column: 3)
!7673 = !DILocation(line: 405, column: 3, scope: !7635)
!7674 = !DILocation(line: 0, scope: !7635)
!7675 = !DILocation(line: 407, column: 13, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7635, file: !7308, line: 407, column: 7)
!7677 = !DILocation(line: 407, column: 18, scope: !7676)
!7678 = !DILocation(line: 407, column: 44, scope: !7676)
!7679 = !DILocation(line: 407, column: 7, scope: !7635)
!7680 = !DILocation(line: 408, column: 4, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !7308, line: 408, column: 4)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !7308, line: 408, column: 4)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !7308, line: 408, column: 4)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !7308, line: 408, column: 4)
!7685 = distinct !DILexicalBlock(scope: !7676, file: !7308, line: 407, column: 50)
!7686 = !DILocation(line: 409, column: 24, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7685, file: !7308, line: 409, column: 8)
!7688 = !DILocation(line: 409, column: 8, scope: !7685)
!7689 = !DILocation(line: 411, column: 15, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7687, file: !7308, line: 409, column: 30)
!7691 = !DILocation(line: 412, column: 4, scope: !7690)
!7692 = !DILocation(line: 415, column: 11, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7626, file: !7308, line: 415, column: 6)
!7694 = !DILocation(line: 415, column: 16, scope: !7693)
!7695 = !DILocation(line: 415, column: 6, scope: !7626)
!7696 = !DILocation(line: 416, column: 3, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !7308, line: 416, column: 3)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !7308, line: 416, column: 3)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !7308, line: 416, column: 3)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !7308, line: 416, column: 3)
!7701 = distinct !DILexicalBlock(scope: !7693, file: !7308, line: 415, column: 44)
!7702 = !DILocation(line: 417, column: 2, scope: !7701)
!7703 = !DILocation(line: 418, column: 12, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7626, file: !7308, line: 418, column: 6)
!7705 = !DILocation(line: 418, column: 17, scope: !7704)
!7706 = !DILocation(line: 418, column: 41, scope: !7704)
!7707 = !DILocation(line: 418, column: 6, scope: !7626)
!7708 = !DILocation(line: 419, column: 3, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !7308, line: 419, column: 3)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !7308, line: 419, column: 3)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !7308, line: 419, column: 3)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7308, line: 419, column: 3)
!7713 = distinct !DILexicalBlock(scope: !7704, file: !7308, line: 418, column: 47)
!7714 = !DILocation(line: 421, column: 2, scope: !7713)
!7715 = !DILocation(line: 524, column: 12, scope: !7626)
!7716 = !DILocation(line: 526, column: 15, scope: !7626)
!7717 = !DILocation(line: 528, column: 2, scope: !7626)
!7718 = distinct !DISubprogram(name: "usage_fault", scope: !7308, file: !7308, line: 539, type: !7719, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7723)
!7719 = !DISubroutineType(types: !7720)
!7720 = !{!113, !7721}
!7721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7722, size: 32)
!7722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3077)
!7723 = !{!7724, !7725}
!7724 = !DILocalVariable(name: "esf", arg: 1, scope: !7718, file: !7308, line: 539, type: !7721)
!7725 = !DILocalVariable(name: "reason", scope: !7718, file: !7308, line: 541, type: !113)
!7726 = !DILocation(line: 0, scope: !7718)
!7727 = !DILocation(line: 543, column: 2, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !7308, line: 543, column: 2)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !7308, line: 543, column: 2)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !7308, line: 543, column: 2)
!7731 = distinct !DILexicalBlock(scope: !7718, file: !7308, line: 543, column: 2)
!7732 = !DILocation(line: 546, column: 12, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7718, file: !7308, line: 546, column: 6)
!7734 = !DILocation(line: 546, column: 17, scope: !7733)
!7735 = !DILocation(line: 546, column: 43, scope: !7733)
!7736 = !DILocation(line: 546, column: 6, scope: !7718)
!7737 = !DILocation(line: 547, column: 3, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !7308, line: 547, column: 3)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !7308, line: 547, column: 3)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !7308, line: 547, column: 3)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !7308, line: 547, column: 3)
!7742 = distinct !DILexicalBlock(scope: !7733, file: !7308, line: 546, column: 49)
!7743 = !DILocation(line: 548, column: 2, scope: !7742)
!7744 = !DILocation(line: 549, column: 12, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7718, file: !7308, line: 549, column: 6)
!7746 = !DILocation(line: 549, column: 17, scope: !7745)
!7747 = !DILocation(line: 549, column: 43, scope: !7745)
!7748 = !DILocation(line: 549, column: 6, scope: !7718)
!7749 = !DILocation(line: 550, column: 3, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7751, file: !7308, line: 550, column: 3)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !7308, line: 550, column: 3)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !7308, line: 550, column: 3)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !7308, line: 550, column: 3)
!7754 = distinct !DILexicalBlock(scope: !7745, file: !7308, line: 549, column: 49)
!7755 = !DILocation(line: 551, column: 2, scope: !7754)
!7756 = !DILocation(line: 567, column: 12, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7718, file: !7308, line: 567, column: 6)
!7758 = !DILocation(line: 567, column: 17, scope: !7757)
!7759 = !DILocation(line: 567, column: 38, scope: !7757)
!7760 = !DILocation(line: 567, column: 6, scope: !7718)
!7761 = !DILocation(line: 568, column: 3, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !7308, line: 568, column: 3)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !7308, line: 568, column: 3)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !7308, line: 568, column: 3)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !7308, line: 568, column: 3)
!7766 = distinct !DILexicalBlock(scope: !7757, file: !7308, line: 567, column: 44)
!7767 = !DILocation(line: 569, column: 2, scope: !7766)
!7768 = !DILocation(line: 570, column: 12, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7718, file: !7308, line: 570, column: 6)
!7770 = !DILocation(line: 570, column: 17, scope: !7769)
!7771 = !DILocation(line: 570, column: 39, scope: !7769)
!7772 = !DILocation(line: 570, column: 6, scope: !7718)
!7773 = !DILocation(line: 571, column: 3, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !7308, line: 571, column: 3)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !7308, line: 571, column: 3)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !7308, line: 571, column: 3)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !7308, line: 571, column: 3)
!7778 = distinct !DILexicalBlock(scope: !7769, file: !7308, line: 570, column: 45)
!7779 = !DILocation(line: 572, column: 2, scope: !7778)
!7780 = !DILocation(line: 573, column: 12, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7718, file: !7308, line: 573, column: 6)
!7782 = !DILocation(line: 573, column: 17, scope: !7781)
!7783 = !DILocation(line: 573, column: 42, scope: !7781)
!7784 = !DILocation(line: 573, column: 6, scope: !7718)
!7785 = !DILocation(line: 574, column: 3, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !7308, line: 574, column: 3)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !7308, line: 574, column: 3)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !7308, line: 574, column: 3)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7308, line: 574, column: 3)
!7790 = distinct !DILexicalBlock(scope: !7781, file: !7308, line: 573, column: 48)
!7791 = !DILocation(line: 575, column: 2, scope: !7790)
!7792 = !DILocation(line: 576, column: 12, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7718, file: !7308, line: 576, column: 6)
!7794 = !DILocation(line: 576, column: 17, scope: !7793)
!7795 = !DILocation(line: 576, column: 44, scope: !7793)
!7796 = !DILocation(line: 576, column: 6, scope: !7718)
!7797 = !DILocation(line: 577, column: 3, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !7308, line: 577, column: 3)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !7308, line: 577, column: 3)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !7308, line: 577, column: 3)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !7308, line: 577, column: 3)
!7802 = distinct !DILexicalBlock(scope: !7793, file: !7308, line: 576, column: 50)
!7803 = !DILocation(line: 578, column: 2, scope: !7802)
!7804 = !DILocation(line: 581, column: 12, scope: !7718)
!7805 = !DILocation(line: 583, column: 2, scope: !7718)
!7806 = distinct !DISubprogram(name: "debug_monitor", scope: !7308, file: !7308, line: 632, type: !7807, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7809)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{null, !3076, !7375}
!7809 = !{!7810, !7811}
!7810 = !DILocalVariable(name: "esf", arg: 1, scope: !7806, file: !7308, line: 632, type: !3076)
!7811 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7806, file: !7308, line: 632, type: !7375)
!7812 = !DILocation(line: 0, scope: !7806)
!7813 = !DILocation(line: 634, column: 15, scope: !7806)
!7814 = !DILocation(line: 636, column: 2, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7308, line: 636, column: 2)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !7308, line: 636, column: 2)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !7308, line: 636, column: 2)
!7818 = distinct !DILexicalBlock(scope: !7806, file: !7308, line: 636, column: 2)
!7819 = !DILocation(line: 652, column: 1, scope: !7806)
!7820 = distinct !DISubprogram(name: "reserved_exception", scope: !7308, file: !7308, line: 776, type: !7821, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7823)
!7821 = !DISubroutineType(types: !7822)
!7822 = !{null, !7721, !108}
!7823 = !{!7824, !7825}
!7824 = !DILocalVariable(name: "esf", arg: 1, scope: !7820, file: !7308, line: 776, type: !7721)
!7825 = !DILocalVariable(name: "fault", arg: 2, scope: !7820, file: !7308, line: 776, type: !108)
!7826 = !DILocation(line: 0, scope: !7820)
!7827 = !DILocation(line: 780, column: 2, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !7308, line: 780, column: 2)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !7308, line: 780, column: 2)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !7308, line: 780, column: 2)
!7831 = distinct !DILexicalBlock(scope: !7820, file: !7308, line: 780, column: 2)
!7832 = !DILocation(line: 783, column: 1, scope: !7820)
!7833 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7308, file: !7308, line: 658, type: !7834, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !7836)
!7834 = !DISubroutineType(types: !7835)
!7835 = !{!422, !3076}
!7836 = !{!7837, !7838, !7839}
!7837 = !DILocalVariable(name: "esf", arg: 1, scope: !7833, file: !7308, line: 658, type: !3076)
!7838 = !DILocalVariable(name: "ret_addr", scope: !7833, file: !7308, line: 660, type: !3119)
!7839 = !DILocalVariable(name: "fault_insn", scope: !7833, file: !7308, line: 686, type: !168)
!7840 = !DILocation(line: 0, scope: !7833)
!7841 = !DILocation(line: 660, column: 46, scope: !7833)
!7842 = !DILocation(line: 660, column: 23, scope: !7833)
!7843 = !DILocation(line: 682, column: 11, scope: !7833)
!7844 = !DILocation(line: 271, column: 3, scope: !7845, inlinedAt: !7846)
!7845 = distinct !DISubprogram(name: "__DSB", scope: !7032, file: !7032, line: 269, type: !3381, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !437)
!7846 = distinct !DILocation(line: 683, column: 2, scope: !7833)
!7847 = !{i64 2469859}
!7848 = !DILocation(line: 260, column: 3, scope: !7849, inlinedAt: !7850)
!7849 = distinct !DISubprogram(name: "__ISB", scope: !7032, file: !7032, line: 258, type: !3381, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !437)
!7850 = distinct !DILocation(line: 684, column: 2, scope: !7833)
!7851 = !{i64 2469576}
!7852 = !DILocation(line: 686, column: 35, scope: !7833)
!7853 = !DILocation(line: 686, column: 24, scope: !7833)
!7854 = !DILocation(line: 688, column: 11, scope: !7833)
!7855 = !DILocation(line: 271, column: 3, scope: !7845, inlinedAt: !7856)
!7856 = distinct !DILocation(line: 689, column: 2, scope: !7833)
!7857 = !DILocation(line: 260, column: 3, scope: !7849, inlinedAt: !7858)
!7858 = distinct !DILocation(line: 690, column: 2, scope: !7833)
!7859 = !DILocation(line: 693, column: 45, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7833, file: !7308, line: 693, column: 6)
!7861 = !DILocation(line: 699, column: 1, scope: !7833)
!7862 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7308, file: !7308, line: 1107, type: !3381, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !437)
!7863 = !DILocation(line: 1111, column: 11, scope: !7862)
!7864 = !DILocation(line: 1136, column: 1, scope: !7862)
!7865 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7866, file: !7866, line: 26, type: !3381, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3120, retainedNodes: !7867)
!7866 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7867 = !{!7868}
!7868 = !DILocalVariable(name: "irq", scope: !7865, file: !7866, line: 28, type: !108)
!7869 = !DILocation(line: 0, scope: !7865)
!7870 = !DILocation(line: 30, column: 2, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7865, file: !7866, line: 30, column: 2)
!7872 = !DILocation(line: 31, column: 3, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !7866, line: 30, column: 39)
!7874 = distinct !DILexicalBlock(scope: !7871, file: !7866, line: 30, column: 2)
!7875 = !DILocation(line: 30, column: 35, scope: !7874)
!7876 = !DILocation(line: 30, column: 13, scope: !7874)
!7877 = distinct !{!7877, !7870, !7878}
!7878 = !DILocation(line: 32, column: 2, scope: !7871)
!7879 = !DILocation(line: 33, column: 1, scope: !7865)
!7880 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !799, file: !799, line: 1638, type: !7066, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3120, retainedNodes: !7881)
!7881 = !{!7882, !7883}
!7882 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7880, file: !799, line: 1638, type: !1246)
!7883 = !DILocalVariable(name: "priority", arg: 2, scope: !7880, file: !799, line: 1638, type: !113)
!7884 = !DILocation(line: 0, scope: !7880)
!7885 = !DILocation(line: 1640, column: 7, scope: !7880)
!7886 = !DILocation(line: 0, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7880, file: !799, line: 1640, column: 7)
!7888 = !DILocation(line: 1648, column: 1, scope: !7880)
!7889 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7890, file: !7890, line: 27, type: !7891, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3165, retainedNodes: !7994)
!7890 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7891 = !DISubroutineType(types: !7892)
!7892 = !{null, !7893}
!7893 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !656, line: 347, baseType: !7894)
!7894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7895, size: 32)
!7895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !7896)
!7896 = !{!7897, !7955, !7967, !7968, !7969, !7970, !7976, !7989}
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7895, file: !656, line: 247, baseType: !7898, size: 384)
!7898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !7899)
!7899 = !{!7900, !7924, !7931, !7932, !7933, !7942, !7943, !7944}
!7900 = !DIDerivedType(tag: DW_TAG_member, scope: !7898, file: !656, line: 60, baseType: !7901, size: 64)
!7901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7898, file: !656, line: 60, size: 64, elements: !7902)
!7902 = !{!7903, !7918}
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7901, file: !656, line: 61, baseType: !7904, size: 64)
!7904 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7905)
!7905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7906)
!7906 = !{!7907, !7913}
!7907 = !DIDerivedType(tag: DW_TAG_member, scope: !7905, file: !367, line: 38, baseType: !7908, size: 32)
!7908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7905, file: !367, line: 38, size: 32, elements: !7909)
!7909 = !{!7910, !7912}
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7908, file: !367, line: 39, baseType: !7911, size: 32)
!7911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7905, size: 32)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7908, file: !367, line: 40, baseType: !7911, size: 32)
!7913 = !DIDerivedType(tag: DW_TAG_member, scope: !7905, file: !367, line: 42, baseType: !7914, size: 32, offset: 32)
!7914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7905, file: !367, line: 42, size: 32, elements: !7915)
!7915 = !{!7916, !7917}
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7914, file: !367, line: 43, baseType: !7911, size: 32)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7914, file: !367, line: 44, baseType: !7911, size: 32)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7901, file: !656, line: 62, baseType: !7919, size: 64)
!7919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !7920)
!7920 = !{!7921}
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7919, file: !681, line: 50, baseType: !7922, size: 64)
!7922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7923, size: 64, elements: !686)
!7923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7919, size: 32)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7898, file: !656, line: 68, baseType: !7925, size: 32, offset: 64)
!7925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7926, size: 32)
!7926 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7927)
!7927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7928)
!7928 = !{!7929}
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7927, file: !363, line: 232, baseType: !7930, size: 64)
!7930 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7905)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7898, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7898, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!7933 = !DIDerivedType(tag: DW_TAG_member, scope: !7898, file: !656, line: 90, baseType: !7934, size: 16, offset: 112)
!7934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7898, file: !656, line: 90, size: 16, elements: !7935)
!7935 = !{!7936, !7941}
!7936 = !DIDerivedType(tag: DW_TAG_member, scope: !7934, file: !656, line: 91, baseType: !7937, size: 16)
!7937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7934, file: !656, line: 91, size: 16, elements: !7938)
!7938 = !{!7939, !7940}
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7937, file: !656, line: 96, baseType: !704, size: 8)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7937, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7934, file: !656, line: 100, baseType: !168, size: 16)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7898, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7898, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7898, file: !656, line: 131, baseType: !7945, size: 192, offset: 192)
!7945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7946)
!7946 = !{!7947, !7948, !7954}
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7945, file: !363, line: 245, baseType: !7904, size: 64)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7945, file: !363, line: 246, baseType: !7949, size: 32, offset: 64)
!7949 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7950)
!7950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7951, size: 32)
!7951 = !DISubroutineType(types: !7952)
!7952 = !{null, !7953}
!7953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 32)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7945, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7895, file: !656, line: 250, baseType: !7956, size: 288, offset: 384)
!7956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !7957)
!7957 = !{!7958, !7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966}
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7956, file: !723, line: 26, baseType: !113, size: 32)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7956, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7956, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7956, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7956, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7956, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7956, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7956, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7956, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7895, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7895, file: !656, line: 256, baseType: !7926, size: 64, offset: 704)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7895, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7895, file: !656, line: 300, baseType: !7971, size: 96, offset: 800)
!7971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !7972)
!7972 = !{!7973, !7974, !7975}
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7971, file: !656, line: 153, baseType: !22, size: 32)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7971, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7971, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7895, file: !656, line: 325, baseType: !7977, size: 32, offset: 896)
!7977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7978, size: 32)
!7978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !7979)
!7979 = !{!7980, !7986, !7987}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7978, file: !359, line: 5074, baseType: !7981, size: 96)
!7981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !7982)
!7982 = !{!7983, !7984, !7985}
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7981, file: !749, line: 57, baseType: !752, size: 32)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7981, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7981, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7978, file: !359, line: 5075, baseType: !7926, size: 64, offset: 96)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7978, file: !359, line: 5076, baseType: !7988, offset: 160)
!7988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7895, file: !656, line: 343, baseType: !7990, size: 64, offset: 928)
!7990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !7991)
!7991 = !{!7992, !7993}
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7990, file: !723, line: 63, baseType: !113, size: 32)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7990, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!7994 = !{!7995}
!7995 = !DILocalVariable(name: "thread", arg: 1, scope: !7889, file: !7890, line: 27, type: !7893)
!7996 = !DILocation(line: 0, scope: !7889)
!7997 = !DILocation(line: 29, column: 6, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7889, file: !7890, line: 29, column: 6)
!7999 = !DILocation(line: 29, column: 15, scope: !7998)
!8000 = !DILocation(line: 29, column: 6, scope: !7889)
!8001 = !DILocation(line: 1031, column: 3, scope: !8002, inlinedAt: !8007)
!8002 = distinct !DISubprogram(name: "__get_IPSR", scope: !7032, file: !7032, line: 1027, type: !8003, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3165, retainedNodes: !8005)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!113}
!8005 = !{!8006}
!8006 = !DILocalVariable(name: "result", scope: !8002, file: !7032, line: 1029, type: !113)
!8007 = distinct !DILocation(line: 48, column: 10, scope: !8008, inlinedAt: !8012)
!8008 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8009, file: !8009, line: 46, type: !8010, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3165, retainedNodes: !437)
!8009 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8010 = !DISubroutineType(types: !8011)
!8011 = !{!422}
!8012 = distinct !DILocation(line: 30, column: 7, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !7890, line: 30, column: 7)
!8014 = distinct !DILexicalBlock(scope: !7998, file: !7890, line: 29, column: 26)
!8015 = !{i64 2458707}
!8016 = !DILocation(line: 0, scope: !8002, inlinedAt: !8007)
!8017 = !DILocation(line: 48, column: 9, scope: !8008, inlinedAt: !8012)
!8018 = !DILocation(line: 30, column: 7, scope: !8014)
!8019 = !DILocation(line: 42, column: 14, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8013, file: !7890, line: 30, column: 25)
!8021 = !DILocation(line: 48, column: 15, scope: !8020)
!8022 = !DILocation(line: 49, column: 3, scope: !8020)
!8023 = !DILocation(line: 52, column: 2, scope: !7889)
!8024 = !DILocation(line: 53, column: 1, scope: !7889)
!8025 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !651, file: !651, line: 127, type: !3381, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !644, retainedNodes: !437)
!8026 = !DILocation(line: 134, column: 2, scope: !8025)
!8027 = !DILocation(line: 156, column: 1, scope: !8025)
!8028 = !DILocation(line: 0, scope: !650)
!8029 = !DILocation(line: 289, column: 36, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !650, file: !651, line: 285, column: 2)
!8031 = !DILocation(line: 289, column: 42, scope: !8030)
!8032 = !DILocation(line: 300, column: 36, scope: !650)
!8033 = !DILocation(line: 301, column: 35, scope: !650)
!8034 = !DILocation(line: 302, column: 37, scope: !650)
!8035 = !DILocation(line: 311, column: 2, scope: !650)
!8036 = !DILocation(line: 316, column: 1, scope: !650)
!8037 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !827, file: !827, line: 180, type: !3381, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !437)
!8038 = !DILocation(line: 188, column: 12, scope: !8037)
!8039 = !DILocation(line: 271, column: 3, scope: !8040, inlinedAt: !8041)
!8040 = distinct !DISubprogram(name: "__DSB", scope: !7032, file: !7032, line: 269, type: !3381, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !437)
!8041 = distinct !DILocation(line: 192, column: 2, scope: !8037)
!8042 = !{i64 2615593}
!8043 = !DILocation(line: 260, column: 3, scope: !8044, inlinedAt: !8045)
!8044 = distinct !DISubprogram(name: "__ISB", scope: !7032, file: !7032, line: 258, type: !3381, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !437)
!8045 = distinct !DILocation(line: 193, column: 2, scope: !8037)
!8046 = !{i64 2615310}
!8047 = !DILocation(line: 194, column: 1, scope: !8037)
!8048 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !827, file: !827, line: 199, type: !3381, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !437)
!8049 = !DILocation(line: 282, column: 3, scope: !8050, inlinedAt: !8051)
!8050 = distinct !DISubprogram(name: "__DMB", scope: !7032, file: !7032, line: 280, type: !3381, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !437)
!8051 = distinct !DILocation(line: 202, column: 2, scope: !8048)
!8052 = !{i64 2615869}
!8053 = !DILocation(line: 205, column: 12, scope: !8048)
!8054 = !DILocation(line: 206, column: 1, scope: !8048)
!8055 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !827, file: !827, line: 275, type: !8056, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8069)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{null, !8058, !2168, !7275, !7275}
!8058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8059, size: 32)
!8059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8060)
!8060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !771, line: 52, size: 96, elements: !8061)
!8061 = !{!8062, !8063, !8064}
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8060, file: !771, line: 53, baseType: !22, size: 32)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8060, file: !771, line: 54, baseType: !439, size: 32, offset: 32)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8060, file: !771, line: 55, baseType: !8065, size: 32, offset: 64)
!8065 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !777, line: 151, baseType: !8066)
!8066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !777, line: 149, size: 32, elements: !8067)
!8067 = !{!8068}
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8066, file: !777, line: 150, baseType: !113, size: 32)
!8069 = !{!8070, !8071, !8072, !8073}
!8070 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8055, file: !827, line: 276, type: !8058)
!8071 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8055, file: !827, line: 276, type: !2168)
!8072 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8055, file: !827, line: 277, type: !7275)
!8073 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8055, file: !827, line: 277, type: !7275)
!8074 = !DILocation(line: 0, scope: !8055)
!8075 = !DILocation(line: 279, column: 6, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8055, file: !827, line: 279, column: 6)
!8077 = !DILocation(line: 285, column: 1, scope: !8055)
!8078 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8079, file: !8079, line: 220, type: !8080, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8082)
!8079 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8080 = !DISubroutineType(types: !8081)
!8081 = !{!108, !8058, !2168, !7275, !7275}
!8082 = !{!8083, !8084, !8085, !8086, !8087}
!8083 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8078, file: !8079, line: 221, type: !8058)
!8084 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8078, file: !8079, line: 221, type: !2168)
!8085 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8078, file: !8079, line: 222, type: !7275)
!8086 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8078, file: !8079, line: 223, type: !7275)
!8087 = !DILocalVariable(name: "mpu_reg_index", scope: !8078, file: !8079, line: 225, type: !108)
!8088 = !DILocation(line: 0, scope: !8078)
!8089 = !DILocation(line: 225, column: 22, scope: !8078)
!8090 = !DILocation(line: 233, column: 18, scope: !8078)
!8091 = !DILocation(line: 236, column: 23, scope: !8078)
!8092 = !DILocation(line: 236, column: 21, scope: !8078)
!8093 = !DILocation(line: 238, column: 2, scope: !8078)
!8094 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !827, file: !827, line: 105, type: !8095, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8097)
!8095 = !DISubroutineType(types: !8096)
!8096 = !{!108, !8058, !164, !164, !422}
!8097 = !{!8098, !8099, !8100, !8101, !8102, !8103}
!8098 = !DILocalVariable(name: "regions", arg: 1, scope: !8094, file: !827, line: 106, type: !8058)
!8099 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8094, file: !827, line: 106, type: !164)
!8100 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8094, file: !827, line: 106, type: !164)
!8101 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8094, file: !827, line: 107, type: !422)
!8102 = !DILocalVariable(name: "i", scope: !8094, file: !827, line: 109, type: !108)
!8103 = !DILocalVariable(name: "reg_index", scope: !8094, file: !827, line: 110, type: !108)
!8104 = !DILocation(line: 0, scope: !8094)
!8105 = !DILocation(line: 110, column: 18, scope: !8094)
!8106 = !DILocation(line: 112, column: 16, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8108, file: !827, line: 112, column: 2)
!8108 = distinct !DILexicalBlock(scope: !8094, file: !827, line: 112, column: 2)
!8109 = !DILocation(line: 112, column: 2, scope: !8108)
!8110 = !DILocation(line: 113, column: 7, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !827, line: 113, column: 7)
!8112 = distinct !DILexicalBlock(scope: !8107, file: !827, line: 112, column: 36)
!8113 = !DILocation(line: 113, column: 18, scope: !8111)
!8114 = !DILocation(line: 113, column: 23, scope: !8111)
!8115 = !DILocation(line: 113, column: 7, scope: !8112)
!8116 = !DILocation(line: 118, column: 23, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8112, file: !827, line: 118, column: 7)
!8118 = !DILocation(line: 119, column: 7, scope: !8117)
!8119 = !DILocation(line: 118, column: 7, scope: !8112)
!8120 = !DILocation(line: 120, column: 4, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !827, line: 120, column: 4)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !827, line: 120, column: 4)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !827, line: 120, column: 4)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !827, line: 120, column: 4)
!8125 = distinct !DILexicalBlock(scope: !8117, file: !827, line: 119, column: 45)
!8126 = !DILocation(line: 121, column: 4, scope: !8125)
!8127 = !DILocation(line: 124, column: 36, scope: !8112)
!8128 = !DILocation(line: 124, column: 15, scope: !8112)
!8129 = !DILocation(line: 126, column: 17, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8112, file: !827, line: 126, column: 7)
!8131 = !DILocation(line: 126, column: 7, scope: !8112)
!8132 = !DILocation(line: 131, column: 12, scope: !8112)
!8133 = !DILocation(line: 132, column: 2, scope: !8112)
!8134 = !DILocation(line: 112, column: 32, scope: !8107)
!8135 = distinct !{!8135, !8109, !8136}
!8136 = !DILocation(line: 132, column: 2, scope: !8108)
!8137 = !DILocation(line: 135, column: 1, scope: !8094)
!8138 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8079, file: !8079, line: 63, type: !8139, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8141)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!108, !8058}
!8141 = !{!8142, !8143}
!8142 = !DILocalVariable(name: "part", arg: 1, scope: !8138, file: !8079, line: 63, type: !8058)
!8143 = !DILocalVariable(name: "partition_is_valid", scope: !8138, file: !8079, line: 70, type: !108)
!8144 = !DILocation(line: 0, scope: !8138)
!8145 = !DILocation(line: 71, column: 11, scope: !8138)
!8146 = !DILocation(line: 71, column: 37, scope: !8138)
!8147 = !{i32 0, i32 33}
!8148 = !DILocation(line: 72, column: 3, scope: !8138)
!8149 = !DILocation(line: 71, column: 30, scope: !8138)
!8150 = !DILocation(line: 75, column: 11, scope: !8138)
!8151 = !DILocation(line: 75, column: 17, scope: !8138)
!8152 = !DILocation(line: 75, column: 38, scope: !8138)
!8153 = !DILocation(line: 77, column: 2, scope: !8138)
!8154 = distinct !DISubprogram(name: "mpu_configure_region", scope: !827, file: !827, line: 79, type: !8155, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8157)
!8155 = !DISubroutineType(types: !8156)
!8156 = !{!108, !2168, !8058}
!8157 = !{!8158, !8159, !8160}
!8158 = !DILocalVariable(name: "index", arg: 1, scope: !8154, file: !827, line: 79, type: !2168)
!8159 = !DILocalVariable(name: "new_region", arg: 2, scope: !8154, file: !827, line: 80, type: !8058)
!8160 = !DILocalVariable(name: "region_conf", scope: !8154, file: !827, line: 82, type: !816)
!8161 = !DILocation(line: 0, scope: !8154)
!8162 = !DILocation(line: 82, column: 2, scope: !8154)
!8163 = !DILocation(line: 82, column: 24, scope: !8154)
!8164 = !DILocation(line: 87, column: 33, scope: !8154)
!8165 = !DILocation(line: 87, column: 14, scope: !8154)
!8166 = !DILocation(line: 87, column: 19, scope: !8154)
!8167 = !DILocation(line: 91, column: 55, scope: !8154)
!8168 = !DILocation(line: 92, column: 16, scope: !8154)
!8169 = !DILocation(line: 92, column: 53, scope: !8154)
!8170 = !DILocation(line: 91, column: 2, scope: !8154)
!8171 = !DILocation(line: 95, column: 9, scope: !8154)
!8172 = !DILocation(line: 97, column: 1, scope: !8154)
!8173 = !DILocation(line: 95, column: 2, scope: !8154)
!8174 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8079, file: !8079, line: 113, type: !8175, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8180)
!8175 = !DISubroutineType(types: !8176)
!8176 = !{null, !8177, !8178, !113, !113}
!8177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 32)
!8178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8179, size: 32)
!8179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8065)
!8180 = !{!8181, !8182, !8183, !8184}
!8181 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8174, file: !8079, line: 114, type: !8177)
!8182 = !DILocalVariable(name: "attr", arg: 2, scope: !8174, file: !8079, line: 115, type: !8178)
!8183 = !DILocalVariable(name: "base", arg: 3, scope: !8174, file: !8079, line: 115, type: !113)
!8184 = !DILocalVariable(name: "size", arg: 4, scope: !8174, file: !8079, line: 115, type: !113)
!8185 = !DILocation(line: 0, scope: !8174)
!8186 = !DILocation(line: 127, column: 23, scope: !8174)
!8187 = !DILocation(line: 127, column: 35, scope: !8174)
!8188 = !DILocation(line: 127, column: 33, scope: !8174)
!8189 = !DILocation(line: 127, column: 10, scope: !8174)
!8190 = !DILocation(line: 127, column: 15, scope: !8174)
!8191 = !DILocation(line: 129, column: 1, scope: !8174)
!8192 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !827, file: !827, line: 57, type: !8193, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8195)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{!108, !2168, !814}
!8195 = !{!8196, !8197}
!8196 = !DILocalVariable(name: "index", arg: 1, scope: !8192, file: !827, line: 57, type: !2168)
!8197 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8192, file: !827, line: 58, type: !814)
!8198 = !DILocation(line: 0, scope: !8192)
!8199 = !DILocation(line: 61, column: 6, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8192, file: !827, line: 61, column: 6)
!8201 = !DILocation(line: 61, column: 12, scope: !8200)
!8202 = !DILocation(line: 61, column: 6, scope: !8192)
!8203 = !DILocation(line: 64, column: 3, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !827, line: 64, column: 3)
!8205 = distinct !DILexicalBlock(scope: !8206, file: !827, line: 64, column: 3)
!8206 = distinct !DILexicalBlock(scope: !8207, file: !827, line: 64, column: 3)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !827, line: 64, column: 3)
!8208 = distinct !DILexicalBlock(scope: !8200, file: !827, line: 61, column: 40)
!8209 = !DILocation(line: 65, column: 3, scope: !8208)
!8210 = !DILocation(line: 71, column: 2, scope: !8192)
!8211 = !DILocation(line: 73, column: 2, scope: !8192)
!8212 = !DILocation(line: 74, column: 1, scope: !8192)
!8213 = distinct !DISubprogram(name: "region_init", scope: !8079, file: !8079, line: 29, type: !8214, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8216)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{null, !7275, !814}
!8216 = !{!8217, !8218}
!8217 = !DILocalVariable(name: "index", arg: 1, scope: !8213, file: !8079, line: 29, type: !7275)
!8218 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8213, file: !8079, line: 30, type: !814)
!8219 = !DILocation(line: 0, scope: !8213)
!8220 = !DILocation(line: 33, column: 2, scope: !8213)
!8221 = !DILocation(line: 47, column: 28, scope: !8213)
!8222 = !DILocation(line: 47, column: 33, scope: !8213)
!8223 = !DILocation(line: 48, column: 26, scope: !8213)
!8224 = !DILocation(line: 47, column: 12, scope: !8213)
!8225 = !DILocation(line: 49, column: 32, scope: !8213)
!8226 = !DILocation(line: 49, column: 37, scope: !8213)
!8227 = !DILocation(line: 49, column: 12, scope: !8213)
!8228 = !DILocation(line: 53, column: 1, scope: !8213)
!8229 = distinct !DISubprogram(name: "set_region_number", scope: !8230, file: !8230, line: 32, type: !6721, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8231)
!8230 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8231 = !{!8232}
!8232 = !DILocalVariable(name: "index", arg: 1, scope: !8229, file: !8230, line: 32, type: !113)
!8233 = !DILocation(line: 0, scope: !8229)
!8234 = !DILocation(line: 34, column: 11, scope: !8229)
!8235 = !DILocation(line: 35, column: 1, scope: !8229)
!8236 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8079, file: !8079, line: 88, type: !8237, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8239)
!8237 = !DISubroutineType(types: !8238)
!8238 = !{!113, !113}
!8239 = !{!8240}
!8240 = !DILocalVariable(name: "size", arg: 1, scope: !8236, file: !8079, line: 88, type: !113)
!8241 = !DILocation(line: 0, scope: !8236)
!8242 = !DILocation(line: 91, column: 11, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8236, file: !8079, line: 91, column: 6)
!8244 = !DILocation(line: 91, column: 6, scope: !8236)
!8245 = !DILocation(line: 100, column: 11, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8236, file: !8079, line: 100, column: 6)
!8247 = !DILocation(line: 100, column: 6, scope: !8236)
!8248 = !DILocation(line: 104, column: 35, scope: !8236)
!8249 = !DILocation(line: 104, column: 16, scope: !8236)
!8250 = !DILocation(line: 104, column: 50, scope: !8236)
!8251 = !DILocation(line: 104, column: 72, scope: !8236)
!8252 = !DILocation(line: 104, column: 2, scope: !8236)
!8253 = !DILocation(line: 106, column: 1, scope: !8236)
!8254 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !827, file: !827, line: 307, type: !8255, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8257)
!8255 = !DISubroutineType(types: !8256)
!8256 = !{null, !8058, !164}
!8257 = !{!8258, !8259}
!8258 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8254, file: !827, line: 308, type: !8058)
!8259 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8254, file: !827, line: 308, type: !164)
!8260 = !DILocation(line: 0, scope: !8254)
!8261 = !DILocation(line: 310, column: 6, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8254, file: !827, line: 310, column: 6)
!8263 = !DILocation(line: 316, column: 1, scope: !8254)
!8264 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8079, file: !8079, line: 249, type: !8265, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8267)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{!108, !8058, !164}
!8267 = !{!8268, !8269, !8270, !8271}
!8268 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8264, file: !8079, line: 250, type: !8058)
!8269 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8264, file: !8079, line: 250, type: !164)
!8270 = !DILocalVariable(name: "mpu_reg_index", scope: !8264, file: !8079, line: 252, type: !108)
!8271 = !DILocalVariable(name: "i", scope: !8272, file: !8079, line: 264, type: !108)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !8079, line: 264, column: 3)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !8079, line: 261, column: 32)
!8274 = distinct !DILexicalBlock(scope: !8264, file: !8079, line: 261, column: 6)
!8275 = !DILocation(line: 0, scope: !8264)
!8276 = !DILocation(line: 252, column: 22, scope: !8264)
!8277 = !DILocation(line: 258, column: 18, scope: !8264)
!8278 = !DILocation(line: 261, column: 20, scope: !8274)
!8279 = !DILocation(line: 261, column: 6, scope: !8264)
!8280 = !DILocation(line: 0, scope: !8272)
!8281 = !DILocation(line: 265, column: 4, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8283, file: !8079, line: 264, column: 59)
!8283 = distinct !DILexicalBlock(scope: !8272, file: !8079, line: 264, column: 3)
!8284 = !DILocation(line: 264, column: 55, scope: !8283)
!8285 = !DILocation(line: 264, column: 33, scope: !8283)
!8286 = !DILocation(line: 264, column: 3, scope: !8272)
!8287 = distinct !{!8287, !8286, !8288}
!8288 = !DILocation(line: 266, column: 3, scope: !8272)
!8289 = !DILocation(line: 269, column: 2, scope: !8264)
!8290 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8291, file: !8291, line: 218, type: !6721, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8292)
!8291 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8292 = !{!8293}
!8293 = !DILocalVariable(name: "rnr", arg: 1, scope: !8290, file: !8291, line: 218, type: !113)
!8294 = !DILocation(line: 0, scope: !8290)
!8295 = !DILocation(line: 220, column: 12, scope: !8290)
!8296 = !DILocation(line: 221, column: 13, scope: !8290)
!8297 = !DILocation(line: 222, column: 1, scope: !8290)
!8298 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !827, file: !827, line: 326, type: !8299, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !8301)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{!108}
!8301 = !{!8302}
!8302 = !DILocalVariable(name: "r_index", scope: !8298, file: !827, line: 328, type: !113)
!8303 = !DILocation(line: 330, column: 17, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8298, file: !827, line: 330, column: 6)
!8305 = !DILocation(line: 330, column: 29, scope: !8304)
!8306 = !DILocation(line: 330, column: 6, scope: !8298)
!8307 = !DILocation(line: 347, column: 2, scope: !8298)
!8308 = !DILocation(line: 0, scope: !8298)
!8309 = !DILocation(line: 364, column: 29, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !827, line: 364, column: 2)
!8311 = distinct !DILexicalBlock(scope: !8298, file: !827, line: 364, column: 2)
!8312 = !DILocation(line: 364, column: 2, scope: !8311)
!8313 = !DILocation(line: 365, column: 25, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8310, file: !827, line: 364, column: 66)
!8315 = !DILocation(line: 365, column: 3, scope: !8314)
!8316 = !DILocation(line: 364, column: 62, scope: !8310)
!8317 = distinct !{!8317, !8312, !8318}
!8318 = !DILocation(line: 366, column: 2, scope: !8311)
!8319 = !DILocation(line: 369, column: 23, scope: !8298)
!8320 = !DILocation(line: 369, column: 21, scope: !8298)
!8321 = !DILocation(line: 372, column: 2, scope: !8298)
!8322 = !DILocation(line: 443, column: 2, scope: !8298)
!8323 = !DILocation(line: 444, column: 1, scope: !8298)
!8324 = distinct !DISubprogram(name: "strcpy", scope: !8325, file: !8325, line: 20, type: !8326, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8330)
!8325 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!443, !8328, !8329}
!8328 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !443)
!8329 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !105)
!8330 = !{!8331, !8332, !8333}
!8331 = !DILocalVariable(name: "d", arg: 1, scope: !8324, file: !8325, line: 20, type: !8328)
!8332 = !DILocalVariable(name: "s", arg: 2, scope: !8324, file: !8325, line: 20, type: !8329)
!8333 = !DILocalVariable(name: "dest", scope: !8324, file: !8325, line: 22, type: !443)
!8334 = !DILocation(line: 0, scope: !8324)
!8335 = !DILocation(line: 24, column: 9, scope: !8324)
!8336 = !DILocation(line: 24, column: 12, scope: !8324)
!8337 = !DILocation(line: 24, column: 2, scope: !8324)
!8338 = !DILocation(line: 25, column: 6, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8324, file: !8325, line: 24, column: 21)
!8340 = !DILocation(line: 26, column: 4, scope: !8339)
!8341 = !DILocation(line: 27, column: 4, scope: !8339)
!8342 = distinct !{!8342, !8337, !8343}
!8343 = !DILocation(line: 28, column: 2, scope: !8324)
!8344 = !DILocation(line: 30, column: 5, scope: !8324)
!8345 = !DILocation(line: 32, column: 2, scope: !8324)
!8346 = distinct !DISubprogram(name: "strncpy", scope: !8325, file: !8325, line: 42, type: !8347, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8349)
!8347 = !DISubroutineType(types: !8348)
!8348 = !{!443, !8328, !8329, !439}
!8349 = !{!8350, !8351, !8352, !8353}
!8350 = !DILocalVariable(name: "d", arg: 1, scope: !8346, file: !8325, line: 42, type: !8328)
!8351 = !DILocalVariable(name: "s", arg: 2, scope: !8346, file: !8325, line: 42, type: !8329)
!8352 = !DILocalVariable(name: "n", arg: 3, scope: !8346, file: !8325, line: 42, type: !439)
!8353 = !DILocalVariable(name: "dest", scope: !8346, file: !8325, line: 44, type: !443)
!8354 = !DILocation(line: 0, scope: !8346)
!8355 = !DILocation(line: 46, column: 12, scope: !8346)
!8356 = !DILocation(line: 46, column: 17, scope: !8346)
!8357 = !DILocation(line: 46, column: 20, scope: !8346)
!8358 = !DILocation(line: 46, column: 23, scope: !8346)
!8359 = !DILocation(line: 46, column: 2, scope: !8346)
!8360 = !DILocation(line: 47, column: 6, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8346, file: !8325, line: 46, column: 32)
!8362 = !DILocation(line: 48, column: 4, scope: !8361)
!8363 = !DILocation(line: 49, column: 4, scope: !8361)
!8364 = !DILocation(line: 50, column: 4, scope: !8361)
!8365 = distinct !{!8365, !8359, !8366}
!8366 = !DILocation(line: 51, column: 2, scope: !8346)
!8367 = !DILocation(line: 54, column: 6, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8346, file: !8325, line: 53, column: 16)
!8369 = !DILocation(line: 55, column: 4, scope: !8368)
!8370 = !DILocation(line: 56, column: 4, scope: !8368)
!8371 = !DILocation(line: 53, column: 11, scope: !8346)
!8372 = !DILocation(line: 53, column: 2, scope: !8346)
!8373 = distinct !{!8373, !8372, !8374}
!8374 = !DILocation(line: 57, column: 2, scope: !8346)
!8375 = !DILocation(line: 59, column: 2, scope: !8346)
!8376 = distinct !DISubprogram(name: "strchr", scope: !8325, file: !8325, line: 69, type: !8377, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8379)
!8377 = !DISubroutineType(types: !8378)
!8378 = !{!443, !105, !108}
!8379 = !{!8380, !8381, !8382}
!8380 = !DILocalVariable(name: "s", arg: 1, scope: !8376, file: !8325, line: 69, type: !105)
!8381 = !DILocalVariable(name: "c", arg: 2, scope: !8376, file: !8325, line: 69, type: !108)
!8382 = !DILocalVariable(name: "tmp", scope: !8376, file: !8325, line: 71, type: !107)
!8383 = !DILocation(line: 0, scope: !8376)
!8384 = !DILocation(line: 73, column: 2, scope: !8376)
!8385 = !DILocation(line: 73, column: 10, scope: !8376)
!8386 = !DILocation(line: 73, column: 13, scope: !8376)
!8387 = !DILocation(line: 73, column: 21, scope: !8376)
!8388 = !DILocation(line: 74, column: 4, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8376, file: !8325, line: 73, column: 38)
!8390 = distinct !{!8390, !8384, !8391}
!8391 = !DILocation(line: 75, column: 2, scope: !8376)
!8392 = !DILocation(line: 77, column: 9, scope: !8376)
!8393 = !DILocation(line: 77, column: 2, scope: !8376)
!8394 = distinct !DISubprogram(name: "strrchr", scope: !8325, file: !8325, line: 87, type: !8377, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8395)
!8395 = !{!8396, !8397, !8398}
!8396 = !DILocalVariable(name: "s", arg: 1, scope: !8394, file: !8325, line: 87, type: !105)
!8397 = !DILocalVariable(name: "c", arg: 2, scope: !8394, file: !8325, line: 87, type: !108)
!8398 = !DILocalVariable(name: "match", scope: !8394, file: !8325, line: 89, type: !443)
!8399 = !DILocation(line: 0, scope: !8394)
!8400 = !DILocation(line: 91, column: 2, scope: !8394)
!8401 = !DILocation(line: 92, column: 7, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !8325, line: 92, column: 7)
!8403 = distinct !DILexicalBlock(scope: !8394, file: !8325, line: 91, column: 5)
!8404 = !DILocation(line: 92, column: 10, scope: !8402)
!8405 = !DILocation(line: 92, column: 7, scope: !8403)
!8406 = !DILocation(line: 95, column: 13, scope: !8394)
!8407 = !DILocation(line: 95, column: 2, scope: !8403)
!8408 = distinct !{!8408, !8400, !8409}
!8409 = !DILocation(line: 95, column: 15, scope: !8394)
!8410 = !DILocation(line: 97, column: 2, scope: !8394)
!8411 = distinct !DISubprogram(name: "strlen", scope: !8325, file: !8325, line: 107, type: !8412, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8414)
!8412 = !DISubroutineType(types: !8413)
!8413 = !{!439, !105}
!8414 = !{!8415, !8416}
!8415 = !DILocalVariable(name: "s", arg: 1, scope: !8411, file: !8325, line: 107, type: !105)
!8416 = !DILocalVariable(name: "n", scope: !8411, file: !8325, line: 109, type: !439)
!8417 = !DILocation(line: 0, scope: !8411)
!8418 = !DILocation(line: 111, column: 9, scope: !8411)
!8419 = !DILocation(line: 111, column: 12, scope: !8411)
!8420 = !DILocation(line: 111, column: 2, scope: !8411)
!8421 = !DILocation(line: 112, column: 4, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8411, file: !8325, line: 111, column: 21)
!8423 = !DILocation(line: 113, column: 4, scope: !8422)
!8424 = distinct !{!8424, !8420, !8425}
!8425 = !DILocation(line: 114, column: 2, scope: !8411)
!8426 = !DILocation(line: 116, column: 2, scope: !8411)
!8427 = distinct !DISubprogram(name: "strnlen", scope: !8325, file: !8325, line: 126, type: !8428, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8430)
!8428 = !DISubroutineType(types: !8429)
!8429 = !{!439, !105, !439}
!8430 = !{!8431, !8432, !8433}
!8431 = !DILocalVariable(name: "s", arg: 1, scope: !8427, file: !8325, line: 126, type: !105)
!8432 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8427, file: !8325, line: 126, type: !439)
!8433 = !DILocalVariable(name: "n", scope: !8427, file: !8325, line: 128, type: !439)
!8434 = !DILocation(line: 0, scope: !8427)
!8435 = !DILocation(line: 130, column: 9, scope: !8427)
!8436 = !DILocation(line: 130, column: 12, scope: !8427)
!8437 = !DILocation(line: 130, column: 20, scope: !8427)
!8438 = !DILocation(line: 130, column: 2, scope: !8427)
!8439 = !DILocation(line: 131, column: 4, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8427, file: !8325, line: 130, column: 35)
!8441 = !DILocation(line: 132, column: 4, scope: !8440)
!8442 = distinct !{!8442, !8438, !8443}
!8443 = !DILocation(line: 133, column: 2, scope: !8427)
!8444 = !DILocation(line: 135, column: 2, scope: !8427)
!8445 = distinct !DISubprogram(name: "strcmp", scope: !8325, file: !8325, line: 145, type: !8446, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8448)
!8446 = !DISubroutineType(types: !8447)
!8447 = !{!108, !105, !105}
!8448 = !{!8449, !8450}
!8449 = !DILocalVariable(name: "s1", arg: 1, scope: !8445, file: !8325, line: 145, type: !105)
!8450 = !DILocalVariable(name: "s2", arg: 2, scope: !8445, file: !8325, line: 145, type: !105)
!8451 = !DILocation(line: 0, scope: !8445)
!8452 = !DILocation(line: 147, column: 10, scope: !8445)
!8453 = !DILocation(line: 147, column: 17, scope: !8445)
!8454 = !DILocation(line: 147, column: 14, scope: !8445)
!8455 = !DILocation(line: 147, column: 22, scope: !8445)
!8456 = !DILocation(line: 148, column: 5, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8445, file: !8325, line: 147, column: 40)
!8458 = !DILocation(line: 149, column: 5, scope: !8457)
!8459 = distinct !{!8459, !8460, !8461}
!8460 = !DILocation(line: 147, column: 2, scope: !8445)
!8461 = !DILocation(line: 150, column: 2, scope: !8445)
!8462 = !DILocation(line: 152, column: 9, scope: !8445)
!8463 = !DILocation(line: 152, column: 15, scope: !8445)
!8464 = !DILocation(line: 152, column: 13, scope: !8445)
!8465 = !DILocation(line: 152, column: 2, scope: !8445)
!8466 = distinct !DISubprogram(name: "strncmp", scope: !8325, file: !8325, line: 162, type: !8467, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8469)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{!108, !105, !105, !439}
!8469 = !{!8470, !8471, !8472}
!8470 = !DILocalVariable(name: "s1", arg: 1, scope: !8466, file: !8325, line: 162, type: !105)
!8471 = !DILocalVariable(name: "s2", arg: 2, scope: !8466, file: !8325, line: 162, type: !105)
!8472 = !DILocalVariable(name: "n", arg: 3, scope: !8466, file: !8325, line: 162, type: !439)
!8473 = !DILocation(line: 0, scope: !8466)
!8474 = !DILocation(line: 164, column: 17, scope: !8466)
!8475 = !DILocation(line: 164, column: 21, scope: !8466)
!8476 = !DILocation(line: 164, column: 28, scope: !8466)
!8477 = !DILocation(line: 164, column: 25, scope: !8466)
!8478 = !DILocation(line: 164, column: 33, scope: !8466)
!8479 = !DILocation(line: 165, column: 5, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8466, file: !8325, line: 164, column: 51)
!8481 = !DILocation(line: 166, column: 5, scope: !8480)
!8482 = !DILocation(line: 167, column: 4, scope: !8480)
!8483 = distinct !{!8483, !8484, !8485}
!8484 = !DILocation(line: 164, column: 2, scope: !8466)
!8485 = !DILocation(line: 168, column: 2, scope: !8466)
!8486 = !DILocation(line: 170, column: 25, scope: !8466)
!8487 = !DILocation(line: 170, column: 31, scope: !8466)
!8488 = !DILocation(line: 170, column: 29, scope: !8466)
!8489 = !DILocation(line: 170, column: 9, scope: !8466)
!8490 = !DILocation(line: 170, column: 2, scope: !8466)
!8491 = distinct !DISubprogram(name: "strtok_r", scope: !8325, file: !8325, line: 180, type: !8492, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8494)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{!443, !443, !105, !539}
!8494 = !{!8495, !8496, !8497, !8498, !8499}
!8495 = !DILocalVariable(name: "str", arg: 1, scope: !8491, file: !8325, line: 180, type: !443)
!8496 = !DILocalVariable(name: "sep", arg: 2, scope: !8491, file: !8325, line: 180, type: !105)
!8497 = !DILocalVariable(name: "state", arg: 3, scope: !8491, file: !8325, line: 180, type: !539)
!8498 = !DILocalVariable(name: "start", scope: !8491, file: !8325, line: 182, type: !443)
!8499 = !DILocalVariable(name: "end", scope: !8491, file: !8325, line: 182, type: !443)
!8500 = !DILocation(line: 0, scope: !8491)
!8501 = !DILocation(line: 184, column: 10, scope: !8491)
!8502 = !DILocation(line: 184, column: 22, scope: !8491)
!8503 = !DILocation(line: 187, column: 9, scope: !8491)
!8504 = !DILocation(line: 187, column: 16, scope: !8491)
!8505 = !DILocation(line: 187, column: 19, scope: !8491)
!8506 = !DILocation(line: 187, column: 2, scope: !8491)
!8507 = !DILocation(line: 188, column: 8, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8491, file: !8325, line: 187, column: 40)
!8509 = distinct !{!8509, !8506, !8510}
!8510 = !DILocation(line: 189, column: 2, scope: !8491)
!8511 = !DILocation(line: 198, column: 9, scope: !8491)
!8512 = !DILocation(line: 198, column: 18, scope: !8491)
!8513 = !DILocation(line: 198, column: 17, scope: !8491)
!8514 = !DILocation(line: 198, column: 2, scope: !8491)
!8515 = !DILocation(line: 199, column: 6, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8491, file: !8325, line: 198, column: 37)
!8517 = !DILocation(line: 198, column: 14, scope: !8491)
!8518 = distinct !{!8518, !8514, !8519}
!8519 = !DILocation(line: 200, column: 2, scope: !8491)
!8520 = !DILocation(line: 203, column: 8, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !8325, line: 202, column: 20)
!8522 = distinct !DILexicalBlock(scope: !8491, file: !8325, line: 202, column: 6)
!8523 = !DILocation(line: 204, column: 16, scope: !8521)
!8524 = !DILocation(line: 205, column: 2, scope: !8521)
!8525 = !DILocation(line: 210, column: 1, scope: !8491)
!8526 = distinct !DISubprogram(name: "strcat", scope: !8325, file: !8325, line: 212, type: !8326, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8527)
!8527 = !{!8528, !8529}
!8528 = !DILocalVariable(name: "dest", arg: 1, scope: !8526, file: !8325, line: 212, type: !8328)
!8529 = !DILocalVariable(name: "src", arg: 2, scope: !8526, file: !8325, line: 212, type: !8329)
!8530 = !DILocation(line: 0, scope: !8526)
!8531 = !DILocation(line: 214, column: 16, scope: !8526)
!8532 = !DILocation(line: 214, column: 14, scope: !8526)
!8533 = !DILocation(line: 214, column: 2, scope: !8526)
!8534 = !DILocation(line: 215, column: 2, scope: !8526)
!8535 = distinct !DISubprogram(name: "strncat", scope: !8325, file: !8325, line: 218, type: !8347, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8536)
!8536 = !{!8537, !8538, !8539, !8540, !8541}
!8537 = !DILocalVariable(name: "dest", arg: 1, scope: !8535, file: !8325, line: 218, type: !8328)
!8538 = !DILocalVariable(name: "src", arg: 2, scope: !8535, file: !8325, line: 218, type: !8329)
!8539 = !DILocalVariable(name: "n", arg: 3, scope: !8535, file: !8325, line: 219, type: !439)
!8540 = !DILocalVariable(name: "orig_dest", scope: !8535, file: !8325, line: 221, type: !443)
!8541 = !DILocalVariable(name: "len", scope: !8535, file: !8325, line: 222, type: !439)
!8542 = !DILocation(line: 0, scope: !8535)
!8543 = !DILocation(line: 222, column: 15, scope: !8535)
!8544 = !DILocation(line: 224, column: 7, scope: !8535)
!8545 = !DILocation(line: 225, column: 14, scope: !8535)
!8546 = !DILocation(line: 225, column: 19, scope: !8535)
!8547 = !DILocation(line: 225, column: 11, scope: !8535)
!8548 = !DILocation(line: 225, column: 23, scope: !8535)
!8549 = !DILocation(line: 225, column: 28, scope: !8535)
!8550 = !DILocation(line: 225, column: 2, scope: !8535)
!8551 = !DILocation(line: 226, column: 17, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8535, file: !8325, line: 225, column: 38)
!8553 = !DILocation(line: 226, column: 8, scope: !8552)
!8554 = !DILocation(line: 226, column: 11, scope: !8552)
!8555 = distinct !{!8555, !8550, !8556}
!8556 = !DILocation(line: 227, column: 2, scope: !8535)
!8557 = !DILocation(line: 228, column: 8, scope: !8535)
!8558 = !DILocation(line: 230, column: 2, scope: !8535)
!8559 = distinct !DISubprogram(name: "memcmp", scope: !8325, file: !8325, line: 239, type: !8560, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8562)
!8560 = !DISubroutineType(types: !8561)
!8561 = !{!108, !13, !13, !439}
!8562 = !{!8563, !8564, !8565, !8566, !8567}
!8563 = !DILocalVariable(name: "m1", arg: 1, scope: !8559, file: !8325, line: 239, type: !13)
!8564 = !DILocalVariable(name: "m2", arg: 2, scope: !8559, file: !8325, line: 239, type: !13)
!8565 = !DILocalVariable(name: "n", arg: 3, scope: !8559, file: !8325, line: 239, type: !439)
!8566 = !DILocalVariable(name: "c1", scope: !8559, file: !8325, line: 241, type: !105)
!8567 = !DILocalVariable(name: "c2", scope: !8559, file: !8325, line: 242, type: !105)
!8568 = !DILocation(line: 0, scope: !8559)
!8569 = !DILocation(line: 244, column: 7, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8559, file: !8325, line: 244, column: 6)
!8571 = !DILocation(line: 244, column: 6, scope: !8559)
!8572 = !DILocation(line: 248, column: 10, scope: !8559)
!8573 = !DILocation(line: 248, column: 14, scope: !8559)
!8574 = !DILocation(line: 248, column: 19, scope: !8559)
!8575 = !DILocation(line: 248, column: 2, scope: !8559)
!8576 = !DILocation(line: 248, column: 23, scope: !8559)
!8577 = !DILocation(line: 248, column: 30, scope: !8559)
!8578 = !DILocation(line: 248, column: 27, scope: !8559)
!8579 = !DILocation(line: 249, column: 5, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8559, file: !8325, line: 248, column: 36)
!8581 = !DILocation(line: 250, column: 5, scope: !8580)
!8582 = distinct !{!8582, !8575, !8583}
!8583 = !DILocation(line: 251, column: 2, scope: !8559)
!8584 = !DILocation(line: 253, column: 9, scope: !8559)
!8585 = !DILocation(line: 253, column: 15, scope: !8559)
!8586 = !DILocation(line: 253, column: 13, scope: !8559)
!8587 = !DILocation(line: 253, column: 2, scope: !8559)
!8588 = !DILocation(line: 254, column: 1, scope: !8559)
!8589 = distinct !DISubprogram(name: "memmove", scope: !8325, file: !8325, line: 263, type: !8590, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8592)
!8590 = !DISubroutineType(types: !8591)
!8591 = !{!104, !104, !13, !439}
!8592 = !{!8593, !8594, !8595, !8596, !8597}
!8593 = !DILocalVariable(name: "d", arg: 1, scope: !8589, file: !8325, line: 263, type: !104)
!8594 = !DILocalVariable(name: "s", arg: 2, scope: !8589, file: !8325, line: 263, type: !13)
!8595 = !DILocalVariable(name: "n", arg: 3, scope: !8589, file: !8325, line: 263, type: !439)
!8596 = !DILocalVariable(name: "dest", scope: !8589, file: !8325, line: 265, type: !443)
!8597 = !DILocalVariable(name: "src", scope: !8589, file: !8325, line: 266, type: !105)
!8598 = !DILocation(line: 0, scope: !8589)
!8599 = !DILocation(line: 268, column: 21, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8589, file: !8325, line: 268, column: 6)
!8601 = !DILocation(line: 268, column: 28, scope: !8600)
!8602 = !DILocation(line: 268, column: 6, scope: !8589)
!8603 = !DILocation(line: 280, column: 12, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8600, file: !8325, line: 278, column: 9)
!8605 = !DILocation(line: 280, column: 3, scope: !8604)
!8606 = !DILocation(line: 275, column: 5, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !8325, line: 274, column: 17)
!8608 = distinct !DILexicalBlock(scope: !8600, file: !8325, line: 268, column: 33)
!8609 = !DILocation(line: 276, column: 14, scope: !8607)
!8610 = !DILocation(line: 276, column: 4, scope: !8607)
!8611 = !DILocation(line: 276, column: 12, scope: !8607)
!8612 = !DILocation(line: 274, column: 12, scope: !8608)
!8613 = !DILocation(line: 274, column: 3, scope: !8608)
!8614 = distinct !{!8614, !8613, !8615}
!8615 = !DILocation(line: 277, column: 3, scope: !8608)
!8616 = !DILocation(line: 281, column: 12, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8604, file: !8325, line: 280, column: 17)
!8618 = !DILocation(line: 281, column: 10, scope: !8617)
!8619 = !DILocation(line: 282, column: 8, scope: !8617)
!8620 = !DILocation(line: 283, column: 7, scope: !8617)
!8621 = !DILocation(line: 284, column: 5, scope: !8617)
!8622 = distinct !{!8622, !8605, !8623}
!8623 = !DILocation(line: 285, column: 3, scope: !8604)
!8624 = !DILocation(line: 288, column: 2, scope: !8589)
!8625 = distinct !DISubprogram(name: "memcpy", scope: !8325, file: !8325, line: 298, type: !8626, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8630)
!8626 = !DISubroutineType(types: !8627)
!8627 = !{!104, !8628, !8629, !439}
!8628 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8629 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8630 = !{!8631, !8632, !8633, !8634, !8635}
!8631 = !DILocalVariable(name: "d", arg: 1, scope: !8625, file: !8325, line: 298, type: !8628)
!8632 = !DILocalVariable(name: "s", arg: 2, scope: !8625, file: !8325, line: 298, type: !8629)
!8633 = !DILocalVariable(name: "n", arg: 3, scope: !8625, file: !8325, line: 298, type: !439)
!8634 = !DILocalVariable(name: "d_byte", scope: !8625, file: !8325, line: 302, type: !1394)
!8635 = !DILocalVariable(name: "s_byte", scope: !8625, file: !8325, line: 303, type: !3196)
!8636 = !DILocation(line: 0, scope: !8625)
!8637 = !DILocation(line: 337, column: 11, scope: !8625)
!8638 = !DILocation(line: 337, column: 2, scope: !8625)
!8639 = !DILocation(line: 338, column: 25, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8625, file: !8325, line: 337, column: 16)
!8641 = !DILocation(line: 338, column: 17, scope: !8640)
!8642 = !DILocation(line: 338, column: 11, scope: !8640)
!8643 = !DILocation(line: 338, column: 15, scope: !8640)
!8644 = !DILocation(line: 339, column: 4, scope: !8640)
!8645 = distinct !{!8645, !8638, !8646}
!8646 = !DILocation(line: 340, column: 2, scope: !8625)
!8647 = !DILocation(line: 342, column: 2, scope: !8625)
!8648 = distinct !DISubprogram(name: "memset", scope: !8325, file: !8325, line: 352, type: !8649, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8651)
!8649 = !DISubroutineType(types: !8650)
!8650 = !{!104, !104, !108, !439}
!8651 = !{!8652, !8653, !8654, !8655, !8656}
!8652 = !DILocalVariable(name: "buf", arg: 1, scope: !8648, file: !8325, line: 352, type: !104)
!8653 = !DILocalVariable(name: "c", arg: 2, scope: !8648, file: !8325, line: 352, type: !108)
!8654 = !DILocalVariable(name: "n", arg: 3, scope: !8648, file: !8325, line: 352, type: !439)
!8655 = !DILocalVariable(name: "d_byte", scope: !8648, file: !8325, line: 356, type: !1394)
!8656 = !DILocalVariable(name: "c_byte", scope: !8648, file: !8325, line: 357, type: !165)
!8657 = !DILocation(line: 0, scope: !8648)
!8658 = !DILocation(line: 357, column: 25, scope: !8648)
!8659 = !DILocation(line: 389, column: 11, scope: !8648)
!8660 = !DILocation(line: 389, column: 2, scope: !8648)
!8661 = !DILocation(line: 390, column: 11, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8648, file: !8325, line: 389, column: 16)
!8663 = !DILocation(line: 390, column: 15, scope: !8662)
!8664 = !DILocation(line: 391, column: 4, scope: !8662)
!8665 = distinct !{!8665, !8660, !8666}
!8666 = !DILocation(line: 392, column: 2, scope: !8648)
!8667 = !DILocation(line: 394, column: 2, scope: !8648)
!8668 = distinct !DISubprogram(name: "memchr", scope: !8325, file: !8325, line: 404, type: !8669, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !8671)
!8669 = !DISubroutineType(types: !8670)
!8670 = !{!104, !13, !108, !439}
!8671 = !{!8672, !8673, !8674, !8675}
!8672 = !DILocalVariable(name: "s", arg: 1, scope: !8668, file: !8325, line: 404, type: !13)
!8673 = !DILocalVariable(name: "c", arg: 2, scope: !8668, file: !8325, line: 404, type: !108)
!8674 = !DILocalVariable(name: "n", arg: 3, scope: !8668, file: !8325, line: 404, type: !439)
!8675 = !DILocalVariable(name: "p", scope: !8676, file: !8325, line: 407, type: !3196)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !8325, line: 406, column: 14)
!8677 = distinct !DILexicalBlock(scope: !8668, file: !8325, line: 406, column: 6)
!8678 = !DILocation(line: 0, scope: !8668)
!8679 = !DILocation(line: 406, column: 8, scope: !8677)
!8680 = !DILocation(line: 406, column: 6, scope: !8668)
!8681 = !DILocation(line: 409, column: 3, scope: !8676)
!8682 = !DILocation(line: 0, scope: !8676)
!8683 = !DILocation(line: 410, column: 8, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8685, file: !8325, line: 410, column: 8)
!8685 = distinct !DILexicalBlock(scope: !8676, file: !8325, line: 409, column: 6)
!8686 = !DILocation(line: 410, column: 13, scope: !8684)
!8687 = !DILocation(line: 410, column: 8, scope: !8685)
!8688 = distinct !{!8688, !8681, !8689}
!8689 = !DILocation(line: 414, column: 20, scope: !8676)
!8690 = !DILocation(line: 417, column: 2, scope: !8668)
!8691 = !DILocation(line: 418, column: 1, scope: !8668)
!8692 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !837, file: !837, line: 23, type: !4971, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8693)
!8693 = !{!8694}
!8694 = !DILocalVariable(name: "hook", arg: 1, scope: !8692, file: !837, line: 23, type: !554)
!8695 = !DILocation(line: 0, scope: !8692)
!8696 = !DILocation(line: 25, column: 15, scope: !8692)
!8697 = !DILocation(line: 26, column: 1, scope: !8692)
!8698 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !837, file: !837, line: 14, type: !555, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8699)
!8699 = !{!8700}
!8700 = !DILocalVariable(name: "c", arg: 1, scope: !8698, file: !837, line: 14, type: !108)
!8701 = !DILocation(line: 0, scope: !8698)
!8702 = !DILocation(line: 18, column: 2, scope: !8698)
!8703 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !837, file: !837, line: 28, type: !8704, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8706)
!8704 = !DISubroutineType(types: !8705)
!8705 = !{!108, !108, !833}
!8706 = !{!8707, !8708}
!8707 = !DILocalVariable(name: "c", arg: 1, scope: !8703, file: !837, line: 28, type: !108)
!8708 = !DILocalVariable(name: "stream", arg: 2, scope: !8703, file: !837, line: 28, type: !833)
!8709 = !DILocation(line: 0, scope: !8703)
!8710 = !DILocation(line: 30, column: 27, scope: !8703)
!8711 = !DILocation(line: 30, column: 50, scope: !8703)
!8712 = !DILocation(line: 30, column: 9, scope: !8703)
!8713 = !DILocation(line: 30, column: 2, scope: !8703)
!8714 = distinct !DISubprogram(name: "fputc", scope: !837, file: !837, line: 41, type: !8704, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8715)
!8715 = !{!8716, !8717}
!8716 = !DILocalVariable(name: "c", arg: 1, scope: !8714, file: !837, line: 41, type: !108)
!8717 = !DILocalVariable(name: "stream", arg: 2, scope: !8714, file: !837, line: 41, type: !833)
!8718 = !DILocation(line: 0, scope: !8714)
!8719 = !DILocation(line: 43, column: 9, scope: !8714)
!8720 = !DILocation(line: 43, column: 2, scope: !8714)
!8721 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8722, file: !8722, line: 72, type: !8704, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8723)
!8722 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!8723 = !{!8724, !8725}
!8724 = !DILocalVariable(name: "c", arg: 1, scope: !8721, file: !8722, line: 72, type: !108)
!8725 = !DILocalVariable(name: "stream", arg: 2, scope: !8721, file: !8722, line: 72, type: !833)
!8726 = !DILocation(line: 0, scope: !8721)
!8727 = !DILocation(line: 81, column: 2, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8721, file: !8722, line: 81, column: 2)
!8729 = !{i64 2152295418}
!8730 = !DILocation(line: 82, column: 9, scope: !8721)
!8731 = !DILocation(line: 82, column: 2, scope: !8721)
!8732 = distinct !DISubprogram(name: "fputs", scope: !837, file: !837, line: 46, type: !8733, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8736)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{!108, !8329, !8735}
!8735 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !833)
!8736 = !{!8737, !8738, !8739, !8740}
!8737 = !DILocalVariable(name: "s", arg: 1, scope: !8732, file: !837, line: 46, type: !8329)
!8738 = !DILocalVariable(name: "stream", arg: 2, scope: !8732, file: !837, line: 46, type: !8735)
!8739 = !DILocalVariable(name: "len", scope: !8732, file: !837, line: 48, type: !108)
!8740 = !DILocalVariable(name: "ret", scope: !8732, file: !837, line: 49, type: !108)
!8741 = !DILocation(line: 0, scope: !8732)
!8742 = !DILocation(line: 48, column: 12, scope: !8732)
!8743 = !DILocation(line: 51, column: 8, scope: !8732)
!8744 = !DILocation(line: 53, column: 13, scope: !8732)
!8745 = !DILocation(line: 53, column: 9, scope: !8732)
!8746 = !DILocation(line: 53, column: 2, scope: !8732)
!8747 = distinct !DISubprogram(name: "fwrite", scope: !837, file: !837, line: 99, type: !8748, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8750)
!8748 = !DISubroutineType(types: !8749)
!8749 = !{!439, !8629, !439, !439, !8735}
!8750 = !{!8751, !8752, !8753, !8754}
!8751 = !DILocalVariable(name: "ptr", arg: 1, scope: !8747, file: !837, line: 99, type: !8629)
!8752 = !DILocalVariable(name: "size", arg: 2, scope: !8747, file: !837, line: 99, type: !439)
!8753 = !DILocalVariable(name: "nitems", arg: 3, scope: !8747, file: !837, line: 99, type: !439)
!8754 = !DILocalVariable(name: "stream", arg: 4, scope: !8747, file: !837, line: 100, type: !8735)
!8755 = !DILocation(line: 0, scope: !8747)
!8756 = !DILocation(line: 102, column: 9, scope: !8747)
!8757 = !DILocation(line: 102, column: 2, scope: !8747)
!8758 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8722, file: !8722, line: 96, type: !8748, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8759)
!8759 = !{!8760, !8761, !8762, !8763}
!8760 = !DILocalVariable(name: "ptr", arg: 1, scope: !8758, file: !8722, line: 96, type: !8629)
!8761 = !DILocalVariable(name: "size", arg: 2, scope: !8758, file: !8722, line: 96, type: !439)
!8762 = !DILocalVariable(name: "nitems", arg: 3, scope: !8758, file: !8722, line: 96, type: !439)
!8763 = !DILocalVariable(name: "stream", arg: 4, scope: !8758, file: !8722, line: 96, type: !8735)
!8764 = !DILocation(line: 0, scope: !8758)
!8765 = !DILocation(line: 107, column: 2, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8758, file: !8722, line: 107, column: 2)
!8767 = !{i64 2152295522}
!8768 = !DILocation(line: 108, column: 9, scope: !8758)
!8769 = !DILocation(line: 108, column: 2, scope: !8758)
!8770 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !837, file: !837, line: 56, type: !8748, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8771)
!8771 = !{!8772, !8773, !8774, !8775, !8776, !8777, !8778, !8779}
!8772 = !DILocalVariable(name: "ptr", arg: 1, scope: !8770, file: !837, line: 56, type: !8629)
!8773 = !DILocalVariable(name: "size", arg: 2, scope: !8770, file: !837, line: 56, type: !439)
!8774 = !DILocalVariable(name: "nitems", arg: 3, scope: !8770, file: !837, line: 57, type: !439)
!8775 = !DILocalVariable(name: "stream", arg: 4, scope: !8770, file: !837, line: 57, type: !8735)
!8776 = !DILocalVariable(name: "i", scope: !8770, file: !837, line: 59, type: !439)
!8777 = !DILocalVariable(name: "j", scope: !8770, file: !837, line: 60, type: !439)
!8778 = !DILocalVariable(name: "p", scope: !8770, file: !837, line: 61, type: !3196)
!8779 = !DILabel(scope: !8770, name: "done", file: !837, line: 82)
!8780 = !DILocation(line: 0, scope: !8770)
!8781 = !DILocation(line: 63, column: 14, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8770, file: !837, line: 63, column: 6)
!8783 = !DILocation(line: 63, column: 24, scope: !8782)
!8784 = !DILocation(line: 72, column: 3, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8770, file: !837, line: 70, column: 5)
!8786 = !DILocation(line: 0, scope: !8785)
!8787 = !DILocation(line: 73, column: 8, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8789, file: !837, line: 73, column: 8)
!8789 = distinct !DILexicalBlock(scope: !8785, file: !837, line: 72, column: 6)
!8790 = !DILocation(line: 73, column: 29, scope: !8788)
!8791 = !DILocation(line: 73, column: 27, scope: !8788)
!8792 = !DILocation(line: 73, column: 21, scope: !8788)
!8793 = !DILocation(line: 73, column: 33, scope: !8788)
!8794 = !DILocation(line: 73, column: 8, scope: !8789)
!8795 = !DILocation(line: 76, column: 5, scope: !8789)
!8796 = !DILocation(line: 77, column: 14, scope: !8785)
!8797 = !DILocation(line: 77, column: 3, scope: !8789)
!8798 = distinct !{!8798, !8784, !8799}
!8799 = !DILocation(line: 77, column: 17, scope: !8785)
!8800 = !DILocation(line: 79, column: 4, scope: !8785)
!8801 = !DILocation(line: 80, column: 13, scope: !8770)
!8802 = !DILocation(line: 80, column: 2, scope: !8785)
!8803 = distinct !{!8803, !8804, !8805}
!8804 = !DILocation(line: 70, column: 2, scope: !8770)
!8805 = !DILocation(line: 80, column: 16, scope: !8770)
!8806 = !DILocation(line: 82, column: 1, scope: !8770)
!8807 = !DILocation(line: 83, column: 17, scope: !8770)
!8808 = !DILocation(line: 83, column: 2, scope: !8770)
!8809 = !DILocation(line: 84, column: 1, scope: !8770)
!8810 = distinct !DISubprogram(name: "puts", scope: !837, file: !837, line: 106, type: !8811, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8813)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{!108, !105}
!8813 = !{!8814}
!8814 = !DILocalVariable(name: "s", arg: 1, scope: !8810, file: !837, line: 106, type: !105)
!8815 = !DILocation(line: 0, scope: !8810)
!8816 = !DILocation(line: 108, column: 6, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8810, file: !837, line: 108, column: 6)
!8818 = !DILocation(line: 108, column: 23, scope: !8817)
!8819 = !DILocation(line: 108, column: 6, scope: !8810)
!8820 = !DILocation(line: 112, column: 9, scope: !8810)
!8821 = !DILocation(line: 112, column: 29, scope: !8810)
!8822 = !DILocation(line: 112, column: 2, scope: !8810)
!8823 = !DILocation(line: 113, column: 1, scope: !8810)
!8824 = distinct !DISubprogram(name: "rf_init", scope: !962, file: !962, line: 10, type: !968, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !8825)
!8825 = !{!8826, !8827, !8835, !8836}
!8826 = !DILocalVariable(name: "dev", arg: 1, scope: !8824, file: !962, line: 10, type: !888)
!8827 = !DILocalVariable(name: "rf1", scope: !8824, file: !962, line: 12, type: !8828)
!8828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8829)
!8829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !869, line: 271, size: 64, elements: !8830)
!8830 = !{!8831, !8832, !8833}
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8829, file: !869, line: 273, baseType: !888, size: 32)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8829, file: !869, line: 275, baseType: !903, size: 8, offset: 32)
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !8829, file: !869, line: 277, baseType: !8834, size: 16, offset: 48)
!8834 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !869, line: 249, baseType: !168)
!8835 = !DILocalVariable(name: "rf2", scope: !8824, file: !962, line: 14, type: !8828)
!8836 = !DILocalVariable(name: "rf3", scope: !8824, file: !962, line: 16, type: !8828)
!8837 = !DILocation(line: 0, scope: !8824)
!8838 = !DILocation(line: 12, column: 2, scope: !8824)
!8839 = !DILocation(line: 12, column: 28, scope: !8824)
!8840 = !DILocation(line: 14, column: 2, scope: !8824)
!8841 = !DILocation(line: 14, column: 28, scope: !8824)
!8842 = !DILocation(line: 16, column: 2, scope: !8824)
!8843 = !DILocation(line: 16, column: 28, scope: !8824)
!8844 = !DILocation(line: 22, column: 27, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8824, file: !962, line: 22, column: 6)
!8846 = !DILocation(line: 22, column: 7, scope: !8845)
!8847 = !DILocation(line: 22, column: 33, scope: !8845)
!8848 = !DILocation(line: 23, column: 7, scope: !8845)
!8849 = !DILocation(line: 23, column: 33, scope: !8845)
!8850 = !DILocation(line: 24, column: 7, scope: !8845)
!8851 = !DILocation(line: 22, column: 6, scope: !8824)
!8852 = !DILocation(line: 28, column: 8, scope: !8824)
!8853 = !DILocation(line: 29, column: 8, scope: !8824)
!8854 = !DILocation(line: 30, column: 8, scope: !8824)
!8855 = !DILocation(line: 32, column: 2, scope: !8824)
!8856 = !DILocation(line: 33, column: 1, scope: !8824)
!8857 = distinct !DISubprogram(name: "device_is_ready", scope: !8858, file: !8858, line: 47, type: !8859, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !8861)
!8858 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!8859 = !DISubroutineType(types: !8860)
!8860 = !{!422, !888}
!8861 = !{!8862}
!8862 = !DILocalVariable(name: "dev", arg: 1, scope: !8857, file: !8858, line: 47, type: !888)
!8863 = !DILocation(line: 0, scope: !8857)
!8864 = !DILocation(line: 55, column: 2, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8857, file: !8858, line: 55, column: 2)
!8866 = !{i64 2148944230}
!8867 = !DILocation(line: 56, column: 9, scope: !8857)
!8868 = !DILocation(line: 56, column: 2, scope: !8857)
!8869 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !869, file: !869, line: 731, type: !8870, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !8873)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{!108, !8872, !904}
!8872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8828, size: 32)
!8873 = !{!8874, !8875}
!8874 = !DILocalVariable(name: "spec", arg: 1, scope: !8869, file: !869, line: 731, type: !8872)
!8875 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !8869, file: !869, line: 732, type: !904)
!8876 = !DILocation(line: 0, scope: !8869)
!8877 = !DILocation(line: 734, column: 34, scope: !8869)
!8878 = !DILocation(line: 735, column: 13, scope: !8869)
!8879 = !DILocation(line: 736, column: 13, scope: !8869)
!8880 = !DILocation(line: 736, column: 7, scope: !8869)
!8881 = !DILocation(line: 736, column: 22, scope: !8869)
!8882 = !DILocation(line: 734, column: 9, scope: !8869)
!8883 = !DILocation(line: 734, column: 2, scope: !8869)
!8884 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !8885, file: !8885, line: 49, type: !886, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !8886)
!8885 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!8886 = !{!8887, !8888, !8889}
!8887 = !DILocalVariable(name: "port", arg: 1, scope: !8884, file: !8885, line: 49, type: !888)
!8888 = !DILocalVariable(name: "pin", arg: 2, scope: !8884, file: !8885, line: 49, type: !903)
!8889 = !DILocalVariable(name: "flags", arg: 3, scope: !8884, file: !8885, line: 49, type: !904)
!8890 = !DILocation(line: 0, scope: !8884)
!8891 = !DILocation(line: 59, column: 2, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8884, file: !8885, line: 59, column: 2)
!8893 = !{i64 2148958600}
!8894 = !DILocation(line: 60, column: 9, scope: !8884)
!8895 = !DILocation(line: 60, column: 2, scope: !8884)
!8896 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !869, file: !869, line: 667, type: !886, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !8897)
!8897 = !{!8898, !8899, !8900, !8901, !8902, !8904}
!8898 = !DILocalVariable(name: "port", arg: 1, scope: !8896, file: !869, line: 667, type: !888)
!8899 = !DILocalVariable(name: "pin", arg: 2, scope: !8896, file: !869, line: 668, type: !903)
!8900 = !DILocalVariable(name: "flags", arg: 3, scope: !8896, file: !869, line: 669, type: !904)
!8901 = !DILocalVariable(name: "api", scope: !8896, file: !869, line: 671, type: !880)
!8902 = !DILocalVariable(name: "cfg", scope: !8896, file: !869, line: 673, type: !8903)
!8903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!8904 = !DILocalVariable(name: "data", scope: !8896, file: !869, line: 675, type: !960)
!8905 = !DILocation(line: 0, scope: !8896)
!8906 = !DILocation(line: 672, column: 41, scope: !8896)
!8907 = !DILocation(line: 676, column: 36, scope: !8896)
!8908 = !DILocation(line: 701, column: 6, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8896, file: !869, line: 700, column: 6)
!8910 = !DILocation(line: 711, column: 13, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8896, file: !869, line: 711, column: 6)
!8912 = !DILocation(line: 711, column: 32, scope: !8911)
!8913 = !DILocation(line: 0, scope: !8911)
!8914 = !DILocation(line: 711, column: 6, scope: !8896)
!8915 = !DILocation(line: 712, column: 9, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8911, file: !869, line: 711, column: 38)
!8917 = !DILocation(line: 712, column: 16, scope: !8916)
!8918 = !DILocation(line: 713, column: 2, scope: !8916)
!8919 = !DILocation(line: 714, column: 19, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8911, file: !869, line: 713, column: 9)
!8921 = !DILocation(line: 714, column: 9, scope: !8920)
!8922 = !DILocation(line: 714, column: 16, scope: !8920)
!8923 = !DILocation(line: 706, column: 8, scope: !8896)
!8924 = !DILocation(line: 717, column: 14, scope: !8896)
!8925 = !DILocation(line: 717, column: 9, scope: !8896)
!8926 = !DILocation(line: 717, column: 2, scope: !8896)
!8927 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !8859, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !8928)
!8928 = !{!8929}
!8929 = !DILocalVariable(name: "dev", arg: 1, scope: !8927, file: !411, line: 730, type: !888)
!8930 = !DILocation(line: 0, scope: !8927)
!8931 = !DILocation(line: 732, column: 9, scope: !8927)
!8932 = !DILocation(line: 732, column: 2, scope: !8927)
!8933 = distinct !DISubprogram(name: "rtio_simple_submit", scope: !976, file: !976, line: 25, type: !8934, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !973, retainedNodes: !9023)
!8934 = !DISubroutineType(types: !8935)
!8935 = !{!108, !8936}
!8936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8937, size: 32)
!8937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !8938)
!8938 = !{!8939, !9004, !9005, !9012}
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !8937, file: !125, line: 228, baseType: !8940, size: 32)
!8940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8941, size: 32)
!8941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !8942)
!8942 = !{!8943}
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8941, file: !125, line: 211, baseType: !8944, size: 32)
!8944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8945, size: 32)
!8945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8946)
!8946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !8947)
!8947 = !{!8948, !8950, !9003}
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8946, file: !125, line: 177, baseType: !8949, size: 32)
!8949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8934, size: 32)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !8946, file: !125, line: 182, baseType: !8951, size: 32, offset: 32)
!8951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8952, size: 32)
!8952 = !DISubroutineType(types: !8953)
!8953 = !{null, !8936, !8954, !108}
!8954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8955, size: 32)
!8955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8956)
!8956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !8957)
!8957 = !{!8958, !8959, !8960, !8961, !8994, !8995}
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !8956, file: !125, line: 110, baseType: !164, size: 8)
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8956, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8956, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !8956, file: !125, line: 116, baseType: !8962, size: 32, offset: 32)
!8962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8963, size: 32)
!8963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8964)
!8964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !8965)
!8965 = !{!8966, !8975, !8993}
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8964, file: !125, line: 308, baseType: !8967, size: 32)
!8967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8968, size: 32)
!8968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8969)
!8969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !8970)
!8970 = !{!8971}
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8969, file: !125, line: 271, baseType: !8972, size: 32)
!8972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8973, size: 32)
!8973 = !DISubroutineType(types: !8974)
!8974 = !{null, !8954, !8936}
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !8964, file: !125, line: 311, baseType: !8976, size: 32, offset: 32)
!8976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8977, size: 32)
!8977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !8978)
!8978 = !{!8979, !8987}
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8977, file: !125, line: 299, baseType: !8980, size: 160)
!8980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !8981)
!8981 = !{!8982, !8983, !8984, !8985, !8986}
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !8980, file: !151, line: 60, baseType: !24, size: 32)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !8980, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !8980, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !8980, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8980, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8977, file: !125, line: 300, baseType: !8988, offset: 160)
!8988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8989, elements: !197)
!8989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !8990)
!8990 = !{!8991, !8992}
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !8989, file: !125, line: 289, baseType: !8954, size: 32)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !8989, file: !125, line: 290, baseType: !8936, size: 32, offset: 32)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8964, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8956, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!8995 = !DIDerivedType(tag: DW_TAG_member, scope: !8956, file: !125, line: 127, baseType: !8996, size: 64, offset: 96)
!8996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8956, file: !125, line: 127, size: 64, elements: !8997)
!8997 = !{!8998}
!8998 = !DIDerivedType(tag: DW_TAG_member, scope: !8996, file: !125, line: 128, baseType: !8999, size: 64)
!8999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8996, file: !125, line: 128, size: 64, elements: !9000)
!9000 = !{!9001, !9002}
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !8999, file: !125, line: 129, baseType: !113, size: 32)
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8999, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !8946, file: !125, line: 187, baseType: !8951, size: 32, offset: 64)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !8937, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !8937, file: !125, line: 254, baseType: !9006, size: 32, offset: 64)
!9006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9007, size: 32)
!9007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !9008)
!9008 = !{!9009, !9010}
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !9007, file: !125, line: 143, baseType: !8980, size: 160)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9007, file: !125, line: 144, baseType: !9011, offset: 160)
!9011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8956, elements: !197)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !8937, file: !125, line: 257, baseType: !9013, size: 32, offset: 96)
!9013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9014, size: 32)
!9014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !9015)
!9015 = !{!9016, !9017}
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !9014, file: !125, line: 162, baseType: !8980, size: 160)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9014, file: !125, line: 163, baseType: !9018, offset: 160)
!9018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9019, elements: !197)
!9019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !9020)
!9020 = !{!9021, !9022}
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !9019, file: !125, line: 151, baseType: !220, size: 32)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !9019, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!9023 = !{!9024, !9025, !9027, !9029}
!9024 = !DILocalVariable(name: "r", arg: 1, scope: !8933, file: !976, line: 25, type: !8936)
!9025 = !DILocalVariable(name: "sqe", scope: !8933, file: !976, line: 30, type: !9026)
!9026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8956, size: 32)
!9027 = !DILocalVariable(name: "idx", scope: !9028, file: !976, line: 30, type: !24)
!9028 = distinct !DILexicalBlock(scope: !8933, file: !976, line: 30, column: 25)
!9029 = !DILocalVariable(name: "has_consumable", scope: !9028, file: !976, line: 30, type: !422)
!9030 = !DILocation(line: 0, scope: !8933)
!9031 = !DILocation(line: 30, column: 25, scope: !9028)
!9032 = !DILocation(line: 0, scope: !9028)
!9033 = !DILocation(line: 30, column: 25, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !976, line: 30, column: 25)
!9035 = distinct !DILexicalBlock(scope: !9028, file: !976, line: 30, column: 25)
!9036 = !DILocation(line: 33, column: 3, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !976, line: 32, column: 19)
!9038 = distinct !DILexicalBlock(scope: !8933, file: !976, line: 32, column: 6)
!9039 = !DILocation(line: 34, column: 2, scope: !9037)
!9040 = !DILocation(line: 36, column: 2, scope: !8933)
!9041 = distinct !DISubprogram(name: "atomic_get", scope: !3676, file: !3676, line: 159, type: !3677, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !973, retainedNodes: !9042)
!9042 = !{!9043}
!9043 = !DILocalVariable(name: "target", arg: 1, scope: !9041, file: !3676, line: 159, type: !3680)
!9044 = !DILocation(line: 0, scope: !9041)
!9045 = !DILocation(line: 161, column: 9, scope: !9041)
!9046 = !DILocation(line: 161, column: 2, scope: !9041)
!9047 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !8973, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !973, retainedNodes: !9048)
!9048 = !{!9049, !9050}
!9049 = !DILocalVariable(name: "sqe", arg: 1, scope: !9047, file: !125, line: 457, type: !8954)
!9050 = !DILocalVariable(name: "r", arg: 2, scope: !9047, file: !125, line: 457, type: !8936)
!9051 = !DILocation(line: 0, scope: !9047)
!9052 = !DILocation(line: 459, column: 7, scope: !9047)
!9053 = !DILocation(line: 459, column: 14, scope: !9047)
!9054 = !DILocation(line: 459, column: 19, scope: !9047)
!9055 = !DILocation(line: 459, column: 2, scope: !9047)
!9056 = !DILocation(line: 460, column: 1, scope: !9047)
!9057 = distinct !DISubprogram(name: "rtio_simple_ok", scope: !976, file: !976, line: 42, type: !8952, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !973, retainedNodes: !9058)
!9058 = !{!9059, !9060, !9061, !9062}
!9059 = !DILocalVariable(name: "r", arg: 1, scope: !9057, file: !976, line: 42, type: !8936)
!9060 = !DILocalVariable(name: "sqe", arg: 2, scope: !9057, file: !976, line: 42, type: !8954)
!9061 = !DILocalVariable(name: "result", arg: 3, scope: !9057, file: !976, line: 42, type: !108)
!9062 = !DILocalVariable(name: "userdata", scope: !9057, file: !976, line: 44, type: !104)
!9063 = !DILocation(line: 0, scope: !9057)
!9064 = !DILocation(line: 44, column: 24, scope: !9057)
!9065 = !DILocation(line: 46, column: 2, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !976, line: 46, column: 2)
!9067 = distinct !DILexicalBlock(scope: !9057, file: !976, line: 46, column: 2)
!9068 = !DILocation(line: 46, column: 2, scope: !9067)
!9069 = !DILocation(line: 46, column: 2, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9066, file: !976, line: 46, column: 2)
!9071 = !DILocation(line: 47, column: 2, scope: !9057)
!9072 = !DILocation(line: 48, column: 2, scope: !9057)
!9073 = !DILocation(line: 49, column: 1, scope: !9057)
!9074 = distinct !DISubprogram(name: "atomic_add", scope: !3676, file: !3676, line: 86, type: !3712, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !973, retainedNodes: !9075)
!9075 = !{!9076, !9077}
!9076 = !DILocalVariable(name: "target", arg: 1, scope: !9074, file: !3676, line: 86, type: !3714)
!9077 = !DILocalVariable(name: "value", arg: 2, scope: !9074, file: !3676, line: 86, type: !3679)
!9078 = !DILocation(line: 0, scope: !9074)
!9079 = !DILocation(line: 88, column: 9, scope: !9074)
!9080 = !DILocation(line: 88, column: 2, scope: !9074)
!9081 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9082, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !973, retainedNodes: !9084)
!9082 = !DISubroutineType(types: !9083)
!9083 = !{null, !8936, !108, !104}
!9084 = !{!9085, !9086, !9087, !9088, !9090, !9092}
!9085 = !DILocalVariable(name: "r", arg: 1, scope: !9081, file: !125, line: 607, type: !8936)
!9086 = !DILocalVariable(name: "result", arg: 2, scope: !9081, file: !125, line: 607, type: !108)
!9087 = !DILocalVariable(name: "userdata", arg: 3, scope: !9081, file: !125, line: 607, type: !104)
!9088 = !DILocalVariable(name: "cqe", scope: !9081, file: !125, line: 609, type: !9089)
!9089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9019, size: 32)
!9090 = !DILocalVariable(name: "idx", scope: !9091, file: !125, line: 609, type: !24)
!9091 = distinct !DILexicalBlock(scope: !9081, file: !125, line: 609, column: 25)
!9092 = !DILocalVariable(name: "acq", scope: !9091, file: !125, line: 609, type: !422)
!9093 = !DILocation(line: 0, scope: !9081)
!9094 = !DILocation(line: 609, column: 25, scope: !9091)
!9095 = !DILocation(line: 0, scope: !9091)
!9096 = !DILocation(line: 612, column: 18, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !125, line: 611, column: 19)
!9098 = distinct !DILexicalBlock(scope: !9081, file: !125, line: 611, column: 6)
!9099 = !DILocation(line: 612, column: 3, scope: !9097)
!9100 = !DILocation(line: 613, column: 2, scope: !9097)
!9101 = !DILocation(line: 609, column: 25, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !125, line: 609, column: 25)
!9103 = distinct !DILexicalBlock(scope: !9091, file: !125, line: 609, column: 25)
!9104 = !DILocation(line: 614, column: 8, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9098, file: !125, line: 613, column: 9)
!9106 = !DILocation(line: 614, column: 15, scope: !9105)
!9107 = !DILocation(line: 615, column: 8, scope: !9105)
!9108 = !DILocation(line: 615, column: 17, scope: !9105)
!9109 = !DILocation(line: 616, column: 3, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !125, line: 616, column: 3)
!9111 = distinct !DILexicalBlock(scope: !9105, file: !125, line: 616, column: 3)
!9112 = !DILocation(line: 616, column: 3, scope: !9111)
!9113 = !DILocation(line: 616, column: 3, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9110, file: !125, line: 616, column: 3)
!9115 = !DILocation(line: 629, column: 1, scope: !9081)
!9116 = distinct !DISubprogram(name: "atomic_inc", scope: !3676, file: !3676, line: 123, type: !9117, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !973, retainedNodes: !9119)
!9117 = !DISubroutineType(types: !9118)
!9118 = !{!3679, !3714}
!9119 = !{!9120}
!9120 = !DILocalVariable(name: "target", arg: 1, scope: !9116, file: !3676, line: 123, type: !3714)
!9121 = !DILocation(line: 0, scope: !9116)
!9122 = !DILocation(line: 125, column: 9, scope: !9116)
!9123 = !DILocation(line: 125, column: 2, scope: !9116)
!9124 = distinct !DISubprogram(name: "rtio_simple_err", scope: !976, file: !976, line: 54, type: !8952, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !973, retainedNodes: !9125)
!9125 = !{!9126, !9127, !9128, !9129, !9130, !9131, !9132, !9136, !9137, !9140}
!9126 = !DILocalVariable(name: "r", arg: 1, scope: !9124, file: !976, line: 54, type: !8936)
!9127 = !DILocalVariable(name: "sqe", arg: 2, scope: !9124, file: !976, line: 54, type: !8954)
!9128 = !DILocalVariable(name: "result", arg: 3, scope: !9124, file: !976, line: 54, type: !108)
!9129 = !DILocalVariable(name: "nsqe", scope: !9124, file: !976, line: 56, type: !9026)
!9130 = !DILocalVariable(name: "userdata", scope: !9124, file: !976, line: 57, type: !104)
!9131 = !DILocalVariable(name: "chained", scope: !9124, file: !976, line: 58, type: !422)
!9132 = !DILocalVariable(name: "idx", scope: !9133, file: !976, line: 65, type: !24)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !976, line: 65, column: 10)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !976, line: 63, column: 15)
!9135 = distinct !DILexicalBlock(scope: !9124, file: !976, line: 63, column: 6)
!9136 = !DILocalVariable(name: "has_consumable", scope: !9133, file: !976, line: 65, type: !422)
!9137 = !DILocalVariable(name: "idx", scope: !9138, file: !976, line: 70, type: !24)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !976, line: 70, column: 11)
!9139 = distinct !DILexicalBlock(scope: !9134, file: !976, line: 66, column: 58)
!9140 = !DILocalVariable(name: "has_consumable", scope: !9138, file: !976, line: 70, type: !422)
!9141 = !DILocation(line: 0, scope: !9124)
!9142 = !DILocation(line: 57, column: 24, scope: !9124)
!9143 = !DILocation(line: 58, column: 22, scope: !9124)
!9144 = !DILocation(line: 58, column: 28, scope: !9124)
!9145 = !DILocation(line: 58, column: 17, scope: !9124)
!9146 = !DILocation(line: 60, column: 2, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !976, line: 60, column: 2)
!9148 = distinct !DILexicalBlock(scope: !9124, file: !976, line: 60, column: 2)
!9149 = !DILocation(line: 60, column: 2, scope: !9148)
!9150 = !DILocation(line: 60, column: 2, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9147, file: !976, line: 60, column: 2)
!9152 = !DILocation(line: 61, column: 34, scope: !9124)
!9153 = !DILocation(line: 61, column: 2, scope: !9124)
!9154 = !DILocation(line: 63, column: 6, scope: !9124)
!9155 = !DILocation(line: 65, column: 10, scope: !9133)
!9156 = !DILocation(line: 0, scope: !9133)
!9157 = !DILocation(line: 0, scope: !9134)
!9158 = !DILocation(line: 66, column: 32, scope: !9134)
!9159 = !DILocation(line: 66, column: 38, scope: !9134)
!9160 = !DILocation(line: 66, column: 23, scope: !9134)
!9161 = !DILocation(line: 66, column: 3, scope: !9134)
!9162 = !DILocation(line: 67, column: 21, scope: !9139)
!9163 = !DILocation(line: 68, column: 4, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !976, line: 68, column: 4)
!9165 = distinct !DILexicalBlock(scope: !9139, file: !976, line: 68, column: 4)
!9166 = !DILocation(line: 68, column: 4, scope: !9165)
!9167 = !DILocation(line: 68, column: 4, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !976, line: 68, column: 4)
!9169 = !DILocation(line: 69, column: 4, scope: !9139)
!9170 = !DILocation(line: 70, column: 11, scope: !9138)
!9171 = !DILocation(line: 0, scope: !9138)
!9172 = !DILocation(line: 74, column: 4, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !976, line: 73, column: 21)
!9174 = distinct !DILexicalBlock(scope: !9134, file: !976, line: 73, column: 7)
!9175 = !DILocation(line: 75, column: 3, scope: !9173)
!9176 = !DILocation(line: 79, column: 3, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9135, file: !976, line: 77, column: 9)
!9178 = !DILocation(line: 81, column: 1, scope: !9124)
!9179 = distinct !DISubprogram(name: "rtio_concurrent_submit", scope: !1093, file: !1093, line: 119, type: !1001, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9180)
!9180 = !{!9181, !9182, !9183, !9184, !9185, !9190, !9194, !9195, !9198, !9199, !9201, !9204, !9205, !9207, !9208, !9211}
!9181 = !DILocalVariable(name: "r", arg: 1, scope: !9179, file: !1093, line: 119, type: !1003)
!9182 = !DILocalVariable(name: "exc", scope: !9179, file: !1093, line: 124, type: !987)
!9183 = !DILocalVariable(name: "sqe", scope: !9179, file: !1093, line: 126, type: !1087)
!9184 = !DILocalVariable(name: "last_sqe", scope: !9179, file: !1093, line: 127, type: !1087)
!9185 = !DILocalVariable(name: "key", scope: !9179, file: !1093, line: 128, type: !9186)
!9186 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !9187)
!9187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !9188)
!9188 = !{!9189}
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9187, file: !436, line: 33, baseType: !108, size: 32)
!9190 = !DILocalVariable(name: "idx", scope: !9191, file: !1093, line: 137, type: !24)
!9191 = distinct !DILexicalBlock(scope: !9192, file: !1093, line: 137, column: 9)
!9192 = distinct !DILexicalBlock(scope: !9193, file: !1093, line: 136, column: 29)
!9193 = distinct !DILexicalBlock(scope: !9179, file: !1093, line: 136, column: 6)
!9194 = !DILocalVariable(name: "has_consumable", scope: !9191, file: !1093, line: 137, type: !422)
!9195 = !DILocalVariable(name: "idx", scope: !9196, file: !1093, line: 140, type: !24)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !1093, line: 140, column: 9)
!9197 = distinct !DILexicalBlock(scope: !9193, file: !1093, line: 138, column: 9)
!9198 = !DILocalVariable(name: "has_next", scope: !9196, file: !1093, line: 140, type: !422)
!9199 = !DILocalVariable(name: "task_idx", scope: !9200, file: !1093, line: 148, type: !168)
!9200 = distinct !DILexicalBlock(scope: !9179, file: !1093, line: 144, column: 46)
!9201 = !DILocalVariable(name: "idx", scope: !9202, file: !1093, line: 159, type: !24)
!9202 = distinct !DILexicalBlock(scope: !9203, file: !1093, line: 159, column: 10)
!9203 = distinct !DILexicalBlock(scope: !9200, file: !1093, line: 158, column: 58)
!9204 = !DILocalVariable(name: "has_next", scope: !9202, file: !1093, line: 159, type: !422)
!9205 = !DILocalVariable(name: "idx", scope: !9206, file: !1093, line: 167, type: !24)
!9206 = distinct !DILexicalBlock(scope: !9200, file: !1093, line: 167, column: 9)
!9207 = !DILocalVariable(name: "has_next", scope: !9206, file: !1093, line: 167, type: !422)
!9208 = !DILocalVariable(name: "idx", scope: !9209, file: !1093, line: 181, type: !24)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !1093, line: 181, column: 9)
!9210 = distinct !DILexicalBlock(scope: !9179, file: !1093, line: 179, column: 22)
!9211 = !DILocalVariable(name: "has_next", scope: !9209, file: !1093, line: 181, type: !422)
!9212 = !DILocation(line: 0, scope: !9179)
!9213 = !DILocation(line: 122, column: 2, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !1093, line: 122, column: 2)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !1093, line: 122, column: 2)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !1093, line: 122, column: 2)
!9217 = distinct !DILexicalBlock(scope: !9179, file: !1093, line: 122, column: 2)
!9218 = !DILocation(line: 125, column: 41, scope: !9179)
!9219 = !DILocalVariable(name: "l", arg: 1, scope: !9220, file: !436, line: 136, type: !9223)
!9220 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !9221, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9224)
!9221 = !DISubroutineType(types: !9222)
!9222 = !{!9186, !9223}
!9223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!9224 = !{!9219, !9225}
!9225 = !DILocalVariable(name: "k", scope: !9220, file: !436, line: 139, type: !9186)
!9226 = !DILocation(line: 0, scope: !9220, inlinedAt: !9227)
!9227 = distinct !DILocation(line: 130, column: 8, scope: !9179)
!9228 = !DILocation(line: 55, column: 2, scope: !9229, inlinedAt: !9233)
!9229 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9230)
!9230 = !{!9231, !9232}
!9231 = !DILocalVariable(name: "key", scope: !9229, file: !4055, line: 44, type: !32)
!9232 = !DILocalVariable(name: "tmp", scope: !9229, file: !4055, line: 53, type: !32)
!9233 = distinct !DILocation(line: 145, column: 10, scope: !9220, inlinedAt: !9227)
!9234 = !{i64 1398082}
!9235 = !DILocation(line: 0, scope: !9229, inlinedAt: !9233)
!9236 = !DILocation(line: 136, column: 11, scope: !9193)
!9237 = !DILocation(line: 136, column: 20, scope: !9193)
!9238 = !DILocation(line: 0, scope: !9193)
!9239 = !DILocation(line: 136, column: 6, scope: !9179)
!9240 = !DILocation(line: 137, column: 9, scope: !9191)
!9241 = !DILocation(line: 0, scope: !9191)
!9242 = !DILocation(line: 140, column: 9, scope: !9196)
!9243 = !DILocation(line: 0, scope: !9196)
!9244 = !DILocation(line: 173, column: 7, scope: !9179)
!9245 = !DILocation(line: 173, column: 19, scope: !9179)
!9246 = !DILocation(line: 179, column: 2, scope: !9179)
!9247 = !DILocation(line: 144, column: 24, scope: !9179)
!9248 = !DILocation(line: 144, column: 2, scope: !9179)
!9249 = !DILocation(line: 145, column: 3, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9251, file: !1093, line: 145, column: 3)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !1093, line: 145, column: 3)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !1093, line: 145, column: 3)
!9253 = distinct !DILexicalBlock(scope: !9200, file: !1093, line: 145, column: 3)
!9254 = !DILocation(line: 148, column: 23, scope: !9200)
!9255 = !DILocation(line: 0, scope: !9200)
!9256 = !DILocation(line: 150, column: 3, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !1093, line: 150, column: 3)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !1093, line: 150, column: 3)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !1093, line: 150, column: 3)
!9260 = distinct !DILexicalBlock(scope: !9200, file: !1093, line: 150, column: 3)
!9261 = !DILocation(line: 153, column: 8, scope: !9200)
!9262 = !DILocation(line: 153, column: 3, scope: !9200)
!9263 = !DILocation(line: 153, column: 27, scope: !9200)
!9264 = !DILocation(line: 154, column: 8, scope: !9200)
!9265 = !DILocation(line: 154, column: 3, scope: !9200)
!9266 = !DILocation(line: 154, column: 30, scope: !9200)
!9267 = !DILocation(line: 156, column: 3, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9269, file: !1093, line: 156, column: 3)
!9269 = distinct !DILexicalBlock(scope: !9270, file: !1093, line: 156, column: 3)
!9270 = distinct !DILexicalBlock(scope: !9271, file: !1093, line: 156, column: 3)
!9271 = distinct !DILexicalBlock(scope: !9200, file: !1093, line: 156, column: 3)
!9272 = !DILocation(line: 158, column: 22, scope: !9200)
!9273 = !DILocation(line: 158, column: 31, scope: !9200)
!9274 = !DILocation(line: 158, column: 37, scope: !9200)
!9275 = !DILocation(line: 158, column: 3, scope: !9200)
!9276 = !DILocation(line: 159, column: 10, scope: !9202)
!9277 = !DILocation(line: 0, scope: !9202)
!9278 = !DILocation(line: 162, column: 3, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9280, file: !1093, line: 162, column: 3)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !1093, line: 162, column: 3)
!9281 = distinct !DILexicalBlock(scope: !9282, file: !1093, line: 162, column: 3)
!9282 = distinct !DILexicalBlock(scope: !9200, file: !1093, line: 162, column: 3)
!9283 = !DILocation(line: 167, column: 9, scope: !9206)
!9284 = !DILocation(line: 0, scope: !9206)
!9285 = !DILocation(line: 144, column: 21, scope: !9179)
!9286 = !DILocation(line: 179, column: 13, scope: !9179)
!9287 = !DILocation(line: 181, column: 9, scope: !9209)
!9288 = !DILocation(line: 0, scope: !9209)
!9289 = !DILocation(line: 185, column: 16, scope: !9179)
!9290 = !DILocation(line: 188, column: 2, scope: !9179)
!9291 = !DILocalVariable(name: "key", arg: 2, scope: !9292, file: !436, line: 190, type: !9186)
!9292 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !9293, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9295)
!9293 = !DISubroutineType(types: !9294)
!9294 = !{null, !9223, !9186}
!9295 = !{!9296, !9291}
!9296 = !DILocalVariable(name: "l", arg: 1, scope: !9292, file: !436, line: 189, type: !9223)
!9297 = !DILocation(line: 0, scope: !9292, inlinedAt: !9298)
!9298 = distinct !DILocation(line: 190, column: 2, scope: !9179)
!9299 = !DILocalVariable(name: "key", arg: 1, scope: !9300, file: !4055, line: 84, type: !32)
!9300 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9301)
!9301 = !{!9299}
!9302 = !DILocation(line: 0, scope: !9300, inlinedAt: !9303)
!9303 = distinct !DILocation(line: 215, column: 2, scope: !9292, inlinedAt: !9298)
!9304 = !DILocation(line: 95, column: 2, scope: !9300, inlinedAt: !9303)
!9305 = !{i64 1398899}
!9306 = !DILocation(line: 192, column: 2, scope: !9179)
!9307 = distinct !DISubprogram(name: "atomic_get", scope: !3676, file: !3676, line: 159, type: !3677, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9308)
!9308 = !{!9309}
!9309 = !DILocalVariable(name: "target", arg: 1, scope: !9307, file: !3676, line: 159, type: !3680)
!9310 = !DILocation(line: 0, scope: !9307)
!9311 = !DILocation(line: 161, column: 9, scope: !9307)
!9312 = !DILocation(line: 161, column: 2, scope: !9307)
!9313 = distinct !DISubprogram(name: "conex_task_free", scope: !1093, file: !1093, line: 39, type: !9314, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9316)
!9314 = !DISubroutineType(types: !9315)
!9315 = !{!422, !987}
!9316 = !{!9317}
!9317 = !DILocalVariable(name: "exc", arg: 1, scope: !9313, file: !1093, line: 39, type: !987)
!9318 = !DILocation(line: 0, scope: !9313)
!9319 = !DILocation(line: 41, column: 15, scope: !9313)
!9320 = !DILocation(line: 41, column: 10, scope: !9313)
!9321 = !DILocation(line: 41, column: 30, scope: !9313)
!9322 = !DILocation(line: 41, column: 25, scope: !9313)
!9323 = !DILocation(line: 41, column: 23, scope: !9313)
!9324 = !DILocation(line: 41, column: 48, scope: !9313)
!9325 = !DILocation(line: 41, column: 43, scope: !9313)
!9326 = !DILocation(line: 41, column: 40, scope: !9313)
!9327 = !DILocation(line: 41, column: 2, scope: !9313)
!9328 = distinct !DISubprogram(name: "conex_task_next", scope: !1093, file: !1093, line: 47, type: !9329, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9331)
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!168, !987}
!9331 = !{!9332, !9333}
!9332 = !DILocalVariable(name: "exc", arg: 1, scope: !9328, file: !1093, line: 47, type: !987)
!9333 = !DILocalVariable(name: "task_id", scope: !9328, file: !1093, line: 49, type: !168)
!9334 = !DILocation(line: 0, scope: !9328)
!9335 = !DILocation(line: 49, column: 26, scope: !9328)
!9336 = !DILocation(line: 51, column: 14, scope: !9328)
!9337 = !DILocation(line: 52, column: 2, scope: !9328)
!9338 = distinct !DISubprogram(name: "conex_resume", scope: !1093, file: !1093, line: 94, type: !9339, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9341)
!9339 = !DISubroutineType(types: !9340)
!9340 = !{null, !1003, !987}
!9341 = !{!9342, !9343, !9344}
!9342 = !DILocalVariable(name: "r", arg: 1, scope: !9338, file: !1093, line: 94, type: !1003)
!9343 = !DILocalVariable(name: "exc", arg: 2, scope: !9338, file: !1093, line: 94, type: !987)
!9344 = !DILocalVariable(name: "task_id", scope: !9345, file: !1093, line: 97, type: !168)
!9345 = distinct !DILexicalBlock(scope: !9338, file: !1093, line: 97, column: 2)
!9346 = !DILocation(line: 0, scope: !9338)
!9347 = !DILocation(line: 97, column: 31, scope: !9345)
!9348 = !DILocation(line: 0, scope: !9345)
!9349 = !DILocation(line: 97, column: 56, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !1093, line: 97, column: 2)
!9351 = !DILocation(line: 97, column: 49, scope: !9350)
!9352 = !DILocation(line: 97, column: 2, scope: !9345)
!9353 = !DILocation(line: 104, column: 1, scope: !9338)
!9354 = !DILocation(line: 98, column: 12, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !1093, line: 98, column: 7)
!9356 = distinct !DILexicalBlock(scope: !9350, file: !1093, line: 97, column: 76)
!9357 = !DILocation(line: 98, column: 39, scope: !9355)
!9358 = !DILocation(line: 98, column: 32, scope: !9355)
!9359 = !DILocation(line: 98, column: 7, scope: !9355)
!9360 = !DILocation(line: 98, column: 50, scope: !9355)
!9361 = !DILocation(line: 98, column: 7, scope: !9356)
!9362 = !DILocation(line: 99, column: 4, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !1093, line: 99, column: 4)
!9364 = distinct !DILexicalBlock(scope: !9365, file: !1093, line: 99, column: 4)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !1093, line: 99, column: 4)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !1093, line: 99, column: 4)
!9367 = distinct !DILexicalBlock(scope: !9355, file: !1093, line: 98, column: 74)
!9368 = !DILocation(line: 100, column: 9, scope: !9367)
!9369 = !DILocation(line: 100, column: 4, scope: !9367)
!9370 = !DILocation(line: 100, column: 30, scope: !9367)
!9371 = !DILocation(line: 101, column: 27, scope: !9367)
!9372 = !DILocation(line: 101, column: 22, scope: !9367)
!9373 = !DILocation(line: 101, column: 4, scope: !9367)
!9374 = !DILocation(line: 102, column: 3, scope: !9367)
!9375 = !DILocation(line: 97, column: 72, scope: !9350)
!9376 = distinct !{!9376, !9352, !9377}
!9377 = !DILocation(line: 103, column: 2, scope: !9345)
!9378 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !1040, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9379)
!9379 = !{!9380, !9381}
!9380 = !DILocalVariable(name: "sqe", arg: 1, scope: !9378, file: !125, line: 457, type: !1042)
!9381 = !DILocalVariable(name: "r", arg: 2, scope: !9378, file: !125, line: 457, type: !1003)
!9382 = !DILocation(line: 0, scope: !9378)
!9383 = !DILocation(line: 459, column: 7, scope: !9378)
!9384 = !DILocation(line: 459, column: 14, scope: !9378)
!9385 = !DILocation(line: 459, column: 19, scope: !9378)
!9386 = !DILocation(line: 459, column: 2, scope: !9378)
!9387 = !DILocation(line: 460, column: 1, scope: !9378)
!9388 = distinct !DISubprogram(name: "rtio_concurrent_ok", scope: !1093, file: !1093, line: 198, type: !1078, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9389)
!9389 = !{!9390, !9391, !9392, !9393, !9394, !9395, !9396, !9397, !9401}
!9390 = !DILocalVariable(name: "r", arg: 1, scope: !9388, file: !1093, line: 198, type: !1003)
!9391 = !DILocalVariable(name: "sqe", arg: 2, scope: !9388, file: !1093, line: 198, type: !1042)
!9392 = !DILocalVariable(name: "result", arg: 3, scope: !9388, file: !1093, line: 198, type: !108)
!9393 = !DILocalVariable(name: "next_sqe", scope: !9388, file: !1093, line: 200, type: !1087)
!9394 = !DILocalVariable(name: "key", scope: !9388, file: !1093, line: 201, type: !9186)
!9395 = !DILocalVariable(name: "exc", scope: !9388, file: !1093, line: 202, type: !987)
!9396 = !DILocalVariable(name: "task_id", scope: !9388, file: !1093, line: 216, type: !168)
!9397 = !DILocalVariable(name: "idx", scope: !9398, file: !1093, line: 219, type: !24)
!9398 = distinct !DILexicalBlock(scope: !9399, file: !1093, line: 219, column: 14)
!9399 = distinct !DILexicalBlock(scope: !9400, file: !1093, line: 218, column: 37)
!9400 = distinct !DILexicalBlock(scope: !9388, file: !1093, line: 218, column: 6)
!9401 = !DILocalVariable(name: "has_next", scope: !9398, file: !1093, line: 219, type: !422)
!9402 = !DILocation(line: 0, scope: !9388)
!9403 = !DILocation(line: 202, column: 79, scope: !9388)
!9404 = !DILocation(line: 0, scope: !9220, inlinedAt: !9405)
!9405 = distinct !DILocation(line: 211, column: 8, scope: !9388)
!9406 = !DILocation(line: 55, column: 2, scope: !9229, inlinedAt: !9407)
!9407 = distinct !DILocation(line: 145, column: 10, scope: !9220, inlinedAt: !9405)
!9408 = !DILocation(line: 0, scope: !9229, inlinedAt: !9407)
!9409 = !DILocation(line: 213, column: 34, scope: !9388)
!9410 = !DILocation(line: 213, column: 2, scope: !9388)
!9411 = !DILocation(line: 216, column: 21, scope: !9388)
!9412 = !DILocation(line: 218, column: 11, scope: !9400)
!9413 = !DILocation(line: 218, column: 17, scope: !9400)
!9414 = !DILocation(line: 218, column: 6, scope: !9388)
!9415 = !DILocation(line: 219, column: 14, scope: !9398)
!9416 = !DILocation(line: 0, scope: !9398)
!9417 = !DILocation(line: 221, column: 3, scope: !9399)
!9418 = !DILocation(line: 223, column: 8, scope: !9399)
!9419 = !DILocation(line: 223, column: 3, scope: !9399)
!9420 = !DILocation(line: 223, column: 26, scope: !9399)
!9421 = !DILocation(line: 224, column: 2, scope: !9399)
!9422 = !DILocation(line: 225, column: 8, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9400, file: !1093, line: 224, column: 9)
!9424 = !DILocation(line: 225, column: 3, scope: !9423)
!9425 = !DILocation(line: 225, column: 30, scope: !9423)
!9426 = !DILocation(line: 233, column: 2, scope: !9388)
!9427 = !DILocation(line: 0, scope: !9292, inlinedAt: !9428)
!9428 = distinct !DILocation(line: 235, column: 2, scope: !9388)
!9429 = !DILocation(line: 0, scope: !9300, inlinedAt: !9430)
!9430 = distinct !DILocation(line: 215, column: 2, scope: !9292, inlinedAt: !9428)
!9431 = !DILocation(line: 95, column: 2, scope: !9300, inlinedAt: !9430)
!9432 = !DILocation(line: 236, column: 1, scope: !9388)
!9433 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9434, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9436)
!9434 = !DISubroutineType(types: !9435)
!9435 = !{null, !1003, !108, !104}
!9436 = !{!9437, !9438, !9439, !9440, !9442, !9444}
!9437 = !DILocalVariable(name: "r", arg: 1, scope: !9433, file: !125, line: 607, type: !1003)
!9438 = !DILocalVariable(name: "result", arg: 2, scope: !9433, file: !125, line: 607, type: !108)
!9439 = !DILocalVariable(name: "userdata", arg: 3, scope: !9433, file: !125, line: 607, type: !104)
!9440 = !DILocalVariable(name: "cqe", scope: !9433, file: !125, line: 609, type: !9441)
!9441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!9442 = !DILocalVariable(name: "idx", scope: !9443, file: !125, line: 609, type: !24)
!9443 = distinct !DILexicalBlock(scope: !9433, file: !125, line: 609, column: 25)
!9444 = !DILocalVariable(name: "acq", scope: !9443, file: !125, line: 609, type: !422)
!9445 = !DILocation(line: 0, scope: !9433)
!9446 = !DILocation(line: 609, column: 25, scope: !9443)
!9447 = !DILocation(line: 0, scope: !9443)
!9448 = !DILocation(line: 612, column: 18, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !125, line: 611, column: 19)
!9450 = distinct !DILexicalBlock(scope: !9433, file: !125, line: 611, column: 6)
!9451 = !DILocation(line: 612, column: 3, scope: !9449)
!9452 = !DILocation(line: 613, column: 2, scope: !9449)
!9453 = !DILocation(line: 609, column: 25, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !125, line: 609, column: 25)
!9455 = distinct !DILexicalBlock(scope: !9443, file: !125, line: 609, column: 25)
!9456 = !DILocation(line: 614, column: 8, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9450, file: !125, line: 613, column: 9)
!9458 = !DILocation(line: 614, column: 15, scope: !9457)
!9459 = !DILocation(line: 615, column: 8, scope: !9457)
!9460 = !DILocation(line: 615, column: 17, scope: !9457)
!9461 = !DILocation(line: 616, column: 3, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !125, line: 616, column: 3)
!9463 = distinct !DILexicalBlock(scope: !9457, file: !125, line: 616, column: 3)
!9464 = !DILocation(line: 616, column: 3, scope: !9463)
!9465 = !DILocation(line: 616, column: 3, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !125, line: 616, column: 3)
!9467 = !DILocation(line: 629, column: 1, scope: !9433)
!9468 = distinct !DISubprogram(name: "conex_task_id", scope: !1093, file: !1093, line: 55, type: !9469, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9471)
!9469 = !DISubroutineType(types: !9470)
!9470 = !{!168, !987, !1042}
!9471 = !{!9472, !9473, !9474}
!9472 = !DILocalVariable(name: "exc", arg: 1, scope: !9468, file: !1093, line: 55, type: !987)
!9473 = !DILocalVariable(name: "sqe", arg: 2, scope: !9468, file: !1093, line: 56, type: !1042)
!9474 = !DILocalVariable(name: "task_id", scope: !9468, file: !1093, line: 58, type: !168)
!9475 = !DILocation(line: 0, scope: !9468)
!9476 = !DILocation(line: 58, column: 26, scope: !9468)
!9477 = !DILocation(line: 60, column: 17, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9479, file: !1093, line: 60, column: 2)
!9479 = distinct !DILexicalBlock(scope: !9468, file: !1093, line: 60, column: 2)
!9480 = !DILocation(line: 60, column: 2, scope: !9479)
!9481 = !DILocation(line: 61, column: 12, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !1093, line: 61, column: 7)
!9483 = distinct !DILexicalBlock(scope: !9478, file: !1093, line: 60, column: 44)
!9484 = !DILocation(line: 61, column: 29, scope: !9482)
!9485 = !DILocation(line: 61, column: 7, scope: !9482)
!9486 = !DILocation(line: 61, column: 47, scope: !9482)
!9487 = !DILocation(line: 61, column: 7, scope: !9483)
!9488 = !DILocation(line: 60, column: 40, scope: !9478)
!9489 = distinct !{!9489, !9480, !9490}
!9490 = !DILocation(line: 64, column: 2, scope: !9479)
!9491 = !DILocation(line: 65, column: 2, scope: !9468)
!9492 = distinct !DISubprogram(name: "conex_sweep_resume", scope: !1093, file: !1093, line: 106, type: !9339, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9493)
!9493 = !{!9494, !9495}
!9494 = !DILocalVariable(name: "r", arg: 1, scope: !9492, file: !1093, line: 106, type: !1003)
!9495 = !DILocalVariable(name: "exc", arg: 2, scope: !9492, file: !1093, line: 106, type: !987)
!9496 = !DILocation(line: 0, scope: !9492)
!9497 = !DILocation(line: 108, column: 2, scope: !9492)
!9498 = !DILocation(line: 109, column: 2, scope: !9492)
!9499 = !DILocation(line: 110, column: 1, scope: !9492)
!9500 = distinct !DISubprogram(name: "conex_sweep", scope: !1093, file: !1093, line: 80, type: !9339, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9501)
!9501 = !{!9502, !9503, !9504}
!9502 = !DILocalVariable(name: "r", arg: 1, scope: !9500, file: !1093, line: 80, type: !1003)
!9503 = !DILocalVariable(name: "exc", arg: 2, scope: !9500, file: !1093, line: 80, type: !987)
!9504 = !DILocalVariable(name: "task_id", scope: !9505, file: !1093, line: 83, type: !168)
!9505 = distinct !DILexicalBlock(scope: !9500, file: !1093, line: 83, column: 2)
!9506 = !DILocation(line: 0, scope: !9500)
!9507 = !DILocation(line: 83, column: 31, scope: !9505)
!9508 = !DILocation(line: 0, scope: !9505)
!9509 = !DILocation(line: 84, column: 12, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !1093, line: 84, column: 7)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !1093, line: 83, column: 76)
!9512 = distinct !DILexicalBlock(scope: !9505, file: !1093, line: 83, column: 2)
!9513 = !DILocation(line: 83, column: 56, scope: !9512)
!9514 = !DILocation(line: 83, column: 49, scope: !9512)
!9515 = !DILocation(line: 83, column: 2, scope: !9505)
!9516 = !DILocation(line: 84, column: 39, scope: !9510)
!9517 = !DILocation(line: 84, column: 32, scope: !9510)
!9518 = !DILocation(line: 84, column: 7, scope: !9510)
!9519 = !DILocation(line: 84, column: 50, scope: !9510)
!9520 = !DILocation(line: 84, column: 7, scope: !9511)
!9521 = !DILocation(line: 85, column: 4, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9523, file: !1093, line: 85, column: 4)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !1093, line: 85, column: 4)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !1093, line: 85, column: 4)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !1093, line: 85, column: 4)
!9526 = distinct !DILexicalBlock(scope: !9510, file: !1093, line: 84, column: 73)
!9527 = !DILocation(line: 86, column: 4, scope: !9526)
!9528 = !DILocation(line: 87, column: 17, scope: !9526)
!9529 = !DILocation(line: 83, column: 72, scope: !9512)
!9530 = distinct !{!9530, !9515, !9531}
!9531 = !DILocation(line: 91, column: 2, scope: !9505)
!9532 = !DILocation(line: 92, column: 1, scope: !9500)
!9533 = distinct !DISubprogram(name: "conex_sweep_task", scope: !1093, file: !1093, line: 68, type: !9339, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9534)
!9534 = !{!9535, !9536, !9537, !9538, !9540, !9541, !9544}
!9535 = !DILocalVariable(name: "r", arg: 1, scope: !9533, file: !1093, line: 68, type: !1003)
!9536 = !DILocalVariable(name: "exc", arg: 2, scope: !9533, file: !1093, line: 68, type: !987)
!9537 = !DILocalVariable(name: "sqe", scope: !9533, file: !1093, line: 70, type: !1087)
!9538 = !DILocalVariable(name: "idx", scope: !9539, file: !1093, line: 70, type: !24)
!9539 = distinct !DILexicalBlock(scope: !9533, file: !1093, line: 70, column: 25)
!9540 = !DILocalVariable(name: "has_consumable", scope: !9539, file: !1093, line: 70, type: !422)
!9541 = !DILocalVariable(name: "idx", scope: !9542, file: !1093, line: 74, type: !24)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !1093, line: 74, column: 9)
!9543 = distinct !DILexicalBlock(scope: !9533, file: !1093, line: 72, column: 55)
!9544 = !DILocalVariable(name: "has_consumable", scope: !9542, file: !1093, line: 74, type: !422)
!9545 = !DILocation(line: 0, scope: !9533)
!9546 = !DILocation(line: 70, column: 25, scope: !9539)
!9547 = !DILocation(line: 0, scope: !9539)
!9548 = !DILocation(line: 72, column: 29, scope: !9533)
!9549 = !DILocation(line: 72, column: 35, scope: !9533)
!9550 = !DILocation(line: 72, column: 21, scope: !9533)
!9551 = !DILocation(line: 72, column: 2, scope: !9533)
!9552 = !DILocation(line: 73, column: 3, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !1093, line: 73, column: 3)
!9554 = distinct !DILexicalBlock(scope: !9543, file: !1093, line: 73, column: 3)
!9555 = !DILocation(line: 73, column: 3, scope: !9554)
!9556 = !DILocation(line: 73, column: 3, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9553, file: !1093, line: 73, column: 3)
!9558 = !DILocation(line: 74, column: 9, scope: !9542)
!9559 = !DILocation(line: 0, scope: !9542)
!9560 = !DILocation(line: 77, column: 2, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9562, file: !1093, line: 77, column: 2)
!9562 = distinct !DILexicalBlock(scope: !9533, file: !1093, line: 77, column: 2)
!9563 = !DILocation(line: 77, column: 2, scope: !9562)
!9564 = !DILocation(line: 77, column: 2, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9561, file: !1093, line: 77, column: 2)
!9566 = !DILocation(line: 78, column: 1, scope: !9533)
!9567 = distinct !DISubprogram(name: "atomic_add", scope: !3676, file: !3676, line: 86, type: !3712, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9568)
!9568 = !{!9569, !9570}
!9569 = !DILocalVariable(name: "target", arg: 1, scope: !9567, file: !3676, line: 86, type: !3714)
!9570 = !DILocalVariable(name: "value", arg: 2, scope: !9567, file: !3676, line: 86, type: !3679)
!9571 = !DILocation(line: 0, scope: !9567)
!9572 = !DILocation(line: 88, column: 9, scope: !9567)
!9573 = !DILocation(line: 88, column: 2, scope: !9567)
!9574 = distinct !DISubprogram(name: "atomic_inc", scope: !3676, file: !3676, line: 123, type: !9117, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9575)
!9575 = !{!9576}
!9576 = !DILocalVariable(name: "target", arg: 1, scope: !9574, file: !3676, line: 123, type: !3714)
!9577 = !DILocation(line: 0, scope: !9574)
!9578 = !DILocation(line: 125, column: 9, scope: !9574)
!9579 = !DILocation(line: 125, column: 2, scope: !9574)
!9580 = distinct !DISubprogram(name: "rtio_concurrent_err", scope: !1093, file: !1093, line: 241, type: !1078, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9581)
!9581 = !{!9582, !9583, !9584, !9585, !9586, !9587, !9588, !9589, !9593, !9594, !9597}
!9582 = !DILocalVariable(name: "r", arg: 1, scope: !9580, file: !1093, line: 241, type: !1003)
!9583 = !DILocalVariable(name: "sqe", arg: 2, scope: !9580, file: !1093, line: 241, type: !1042)
!9584 = !DILocalVariable(name: "result", arg: 3, scope: !9580, file: !1093, line: 241, type: !108)
!9585 = !DILocalVariable(name: "nsqe", scope: !9580, file: !1093, line: 243, type: !1087)
!9586 = !DILocalVariable(name: "key", scope: !9580, file: !1093, line: 244, type: !9186)
!9587 = !DILocalVariable(name: "exc", scope: !9580, file: !1093, line: 245, type: !987)
!9588 = !DILocalVariable(name: "task_id", scope: !9580, file: !1093, line: 260, type: !168)
!9589 = !DILocalVariable(name: "idx", scope: !9590, file: !1093, line: 265, type: !24)
!9590 = distinct !DILexicalBlock(scope: !9591, file: !1093, line: 265, column: 10)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !1093, line: 264, column: 37)
!9592 = distinct !DILexicalBlock(scope: !9580, file: !1093, line: 264, column: 6)
!9593 = !DILocalVariable(name: "has_next", scope: !9590, file: !1093, line: 265, type: !422)
!9594 = !DILocalVariable(name: "idx", scope: !9595, file: !1093, line: 268, type: !24)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !1093, line: 268, column: 11)
!9596 = distinct !DILexicalBlock(scope: !9591, file: !1093, line: 266, column: 58)
!9597 = !DILocalVariable(name: "has_next", scope: !9595, file: !1093, line: 268, type: !422)
!9598 = !DILocation(line: 0, scope: !9580)
!9599 = !DILocation(line: 245, column: 79, scope: !9580)
!9600 = !DILocation(line: 0, scope: !9220, inlinedAt: !9601)
!9601 = distinct !DILocation(line: 255, column: 8, scope: !9580)
!9602 = !DILocation(line: 55, column: 2, scope: !9229, inlinedAt: !9603)
!9603 = distinct !DILocation(line: 145, column: 10, scope: !9220, inlinedAt: !9601)
!9604 = !DILocation(line: 0, scope: !9229, inlinedAt: !9603)
!9605 = !DILocation(line: 257, column: 34, scope: !9580)
!9606 = !DILocation(line: 257, column: 2, scope: !9580)
!9607 = !DILocation(line: 260, column: 21, scope: !9580)
!9608 = !DILocation(line: 264, column: 11, scope: !9592)
!9609 = !DILocation(line: 264, column: 17, scope: !9592)
!9610 = !DILocation(line: 264, column: 6, scope: !9580)
!9611 = !DILocation(line: 265, column: 10, scope: !9590)
!9612 = !DILocation(line: 0, scope: !9590)
!9613 = !DILocation(line: 266, column: 23, scope: !9591)
!9614 = !DILocation(line: 266, column: 3, scope: !9591)
!9615 = !DILocation(line: 266, column: 32, scope: !9591)
!9616 = !DILocation(line: 266, column: 38, scope: !9591)
!9617 = !DILocation(line: 267, column: 41, scope: !9596)
!9618 = !DILocation(line: 267, column: 4, scope: !9596)
!9619 = !DILocation(line: 268, column: 11, scope: !9595)
!9620 = !DILocation(line: 0, scope: !9595)
!9621 = !DILocation(line: 273, column: 7, scope: !9580)
!9622 = !DILocation(line: 273, column: 2, scope: !9580)
!9623 = !DILocation(line: 273, column: 28, scope: !9580)
!9624 = !DILocation(line: 275, column: 2, scope: !9580)
!9625 = !DILocation(line: 0, scope: !9292, inlinedAt: !9626)
!9626 = distinct !DILocation(line: 277, column: 2, scope: !9580)
!9627 = !DILocation(line: 0, scope: !9300, inlinedAt: !9628)
!9628 = distinct !DILocation(line: 215, column: 2, scope: !9292, inlinedAt: !9626)
!9629 = !DILocation(line: 95, column: 2, scope: !9300, inlinedAt: !9628)
!9630 = !DILocation(line: 278, column: 1, scope: !9580)
!9631 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1173, file: !1173, line: 368, type: !1222, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9632)
!9632 = !{!9633}
!9633 = !DILocalVariable(name: "dev", arg: 1, scope: !9631, file: !1173, line: 368, type: !1199)
!9634 = !DILocation(line: 0, scope: !9631)
!9635 = !DILocation(line: 370, column: 2, scope: !9631)
!9636 = !DILocation(line: 371, column: 1, scope: !9631)
!9637 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1173, file: !1173, line: 243, type: !9638, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9640)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{null, !108, !108, !1199}
!9640 = !{!9641, !9642, !9643, !9644, !9646}
!9641 = !DILocalVariable(name: "min", arg: 1, scope: !9637, file: !1173, line: 243, type: !108)
!9642 = !DILocalVariable(name: "max", arg: 2, scope: !9637, file: !1173, line: 243, type: !108)
!9643 = !DILocalVariable(name: "dev", arg: 3, scope: !9637, file: !1173, line: 243, type: !1199)
!9644 = !DILocalVariable(name: "data", scope: !9637, file: !1173, line: 245, type: !9645)
!9645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!9646 = !DILocalVariable(name: "line", scope: !9637, file: !1173, line: 246, type: !108)
!9647 = !DILocation(line: 0, scope: !9637)
!9648 = !DILocation(line: 245, column: 38, scope: !9637)
!9649 = !DILocation(line: 249, column: 24, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9651, file: !1173, line: 249, column: 2)
!9651 = distinct !DILexicalBlock(scope: !9637, file: !1173, line: 249, column: 2)
!9652 = !DILocation(line: 249, column: 2, scope: !9651)
!9653 = !DILocation(line: 251, column: 7, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !1173, line: 251, column: 7)
!9655 = distinct !DILexicalBlock(scope: !9650, file: !1173, line: 249, column: 39)
!9656 = !DILocation(line: 251, column: 7, scope: !9655)
!9657 = !DILocation(line: 253, column: 4, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9654, file: !1173, line: 251, column: 36)
!9659 = !DILocation(line: 256, column: 24, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9658, file: !1173, line: 256, column: 8)
!9661 = !DILocation(line: 256, column: 9, scope: !9660)
!9662 = !DILocation(line: 256, column: 8, scope: !9658)
!9663 = !DILocation(line: 260, column: 43, scope: !9658)
!9664 = !DILocation(line: 260, column: 4, scope: !9658)
!9665 = !DILocation(line: 261, column: 3, scope: !9658)
!9666 = !DILocation(line: 249, column: 35, scope: !9650)
!9667 = distinct !{!9667, !9652, !9668}
!9668 = !DILocation(line: 262, column: 2, scope: !9651)
!9669 = !DILocation(line: 263, column: 1, scope: !9637)
!9670 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1173, file: !1173, line: 158, type: !555, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9671)
!9671 = !{!9672}
!9672 = !DILocalVariable(name: "line", arg: 1, scope: !9670, file: !1173, line: 158, type: !108)
!9673 = !DILocation(line: 0, scope: !9670)
!9674 = !DILocation(line: 170, column: 38, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9676, file: !1173, line: 160, column: 17)
!9676 = distinct !DILexicalBlock(scope: !9670, file: !1173, line: 160, column: 6)
!9677 = !DILocation(line: 170, column: 10, scope: !9675)
!9678 = !DILocation(line: 176, column: 1, scope: !9670)
!9679 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1173, file: !1173, line: 183, type: !9680, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9682)
!9680 = !DISubroutineType(types: !9681)
!9681 = !{null, !108}
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "line", arg: 1, scope: !9679, file: !1173, line: 183, type: !108)
!9684 = !DILocation(line: 0, scope: !9679)
!9685 = !DILocation(line: 195, column: 28, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9687, file: !1173, line: 185, column: 17)
!9687 = distinct !DILexicalBlock(scope: !9679, file: !1173, line: 185, column: 6)
!9688 = !DILocation(line: 195, column: 3, scope: !9686)
!9689 = !DILocation(line: 200, column: 1, scope: !9679)
!9690 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9691, file: !9691, line: 971, type: !6721, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9692)
!9691 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9692 = !{!9693}
!9693 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9690, file: !9691, line: 971, type: !113)
!9694 = !DILocation(line: 0, scope: !9690)
!9695 = !DILocation(line: 973, column: 3, scope: !9690)
!9696 = !DILocation(line: 974, column: 1, scope: !9690)
!9697 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9691, file: !9691, line: 891, type: !8237, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9698)
!9698 = !{!9699}
!9699 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9697, file: !9691, line: 891, type: !113)
!9700 = !DILocation(line: 0, scope: !9697)
!9701 = !DILocation(line: 893, column: 11, scope: !9697)
!9702 = !DILocation(line: 893, column: 40, scope: !9697)
!9703 = !DILocation(line: 893, column: 3, scope: !9697)
!9704 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1173, file: !1173, line: 304, type: !1222, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9705)
!9705 = !{!9706}
!9706 = !DILocalVariable(name: "dev", arg: 1, scope: !9704, file: !1173, line: 304, type: !1199)
!9707 = !DILocation(line: 0, scope: !9704)
!9708 = !DILocation(line: 306, column: 2, scope: !9704)
!9709 = !DILocation(line: 307, column: 1, scope: !9704)
!9710 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1173, file: !1173, line: 299, type: !1222, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9711)
!9711 = !{!9712}
!9712 = !DILocalVariable(name: "dev", arg: 1, scope: !9710, file: !1173, line: 299, type: !1199)
!9713 = !DILocation(line: 0, scope: !9710)
!9714 = !DILocation(line: 301, column: 2, scope: !9710)
!9715 = !DILocation(line: 302, column: 1, scope: !9710)
!9716 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1173, file: !1173, line: 294, type: !1222, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9717)
!9717 = !{!9718}
!9718 = !DILocalVariable(name: "dev", arg: 1, scope: !9716, file: !1173, line: 294, type: !1199)
!9719 = !DILocation(line: 0, scope: !9716)
!9720 = !DILocation(line: 296, column: 2, scope: !9716)
!9721 = !DILocation(line: 297, column: 1, scope: !9716)
!9722 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1173, file: !1173, line: 289, type: !1222, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9723)
!9723 = !{!9724}
!9724 = !DILocalVariable(name: "dev", arg: 1, scope: !9722, file: !1173, line: 289, type: !1199)
!9725 = !DILocation(line: 0, scope: !9722)
!9726 = !DILocation(line: 291, column: 2, scope: !9722)
!9727 = !DILocation(line: 292, column: 1, scope: !9722)
!9728 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1173, file: !1173, line: 373, type: !1222, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9729)
!9729 = !{!9730}
!9730 = !DILocalVariable(name: "dev", arg: 1, scope: !9728, file: !1173, line: 373, type: !1199)
!9731 = !DILocation(line: 0, scope: !9728)
!9732 = !DILocation(line: 375, column: 2, scope: !9728)
!9733 = !DILocation(line: 376, column: 1, scope: !9728)
!9734 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1173, file: !1173, line: 284, type: !1222, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9735)
!9735 = !{!9736}
!9736 = !DILocalVariable(name: "dev", arg: 1, scope: !9734, file: !1173, line: 284, type: !1199)
!9737 = !DILocation(line: 0, scope: !9734)
!9738 = !DILocation(line: 286, column: 2, scope: !9734)
!9739 = !DILocation(line: 287, column: 1, scope: !9734)
!9740 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1173, file: !1173, line: 416, type: !1197, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9741)
!9741 = !{!9742}
!9742 = !DILocalVariable(name: "dev", arg: 1, scope: !9740, file: !1173, line: 416, type: !1199)
!9743 = !DILocation(line: 0, scope: !9740)
!9744 = !DILocation(line: 418, column: 2, scope: !9740)
!9745 = !DILocation(line: 420, column: 2, scope: !9740)
!9746 = !DILocation(line: 0, scope: !1221)
!9747 = !DILocation(line: 493, column: 2, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !1221, file: !1173, line: 493, column: 2)
!9749 = !DILocation(line: 497, column: 2, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !1221, file: !1173, line: 497, column: 2)
!9751 = !DILocation(line: 507, column: 2, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !1221, file: !1173, line: 507, column: 2)
!9753 = !DILocation(line: 512, column: 2, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !1221, file: !1173, line: 512, column: 2)
!9755 = !DILocation(line: 516, column: 2, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !1221, file: !1173, line: 516, column: 2)
!9757 = !DILocation(line: 523, column: 2, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !1221, file: !1173, line: 523, column: 2)
!9759 = !DILocation(line: 527, column: 2, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !1221, file: !1173, line: 527, column: 2)
!9761 = !DILocation(line: 607, column: 1, scope: !1221)
!9762 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1173, file: !1173, line: 112, type: !9680, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9763)
!9763 = !{!9764, !9765}
!9764 = !DILocalVariable(name: "line", arg: 1, scope: !9762, file: !1173, line: 112, type: !108)
!9765 = !DILocalVariable(name: "irqnum", scope: !9762, file: !1173, line: 114, type: !108)
!9766 = !DILocation(line: 0, scope: !9762)
!9767 = !DILocation(line: 121, column: 11, scope: !9762)
!9768 = !DILocation(line: 130, column: 26, scope: !9762)
!9769 = !DILocation(line: 130, column: 2, scope: !9762)
!9770 = !DILocation(line: 134, column: 2, scope: !9762)
!9771 = !DILocation(line: 135, column: 1, scope: !9762)
!9772 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9691, file: !9691, line: 274, type: !6721, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9773)
!9773 = !{!9774}
!9774 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9772, file: !9691, line: 274, type: !113)
!9775 = !DILocation(line: 0, scope: !9772)
!9776 = !DILocation(line: 276, column: 3, scope: !9772)
!9777 = !DILocation(line: 277, column: 1, scope: !9772)
!9778 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1173, file: !1173, line: 137, type: !9680, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9779)
!9779 = !{!9780}
!9780 = !DILocalVariable(name: "line", arg: 1, scope: !9778, file: !1173, line: 137, type: !108)
!9781 = !DILocation(line: 0, scope: !9778)
!9782 = !DILocation(line: 141, column: 11, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9778, file: !1173, line: 141, column: 6)
!9784 = !DILocation(line: 141, column: 6, scope: !9778)
!9785 = !DILocation(line: 145, column: 28, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9783, file: !1173, line: 141, column: 17)
!9787 = !DILocation(line: 145, column: 3, scope: !9786)
!9788 = !DILocation(line: 147, column: 2, scope: !9786)
!9789 = !DILocation(line: 151, column: 1, scope: !9778)
!9790 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9691, file: !9691, line: 322, type: !6721, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9791)
!9791 = !{!9792}
!9792 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9790, file: !9691, line: 322, type: !113)
!9793 = !DILocation(line: 0, scope: !9790)
!9794 = !DILocation(line: 324, column: 3, scope: !9790)
!9795 = !DILocation(line: 325, column: 1, scope: !9790)
!9796 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1173, file: !1173, line: 202, type: !9797, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9799)
!9797 = !DISubroutineType(types: !9798)
!9798 = !{null, !108, !108}
!9799 = !{!9800, !9801}
!9800 = !DILocalVariable(name: "line", arg: 1, scope: !9796, file: !1173, line: 202, type: !108)
!9801 = !DILocalVariable(name: "trigger", arg: 2, scope: !9796, file: !1173, line: 202, type: !108)
!9802 = !DILocation(line: 0, scope: !9796)
!9803 = !DILocation(line: 211, column: 2, scope: !9796)
!9804 = !DILocation(line: 213, column: 36, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9796, file: !1173, line: 211, column: 19)
!9806 = !DILocation(line: 213, column: 3, scope: !9805)
!9807 = !DILocation(line: 214, column: 3, scope: !9805)
!9808 = !DILocation(line: 215, column: 3, scope: !9805)
!9809 = !DILocation(line: 217, column: 35, scope: !9805)
!9810 = !DILocation(line: 217, column: 3, scope: !9805)
!9811 = !DILocation(line: 218, column: 3, scope: !9805)
!9812 = !DILocation(line: 219, column: 3, scope: !9805)
!9813 = !DILocation(line: 221, column: 36, scope: !9805)
!9814 = !DILocation(line: 221, column: 3, scope: !9805)
!9815 = !DILocation(line: 222, column: 3, scope: !9805)
!9816 = !DILocation(line: 223, column: 3, scope: !9805)
!9817 = !DILocation(line: 225, column: 35, scope: !9805)
!9818 = !DILocation(line: 225, column: 3, scope: !9805)
!9819 = !DILocation(line: 226, column: 3, scope: !9805)
!9820 = !DILocation(line: 227, column: 3, scope: !9805)
!9821 = !DILocation(line: 232, column: 1, scope: !9796)
!9822 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9691, file: !9691, line: 618, type: !6721, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9823)
!9823 = !{!9824}
!9824 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9822, file: !9691, line: 618, type: !113)
!9825 = !DILocation(line: 0, scope: !9822)
!9826 = !DILocation(line: 620, column: 3, scope: !9822)
!9827 = !DILocation(line: 622, column: 1, scope: !9822)
!9828 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9691, file: !9691, line: 754, type: !6721, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9829)
!9829 = !{!9830}
!9830 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9828, file: !9691, line: 754, type: !113)
!9831 = !DILocation(line: 0, scope: !9828)
!9832 = !DILocation(line: 756, column: 3, scope: !9828)
!9833 = !DILocation(line: 757, column: 1, scope: !9828)
!9834 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9691, file: !9691, line: 572, type: !6721, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9835)
!9835 = !{!9836}
!9836 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9834, file: !9691, line: 572, type: !113)
!9837 = !DILocation(line: 0, scope: !9834)
!9838 = !DILocation(line: 574, column: 3, scope: !9834)
!9839 = !DILocation(line: 576, column: 1, scope: !9834)
!9840 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9691, file: !9691, line: 710, type: !6721, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9841)
!9841 = !{!9842}
!9842 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9840, file: !9691, line: 710, type: !113)
!9843 = !DILocation(line: 0, scope: !9840)
!9844 = !DILocation(line: 712, column: 3, scope: !9840)
!9845 = !DILocation(line: 713, column: 1, scope: !9840)
!9846 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1173, file: !1173, line: 433, type: !9847, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9849)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!108, !108, !1210, !104}
!9849 = !{!9850, !9851, !9852, !9853, !9855}
!9850 = !DILocalVariable(name: "line", arg: 1, scope: !9846, file: !1173, line: 433, type: !108)
!9851 = !DILocalVariable(name: "cb", arg: 2, scope: !9846, file: !1173, line: 433, type: !1210)
!9852 = !DILocalVariable(name: "arg", arg: 3, scope: !9846, file: !1173, line: 433, type: !104)
!9853 = !DILocalVariable(name: "dev", scope: !9846, file: !1173, line: 435, type: !9854)
!9854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1199)
!9855 = !DILocalVariable(name: "data", scope: !9846, file: !1173, line: 436, type: !9645)
!9856 = !DILocation(line: 0, scope: !9846)
!9857 = !DILocation(line: 438, column: 21, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9846, file: !1173, line: 438, column: 6)
!9859 = !DILocation(line: 438, column: 6, scope: !9858)
!9860 = !DILocation(line: 438, column: 6, scope: !9846)
!9861 = !DILocation(line: 442, column: 20, scope: !9846)
!9862 = !DILocation(line: 443, column: 17, scope: !9846)
!9863 = !DILocation(line: 443, column: 22, scope: !9846)
!9864 = !DILocation(line: 445, column: 2, scope: !9846)
!9865 = !DILocation(line: 446, column: 1, scope: !9846)
!9866 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1173, file: !1173, line: 448, type: !9680, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !9867)
!9867 = !{!9868, !9869, !9870}
!9868 = !DILocalVariable(name: "line", arg: 1, scope: !9866, file: !1173, line: 448, type: !108)
!9869 = !DILocalVariable(name: "dev", scope: !9866, file: !1173, line: 450, type: !9854)
!9870 = !DILocalVariable(name: "data", scope: !9866, file: !1173, line: 451, type: !9645)
!9871 = !DILocation(line: 0, scope: !9866)
!9872 = !DILocation(line: 453, column: 17, scope: !9866)
!9873 = !DILocation(line: 453, column: 20, scope: !9866)
!9874 = !DILocation(line: 454, column: 17, scope: !9866)
!9875 = !DILocation(line: 454, column: 22, scope: !9866)
!9876 = !DILocation(line: 455, column: 1, scope: !9866)
!9877 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1293, file: !1293, line: 183, type: !1331, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !9878)
!9878 = !{!9879, !9880, !9881, !9882, !9883}
!9879 = !DILocalVariable(name: "dev", arg: 1, scope: !9877, file: !1293, line: 183, type: !1322)
!9880 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9877, file: !1293, line: 184, type: !1333)
!9881 = !DILocalVariable(name: "pclken", scope: !9877, file: !1293, line: 186, type: !1283)
!9882 = !DILocalVariable(name: "reg", scope: !9877, file: !1293, line: 187, type: !3258)
!9883 = !DILocalVariable(name: "reg_val", scope: !9877, file: !1293, line: 188, type: !113)
!9884 = !DILocation(line: 0, scope: !9877)
!9885 = !DILocation(line: 192, column: 6, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9877, file: !1293, line: 192, column: 6)
!9887 = !DILocation(line: 192, column: 6, scope: !9877)
!9888 = !DILocation(line: 197, column: 52, scope: !9877)
!9889 = !DILocation(line: 197, column: 8, scope: !9877)
!9890 = !DILocation(line: 198, column: 12, scope: !9877)
!9891 = !DILocation(line: 199, column: 21, scope: !9877)
!9892 = !DILocation(line: 199, column: 10, scope: !9877)
!9893 = !DILocation(line: 200, column: 7, scope: !9877)
!9894 = !DILocation(line: 202, column: 2, scope: !9877)
!9895 = !DILocation(line: 203, column: 1, scope: !9877)
!9896 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1293, file: !1293, line: 205, type: !1331, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !9897)
!9897 = !{!9898, !9899, !9900, !9901, !9902}
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9896, file: !1293, line: 205, type: !1322)
!9899 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9896, file: !1293, line: 206, type: !1333)
!9900 = !DILocalVariable(name: "pclken", scope: !9896, file: !1293, line: 208, type: !1283)
!9901 = !DILocalVariable(name: "reg", scope: !9896, file: !1293, line: 209, type: !3258)
!9902 = !DILocalVariable(name: "reg_val", scope: !9896, file: !1293, line: 210, type: !113)
!9903 = !DILocation(line: 0, scope: !9896)
!9904 = !DILocation(line: 214, column: 6, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9896, file: !1293, line: 214, column: 6)
!9906 = !DILocation(line: 214, column: 6, scope: !9896)
!9907 = !DILocation(line: 219, column: 52, scope: !9896)
!9908 = !DILocation(line: 219, column: 8, scope: !9896)
!9909 = !DILocation(line: 220, column: 12, scope: !9896)
!9910 = !DILocation(line: 221, column: 22, scope: !9896)
!9911 = !DILocation(line: 221, column: 13, scope: !9896)
!9912 = !DILocation(line: 221, column: 10, scope: !9896)
!9913 = !DILocation(line: 222, column: 7, scope: !9896)
!9914 = !DILocation(line: 224, column: 2, scope: !9896)
!9915 = !DILocation(line: 225, column: 1, scope: !9896)
!9916 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1293, file: !1293, line: 262, type: !1347, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !9917)
!9917 = !{!9918, !9919, !9920, !9921, !9922, !9923, !9924}
!9918 = !DILocalVariable(name: "clock", arg: 1, scope: !9916, file: !1293, line: 262, type: !1322)
!9919 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9916, file: !1293, line: 263, type: !1333)
!9920 = !DILocalVariable(name: "rate", arg: 3, scope: !9916, file: !1293, line: 264, type: !1289)
!9921 = !DILocalVariable(name: "pclken", scope: !9916, file: !1293, line: 266, type: !1283)
!9922 = !DILocalVariable(name: "ahb_clock", scope: !9916, file: !1293, line: 273, type: !113)
!9923 = !DILocalVariable(name: "apb1_clock", scope: !9916, file: !1293, line: 274, type: !113)
!9924 = !DILocalVariable(name: "apb2_clock", scope: !9916, file: !1293, line: 276, type: !113)
!9925 = !DILocation(line: 0, scope: !9916)
!9926 = !DILocation(line: 273, column: 23, scope: !9916)
!9927 = !DILocation(line: 299, column: 18, scope: !9916)
!9928 = !DILocation(line: 299, column: 2, scope: !9916)
!9929 = !DILocation(line: 374, column: 3, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9916, file: !1293, line: 299, column: 23)
!9931 = !DILocation(line: 379, column: 3, scope: !9930)
!9932 = !DILocation(line: 389, column: 3, scope: !9930)
!9933 = !DILocation(line: 0, scope: !9930)
!9934 = !DILocation(line: 396, column: 1, scope: !9916)
!9935 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1293, file: !1293, line: 227, type: !1363, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !9936)
!9936 = !{!9937, !9938, !9939, !9940, !9941, !9942, !9943, !9944}
!9937 = !DILocalVariable(name: "dev", arg: 1, scope: !9935, file: !1293, line: 227, type: !1322)
!9938 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9935, file: !1293, line: 228, type: !1333)
!9939 = !DILocalVariable(name: "data", arg: 3, scope: !9935, file: !1293, line: 229, type: !104)
!9940 = !DILocalVariable(name: "pclken", scope: !9935, file: !1293, line: 233, type: !1283)
!9941 = !DILocalVariable(name: "reg", scope: !9935, file: !1293, line: 234, type: !3258)
!9942 = !DILocalVariable(name: "reg_val", scope: !9935, file: !1293, line: 235, type: !113)
!9943 = !DILocalVariable(name: "dt_val", scope: !9935, file: !1293, line: 235, type: !113)
!9944 = !DILocalVariable(name: "err", scope: !9935, file: !1293, line: 236, type: !108)
!9945 = !DILocation(line: 0, scope: !9935)
!9946 = !DILocation(line: 241, column: 30, scope: !9935)
!9947 = !DILocation(line: 241, column: 8, scope: !9935)
!9948 = !DILocation(line: 242, column: 10, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9935, file: !1293, line: 242, column: 6)
!9950 = !DILocation(line: 242, column: 6, scope: !9935)
!9951 = !DILocation(line: 247, column: 11, scope: !9935)
!9952 = !DILocation(line: 248, column: 6, scope: !9935)
!9953 = !DILocation(line: 247, column: 44, scope: !9935)
!9954 = !DILocation(line: 250, column: 6, scope: !9935)
!9955 = !DILocation(line: 249, column: 52, scope: !9935)
!9956 = !DILocation(line: 249, column: 8, scope: !9935)
!9957 = !DILocation(line: 251, column: 12, scope: !9935)
!9958 = !DILocation(line: 252, column: 10, scope: !9935)
!9959 = !DILocation(line: 253, column: 7, scope: !9935)
!9960 = !DILocation(line: 255, column: 2, scope: !9935)
!9961 = !DILocation(line: 260, column: 1, scope: !9935)
!9962 = distinct !DISubprogram(name: "enabled_clock", scope: !1293, file: !1293, line: 100, type: !9963, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !9965)
!9963 = !DISubroutineType(types: !9964)
!9964 = !{!108, !113}
!9965 = !{!9966, !9967}
!9966 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9962, file: !1293, line: 100, type: !113)
!9967 = !DILocalVariable(name: "r", scope: !9962, file: !1293, line: 102, type: !108)
!9968 = !DILocation(line: 0, scope: !9962)
!9969 = !DILocation(line: 104, column: 2, scope: !9962)
!9970 = !DILocation(line: 180, column: 2, scope: !9962)
!9971 = !DILocation(line: 181, column: 1, scope: !9962)
!9972 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1293, file: !1293, line: 641, type: !1320, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !9973)
!9973 = !{!9974, !9975, !9976}
!9974 = !DILocalVariable(name: "dev", arg: 1, scope: !9972, file: !1293, line: 641, type: !1322)
!9975 = !DILocalVariable(name: "old_flash_freq", scope: !9972, file: !1293, line: 664, type: !113)
!9976 = !DILocalVariable(name: "new_flash_freq", scope: !9972, file: !1293, line: 665, type: !113)
!9977 = !DILocation(line: 0, scope: !9972)
!9978 = !DILocation(line: 646, column: 2, scope: !9972)
!9979 = !DILocation(line: 667, column: 19, scope: !9972)
!9980 = !DILocation(line: 674, column: 21, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9972, file: !1293, line: 674, column: 6)
!9982 = !DILocation(line: 674, column: 6, scope: !9972)
!9983 = !DILocation(line: 675, column: 3, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9981, file: !1293, line: 674, column: 59)
!9985 = !DILocation(line: 676, column: 2, scope: !9984)
!9986 = !DILocation(line: 680, column: 2, scope: !9972)
!9987 = !DILocation(line: 683, column: 2, scope: !9972)
!9988 = !DILocation(line: 690, column: 3, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9990, file: !1293, line: 689, column: 9)
!9990 = distinct !DILexicalBlock(scope: !9972, file: !1293, line: 685, column: 6)
!9991 = !DILocation(line: 695, column: 2, scope: !9972)
!9992 = !DILocation(line: 696, column: 2, scope: !9972)
!9993 = !DILocation(line: 696, column: 9, scope: !9972)
!9994 = !DILocation(line: 696, column: 34, scope: !9972)
!9995 = distinct !{!9995, !9992, !9996}
!9996 = !DILocation(line: 697, column: 2, scope: !9972)
!9997 = !DILocation(line: 720, column: 21, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9972, file: !1293, line: 720, column: 6)
!9999 = !DILocation(line: 720, column: 6, scope: !9972)
!10000 = !DILocation(line: 721, column: 3, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9998, file: !1293, line: 720, column: 60)
!10002 = !DILocation(line: 722, column: 2, scope: !10001)
!10003 = !DILocation(line: 725, column: 18, scope: !9972)
!10004 = !DILocation(line: 728, column: 2, scope: !9972)
!10005 = !DILocation(line: 730, column: 2, scope: !9972)
!10006 = !DILocation(line: 745, column: 2, scope: !9972)
!10007 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10008, file: !10008, line: 995, type: !8003, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10008 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10009 = !DILocation(line: 997, column: 21, scope: !10007)
!10010 = !DILocation(line: 997, column: 3, scope: !10007)
!10011 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1293, file: !1293, line: 507, type: !3381, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10012 = !DILocation(line: 534, column: 7, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10014, file: !1293, line: 534, column: 7)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !1293, line: 532, column: 37)
!10015 = distinct !DILexicalBlock(scope: !10011, file: !1293, line: 532, column: 6)
!10016 = !DILocation(line: 534, column: 28, scope: !10013)
!10017 = !DILocation(line: 534, column: 7, scope: !10014)
!10018 = !DILocation(line: 536, column: 4, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10013, file: !1293, line: 534, column: 34)
!10020 = !DILocation(line: 537, column: 4, scope: !10019)
!10021 = !DILocation(line: 537, column: 11, scope: !10019)
!10022 = !DILocation(line: 537, column: 32, scope: !10019)
!10023 = distinct !{!10023, !10020, !10024}
!10024 = !DILocation(line: 539, column: 4, scope: !10019)
!10025 = !DILocation(line: 583, column: 3, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !1293, line: 577, column: 37)
!10027 = distinct !DILexicalBlock(scope: !10011, file: !1293, line: 577, column: 6)
!10028 = !DILocation(line: 584, column: 3, scope: !10026)
!10029 = !DILocation(line: 584, column: 10, scope: !10026)
!10030 = !DILocation(line: 584, column: 31, scope: !10026)
!10031 = distinct !{!10031, !10028, !10032}
!10032 = !DILocation(line: 585, column: 3, scope: !10026)
!10033 = !DILocation(line: 627, column: 1, scope: !10011)
!10034 = distinct !DISubprogram(name: "set_up_plls", scope: !1293, file: !1293, line: 448, type: !3381, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10035 = !DILocation(line: 460, column: 6, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10034, file: !1293, line: 460, column: 6)
!10037 = !DILocation(line: 460, column: 31, scope: !10036)
!10038 = !DILocation(line: 460, column: 6, scope: !10034)
!10039 = !DILocation(line: 461, column: 3, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10036, file: !1293, line: 460, column: 67)
!10041 = !DILocation(line: 462, column: 3, scope: !10040)
!10042 = !DILocation(line: 463, column: 2, scope: !10040)
!10043 = !DILocation(line: 464, column: 2, scope: !10034)
!10044 = !DILocation(line: 496, column: 2, scope: !10034)
!10045 = !DILocation(line: 499, column: 2, scope: !10034)
!10046 = !DILocation(line: 500, column: 2, scope: !10034)
!10047 = !DILocation(line: 500, column: 9, scope: !10034)
!10048 = !DILocation(line: 500, column: 30, scope: !10034)
!10049 = distinct !{!10049, !10046, !10050}
!10050 = !DILocation(line: 502, column: 2, scope: !10034)
!10051 = !DILocation(line: 505, column: 1, scope: !10034)
!10052 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10008, file: !10008, line: 944, type: !6721, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !10053)
!10053 = !{!10054}
!10054 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10052, file: !10008, line: 944, type: !113)
!10055 = !DILocation(line: 0, scope: !10052)
!10056 = !DILocation(line: 946, column: 3, scope: !10052)
!10057 = !DILocation(line: 947, column: 1, scope: !10052)
!10058 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10008, file: !10008, line: 910, type: !6721, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !10059)
!10059 = !{!10060}
!10060 = !DILocalVariable(name: "Source", arg: 1, scope: !10058, file: !10008, line: 910, type: !113)
!10061 = !DILocation(line: 0, scope: !10058)
!10062 = !DILocation(line: 912, column: 3, scope: !10058)
!10063 = !DILocation(line: 913, column: 1, scope: !10058)
!10064 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10008, file: !10008, line: 924, type: !8003, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10065 = !DILocation(line: 926, column: 21, scope: !10064)
!10066 = !DILocation(line: 926, column: 3, scope: !10064)
!10067 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10008, file: !10008, line: 960, type: !6721, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !10068)
!10068 = !{!10069}
!10069 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10067, file: !10008, line: 960, type: !113)
!10070 = !DILocation(line: 0, scope: !10067)
!10071 = !DILocation(line: 962, column: 3, scope: !10067)
!10072 = !DILocation(line: 963, column: 1, scope: !10067)
!10073 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10008, file: !10008, line: 976, type: !6721, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !10074)
!10074 = !{!10075}
!10075 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10073, file: !10008, line: 976, type: !113)
!10076 = !DILocation(line: 0, scope: !10073)
!10077 = !DILocation(line: 978, column: 3, scope: !10073)
!10078 = !DILocation(line: 979, column: 1, scope: !10073)
!10079 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1293, file: !1293, line: 409, type: !3381, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10080 = !DILocation(line: 412, column: 6, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10079, file: !1293, line: 412, column: 6)
!10082 = !DILocation(line: 412, column: 27, scope: !10081)
!10083 = !DILocation(line: 412, column: 6, scope: !10079)
!10084 = !DILocation(line: 414, column: 3, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10081, file: !1293, line: 412, column: 33)
!10086 = !DILocation(line: 415, column: 3, scope: !10085)
!10087 = !DILocation(line: 415, column: 10, scope: !10085)
!10088 = !DILocation(line: 415, column: 31, scope: !10085)
!10089 = distinct !{!10089, !10086, !10090}
!10090 = !DILocation(line: 417, column: 3, scope: !10085)
!10091 = !DILocation(line: 421, column: 2, scope: !10079)
!10092 = !DILocation(line: 422, column: 2, scope: !10079)
!10093 = !DILocation(line: 422, column: 9, scope: !10079)
!10094 = !DILocation(line: 422, column: 34, scope: !10079)
!10095 = distinct !{!10095, !10092, !10096}
!10096 = !DILocation(line: 423, column: 2, scope: !10079)
!10097 = !DILocation(line: 424, column: 1, scope: !10079)
!10098 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10008, file: !10008, line: 1180, type: !3381, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10099 = !DILocation(line: 1182, column: 3, scope: !10098)
!10100 = !DILocation(line: 1183, column: 1, scope: !10098)
!10101 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10008, file: !10008, line: 1169, type: !3381, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10102 = !DILocation(line: 1171, column: 3, scope: !10101)
!10103 = !DILocation(line: 1172, column: 1, scope: !10101)
!10104 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10008, file: !10008, line: 1190, type: !8003, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10105 = !DILocation(line: 1192, column: 12, scope: !10104)
!10106 = !DILocation(line: 1192, column: 11, scope: !10104)
!10107 = !DILocation(line: 1192, column: 3, scope: !10104)
!10108 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10008, file: !10008, line: 612, type: !8003, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10109 = !DILocation(line: 614, column: 12, scope: !10108)
!10110 = !DILocation(line: 614, column: 11, scope: !10108)
!10111 = !DILocation(line: 614, column: 3, scope: !10108)
!10112 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10008, file: !10008, line: 592, type: !3381, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10113 = !DILocation(line: 594, column: 3, scope: !10112)
!10114 = !DILocation(line: 595, column: 1, scope: !10112)
!10115 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10008, file: !10008, line: 760, type: !3381, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10116 = !DILocation(line: 762, column: 3, scope: !10115)
!10117 = !DILocation(line: 763, column: 1, scope: !10115)
!10118 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10008, file: !10008, line: 780, type: !8003, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1249, retainedNodes: !437)
!10119 = !DILocation(line: 782, column: 12, scope: !10118)
!10120 = !DILocation(line: 782, column: 11, scope: !10118)
!10121 = !DILocation(line: 782, column: 3, scope: !10118)
!10122 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10123, file: !10123, line: 48, type: !8003, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!10123 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10124 = !DILocation(line: 51, column: 3, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !10123, line: 50, column: 37)
!10126 = distinct !DILexicalBlock(scope: !10122, file: !10123, line: 50, column: 6)
!10127 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10123, file: !10123, line: 64, type: !3381, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!10128 = !DILocation(line: 66, column: 2, scope: !10127)
!10129 = !DILocation(line: 69, column: 1, scope: !10127)
!10130 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10008, file: !10008, line: 1219, type: !10131, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !10133)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{null, !113, !113, !113}
!10133 = !{!10134, !10135, !10136}
!10134 = !DILocalVariable(name: "Source", arg: 1, scope: !10130, file: !10008, line: 1219, type: !113)
!10135 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !10130, file: !10008, line: 1219, type: !113)
!10136 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !10130, file: !10008, line: 1219, type: !113)
!10137 = !DILocation(line: 0, scope: !10130)
!10138 = !DILocation(line: 1221, column: 3, scope: !10130)
!10139 = !DILocation(line: 1222, column: 1, scope: !10130)
!10140 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !10123, file: !10123, line: 75, type: !8003, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!10141 = !DILocation(line: 77, column: 9, scope: !10140)
!10142 = !DILocation(line: 77, column: 2, scope: !10140)
!10143 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10123, file: !10123, line: 87, type: !3381, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!10144 = !DILocation(line: 93, column: 2, scope: !10143)
!10145 = !DILocation(line: 95, column: 1, scope: !10143)
!10146 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !6720, file: !6720, line: 895, type: !6721, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !10147)
!10147 = !{!10148, !10149}
!10148 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10146, file: !6720, line: 895, type: !113)
!10149 = !DILocalVariable(name: "tmpreg", scope: !10146, file: !6720, line: 897, type: !568)
!10150 = !DILocation(line: 0, scope: !10146)
!10151 = !DILocation(line: 897, column: 3, scope: !10146)
!10152 = !DILocation(line: 897, column: 17, scope: !10146)
!10153 = !DILocation(line: 898, column: 3, scope: !10146)
!10154 = !DILocation(line: 900, column: 12, scope: !10146)
!10155 = !DILocation(line: 900, column: 10, scope: !10146)
!10156 = !DILocation(line: 901, column: 9, scope: !10146)
!10157 = !DILocation(line: 902, column: 1, scope: !10146)
!10158 = distinct !DISubprogram(name: "uart_console_init", scope: !1424, file: !1424, line: 588, type: !1401, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1367, retainedNodes: !10159)
!10159 = !{!10160}
!10160 = !DILocalVariable(name: "arg", arg: 1, scope: !10158, file: !1424, line: 588, type: !1379)
!10161 = !DILocation(line: 0, scope: !10158)
!10162 = !DILocation(line: 593, column: 7, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10158, file: !1424, line: 593, column: 6)
!10164 = !DILocation(line: 593, column: 6, scope: !10158)
!10165 = !DILocation(line: 597, column: 2, scope: !10158)
!10166 = !DILocation(line: 599, column: 2, scope: !10158)
!10167 = !DILocation(line: 600, column: 1, scope: !10158)
!10168 = distinct !DISubprogram(name: "device_is_ready", scope: !8858, file: !8858, line: 47, type: !10169, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1367, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{!422, !1379}
!10171 = !{!10172}
!10172 = !DILocalVariable(name: "dev", arg: 1, scope: !10168, file: !8858, line: 47, type: !1379)
!10173 = !DILocation(line: 0, scope: !10168)
!10174 = !DILocation(line: 55, column: 2, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10168, file: !8858, line: 55, column: 2)
!10176 = !{i64 2152427495}
!10177 = !DILocation(line: 56, column: 9, scope: !10168)
!10178 = !DILocation(line: 56, column: 2, scope: !10168)
!10179 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1424, file: !1424, line: 573, type: !3381, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1367, retainedNodes: !437)
!10180 = !DILocation(line: 576, column: 2, scope: !10179)
!10181 = !DILocation(line: 579, column: 2, scope: !10179)
!10182 = !DILocation(line: 581, column: 1, scope: !10179)
!10183 = distinct !DISubprogram(name: "console_out", scope: !1424, file: !1424, line: 77, type: !555, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1367, retainedNodes: !10184)
!10184 = !{!10185}
!10185 = !DILocalVariable(name: "c", arg: 1, scope: !10183, file: !1424, line: 77, type: !108)
!10186 = !DILocation(line: 0, scope: !10183)
!10187 = !DILocation(line: 89, column: 11, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10183, file: !1424, line: 89, column: 6)
!10189 = !DILocation(line: 89, column: 6, scope: !10183)
!10190 = !DILocation(line: 90, column: 3, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10188, file: !1424, line: 89, column: 17)
!10192 = !DILocation(line: 91, column: 2, scope: !10191)
!10193 = !DILocation(line: 92, column: 34, scope: !10183)
!10194 = !DILocation(line: 92, column: 2, scope: !10183)
!10195 = !DILocation(line: 94, column: 2, scope: !10183)
!10196 = distinct !DISubprogram(name: "uart_poll_out", scope: !10197, file: !10197, line: 95, type: !1397, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1367, retainedNodes: !10198)
!10197 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sensor_batch_processing")
!10198 = !{!10199, !10200}
!10199 = !DILocalVariable(name: "dev", arg: 1, scope: !10196, file: !10197, line: 95, type: !1379)
!10200 = !DILocalVariable(name: "out_char", arg: 2, scope: !10196, file: !10197, line: 95, type: !165)
!10201 = !DILocation(line: 0, scope: !10196)
!10202 = !DILocation(line: 105, column: 2, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10196, file: !10197, line: 105, column: 2)
!10204 = !{i64 2152510886}
!10205 = !DILocation(line: 106, column: 2, scope: !10196)
!10206 = !DILocation(line: 107, column: 1, scope: !10196)
!10207 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1373, file: !1373, line: 574, type: !1397, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1367, retainedNodes: !10208)
!10208 = !{!10209, !10210, !10211}
!10209 = !DILocalVariable(name: "dev", arg: 1, scope: !10207, file: !1373, line: 574, type: !1379)
!10210 = !DILocalVariable(name: "out_char", arg: 2, scope: !10207, file: !1373, line: 575, type: !165)
!10211 = !DILocalVariable(name: "api", scope: !10207, file: !1373, line: 577, type: !1370)
!10212 = !DILocation(line: 0, scope: !10207)
!10213 = !DILocation(line: 578, column: 40, scope: !10207)
!10214 = !DILocation(line: 580, column: 7, scope: !10207)
!10215 = !DILocation(line: 580, column: 2, scope: !10207)
!10216 = !DILocation(line: 581, column: 1, scope: !10207)
!10217 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10169, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1367, retainedNodes: !10218)
!10218 = !{!10219}
!10219 = !DILocalVariable(name: "dev", arg: 1, scope: !10217, file: !411, line: 730, type: !1379)
!10220 = !DILocation(line: 0, scope: !10217)
!10221 = !DILocation(line: 732, column: 9, scope: !10217)
!10222 = !DILocation(line: 732, column: 2, scope: !10217)
!10223 = distinct !DISubprogram(name: "uart_register_input", scope: !1424, file: !1424, line: 560, type: !10224, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1367, retainedNodes: !10269)
!10224 = !DISubroutineType(types: !10225)
!10225 = !{null, !10226, !10226, !10266}
!10226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10227, size: 32)
!10227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !359, line: 2208, size: 128, elements: !10228)
!10228 = !{!10229}
!10229 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10227, file: !359, line: 2209, baseType: !10230, size: 128)
!10230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !359, line: 1709, size: 128, elements: !10231)
!10231 = !{!10232, !10245, !10247}
!10232 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10230, file: !359, line: 1710, baseType: !10233, size: 64)
!10233 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10234, line: 46, baseType: !10235)
!10234 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10234, line: 41, size: 64, elements: !10236)
!10236 = !{!10237, !10244}
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10235, file: !10234, line: 42, baseType: !10238, size: 32)
!10238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10239, size: 32)
!10239 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10234, line: 39, baseType: !10240)
!10240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10234, line: 35, size: 32, elements: !10241)
!10241 = !{!10242}
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10240, file: !10234, line: 36, baseType: !10243, size: 32)
!10243 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10234, line: 32, baseType: !113)
!10244 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10235, file: !10234, line: 43, baseType: !10238, size: 32, offset: 32)
!10245 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10230, file: !359, line: 1711, baseType: !10246, offset: 64)
!10246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10230, file: !359, line: 1712, baseType: !10248, size: 64, offset: 64)
!10248 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !10249)
!10249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !10250)
!10250 = !{!10251}
!10251 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10249, file: !363, line: 232, baseType: !10252, size: 64)
!10252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !10253)
!10253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !10254)
!10254 = !{!10255, !10261}
!10255 = !DIDerivedType(tag: DW_TAG_member, scope: !10253, file: !367, line: 38, baseType: !10256, size: 32)
!10256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10253, file: !367, line: 38, size: 32, elements: !10257)
!10257 = !{!10258, !10260}
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10256, file: !367, line: 39, baseType: !10259, size: 32)
!10259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10253, size: 32)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10256, file: !367, line: 40, baseType: !10259, size: 32)
!10261 = !DIDerivedType(tag: DW_TAG_member, scope: !10253, file: !367, line: 42, baseType: !10262, size: 32, offset: 32)
!10262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10253, file: !367, line: 42, size: 32, elements: !10263)
!10263 = !{!10264, !10265}
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10262, file: !367, line: 43, baseType: !10259, size: 32)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10262, file: !367, line: 44, baseType: !10259, size: 32)
!10266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10267, size: 32)
!10267 = !DISubroutineType(types: !10268)
!10268 = !{!164, !443, !164}
!10269 = !{!10270, !10271, !10272}
!10270 = !DILocalVariable(name: "avail", arg: 1, scope: !10223, file: !1424, line: 560, type: !10226)
!10271 = !DILocalVariable(name: "lines", arg: 2, scope: !10223, file: !1424, line: 560, type: !10226)
!10272 = !DILocalVariable(name: "completion", arg: 3, scope: !10223, file: !1424, line: 561, type: !10266)
!10273 = !DILocation(line: 0, scope: !10223)
!10274 = !DILocation(line: 566, column: 1, scope: !10223)
!10275 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1583, file: !1583, line: 523, type: !1449, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10276)
!10276 = !{!10277, !10278, !10279, !10280, !10281}
!10277 = !DILocalVariable(name: "dev", arg: 1, scope: !10275, file: !1583, line: 523, type: !1451)
!10278 = !DILocalVariable(name: "pin", arg: 2, scope: !10275, file: !1583, line: 524, type: !903)
!10279 = !DILocalVariable(name: "flags", arg: 3, scope: !10275, file: !1583, line: 524, type: !904)
!10280 = !DILocalVariable(name: "err", scope: !10275, file: !1583, line: 526, type: !108)
!10281 = !DILocalVariable(name: "pincfg", scope: !10275, file: !1583, line: 527, type: !108)
!10282 = !DILocation(line: 0, scope: !10275)
!10283 = !DILocation(line: 527, column: 2, scope: !10275)
!10284 = !DILocation(line: 532, column: 8, scope: !10275)
!10285 = !DILocation(line: 533, column: 10, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10275, file: !1583, line: 533, column: 6)
!10287 = !DILocation(line: 533, column: 6, scope: !10275)
!10288 = !DILocation(line: 543, column: 13, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10275, file: !1583, line: 543, column: 6)
!10290 = !DILocation(line: 543, column: 28, scope: !10289)
!10291 = !DILocation(line: 543, column: 6, scope: !10275)
!10292 = !DILocation(line: 544, column: 14, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !1583, line: 544, column: 7)
!10294 = distinct !DILexicalBlock(scope: !10289, file: !1583, line: 543, column: 34)
!10295 = !DILocation(line: 544, column: 39, scope: !10293)
!10296 = !DILocation(line: 544, column: 7, scope: !10294)
!10297 = !DILocation(line: 545, column: 38, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10293, file: !1583, line: 544, column: 45)
!10299 = !DILocation(line: 545, column: 4, scope: !10298)
!10300 = !DILocation(line: 546, column: 3, scope: !10298)
!10301 = !DILocation(line: 546, column: 21, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10293, file: !1583, line: 546, column: 14)
!10303 = !DILocation(line: 546, column: 45, scope: !10302)
!10304 = !DILocation(line: 546, column: 14, scope: !10293)
!10305 = !DILocation(line: 547, column: 40, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10302, file: !1583, line: 546, column: 51)
!10307 = !DILocation(line: 547, column: 4, scope: !10306)
!10308 = !DILocation(line: 548, column: 3, scope: !10306)
!10309 = !DILocation(line: 551, column: 32, scope: !10275)
!10310 = !DILocation(line: 551, column: 37, scope: !10275)
!10311 = !DILocation(line: 551, column: 2, scope: !10275)
!10312 = !DILocation(line: 554, column: 6, scope: !10275)
!10313 = !DILocation(line: 562, column: 1, scope: !10275)
!10314 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1583, file: !1583, line: 410, type: !10315, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10317)
!10315 = !DISubroutineType(types: !10316)
!10316 = !{!108, !1451, !1289}
!10317 = !{!10318, !10319, !10320, !10322}
!10318 = !DILocalVariable(name: "dev", arg: 1, scope: !10314, file: !1583, line: 410, type: !1451)
!10319 = !DILocalVariable(name: "value", arg: 2, scope: !10314, file: !1583, line: 410, type: !1289)
!10320 = !DILocalVariable(name: "cfg", scope: !10314, file: !1583, line: 412, type: !10321)
!10321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!10322 = !DILocalVariable(name: "gpio", scope: !10314, file: !1583, line: 413, type: !1518)
!10323 = !DILocation(line: 0, scope: !10314)
!10324 = !DILocation(line: 412, column: 45, scope: !10314)
!10325 = !DILocation(line: 413, column: 44, scope: !10314)
!10326 = !DILocation(line: 415, column: 11, scope: !10314)
!10327 = !DILocation(line: 415, column: 9, scope: !10314)
!10328 = !DILocation(line: 417, column: 2, scope: !10314)
!10329 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1583, file: !1583, line: 420, type: !1472, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10330)
!10330 = !{!10331, !10332, !10333, !10334, !10335, !10336}
!10331 = !DILocalVariable(name: "dev", arg: 1, scope: !10329, file: !1583, line: 420, type: !1451)
!10332 = !DILocalVariable(name: "mask", arg: 2, scope: !10329, file: !1583, line: 421, type: !915)
!10333 = !DILocalVariable(name: "value", arg: 3, scope: !10329, file: !1583, line: 422, type: !910)
!10334 = !DILocalVariable(name: "cfg", scope: !10329, file: !1583, line: 424, type: !10321)
!10335 = !DILocalVariable(name: "gpio", scope: !10329, file: !1583, line: 425, type: !1518)
!10336 = !DILocalVariable(name: "port_value", scope: !10329, file: !1583, line: 426, type: !113)
!10337 = !DILocation(line: 0, scope: !10329)
!10338 = !DILocation(line: 424, column: 45, scope: !10329)
!10339 = !DILocation(line: 425, column: 44, scope: !10329)
!10340 = !DILocation(line: 430, column: 15, scope: !10329)
!10341 = !DILocation(line: 431, column: 46, scope: !10329)
!10342 = !DILocation(line: 431, column: 44, scope: !10329)
!10343 = !DILocation(line: 431, column: 61, scope: !10329)
!10344 = !DILocation(line: 431, column: 53, scope: !10329)
!10345 = !DILocation(line: 431, column: 2, scope: !10329)
!10346 = !DILocation(line: 435, column: 2, scope: !10329)
!10347 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1583, file: !1583, line: 438, type: !1476, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10348)
!10348 = !{!10349, !10350, !10351, !10352}
!10349 = !DILocalVariable(name: "dev", arg: 1, scope: !10347, file: !1583, line: 438, type: !1451)
!10350 = !DILocalVariable(name: "pins", arg: 2, scope: !10347, file: !1583, line: 439, type: !915)
!10351 = !DILocalVariable(name: "cfg", scope: !10347, file: !1583, line: 441, type: !10321)
!10352 = !DILocalVariable(name: "gpio", scope: !10347, file: !1583, line: 442, type: !1518)
!10353 = !DILocation(line: 0, scope: !10347)
!10354 = !DILocation(line: 441, column: 45, scope: !10347)
!10355 = !DILocation(line: 442, column: 44, scope: !10347)
!10356 = !DILocation(line: 448, column: 2, scope: !10347)
!10357 = !DILocation(line: 450, column: 2, scope: !10347)
!10358 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1583, file: !1583, line: 453, type: !1476, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10359)
!10359 = !{!10360, !10361, !10362, !10363}
!10360 = !DILocalVariable(name: "dev", arg: 1, scope: !10358, file: !1583, line: 453, type: !1451)
!10361 = !DILocalVariable(name: "pins", arg: 2, scope: !10358, file: !1583, line: 454, type: !915)
!10362 = !DILocalVariable(name: "cfg", scope: !10358, file: !1583, line: 456, type: !10321)
!10363 = !DILocalVariable(name: "gpio", scope: !10358, file: !1583, line: 457, type: !1518)
!10364 = !DILocation(line: 0, scope: !10358)
!10365 = !DILocation(line: 456, column: 45, scope: !10358)
!10366 = !DILocation(line: 457, column: 44, scope: !10358)
!10367 = !DILocation(line: 467, column: 2, scope: !10358)
!10368 = !DILocation(line: 470, column: 2, scope: !10358)
!10369 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1583, file: !1583, line: 473, type: !1476, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10370)
!10370 = !{!10371, !10372, !10373, !10374}
!10371 = !DILocalVariable(name: "dev", arg: 1, scope: !10369, file: !1583, line: 473, type: !1451)
!10372 = !DILocalVariable(name: "pins", arg: 2, scope: !10369, file: !1583, line: 474, type: !915)
!10373 = !DILocalVariable(name: "cfg", scope: !10369, file: !1583, line: 476, type: !10321)
!10374 = !DILocalVariable(name: "gpio", scope: !10369, file: !1583, line: 477, type: !1518)
!10375 = !DILocation(line: 0, scope: !10369)
!10376 = !DILocation(line: 476, column: 45, scope: !10369)
!10377 = !DILocation(line: 477, column: 44, scope: !10369)
!10378 = !DILocation(line: 484, column: 2, scope: !10369)
!10379 = !DILocation(line: 487, column: 2, scope: !10369)
!10380 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1583, file: !1583, line: 594, type: !1482, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10381)
!10381 = !{!10382, !10383, !10384, !10385, !10386, !10387, !10389, !10390, !10391}
!10382 = !DILocalVariable(name: "dev", arg: 1, scope: !10380, file: !1583, line: 594, type: !1451)
!10383 = !DILocalVariable(name: "pin", arg: 2, scope: !10380, file: !1583, line: 595, type: !903)
!10384 = !DILocalVariable(name: "mode", arg: 3, scope: !10380, file: !1583, line: 596, type: !868)
!10385 = !DILocalVariable(name: "trig", arg: 4, scope: !10380, file: !1583, line: 597, type: !874)
!10386 = !DILocalVariable(name: "cfg", scope: !10380, file: !1583, line: 599, type: !10321)
!10387 = !DILocalVariable(name: "data", scope: !10380, file: !1583, line: 600, type: !10388)
!10388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!10389 = !DILocalVariable(name: "edge", scope: !10380, file: !1583, line: 601, type: !108)
!10390 = !DILocalVariable(name: "err", scope: !10380, file: !1583, line: 602, type: !108)
!10391 = !DILabel(scope: !10380, name: "exit", file: !1583, line: 643)
!10392 = !DILocation(line: 0, scope: !10380)
!10393 = !DILocation(line: 599, column: 45, scope: !10380)
!10394 = !DILocation(line: 604, column: 6, scope: !10380)
!10395 = !DILocation(line: 605, column: 34, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10397, file: !1583, line: 605, column: 7)
!10397 = distinct !DILexicalBlock(scope: !10398, file: !1583, line: 604, column: 38)
!10398 = distinct !DILexicalBlock(scope: !10380, file: !1583, line: 604, column: 6)
!10399 = !DILocation(line: 605, column: 7, scope: !10396)
!10400 = !DILocation(line: 605, column: 47, scope: !10396)
!10401 = !DILocation(line: 605, column: 39, scope: !10396)
!10402 = !DILocation(line: 605, column: 7, scope: !10397)
!10403 = !DILocation(line: 606, column: 4, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10396, file: !1583, line: 605, column: 53)
!10405 = !DILocation(line: 607, column: 4, scope: !10404)
!10406 = !DILocation(line: 608, column: 4, scope: !10404)
!10407 = !DILocation(line: 609, column: 3, scope: !10404)
!10408 = !DILocation(line: 600, column: 38, scope: !10380)
!10409 = !DILocation(line: 620, column: 30, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10380, file: !1583, line: 620, column: 6)
!10411 = !DILocation(line: 620, column: 6, scope: !10410)
!10412 = !DILocation(line: 620, column: 57, scope: !10410)
!10413 = !DILocation(line: 620, column: 6, scope: !10380)
!10414 = !DILocation(line: 625, column: 29, scope: !10380)
!10415 = !DILocation(line: 625, column: 2, scope: !10380)
!10416 = !DILocation(line: 627, column: 2, scope: !10380)
!10417 = !DILocation(line: 630, column: 3, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10380, file: !1583, line: 627, column: 16)
!10419 = !DILocation(line: 633, column: 3, scope: !10418)
!10420 = !DILocation(line: 636, column: 3, scope: !10418)
!10421 = !DILocation(line: 639, column: 2, scope: !10380)
!10422 = !DILocation(line: 641, column: 2, scope: !10380)
!10423 = !DILocation(line: 643, column: 1, scope: !10380)
!10424 = !DILocation(line: 644, column: 2, scope: !10380)
!10425 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1583, file: !1583, line: 647, type: !1486, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10426)
!10426 = !{!10427, !10428, !10429, !10430}
!10427 = !DILocalVariable(name: "dev", arg: 1, scope: !10425, file: !1583, line: 647, type: !1451)
!10428 = !DILocalVariable(name: "callback", arg: 2, scope: !10425, file: !1583, line: 648, type: !1488)
!10429 = !DILocalVariable(name: "set", arg: 3, scope: !10425, file: !1583, line: 649, type: !422)
!10430 = !DILocalVariable(name: "data", scope: !10425, file: !1583, line: 651, type: !10388)
!10431 = !DILocation(line: 0, scope: !10425)
!10432 = !DILocation(line: 651, column: 38, scope: !10425)
!10433 = !DILocation(line: 653, column: 37, scope: !10425)
!10434 = !DILocation(line: 653, column: 9, scope: !10425)
!10435 = !DILocation(line: 653, column: 2, scope: !10425)
!10436 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10437, file: !10437, line: 38, type: !10438, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10441)
!10437 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10438 = !DISubroutineType(types: !10439)
!10439 = !{!108, !10440, !1488, !422}
!10440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!10441 = !{!10442, !10443, !10444}
!10442 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10436, file: !10437, line: 38, type: !10440)
!10443 = !DILocalVariable(name: "callback", arg: 2, scope: !10436, file: !10437, line: 39, type: !1488)
!10444 = !DILocalVariable(name: "set", arg: 3, scope: !10436, file: !10437, line: 40, type: !422)
!10445 = !DILocation(line: 0, scope: !10436)
!10446 = !DILocation(line: 45, column: 7, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10436, file: !10437, line: 45, column: 6)
!10448 = !DILocation(line: 45, column: 6, scope: !10436)
!10449 = !DILocation(line: 46, column: 56, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10451, file: !10437, line: 46, column: 7)
!10451 = distinct !DILexicalBlock(scope: !10447, file: !10437, line: 45, column: 38)
!10452 = !DILocation(line: 46, column: 8, scope: !10450)
!10453 = !DILocation(line: 46, column: 7, scope: !10451)
!10454 = !DILocation(line: 51, column: 13, scope: !10447)
!10455 = !DILocation(line: 56, column: 43, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10457, file: !10437, line: 55, column: 11)
!10457 = distinct !DILexicalBlock(scope: !10436, file: !10437, line: 55, column: 6)
!10458 = !DILocation(line: 56, column: 3, scope: !10456)
!10459 = !DILocation(line: 57, column: 2, scope: !10456)
!10460 = !DILocation(line: 60, column: 1, scope: !10436)
!10461 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !935, file: !935, line: 261, type: !10462, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10464)
!10462 = !DISubroutineType(types: !10463)
!10463 = !{!422, !10440}
!10464 = !{!10465}
!10465 = !DILocalVariable(name: "list", arg: 1, scope: !10461, file: !935, line: 261, type: !10440)
!10466 = !DILocation(line: 0, scope: !10461)
!10467 = !DILocation(line: 261, column: 1, scope: !10461)
!10468 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !935, file: !935, line: 417, type: !10469, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10471)
!10469 = !DISubroutineType(types: !10470)
!10470 = !{!422, !10440, !1651}
!10471 = !{!10472, !10473, !10474, !10475}
!10472 = !DILocalVariable(name: "list", arg: 1, scope: !10468, file: !935, line: 417, type: !10440)
!10473 = !DILocalVariable(name: "node", arg: 2, scope: !10468, file: !935, line: 417, type: !1651)
!10474 = !DILocalVariable(name: "prev", scope: !10468, file: !935, line: 417, type: !1651)
!10475 = !DILocalVariable(name: "test", scope: !10468, file: !935, line: 417, type: !1651)
!10476 = !DILocation(line: 0, scope: !10468)
!10477 = !DILocation(line: 417, column: 1, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10468, file: !935, line: 417, column: 1)
!10479 = !DILocation(line: 417, column: 1, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10478, file: !935, line: 417, column: 1)
!10481 = !DILocation(line: 417, column: 1, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !935, line: 417, column: 1)
!10483 = distinct !DILexicalBlock(scope: !10480, file: !935, line: 417, column: 1)
!10484 = !DILocation(line: 417, column: 1, scope: !10483)
!10485 = distinct !{!10485, !10477, !10477}
!10486 = !DILocation(line: 417, column: 1, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10482, file: !935, line: 417, column: 1)
!10488 = !DILocation(line: 417, column: 1, scope: !10468)
!10489 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !935, file: !935, line: 298, type: !10490, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10492)
!10490 = !DISubroutineType(types: !10491)
!10491 = !{null, !10440, !1651}
!10492 = !{!10493, !10494}
!10493 = !DILocalVariable(name: "list", arg: 1, scope: !10489, file: !935, line: 298, type: !10440)
!10494 = !DILocalVariable(name: "node", arg: 2, scope: !10489, file: !935, line: 298, type: !1651)
!10495 = !DILocation(line: 0, scope: !10489)
!10496 = !DILocation(line: 298, column: 1, scope: !10489)
!10497 = !DILocation(line: 298, column: 1, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10489, file: !935, line: 298, column: 1)
!10499 = !DILocation(line: 298, column: 1, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10498, file: !935, line: 298, column: 1)
!10501 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !935, file: !935, line: 231, type: !10502, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10504)
!10502 = !DISubroutineType(types: !10503)
!10503 = !{!1651, !10440}
!10504 = !{!10505}
!10505 = !DILocalVariable(name: "list", arg: 1, scope: !10501, file: !935, line: 231, type: !10440)
!10506 = !DILocation(line: 0, scope: !10501)
!10507 = !DILocation(line: 233, column: 15, scope: !10501)
!10508 = !DILocation(line: 233, column: 2, scope: !10501)
!10509 = distinct !DISubprogram(name: "z_snode_next_set", scope: !935, file: !935, line: 209, type: !10510, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10512)
!10510 = !DISubroutineType(types: !10511)
!10511 = !{null, !1651, !1651}
!10512 = !{!10513, !10514}
!10513 = !DILocalVariable(name: "parent", arg: 1, scope: !10509, file: !935, line: 209, type: !1651)
!10514 = !DILocalVariable(name: "child", arg: 2, scope: !10509, file: !935, line: 209, type: !1651)
!10515 = !DILocation(line: 0, scope: !10509)
!10516 = !DILocation(line: 211, column: 10, scope: !10509)
!10517 = !DILocation(line: 211, column: 15, scope: !10509)
!10518 = !DILocation(line: 212, column: 1, scope: !10509)
!10519 = distinct !DISubprogram(name: "z_slist_head_set", scope: !935, file: !935, line: 214, type: !10490, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10520)
!10520 = !{!10521, !10522}
!10521 = !DILocalVariable(name: "list", arg: 1, scope: !10519, file: !935, line: 214, type: !10440)
!10522 = !DILocalVariable(name: "node", arg: 2, scope: !10519, file: !935, line: 214, type: !1651)
!10523 = !DILocation(line: 0, scope: !10519)
!10524 = !DILocation(line: 216, column: 8, scope: !10519)
!10525 = !DILocation(line: 216, column: 13, scope: !10519)
!10526 = !DILocation(line: 217, column: 1, scope: !10519)
!10527 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !935, file: !935, line: 243, type: !10502, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10528)
!10528 = !{!10529}
!10529 = !DILocalVariable(name: "list", arg: 1, scope: !10527, file: !935, line: 243, type: !10440)
!10530 = !DILocation(line: 0, scope: !10527)
!10531 = !DILocation(line: 245, column: 15, scope: !10527)
!10532 = !DILocation(line: 245, column: 2, scope: !10527)
!10533 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !935, file: !935, line: 219, type: !10490, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10534)
!10534 = !{!10535, !10536}
!10535 = !DILocalVariable(name: "list", arg: 1, scope: !10533, file: !935, line: 219, type: !10440)
!10536 = !DILocalVariable(name: "node", arg: 2, scope: !10533, file: !935, line: 219, type: !1651)
!10537 = !DILocation(line: 0, scope: !10533)
!10538 = !DILocation(line: 221, column: 8, scope: !10533)
!10539 = !DILocation(line: 221, column: 13, scope: !10533)
!10540 = !DILocation(line: 222, column: 1, scope: !10533)
!10541 = distinct !DISubprogram(name: "sys_slist_remove", scope: !935, file: !935, line: 401, type: !10542, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10544)
!10542 = !DISubroutineType(types: !10543)
!10543 = !{null, !10440, !1651, !1651}
!10544 = !{!10545, !10546, !10547}
!10545 = !DILocalVariable(name: "list", arg: 1, scope: !10541, file: !935, line: 401, type: !10440)
!10546 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10541, file: !935, line: 401, type: !1651)
!10547 = !DILocalVariable(name: "node", arg: 3, scope: !10541, file: !935, line: 401, type: !1651)
!10548 = !DILocation(line: 0, scope: !10541)
!10549 = !DILocation(line: 401, column: 1, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10541, file: !935, line: 401, column: 1)
!10551 = !DILocation(line: 0, scope: !10550)
!10552 = !DILocation(line: 401, column: 1, scope: !10541)
!10553 = !DILocation(line: 401, column: 1, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10550, file: !935, line: 401, column: 1)
!10555 = !DILocation(line: 401, column: 1, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10554, file: !935, line: 401, column: 1)
!10557 = !DILocation(line: 401, column: 1, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10556, file: !935, line: 401, column: 1)
!10559 = !DILocation(line: 401, column: 1, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10550, file: !935, line: 401, column: 1)
!10561 = !DILocation(line: 401, column: 1, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10560, file: !935, line: 401, column: 1)
!10563 = !DILocation(line: 401, column: 1, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10562, file: !935, line: 401, column: 1)
!10565 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !935, file: !935, line: 285, type: !10566, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10568)
!10566 = !DISubroutineType(types: !10567)
!10567 = !{!1651, !1651}
!10568 = !{!10569}
!10569 = !DILocalVariable(name: "node", arg: 1, scope: !10565, file: !935, line: 285, type: !1651)
!10570 = !DILocation(line: 0, scope: !10565)
!10571 = !DILocation(line: 285, column: 1, scope: !10565)
!10572 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !935, file: !935, line: 274, type: !10566, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10573)
!10573 = !{!10574}
!10574 = !DILocalVariable(name: "node", arg: 1, scope: !10572, file: !935, line: 274, type: !1651)
!10575 = !DILocation(line: 0, scope: !10572)
!10576 = !DILocation(line: 274, column: 1, scope: !10572)
!10577 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !935, file: !935, line: 204, type: !10566, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10578)
!10578 = !{!10579}
!10579 = !DILocalVariable(name: "node", arg: 1, scope: !10577, file: !935, line: 204, type: !1651)
!10580 = !DILocation(line: 0, scope: !10577)
!10581 = !DILocation(line: 206, column: 15, scope: !10577)
!10582 = !DILocation(line: 206, column: 2, scope: !10577)
!10583 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1583, file: !1583, line: 342, type: !555, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10584)
!10584 = !{!10585, !10586, !10587}
!10585 = !DILocalVariable(name: "pin", arg: 1, scope: !10583, file: !1583, line: 342, type: !108)
!10586 = !DILocalVariable(name: "line", scope: !10583, file: !1583, line: 344, type: !113)
!10587 = !DILocalVariable(name: "port", scope: !10583, file: !1583, line: 345, type: !108)
!10588 = !DILocation(line: 0, scope: !10583)
!10589 = !DILocation(line: 344, column: 18, scope: !10583)
!10590 = !{i32 983040, i32 0}
!10591 = !DILocation(line: 356, column: 9, scope: !10583)
!10592 = !DILocation(line: 370, column: 2, scope: !10583)
!10593 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1583, file: !1583, line: 37, type: !1213, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10594)
!10594 = !{!10595, !10596, !10597}
!10595 = !DILocalVariable(name: "line", arg: 1, scope: !10593, file: !1583, line: 37, type: !108)
!10596 = !DILocalVariable(name: "arg", arg: 2, scope: !10593, file: !1583, line: 37, type: !104)
!10597 = !DILocalVariable(name: "data", scope: !10593, file: !1583, line: 39, type: !10388)
!10598 = !DILocation(line: 0, scope: !10593)
!10599 = !DILocation(line: 41, column: 29, scope: !10593)
!10600 = !DILocation(line: 41, column: 39, scope: !10593)
!10601 = !DILocation(line: 41, column: 44, scope: !10593)
!10602 = !DILocation(line: 41, column: 2, scope: !10593)
!10603 = !DILocation(line: 42, column: 1, scope: !10593)
!10604 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1583, file: !1583, line: 376, type: !10605, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10607)
!10605 = !DISubroutineType(types: !10606)
!10606 = !{!108, !108, !108}
!10607 = !{!10608, !10609, !10610, !10612, !10613}
!10608 = !DILocalVariable(name: "port", arg: 1, scope: !10604, file: !1583, line: 376, type: !108)
!10609 = !DILocalVariable(name: "pin", arg: 2, scope: !10604, file: !1583, line: 376, type: !108)
!10610 = !DILocalVariable(name: "clk", scope: !10604, file: !1583, line: 386, type: !10611)
!10611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!10612 = !DILocalVariable(name: "pclken", scope: !10604, file: !1583, line: 387, type: !1686)
!10613 = !DILocalVariable(name: "ret", scope: !10604, file: !1583, line: 396, type: !108)
!10614 = !DILocation(line: 0, scope: !10604)
!10615 = !DILocation(line: 387, column: 2, scope: !10604)
!10616 = !DILocation(line: 387, column: 22, scope: !10604)
!10617 = !DILocation(line: 399, column: 8, scope: !10604)
!10618 = !DILocation(line: 400, column: 10, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10604, file: !1583, line: 400, column: 6)
!10620 = !DILocation(line: 400, column: 6, scope: !10604)
!10621 = !DILocation(line: 405, column: 2, scope: !10604)
!10622 = !DILocation(line: 407, column: 2, scope: !10604)
!10623 = !DILocation(line: 408, column: 1, scope: !10604)
!10624 = distinct !DISubprogram(name: "clock_control_on", scope: !1258, file: !1258, line: 123, type: !1548, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10625)
!10625 = !{!10626, !10627, !10628}
!10626 = !DILocalVariable(name: "dev", arg: 1, scope: !10624, file: !1258, line: 123, type: !1451)
!10627 = !DILocalVariable(name: "sys", arg: 2, scope: !10624, file: !1258, line: 124, type: !1333)
!10628 = !DILocalVariable(name: "api", scope: !10624, file: !1258, line: 126, type: !1541)
!10629 = !DILocation(line: 0, scope: !10624)
!10630 = !DILocation(line: 127, column: 49, scope: !10624)
!10631 = !DILocation(line: 129, column: 14, scope: !10624)
!10632 = !DILocation(line: 129, column: 9, scope: !10624)
!10633 = !DILocation(line: 129, column: 2, scope: !10624)
!10634 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1583, file: !1583, line: 311, type: !9797, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10635)
!10635 = !{!10636, !10637, !10638}
!10636 = !DILocalVariable(name: "port", arg: 1, scope: !10634, file: !1583, line: 311, type: !108)
!10637 = !DILocalVariable(name: "pin", arg: 2, scope: !10634, file: !1583, line: 311, type: !108)
!10638 = !DILocalVariable(name: "line", scope: !10634, file: !1583, line: 313, type: !113)
!10639 = !DILocation(line: 0, scope: !10634)
!10640 = !DILocation(line: 313, column: 18, scope: !10634)
!10641 = !DILocation(line: 337, column: 2, scope: !10634)
!10642 = !DILocation(line: 340, column: 1, scope: !10634)
!10643 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1583, file: !1583, line: 295, type: !10644, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10646)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!113, !108}
!10646 = !{!10647}
!10647 = !DILocalVariable(name: "pin", arg: 1, scope: !10643, file: !1583, line: 295, type: !108)
!10648 = !DILocation(line: 0, scope: !10643)
!10649 = !DILocation(line: 307, column: 46, scope: !10643)
!10650 = !DILocation(line: 307, column: 27, scope: !10643)
!10651 = !DILocation(line: 307, column: 32, scope: !10643)
!10652 = !DILocation(line: 307, column: 14, scope: !10643)
!10653 = !DILocation(line: 307, column: 39, scope: !10643)
!10654 = !DILocation(line: 307, column: 2, scope: !10643)
!10655 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !10656, file: !10656, line: 621, type: !10657, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10659)
!10656 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10657 = !DISubroutineType(types: !10658)
!10658 = !{null, !113, !113}
!10659 = !{!10660, !10661}
!10660 = !DILocalVariable(name: "Port", arg: 1, scope: !10655, file: !10656, line: 621, type: !113)
!10661 = !DILocalVariable(name: "Line", arg: 2, scope: !10655, file: !10656, line: 621, type: !113)
!10662 = !DILocation(line: 0, scope: !10655)
!10663 = !DILocation(line: 623, column: 3, scope: !10655)
!10664 = !DILocalVariable(name: "value", arg: 1, scope: !10665, file: !7032, line: 373, type: !113)
!10665 = distinct !DISubprogram(name: "__RBIT", scope: !7032, file: !7032, line: 373, type: !8237, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10666)
!10666 = !{!10664, !10667}
!10667 = !DILocalVariable(name: "result", scope: !10665, file: !7032, line: 375, type: !113)
!10668 = !DILocation(line: 0, scope: !10665, inlinedAt: !10669)
!10669 = distinct !DILocation(line: 623, column: 3, scope: !10655)
!10670 = !DILocation(line: 380, column: 4, scope: !10665, inlinedAt: !10669)
!10671 = !{i64 2466007}
!10672 = !DILocalVariable(name: "value", arg: 1, scope: !10673, file: !7032, line: 403, type: !113)
!10673 = distinct !DISubprogram(name: "__CLZ", scope: !7032, file: !7032, line: 403, type: !10674, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10676)
!10674 = !DISubroutineType(types: !10675)
!10675 = !{!164, !113}
!10676 = !{!10672}
!10677 = !DILocation(line: 0, scope: !10673, inlinedAt: !10678)
!10678 = distinct !DILocation(line: 623, column: 3, scope: !10655)
!10679 = !DILocation(line: 414, column: 7, scope: !10673, inlinedAt: !10678)
!10680 = !DILocation(line: 624, column: 1, scope: !10655)
!10681 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10437, file: !10437, line: 69, type: !10682, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10684)
!10682 = !DISubroutineType(types: !10683)
!10683 = !{null, !10440, !1451, !113}
!10684 = !{!10685, !10686, !10687, !10688, !10689}
!10685 = !DILocalVariable(name: "list", arg: 1, scope: !10681, file: !10437, line: 69, type: !10440)
!10686 = !DILocalVariable(name: "port", arg: 2, scope: !10681, file: !10437, line: 70, type: !1451)
!10687 = !DILocalVariable(name: "pins", arg: 3, scope: !10681, file: !10437, line: 71, type: !113)
!10688 = !DILocalVariable(name: "cb", scope: !10681, file: !10437, line: 73, type: !1488)
!10689 = !DILocalVariable(name: "tmp", scope: !10681, file: !10437, line: 73, type: !1488)
!10690 = !DILocation(line: 0, scope: !10681)
!10691 = !DILocation(line: 75, column: 2, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10681, file: !10437, line: 75, column: 2)
!10693 = !DILocation(line: 0, scope: !10692)
!10694 = !DILocation(line: 76, column: 11, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10696, file: !10437, line: 76, column: 7)
!10696 = distinct !DILexicalBlock(scope: !10697, file: !10437, line: 75, column: 57)
!10697 = distinct !DILexicalBlock(scope: !10692, file: !10437, line: 75, column: 2)
!10698 = !DILocation(line: 76, column: 20, scope: !10695)
!10699 = !DILocation(line: 76, column: 7, scope: !10696)
!10700 = !DILocation(line: 78, column: 8, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10695, file: !10437, line: 76, column: 28)
!10702 = !DILocation(line: 78, column: 4, scope: !10701)
!10703 = !DILocation(line: 79, column: 3, scope: !10701)
!10704 = !DILocation(line: 75, column: 2, scope: !10697)
!10705 = !DILocation(line: 81, column: 1, scope: !10681)
!10706 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !10656, file: !10656, line: 721, type: !8237, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10707)
!10707 = !{!10708}
!10708 = !DILocalVariable(name: "Line", arg: 1, scope: !10706, file: !10656, line: 721, type: !113)
!10709 = !DILocation(line: 0, scope: !10706)
!10710 = !DILocation(line: 723, column: 21, scope: !10706)
!10711 = !DILocation(line: 0, scope: !10665, inlinedAt: !10712)
!10712 = distinct !DILocation(line: 723, column: 76, scope: !10706)
!10713 = !DILocation(line: 380, column: 4, scope: !10665, inlinedAt: !10712)
!10714 = !DILocation(line: 0, scope: !10673, inlinedAt: !10715)
!10715 = distinct !DILocation(line: 723, column: 76, scope: !10706)
!10716 = !DILocation(line: 414, column: 7, scope: !10673, inlinedAt: !10715)
!10717 = !DILocation(line: 723, column: 73, scope: !10706)
!10718 = !DILocation(line: 723, column: 3, scope: !10706)
!10719 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10720, file: !10720, line: 913, type: !10721, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10723)
!10720 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10721 = !DISubroutineType(types: !10722)
!10722 = !{null, !1518, !113}
!10723 = !{!10724, !10725}
!10724 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10719, file: !10720, line: 913, type: !1518)
!10725 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10719, file: !10720, line: 913, type: !113)
!10726 = !DILocation(line: 0, scope: !10719)
!10727 = !DILocation(line: 918, column: 3, scope: !10719)
!10728 = !DILocation(line: 920, column: 1, scope: !10719)
!10729 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10720, file: !10720, line: 825, type: !10730, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10732)
!10730 = !DISubroutineType(types: !10731)
!10731 = !{!113, !1518}
!10732 = !{!10733}
!10733 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10729, file: !10720, line: 825, type: !1518)
!10734 = !DILocation(line: 0, scope: !10729)
!10735 = !DILocation(line: 827, column: 21, scope: !10729)
!10736 = !DILocation(line: 827, column: 3, scope: !10729)
!10737 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10720, file: !10720, line: 814, type: !10721, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10738)
!10738 = !{!10739, !10740}
!10739 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10737, file: !10720, line: 814, type: !1518)
!10740 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10737, file: !10720, line: 814, type: !113)
!10741 = !DILocation(line: 0, scope: !10737)
!10742 = !DILocation(line: 816, column: 3, scope: !10737)
!10743 = !DILocation(line: 817, column: 1, scope: !10737)
!10744 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10720, file: !10720, line: 773, type: !10730, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10745)
!10745 = !{!10746}
!10746 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10744, file: !10720, line: 773, type: !1518)
!10747 = !DILocation(line: 0, scope: !10744)
!10748 = !DILocation(line: 775, column: 21, scope: !10744)
!10749 = !DILocation(line: 775, column: 3, scope: !10744)
!10750 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1583, file: !1583, line: 47, type: !10751, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10753)
!10751 = !DISubroutineType(types: !10752)
!10752 = !{!108, !904, !536}
!10753 = !{!10754, !10755}
!10754 = !DILocalVariable(name: "flags", arg: 1, scope: !10750, file: !1583, line: 47, type: !904)
!10755 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10750, file: !1583, line: 47, type: !536)
!10756 = !DILocation(line: 0, scope: !10750)
!10757 = !DILocation(line: 50, column: 13, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10750, file: !1583, line: 50, column: 6)
!10759 = !DILocation(line: 50, column: 28, scope: !10758)
!10760 = !DILocation(line: 50, column: 6, scope: !10750)
!10761 = !DILocation(line: 53, column: 11, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10758, file: !1583, line: 50, column: 34)
!10763 = !DILocation(line: 55, column: 14, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10762, file: !1583, line: 55, column: 7)
!10765 = !DILocation(line: 55, column: 35, scope: !10764)
!10766 = !DILocation(line: 55, column: 7, scope: !10762)
!10767 = !DILocation(line: 56, column: 14, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !1583, line: 56, column: 8)
!10769 = distinct !DILexicalBlock(scope: !10764, file: !1583, line: 55, column: 41)
!10770 = !DILocation(line: 56, column: 8, scope: !10769)
!10771 = !DILocation(line: 0, scope: !10764)
!10772 = !DILocation(line: 66, column: 14, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10762, file: !1583, line: 66, column: 7)
!10774 = !DILocation(line: 66, column: 30, scope: !10773)
!10775 = !DILocation(line: 66, column: 7, scope: !10762)
!10776 = !DILocation(line: 67, column: 12, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10773, file: !1583, line: 66, column: 36)
!10778 = !DILocation(line: 68, column: 3, scope: !10777)
!10779 = !DILocation(line: 68, column: 21, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10773, file: !1583, line: 68, column: 14)
!10781 = !DILocation(line: 68, column: 39, scope: !10780)
!10782 = !DILocation(line: 68, column: 14, scope: !10773)
!10783 = !DILocation(line: 69, column: 12, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10780, file: !1583, line: 68, column: 45)
!10785 = !DILocation(line: 70, column: 3, scope: !10784)
!10786 = !DILocation(line: 72, column: 21, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10758, file: !1583, line: 72, column: 14)
!10788 = !DILocation(line: 72, column: 35, scope: !10787)
!10789 = !DILocation(line: 72, column: 14, scope: !10758)
!10790 = !DILocation(line: 77, column: 14, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !1583, line: 77, column: 7)
!10792 = distinct !DILexicalBlock(scope: !10787, file: !1583, line: 72, column: 41)
!10793 = !DILocation(line: 77, column: 30, scope: !10791)
!10794 = !DILocation(line: 77, column: 7, scope: !10792)
!10795 = !DILocation(line: 0, scope: !10758)
!10796 = !DILocation(line: 90, column: 1, scope: !10750)
!10797 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1583, file: !1583, line: 157, type: !10798, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10800)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{null, !1451, !108, !108, !108}
!10800 = !{!10801, !10802, !10803, !10804, !10805, !10806, !10807, !10808, !10809, !10810, !10811}
!10801 = !DILocalVariable(name: "dev", arg: 1, scope: !10797, file: !1583, line: 157, type: !1451)
!10802 = !DILocalVariable(name: "pin", arg: 2, scope: !10797, file: !1583, line: 157, type: !108)
!10803 = !DILocalVariable(name: "conf", arg: 3, scope: !10797, file: !1583, line: 158, type: !108)
!10804 = !DILocalVariable(name: "func", arg: 4, scope: !10797, file: !1583, line: 158, type: !108)
!10805 = !DILocalVariable(name: "cfg", scope: !10797, file: !1583, line: 160, type: !10321)
!10806 = !DILocalVariable(name: "gpio", scope: !10797, file: !1583, line: 161, type: !1518)
!10807 = !DILocalVariable(name: "pin_ll", scope: !10797, file: !1583, line: 163, type: !108)
!10808 = !DILocalVariable(name: "mode", scope: !10797, file: !1583, line: 227, type: !32)
!10809 = !DILocalVariable(name: "otype", scope: !10797, file: !1583, line: 227, type: !32)
!10810 = !DILocalVariable(name: "ospeed", scope: !10797, file: !1583, line: 227, type: !32)
!10811 = !DILocalVariable(name: "pupd", scope: !10797, file: !1583, line: 227, type: !32)
!10812 = !DILocation(line: 0, scope: !10797)
!10813 = !DILocation(line: 160, column: 45, scope: !10797)
!10814 = !DILocation(line: 161, column: 44, scope: !10797)
!10815 = !DILocation(line: 163, column: 15, scope: !10797)
!10816 = !DILocation(line: 229, column: 14, scope: !10797)
!10817 = !DILocation(line: 246, column: 47, scope: !10797)
!10818 = !DILocation(line: 246, column: 2, scope: !10797)
!10819 = !DILocation(line: 248, column: 43, scope: !10797)
!10820 = !DILocation(line: 248, column: 2, scope: !10797)
!10821 = !DILocation(line: 250, column: 40, scope: !10797)
!10822 = !DILocation(line: 250, column: 2, scope: !10797)
!10823 = !DILocation(line: 252, column: 11, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10797, file: !1583, line: 252, column: 6)
!10825 = !DILocation(line: 252, column: 6, scope: !10797)
!10826 = !DILocation(line: 253, column: 11, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !1583, line: 253, column: 7)
!10828 = distinct !DILexicalBlock(scope: !10824, file: !1583, line: 252, column: 36)
!10829 = !DILocation(line: 253, column: 7, scope: !10828)
!10830 = !DILocation(line: 254, column: 4, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10827, file: !1583, line: 253, column: 16)
!10832 = !DILocation(line: 255, column: 3, scope: !10831)
!10833 = !DILocation(line: 256, column: 4, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10827, file: !1583, line: 255, column: 10)
!10835 = !DILocation(line: 260, column: 40, scope: !10797)
!10836 = !DILocation(line: 260, column: 2, scope: !10797)
!10837 = !DILocation(line: 265, column: 1, scope: !10797)
!10838 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1583, file: !1583, line: 137, type: !10644, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10839)
!10839 = !{!10840, !10841}
!10840 = !DILocalVariable(name: "pin", arg: 1, scope: !10838, file: !1583, line: 137, type: !108)
!10841 = !DILocalVariable(name: "pinval", scope: !10838, file: !1583, line: 139, type: !113)
!10842 = !DILocation(line: 0, scope: !10838)
!10843 = !DILocation(line: 149, column: 13, scope: !10838)
!10844 = !DILocation(line: 151, column: 2, scope: !10838)
!10845 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10720, file: !10720, line: 343, type: !10846, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10848)
!10846 = !DISubroutineType(types: !10847)
!10847 = !{null, !1518, !113, !113}
!10848 = !{!10849, !10850, !10851}
!10849 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10845, file: !10720, line: 343, type: !1518)
!10850 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10845, file: !10720, line: 343, type: !113)
!10851 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10845, file: !10720, line: 343, type: !113)
!10852 = !DILocation(line: 0, scope: !10845)
!10853 = !DILocation(line: 345, column: 3, scope: !10845)
!10854 = !DILocation(line: 346, column: 1, scope: !10845)
!10855 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10720, file: !10720, line: 414, type: !10846, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10856)
!10856 = !{!10857, !10858, !10859}
!10857 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10855, file: !10720, line: 414, type: !1518)
!10858 = !DILocalVariable(name: "Pin", arg: 2, scope: !10855, file: !10720, line: 414, type: !113)
!10859 = !DILocalVariable(name: "Speed", arg: 3, scope: !10855, file: !10720, line: 414, type: !113)
!10860 = !DILocation(line: 0, scope: !10855)
!10861 = !DILocation(line: 416, column: 3, scope: !10855)
!10862 = !DILocation(line: 0, scope: !10665, inlinedAt: !10863)
!10863 = distinct !DILocation(line: 416, column: 3, scope: !10855)
!10864 = !DILocation(line: 380, column: 4, scope: !10665, inlinedAt: !10863)
!10865 = !DILocation(line: 0, scope: !10673, inlinedAt: !10866)
!10866 = distinct !DILocation(line: 416, column: 3, scope: !10855)
!10867 = !DILocation(line: 414, column: 7, scope: !10673, inlinedAt: !10866)
!10868 = !DILocation(line: 0, scope: !10665, inlinedAt: !10869)
!10869 = distinct !DILocation(line: 416, column: 3, scope: !10855)
!10870 = !DILocation(line: 0, scope: !10673, inlinedAt: !10871)
!10871 = distinct !DILocation(line: 416, column: 3, scope: !10855)
!10872 = !DILocation(line: 418, column: 1, scope: !10855)
!10873 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10720, file: !10720, line: 485, type: !10846, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10874)
!10874 = !{!10875, !10876, !10877}
!10875 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10873, file: !10720, line: 485, type: !1518)
!10876 = !DILocalVariable(name: "Pin", arg: 2, scope: !10873, file: !10720, line: 485, type: !113)
!10877 = !DILocalVariable(name: "Pull", arg: 3, scope: !10873, file: !10720, line: 485, type: !113)
!10878 = !DILocation(line: 0, scope: !10873)
!10879 = !DILocation(line: 487, column: 3, scope: !10873)
!10880 = !DILocation(line: 0, scope: !10665, inlinedAt: !10881)
!10881 = distinct !DILocation(line: 487, column: 3, scope: !10873)
!10882 = !DILocation(line: 380, column: 4, scope: !10665, inlinedAt: !10881)
!10883 = !DILocation(line: 0, scope: !10673, inlinedAt: !10884)
!10884 = distinct !DILocation(line: 487, column: 3, scope: !10873)
!10885 = !DILocation(line: 414, column: 7, scope: !10673, inlinedAt: !10884)
!10886 = !DILocation(line: 0, scope: !10665, inlinedAt: !10887)
!10887 = distinct !DILocation(line: 487, column: 3, scope: !10873)
!10888 = !DILocation(line: 0, scope: !10673, inlinedAt: !10889)
!10889 = distinct !DILocation(line: 487, column: 3, scope: !10873)
!10890 = !DILocation(line: 488, column: 1, scope: !10873)
!10891 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10720, file: !10720, line: 557, type: !10846, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10892)
!10892 = !{!10893, !10894, !10895}
!10893 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10891, file: !10720, line: 557, type: !1518)
!10894 = !DILocalVariable(name: "Pin", arg: 2, scope: !10891, file: !10720, line: 557, type: !113)
!10895 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10891, file: !10720, line: 557, type: !113)
!10896 = !DILocation(line: 0, scope: !10891)
!10897 = !DILocation(line: 559, column: 3, scope: !10891)
!10898 = !DILocation(line: 0, scope: !10665, inlinedAt: !10899)
!10899 = distinct !DILocation(line: 559, column: 3, scope: !10891)
!10900 = !DILocation(line: 380, column: 4, scope: !10665, inlinedAt: !10899)
!10901 = !DILocation(line: 0, scope: !10673, inlinedAt: !10902)
!10902 = distinct !DILocation(line: 559, column: 3, scope: !10891)
!10903 = !DILocation(line: 414, column: 7, scope: !10673, inlinedAt: !10902)
!10904 = !DILocation(line: 0, scope: !10665, inlinedAt: !10905)
!10905 = distinct !DILocation(line: 559, column: 3, scope: !10891)
!10906 = !DILocation(line: 0, scope: !10673, inlinedAt: !10907)
!10907 = distinct !DILocation(line: 559, column: 3, scope: !10891)
!10908 = !DILocation(line: 561, column: 1, scope: !10891)
!10909 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10720, file: !10720, line: 634, type: !10846, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10910)
!10910 = !{!10911, !10912, !10913}
!10911 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10909, file: !10720, line: 634, type: !1518)
!10912 = !DILocalVariable(name: "Pin", arg: 2, scope: !10909, file: !10720, line: 634, type: !113)
!10913 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10909, file: !10720, line: 634, type: !113)
!10914 = !DILocation(line: 0, scope: !10909)
!10915 = !DILocation(line: 636, column: 3, scope: !10909)
!10916 = !DILocation(line: 0, scope: !10665, inlinedAt: !10917)
!10917 = distinct !DILocation(line: 636, column: 3, scope: !10909)
!10918 = !DILocation(line: 380, column: 4, scope: !10665, inlinedAt: !10917)
!10919 = !DILocation(line: 0, scope: !10673, inlinedAt: !10920)
!10920 = distinct !DILocation(line: 636, column: 3, scope: !10909)
!10921 = !DILocation(line: 414, column: 7, scope: !10673, inlinedAt: !10920)
!10922 = !DILocation(line: 0, scope: !10665, inlinedAt: !10923)
!10923 = distinct !DILocation(line: 636, column: 3, scope: !10909)
!10924 = !DILocation(line: 0, scope: !10673, inlinedAt: !10925)
!10925 = distinct !DILocation(line: 636, column: 3, scope: !10909)
!10926 = !DILocation(line: 638, column: 1, scope: !10909)
!10927 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10720, file: !10720, line: 274, type: !10846, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10928)
!10928 = !{!10929, !10930, !10931}
!10929 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10927, file: !10720, line: 274, type: !1518)
!10930 = !DILocalVariable(name: "Pin", arg: 2, scope: !10927, file: !10720, line: 274, type: !113)
!10931 = !DILocalVariable(name: "Mode", arg: 3, scope: !10927, file: !10720, line: 274, type: !113)
!10932 = !DILocation(line: 0, scope: !10927)
!10933 = !DILocation(line: 276, column: 3, scope: !10927)
!10934 = !DILocation(line: 0, scope: !10665, inlinedAt: !10935)
!10935 = distinct !DILocation(line: 276, column: 3, scope: !10927)
!10936 = !DILocation(line: 380, column: 4, scope: !10665, inlinedAt: !10935)
!10937 = !DILocation(line: 0, scope: !10673, inlinedAt: !10938)
!10938 = distinct !DILocation(line: 276, column: 3, scope: !10927)
!10939 = !DILocation(line: 414, column: 7, scope: !10673, inlinedAt: !10938)
!10940 = !DILocation(line: 0, scope: !10665, inlinedAt: !10941)
!10941 = distinct !DILocation(line: 276, column: 3, scope: !10927)
!10942 = !DILocation(line: 0, scope: !10673, inlinedAt: !10943)
!10943 = distinct !DILocation(line: 276, column: 3, scope: !10927)
!10944 = !DILocation(line: 277, column: 1, scope: !10927)
!10945 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1583, file: !1583, line: 698, type: !1594, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10946)
!10946 = !{!10947, !10948, !10949}
!10947 = !DILocalVariable(name: "dev", arg: 1, scope: !10945, file: !1583, line: 698, type: !1451)
!10948 = !DILocalVariable(name: "data", scope: !10945, file: !1583, line: 700, type: !10388)
!10949 = !DILocalVariable(name: "ret", scope: !10945, file: !1583, line: 701, type: !108)
!10950 = !DILocation(line: 0, scope: !10945)
!10951 = !DILocation(line: 700, column: 38, scope: !10945)
!10952 = !DILocation(line: 703, column: 8, scope: !10945)
!10953 = !DILocation(line: 703, column: 12, scope: !10945)
!10954 = !DILocation(line: 705, column: 7, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10945, file: !1583, line: 705, column: 6)
!10956 = !DILocation(line: 705, column: 6, scope: !10945)
!10957 = !DILocation(line: 722, column: 8, scope: !10945)
!10958 = !DILocation(line: 723, column: 10, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10945, file: !1583, line: 723, column: 6)
!10960 = !DILocation(line: 723, column: 6, scope: !10945)
!10961 = !DILocation(line: 731, column: 1, scope: !10945)
!10962 = distinct !DISubprogram(name: "device_is_ready", scope: !8858, file: !8858, line: 47, type: !10963, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10965)
!10963 = !DISubroutineType(types: !10964)
!10964 = !{!422, !1451}
!10965 = !{!10966}
!10966 = !DILocalVariable(name: "dev", arg: 1, scope: !10962, file: !8858, line: 47, type: !1451)
!10967 = !DILocation(line: 0, scope: !10962)
!10968 = !DILocation(line: 55, column: 2, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10962, file: !8858, line: 55, column: 2)
!10970 = !{i64 2152418702}
!10971 = !DILocation(line: 56, column: 9, scope: !10962)
!10972 = !DILocation(line: 56, column: 2, scope: !10962)
!10973 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1583, file: !1583, line: 270, type: !10974, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10976)
!10974 = !DISubroutineType(types: !10975)
!10975 = !{!108, !1451, !422}
!10976 = !{!10977, !10978, !10979, !10980, !10981}
!10977 = !DILocalVariable(name: "dev", arg: 1, scope: !10973, file: !1583, line: 270, type: !1451)
!10978 = !DILocalVariable(name: "on", arg: 2, scope: !10973, file: !1583, line: 270, type: !422)
!10979 = !DILocalVariable(name: "cfg", scope: !10973, file: !1583, line: 272, type: !10321)
!10980 = !DILocalVariable(name: "ret", scope: !10973, file: !1583, line: 273, type: !108)
!10981 = !DILocalVariable(name: "clk", scope: !10973, file: !1583, line: 278, type: !10611)
!10982 = !DILocation(line: 0, scope: !10973)
!10983 = !DILocation(line: 272, column: 45, scope: !10973)
!10984 = !DILocation(line: 282, column: 38, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10986, file: !1583, line: 280, column: 10)
!10986 = distinct !DILexicalBlock(scope: !10973, file: !1583, line: 280, column: 6)
!10987 = !DILocation(line: 282, column: 6, scope: !10985)
!10988 = !DILocation(line: 281, column: 9, scope: !10985)
!10989 = !DILocation(line: 293, column: 1, scope: !10973)
!10990 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10963, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10991)
!10991 = !{!10992}
!10992 = !DILocalVariable(name: "dev", arg: 1, scope: !10990, file: !411, line: 730, type: !1451)
!10993 = !DILocation(line: 0, scope: !10990)
!10994 = !DILocation(line: 732, column: 9, scope: !10990)
!10995 = !DILocation(line: 732, column: 2, scope: !10990)
!10996 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1583, file: !1583, line: 496, type: !10997, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1433, retainedNodes: !10999)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{!108, !1451, !108, !108, !108}
!10999 = !{!11000, !11001, !11002, !11003, !11004, !11005}
!11000 = !DILocalVariable(name: "dev", arg: 1, scope: !10996, file: !1583, line: 496, type: !1451)
!11001 = !DILocalVariable(name: "pin", arg: 2, scope: !10996, file: !1583, line: 496, type: !108)
!11002 = !DILocalVariable(name: "conf", arg: 3, scope: !10996, file: !1583, line: 496, type: !108)
!11003 = !DILocalVariable(name: "func", arg: 4, scope: !10996, file: !1583, line: 496, type: !108)
!11004 = !DILocalVariable(name: "ret", scope: !10996, file: !1583, line: 498, type: !108)
!11005 = !DILocalVariable(name: "gpio_out", scope: !11006, file: !1583, line: 508, type: !113)
!11006 = distinct !DILexicalBlock(scope: !11007, file: !1583, line: 507, column: 27)
!11007 = distinct !DILexicalBlock(scope: !10996, file: !1583, line: 507, column: 6)
!11008 = !DILocation(line: 0, scope: !10996)
!11009 = !DILocation(line: 505, column: 2, scope: !10996)
!11010 = !DILocation(line: 507, column: 11, scope: !11007)
!11011 = !DILocation(line: 507, column: 6, scope: !10996)
!11012 = !DILocation(line: 508, column: 28, scope: !11006)
!11013 = !DILocation(line: 0, scope: !11006)
!11014 = !DILocation(line: 510, column: 16, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11006, file: !1583, line: 510, column: 7)
!11016 = !DILocation(line: 0, scope: !11015)
!11017 = !DILocation(line: 510, column: 7, scope: !11006)
!11018 = !DILocation(line: 511, column: 4, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11015, file: !1583, line: 510, column: 32)
!11020 = !DILocation(line: 512, column: 3, scope: !11019)
!11021 = !DILocation(line: 513, column: 4, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !1583, line: 512, column: 39)
!11023 = distinct !DILexicalBlock(scope: !11015, file: !1583, line: 512, column: 14)
!11024 = !DILocation(line: 514, column: 3, scope: !11022)
!11025 = !DILocation(line: 518, column: 1, scope: !10996)
!11026 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1838, file: !1838, line: 526, type: !1742, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11027)
!11027 = !{!11028, !11029, !11030}
!11028 = !DILocalVariable(name: "dev", arg: 1, scope: !11026, file: !1838, line: 526, type: !1744)
!11029 = !DILocalVariable(name: "c", arg: 2, scope: !11026, file: !1838, line: 526, type: !1394)
!11030 = !DILocalVariable(name: "config", scope: !11026, file: !1838, line: 528, type: !11031)
!11031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!11032 = !DILocation(line: 0, scope: !11026)
!11033 = !DILocation(line: 528, column: 48, scope: !11026)
!11034 = !DILocation(line: 531, column: 40, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11026, file: !1838, line: 531, column: 6)
!11036 = !DILocation(line: 531, column: 6, scope: !11035)
!11037 = !DILocation(line: 531, column: 6, scope: !11026)
!11038 = !DILocation(line: 532, column: 34, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11035, file: !1838, line: 531, column: 48)
!11040 = !DILocation(line: 532, column: 3, scope: !11039)
!11041 = !DILocation(line: 533, column: 2, scope: !11039)
!11042 = !DILocation(line: 539, column: 42, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11026, file: !1838, line: 539, column: 6)
!11044 = !DILocation(line: 539, column: 7, scope: !11043)
!11045 = !DILocation(line: 539, column: 6, scope: !11026)
!11046 = !DILocation(line: 543, column: 52, scope: !11026)
!11047 = !DILocation(line: 543, column: 22, scope: !11026)
!11048 = !DILocation(line: 543, column: 5, scope: !11026)
!11049 = !DILocation(line: 545, column: 2, scope: !11026)
!11050 = !DILocation(line: 546, column: 1, scope: !11026)
!11051 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1838, file: !1838, line: 548, type: !1761, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11052)
!11052 = !{!11053, !11054, !11055, !11056}
!11053 = !DILocalVariable(name: "dev", arg: 1, scope: !11051, file: !1838, line: 548, type: !1744)
!11054 = !DILocalVariable(name: "c", arg: 2, scope: !11051, file: !1838, line: 549, type: !165)
!11055 = !DILocalVariable(name: "config", scope: !11051, file: !1838, line: 551, type: !11031)
!11056 = !DILocalVariable(name: "key", scope: !11051, file: !1838, line: 555, type: !32)
!11057 = !DILocation(line: 0, scope: !11051)
!11058 = !DILocation(line: 551, column: 48, scope: !11051)
!11059 = !DILocation(line: 562, column: 2, scope: !11051)
!11060 = !DILocation(line: 563, column: 41, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11062, file: !1838, line: 563, column: 7)
!11062 = distinct !DILexicalBlock(scope: !11051, file: !1838, line: 562, column: 12)
!11063 = !DILocation(line: 563, column: 7, scope: !11061)
!11064 = !DILocation(line: 563, column: 7, scope: !11062)
!11065 = !DILocation(line: 55, column: 2, scope: !11066, inlinedAt: !11070)
!11066 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11067)
!11067 = !{!11068, !11069}
!11068 = !DILocalVariable(name: "key", scope: !11066, file: !4055, line: 44, type: !32)
!11069 = !DILocalVariable(name: "tmp", scope: !11066, file: !4055, line: 53, type: !32)
!11070 = distinct !DILocation(line: 564, column: 10, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11061, file: !1838, line: 563, column: 49)
!11072 = !{i64 1715356}
!11073 = !DILocation(line: 0, scope: !11066, inlinedAt: !11070)
!11074 = !DILocation(line: 565, column: 42, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11071, file: !1838, line: 565, column: 8)
!11076 = !DILocation(line: 565, column: 8, scope: !11075)
!11077 = !DILocation(line: 565, column: 8, scope: !11071)
!11078 = !DILocalVariable(name: "key", arg: 1, scope: !11079, file: !4055, line: 84, type: !32)
!11079 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11080)
!11080 = !{!11078}
!11081 = !DILocation(line: 0, scope: !11079, inlinedAt: !11082)
!11082 = distinct !DILocation(line: 568, column: 4, scope: !11071)
!11083 = !DILocation(line: 95, column: 2, scope: !11079, inlinedAt: !11082)
!11084 = !{i64 1716173}
!11085 = !DILocation(line: 569, column: 3, scope: !11071)
!11086 = distinct !{!11086, !11059, !11087}
!11087 = !DILocation(line: 570, column: 2, scope: !11051)
!11088 = !DILocation(line: 592, column: 33, scope: !11051)
!11089 = !DILocation(line: 592, column: 2, scope: !11051)
!11090 = !DILocation(line: 0, scope: !11079, inlinedAt: !11091)
!11091 = distinct !DILocation(line: 593, column: 2, scope: !11051)
!11092 = !DILocation(line: 95, column: 2, scope: !11079, inlinedAt: !11091)
!11093 = !DILocation(line: 594, column: 1, scope: !11051)
!11094 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1838, file: !1838, line: 596, type: !1765, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11095)
!11095 = !{!11096, !11097, !11098}
!11096 = !DILocalVariable(name: "dev", arg: 1, scope: !11094, file: !1838, line: 596, type: !1744)
!11097 = !DILocalVariable(name: "config", scope: !11094, file: !1838, line: 598, type: !11031)
!11098 = !DILocalVariable(name: "err", scope: !11094, file: !1838, line: 599, type: !113)
!11099 = !DILocation(line: 0, scope: !11094)
!11100 = !DILocation(line: 598, column: 48, scope: !11094)
!11101 = !DILocation(line: 606, column: 40, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11094, file: !1838, line: 606, column: 6)
!11103 = !DILocation(line: 606, column: 6, scope: !11102)
!11104 = !DILocation(line: 606, column: 6, scope: !11094)
!11105 = !DILocation(line: 610, column: 39, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11094, file: !1838, line: 610, column: 6)
!11107 = !DILocation(line: 610, column: 6, scope: !11106)
!11108 = !DILocation(line: 610, column: 6, scope: !11094)
!11109 = !DILocation(line: 614, column: 39, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11094, file: !1838, line: 614, column: 6)
!11111 = !DILocation(line: 614, column: 6, scope: !11110)
!11112 = !DILocation(line: 614, column: 6, scope: !11094)
!11113 = !DILocation(line: 619, column: 40, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11094, file: !1838, line: 619, column: 6)
!11115 = !DILocation(line: 619, column: 6, scope: !11114)
!11116 = !DILocation(line: 619, column: 6, scope: !11094)
!11117 = !DILocation(line: 623, column: 10, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11094, file: !1838, line: 623, column: 6)
!11119 = !DILocation(line: 623, column: 6, scope: !11094)
!11120 = !DILocation(line: 624, column: 34, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11118, file: !1838, line: 623, column: 24)
!11122 = !DILocation(line: 624, column: 3, scope: !11121)
!11123 = !DILocation(line: 625, column: 2, scope: !11121)
!11124 = !DILocation(line: 632, column: 10, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11094, file: !1838, line: 632, column: 6)
!11126 = !DILocation(line: 632, column: 6, scope: !11094)
!11127 = !DILocation(line: 633, column: 34, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11125, file: !1838, line: 632, column: 32)
!11129 = !DILocation(line: 633, column: 3, scope: !11128)
!11130 = !DILocation(line: 634, column: 2, scope: !11128)
!11131 = !DILocation(line: 636, column: 10, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11094, file: !1838, line: 636, column: 6)
!11133 = !DILocation(line: 636, column: 6, scope: !11094)
!11134 = !DILocation(line: 637, column: 33, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11132, file: !1838, line: 636, column: 31)
!11136 = !DILocation(line: 637, column: 3, scope: !11135)
!11137 = !DILocation(line: 638, column: 2, scope: !11135)
!11138 = !DILocation(line: 640, column: 10, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11094, file: !1838, line: 640, column: 6)
!11140 = !DILocation(line: 640, column: 6, scope: !11094)
!11141 = !DILocation(line: 641, column: 33, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11139, file: !1838, line: 640, column: 32)
!11143 = !DILocation(line: 641, column: 3, scope: !11142)
!11144 = !DILocation(line: 642, column: 2, scope: !11142)
!11145 = !DILocation(line: 646, column: 32, scope: !11094)
!11146 = !DILocation(line: 646, column: 2, scope: !11094)
!11147 = !DILocation(line: 648, column: 2, scope: !11094)
!11148 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1838, file: !1838, line: 419, type: !1769, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11149)
!11149 = !{!11150, !11151, !11152, !11153, !11155, !11156, !11157, !11158}
!11150 = !DILocalVariable(name: "dev", arg: 1, scope: !11148, file: !1838, line: 419, type: !1744)
!11151 = !DILocalVariable(name: "cfg", arg: 2, scope: !11148, file: !1838, line: 420, type: !1771)
!11152 = !DILocalVariable(name: "config", scope: !11148, file: !1838, line: 422, type: !11031)
!11153 = !DILocalVariable(name: "data", scope: !11148, file: !1838, line: 423, type: !11154)
!11154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!11155 = !DILocalVariable(name: "parity", scope: !11148, file: !1838, line: 424, type: !7275)
!11156 = !DILocalVariable(name: "stopbits", scope: !11148, file: !1838, line: 425, type: !7275)
!11157 = !DILocalVariable(name: "databits", scope: !11148, file: !1838, line: 426, type: !7275)
!11158 = !DILocalVariable(name: "flowctrl", scope: !11148, file: !1838, line: 428, type: !7275)
!11159 = !DILocation(line: 0, scope: !11148)
!11160 = !DILocation(line: 422, column: 48, scope: !11148)
!11161 = !DILocation(line: 423, column: 38, scope: !11148)
!11162 = !DILocation(line: 424, column: 56, scope: !11148)
!11163 = !DILocation(line: 424, column: 51, scope: !11148)
!11164 = !DILocation(line: 424, column: 26, scope: !11148)
!11165 = !DILocation(line: 425, column: 60, scope: !11148)
!11166 = !DILocation(line: 425, column: 55, scope: !11148)
!11167 = !DILocation(line: 425, column: 28, scope: !11148)
!11168 = !DILocation(line: 426, column: 60, scope: !11148)
!11169 = !DILocation(line: 426, column: 55, scope: !11148)
!11170 = !DILocation(line: 426, column: 28, scope: !11148)
!11171 = !DILocation(line: 428, column: 58, scope: !11148)
!11172 = !DILocation(line: 428, column: 53, scope: !11148)
!11173 = !DILocation(line: 428, column: 28, scope: !11148)
!11174 = !DILocation(line: 431, column: 44, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 431, column: 6)
!11176 = !DILocation(line: 438, column: 22, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 437, column: 6)
!11178 = !DILocation(line: 437, column: 6, scope: !11148)
!11179 = !DILocation(line: 448, column: 6, scope: !11148)
!11180 = !DILocation(line: 465, column: 47, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 465, column: 6)
!11182 = !DILocation(line: 475, column: 21, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 475, column: 6)
!11184 = !DILocation(line: 475, column: 6, scope: !11148)
!11185 = !DILocation(line: 476, column: 8, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11187, file: !1838, line: 476, column: 7)
!11187 = distinct !DILexicalBlock(scope: !11183, file: !1838, line: 475, column: 49)
!11188 = !DILocation(line: 477, column: 34, scope: !11186)
!11189 = !DILocation(line: 476, column: 7, scope: !11187)
!11190 = !DILocation(line: 482, column: 27, scope: !11148)
!11191 = !DILocation(line: 482, column: 2, scope: !11148)
!11192 = !DILocation(line: 484, column: 16, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 484, column: 6)
!11194 = !DILocation(line: 484, column: 13, scope: !11193)
!11195 = !DILocation(line: 484, column: 6, scope: !11148)
!11196 = !DILocation(line: 485, column: 3, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11193, file: !1838, line: 484, column: 44)
!11198 = !DILocation(line: 486, column: 2, scope: !11197)
!11199 = !DILocation(line: 488, column: 18, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 488, column: 6)
!11201 = !DILocation(line: 488, column: 15, scope: !11200)
!11202 = !DILocation(line: 488, column: 6, scope: !11148)
!11203 = !DILocation(line: 489, column: 3, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11200, file: !1838, line: 488, column: 48)
!11205 = !DILocation(line: 490, column: 2, scope: !11204)
!11206 = !DILocation(line: 492, column: 18, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 492, column: 6)
!11208 = !DILocation(line: 492, column: 15, scope: !11207)
!11209 = !DILocation(line: 492, column: 6, scope: !11148)
!11210 = !DILocation(line: 493, column: 3, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11207, file: !1838, line: 492, column: 48)
!11212 = !DILocation(line: 494, column: 2, scope: !11211)
!11213 = !DILocation(line: 496, column: 18, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 496, column: 6)
!11215 = !DILocation(line: 496, column: 15, scope: !11214)
!11216 = !DILocation(line: 496, column: 6, scope: !11148)
!11217 = !DILocation(line: 497, column: 3, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11214, file: !1838, line: 496, column: 46)
!11219 = !DILocation(line: 498, column: 2, scope: !11218)
!11220 = !DILocation(line: 500, column: 11, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11148, file: !1838, line: 500, column: 6)
!11222 = !DILocation(line: 500, column: 29, scope: !11221)
!11223 = !DILocation(line: 500, column: 20, scope: !11221)
!11224 = !DILocation(line: 500, column: 6, scope: !11148)
!11225 = !DILocation(line: 501, column: 3, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11221, file: !1838, line: 500, column: 40)
!11227 = !DILocation(line: 502, column: 26, scope: !11226)
!11228 = !DILocation(line: 502, column: 19, scope: !11226)
!11229 = !DILocation(line: 503, column: 2, scope: !11226)
!11230 = !DILocation(line: 505, column: 26, scope: !11148)
!11231 = !DILocation(line: 505, column: 2, scope: !11148)
!11232 = !DILocation(line: 506, column: 2, scope: !11148)
!11233 = !DILocation(line: 507, column: 1, scope: !11148)
!11234 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1838, file: !1838, line: 509, type: !1782, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11235)
!11235 = !{!11236, !11237, !11238}
!11236 = !DILocalVariable(name: "dev", arg: 1, scope: !11234, file: !1838, line: 509, type: !1744)
!11237 = !DILocalVariable(name: "cfg", arg: 2, scope: !11234, file: !1838, line: 510, type: !1784)
!11238 = !DILocalVariable(name: "data", scope: !11234, file: !1838, line: 512, type: !11154)
!11239 = !DILocation(line: 0, scope: !11234)
!11240 = !DILocation(line: 512, column: 38, scope: !11234)
!11241 = !DILocation(line: 514, column: 24, scope: !11234)
!11242 = !DILocation(line: 514, column: 7, scope: !11234)
!11243 = !DILocation(line: 514, column: 16, scope: !11234)
!11244 = !DILocation(line: 515, column: 41, scope: !11234)
!11245 = !{i32 0, i32 1537}
!11246 = !DILocation(line: 515, column: 16, scope: !11234)
!11247 = !DILocation(line: 515, column: 7, scope: !11234)
!11248 = !DILocation(line: 515, column: 14, scope: !11234)
!11249 = !DILocation(line: 517, column: 3, scope: !11234)
!11250 = !{i32 0, i32 12289}
!11251 = !DILocation(line: 516, column: 19, scope: !11234)
!11252 = !DILocation(line: 516, column: 7, scope: !11234)
!11253 = !DILocation(line: 516, column: 17, scope: !11234)
!11254 = !DILocation(line: 519, column: 3, scope: !11234)
!11255 = !DILocation(line: 519, column: 33, scope: !11234)
!11256 = !DILocation(line: 518, column: 19, scope: !11234)
!11257 = !DILocation(line: 518, column: 7, scope: !11234)
!11258 = !DILocation(line: 518, column: 17, scope: !11234)
!11259 = !DILocation(line: 521, column: 3, scope: !11234)
!11260 = !{i32 0, i32 769}
!11261 = !DILocation(line: 520, column: 19, scope: !11234)
!11262 = !DILocation(line: 520, column: 7, scope: !11234)
!11263 = !DILocation(line: 520, column: 17, scope: !11234)
!11264 = !DILocation(line: 522, column: 2, scope: !11234)
!11265 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1838, file: !1838, line: 205, type: !11266, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11268)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!113, !1744}
!11268 = !{!11269, !11270}
!11269 = !DILocalVariable(name: "dev", arg: 1, scope: !11265, file: !1838, line: 205, type: !1744)
!11270 = !DILocalVariable(name: "config", scope: !11265, file: !1838, line: 207, type: !11031)
!11271 = !DILocation(line: 0, scope: !11265)
!11272 = !DILocation(line: 207, column: 48, scope: !11265)
!11273 = !DILocation(line: 209, column: 36, scope: !11265)
!11274 = !DILocation(line: 209, column: 9, scope: !11265)
!11275 = !DILocation(line: 209, column: 2, scope: !11265)
!11276 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1838, file: !1838, line: 270, type: !11277, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11279)
!11277 = !DISubroutineType(types: !11278)
!11278 = !{!1710, !113}
!11279 = !{!11280}
!11280 = !DILocalVariable(name: "parity", arg: 1, scope: !11276, file: !1838, line: 270, type: !113)
!11281 = !DILocation(line: 0, scope: !11276)
!11282 = !DILocation(line: 272, column: 2, scope: !11276)
!11283 = !DILocation(line: 281, column: 1, scope: !11276)
!11284 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1838, file: !1838, line: 220, type: !11266, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11285)
!11285 = !{!11286, !11287}
!11286 = !DILocalVariable(name: "dev", arg: 1, scope: !11284, file: !1838, line: 220, type: !1744)
!11287 = !DILocalVariable(name: "config", scope: !11284, file: !1838, line: 222, type: !11031)
!11288 = !DILocation(line: 0, scope: !11284)
!11289 = !DILocation(line: 222, column: 48, scope: !11284)
!11290 = !DILocation(line: 224, column: 44, scope: !11284)
!11291 = !DILocation(line: 224, column: 9, scope: !11284)
!11292 = !DILocation(line: 224, column: 2, scope: !11284)
!11293 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1838, file: !1838, line: 304, type: !11294, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11296)
!11294 = !DISubroutineType(types: !11295)
!11295 = !{!1724, !113}
!11296 = !{!11297}
!11297 = !DILocalVariable(name: "sb", arg: 1, scope: !11293, file: !1838, line: 304, type: !113)
!11298 = !DILocation(line: 0, scope: !11293)
!11299 = !DILocation(line: 306, column: 2, scope: !11293)
!11300 = !DILocation(line: 0, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11293, file: !1838, line: 306, column: 14)
!11302 = !DILocation(line: 323, column: 1, scope: !11293)
!11303 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1838, file: !1838, line: 235, type: !11266, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11304)
!11304 = !{!11305, !11306}
!11305 = !DILocalVariable(name: "dev", arg: 1, scope: !11303, file: !1838, line: 235, type: !1744)
!11306 = !DILocalVariable(name: "config", scope: !11303, file: !1838, line: 237, type: !11031)
!11307 = !DILocation(line: 0, scope: !11303)
!11308 = !DILocation(line: 237, column: 48, scope: !11303)
!11309 = !DILocation(line: 239, column: 39, scope: !11303)
!11310 = !DILocation(line: 239, column: 9, scope: !11303)
!11311 = !DILocation(line: 239, column: 2, scope: !11303)
!11312 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1838, file: !1838, line: 355, type: !11313, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11315)
!11313 = !DISubroutineType(types: !11314)
!11314 = !{!1717, !113, !113}
!11315 = !{!11316, !11317}
!11316 = !DILocalVariable(name: "db", arg: 1, scope: !11312, file: !1838, line: 355, type: !113)
!11317 = !DILocalVariable(name: "p", arg: 2, scope: !11312, file: !1838, line: 356, type: !113)
!11318 = !DILocation(line: 0, scope: !11312)
!11319 = !DILocation(line: 358, column: 2, scope: !11312)
!11320 = !DILocation(line: 384, column: 1, scope: !11312)
!11321 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1838, file: !1838, line: 250, type: !11266, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11322)
!11322 = !{!11323, !11324}
!11323 = !DILocalVariable(name: "dev", arg: 1, scope: !11321, file: !1838, line: 250, type: !1744)
!11324 = !DILocalVariable(name: "config", scope: !11321, file: !1838, line: 252, type: !11031)
!11325 = !DILocation(line: 0, scope: !11321)
!11326 = !DILocation(line: 252, column: 48, scope: !11321)
!11327 = !DILocation(line: 254, column: 40, scope: !11321)
!11328 = !DILocation(line: 254, column: 9, scope: !11321)
!11329 = !DILocation(line: 254, column: 2, scope: !11321)
!11330 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1838, file: !1838, line: 409, type: !11331, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11333)
!11331 = !DISubroutineType(types: !11332)
!11332 = !{!1730, !113}
!11333 = !{!11334}
!11334 = !DILocalVariable(name: "fc", arg: 1, scope: !11330, file: !1838, line: 409, type: !113)
!11335 = !DILocation(line: 0, scope: !11330)
!11336 = !DILocation(line: 411, column: 9, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11330, file: !1838, line: 411, column: 6)
!11338 = !DILocation(line: 416, column: 1, scope: !11330)
!11339 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11340, file: !11340, line: 966, type: !11341, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11343)
!11340 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11341 = !DISubroutineType(types: !11342)
!11342 = !{!113, !1785}
!11343 = !{!11344}
!11344 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11339, file: !11340, line: 966, type: !1785)
!11345 = !DILocation(line: 0, scope: !11339)
!11346 = !DILocation(line: 968, column: 21, scope: !11339)
!11347 = !DILocation(line: 968, column: 3, scope: !11339)
!11348 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11340, file: !11340, line: 600, type: !11341, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11349)
!11349 = !{!11350}
!11350 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11348, file: !11340, line: 600, type: !1785)
!11351 = !DILocation(line: 0, scope: !11348)
!11352 = !DILocation(line: 602, column: 21, scope: !11348)
!11353 = !DILocation(line: 602, column: 3, scope: !11348)
!11354 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11340, file: !11340, line: 819, type: !11341, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11355)
!11355 = !{!11356}
!11356 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11354, file: !11340, line: 819, type: !1785)
!11357 = !DILocation(line: 0, scope: !11354)
!11358 = !DILocation(line: 821, column: 21, scope: !11354)
!11359 = !DILocation(line: 821, column: 3, scope: !11354)
!11360 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11340, file: !11340, line: 546, type: !11341, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11361)
!11361 = !{!11362}
!11362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11360, file: !11340, line: 546, type: !1785)
!11363 = !DILocation(line: 0, scope: !11360)
!11364 = !DILocation(line: 548, column: 21, scope: !11360)
!11365 = !DILocation(line: 548, column: 3, scope: !11360)
!11366 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1838, file: !1838, line: 257, type: !11367, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11369)
!11367 = !DISubroutineType(types: !11368)
!11368 = !{!113, !1710}
!11369 = !{!11370}
!11370 = !DILocalVariable(name: "parity", arg: 1, scope: !11366, file: !1838, line: 257, type: !1710)
!11371 = !DILocation(line: 0, scope: !11366)
!11372 = !DILocation(line: 259, column: 2, scope: !11366)
!11373 = !DILocation(line: 268, column: 1, scope: !11366)
!11374 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1838, file: !1838, line: 283, type: !11375, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11377)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{!113, !1724}
!11377 = !{!11378}
!11378 = !DILocalVariable(name: "sb", arg: 1, scope: !11374, file: !1838, line: 283, type: !1724)
!11379 = !DILocation(line: 0, scope: !11374)
!11380 = !DILocation(line: 285, column: 2, scope: !11374)
!11381 = !DILocation(line: 0, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11374, file: !1838, line: 285, column: 14)
!11383 = !DILocation(line: 302, column: 1, scope: !11374)
!11384 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1838, file: !1838, line: 325, type: !11385, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11387)
!11385 = !DISubroutineType(types: !11386)
!11386 = !{!113, !1717, !1710}
!11387 = !{!11388, !11389}
!11388 = !DILocalVariable(name: "db", arg: 1, scope: !11384, file: !1838, line: 325, type: !1717)
!11389 = !DILocalVariable(name: "p", arg: 2, scope: !11384, file: !1838, line: 326, type: !1710)
!11390 = !DILocation(line: 0, scope: !11384)
!11391 = !DILocation(line: 328, column: 2, scope: !11384)
!11392 = !DILocation(line: 353, column: 1, scope: !11384)
!11393 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1838, file: !1838, line: 393, type: !11394, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11396)
!11394 = !DISubroutineType(types: !11395)
!11395 = !{!113, !1730}
!11396 = !{!11397}
!11397 = !DILocalVariable(name: "fc", arg: 1, scope: !11393, file: !1838, line: 393, type: !1730)
!11398 = !DILocation(line: 0, scope: !11393)
!11399 = !DILocation(line: 395, column: 9, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11393, file: !1838, line: 395, column: 6)
!11401 = !DILocation(line: 400, column: 1, scope: !11393)
!11402 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11340, file: !11340, line: 423, type: !11403, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11405)
!11403 = !DISubroutineType(types: !11404)
!11404 = !{null, !1785}
!11405 = !{!11406}
!11406 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11402, file: !11340, line: 423, type: !1785)
!11407 = !DILocation(line: 0, scope: !11402)
!11408 = !DILocation(line: 425, column: 3, scope: !11402)
!11409 = !DILocation(line: 426, column: 1, scope: !11402)
!11410 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1838, file: !1838, line: 197, type: !11411, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11413)
!11411 = !DISubroutineType(types: !11412)
!11412 = !{null, !1744, !113}
!11413 = !{!11414, !11415, !11416}
!11414 = !DILocalVariable(name: "dev", arg: 1, scope: !11410, file: !1838, line: 197, type: !1744)
!11415 = !DILocalVariable(name: "parity", arg: 2, scope: !11410, file: !1838, line: 198, type: !113)
!11416 = !DILocalVariable(name: "config", scope: !11410, file: !1838, line: 200, type: !11031)
!11417 = !DILocation(line: 0, scope: !11410)
!11418 = !DILocation(line: 200, column: 48, scope: !11410)
!11419 = !DILocation(line: 202, column: 29, scope: !11410)
!11420 = !DILocation(line: 202, column: 2, scope: !11410)
!11421 = !DILocation(line: 203, column: 1, scope: !11410)
!11422 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1838, file: !1838, line: 212, type: !11411, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11423)
!11423 = !{!11424, !11425, !11426}
!11424 = !DILocalVariable(name: "dev", arg: 1, scope: !11422, file: !1838, line: 212, type: !1744)
!11425 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11422, file: !1838, line: 213, type: !113)
!11426 = !DILocalVariable(name: "config", scope: !11422, file: !1838, line: 215, type: !11031)
!11427 = !DILocation(line: 0, scope: !11422)
!11428 = !DILocation(line: 215, column: 48, scope: !11422)
!11429 = !DILocation(line: 217, column: 37, scope: !11422)
!11430 = !DILocation(line: 217, column: 2, scope: !11422)
!11431 = !DILocation(line: 218, column: 1, scope: !11422)
!11432 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1838, file: !1838, line: 227, type: !11411, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11433)
!11433 = !{!11434, !11435, !11436}
!11434 = !DILocalVariable(name: "dev", arg: 1, scope: !11432, file: !1838, line: 227, type: !1744)
!11435 = !DILocalVariable(name: "databits", arg: 2, scope: !11432, file: !1838, line: 228, type: !113)
!11436 = !DILocalVariable(name: "config", scope: !11432, file: !1838, line: 230, type: !11031)
!11437 = !DILocation(line: 0, scope: !11432)
!11438 = !DILocation(line: 230, column: 48, scope: !11432)
!11439 = !DILocation(line: 232, column: 32, scope: !11432)
!11440 = !DILocation(line: 232, column: 2, scope: !11432)
!11441 = !DILocation(line: 233, column: 1, scope: !11432)
!11442 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1838, file: !1838, line: 242, type: !11411, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11443)
!11443 = !{!11444, !11445, !11446}
!11444 = !DILocalVariable(name: "dev", arg: 1, scope: !11442, file: !1838, line: 242, type: !1744)
!11445 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11442, file: !1838, line: 243, type: !113)
!11446 = !DILocalVariable(name: "config", scope: !11442, file: !1838, line: 245, type: !11031)
!11447 = !DILocation(line: 0, scope: !11442)
!11448 = !DILocation(line: 245, column: 48, scope: !11442)
!11449 = !DILocation(line: 247, column: 33, scope: !11442)
!11450 = !DILocation(line: 247, column: 2, scope: !11442)
!11451 = !DILocation(line: 248, column: 1, scope: !11442)
!11452 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1838, file: !1838, line: 107, type: !11411, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11453)
!11453 = !{!11454, !11455, !11456, !11457, !11458}
!11454 = !DILocalVariable(name: "dev", arg: 1, scope: !11452, file: !1838, line: 107, type: !1744)
!11455 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11452, file: !1838, line: 107, type: !113)
!11456 = !DILocalVariable(name: "config", scope: !11452, file: !1838, line: 109, type: !11031)
!11457 = !DILocalVariable(name: "data", scope: !11452, file: !1838, line: 110, type: !11154)
!11458 = !DILocalVariable(name: "clock_rate", scope: !11452, file: !1838, line: 112, type: !113)
!11459 = !DILocation(line: 0, scope: !11452)
!11460 = !DILocation(line: 109, column: 48, scope: !11452)
!11461 = !DILocation(line: 110, column: 38, scope: !11452)
!11462 = !DILocation(line: 112, column: 2, scope: !11452)
!11463 = !DILocation(line: 123, column: 36, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11465, file: !1838, line: 123, column: 7)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !1838, line: 122, column: 9)
!11466 = distinct !DILexicalBlock(scope: !11452, file: !1838, line: 115, column: 6)
!11467 = !DILocation(line: 124, column: 42, scope: !11464)
!11468 = !DILocation(line: 123, column: 7, scope: !11464)
!11469 = !DILocation(line: 125, column: 22, scope: !11464)
!11470 = !DILocation(line: 123, column: 7, scope: !11465)
!11471 = !DILocation(line: 126, column: 4, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11473, file: !1838, line: 126, column: 4)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !1838, line: 126, column: 4)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !1838, line: 126, column: 4)
!11475 = distinct !DILexicalBlock(scope: !11476, file: !1838, line: 126, column: 4)
!11476 = distinct !DILexicalBlock(scope: !11464, file: !1838, line: 125, column: 27)
!11477 = !DILocation(line: 127, column: 4, scope: !11476)
!11478 = !DILocation(line: 176, column: 36, scope: !11452)
!11479 = !DILocation(line: 176, column: 3, scope: !11452)
!11480 = !DILocation(line: 179, column: 32, scope: !11452)
!11481 = !DILocation(line: 180, column: 10, scope: !11452)
!11482 = !DILocation(line: 179, column: 3, scope: !11452)
!11483 = !DILocation(line: 195, column: 1, scope: !11452)
!11484 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11340, file: !11340, line: 409, type: !11403, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11485)
!11485 = !{!11486}
!11486 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11484, file: !11340, line: 409, type: !1785)
!11487 = !DILocation(line: 0, scope: !11484)
!11488 = !DILocation(line: 411, column: 3, scope: !11484)
!11489 = !DILocation(line: 412, column: 1, scope: !11484)
!11490 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1258, file: !1258, line: 216, type: !1818, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11491)
!11491 = !{!11492, !11493, !11494, !11495}
!11492 = !DILocalVariable(name: "dev", arg: 1, scope: !11490, file: !1258, line: 216, type: !1744)
!11493 = !DILocalVariable(name: "sys", arg: 2, scope: !11490, file: !1258, line: 217, type: !1333)
!11494 = !DILocalVariable(name: "rate", arg: 3, scope: !11490, file: !1258, line: 218, type: !1289)
!11495 = !DILocalVariable(name: "api", scope: !11490, file: !1258, line: 220, type: !1796)
!11496 = !DILocation(line: 0, scope: !11490)
!11497 = !DILocation(line: 221, column: 49, scope: !11490)
!11498 = !DILocation(line: 223, column: 11, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11490, file: !1258, line: 223, column: 6)
!11500 = !DILocation(line: 223, column: 20, scope: !11499)
!11501 = !DILocation(line: 223, column: 6, scope: !11490)
!11502 = !DILocation(line: 227, column: 9, scope: !11490)
!11503 = !DILocation(line: 227, column: 2, scope: !11490)
!11504 = !DILocation(line: 228, column: 1, scope: !11490)
!11505 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3667, file: !3667, line: 175, type: !3668, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11506)
!11506 = !{!11507}
!11507 = !DILocalVariable(name: "level", arg: 1, scope: !11505, file: !3667, line: 175, type: !108)
!11508 = !DILocation(line: 0, scope: !11505)
!11509 = !DILocation(line: 177, column: 2, scope: !11505)
!11510 = !DILocation(line: 189, column: 1, scope: !11505)
!11511 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11340, file: !11340, line: 614, type: !11512, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11514)
!11512 = !DISubroutineType(types: !11513)
!11513 = !{null, !1785, !113}
!11514 = !{!11515, !11516}
!11515 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11511, file: !11340, line: 614, type: !1785)
!11516 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11511, file: !11340, line: 614, type: !113)
!11517 = !DILocation(line: 0, scope: !11511)
!11518 = !DILocation(line: 616, column: 3, scope: !11511)
!11519 = !DILocation(line: 617, column: 1, scope: !11511)
!11520 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11340, file: !11340, line: 1019, type: !11521, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11523)
!11521 = !DISubroutineType(types: !11522)
!11522 = !{null, !1785, !113, !113, !113}
!11523 = !{!11524, !11525, !11526, !11527}
!11524 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11520, file: !11340, line: 1019, type: !1785)
!11525 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11520, file: !11340, line: 1019, type: !113)
!11526 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11520, file: !11340, line: 1019, type: !113)
!11527 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11520, file: !11340, line: 1020, type: !113)
!11528 = !DILocation(line: 0, scope: !11520)
!11529 = !DILocation(line: 1028, column: 30, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !11340, line: 1027, column: 3)
!11531 = distinct !DILexicalBlock(scope: !11520, file: !11340, line: 1022, column: 7)
!11532 = !DILocation(line: 1028, column: 19, scope: !11530)
!11533 = !DILocation(line: 1028, column: 13, scope: !11530)
!11534 = !DILocation(line: 1028, column: 17, scope: !11530)
!11535 = !DILocation(line: 1030, column: 1, scope: !11520)
!11536 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11340, file: !11340, line: 948, type: !11512, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11537)
!11537 = !{!11538, !11539}
!11538 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11536, file: !11340, line: 948, type: !1785)
!11539 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11536, file: !11340, line: 948, type: !113)
!11540 = !DILocation(line: 0, scope: !11536)
!11541 = !DILocation(line: 950, column: 3, scope: !11536)
!11542 = !DILocation(line: 951, column: 1, scope: !11536)
!11543 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11340, file: !11340, line: 587, type: !11512, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11544)
!11544 = !{!11545, !11546}
!11545 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11543, file: !11340, line: 587, type: !1785)
!11546 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11543, file: !11340, line: 587, type: !113)
!11547 = !DILocation(line: 0, scope: !11543)
!11548 = !DILocation(line: 589, column: 3, scope: !11543)
!11549 = !DILocation(line: 590, column: 1, scope: !11543)
!11550 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11340, file: !11340, line: 804, type: !11512, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11551)
!11551 = !{!11552, !11553}
!11552 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11550, file: !11340, line: 804, type: !1785)
!11553 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11550, file: !11340, line: 804, type: !113)
!11554 = !DILocation(line: 0, scope: !11550)
!11555 = !DILocation(line: 806, column: 3, scope: !11550)
!11556 = !DILocation(line: 807, column: 1, scope: !11550)
!11557 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11340, file: !11340, line: 531, type: !11512, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11558)
!11558 = !{!11559, !11560}
!11559 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11557, file: !11340, line: 531, type: !1785)
!11560 = !DILocalVariable(name: "Parity", arg: 2, scope: !11557, file: !11340, line: 531, type: !113)
!11561 = !DILocation(line: 0, scope: !11557)
!11562 = !DILocation(line: 533, column: 3, scope: !11557)
!11563 = !DILocation(line: 534, column: 1, scope: !11557)
!11564 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11340, file: !11340, line: 1769, type: !11341, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11565)
!11565 = !{!11566}
!11566 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11564, file: !11340, line: 1769, type: !1785)
!11567 = !DILocation(line: 0, scope: !11564)
!11568 = !DILocation(line: 1771, column: 11, scope: !11564)
!11569 = !DILocation(line: 1771, column: 46, scope: !11564)
!11570 = !DILocation(line: 1771, column: 3, scope: !11564)
!11571 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11340, file: !11340, line: 1736, type: !11341, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11572)
!11572 = !{!11573}
!11573 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11571, file: !11340, line: 1736, type: !1785)
!11574 = !DILocation(line: 0, scope: !11571)
!11575 = !DILocation(line: 1738, column: 11, scope: !11571)
!11576 = !DILocation(line: 1738, column: 3, scope: !11571)
!11577 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11340, file: !11340, line: 1747, type: !11341, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11578)
!11578 = !{!11579}
!11579 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11577, file: !11340, line: 1747, type: !1785)
!11580 = !DILocation(line: 0, scope: !11577)
!11581 = !DILocation(line: 1749, column: 11, scope: !11577)
!11582 = !DILocation(line: 1749, column: 45, scope: !11577)
!11583 = !DILocation(line: 1749, column: 3, scope: !11577)
!11584 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11340, file: !11340, line: 1826, type: !11341, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11585)
!11585 = !{!11586}
!11586 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11584, file: !11340, line: 1826, type: !1785)
!11587 = !DILocation(line: 0, scope: !11584)
!11588 = !DILocation(line: 1828, column: 11, scope: !11584)
!11589 = !DILocation(line: 1828, column: 46, scope: !11584)
!11590 = !DILocation(line: 1828, column: 3, scope: !11584)
!11591 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11340, file: !11340, line: 1991, type: !11403, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11592)
!11592 = !{!11593}
!11593 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11591, file: !11340, line: 1991, type: !1785)
!11594 = !DILocation(line: 0, scope: !11591)
!11595 = !DILocation(line: 1993, column: 3, scope: !11591)
!11596 = !DILocation(line: 1994, column: 1, scope: !11591)
!11597 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11340, file: !11340, line: 1933, type: !11403, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11598)
!11598 = !{!11599, !11600}
!11599 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11597, file: !11340, line: 1933, type: !1785)
!11600 = !DILocalVariable(name: "tmpreg", scope: !11597, file: !11340, line: 1935, type: !568)
!11601 = !DILocation(line: 0, scope: !11597)
!11602 = !DILocation(line: 1935, column: 3, scope: !11597)
!11603 = !DILocation(line: 1935, column: 17, scope: !11597)
!11604 = !DILocation(line: 1936, column: 20, scope: !11597)
!11605 = !DILocation(line: 1936, column: 10, scope: !11597)
!11606 = !DILocation(line: 1937, column: 10, scope: !11597)
!11607 = !DILocation(line: 1938, column: 20, scope: !11597)
!11608 = !DILocation(line: 1938, column: 10, scope: !11597)
!11609 = !DILocation(line: 1939, column: 10, scope: !11597)
!11610 = !DILocation(line: 1940, column: 1, scope: !11597)
!11611 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11340, file: !11340, line: 1876, type: !11403, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11612)
!11612 = !{!11613, !11614}
!11613 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11611, file: !11340, line: 1876, type: !1785)
!11614 = !DILocalVariable(name: "tmpreg", scope: !11611, file: !11340, line: 1878, type: !568)
!11615 = !DILocation(line: 0, scope: !11611)
!11616 = !DILocation(line: 1878, column: 3, scope: !11611)
!11617 = !DILocation(line: 1878, column: 17, scope: !11611)
!11618 = !DILocation(line: 1879, column: 20, scope: !11611)
!11619 = !DILocation(line: 1879, column: 10, scope: !11611)
!11620 = !DILocation(line: 1880, column: 10, scope: !11611)
!11621 = !DILocation(line: 1881, column: 20, scope: !11611)
!11622 = !DILocation(line: 1881, column: 10, scope: !11611)
!11623 = !DILocation(line: 1882, column: 10, scope: !11611)
!11624 = !DILocation(line: 1883, column: 1, scope: !11611)
!11625 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11340, file: !11340, line: 1895, type: !11403, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11626)
!11626 = !{!11627, !11628}
!11627 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11625, file: !11340, line: 1895, type: !1785)
!11628 = !DILocalVariable(name: "tmpreg", scope: !11625, file: !11340, line: 1897, type: !568)
!11629 = !DILocation(line: 0, scope: !11625)
!11630 = !DILocation(line: 1897, column: 3, scope: !11625)
!11631 = !DILocation(line: 1897, column: 17, scope: !11625)
!11632 = !DILocation(line: 1898, column: 20, scope: !11625)
!11633 = !DILocation(line: 1898, column: 10, scope: !11625)
!11634 = !DILocation(line: 1899, column: 10, scope: !11625)
!11635 = !DILocation(line: 1900, column: 20, scope: !11625)
!11636 = !DILocation(line: 1900, column: 10, scope: !11625)
!11637 = !DILocation(line: 1901, column: 10, scope: !11625)
!11638 = !DILocation(line: 1902, column: 1, scope: !11625)
!11639 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11340, file: !11340, line: 1914, type: !11403, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11640)
!11640 = !{!11641, !11642}
!11641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11639, file: !11340, line: 1914, type: !1785)
!11642 = !DILocalVariable(name: "tmpreg", scope: !11639, file: !11340, line: 1916, type: !568)
!11643 = !DILocation(line: 0, scope: !11639)
!11644 = !DILocation(line: 1916, column: 3, scope: !11639)
!11645 = !DILocation(line: 1916, column: 17, scope: !11639)
!11646 = !DILocation(line: 1917, column: 20, scope: !11639)
!11647 = !DILocation(line: 1917, column: 10, scope: !11639)
!11648 = !DILocation(line: 1918, column: 10, scope: !11639)
!11649 = !DILocation(line: 1919, column: 20, scope: !11639)
!11650 = !DILocation(line: 1919, column: 10, scope: !11639)
!11651 = !DILocation(line: 1920, column: 10, scope: !11639)
!11652 = !DILocation(line: 1921, column: 1, scope: !11639)
!11653 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11340, file: !11340, line: 1813, type: !11341, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11654)
!11654 = !{!11655}
!11655 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11653, file: !11340, line: 1813, type: !1785)
!11656 = !DILocation(line: 0, scope: !11653)
!11657 = !DILocation(line: 1815, column: 11, scope: !11653)
!11658 = !DILocation(line: 1815, column: 46, scope: !11653)
!11659 = !DILocation(line: 1815, column: 3, scope: !11653)
!11660 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11340, file: !11340, line: 2425, type: !11661, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11663)
!11661 = !DISubroutineType(types: !11662)
!11662 = !{null, !1785, !164}
!11663 = !{!11664, !11665}
!11664 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11660, file: !11340, line: 2425, type: !1785)
!11665 = !DILocalVariable(name: "Value", arg: 2, scope: !11660, file: !11340, line: 2425, type: !164)
!11666 = !DILocation(line: 0, scope: !11660)
!11667 = !DILocation(line: 2427, column: 16, scope: !11660)
!11668 = !DILocation(line: 2427, column: 11, scope: !11660)
!11669 = !DILocation(line: 2427, column: 14, scope: !11660)
!11670 = !DILocation(line: 2428, column: 1, scope: !11660)
!11671 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11340, file: !11340, line: 1791, type: !11341, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11672)
!11672 = !{!11673}
!11673 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11671, file: !11340, line: 1791, type: !1785)
!11674 = !DILocation(line: 0, scope: !11671)
!11675 = !DILocation(line: 1793, column: 11, scope: !11671)
!11676 = !DILocation(line: 1793, column: 47, scope: !11671)
!11677 = !DILocation(line: 1793, column: 3, scope: !11671)
!11678 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11340, file: !11340, line: 2402, type: !11679, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11681)
!11679 = !DISubroutineType(types: !11680)
!11680 = !{!164, !1785}
!11681 = !{!11682}
!11682 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11678, file: !11340, line: 2402, type: !1785)
!11683 = !DILocation(line: 0, scope: !11678)
!11684 = !DILocation(line: 2404, column: 20, scope: !11678)
!11685 = !DILocation(line: 2404, column: 10, scope: !11678)
!11686 = !DILocation(line: 2404, column: 3, scope: !11678)
!11687 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1838, file: !1838, line: 1583, type: !1765, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11688)
!11688 = !{!11689, !11690, !11691, !11692, !11693, !11694}
!11689 = !DILocalVariable(name: "dev", arg: 1, scope: !11687, file: !1838, line: 1583, type: !1744)
!11690 = !DILocalVariable(name: "config", scope: !11687, file: !1838, line: 1585, type: !11031)
!11691 = !DILocalVariable(name: "data", scope: !11687, file: !1838, line: 1586, type: !11154)
!11692 = !DILocalVariable(name: "ll_parity", scope: !11687, file: !1838, line: 1587, type: !113)
!11693 = !DILocalVariable(name: "ll_datawidth", scope: !11687, file: !1838, line: 1588, type: !113)
!11694 = !DILocalVariable(name: "err", scope: !11687, file: !1838, line: 1589, type: !108)
!11695 = !DILocation(line: 0, scope: !11687)
!11696 = !DILocation(line: 1585, column: 48, scope: !11687)
!11697 = !DILocation(line: 1586, column: 38, scope: !11687)
!11698 = !DILocation(line: 1591, column: 2, scope: !11687)
!11699 = !DILocation(line: 1593, column: 29, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11687, file: !1838, line: 1593, column: 6)
!11701 = !DILocation(line: 1593, column: 7, scope: !11700)
!11702 = !DILocation(line: 1593, column: 6, scope: !11687)
!11703 = !DILocation(line: 1594, column: 3, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !1838, line: 1594, column: 3)
!11705 = distinct !DILexicalBlock(scope: !11706, file: !1838, line: 1594, column: 3)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !1838, line: 1594, column: 3)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !1838, line: 1594, column: 3)
!11708 = distinct !DILexicalBlock(scope: !11700, file: !1838, line: 1593, column: 37)
!11709 = !DILocation(line: 1595, column: 3, scope: !11708)
!11710 = !DILocation(line: 1599, column: 31, scope: !11687)
!11711 = !DILocation(line: 1599, column: 71, scope: !11687)
!11712 = !DILocation(line: 1599, column: 8, scope: !11687)
!11713 = !DILocation(line: 1600, column: 10, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11687, file: !1838, line: 1600, column: 6)
!11715 = !DILocation(line: 1600, column: 6, scope: !11687)
!11716 = !DILocation(line: 1601, column: 3, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11718, file: !1838, line: 1601, column: 3)
!11718 = distinct !DILexicalBlock(scope: !11719, file: !1838, line: 1601, column: 3)
!11719 = distinct !DILexicalBlock(scope: !11720, file: !1838, line: 1601, column: 3)
!11720 = distinct !DILexicalBlock(scope: !11721, file: !1838, line: 1601, column: 3)
!11721 = distinct !DILexicalBlock(scope: !11714, file: !1838, line: 1600, column: 16)
!11722 = !DILocation(line: 1602, column: 3, scope: !11721)
!11723 = !DILocation(line: 1616, column: 36, scope: !11687)
!11724 = !DILocation(line: 1616, column: 8, scope: !11687)
!11725 = !DILocation(line: 1617, column: 10, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11687, file: !1838, line: 1617, column: 6)
!11727 = !DILocation(line: 1617, column: 6, scope: !11687)
!11728 = !DILocation(line: 1621, column: 27, scope: !11687)
!11729 = !DILocation(line: 1621, column: 2, scope: !11687)
!11730 = !DILocation(line: 1624, column: 40, scope: !11687)
!11731 = !DILocation(line: 1624, column: 2, scope: !11687)
!11732 = !DILocation(line: 1630, column: 14, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11687, file: !1838, line: 1630, column: 6)
!11734 = !DILocation(line: 1630, column: 6, scope: !11687)
!11735 = !DILocation(line: 1640, column: 4, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11737, file: !1838, line: 1640, column: 4)
!11737 = distinct !DILexicalBlock(scope: !11738, file: !1838, line: 1640, column: 4)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !1838, line: 1640, column: 4)
!11739 = distinct !DILexicalBlock(scope: !11740, file: !1838, line: 1640, column: 4)
!11740 = distinct !DILexicalBlock(scope: !11741, file: !1838, line: 1639, column: 28)
!11741 = distinct !DILexicalBlock(scope: !11742, file: !1838, line: 1639, column: 7)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !1838, line: 1638, column: 9)
!11743 = distinct !DILexicalBlock(scope: !11733, file: !1838, line: 1634, column: 13)
!11744 = !DILocation(line: 0, scope: !11733)
!11745 = !DILocation(line: 1649, column: 35, scope: !11687)
!11746 = !DILocation(line: 1649, column: 2, scope: !11687)
!11747 = !DILocation(line: 1654, column: 14, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11687, file: !1838, line: 1654, column: 6)
!11749 = !DILocation(line: 1654, column: 6, scope: !11687)
!11750 = !DILocation(line: 1655, column: 3, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11748, file: !1838, line: 1654, column: 31)
!11752 = !DILocation(line: 1656, column: 2, scope: !11751)
!11753 = !DILocation(line: 1659, column: 37, scope: !11687)
!11754 = !DILocation(line: 1659, column: 2, scope: !11687)
!11755 = !DILocation(line: 1662, column: 14, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11687, file: !1838, line: 1662, column: 6)
!11757 = !DILocation(line: 1662, column: 6, scope: !11687)
!11758 = !DILocation(line: 1663, column: 37, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11756, file: !1838, line: 1662, column: 27)
!11760 = !DILocation(line: 1663, column: 3, scope: !11759)
!11761 = !DILocation(line: 1664, column: 2, scope: !11759)
!11762 = !DILocation(line: 1684, column: 26, scope: !11687)
!11763 = !DILocation(line: 1684, column: 2, scope: !11687)
!11764 = !DILocation(line: 1722, column: 2, scope: !11687)
!11765 = !DILocation(line: 1724, column: 1, scope: !11687)
!11766 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1838, file: !1838, line: 651, type: !11767, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11769)
!11767 = !DISubroutineType(types: !11768)
!11768 = !{null, !1744}
!11769 = !{!11770, !11771, !11772}
!11770 = !DILocalVariable(name: "dev", arg: 1, scope: !11766, file: !1838, line: 651, type: !1744)
!11771 = !DILocalVariable(name: "data", scope: !11766, file: !1838, line: 653, type: !11154)
!11772 = !DILocalVariable(name: "clk", scope: !11766, file: !1838, line: 654, type: !11773)
!11773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1744)
!11774 = !DILocation(line: 0, scope: !11766)
!11775 = !DILocation(line: 653, column: 38, scope: !11766)
!11776 = !DILocation(line: 656, column: 8, scope: !11766)
!11777 = !DILocation(line: 656, column: 14, scope: !11766)
!11778 = !DILocation(line: 657, column: 1, scope: !11766)
!11779 = distinct !DISubprogram(name: "device_is_ready", scope: !8858, file: !8858, line: 47, type: !11780, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{!422, !1744}
!11782 = !{!11783}
!11783 = !DILocalVariable(name: "dev", arg: 1, scope: !11779, file: !8858, line: 47, type: !1744)
!11784 = !DILocation(line: 0, scope: !11779)
!11785 = !DILocation(line: 55, column: 2, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11779, file: !8858, line: 55, column: 2)
!11787 = !{i64 2152509865}
!11788 = !DILocation(line: 56, column: 9, scope: !11779)
!11789 = !DILocation(line: 56, column: 2, scope: !11779)
!11790 = distinct !DISubprogram(name: "clock_control_on", scope: !1258, file: !1258, line: 123, type: !1803, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11791)
!11791 = !{!11792, !11793, !11794}
!11792 = !DILocalVariable(name: "dev", arg: 1, scope: !11790, file: !1258, line: 123, type: !1744)
!11793 = !DILocalVariable(name: "sys", arg: 2, scope: !11790, file: !1258, line: 124, type: !1333)
!11794 = !DILocalVariable(name: "api", scope: !11790, file: !1258, line: 126, type: !1796)
!11795 = !DILocation(line: 0, scope: !11790)
!11796 = !DILocation(line: 127, column: 49, scope: !11790)
!11797 = !DILocation(line: 129, column: 14, scope: !11790)
!11798 = !DILocation(line: 129, column: 9, scope: !11790)
!11799 = !DILocation(line: 129, column: 2, scope: !11790)
!11800 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1883, file: !1883, line: 342, type: !11801, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11803)
!11801 = !DISubroutineType(types: !11802)
!11802 = !{!108, !1880, !164}
!11803 = !{!11804, !11805, !11806, !11807}
!11804 = !DILocalVariable(name: "config", arg: 1, scope: !11800, file: !1883, line: 342, type: !1880)
!11805 = !DILocalVariable(name: "id", arg: 2, scope: !11800, file: !1883, line: 343, type: !164)
!11806 = !DILocalVariable(name: "ret", scope: !11800, file: !1883, line: 345, type: !108)
!11807 = !DILocalVariable(name: "state", scope: !11800, file: !1883, line: 346, type: !1886)
!11808 = !DILocation(line: 0, scope: !11800)
!11809 = !DILocation(line: 346, column: 2, scope: !11800)
!11810 = !DILocation(line: 348, column: 8, scope: !11800)
!11811 = !DILocation(line: 349, column: 10, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11800, file: !1883, line: 349, column: 6)
!11813 = !DILocation(line: 349, column: 6, scope: !11800)
!11814 = !DILocation(line: 353, column: 44, scope: !11800)
!11815 = !DILocation(line: 353, column: 9, scope: !11800)
!11816 = !DILocation(line: 353, column: 2, scope: !11800)
!11817 = !DILocation(line: 354, column: 1, scope: !11800)
!11818 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11340, file: !11340, line: 496, type: !11512, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11819)
!11819 = !{!11820, !11821}
!11820 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11818, file: !11340, line: 496, type: !1785)
!11821 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11818, file: !11340, line: 496, type: !113)
!11822 = !DILocation(line: 0, scope: !11818)
!11823 = !DILocation(line: 498, column: 3, scope: !11818)
!11824 = !DILocation(line: 499, column: 1, scope: !11818)
!11825 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11340, file: !11340, line: 849, type: !11521, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11826)
!11826 = !{!11827, !11828, !11829, !11830}
!11827 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11825, file: !11340, line: 849, type: !1785)
!11828 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11825, file: !11340, line: 849, type: !113)
!11829 = !DILocalVariable(name: "Parity", arg: 3, scope: !11825, file: !11340, line: 849, type: !113)
!11830 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11825, file: !11340, line: 850, type: !113)
!11831 = !DILocation(line: 0, scope: !11825)
!11832 = !DILocation(line: 852, column: 3, scope: !11825)
!11833 = !DILocation(line: 853, column: 3, scope: !11825)
!11834 = !DILocation(line: 854, column: 1, scope: !11825)
!11835 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11340, file: !11340, line: 1336, type: !11403, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11836)
!11836 = !{!11837}
!11837 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11835, file: !11340, line: 1336, type: !1785)
!11838 = !DILocation(line: 0, scope: !11835)
!11839 = !DILocation(line: 1338, column: 3, scope: !11835)
!11840 = !DILocation(line: 1339, column: 1, scope: !11835)
!11841 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1883, file: !1883, line: 316, type: !11842, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11844)
!11842 = !DISubroutineType(types: !11843)
!11843 = !{!108, !1880, !1886}
!11844 = !{!11845, !11846, !11847}
!11845 = !DILocalVariable(name: "config", arg: 1, scope: !11841, file: !1883, line: 317, type: !1880)
!11846 = !DILocalVariable(name: "state", arg: 2, scope: !11841, file: !1883, line: 318, type: !1886)
!11847 = !DILocalVariable(name: "reg", scope: !11841, file: !1883, line: 320, type: !22)
!11848 = !DILocation(line: 0, scope: !11841)
!11849 = !DILocation(line: 329, column: 39, scope: !11841)
!11850 = !DILocation(line: 329, column: 52, scope: !11841)
!11851 = !DILocation(line: 329, column: 9, scope: !11841)
!11852 = !DILocation(line: 329, column: 2, scope: !11841)
!11853 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11780, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !11854)
!11854 = !{!11855}
!11855 = !DILocalVariable(name: "dev", arg: 1, scope: !11853, file: !411, line: 730, type: !1744)
!11856 = !DILocation(line: 0, scope: !11853)
!11857 = !DILocation(line: 732, column: 9, scope: !11853)
!11858 = !DILocation(line: 732, column: 2, scope: !11853)
!11859 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2018, file: !2018, line: 270, type: !2024, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !11860)
!11860 = !{!11861}
!11861 = !DILocalVariable(name: "dev", arg: 1, scope: !11859, file: !2018, line: 270, type: !2026)
!11862 = !DILocation(line: 0, scope: !11859)
!11863 = !DILocation(line: 274, column: 2, scope: !11859)
!11864 = !DILocation(line: 275, column: 12, scope: !11859)
!11865 = !DILocation(line: 276, column: 15, scope: !11859)
!11866 = !DILocation(line: 277, column: 16, scope: !11859)
!11867 = !DILocation(line: 278, column: 15, scope: !11859)
!11868 = !DILocation(line: 279, column: 16, scope: !11859)
!11869 = !DILocation(line: 282, column: 2, scope: !11859)
!11870 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !799, file: !799, line: 1638, type: !7066, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !11871)
!11871 = !{!11872, !11873}
!11872 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11870, file: !799, line: 1638, type: !1246)
!11873 = !DILocalVariable(name: "priority", arg: 2, scope: !11870, file: !799, line: 1638, type: !113)
!11874 = !DILocation(line: 0, scope: !11870)
!11875 = !DILocation(line: 1646, column: 46, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11877, file: !799, line: 1645, column: 3)
!11877 = distinct !DILexicalBlock(scope: !11870, file: !799, line: 1640, column: 7)
!11878 = !DILocation(line: 1648, column: 1, scope: !11870)
!11879 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2018, file: !2018, line: 118, type: !6969, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !11880)
!11880 = !{!11881, !11882}
!11881 = !DILocalVariable(name: "arg", arg: 1, scope: !11879, file: !2018, line: 118, type: !104)
!11882 = !DILocalVariable(name: "dticks", scope: !11879, file: !2018, line: 121, type: !113)
!11883 = !DILocation(line: 0, scope: !11879)
!11884 = !DILocation(line: 124, column: 2, scope: !11879)
!11885 = !DILocation(line: 129, column: 17, scope: !11879)
!11886 = !DILocation(line: 129, column: 14, scope: !11879)
!11887 = !DILocation(line: 130, column: 15, scope: !11879)
!11888 = !DILocation(line: 145, column: 27, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11890, file: !2018, line: 132, column: 16)
!11890 = distinct !DILexicalBlock(scope: !11879, file: !2018, line: 132, column: 6)
!11891 = !DILocation(line: 145, column: 25, scope: !11889)
!11892 = !DILocation(line: 145, column: 45, scope: !11889)
!11893 = !DILocation(line: 146, column: 30, scope: !11889)
!11894 = !DILocation(line: 146, column: 20, scope: !11889)
!11895 = !DILocation(line: 147, column: 3, scope: !11889)
!11896 = !DILocation(line: 151, column: 2, scope: !11879)
!11897 = !DILocation(line: 152, column: 1, scope: !11879)
!11898 = distinct !DISubprogram(name: "elapsed", scope: !2018, file: !2018, line: 85, type: !8003, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !11899)
!11899 = !{!11900, !11901, !11902}
!11900 = !DILocalVariable(name: "val1", scope: !11898, file: !2018, line: 87, type: !113)
!11901 = !DILocalVariable(name: "ctrl", scope: !11898, file: !2018, line: 88, type: !113)
!11902 = !DILocalVariable(name: "val2", scope: !11898, file: !2018, line: 89, type: !113)
!11903 = !DILocation(line: 87, column: 27, scope: !11898)
!11904 = !DILocation(line: 0, scope: !11898)
!11905 = !DILocation(line: 88, column: 27, scope: !11898)
!11906 = !DILocation(line: 89, column: 27, scope: !11898)
!11907 = !DILocation(line: 105, column: 12, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11898, file: !2018, line: 105, column: 6)
!11909 = !DILocation(line: 106, column: 6, scope: !11908)
!11910 = !DILocation(line: 107, column: 16, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11908, file: !2018, line: 106, column: 24)
!11912 = !DILocation(line: 111, column: 18, scope: !11911)
!11913 = !DILocation(line: 112, column: 2, scope: !11911)
!11914 = !DILocation(line: 114, column: 20, scope: !11898)
!11915 = !DILocation(line: 114, column: 30, scope: !11898)
!11916 = !DILocation(line: 114, column: 28, scope: !11898)
!11917 = !DILocation(line: 114, column: 2, scope: !11898)
!11918 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2018, file: !2018, line: 154, type: !11919, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !11921)
!11919 = !DISubroutineType(types: !11920)
!11920 = !{null, !220, !422}
!11921 = !{!11922, !11923, !11924, !11925, !11926, !11927, !11928, !11933, !11934}
!11922 = !DILocalVariable(name: "ticks", arg: 1, scope: !11918, file: !2018, line: 154, type: !220)
!11923 = !DILocalVariable(name: "idle", arg: 2, scope: !11918, file: !2018, line: 154, type: !422)
!11924 = !DILocalVariable(name: "delay", scope: !11918, file: !2018, line: 169, type: !113)
!11925 = !DILocalVariable(name: "val1", scope: !11918, file: !2018, line: 170, type: !113)
!11926 = !DILocalVariable(name: "val2", scope: !11918, file: !2018, line: 170, type: !113)
!11927 = !DILocalVariable(name: "last_load_", scope: !11918, file: !2018, line: 171, type: !113)
!11928 = !DILocalVariable(name: "key", scope: !11918, file: !2018, line: 176, type: !11929)
!11929 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !11930)
!11930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !11931)
!11931 = !{!11932}
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11930, file: !436, line: 33, baseType: !108, size: 32)
!11933 = !DILocalVariable(name: "pending", scope: !11918, file: !2018, line: 178, type: !113)
!11934 = !DILocalVariable(name: "unannounced", scope: !11918, file: !2018, line: 185, type: !113)
!11935 = !DILocation(line: 0, scope: !11918)
!11936 = !DILocation(line: 162, column: 49, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11918, file: !2018, line: 162, column: 6)
!11938 = !DILocation(line: 163, column: 17, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11937, file: !2018, line: 162, column: 78)
!11940 = !DILocation(line: 164, column: 13, scope: !11939)
!11941 = !DILocation(line: 165, column: 3, scope: !11939)
!11942 = !DILocation(line: 171, column: 24, scope: !11918)
!11943 = !DILocation(line: 173, column: 10, scope: !11918)
!11944 = !DILocation(line: 174, column: 10, scope: !11918)
!11945 = !DILocalVariable(name: "l", arg: 1, scope: !11946, file: !436, line: 136, type: !11949)
!11946 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !11947, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !11950)
!11947 = !DISubroutineType(types: !11948)
!11948 = !{!11929, !11949}
!11949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!11950 = !{!11945, !11951}
!11951 = !DILocalVariable(name: "k", scope: !11946, file: !436, line: 139, type: !11929)
!11952 = !DILocation(line: 0, scope: !11946, inlinedAt: !11953)
!11953 = distinct !DILocation(line: 176, column: 25, scope: !11918)
!11954 = !DILocation(line: 55, column: 2, scope: !11955, inlinedAt: !11959)
!11955 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !11956)
!11956 = !{!11957, !11958}
!11957 = !DILocalVariable(name: "key", scope: !11955, file: !4055, line: 44, type: !32)
!11958 = !DILocalVariable(name: "tmp", scope: !11955, file: !4055, line: 53, type: !32)
!11959 = distinct !DILocation(line: 145, column: 10, scope: !11946, inlinedAt: !11953)
!11960 = !{i64 1635949}
!11961 = !DILocation(line: 0, scope: !11955, inlinedAt: !11959)
!11962 = !DILocation(line: 178, column: 21, scope: !11918)
!11963 = !DILocation(line: 180, column: 18, scope: !11918)
!11964 = !DILocation(line: 182, column: 14, scope: !11918)
!11965 = !DILocation(line: 183, column: 15, scope: !11918)
!11966 = !DILocation(line: 185, column: 39, scope: !11918)
!11967 = !DILocation(line: 185, column: 37, scope: !11918)
!11968 = !DILocation(line: 187, column: 27, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11918, file: !2018, line: 187, column: 6)
!11970 = !DILocation(line: 187, column: 6, scope: !11918)
!11971 = !DILocation(line: 202, column: 27, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11969, file: !2018, line: 195, column: 9)
!11973 = !DILocation(line: 202, column: 48, scope: !11972)
!11974 = !DILocation(line: 203, column: 9, scope: !11972)
!11975 = !DILocation(line: 204, column: 11, scope: !11972)
!11976 = !DILocation(line: 205, column: 13, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11972, file: !2018, line: 205, column: 7)
!11978 = !DILocation(line: 205, column: 7, scope: !11972)
!11979 = !DILocation(line: 0, scope: !11969)
!11980 = !DILocation(line: 212, column: 18, scope: !11918)
!11981 = !DILocation(line: 214, column: 28, scope: !11918)
!11982 = !DILocation(line: 214, column: 16, scope: !11918)
!11983 = !DILocation(line: 215, column: 15, scope: !11918)
!11984 = !DILocation(line: 227, column: 11, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11918, file: !2018, line: 227, column: 6)
!11986 = !DILocation(line: 227, column: 6, scope: !11918)
!11987 = !DILocation(line: 228, column: 15, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11985, file: !2018, line: 227, column: 19)
!11989 = !DILocation(line: 228, column: 38, scope: !11988)
!11990 = !DILocation(line: 228, column: 24, scope: !11988)
!11991 = !DILocation(line: 229, column: 2, scope: !11988)
!11992 = !DILocation(line: 230, column: 24, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11985, file: !2018, line: 229, column: 9)
!11994 = !DILocation(line: 230, column: 15, scope: !11993)
!11995 = !DILocation(line: 0, scope: !11985)
!11996 = !DILocalVariable(name: "key", arg: 2, scope: !11997, file: !436, line: 190, type: !11929)
!11997 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !11998, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !12000)
!11998 = !DISubroutineType(types: !11999)
!11999 = !{null, !11949, !11929}
!12000 = !{!12001, !11996}
!12001 = !DILocalVariable(name: "l", arg: 1, scope: !11997, file: !436, line: 189, type: !11949)
!12002 = !DILocation(line: 0, scope: !11997, inlinedAt: !12003)
!12003 = distinct !DILocation(line: 232, column: 2, scope: !11918)
!12004 = !DILocalVariable(name: "key", arg: 1, scope: !12005, file: !4055, line: 84, type: !32)
!12005 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !12006)
!12006 = !{!12004}
!12007 = !DILocation(line: 0, scope: !12005, inlinedAt: !12008)
!12008 = distinct !DILocation(line: 215, column: 2, scope: !11997, inlinedAt: !12003)
!12009 = !DILocation(line: 95, column: 2, scope: !12005, inlinedAt: !12008)
!12010 = !{i64 1636766}
!12011 = !DILocation(line: 234, column: 1, scope: !11918)
!12012 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2018, file: !2018, line: 236, type: !8003, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !12013)
!12013 = !{!12014, !12015}
!12014 = !DILocalVariable(name: "key", scope: !12012, file: !2018, line: 242, type: !11929)
!12015 = !DILocalVariable(name: "cyc", scope: !12012, file: !2018, line: 243, type: !113)
!12016 = !DILocation(line: 0, scope: !11946, inlinedAt: !12017)
!12017 = distinct !DILocation(line: 242, column: 25, scope: !12012)
!12018 = !DILocation(line: 55, column: 2, scope: !11955, inlinedAt: !12019)
!12019 = distinct !DILocation(line: 145, column: 10, scope: !11946, inlinedAt: !12017)
!12020 = !DILocation(line: 0, scope: !11955, inlinedAt: !12019)
!12021 = !DILocation(line: 0, scope: !12012)
!12022 = !DILocation(line: 243, column: 17, scope: !12012)
!12023 = !DILocation(line: 243, column: 29, scope: !12012)
!12024 = !DILocation(line: 243, column: 27, scope: !12012)
!12025 = !DILocation(line: 243, column: 43, scope: !12012)
!12026 = !DILocation(line: 243, column: 41, scope: !12012)
!12027 = !DILocation(line: 0, scope: !11997, inlinedAt: !12028)
!12028 = distinct !DILocation(line: 245, column: 2, scope: !12012)
!12029 = !DILocation(line: 0, scope: !12005, inlinedAt: !12030)
!12030 = distinct !DILocation(line: 215, column: 2, scope: !11997, inlinedAt: !12028)
!12031 = !DILocation(line: 95, column: 2, scope: !12005, inlinedAt: !12030)
!12032 = !DILocation(line: 246, column: 13, scope: !12012)
!12033 = !DILocation(line: 246, column: 2, scope: !12012)
!12034 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2018, file: !2018, line: 249, type: !8003, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !12035)
!12035 = !{!12036, !12037}
!12036 = !DILocalVariable(name: "key", scope: !12034, file: !2018, line: 251, type: !11929)
!12037 = !DILocalVariable(name: "ret", scope: !12034, file: !2018, line: 252, type: !113)
!12038 = !DILocation(line: 0, scope: !11946, inlinedAt: !12039)
!12039 = distinct !DILocation(line: 251, column: 25, scope: !12034)
!12040 = !DILocation(line: 55, column: 2, scope: !11955, inlinedAt: !12041)
!12041 = distinct !DILocation(line: 145, column: 10, scope: !11946, inlinedAt: !12039)
!12042 = !DILocation(line: 0, scope: !11955, inlinedAt: !12041)
!12043 = !DILocation(line: 0, scope: !12034)
!12044 = !DILocation(line: 252, column: 17, scope: !12034)
!12045 = !DILocation(line: 252, column: 29, scope: !12034)
!12046 = !DILocation(line: 252, column: 27, scope: !12034)
!12047 = !DILocation(line: 0, scope: !11997, inlinedAt: !12048)
!12048 = distinct !DILocation(line: 254, column: 2, scope: !12034)
!12049 = !DILocation(line: 0, scope: !12005, inlinedAt: !12050)
!12050 = distinct !DILocation(line: 215, column: 2, scope: !11997, inlinedAt: !12048)
!12051 = !DILocation(line: 95, column: 2, scope: !12005, inlinedAt: !12050)
!12052 = !DILocation(line: 255, column: 2, scope: !12034)
!12053 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2018, file: !2018, line: 258, type: !3381, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !437)
!12054 = !DILocation(line: 260, column: 6, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12053, file: !2018, line: 260, column: 6)
!12056 = !DILocation(line: 260, column: 16, scope: !12055)
!12057 = !DILocation(line: 260, column: 6, scope: !12053)
!12058 = !DILocation(line: 261, column: 17, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12055, file: !2018, line: 260, column: 34)
!12060 = !DILocation(line: 262, column: 2, scope: !12059)
!12061 = !DILocation(line: 263, column: 1, scope: !12053)
!12062 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2018, file: !2018, line: 265, type: !3381, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !437)
!12063 = !DILocation(line: 267, column: 16, scope: !12062)
!12064 = !DILocation(line: 268, column: 1, scope: !12062)
!12065 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12066, file: !12066, line: 9, type: !12067, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !12090)
!12066 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12067 = !DISubroutineType(types: !12068)
!12068 = !{!108, !12069, !164, !12089}
!12069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12070, size: 32)
!12070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12071)
!12071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1883, line: 60, size: 64, elements: !12072)
!12072 = !{!12073, !12088}
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12071, file: !1883, line: 69, baseType: !12074, size: 32)
!12074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12075, size: 32)
!12075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12076)
!12076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1883, line: 50, size: 64, elements: !12077)
!12077 = !{!12078, !12086, !12087}
!12078 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12076, file: !1883, line: 52, baseType: !12079, size: 32)
!12079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12080, size: 32)
!12080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12081)
!12081 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1894, line: 37, baseType: !12082)
!12082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1894, line: 32, size: 64, elements: !12083)
!12083 = !{!12084, !12085}
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12082, file: !1894, line: 34, baseType: !113, size: 32)
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12082, file: !1894, line: 36, baseType: !113, size: 32, offset: 32)
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12076, file: !1883, line: 54, baseType: !164, size: 8, offset: 32)
!12087 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12076, file: !1883, line: 56, baseType: !164, size: 8, offset: 40)
!12088 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12071, file: !1883, line: 71, baseType: !164, size: 8, offset: 32)
!12089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12074, size: 32)
!12090 = !{!12091, !12092, !12093}
!12091 = !DILocalVariable(name: "config", arg: 1, scope: !12065, file: !12066, line: 9, type: !12069)
!12092 = !DILocalVariable(name: "id", arg: 2, scope: !12065, file: !12066, line: 9, type: !164)
!12093 = !DILocalVariable(name: "state", arg: 3, scope: !12065, file: !12066, line: 10, type: !12089)
!12094 = !DILocation(line: 0, scope: !12065)
!12095 = !DILocation(line: 12, column: 20, scope: !12065)
!12096 = !DILocation(line: 13, column: 27, scope: !12065)
!12097 = !DILocation(line: 13, column: 42, scope: !12065)
!12098 = !DILocation(line: 13, column: 19, scope: !12065)
!12099 = !DILocation(line: 13, column: 16, scope: !12065)
!12100 = !DILocation(line: 13, column: 2, scope: !12065)
!12101 = distinct !{!12101, !12100, !12102}
!12102 = !DILocation(line: 19, column: 2, scope: !12065)
!12103 = !DILocation(line: 14, column: 23, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !12066, line: 14, column: 7)
!12105 = distinct !DILexicalBlock(scope: !12065, file: !12066, line: 13, column: 54)
!12106 = !DILocation(line: 14, column: 10, scope: !12104)
!12107 = !DILocation(line: 18, column: 11, scope: !12105)
!12108 = !DILocation(line: 14, column: 7, scope: !12105)
!12109 = !DILocation(line: 22, column: 1, scope: !12065)
!12110 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2134, file: !2134, line: 193, type: !12111, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2053, retainedNodes: !12120)
!12111 = !DISubroutineType(types: !12112)
!12112 = !{!108, !12113, !164, !22}
!12113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12114, size: 32)
!12114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12115)
!12115 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1894, line: 37, baseType: !12116)
!12116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1894, line: 32, size: 64, elements: !12117)
!12117 = !{!12118, !12119}
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12116, file: !1894, line: 34, baseType: !113, size: 32)
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12116, file: !1894, line: 36, baseType: !113, size: 32, offset: 32)
!12120 = !{!12121, !12122, !12123, !12124, !12125, !12126, !12127, !12128, !12130}
!12121 = !DILocalVariable(name: "pins", arg: 1, scope: !12110, file: !2134, line: 193, type: !12113)
!12122 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12110, file: !2134, line: 193, type: !164)
!12123 = !DILocalVariable(name: "reg", arg: 3, scope: !12110, file: !2134, line: 194, type: !22)
!12124 = !DILocalVariable(name: "pin", scope: !12110, file: !2134, line: 196, type: !113)
!12125 = !DILocalVariable(name: "mux", scope: !12110, file: !2134, line: 196, type: !113)
!12126 = !DILocalVariable(name: "pin_cgf", scope: !12110, file: !2134, line: 197, type: !113)
!12127 = !DILocalVariable(name: "ret", scope: !12110, file: !2134, line: 198, type: !108)
!12128 = !DILocalVariable(name: "i", scope: !12129, file: !2134, line: 209, type: !164)
!12129 = distinct !DILexicalBlock(scope: !12110, file: !2134, line: 209, column: 2)
!12130 = !DILocalVariable(name: "gpio_out", scope: !12131, file: !2134, line: 239, type: !113)
!12131 = distinct !DILexicalBlock(scope: !12132, file: !2134, line: 238, column: 55)
!12132 = distinct !DILexicalBlock(scope: !12133, file: !2134, line: 238, column: 14)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !2134, line: 236, column: 14)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !2134, line: 234, column: 7)
!12135 = distinct !DILexicalBlock(scope: !12136, file: !2134, line: 209, column: 41)
!12136 = distinct !DILexicalBlock(scope: !12129, file: !2134, line: 209, column: 2)
!12137 = !DILocation(line: 0, scope: !12110)
!12138 = !DILocation(line: 0, scope: !12129)
!12139 = !DILocation(line: 209, column: 25, scope: !12136)
!12140 = !DILocation(line: 209, column: 2, scope: !12129)
!12141 = distinct !{!12141, !12140, !12142}
!12142 = !DILocation(line: 259, column: 2, scope: !12129)
!12143 = !DILocation(line: 210, column: 17, scope: !12135)
!12144 = !DILocation(line: 234, column: 7, scope: !12134)
!12145 = !DILocation(line: 234, column: 33, scope: !12134)
!12146 = !DILocation(line: 234, column: 7, scope: !12135)
!12147 = !DILocation(line: 235, column: 22, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12134, file: !2134, line: 234, column: 49)
!12149 = !DILocation(line: 235, column: 29, scope: !12148)
!12150 = !DILocation(line: 236, column: 3, scope: !12148)
!12151 = !DILocation(line: 236, column: 14, scope: !12134)
!12152 = !DILocation(line: 239, column: 32, scope: !12131)
!12153 = !DILocation(line: 0, scope: !12131)
!12154 = !DILocation(line: 241, column: 8, scope: !12131)
!12155 = !DILocation(line: 246, column: 3, scope: !12131)
!12156 = !DILocation(line: 252, column: 9, scope: !12135)
!12157 = !DILocation(line: 255, column: 9, scope: !12135)
!12158 = !DILocation(line: 256, column: 11, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12135, file: !2134, line: 256, column: 7)
!12160 = !DILocation(line: 209, column: 37, scope: !12136)
!12161 = !DILocation(line: 256, column: 7, scope: !12135)
!12162 = !DILocation(line: 262, column: 1, scope: !12110)
!12163 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2134, file: !2134, line: 176, type: !12164, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2053, retainedNodes: !12166)
!12164 = !DISubroutineType(types: !12165)
!12165 = !{!108, !113, !113, !113}
!12166 = !{!12167, !12168, !12169, !12170}
!12167 = !DILocalVariable(name: "pin", arg: 1, scope: !12163, file: !2134, line: 176, type: !113)
!12168 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12163, file: !2134, line: 176, type: !113)
!12169 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12163, file: !2134, line: 176, type: !113)
!12170 = !DILocalVariable(name: "port_device", scope: !12163, file: !2134, line: 178, type: !2064)
!12171 = !DILocation(line: 0, scope: !12163)
!12172 = !DILocation(line: 180, column: 22, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12163, file: !2134, line: 180, column: 6)
!12174 = !DILocation(line: 180, column: 6, scope: !12163)
!12175 = !DILocation(line: 180, column: 6, scope: !12173)
!12176 = !DILocation(line: 184, column: 16, scope: !12163)
!12177 = !DILocation(line: 186, column: 19, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12163, file: !2134, line: 186, column: 6)
!12179 = !DILocation(line: 186, column: 28, scope: !12178)
!12180 = !DILocation(line: 186, column: 33, scope: !12178)
!12181 = !DILocation(line: 186, column: 6, scope: !12163)
!12182 = !DILocation(line: 190, column: 43, scope: !12163)
!12183 = !DILocation(line: 190, column: 9, scope: !12163)
!12184 = !DILocation(line: 190, column: 2, scope: !12163)
!12185 = !DILocation(line: 191, column: 1, scope: !12163)
!12186 = distinct !DISubprogram(name: "device_is_ready", scope: !8858, file: !8858, line: 47, type: !12187, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2053, retainedNodes: !12189)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{!422, !2064}
!12189 = !{!12190}
!12190 = !DILocalVariable(name: "dev", arg: 1, scope: !12186, file: !8858, line: 47, type: !2064)
!12191 = !DILocation(line: 0, scope: !12186)
!12192 = !DILocation(line: 55, column: 2, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12186, file: !8858, line: 55, column: 2)
!12194 = !{i64 2148869958}
!12195 = !DILocation(line: 56, column: 9, scope: !12186)
!12196 = !DILocation(line: 56, column: 2, scope: !12186)
!12197 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !12187, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2053, retainedNodes: !12198)
!12198 = !{!12199}
!12199 = !DILocalVariable(name: "dev", arg: 1, scope: !12197, file: !411, line: 730, type: !2064)
!12200 = !DILocation(line: 0, scope: !12197)
!12201 = !DILocation(line: 732, column: 9, scope: !12197)
!12202 = !DILocation(line: 732, column: 2, scope: !12197)
!12203 = distinct !DISubprogram(name: "SystemInit", scope: !2164, file: !2164, line: 160, type: !3381, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !437)
!12204 = !DILocation(line: 170, column: 1, scope: !12203)
!12205 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2164, file: !2164, line: 210, type: !3381, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !12206)
!12206 = !{!12207, !12208, !12209, !12210, !12211}
!12207 = !DILocalVariable(name: "tmp", scope: !12205, file: !2164, line: 212, type: !113)
!12208 = !DILocalVariable(name: "pllmul", scope: !12205, file: !2164, line: 212, type: !113)
!12209 = !DILocalVariable(name: "plldiv", scope: !12205, file: !2164, line: 212, type: !113)
!12210 = !DILocalVariable(name: "pllsource", scope: !12205, file: !2164, line: 212, type: !113)
!12211 = !DILocalVariable(name: "msirange", scope: !12205, file: !2164, line: 212, type: !113)
!12212 = !DILocation(line: 0, scope: !12205)
!12213 = !DILocation(line: 215, column: 14, scope: !12205)
!12214 = !DILocation(line: 217, column: 3, scope: !12205)
!12215 = !DILocation(line: 220, column: 24, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12205, file: !2164, line: 218, column: 3)
!12217 = !DILocation(line: 220, column: 52, scope: !12216)
!12218 = !DILocation(line: 221, column: 32, scope: !12216)
!12219 = !DILocation(line: 222, column: 7, scope: !12216)
!12220 = !DILocation(line: 228, column: 7, scope: !12216)
!12221 = !DILocation(line: 231, column: 21, scope: !12216)
!12222 = !DILocation(line: 232, column: 21, scope: !12216)
!12223 = !DILocation(line: 233, column: 36, scope: !12216)
!12224 = !DILocation(line: 233, column: 16, scope: !12216)
!12225 = !DILocation(line: 234, column: 24, scope: !12216)
!12226 = !DILocation(line: 234, column: 31, scope: !12216)
!12227 = !DILocation(line: 236, column: 24, scope: !12216)
!12228 = !DILocation(line: 236, column: 29, scope: !12216)
!12229 = !DILocation(line: 238, column: 21, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12216, file: !2164, line: 238, column: 11)
!12231 = !DILocation(line: 238, column: 11, scope: !12216)
!12232 = !DILocation(line: 241, column: 41, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12230, file: !2164, line: 239, column: 7)
!12234 = !DILocation(line: 241, column: 51, scope: !12233)
!12235 = !DILocation(line: 242, column: 7, scope: !12233)
!12236 = !DILocation(line: 246, column: 41, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12230, file: !2164, line: 244, column: 7)
!12238 = !DILocation(line: 246, column: 51, scope: !12237)
!12239 = !DILocation(line: 0, scope: !12216)
!12240 = !DILocation(line: 256, column: 30, scope: !12205)
!12241 = !DILocation(line: 256, column: 52, scope: !12205)
!12242 = !DILocation(line: 256, column: 9, scope: !12205)
!12243 = !DILocation(line: 258, column: 19, scope: !12205)
!12244 = !DILocation(line: 259, column: 1, scope: !12205)
!12245 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12246, file: !12246, line: 228, type: !12247, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !12250)
!12246 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12247 = !DISubroutineType(types: !12248)
!12248 = !{!12249}
!12249 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3225, line: 45, baseType: !3224)
!12250 = !{!12251, !12252}
!12251 = !DILocalVariable(name: "tickstart", scope: !12245, file: !12246, line: 230, type: !113)
!12252 = !DILocalVariable(name: "status", scope: !12245, file: !12246, line: 231, type: !12249)
!12253 = !DILocation(line: 234, column: 3, scope: !12245)
!12254 = !DILocation(line: 238, column: 3, scope: !12245)
!12255 = !DILocation(line: 241, column: 15, scope: !12245)
!12256 = !DILocation(line: 0, scope: !12245)
!12257 = !DILocation(line: 244, column: 3, scope: !12245)
!12258 = !DILocation(line: 244, column: 10, scope: !12245)
!12259 = !DILocation(line: 244, column: 43, scope: !12245)
!12260 = !DILocation(line: 246, column: 10, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !12246, line: 246, column: 9)
!12262 = distinct !DILexicalBlock(scope: !12245, file: !12246, line: 245, column: 3)
!12263 = !DILocation(line: 246, column: 24, scope: !12261)
!12264 = !DILocation(line: 246, column: 37, scope: !12261)
!12265 = !DILocation(line: 246, column: 9, scope: !12262)
!12266 = distinct !{!12266, !12257, !12267}
!12267 = !DILocation(line: 250, column: 3, scope: !12245)
!12268 = !DILocation(line: 253, column: 3, scope: !12245)
!12269 = !DILocation(line: 256, column: 3, scope: !12245)
!12270 = !DILocation(line: 256, column: 10, scope: !12245)
!12271 = !DILocation(line: 256, column: 44, scope: !12245)
!12272 = !DILocation(line: 258, column: 10, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !12246, line: 258, column: 9)
!12274 = distinct !DILexicalBlock(scope: !12245, file: !12246, line: 257, column: 3)
!12275 = !DILocation(line: 258, column: 24, scope: !12273)
!12276 = !DILocation(line: 258, column: 37, scope: !12273)
!12277 = !DILocation(line: 258, column: 9, scope: !12274)
!12278 = distinct !{!12278, !12269, !12279}
!12279 = !DILocation(line: 262, column: 3, scope: !12245)
!12280 = !DILocation(line: 265, column: 19, scope: !12245)
!12281 = !DILocation(line: 268, column: 25, scope: !12245)
!12282 = !DILocation(line: 268, column: 12, scope: !12245)
!12283 = !DILocation(line: 269, column: 13, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12245, file: !12246, line: 269, column: 6)
!12285 = !DILocation(line: 269, column: 6, scope: !12245)
!12286 = !DILocation(line: 275, column: 3, scope: !12245)
!12287 = !DILocation(line: 277, column: 3, scope: !12245)
!12288 = !DILocation(line: 280, column: 15, scope: !12245)
!12289 = !DILocation(line: 283, column: 3, scope: !12245)
!12290 = !DILocation(line: 283, column: 10, scope: !12245)
!12291 = !DILocation(line: 283, column: 43, scope: !12245)
!12292 = !DILocation(line: 285, column: 10, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !12246, line: 285, column: 9)
!12294 = distinct !DILexicalBlock(scope: !12245, file: !12246, line: 284, column: 3)
!12295 = !DILocation(line: 285, column: 24, scope: !12293)
!12296 = !DILocation(line: 285, column: 37, scope: !12293)
!12297 = !DILocation(line: 285, column: 9, scope: !12294)
!12298 = distinct !{!12298, !12289, !12299}
!12299 = !DILocation(line: 289, column: 3, scope: !12245)
!12300 = !DILocation(line: 292, column: 3, scope: !12245)
!12301 = !DILocation(line: 295, column: 3, scope: !12245)
!12302 = !DILocation(line: 299, column: 3, scope: !12245)
!12303 = !DILocation(line: 305, column: 3, scope: !12245)
!12304 = !DILocation(line: 307, column: 3, scope: !12245)
!12305 = !DILocation(line: 308, column: 1, scope: !12245)
!12306 = !DISubprogram(name: "HAL_GetTick", scope: !12307, file: !12307, line: 945, type: !8003, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12307 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12308 = !DISubprogram(name: "HAL_InitTick", scope: !12307, file: !12307, line: 932, type: !12309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12309 = !DISubroutineType(types: !12310)
!12310 = !{!12249, !113}
!12311 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12246, file: !12246, line: 324, type: !12312, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !12336)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{!12249, !12314}
!12314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12315, size: 32)
!12315 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12316, line: 283, baseType: !12317)
!12316 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12316, line: 252, size: 416, elements: !12318)
!12318 = !{!12319, !12320, !12321, !12322, !12323, !12324, !12325, !12326, !12327, !12328}
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12317, file: !12316, line: 254, baseType: !113, size: 32)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12317, file: !12316, line: 257, baseType: !113, size: 32, offset: 32)
!12321 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12317, file: !12316, line: 260, baseType: !113, size: 32, offset: 64)
!12322 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12317, file: !12316, line: 263, baseType: !113, size: 32, offset: 96)
!12323 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12317, file: !12316, line: 266, baseType: !113, size: 32, offset: 128)
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12317, file: !12316, line: 269, baseType: !113, size: 32, offset: 160)
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !12317, file: !12316, line: 272, baseType: !113, size: 32, offset: 192)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !12317, file: !12316, line: 275, baseType: !113, size: 32, offset: 224)
!12327 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !12317, file: !12316, line: 278, baseType: !113, size: 32, offset: 256)
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12317, file: !12316, line: 281, baseType: !12329, size: 128, offset: 288)
!12329 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12316, line: 247, baseType: !12330)
!12330 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12316, line: 234, size: 128, elements: !12331)
!12331 = !{!12332, !12333, !12334, !12335}
!12332 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12330, file: !12316, line: 236, baseType: !113, size: 32)
!12333 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12330, file: !12316, line: 239, baseType: !113, size: 32, offset: 32)
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !12330, file: !12316, line: 242, baseType: !113, size: 32, offset: 64)
!12335 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !12330, file: !12316, line: 245, baseType: !113, size: 32, offset: 96)
!12336 = !{!12337, !12338, !12339, !12340, !12341, !12342, !12346}
!12337 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12311, file: !12246, line: 324, type: !12314)
!12338 = !DILocalVariable(name: "tickstart", scope: !12311, file: !12246, line: 326, type: !113)
!12339 = !DILocalVariable(name: "status", scope: !12311, file: !12246, line: 327, type: !12249)
!12340 = !DILocalVariable(name: "sysclk_source", scope: !12311, file: !12246, line: 328, type: !113)
!12341 = !DILocalVariable(name: "pll_config", scope: !12311, file: !12246, line: 328, type: !113)
!12342 = !DILocalVariable(name: "pwrclkchanged", scope: !12343, file: !12246, line: 613, type: !12345)
!12343 = distinct !DILexicalBlock(scope: !12344, file: !12246, line: 612, column: 3)
!12344 = distinct !DILexicalBlock(scope: !12311, file: !12246, line: 611, column: 6)
!12345 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1253, line: 181, baseType: !3235)
!12346 = !DILocalVariable(name: "tmpreg", scope: !12347, file: !12246, line: 622, type: !568)
!12347 = distinct !DILexicalBlock(scope: !12348, file: !12246, line: 622, column: 7)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !12246, line: 621, column: 5)
!12349 = distinct !DILexicalBlock(scope: !12343, file: !12246, line: 620, column: 8)
!12350 = !DILocation(line: 0, scope: !12311)
!12351 = !DILocation(line: 331, column: 24, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12311, file: !12246, line: 331, column: 6)
!12353 = !DILocation(line: 331, column: 6, scope: !12311)
!12354 = !DILocation(line: 338, column: 19, scope: !12311)
!12355 = !DILocation(line: 339, column: 16, scope: !12311)
!12356 = !DILocation(line: 342, column: 27, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12311, file: !12246, line: 342, column: 6)
!12358 = !DILocation(line: 342, column: 43, scope: !12357)
!12359 = !DILocation(line: 342, column: 69, scope: !12357)
!12360 = !DILocation(line: 342, column: 6, scope: !12311)
!12361 = !DILocation(line: 348, column: 23, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12363, file: !12246, line: 348, column: 8)
!12363 = distinct !DILexicalBlock(scope: !12357, file: !12246, line: 343, column: 3)
!12364 = !DILocation(line: 349, column: 8, scope: !12362)
!12365 = !DILocation(line: 349, column: 27, scope: !12362)
!12366 = !DILocation(line: 349, column: 62, scope: !12362)
!12367 = !DILocation(line: 351, column: 11, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !12246, line: 351, column: 10)
!12369 = distinct !DILexicalBlock(scope: !12362, file: !12246, line: 350, column: 5)
!12370 = !DILocation(line: 351, column: 47, scope: !12368)
!12371 = !DILocation(line: 351, column: 54, scope: !12368)
!12372 = !DILocation(line: 351, column: 77, scope: !12368)
!12373 = !DILocation(line: 351, column: 86, scope: !12368)
!12374 = !DILocation(line: 351, column: 10, scope: !12369)
!12375 = !DILocation(line: 359, column: 7, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12377, file: !12246, line: 359, column: 7)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !12246, line: 359, column: 7)
!12378 = distinct !DILexicalBlock(scope: !12362, file: !12246, line: 357, column: 5)
!12379 = !DILocation(line: 359, column: 7, scope: !12377)
!12380 = !DILocation(line: 359, column: 7, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12376, file: !12246, line: 359, column: 7)
!12382 = !DILocation(line: 359, column: 7, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12384, file: !12246, line: 359, column: 7)
!12384 = distinct !DILexicalBlock(scope: !12376, file: !12246, line: 359, column: 7)
!12385 = !DILocation(line: 359, column: 7, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12387, file: !12246, line: 359, column: 7)
!12387 = distinct !DILexicalBlock(scope: !12384, file: !12246, line: 359, column: 7)
!12388 = !DILocation(line: 359, column: 7, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12387, file: !12246, line: 359, column: 7)
!12390 = !DILocation(line: 0, scope: !12376)
!12391 = !DILocation(line: 362, column: 29, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12378, file: !12246, line: 362, column: 10)
!12393 = !DILocation(line: 362, column: 38, scope: !12392)
!12394 = !DILocation(line: 0, scope: !12392)
!12395 = !DILocation(line: 362, column: 10, scope: !12378)
!12396 = !DILocation(line: 368, column: 15, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12392, file: !12246, line: 363, column: 7)
!12398 = !DILocation(line: 368, column: 51, scope: !12397)
!12399 = !DILocation(line: 368, column: 9, scope: !12397)
!12400 = !DILocation(line: 370, column: 15, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12402, file: !12246, line: 370, column: 14)
!12402 = distinct !DILexicalBlock(scope: !12397, file: !12246, line: 369, column: 9)
!12403 = !DILocation(line: 370, column: 29, scope: !12401)
!12404 = !DILocation(line: 370, column: 43, scope: !12401)
!12405 = !DILocation(line: 370, column: 14, scope: !12402)
!12406 = distinct !{!12406, !12399, !12407}
!12407 = !DILocation(line: 374, column: 9, scope: !12397)
!12408 = !DILocation(line: 382, column: 15, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12392, file: !12246, line: 377, column: 7)
!12410 = !DILocation(line: 382, column: 51, scope: !12409)
!12411 = !DILocation(line: 382, column: 9, scope: !12409)
!12412 = !DILocation(line: 384, column: 16, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12414, file: !12246, line: 384, column: 15)
!12414 = distinct !DILexicalBlock(scope: !12409, file: !12246, line: 383, column: 9)
!12415 = !DILocation(line: 384, column: 30, scope: !12413)
!12416 = !DILocation(line: 384, column: 44, scope: !12413)
!12417 = !DILocation(line: 384, column: 15, scope: !12414)
!12418 = distinct !{!12418, !12411, !12419}
!12419 = !DILocation(line: 388, column: 9, scope: !12409)
!12420 = !DILocation(line: 393, column: 27, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12311, file: !12246, line: 393, column: 6)
!12422 = !DILocation(line: 393, column: 43, scope: !12421)
!12423 = !DILocation(line: 393, column: 69, scope: !12421)
!12424 = !DILocation(line: 393, column: 6, scope: !12311)
!12425 = !DILocation(line: 400, column: 23, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12427, file: !12246, line: 400, column: 8)
!12427 = distinct !DILexicalBlock(scope: !12421, file: !12246, line: 394, column: 3)
!12428 = !DILocation(line: 401, column: 8, scope: !12426)
!12429 = !DILocation(line: 401, column: 27, scope: !12426)
!12430 = !DILocation(line: 401, column: 62, scope: !12426)
!12431 = !DILocation(line: 404, column: 11, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12433, file: !12246, line: 404, column: 10)
!12433 = distinct !DILexicalBlock(scope: !12426, file: !12246, line: 402, column: 5)
!12434 = !DILocation(line: 404, column: 47, scope: !12432)
!12435 = !DILocation(line: 404, column: 54, scope: !12432)
!12436 = !DILocation(line: 404, column: 77, scope: !12432)
!12437 = !DILocation(line: 404, column: 86, scope: !12432)
!12438 = !DILocation(line: 404, column: 10, scope: !12433)
!12439 = !DILocation(line: 418, column: 29, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12441, file: !12246, line: 418, column: 10)
!12441 = distinct !DILexicalBlock(scope: !12426, file: !12246, line: 416, column: 5)
!12442 = !DILocation(line: 418, column: 38, scope: !12440)
!12443 = !DILocation(line: 418, column: 10, scope: !12441)
!12444 = !DILocation(line: 421, column: 9, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12440, file: !12246, line: 419, column: 7)
!12446 = !DILocation(line: 424, column: 21, scope: !12445)
!12447 = !DILocation(line: 427, column: 9, scope: !12445)
!12448 = !DILocation(line: 427, column: 15, scope: !12445)
!12449 = !DILocation(line: 427, column: 51, scope: !12445)
!12450 = !DILocation(line: 429, column: 15, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12452, file: !12246, line: 429, column: 14)
!12452 = distinct !DILexicalBlock(scope: !12445, file: !12246, line: 428, column: 9)
!12453 = !DILocation(line: 429, column: 29, scope: !12451)
!12454 = !DILocation(line: 429, column: 43, scope: !12451)
!12455 = !DILocation(line: 429, column: 14, scope: !12452)
!12456 = distinct !{!12456, !12447, !12457}
!12457 = !DILocation(line: 433, column: 9, scope: !12445)
!12458 = !DILocation(line: 441, column: 9, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12440, file: !12246, line: 439, column: 7)
!12460 = !DILocation(line: 444, column: 21, scope: !12459)
!12461 = !DILocation(line: 447, column: 9, scope: !12459)
!12462 = !DILocation(line: 447, column: 15, scope: !12459)
!12463 = !DILocation(line: 447, column: 51, scope: !12459)
!12464 = !DILocation(line: 449, column: 15, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !12246, line: 449, column: 14)
!12466 = distinct !DILexicalBlock(scope: !12459, file: !12246, line: 448, column: 9)
!12467 = !DILocation(line: 449, column: 29, scope: !12465)
!12468 = !DILocation(line: 449, column: 43, scope: !12465)
!12469 = !DILocation(line: 449, column: 14, scope: !12466)
!12470 = distinct !{!12470, !12461, !12471}
!12471 = !DILocation(line: 453, column: 9, scope: !12459)
!12472 = !DILocation(line: 0, scope: !12426)
!12473 = !DILocation(line: 458, column: 27, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12311, file: !12246, line: 458, column: 6)
!12475 = !DILocation(line: 458, column: 43, scope: !12474)
!12476 = !DILocation(line: 458, column: 69, scope: !12474)
!12477 = !DILocation(line: 458, column: 6, scope: !12311)
!12478 = !DILocation(line: 461, column: 22, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12480, file: !12246, line: 461, column: 8)
!12480 = distinct !DILexicalBlock(scope: !12474, file: !12246, line: 459, column: 3)
!12481 = !DILocation(line: 461, column: 8, scope: !12480)
!12482 = !DILocation(line: 463, column: 11, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !12246, line: 463, column: 10)
!12484 = distinct !DILexicalBlock(scope: !12479, file: !12246, line: 462, column: 5)
!12485 = !DILocation(line: 463, column: 47, scope: !12483)
!12486 = !DILocation(line: 463, column: 54, scope: !12483)
!12487 = !DILocation(line: 463, column: 77, scope: !12483)
!12488 = !DILocation(line: 463, column: 86, scope: !12483)
!12489 = !DILocation(line: 463, column: 10, scope: !12484)
!12490 = !DILocation(line: 477, column: 31, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !12246, line: 477, column: 12)
!12492 = distinct !DILexicalBlock(scope: !12483, file: !12246, line: 469, column: 7)
!12493 = !DILocation(line: 477, column: 47, scope: !12491)
!12494 = !DILocation(line: 477, column: 45, scope: !12491)
!12495 = !DILocation(line: 477, column: 12, scope: !12492)
!12496 = !DILocation(line: 480, column: 14, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12498, file: !12246, line: 480, column: 14)
!12498 = distinct !DILexicalBlock(scope: !12491, file: !12246, line: 478, column: 9)
!12499 = !DILocation(line: 480, column: 80, scope: !12497)
!12500 = !DILocation(line: 480, column: 14, scope: !12498)
!12501 = !DILocation(line: 486, column: 11, scope: !12498)
!12502 = !DILocation(line: 488, column: 11, scope: !12498)
!12503 = !DILocation(line: 489, column: 9, scope: !12498)
!12504 = !DILocation(line: 494, column: 11, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12491, file: !12246, line: 491, column: 9)
!12506 = !DILocation(line: 496, column: 11, scope: !12505)
!12507 = !DILocation(line: 499, column: 65, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12505, file: !12246, line: 499, column: 14)
!12509 = !DILocation(line: 499, column: 14, scope: !12508)
!12510 = !DILocation(line: 499, column: 80, scope: !12508)
!12511 = !DILocation(line: 499, column: 14, scope: !12505)
!12512 = !DILocation(line: 506, column: 67, scope: !12492)
!12513 = !DILocation(line: 506, column: 81, scope: !12492)
!12514 = !DILocation(line: 506, column: 36, scope: !12492)
!12515 = !DILocation(line: 507, column: 52, scope: !12492)
!12516 = !DILocation(line: 507, column: 74, scope: !12492)
!12517 = !DILocation(line: 507, column: 31, scope: !12492)
!12518 = !DILocation(line: 507, column: 28, scope: !12492)
!12519 = !DILocation(line: 506, column: 25, scope: !12492)
!12520 = !DILocation(line: 510, column: 31, scope: !12492)
!12521 = !DILocation(line: 510, column: 18, scope: !12492)
!12522 = !DILocation(line: 511, column: 19, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12492, file: !12246, line: 511, column: 12)
!12524 = !DILocation(line: 511, column: 12, scope: !12492)
!12525 = !DILocation(line: 523, column: 29, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12527, file: !12246, line: 523, column: 10)
!12527 = distinct !DILexicalBlock(scope: !12479, file: !12246, line: 518, column: 5)
!12528 = !DILocation(line: 523, column: 38, scope: !12526)
!12529 = !DILocation(line: 523, column: 10, scope: !12527)
!12530 = !DILocation(line: 526, column: 9, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12526, file: !12246, line: 524, column: 7)
!12532 = !DILocation(line: 529, column: 21, scope: !12531)
!12533 = !DILocation(line: 532, column: 9, scope: !12531)
!12534 = !DILocation(line: 532, column: 15, scope: !12531)
!12535 = !DILocation(line: 532, column: 51, scope: !12531)
!12536 = !DILocation(line: 534, column: 15, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12538, file: !12246, line: 534, column: 14)
!12538 = distinct !DILexicalBlock(scope: !12531, file: !12246, line: 533, column: 9)
!12539 = !DILocation(line: 534, column: 29, scope: !12537)
!12540 = !DILocation(line: 534, column: 42, scope: !12537)
!12541 = !DILocation(line: 534, column: 14, scope: !12538)
!12542 = distinct !{!12542, !12533, !12543}
!12543 = !DILocation(line: 538, column: 9, scope: !12531)
!12544 = !DILocation(line: 544, column: 9, scope: !12531)
!12545 = !DILocation(line: 546, column: 9, scope: !12531)
!12546 = !DILocation(line: 548, column: 7, scope: !12531)
!12547 = !DILocation(line: 552, column: 9, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12526, file: !12246, line: 550, column: 7)
!12549 = !DILocation(line: 555, column: 21, scope: !12548)
!12550 = !DILocation(line: 558, column: 9, scope: !12548)
!12551 = !DILocation(line: 558, column: 15, scope: !12548)
!12552 = !DILocation(line: 558, column: 51, scope: !12548)
!12553 = !DILocation(line: 560, column: 15, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !12246, line: 560, column: 14)
!12555 = distinct !DILexicalBlock(scope: !12548, file: !12246, line: 559, column: 9)
!12556 = !DILocation(line: 560, column: 29, scope: !12554)
!12557 = !DILocation(line: 560, column: 42, scope: !12554)
!12558 = !DILocation(line: 560, column: 14, scope: !12555)
!12559 = distinct !{!12559, !12550, !12560}
!12560 = !DILocation(line: 564, column: 9, scope: !12548)
!12561 = !DILocation(line: 569, column: 27, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12311, file: !12246, line: 569, column: 6)
!12563 = !DILocation(line: 569, column: 43, scope: !12562)
!12564 = !DILocation(line: 569, column: 69, scope: !12562)
!12565 = !DILocation(line: 569, column: 6, scope: !12311)
!12566 = !DILocation(line: 575, column: 27, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !12246, line: 575, column: 8)
!12568 = distinct !DILexicalBlock(scope: !12562, file: !12246, line: 570, column: 3)
!12569 = !DILocation(line: 575, column: 36, scope: !12567)
!12570 = !DILocation(line: 575, column: 8, scope: !12568)
!12571 = !DILocation(line: 578, column: 7, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12567, file: !12246, line: 576, column: 5)
!12573 = !DILocation(line: 581, column: 19, scope: !12572)
!12574 = !DILocation(line: 584, column: 7, scope: !12572)
!12575 = !DILocation(line: 584, column: 13, scope: !12572)
!12576 = !DILocation(line: 584, column: 49, scope: !12572)
!12577 = !DILocation(line: 586, column: 13, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12579, file: !12246, line: 586, column: 12)
!12579 = distinct !DILexicalBlock(scope: !12572, file: !12246, line: 585, column: 7)
!12580 = !DILocation(line: 586, column: 27, scope: !12578)
!12581 = !DILocation(line: 586, column: 41, scope: !12578)
!12582 = !DILocation(line: 586, column: 12, scope: !12579)
!12583 = distinct !{!12583, !12574, !12584}
!12584 = !DILocation(line: 590, column: 7, scope: !12572)
!12585 = !DILocation(line: 595, column: 7, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12567, file: !12246, line: 593, column: 5)
!12587 = !DILocation(line: 598, column: 19, scope: !12586)
!12588 = !DILocation(line: 601, column: 7, scope: !12586)
!12589 = !DILocation(line: 601, column: 13, scope: !12586)
!12590 = !DILocation(line: 601, column: 49, scope: !12586)
!12591 = !DILocation(line: 603, column: 13, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12593, file: !12246, line: 603, column: 12)
!12593 = distinct !DILexicalBlock(scope: !12586, file: !12246, line: 602, column: 7)
!12594 = !DILocation(line: 603, column: 27, scope: !12592)
!12595 = !DILocation(line: 603, column: 41, scope: !12592)
!12596 = !DILocation(line: 603, column: 12, scope: !12593)
!12597 = distinct !{!12597, !12588, !12598}
!12598 = !DILocation(line: 607, column: 7, scope: !12586)
!12599 = !DILocation(line: 611, column: 27, scope: !12344)
!12600 = !DILocation(line: 611, column: 43, scope: !12344)
!12601 = !DILocation(line: 611, column: 69, scope: !12344)
!12602 = !DILocation(line: 611, column: 6, scope: !12311)
!12603 = !DILocation(line: 0, scope: !12343)
!12604 = !DILocation(line: 620, column: 8, scope: !12349)
!12605 = !DILocation(line: 620, column: 8, scope: !12343)
!12606 = !DILocation(line: 622, column: 7, scope: !12347)
!12607 = !DILocation(line: 622, column: 7, scope: !12348)
!12608 = !DILocation(line: 624, column: 5, scope: !12348)
!12609 = !DILocation(line: 626, column: 8, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12343, file: !12246, line: 626, column: 8)
!12611 = !DILocation(line: 626, column: 8, scope: !12343)
!12612 = !DILocation(line: 629, column: 7, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12610, file: !12246, line: 627, column: 5)
!12614 = !DILocation(line: 632, column: 19, scope: !12613)
!12615 = !DILocation(line: 634, column: 7, scope: !12613)
!12616 = !DILocation(line: 634, column: 13, scope: !12613)
!12617 = !DILocation(line: 636, column: 13, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !12246, line: 636, column: 12)
!12619 = distinct !DILexicalBlock(scope: !12613, file: !12246, line: 635, column: 7)
!12620 = !DILocation(line: 636, column: 27, scope: !12618)
!12621 = !DILocation(line: 636, column: 40, scope: !12618)
!12622 = !DILocation(line: 636, column: 12, scope: !12619)
!12623 = distinct !{!12623, !12615, !12624}
!12624 = !DILocation(line: 640, column: 7, scope: !12613)
!12625 = !DILocation(line: 644, column: 5, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12246, line: 644, column: 5)
!12627 = distinct !DILexicalBlock(scope: !12343, file: !12246, line: 644, column: 5)
!12628 = !DILocation(line: 644, column: 5, scope: !12627)
!12629 = !DILocation(line: 644, column: 5, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12626, file: !12246, line: 644, column: 5)
!12631 = !DILocation(line: 644, column: 5, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12633, file: !12246, line: 644, column: 5)
!12633 = distinct !DILexicalBlock(scope: !12626, file: !12246, line: 644, column: 5)
!12634 = !DILocation(line: 644, column: 5, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12636, file: !12246, line: 644, column: 5)
!12636 = distinct !DILexicalBlock(scope: !12633, file: !12246, line: 644, column: 5)
!12637 = !DILocation(line: 644, column: 5, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12636, file: !12246, line: 644, column: 5)
!12639 = !DILocation(line: 0, scope: !12626)
!12640 = !DILocation(line: 646, column: 27, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12343, file: !12246, line: 646, column: 8)
!12642 = !DILocation(line: 646, column: 36, scope: !12641)
!12643 = !DILocation(line: 0, scope: !12641)
!12644 = !DILocation(line: 646, column: 8, scope: !12343)
!12645 = !DILocation(line: 652, column: 13, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12641, file: !12246, line: 647, column: 5)
!12647 = !DILocation(line: 652, column: 49, scope: !12646)
!12648 = !DILocation(line: 652, column: 7, scope: !12646)
!12649 = !DILocation(line: 654, column: 13, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12246, line: 654, column: 12)
!12651 = distinct !DILexicalBlock(scope: !12646, file: !12246, line: 653, column: 7)
!12652 = !DILocation(line: 654, column: 27, scope: !12650)
!12653 = !DILocation(line: 654, column: 41, scope: !12650)
!12654 = !DILocation(line: 654, column: 12, scope: !12651)
!12655 = distinct !{!12655, !12648, !12656}
!12656 = !DILocation(line: 658, column: 7, scope: !12646)
!12657 = !DILocation(line: 666, column: 13, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12641, file: !12246, line: 661, column: 5)
!12659 = !DILocation(line: 666, column: 49, scope: !12658)
!12660 = !DILocation(line: 666, column: 7, scope: !12658)
!12661 = !DILocation(line: 668, column: 13, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12663, file: !12246, line: 668, column: 12)
!12663 = distinct !DILexicalBlock(scope: !12658, file: !12246, line: 667, column: 7)
!12664 = !DILocation(line: 668, column: 27, scope: !12662)
!12665 = !DILocation(line: 668, column: 41, scope: !12662)
!12666 = !DILocation(line: 668, column: 12, scope: !12663)
!12667 = distinct !{!12667, !12660, !12668}
!12668 = !DILocation(line: 672, column: 7, scope: !12658)
!12669 = !DILocation(line: 676, column: 8, scope: !12343)
!12670 = !DILocation(line: 678, column: 7, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !12246, line: 677, column: 5)
!12672 = distinct !DILexicalBlock(scope: !12343, file: !12246, line: 676, column: 8)
!12673 = !DILocation(line: 679, column: 5, scope: !12671)
!12674 = !DILocation(line: 685, column: 31, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12311, file: !12246, line: 685, column: 7)
!12676 = !DILocation(line: 685, column: 41, scope: !12675)
!12677 = !DILocation(line: 685, column: 7, scope: !12311)
!12678 = !DILocation(line: 688, column: 22, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !12246, line: 688, column: 8)
!12680 = distinct !DILexicalBlock(scope: !12675, file: !12246, line: 686, column: 3)
!12681 = !DILocation(line: 688, column: 8, scope: !12680)
!12682 = !DILocation(line: 690, column: 44, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12684, file: !12246, line: 690, column: 10)
!12684 = distinct !DILexicalBlock(scope: !12679, file: !12246, line: 689, column: 5)
!12685 = !DILocation(line: 0, scope: !12683)
!12686 = !DILocation(line: 690, column: 10, scope: !12684)
!12687 = !DILocation(line: 704, column: 15, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12683, file: !12246, line: 691, column: 7)
!12689 = !DILocation(line: 704, column: 51, scope: !12688)
!12690 = !DILocation(line: 704, column: 9, scope: !12688)
!12691 = !DILocation(line: 706, column: 15, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12693, file: !12246, line: 706, column: 14)
!12693 = distinct !DILexicalBlock(scope: !12688, file: !12246, line: 705, column: 9)
!12694 = !DILocation(line: 706, column: 29, scope: !12692)
!12695 = !DILocation(line: 706, column: 43, scope: !12692)
!12696 = !DILocation(line: 706, column: 14, scope: !12693)
!12697 = distinct !{!12697, !12690, !12698}
!12698 = !DILocation(line: 710, column: 9, scope: !12688)
!12699 = !DILocation(line: 713, column: 9, scope: !12688)
!12700 = !DILocation(line: 717, column: 9, scope: !12688)
!12701 = !DILocation(line: 720, column: 21, scope: !12688)
!12702 = !DILocation(line: 723, column: 9, scope: !12688)
!12703 = !DILocation(line: 723, column: 15, scope: !12688)
!12704 = !DILocation(line: 723, column: 51, scope: !12688)
!12705 = !DILocation(line: 725, column: 15, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12707, file: !12246, line: 725, column: 14)
!12707 = distinct !DILexicalBlock(scope: !12688, file: !12246, line: 724, column: 9)
!12708 = !DILocation(line: 725, column: 29, scope: !12706)
!12709 = !DILocation(line: 725, column: 43, scope: !12706)
!12710 = !DILocation(line: 725, column: 14, scope: !12707)
!12711 = distinct !{!12711, !12702, !12712}
!12712 = !DILocation(line: 729, column: 9, scope: !12688)
!12713 = !DILocation(line: 740, column: 15, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12683, file: !12246, line: 732, column: 7)
!12715 = !DILocation(line: 740, column: 51, scope: !12714)
!12716 = !DILocation(line: 740, column: 9, scope: !12714)
!12717 = !DILocation(line: 742, column: 15, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12719, file: !12246, line: 742, column: 14)
!12719 = distinct !DILexicalBlock(scope: !12714, file: !12246, line: 741, column: 9)
!12720 = !DILocation(line: 742, column: 29, scope: !12718)
!12721 = !DILocation(line: 742, column: 43, scope: !12718)
!12722 = !DILocation(line: 742, column: 14, scope: !12719)
!12723 = distinct !{!12723, !12716, !12724}
!12724 = !DILocation(line: 746, column: 9, scope: !12714)
!12725 = !DILocation(line: 752, column: 44, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !12246, line: 752, column: 10)
!12727 = distinct !DILexicalBlock(scope: !12679, file: !12246, line: 750, column: 5)
!12728 = !DILocation(line: 752, column: 10, scope: !12727)
!12729 = !DILocation(line: 759, column: 27, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12726, file: !12246, line: 757, column: 7)
!12731 = !DILocation(line: 760, column: 13, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12730, file: !12246, line: 760, column: 12)
!12733 = !DILocation(line: 760, column: 77, scope: !12732)
!12734 = !DILocation(line: 760, column: 51, scope: !12732)
!12735 = !DILocation(line: 760, column: 88, scope: !12732)
!12736 = !DILocation(line: 761, column: 13, scope: !12732)
!12737 = !DILocation(line: 761, column: 77, scope: !12732)
!12738 = !DILocation(line: 761, column: 51, scope: !12732)
!12739 = !DILocation(line: 761, column: 85, scope: !12732)
!12740 = !DILocation(line: 762, column: 13, scope: !12732)
!12741 = !DILocation(line: 762, column: 77, scope: !12732)
!12742 = !DILocation(line: 762, column: 51, scope: !12732)
!12743 = !DILocation(line: 760, column: 12, scope: !12730)
!12744 = !DILocation(line: 770, column: 3, scope: !12311)
!12745 = !DILocation(line: 771, column: 1, scope: !12311)
!12746 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !12246, file: !12246, line: 1343, type: !12309, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !12747)
!12747 = !{!12748, !12749, !12750, !12751}
!12748 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !12746, file: !12246, line: 1343, type: !113)
!12749 = !DILocalVariable(name: "vos", scope: !12746, file: !12246, line: 1345, type: !113)
!12750 = !DILocalVariable(name: "latency", scope: !12746, file: !12246, line: 1346, type: !113)
!12751 = !DILocalVariable(name: "tmpreg", scope: !12752, file: !12246, line: 1357, type: !568)
!12752 = distinct !DILexicalBlock(scope: !12753, file: !12246, line: 1357, column: 7)
!12753 = distinct !DILexicalBlock(scope: !12754, file: !12246, line: 1356, column: 5)
!12754 = distinct !DILexicalBlock(scope: !12755, file: !12246, line: 1351, column: 8)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !12246, line: 1350, column: 3)
!12756 = distinct !DILexicalBlock(scope: !12746, file: !12246, line: 1349, column: 7)
!12757 = !DILocation(line: 0, scope: !12746)
!12758 = !DILocation(line: 1349, column: 7, scope: !12756)
!12759 = !DILocation(line: 1349, column: 42, scope: !12756)
!12760 = !DILocation(line: 1349, column: 7, scope: !12746)
!12761 = !DILocation(line: 1351, column: 8, scope: !12754)
!12762 = !DILocation(line: 1351, column: 8, scope: !12755)
!12763 = !DILocation(line: 1353, column: 13, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12754, file: !12246, line: 1352, column: 5)
!12765 = !DILocation(line: 1354, column: 5, scope: !12764)
!12766 = !DILocation(line: 1357, column: 7, scope: !12752)
!12767 = !DILocation(line: 1357, column: 7, scope: !12753)
!12768 = !DILocation(line: 1358, column: 13, scope: !12753)
!12769 = !DILocation(line: 1359, column: 7, scope: !12753)
!12770 = !DILocation(line: 0, scope: !12754)
!12771 = !DILocation(line: 1363, column: 13, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12755, file: !12246, line: 1363, column: 8)
!12773 = !DILocation(line: 1363, column: 46, scope: !12772)
!12774 = !DILocation(line: 1369, column: 3, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12746, file: !12246, line: 1369, column: 3)
!12776 = !DILocation(line: 1369, column: 3, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12778, file: !12246, line: 1369, column: 3)
!12778 = distinct !DILexicalBlock(scope: !12775, file: !12246, line: 1369, column: 3)
!12779 = !DILocation(line: 1373, column: 6, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12746, file: !12246, line: 1373, column: 6)
!12781 = !DILocation(line: 1379, column: 1, scope: !12746)
!12782 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12246, file: !12246, line: 799, type: !12783, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !12794)
!12783 = !DISubroutineType(types: !12784)
!12784 = !{!12249, !12785, !113}
!12785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12786, size: 32)
!12786 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12316, line: 304, baseType: !12787)
!12787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12316, line: 288, size: 160, elements: !12788)
!12788 = !{!12789, !12790, !12791, !12792, !12793}
!12789 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12787, file: !12316, line: 290, baseType: !113, size: 32)
!12790 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12787, file: !12316, line: 293, baseType: !113, size: 32, offset: 32)
!12791 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12787, file: !12316, line: 296, baseType: !113, size: 32, offset: 64)
!12792 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12787, file: !12316, line: 299, baseType: !113, size: 32, offset: 96)
!12793 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12787, file: !12316, line: 302, baseType: !113, size: 32, offset: 128)
!12794 = !{!12795, !12796, !12797, !12798}
!12795 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12782, file: !12246, line: 799, type: !12785)
!12796 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12782, file: !12246, line: 799, type: !113)
!12797 = !DILocalVariable(name: "tickstart", scope: !12782, file: !12246, line: 801, type: !113)
!12798 = !DILocalVariable(name: "status", scope: !12782, file: !12246, line: 802, type: !12249)
!12799 = !DILocation(line: 0, scope: !12782)
!12800 = !DILocation(line: 805, column: 24, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12782, file: !12246, line: 805, column: 6)
!12802 = !DILocation(line: 805, column: 6, scope: !12782)
!12803 = !DILocation(line: 817, column: 17, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12782, file: !12246, line: 817, column: 6)
!12805 = !DILocation(line: 817, column: 15, scope: !12804)
!12806 = !DILocation(line: 817, column: 6, scope: !12782)
!12807 = !DILocation(line: 820, column: 5, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !12246, line: 820, column: 5)
!12809 = distinct !DILexicalBlock(scope: !12810, file: !12246, line: 820, column: 5)
!12810 = distinct !DILexicalBlock(scope: !12804, file: !12246, line: 818, column: 3)
!12811 = !DILocation(line: 820, column: 5, scope: !12809)
!12812 = !DILocation(line: 820, column: 5, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12808, file: !12246, line: 820, column: 5)
!12814 = !DILocation(line: 824, column: 8, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12810, file: !12246, line: 824, column: 8)
!12816 = !DILocation(line: 824, column: 34, scope: !12815)
!12817 = !DILocation(line: 824, column: 8, scope: !12810)
!12818 = !DILocation(line: 831, column: 27, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12782, file: !12246, line: 831, column: 6)
!12820 = !DILocation(line: 831, column: 38, scope: !12819)
!12821 = !DILocation(line: 831, column: 60, scope: !12819)
!12822 = !DILocation(line: 831, column: 6, scope: !12782)
!12823 = !DILocation(line: 834, column: 5, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12819, file: !12246, line: 832, column: 3)
!12825 = !DILocation(line: 838, column: 27, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12782, file: !12246, line: 838, column: 6)
!12827 = !DILocation(line: 835, column: 3, scope: !12824)
!12828 = !DILocation(line: 838, column: 38, scope: !12826)
!12829 = !DILocation(line: 838, column: 62, scope: !12826)
!12830 = !DILocation(line: 838, column: 6, scope: !12782)
!12831 = !DILocation(line: 843, column: 27, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12833, file: !12246, line: 843, column: 8)
!12833 = distinct !DILexicalBlock(scope: !12826, file: !12246, line: 839, column: 3)
!12834 = !DILocation(line: 843, column: 8, scope: !12833)
!12835 = !DILocation(line: 846, column: 10, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12837, file: !12246, line: 846, column: 10)
!12837 = distinct !DILexicalBlock(scope: !12832, file: !12246, line: 844, column: 5)
!12838 = !DILocation(line: 846, column: 46, scope: !12836)
!12839 = !DILocation(line: 846, column: 10, scope: !12837)
!12840 = !DILocation(line: 855, column: 10, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12842, file: !12246, line: 855, column: 10)
!12842 = distinct !DILexicalBlock(scope: !12843, file: !12246, line: 853, column: 5)
!12843 = distinct !DILexicalBlock(scope: !12832, file: !12246, line: 852, column: 13)
!12844 = !DILocation(line: 855, column: 46, scope: !12841)
!12845 = !DILocation(line: 855, column: 10, scope: !12842)
!12846 = !DILocation(line: 864, column: 10, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12848, file: !12246, line: 864, column: 10)
!12848 = distinct !DILexicalBlock(scope: !12849, file: !12246, line: 862, column: 5)
!12849 = distinct !DILexicalBlock(scope: !12843, file: !12246, line: 861, column: 13)
!12850 = !DILocation(line: 864, column: 46, scope: !12847)
!12851 = !DILocation(line: 864, column: 10, scope: !12848)
!12852 = !DILocation(line: 873, column: 10, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12854, file: !12246, line: 873, column: 10)
!12854 = distinct !DILexicalBlock(scope: !12849, file: !12246, line: 871, column: 5)
!12855 = !DILocation(line: 873, column: 46, scope: !12853)
!12856 = !DILocation(line: 873, column: 10, scope: !12854)
!12857 = !DILocation(line: 878, column: 5, scope: !12833)
!12858 = !DILocation(line: 881, column: 17, scope: !12833)
!12859 = !DILocation(line: 883, column: 27, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12833, file: !12246, line: 883, column: 8)
!12861 = !DILocation(line: 883, column: 8, scope: !12833)
!12862 = !DILocation(line: 885, column: 14, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12860, file: !12246, line: 884, column: 5)
!12864 = !DILocation(line: 885, column: 44, scope: !12863)
!12865 = !DILocation(line: 885, column: 7, scope: !12863)
!12866 = !DILocation(line: 887, column: 13, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12868, file: !12246, line: 887, column: 12)
!12868 = distinct !DILexicalBlock(scope: !12863, file: !12246, line: 886, column: 7)
!12869 = !DILocation(line: 887, column: 27, scope: !12867)
!12870 = !DILocation(line: 887, column: 41, scope: !12867)
!12871 = !DILocation(line: 887, column: 12, scope: !12868)
!12872 = distinct !{!12872, !12865, !12873}
!12873 = !DILocation(line: 891, column: 7, scope: !12863)
!12874 = !DILocation(line: 895, column: 14, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !12246, line: 894, column: 5)
!12876 = distinct !DILexicalBlock(scope: !12860, file: !12246, line: 893, column: 13)
!12877 = !DILocation(line: 895, column: 44, scope: !12875)
!12878 = !DILocation(line: 895, column: 7, scope: !12875)
!12879 = !DILocation(line: 897, column: 13, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12881, file: !12246, line: 897, column: 12)
!12881 = distinct !DILexicalBlock(scope: !12875, file: !12246, line: 896, column: 7)
!12882 = !DILocation(line: 897, column: 27, scope: !12880)
!12883 = !DILocation(line: 897, column: 41, scope: !12880)
!12884 = !DILocation(line: 897, column: 12, scope: !12881)
!12885 = distinct !{!12885, !12878, !12886}
!12886 = !DILocation(line: 901, column: 7, scope: !12875)
!12887 = !DILocation(line: 905, column: 14, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !12246, line: 904, column: 5)
!12889 = distinct !DILexicalBlock(scope: !12876, file: !12246, line: 903, column: 13)
!12890 = !DILocation(line: 905, column: 44, scope: !12888)
!12891 = !DILocation(line: 905, column: 7, scope: !12888)
!12892 = !DILocation(line: 907, column: 13, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !12246, line: 907, column: 12)
!12894 = distinct !DILexicalBlock(scope: !12888, file: !12246, line: 906, column: 7)
!12895 = !DILocation(line: 907, column: 27, scope: !12893)
!12896 = !DILocation(line: 907, column: 41, scope: !12893)
!12897 = !DILocation(line: 907, column: 12, scope: !12894)
!12898 = distinct !{!12898, !12891, !12899}
!12899 = !DILocation(line: 911, column: 7, scope: !12888)
!12900 = !DILocation(line: 915, column: 13, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12889, file: !12246, line: 914, column: 5)
!12902 = !DILocation(line: 915, column: 43, scope: !12901)
!12903 = !DILocation(line: 915, column: 7, scope: !12901)
!12904 = !DILocation(line: 917, column: 13, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12906, file: !12246, line: 917, column: 12)
!12906 = distinct !DILexicalBlock(scope: !12901, file: !12246, line: 916, column: 7)
!12907 = !DILocation(line: 917, column: 27, scope: !12905)
!12908 = !DILocation(line: 917, column: 41, scope: !12905)
!12909 = !DILocation(line: 917, column: 12, scope: !12906)
!12910 = distinct !{!12910, !12903, !12911}
!12911 = !DILocation(line: 921, column: 7, scope: !12901)
!12912 = !DILocation(line: 925, column: 17, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12782, file: !12246, line: 925, column: 6)
!12914 = !DILocation(line: 925, column: 15, scope: !12913)
!12915 = !DILocation(line: 925, column: 6, scope: !12782)
!12916 = !DILocation(line: 928, column: 5, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12918, file: !12246, line: 928, column: 5)
!12918 = distinct !DILexicalBlock(scope: !12913, file: !12246, line: 926, column: 3)
!12919 = !DILocation(line: 932, column: 8, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12918, file: !12246, line: 932, column: 8)
!12921 = !DILocation(line: 932, column: 34, scope: !12920)
!12922 = !DILocation(line: 932, column: 8, scope: !12918)
!12923 = !DILocation(line: 939, column: 27, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12782, file: !12246, line: 939, column: 6)
!12925 = !DILocation(line: 939, column: 38, scope: !12924)
!12926 = !DILocation(line: 939, column: 61, scope: !12924)
!12927 = !DILocation(line: 939, column: 6, scope: !12782)
!12928 = !DILocation(line: 942, column: 5, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12924, file: !12246, line: 940, column: 3)
!12930 = !DILocation(line: 946, column: 27, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12782, file: !12246, line: 946, column: 6)
!12932 = !DILocation(line: 943, column: 3, scope: !12929)
!12933 = !DILocation(line: 946, column: 38, scope: !12931)
!12934 = !DILocation(line: 946, column: 61, scope: !12931)
!12935 = !DILocation(line: 946, column: 6, scope: !12782)
!12936 = !DILocation(line: 949, column: 5, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12931, file: !12246, line: 947, column: 3)
!12938 = !DILocation(line: 950, column: 3, scope: !12937)
!12939 = !DILocation(line: 953, column: 21, scope: !12782)
!12940 = !DILocation(line: 953, column: 70, scope: !12782)
!12941 = !DILocation(line: 953, column: 91, scope: !12782)
!12942 = !DILocation(line: 953, column: 50, scope: !12782)
!12943 = !DILocation(line: 953, column: 47, scope: !12782)
!12944 = !DILocation(line: 953, column: 19, scope: !12782)
!12945 = !DILocation(line: 956, column: 25, scope: !12782)
!12946 = !DILocation(line: 956, column: 12, scope: !12782)
!12947 = !DILocation(line: 958, column: 3, scope: !12782)
!12948 = !DILocation(line: 959, column: 1, scope: !12782)
!12949 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12246, file: !12246, line: 1083, type: !8003, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !12950)
!12950 = !{!12951, !12952, !12953, !12954, !12955, !12956}
!12951 = !DILocalVariable(name: "tmpreg", scope: !12949, file: !12246, line: 1085, type: !113)
!12952 = !DILocalVariable(name: "pllm", scope: !12949, file: !12246, line: 1085, type: !113)
!12953 = !DILocalVariable(name: "plld", scope: !12949, file: !12246, line: 1085, type: !113)
!12954 = !DILocalVariable(name: "pllvco", scope: !12949, file: !12246, line: 1085, type: !113)
!12955 = !DILocalVariable(name: "msiclkrange", scope: !12949, file: !12246, line: 1085, type: !113)
!12956 = !DILocalVariable(name: "sysclockfreq", scope: !12949, file: !12246, line: 1085, type: !113)
!12957 = !DILocation(line: 1087, column: 17, scope: !12949)
!12958 = !DILocation(line: 0, scope: !12949)
!12959 = !DILocation(line: 1090, column: 3, scope: !12949)
!12960 = !DILocation(line: 1100, column: 7, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !12246, line: 1098, column: 5)
!12962 = distinct !DILexicalBlock(scope: !12949, file: !12246, line: 1091, column: 3)
!12963 = !DILocation(line: 1104, column: 63, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12962, file: !12246, line: 1103, column: 5)
!12965 = !DILocation(line: 1104, column: 14, scope: !12964)
!12966 = !DILocation(line: 1105, column: 52, scope: !12964)
!12967 = !DILocation(line: 1105, column: 76, scope: !12964)
!12968 = !DILocation(line: 1106, column: 11, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12964, file: !12246, line: 1106, column: 11)
!12970 = !DILocation(line: 1106, column: 41, scope: !12969)
!12971 = !DILocation(line: 1106, column: 11, scope: !12964)
!12972 = !DILocation(line: 0, scope: !12969)
!12973 = !DILocation(line: 1117, column: 7, scope: !12964)
!12974 = !DILocation(line: 1122, column: 27, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12962, file: !12246, line: 1121, column: 5)
!12976 = !DILocation(line: 1122, column: 56, scope: !12975)
!12977 = !DILocation(line: 1123, column: 30, scope: !12975)
!12978 = !DILocation(line: 1124, column: 7, scope: !12975)
!12979 = !DILocation(line: 0, scope: !12962)
!12980 = !DILocation(line: 1127, column: 3, scope: !12949)
!12981 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12246, file: !12246, line: 1005, type: !10131, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !12982)
!12982 = !{!12983, !12984, !12985, !12986, !12996}
!12983 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12981, file: !12246, line: 1005, type: !113)
!12984 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12981, file: !12246, line: 1005, type: !113)
!12985 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12981, file: !12246, line: 1005, type: !113)
!12986 = !DILocalVariable(name: "gpio", scope: !12981, file: !12246, line: 1007, type: !12987)
!12987 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12988, line: 64, baseType: !12989)
!12988 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12988, line: 48, size: 160, elements: !12990)
!12990 = !{!12991, !12992, !12993, !12994, !12995}
!12991 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12989, file: !12988, line: 50, baseType: !113, size: 32)
!12992 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12989, file: !12988, line: 53, baseType: !113, size: 32, offset: 32)
!12993 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12989, file: !12988, line: 56, baseType: !113, size: 32, offset: 64)
!12994 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12989, file: !12988, line: 59, baseType: !113, size: 32, offset: 96)
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12989, file: !12988, line: 62, baseType: !113, size: 32, offset: 128)
!12996 = !DILocalVariable(name: "tmpreg", scope: !12997, file: !12246, line: 1022, type: !568)
!12997 = distinct !DILexicalBlock(scope: !12981, file: !12246, line: 1022, column: 3)
!12998 = !DILocation(line: 0, scope: !12981)
!12999 = !DILocation(line: 1007, column: 3, scope: !12981)
!13000 = !DILocation(line: 1007, column: 20, scope: !12981)
!13001 = !DILocation(line: 1015, column: 8, scope: !12981)
!13002 = !DILocation(line: 1015, column: 18, scope: !12981)
!13003 = !DILocation(line: 1016, column: 8, scope: !12981)
!13004 = !DILocation(line: 1016, column: 18, scope: !12981)
!13005 = !DILocation(line: 1017, column: 8, scope: !12981)
!13006 = !DILocation(line: 1017, column: 18, scope: !12981)
!13007 = !DILocation(line: 1018, column: 8, scope: !12981)
!13008 = !DILocation(line: 1018, column: 18, scope: !12981)
!13009 = !DILocation(line: 1019, column: 8, scope: !12981)
!13010 = !DILocation(line: 1019, column: 18, scope: !12981)
!13011 = !DILocation(line: 1022, column: 3, scope: !12997)
!13012 = !DILocation(line: 1022, column: 3, scope: !12981)
!13013 = !DILocation(line: 1024, column: 3, scope: !12981)
!13014 = !DILocation(line: 1027, column: 3, scope: !12981)
!13015 = !DILocation(line: 1028, column: 1, scope: !12981)
!13016 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12988, file: !12988, line: 293, type: !13017, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!13017 = !DISubroutineType(types: !13018)
!13018 = !{null, !3278, !13019}
!13019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12987, size: 32)
!13020 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12246, file: !12246, line: 1039, type: !3381, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !437)
!13021 = !DILocation(line: 1041, column: 38, scope: !13020)
!13022 = !DILocation(line: 1042, column: 1, scope: !13020)
!13023 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12246, file: !12246, line: 1048, type: !3381, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !437)
!13024 = !DILocation(line: 1050, column: 38, scope: !13023)
!13025 = !DILocation(line: 1051, column: 1, scope: !13023)
!13026 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12246, file: !12246, line: 1139, type: !8003, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !437)
!13027 = !DILocation(line: 1141, column: 10, scope: !13026)
!13028 = !DILocation(line: 1141, column: 3, scope: !13026)
!13029 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12246, file: !12246, line: 1150, type: !8003, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !437)
!13030 = !DILocation(line: 1153, column: 11, scope: !13029)
!13031 = !DILocation(line: 1153, column: 56, scope: !13029)
!13032 = !DILocation(line: 1153, column: 79, scope: !13029)
!13033 = !DILocation(line: 1153, column: 36, scope: !13029)
!13034 = !DILocation(line: 1153, column: 33, scope: !13029)
!13035 = !DILocation(line: 1153, column: 3, scope: !13029)
!13036 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12246, file: !12246, line: 1162, type: !8003, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !437)
!13037 = !DILocation(line: 1165, column: 11, scope: !13036)
!13038 = !DILocation(line: 1165, column: 55, scope: !13036)
!13039 = !DILocation(line: 1165, column: 78, scope: !13036)
!13040 = !DILocation(line: 1165, column: 35, scope: !13036)
!13041 = !DILocation(line: 1165, column: 32, scope: !13036)
!13042 = !DILocation(line: 1165, column: 3, scope: !13036)
!13043 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12246, file: !12246, line: 1175, type: !13044, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13046)
!13044 = !DISubroutineType(types: !13045)
!13045 = !{null, !12314}
!13046 = !{!13047}
!13047 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13043, file: !12246, line: 1175, type: !12314)
!13048 = !DILocation(line: 0, scope: !13043)
!13049 = !DILocation(line: 1181, column: 22, scope: !13043)
!13050 = !DILocation(line: 1181, column: 37, scope: !13043)
!13051 = !DILocation(line: 1186, column: 12, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13043, file: !12246, line: 1186, column: 6)
!13053 = !DILocation(line: 1186, column: 15, scope: !13052)
!13054 = !DILocation(line: 1186, column: 31, scope: !13052)
!13055 = !DILocation(line: 1186, column: 6, scope: !13043)
!13056 = !DILocation(line: 1188, column: 24, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13052, file: !12246, line: 1187, column: 3)
!13058 = !DILocation(line: 1188, column: 33, scope: !13057)
!13059 = !DILocation(line: 1189, column: 3, scope: !13057)
!13060 = !DILocation(line: 1190, column: 17, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13052, file: !12246, line: 1190, column: 11)
!13062 = !DILocation(line: 1190, column: 20, scope: !13061)
!13063 = !DILocation(line: 1190, column: 35, scope: !13061)
!13064 = !DILocation(line: 0, scope: !13061)
!13065 = !DILocation(line: 1190, column: 11, scope: !13052)
!13066 = !DILocation(line: 1192, column: 33, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13061, file: !12246, line: 1191, column: 3)
!13068 = !DILocation(line: 1193, column: 3, scope: !13067)
!13069 = !DILocation(line: 1196, column: 33, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13061, file: !12246, line: 1195, column: 3)
!13071 = !DILocation(line: 1200, column: 12, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13043, file: !12246, line: 1200, column: 6)
!13073 = !DILocation(line: 1200, column: 15, scope: !13072)
!13074 = !DILocation(line: 1206, column: 24, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13072, file: !12246, line: 1205, column: 3)
!13076 = !DILocation(line: 1206, column: 33, scope: !13075)
!13077 = !DILocation(line: 1209, column: 61, scope: !13043)
!13078 = !DILocation(line: 1209, column: 88, scope: !13043)
!13079 = !DILocation(line: 1209, column: 22, scope: !13043)
!13080 = !DILocation(line: 1209, column: 42, scope: !13043)
!13081 = !DILocation(line: 1212, column: 12, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13043, file: !12246, line: 1212, column: 6)
!13083 = !DILocation(line: 1212, column: 6, scope: !13043)
!13084 = !DILocation(line: 1218, column: 24, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13082, file: !12246, line: 1217, column: 3)
!13086 = !DILocation(line: 1218, column: 33, scope: !13085)
!13087 = !DILocation(line: 1221, column: 61, scope: !13043)
!13088 = !DILocation(line: 1221, column: 88, scope: !13043)
!13089 = !DILocation(line: 1221, column: 22, scope: !13043)
!13090 = !DILocation(line: 1221, column: 42, scope: !13043)
!13091 = !DILocation(line: 1222, column: 55, scope: !13043)
!13092 = !DILocation(line: 1222, column: 61, scope: !13043)
!13093 = !DILocation(line: 1222, column: 22, scope: !13043)
!13094 = !DILocation(line: 1222, column: 36, scope: !13043)
!13095 = !DILocation(line: 1225, column: 12, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13043, file: !12246, line: 1225, column: 6)
!13097 = !DILocation(line: 1225, column: 16, scope: !13096)
!13098 = !DILocation(line: 1225, column: 33, scope: !13096)
!13099 = !DILocation(line: 1225, column: 6, scope: !13043)
!13100 = !DILocation(line: 1227, column: 24, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13096, file: !12246, line: 1226, column: 3)
!13102 = !DILocation(line: 1227, column: 33, scope: !13101)
!13103 = !DILocation(line: 1228, column: 3, scope: !13101)
!13104 = !DILocation(line: 1229, column: 17, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13096, file: !12246, line: 1229, column: 11)
!13106 = !DILocation(line: 1229, column: 21, scope: !13105)
!13107 = !DILocation(line: 1229, column: 37, scope: !13105)
!13108 = !DILocation(line: 0, scope: !13105)
!13109 = !DILocation(line: 1229, column: 11, scope: !13096)
!13110 = !DILocation(line: 1231, column: 33, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13105, file: !12246, line: 1230, column: 3)
!13112 = !DILocation(line: 1232, column: 3, scope: !13111)
!13113 = !DILocation(line: 1235, column: 33, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13105, file: !12246, line: 1234, column: 3)
!13115 = !DILocation(line: 1239, column: 12, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13043, file: !12246, line: 1239, column: 6)
!13117 = !DILocation(line: 1239, column: 16, scope: !13116)
!13118 = !DILocation(line: 1245, column: 24, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13116, file: !12246, line: 1244, column: 3)
!13120 = !DILocation(line: 1245, column: 33, scope: !13119)
!13121 = !DILocation(line: 1250, column: 12, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13043, file: !12246, line: 1250, column: 6)
!13123 = !DILocation(line: 1250, column: 15, scope: !13122)
!13124 = !DILocation(line: 1250, column: 30, scope: !13122)
!13125 = !DILocation(line: 1250, column: 6, scope: !13043)
!13126 = !DILocation(line: 1256, column: 28, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13122, file: !12246, line: 1255, column: 3)
!13128 = !DILocation(line: 1256, column: 37, scope: !13127)
!13129 = !DILocation(line: 1258, column: 54, scope: !13043)
!13130 = !DILocation(line: 1258, column: 59, scope: !13043)
!13131 = !DILocation(line: 1258, column: 26, scope: !13043)
!13132 = !DILocation(line: 1258, column: 36, scope: !13043)
!13133 = !DILocation(line: 1259, column: 51, scope: !13043)
!13134 = !DILocation(line: 1259, column: 56, scope: !13043)
!13135 = !DILocation(line: 1259, column: 26, scope: !13043)
!13136 = !DILocation(line: 1259, column: 33, scope: !13043)
!13137 = !DILocation(line: 1260, column: 51, scope: !13043)
!13138 = !DILocation(line: 1260, column: 56, scope: !13043)
!13139 = !DILocation(line: 1260, column: 26, scope: !13043)
!13140 = !DILocation(line: 1260, column: 33, scope: !13043)
!13141 = !DILocation(line: 1261, column: 1, scope: !13043)
!13142 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12246, file: !12246, line: 1271, type: !13143, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13145)
!13143 = !DISubroutineType(types: !13144)
!13144 = !{null, !12785, !1289}
!13145 = !{!13146, !13147}
!13146 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13142, file: !12246, line: 1271, type: !12785)
!13147 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13142, file: !12246, line: 1271, type: !1289)
!13148 = !DILocation(line: 0, scope: !13142)
!13149 = !DILocation(line: 1278, column: 22, scope: !13142)
!13150 = !DILocation(line: 1278, column: 32, scope: !13142)
!13151 = !DILocation(line: 1281, column: 53, scope: !13142)
!13152 = !DILocation(line: 1281, column: 58, scope: !13142)
!13153 = !DILocation(line: 1281, column: 22, scope: !13142)
!13154 = !DILocation(line: 1281, column: 35, scope: !13142)
!13155 = !DILocation(line: 1284, column: 54, scope: !13142)
!13156 = !DILocation(line: 1284, column: 59, scope: !13142)
!13157 = !DILocation(line: 1284, column: 22, scope: !13142)
!13158 = !DILocation(line: 1284, column: 36, scope: !13142)
!13159 = !DILocation(line: 1287, column: 55, scope: !13142)
!13160 = !DILocation(line: 1287, column: 60, scope: !13142)
!13161 = !DILocation(line: 1287, column: 22, scope: !13142)
!13162 = !DILocation(line: 1287, column: 37, scope: !13142)
!13163 = !DILocation(line: 1290, column: 56, scope: !13142)
!13164 = !DILocation(line: 1290, column: 79, scope: !13142)
!13165 = !DILocation(line: 1290, column: 22, scope: !13142)
!13166 = !DILocation(line: 1290, column: 37, scope: !13142)
!13167 = !DILocation(line: 1293, column: 16, scope: !13142)
!13168 = !DILocation(line: 1293, column: 14, scope: !13142)
!13169 = !DILocation(line: 1294, column: 1, scope: !13142)
!13170 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12246, file: !12246, line: 1301, type: !3381, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !437)
!13171 = !DILocation(line: 1304, column: 6, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13170, file: !12246, line: 1304, column: 6)
!13173 = !DILocation(line: 1304, column: 6, scope: !13170)
!13174 = !DILocation(line: 1307, column: 5, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13172, file: !12246, line: 1305, column: 3)
!13176 = !DILocation(line: 1310, column: 5, scope: !13175)
!13177 = !DILocation(line: 1311, column: 3, scope: !13175)
!13178 = !DILocation(line: 1312, column: 1, scope: !13170)
!13179 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12246, file: !12246, line: 1318, type: !3381, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !437)
!13180 = !DILocation(line: 1323, column: 1, scope: !13179)
!13181 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13182, file: !13182, line: 147, type: !6721, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13183)
!13182 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13183 = !{!13184}
!13184 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13181, file: !13182, line: 147, type: !113)
!13185 = !DILocation(line: 0, scope: !13181)
!13186 = !DILocation(line: 150, column: 3, scope: !13181)
!13187 = !DILocation(line: 151, column: 1, scope: !13181)
!13188 = distinct !DISubprogram(name: "LL_InitTick", scope: !13189, file: !13189, line: 222, type: !10657, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13190)
!13189 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13190 = !{!13191, !13192}
!13191 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13188, file: !13189, line: 222, type: !113)
!13192 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13188, file: !13189, line: 222, type: !113)
!13193 = !DILocation(line: 0, scope: !13188)
!13194 = !DILocation(line: 225, column: 46, scope: !13188)
!13195 = !DILocation(line: 225, column: 55, scope: !13188)
!13196 = !DILocation(line: 225, column: 18, scope: !13188)
!13197 = !DILocation(line: 226, column: 18, scope: !13188)
!13198 = !DILocation(line: 227, column: 18, scope: !13188)
!13199 = !DILocation(line: 229, column: 1, scope: !13188)
!13200 = distinct !DISubprogram(name: "LL_mDelay", scope: !13182, file: !13182, line: 163, type: !6721, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13201)
!13201 = !{!13202, !13203, !13204}
!13202 = !DILocalVariable(name: "Delay", arg: 1, scope: !13200, file: !13182, line: 163, type: !113)
!13203 = !DILocalVariable(name: "tmp", scope: !13200, file: !13182, line: 165, type: !568)
!13204 = !DILocalVariable(name: "tmpDelay", scope: !13200, file: !13182, line: 166, type: !113)
!13205 = !DILocation(line: 0, scope: !13200)
!13206 = !DILocation(line: 165, column: 3, scope: !13200)
!13207 = !DILocation(line: 165, column: 18, scope: !13200)
!13208 = !DILocation(line: 165, column: 33, scope: !13200)
!13209 = !DILocation(line: 169, column: 10, scope: !13200)
!13210 = !DILocation(line: 172, column: 15, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13200, file: !13182, line: 172, column: 6)
!13212 = !DILocation(line: 177, column: 3, scope: !13200)
!13213 = !DILocation(line: 179, column: 18, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13215, file: !13182, line: 179, column: 8)
!13215 = distinct !DILexicalBlock(scope: !13200, file: !13182, line: 178, column: 3)
!13216 = !DILocation(line: 177, column: 19, scope: !13200)
!13217 = !DILocation(line: 184, column: 1, scope: !13200)
!13218 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13182, file: !13182, line: 227, type: !6721, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13219)
!13219 = !{!13220}
!13220 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13218, file: !13182, line: 227, type: !113)
!13221 = !DILocation(line: 0, scope: !13218)
!13222 = !DILocation(line: 230, column: 19, scope: !13218)
!13223 = !DILocation(line: 231, column: 1, scope: !13218)
!13224 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13182, file: !13182, line: 242, type: !13225, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13228)
!13225 = !DISubroutineType(types: !13226)
!13226 = !{!13227, !113}
!13227 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1253, line: 194, baseType: !1252)
!13228 = !{!13229, !13230, !13231}
!13229 = !DILocalVariable(name: "Frequency", arg: 1, scope: !13224, file: !13182, line: 242, type: !113)
!13230 = !DILocalVariable(name: "status", scope: !13224, file: !13182, line: 244, type: !13227)
!13231 = !DILocalVariable(name: "latency", scope: !13224, file: !13182, line: 246, type: !113)
!13232 = !DILocation(line: 0, scope: !13224)
!13233 = !DILocation(line: 249, column: 25, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13224, file: !13182, line: 249, column: 7)
!13235 = !DILocation(line: 255, column: 9, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !13182, line: 255, column: 9)
!13237 = distinct !DILexicalBlock(scope: !13234, file: !13182, line: 254, column: 3)
!13238 = !DILocation(line: 255, column: 41, scope: !13236)
!13239 = !DILocation(line: 255, column: 9, scope: !13237)
!13240 = !DILocation(line: 257, column: 21, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13242, file: !13182, line: 257, column: 11)
!13242 = distinct !DILexicalBlock(scope: !13236, file: !13182, line: 256, column: 5)
!13243 = !DILocation(line: 284, column: 9, scope: !13237)
!13244 = !DILocation(line: 264, column: 14, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13236, file: !13182, line: 264, column: 14)
!13246 = !DILocation(line: 264, column: 46, scope: !13245)
!13247 = !DILocation(line: 264, column: 14, scope: !13236)
!13248 = !DILocation(line: 266, column: 21, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13250, file: !13182, line: 266, column: 11)
!13250 = distinct !DILexicalBlock(scope: !13245, file: !13182, line: 265, column: 5)
!13251 = !DILocation(line: 275, column: 21, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13253, file: !13182, line: 275, column: 11)
!13253 = distinct !DILexicalBlock(scope: !13245, file: !13182, line: 274, column: 5)
!13254 = !DILocation(line: 286, column: 7, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13256, file: !13182, line: 285, column: 5)
!13256 = distinct !DILexicalBlock(scope: !13237, file: !13182, line: 284, column: 9)
!13257 = !DILocation(line: 287, column: 5, scope: !13255)
!13258 = !DILocation(line: 289, column: 5, scope: !13237)
!13259 = !DILocation(line: 293, column: 9, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13237, file: !13182, line: 293, column: 9)
!13261 = !DILocation(line: 293, column: 31, scope: !13260)
!13262 = !DILocation(line: 293, column: 9, scope: !13237)
!13263 = !DILocation(line: 298, column: 3, scope: !13224)
!13264 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !6735, file: !6735, line: 285, type: !8003, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13265 = !DILocation(line: 287, column: 21, scope: !13264)
!13266 = !DILocation(line: 287, column: 3, scope: !13264)
!13267 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !10656, file: !10656, line: 1897, type: !3381, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13268 = !DILocation(line: 1899, column: 3, scope: !13267)
!13269 = !DILocation(line: 1900, column: 1, scope: !13267)
!13270 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !10656, file: !10656, line: 1843, type: !6721, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13271)
!13271 = !{!13272}
!13272 = !DILocalVariable(name: "Latency", arg: 1, scope: !13270, file: !10656, line: 1843, type: !113)
!13273 = !DILocation(line: 0, scope: !13270)
!13274 = !DILocation(line: 1845, column: 3, scope: !13270)
!13275 = !DILocation(line: 1846, column: 1, scope: !13270)
!13276 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !10656, file: !10656, line: 1855, type: !8003, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13277 = !DILocation(line: 1857, column: 21, scope: !13276)
!13278 = !DILocation(line: 1857, column: 3, scope: !13276)
!13279 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13182, file: !13182, line: 323, type: !13280, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13295)
!13280 = !DISubroutineType(types: !13281)
!13281 = !{!13227, !13282, !13288}
!13282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13283, size: 32)
!13283 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13189, line: 103, baseType: !13284)
!13284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13189, line: 90, size: 64, elements: !13285)
!13285 = !{!13286, !13287}
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !13284, file: !13189, line: 92, baseType: !113, size: 32)
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !13284, file: !13189, line: 98, baseType: !113, size: 32, offset: 32)
!13288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13289, size: 32)
!13289 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13189, line: 128, baseType: !13290)
!13290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13189, line: 108, size: 96, elements: !13291)
!13291 = !{!13292, !13293, !13294}
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13290, file: !13189, line: 110, baseType: !113, size: 32)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13290, file: !13189, line: 116, baseType: !113, size: 32, offset: 32)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13290, file: !13189, line: 122, baseType: !113, size: 32, offset: 64)
!13295 = !{!13296, !13297, !13298, !13299}
!13296 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13279, file: !13182, line: 323, type: !13282)
!13297 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13279, file: !13182, line: 324, type: !13288)
!13298 = !DILocalVariable(name: "status", scope: !13279, file: !13182, line: 326, type: !13227)
!13299 = !DILocalVariable(name: "pllfreq", scope: !13279, file: !13182, line: 327, type: !113)
!13300 = !DILocation(line: 0, scope: !13279)
!13301 = !DILocation(line: 330, column: 7, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13279, file: !13182, line: 330, column: 7)
!13303 = !DILocation(line: 330, column: 26, scope: !13302)
!13304 = !DILocation(line: 330, column: 7, scope: !13279)
!13305 = !DILocation(line: 333, column: 15, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13302, file: !13182, line: 331, column: 3)
!13307 = !DILocation(line: 336, column: 9, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13306, file: !13182, line: 336, column: 9)
!13309 = !DILocation(line: 336, column: 30, scope: !13308)
!13310 = !DILocation(line: 336, column: 9, scope: !13306)
!13311 = !DILocation(line: 338, column: 7, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13308, file: !13182, line: 337, column: 5)
!13313 = !DILocation(line: 339, column: 7, scope: !13312)
!13314 = !DILocation(line: 339, column: 14, scope: !13312)
!13315 = !DILocation(line: 339, column: 35, scope: !13312)
!13316 = distinct !{!13316, !13313, !13317}
!13317 = !DILocation(line: 342, column: 7, scope: !13312)
!13318 = !DILocation(line: 346, column: 76, scope: !13306)
!13319 = !DILocation(line: 346, column: 105, scope: !13306)
!13320 = !DILocation(line: 346, column: 5, scope: !13306)
!13321 = !DILocation(line: 349, column: 14, scope: !13306)
!13322 = !DILocation(line: 350, column: 3, scope: !13306)
!13323 = !DILocation(line: 0, scope: !13302)
!13324 = !DILocation(line: 357, column: 3, scope: !13279)
!13325 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13182, file: !13182, line: 487, type: !13326, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13328)
!13326 = !DISubroutineType(types: !13327)
!13327 = !{!13227}
!13328 = !{!13329}
!13329 = !DILocalVariable(name: "status", scope: !13325, file: !13182, line: 489, type: !13227)
!13330 = !DILocation(line: 0, scope: !13325)
!13331 = !DILocation(line: 492, column: 7, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13325, file: !13182, line: 492, column: 7)
!13333 = !DILocation(line: 492, column: 28, scope: !13332)
!13334 = !DILocation(line: 492, column: 7, scope: !13325)
!13335 = !DILocation(line: 498, column: 3, scope: !13325)
!13336 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13182, file: !13182, line: 457, type: !13337, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13339)
!13337 = !DISubroutineType(types: !13338)
!13338 = !{!113, !113, !13282}
!13339 = !{!13340, !13341, !13342}
!13340 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13336, file: !13182, line: 457, type: !113)
!13341 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13336, file: !13182, line: 457, type: !13282)
!13342 = !DILocalVariable(name: "pllfreq", scope: !13336, file: !13182, line: 459, type: !113)
!13343 = !DILocation(line: 0, scope: !13336)
!13344 = !DILocation(line: 470, column: 68, scope: !13336)
!13345 = !DILocation(line: 470, column: 75, scope: !13336)
!13346 = !DILocation(line: 470, column: 35, scope: !13336)
!13347 = !DILocation(line: 470, column: 34, scope: !13336)
!13348 = !DILocation(line: 470, column: 32, scope: !13336)
!13349 = !DILocation(line: 475, column: 46, scope: !13336)
!13350 = !DILocation(line: 475, column: 53, scope: !13336)
!13351 = !DILocation(line: 475, column: 76, scope: !13336)
!13352 = !DILocation(line: 475, column: 21, scope: !13336)
!13353 = !DILocation(line: 478, column: 3, scope: !13336)
!13354 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10008, file: !10008, line: 612, type: !8003, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13355 = !DILocation(line: 614, column: 12, scope: !13354)
!13356 = !DILocation(line: 614, column: 11, scope: !13354)
!13357 = !DILocation(line: 614, column: 3, scope: !13354)
!13358 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10008, file: !10008, line: 592, type: !3381, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13359 = !DILocation(line: 594, column: 3, scope: !13358)
!13360 = !DILocation(line: 595, column: 1, scope: !13358)
!13361 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10008, file: !10008, line: 1219, type: !10131, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13362)
!13362 = !{!13363, !13364, !13365}
!13363 = !DILocalVariable(name: "Source", arg: 1, scope: !13361, file: !10008, line: 1219, type: !113)
!13364 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !13361, file: !10008, line: 1219, type: !113)
!13365 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !13361, file: !10008, line: 1219, type: !113)
!13366 = !DILocation(line: 0, scope: !13361)
!13367 = !DILocation(line: 1221, column: 3, scope: !13361)
!13368 = !DILocation(line: 1222, column: 1, scope: !13361)
!13369 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13182, file: !13182, line: 510, type: !13370, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13372)
!13370 = !DISubroutineType(types: !13371)
!13371 = !{!13227, !113, !13288}
!13372 = !{!13373, !13374, !13375, !13376}
!13373 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13369, file: !13182, line: 510, type: !113)
!13374 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13369, file: !13182, line: 510, type: !13288)
!13375 = !DILocalVariable(name: "status", scope: !13369, file: !13182, line: 512, type: !13227)
!13376 = !DILocalVariable(name: "hclk_frequency", scope: !13369, file: !13182, line: 513, type: !113)
!13377 = !DILocation(line: 0, scope: !13369)
!13378 = !DILocation(line: 520, column: 20, scope: !13369)
!13379 = !DILocation(line: 523, column: 7, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13369, file: !13182, line: 523, column: 7)
!13381 = !DILocation(line: 523, column: 23, scope: !13380)
!13382 = !DILocation(line: 523, column: 7, scope: !13369)
!13383 = !DILocation(line: 526, column: 14, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13380, file: !13182, line: 524, column: 3)
!13385 = !DILocation(line: 530, column: 14, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13369, file: !13182, line: 530, column: 7)
!13387 = !DILocation(line: 530, column: 7, scope: !13369)
!13388 = !DILocation(line: 533, column: 5, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13386, file: !13182, line: 531, column: 3)
!13390 = !DILocation(line: 534, column: 5, scope: !13389)
!13391 = !DILocation(line: 534, column: 12, scope: !13389)
!13392 = !DILocation(line: 534, column: 33, scope: !13389)
!13393 = distinct !{!13393, !13390, !13394}
!13394 = !DILocation(line: 537, column: 5, scope: !13389)
!13395 = !DILocation(line: 540, column: 49, scope: !13389)
!13396 = !DILocation(line: 540, column: 5, scope: !13389)
!13397 = !DILocation(line: 541, column: 5, scope: !13389)
!13398 = !DILocation(line: 542, column: 5, scope: !13389)
!13399 = !DILocation(line: 542, column: 12, scope: !13389)
!13400 = !DILocation(line: 542, column: 37, scope: !13389)
!13401 = distinct !{!13401, !13398, !13402}
!13402 = !DILocation(line: 545, column: 5, scope: !13389)
!13403 = !DILocation(line: 548, column: 50, scope: !13389)
!13404 = !DILocation(line: 548, column: 5, scope: !13389)
!13405 = !DILocation(line: 549, column: 50, scope: !13389)
!13406 = !DILocation(line: 549, column: 5, scope: !13389)
!13407 = !DILocation(line: 550, column: 3, scope: !13389)
!13408 = !DILocation(line: 553, column: 7, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13369, file: !13182, line: 553, column: 7)
!13410 = !DILocation(line: 553, column: 23, scope: !13409)
!13411 = !DILocation(line: 553, column: 7, scope: !13369)
!13412 = !DILocation(line: 556, column: 14, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13409, file: !13182, line: 554, column: 3)
!13414 = !DILocation(line: 557, column: 3, scope: !13413)
!13415 = !DILocation(line: 560, column: 14, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13369, file: !13182, line: 560, column: 7)
!13417 = !DILocation(line: 560, column: 7, scope: !13369)
!13418 = !DILocation(line: 562, column: 5, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13416, file: !13182, line: 561, column: 3)
!13420 = !DILocation(line: 563, column: 3, scope: !13419)
!13421 = !DILocation(line: 565, column: 3, scope: !13369)
!13422 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10008, file: !10008, line: 1169, type: !3381, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13423 = !DILocation(line: 1171, column: 3, scope: !13422)
!13424 = !DILocation(line: 1172, column: 1, scope: !13422)
!13425 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10008, file: !10008, line: 1190, type: !8003, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13426 = !DILocation(line: 1192, column: 12, scope: !13425)
!13427 = !DILocation(line: 1192, column: 11, scope: !13425)
!13428 = !DILocation(line: 1192, column: 3, scope: !13425)
!13429 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10008, file: !10008, line: 944, type: !6721, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13430)
!13430 = !{!13431}
!13431 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13429, file: !10008, line: 944, type: !113)
!13432 = !DILocation(line: 0, scope: !13429)
!13433 = !DILocation(line: 946, column: 3, scope: !13429)
!13434 = !DILocation(line: 947, column: 1, scope: !13429)
!13435 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10008, file: !10008, line: 910, type: !6721, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13436)
!13436 = !{!13437}
!13437 = !DILocalVariable(name: "Source", arg: 1, scope: !13435, file: !10008, line: 910, type: !113)
!13438 = !DILocation(line: 0, scope: !13435)
!13439 = !DILocation(line: 912, column: 3, scope: !13435)
!13440 = !DILocation(line: 913, column: 1, scope: !13435)
!13441 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10008, file: !10008, line: 924, type: !8003, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13442 = !DILocation(line: 926, column: 21, scope: !13441)
!13443 = !DILocation(line: 926, column: 3, scope: !13441)
!13444 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10008, file: !10008, line: 960, type: !6721, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13445)
!13445 = !{!13446}
!13446 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13444, file: !10008, line: 960, type: !113)
!13447 = !DILocation(line: 0, scope: !13444)
!13448 = !DILocation(line: 962, column: 3, scope: !13444)
!13449 = !DILocation(line: 963, column: 1, scope: !13444)
!13450 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10008, file: !10008, line: 976, type: !6721, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13451)
!13451 = !{!13452}
!13452 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13450, file: !10008, line: 976, type: !113)
!13453 = !DILocation(line: 0, scope: !13450)
!13454 = !DILocation(line: 978, column: 3, scope: !13450)
!13455 = !DILocation(line: 979, column: 1, scope: !13450)
!13456 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13182, file: !13182, line: 385, type: !13457, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !13459)
!13457 = !DISubroutineType(types: !13458)
!13458 = !{!13227, !113, !113, !13282, !13288}
!13459 = !{!13460, !13461, !13462, !13463, !13464, !13465}
!13460 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13456, file: !13182, line: 385, type: !113)
!13461 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13456, file: !13182, line: 385, type: !113)
!13462 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13456, file: !13182, line: 386, type: !13282)
!13463 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13456, file: !13182, line: 386, type: !13288)
!13464 = !DILocalVariable(name: "status", scope: !13456, file: !13182, line: 388, type: !13227)
!13465 = !DILocalVariable(name: "pllfreq", scope: !13456, file: !13182, line: 389, type: !113)
!13466 = !DILocation(line: 0, scope: !13456)
!13467 = !DILocation(line: 396, column: 7, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13456, file: !13182, line: 396, column: 7)
!13469 = !DILocation(line: 396, column: 26, scope: !13468)
!13470 = !DILocation(line: 396, column: 7, scope: !13456)
!13471 = !DILocation(line: 400, column: 15, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13468, file: !13182, line: 397, column: 3)
!13473 = !DILocation(line: 403, column: 9, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13472, file: !13182, line: 403, column: 9)
!13475 = !DILocation(line: 403, column: 30, scope: !13474)
!13476 = !DILocation(line: 403, column: 9, scope: !13472)
!13477 = !DILocation(line: 406, column: 21, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !13182, line: 406, column: 11)
!13479 = distinct !DILexicalBlock(scope: !13474, file: !13182, line: 404, column: 5)
!13480 = !DILocation(line: 406, column: 11, scope: !13479)
!13481 = !DILocation(line: 408, column: 9, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13478, file: !13182, line: 407, column: 7)
!13483 = !DILocation(line: 409, column: 7, scope: !13482)
!13484 = !DILocation(line: 412, column: 9, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13478, file: !13182, line: 411, column: 7)
!13486 = !DILocation(line: 416, column: 7, scope: !13479)
!13487 = !DILocation(line: 417, column: 7, scope: !13479)
!13488 = !DILocation(line: 417, column: 14, scope: !13479)
!13489 = !DILocation(line: 417, column: 35, scope: !13479)
!13490 = distinct !{!13490, !13487, !13491}
!13491 = !DILocation(line: 420, column: 7, scope: !13479)
!13492 = !DILocation(line: 424, column: 78, scope: !13472)
!13493 = !DILocation(line: 424, column: 107, scope: !13472)
!13494 = !DILocation(line: 424, column: 7, scope: !13472)
!13495 = !DILocation(line: 427, column: 14, scope: !13472)
!13496 = !DILocation(line: 428, column: 3, scope: !13472)
!13497 = !DILocation(line: 0, scope: !13468)
!13498 = !DILocation(line: 435, column: 3, scope: !13456)
!13499 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10008, file: !10008, line: 545, type: !8003, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13500 = !DILocation(line: 547, column: 12, scope: !13499)
!13501 = !DILocation(line: 547, column: 11, scope: !13499)
!13502 = !DILocation(line: 547, column: 3, scope: !13499)
!13503 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10008, file: !10008, line: 505, type: !3381, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13504 = !DILocation(line: 507, column: 3, scope: !13503)
!13505 = !DILocation(line: 508, column: 1, scope: !13503)
!13506 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10008, file: !10008, line: 515, type: !3381, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13507 = !DILocation(line: 517, column: 3, scope: !13506)
!13508 = !DILocation(line: 518, column: 1, scope: !13506)
!13509 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10008, file: !10008, line: 525, type: !3381, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3292, retainedNodes: !437)
!13510 = !DILocation(line: 527, column: 3, scope: !13509)
!13511 = !DILocation(line: 528, column: 1, scope: !13509)
!13512 = distinct !DISubprogram(name: "z_device_state_init", scope: !13513, file: !13513, line: 23, type: !3381, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13514)
!13513 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13514 = !{!13515}
!13515 = !DILocalVariable(name: "dev", scope: !13512, file: !13513, line: 25, type: !13516)
!13516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13517, size: 32)
!13517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13518)
!13518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !13519)
!13519 = !{!13520, !13521, !13522, !13523, !13529, !13530}
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13518, file: !411, line: 380, baseType: !105, size: 32)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13518, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13518, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!13523 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13518, file: !411, line: 386, baseType: !13524, size: 32, offset: 96)
!13524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13525, size: 32)
!13525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !13526)
!13526 = !{!13527, !13528}
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13525, file: !411, line: 359, baseType: !164, size: 8)
!13528 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13525, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13518, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13518, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!13531 = !DILocation(line: 0, scope: !13512)
!13532 = !DILocation(line: 31, column: 1, scope: !13512)
!13533 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13513, file: !13513, line: 33, type: !13534, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13536)
!13534 = !DISubroutineType(types: !13535)
!13535 = !{!13516, !105}
!13536 = !{!13537, !13538}
!13537 = !DILocalVariable(name: "name", arg: 1, scope: !13533, file: !13513, line: 33, type: !105)
!13538 = !DILocalVariable(name: "dev", scope: !13533, file: !13513, line: 35, type: !13516)
!13539 = !DILocation(line: 0, scope: !13533)
!13540 = !DILocation(line: 40, column: 12, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13533, file: !13513, line: 40, column: 6)
!13542 = !DILocation(line: 40, column: 21, scope: !13541)
!13543 = !DILocation(line: 40, column: 25, scope: !13541)
!13544 = !DILocation(line: 40, column: 33, scope: !13541)
!13545 = !DILocation(line: 40, column: 6, scope: !13533)
!13546 = !DILocation(line: 55, column: 2, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13533, file: !13513, line: 55, column: 2)
!13548 = !DILocation(line: 50, column: 7, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !13513, line: 50, column: 7)
!13550 = distinct !DILexicalBlock(scope: !13551, file: !13513, line: 49, column: 57)
!13551 = distinct !DILexicalBlock(scope: !13552, file: !13513, line: 49, column: 2)
!13552 = distinct !DILexicalBlock(scope: !13533, file: !13513, line: 49, column: 2)
!13553 = !DILocation(line: 50, column: 30, scope: !13549)
!13554 = !DILocation(line: 50, column: 39, scope: !13549)
!13555 = !DILocation(line: 50, column: 44, scope: !13549)
!13556 = !DILocation(line: 50, column: 7, scope: !13550)
!13557 = !DILocation(line: 49, column: 53, scope: !13551)
!13558 = !DILocation(line: 49, column: 33, scope: !13551)
!13559 = !DILocation(line: 49, column: 2, scope: !13552)
!13560 = distinct !{!13560, !13559, !13561}
!13561 = !DILocation(line: 53, column: 2, scope: !13552)
!13562 = !DILocation(line: 56, column: 7, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13564, file: !13513, line: 56, column: 7)
!13564 = distinct !DILexicalBlock(scope: !13565, file: !13513, line: 55, column: 57)
!13565 = distinct !DILexicalBlock(scope: !13547, file: !13513, line: 55, column: 2)
!13566 = !DILocation(line: 56, column: 30, scope: !13563)
!13567 = !DILocation(line: 56, column: 52, scope: !13563)
!13568 = !DILocation(line: 56, column: 34, scope: !13563)
!13569 = !DILocation(line: 56, column: 58, scope: !13563)
!13570 = !DILocation(line: 56, column: 7, scope: !13564)
!13571 = !DILocation(line: 55, column: 53, scope: !13565)
!13572 = !DILocation(line: 55, column: 33, scope: !13565)
!13573 = distinct !{!13573, !13546, !13574}
!13574 = !DILocation(line: 59, column: 2, scope: !13547)
!13575 = !DILocation(line: 62, column: 1, scope: !13533)
!13576 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13513, file: !13513, line: 93, type: !13577, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13579)
!13577 = !DISubroutineType(types: !13578)
!13578 = !{!422, !13516}
!13579 = !{!13580}
!13580 = !DILocalVariable(name: "dev", arg: 1, scope: !13576, file: !13513, line: 93, type: !13516)
!13581 = !DILocation(line: 0, scope: !13576)
!13582 = !DILocation(line: 99, column: 10, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13576, file: !13513, line: 99, column: 6)
!13584 = !DILocation(line: 99, column: 6, scope: !13576)
!13585 = !DILocation(line: 103, column: 14, scope: !13576)
!13586 = !DILocation(line: 103, column: 21, scope: !13576)
!13587 = !DILocation(line: 103, column: 33, scope: !13576)
!13588 = !DILocation(line: 103, column: 49, scope: !13576)
!13589 = !DILocation(line: 103, column: 58, scope: !13576)
!13590 = !DILocation(line: 104, column: 1, scope: !13576)
!13591 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13513, file: !13513, line: 87, type: !13592, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13595)
!13592 = !DISubroutineType(types: !13593)
!13593 = !{!439, !13594}
!13594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13516, size: 32)
!13595 = !{!13596}
!13596 = !DILocalVariable(name: "devices", arg: 1, scope: !13591, file: !13513, line: 87, type: !13594)
!13597 = !DILocation(line: 0, scope: !13591)
!13598 = !DILocation(line: 89, column: 11, scope: !13591)
!13599 = !DILocation(line: 90, column: 2, scope: !13591)
!13600 = distinct !DISubprogram(name: "device_required_foreach", scope: !13513, file: !13513, line: 125, type: !13601, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13607)
!13601 = !DISubroutineType(types: !13602)
!13602 = !{!108, !13516, !13603, !104}
!13603 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !411, line: 471, baseType: !13604)
!13604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13605, size: 32)
!13605 = !DISubroutineType(types: !13606)
!13606 = !{!108, !13516, !104}
!13607 = !{!13608, !13609, !13610, !13611, !13612}
!13608 = !DILocalVariable(name: "dev", arg: 1, scope: !13600, file: !13513, line: 125, type: !13516)
!13609 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13600, file: !13513, line: 126, type: !13603)
!13610 = !DILocalVariable(name: "context", arg: 3, scope: !13600, file: !13513, line: 127, type: !104)
!13611 = !DILocalVariable(name: "handle_count", scope: !13600, file: !13513, line: 129, type: !439)
!13612 = !DILocalVariable(name: "handles", scope: !13600, file: !13513, line: 130, type: !425)
!13613 = !DILocation(line: 0, scope: !13600)
!13614 = !DILocation(line: 129, column: 2, scope: !13600)
!13615 = !DILocation(line: 129, column: 9, scope: !13600)
!13616 = !DILocation(line: 130, column: 35, scope: !13600)
!13617 = !DILocation(line: 132, column: 33, scope: !13600)
!13618 = !DILocation(line: 132, column: 9, scope: !13600)
!13619 = !DILocation(line: 133, column: 1, scope: !13600)
!13620 = !DILocation(line: 132, column: 2, scope: !13600)
!13621 = distinct !DISubprogram(name: "device_required_handles_get", scope: !411, file: !411, line: 493, type: !13622, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13624)
!13622 = !DISubroutineType(types: !13623)
!13623 = !{!425, !13516, !2882}
!13624 = !{!13625, !13626, !13627, !13628}
!13625 = !DILocalVariable(name: "dev", arg: 1, scope: !13621, file: !411, line: 493, type: !13516)
!13626 = !DILocalVariable(name: "count", arg: 2, scope: !13621, file: !411, line: 493, type: !2882)
!13627 = !DILocalVariable(name: "rv", scope: !13621, file: !411, line: 495, type: !425)
!13628 = !DILocalVariable(name: "i", scope: !13629, file: !411, line: 498, type: !439)
!13629 = distinct !DILexicalBlock(scope: !13630, file: !411, line: 497, column: 18)
!13630 = distinct !DILexicalBlock(scope: !13621, file: !411, line: 497, column: 6)
!13631 = !DILocation(line: 0, scope: !13621)
!13632 = !DILocation(line: 495, column: 35, scope: !13621)
!13633 = !DILocation(line: 497, column: 9, scope: !13630)
!13634 = !DILocation(line: 497, column: 6, scope: !13621)
!13635 = !DILocation(line: 0, scope: !13629)
!13636 = !DILocation(line: 500, column: 11, scope: !13629)
!13637 = !DILocation(line: 500, column: 40, scope: !13629)
!13638 = !DILocation(line: 502, column: 4, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13629, file: !411, line: 501, column: 40)
!13640 = distinct !{!13640, !13641, !13642}
!13641 = !DILocation(line: 500, column: 3, scope: !13629)
!13642 = !DILocation(line: 503, column: 3, scope: !13629)
!13643 = !DILocation(line: 504, column: 10, scope: !13629)
!13644 = !DILocation(line: 505, column: 2, scope: !13629)
!13645 = !DILocation(line: 507, column: 2, scope: !13621)
!13646 = distinct !DISubprogram(name: "device_visitor", scope: !13513, file: !13513, line: 106, type: !13647, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13649)
!13647 = !DISubroutineType(types: !13648)
!13648 = !{!108, !425, !439, !13603, !104}
!13649 = !{!13650, !13651, !13652, !13653, !13654, !13656, !13659, !13660}
!13650 = !DILocalVariable(name: "handles", arg: 1, scope: !13646, file: !13513, line: 106, type: !425)
!13651 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13646, file: !13513, line: 107, type: !439)
!13652 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13646, file: !13513, line: 108, type: !13603)
!13653 = !DILocalVariable(name: "context", arg: 4, scope: !13646, file: !13513, line: 109, type: !104)
!13654 = !DILocalVariable(name: "i", scope: !13655, file: !13513, line: 112, type: !439)
!13655 = distinct !DILexicalBlock(scope: !13646, file: !13513, line: 112, column: 2)
!13656 = !DILocalVariable(name: "dh", scope: !13657, file: !13513, line: 113, type: !427)
!13657 = distinct !DILexicalBlock(scope: !13658, file: !13513, line: 112, column: 44)
!13658 = distinct !DILexicalBlock(scope: !13655, file: !13513, line: 112, column: 2)
!13659 = !DILocalVariable(name: "rdev", scope: !13657, file: !13513, line: 114, type: !13516)
!13660 = !DILocalVariable(name: "rc", scope: !13657, file: !13513, line: 115, type: !108)
!13661 = !DILocation(line: 0, scope: !13646)
!13662 = !DILocation(line: 0, scope: !13655)
!13663 = !DILocation(line: 112, column: 23, scope: !13658)
!13664 = !DILocation(line: 112, column: 2, scope: !13655)
!13665 = distinct !{!13665, !13664, !13666}
!13666 = !DILocation(line: 120, column: 2, scope: !13655)
!13667 = !DILocation(line: 113, column: 24, scope: !13657)
!13668 = !DILocation(line: 0, scope: !13657)
!13669 = !DILocation(line: 114, column: 31, scope: !13657)
!13670 = !DILocation(line: 115, column: 12, scope: !13657)
!13671 = !DILocation(line: 117, column: 10, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13657, file: !13513, line: 117, column: 7)
!13673 = !DILocation(line: 112, column: 39, scope: !13658)
!13674 = !DILocation(line: 123, column: 1, scope: !13646)
!13675 = distinct !DISubprogram(name: "device_from_handle", scope: !411, file: !411, line: 439, type: !13676, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13678)
!13676 = !DISubroutineType(types: !13677)
!13677 = !{!13516, !427}
!13678 = !{!13679, !13680, !13681}
!13679 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13675, file: !411, line: 439, type: !427)
!13680 = !DILocalVariable(name: "dev", scope: !13675, file: !411, line: 443, type: !13516)
!13681 = !DILocalVariable(name: "numdev", scope: !13675, file: !411, line: 444, type: !439)
!13682 = !DILocation(line: 0, scope: !13675)
!13683 = !DILocation(line: 446, column: 7, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13675, file: !411, line: 446, column: 6)
!13685 = !DILocation(line: 446, column: 18, scope: !13684)
!13686 = !DILocation(line: 446, column: 23, scope: !13684)
!13687 = !DILocation(line: 450, column: 2, scope: !13675)
!13688 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13513, file: !13513, line: 135, type: !13601, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13689)
!13689 = !{!13690, !13691, !13692, !13693, !13694}
!13690 = !DILocalVariable(name: "dev", arg: 1, scope: !13688, file: !13513, line: 135, type: !13516)
!13691 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13688, file: !13513, line: 136, type: !13603)
!13692 = !DILocalVariable(name: "context", arg: 3, scope: !13688, file: !13513, line: 137, type: !104)
!13693 = !DILocalVariable(name: "handle_count", scope: !13688, file: !13513, line: 139, type: !439)
!13694 = !DILocalVariable(name: "handles", scope: !13688, file: !13513, line: 140, type: !425)
!13695 = !DILocation(line: 0, scope: !13688)
!13696 = !DILocation(line: 139, column: 2, scope: !13688)
!13697 = !DILocation(line: 139, column: 9, scope: !13688)
!13698 = !DILocation(line: 140, column: 35, scope: !13688)
!13699 = !DILocation(line: 142, column: 33, scope: !13688)
!13700 = !DILocation(line: 142, column: 9, scope: !13688)
!13701 = !DILocation(line: 143, column: 1, scope: !13688)
!13702 = !DILocation(line: 142, column: 2, scope: !13688)
!13703 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !411, file: !411, line: 573, type: !13622, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !13704)
!13704 = !{!13705, !13706, !13707, !13708, !13709}
!13705 = !DILocalVariable(name: "dev", arg: 1, scope: !13703, file: !411, line: 573, type: !13516)
!13706 = !DILocalVariable(name: "count", arg: 2, scope: !13703, file: !411, line: 573, type: !2882)
!13707 = !DILocalVariable(name: "rv", scope: !13703, file: !411, line: 575, type: !425)
!13708 = !DILocalVariable(name: "region", scope: !13703, file: !411, line: 576, type: !439)
!13709 = !DILocalVariable(name: "i", scope: !13703, file: !411, line: 577, type: !439)
!13710 = !DILocation(line: 0, scope: !13703)
!13711 = !DILocation(line: 575, column: 35, scope: !13703)
!13712 = !DILocation(line: 579, column: 9, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13703, file: !411, line: 579, column: 6)
!13714 = !DILocation(line: 579, column: 6, scope: !13703)
!13715 = !DILocation(line: 582, column: 8, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13717, file: !411, line: 582, column: 8)
!13717 = distinct !DILexicalBlock(scope: !13718, file: !411, line: 581, column: 23)
!13718 = distinct !DILexicalBlock(scope: !13713, file: !411, line: 579, column: 18)
!13719 = !DILocation(line: 582, column: 12, scope: !13716)
!13720 = !DILocation(line: 585, column: 6, scope: !13717)
!13721 = !DILocation(line: 0, scope: !13718)
!13722 = !DILocation(line: 581, column: 17, scope: !13718)
!13723 = !DILocation(line: 581, column: 3, scope: !13718)
!13724 = !DILocation(line: 588, column: 10, scope: !13718)
!13725 = !DILocation(line: 588, column: 16, scope: !13718)
!13726 = !DILocation(line: 589, column: 4, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13718, file: !411, line: 588, column: 39)
!13728 = !DILocation(line: 588, column: 3, scope: !13718)
!13729 = distinct !{!13729, !13728, !13730}
!13730 = !DILocation(line: 590, column: 3, scope: !13718)
!13731 = !DILocation(line: 591, column: 10, scope: !13718)
!13732 = !DILocation(line: 592, column: 2, scope: !13718)
!13733 = !DILocation(line: 575, column: 25, scope: !13703)
!13734 = !DILocation(line: 594, column: 2, scope: !13703)
!13735 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2178, file: !2178, line: 49, type: !13736, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2175, retainedNodes: !437)
!13736 = !DISubroutineType(types: !13737)
!13737 = !{!536}
!13738 = !DILocation(line: 51, column: 10, scope: !13735)
!13739 = !DILocation(line: 51, column: 20, scope: !13735)
!13740 = !DILocation(line: 51, column: 2, scope: !13735)
!13741 = distinct !DISubprogram(name: "coredump", scope: !3348, file: !3348, line: 209, type: !13742, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13888)
!13742 = !DISubroutineType(types: !13743)
!13743 = !{null, !32, !13744, !13788}
!13744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13745, size: 32)
!13745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13746)
!13746 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3010, line: 141, baseType: !13747)
!13747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3010, line: 97, size: 256, elements: !13748)
!13748 = !{!13749}
!13749 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13747, file: !3010, line: 107, baseType: !13750, size: 256)
!13750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3010, line: 98, size: 256, elements: !13751)
!13751 = !{!13752, !13757, !13762, !13767, !13772, !13777, !13782, !13787}
!13752 = !DIDerivedType(tag: DW_TAG_member, scope: !13750, file: !3010, line: 99, baseType: !13753, size: 32)
!13753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13750, file: !3010, line: 99, size: 32, elements: !13754)
!13754 = !{!13755, !13756}
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13753, file: !3010, line: 99, baseType: !113, size: 32)
!13756 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13753, file: !3010, line: 99, baseType: !113, size: 32)
!13757 = !DIDerivedType(tag: DW_TAG_member, scope: !13750, file: !3010, line: 100, baseType: !13758, size: 32, offset: 32)
!13758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13750, file: !3010, line: 100, size: 32, elements: !13759)
!13759 = !{!13760, !13761}
!13760 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13758, file: !3010, line: 100, baseType: !113, size: 32)
!13761 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13758, file: !3010, line: 100, baseType: !113, size: 32)
!13762 = !DIDerivedType(tag: DW_TAG_member, scope: !13750, file: !3010, line: 101, baseType: !13763, size: 32, offset: 64)
!13763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13750, file: !3010, line: 101, size: 32, elements: !13764)
!13764 = !{!13765, !13766}
!13765 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13763, file: !3010, line: 101, baseType: !113, size: 32)
!13766 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13763, file: !3010, line: 101, baseType: !113, size: 32)
!13767 = !DIDerivedType(tag: DW_TAG_member, scope: !13750, file: !3010, line: 102, baseType: !13768, size: 32, offset: 96)
!13768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13750, file: !3010, line: 102, size: 32, elements: !13769)
!13769 = !{!13770, !13771}
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13768, file: !3010, line: 102, baseType: !113, size: 32)
!13771 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13768, file: !3010, line: 102, baseType: !113, size: 32)
!13772 = !DIDerivedType(tag: DW_TAG_member, scope: !13750, file: !3010, line: 103, baseType: !13773, size: 32, offset: 128)
!13773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13750, file: !3010, line: 103, size: 32, elements: !13774)
!13774 = !{!13775, !13776}
!13775 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13773, file: !3010, line: 103, baseType: !113, size: 32)
!13776 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13773, file: !3010, line: 103, baseType: !113, size: 32)
!13777 = !DIDerivedType(tag: DW_TAG_member, scope: !13750, file: !3010, line: 104, baseType: !13778, size: 32, offset: 160)
!13778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13750, file: !3010, line: 104, size: 32, elements: !13779)
!13779 = !{!13780, !13781}
!13780 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13778, file: !3010, line: 104, baseType: !113, size: 32)
!13781 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13778, file: !3010, line: 104, baseType: !113, size: 32)
!13782 = !DIDerivedType(tag: DW_TAG_member, scope: !13750, file: !3010, line: 105, baseType: !13783, size: 32, offset: 192)
!13783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13750, file: !3010, line: 105, size: 32, elements: !13784)
!13784 = !{!13785, !13786}
!13785 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13783, file: !3010, line: 105, baseType: !113, size: 32)
!13786 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13783, file: !3010, line: 105, baseType: !113, size: 32)
!13787 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13750, file: !3010, line: 106, baseType: !113, size: 32, offset: 224)
!13788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13789, size: 32)
!13789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !656, line: 245, size: 1024, elements: !13790)
!13790 = !{!13791, !13849, !13861, !13862, !13863, !13864, !13870, !13883}
!13791 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13789, file: !656, line: 247, baseType: !13792, size: 384)
!13792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !656, line: 57, size: 384, elements: !13793)
!13793 = !{!13794, !13818, !13825, !13826, !13827, !13836, !13837, !13838}
!13794 = !DIDerivedType(tag: DW_TAG_member, scope: !13792, file: !656, line: 60, baseType: !13795, size: 64)
!13795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13792, file: !656, line: 60, size: 64, elements: !13796)
!13796 = !{!13797, !13812}
!13797 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13795, file: !656, line: 61, baseType: !13798, size: 64)
!13798 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !13799)
!13799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !13800)
!13800 = !{!13801, !13807}
!13801 = !DIDerivedType(tag: DW_TAG_member, scope: !13799, file: !367, line: 38, baseType: !13802, size: 32)
!13802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13799, file: !367, line: 38, size: 32, elements: !13803)
!13803 = !{!13804, !13806}
!13804 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13802, file: !367, line: 39, baseType: !13805, size: 32)
!13805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13799, size: 32)
!13806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13802, file: !367, line: 40, baseType: !13805, size: 32)
!13807 = !DIDerivedType(tag: DW_TAG_member, scope: !13799, file: !367, line: 42, baseType: !13808, size: 32, offset: 32)
!13808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13799, file: !367, line: 42, size: 32, elements: !13809)
!13809 = !{!13810, !13811}
!13810 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13808, file: !367, line: 43, baseType: !13805, size: 32)
!13811 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13808, file: !367, line: 44, baseType: !13805, size: 32)
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13795, file: !656, line: 62, baseType: !13813, size: 64)
!13813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !681, line: 49, size: 64, elements: !13814)
!13814 = !{!13815}
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13813, file: !681, line: 50, baseType: !13816, size: 64)
!13816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13817, size: 64, elements: !686)
!13817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13813, size: 32)
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13792, file: !656, line: 68, baseType: !13819, size: 32, offset: 64)
!13819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13820, size: 32)
!13820 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !13821)
!13821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !13822)
!13822 = !{!13823}
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13821, file: !363, line: 232, baseType: !13824, size: 64)
!13824 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !13799)
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13792, file: !656, line: 71, baseType: !164, size: 8, offset: 96)
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13792, file: !656, line: 74, baseType: !164, size: 8, offset: 104)
!13827 = !DIDerivedType(tag: DW_TAG_member, scope: !13792, file: !656, line: 90, baseType: !13828, size: 16, offset: 112)
!13828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13792, file: !656, line: 90, size: 16, elements: !13829)
!13829 = !{!13830, !13835}
!13830 = !DIDerivedType(tag: DW_TAG_member, scope: !13828, file: !656, line: 91, baseType: !13831, size: 16)
!13831 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13828, file: !656, line: 91, size: 16, elements: !13832)
!13832 = !{!13833, !13834}
!13833 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13831, file: !656, line: 96, baseType: !704, size: 8)
!13834 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13831, file: !656, line: 97, baseType: !164, size: 8, offset: 8)
!13835 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13828, file: !656, line: 100, baseType: !168, size: 16)
!13836 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13792, file: !656, line: 107, baseType: !113, size: 32, offset: 128)
!13837 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13792, file: !656, line: 127, baseType: !104, size: 32, offset: 160)
!13838 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13792, file: !656, line: 131, baseType: !13839, size: 192, offset: 192)
!13839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !13840)
!13840 = !{!13841, !13842, !13848}
!13841 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13839, file: !363, line: 245, baseType: !13798, size: 64)
!13842 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13839, file: !363, line: 246, baseType: !13843, size: 32, offset: 64)
!13843 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !13844)
!13844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13845, size: 32)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{null, !13847}
!13847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13839, size: 32)
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13839, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!13849 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13789, file: !656, line: 250, baseType: !13850, size: 288, offset: 384)
!13850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !723, line: 25, size: 288, elements: !13851)
!13851 = !{!13852, !13853, !13854, !13855, !13856, !13857, !13858, !13859, !13860}
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13850, file: !723, line: 26, baseType: !113, size: 32)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13850, file: !723, line: 27, baseType: !113, size: 32, offset: 32)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13850, file: !723, line: 28, baseType: !113, size: 32, offset: 64)
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13850, file: !723, line: 29, baseType: !113, size: 32, offset: 96)
!13856 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13850, file: !723, line: 30, baseType: !113, size: 32, offset: 128)
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13850, file: !723, line: 31, baseType: !113, size: 32, offset: 160)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13850, file: !723, line: 32, baseType: !113, size: 32, offset: 192)
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13850, file: !723, line: 33, baseType: !113, size: 32, offset: 224)
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13850, file: !723, line: 34, baseType: !113, size: 32, offset: 256)
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13789, file: !656, line: 253, baseType: !104, size: 32, offset: 672)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13789, file: !656, line: 256, baseType: !13820, size: 64, offset: 704)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13789, file: !656, line: 294, baseType: !108, size: 32, offset: 768)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13789, file: !656, line: 300, baseType: !13865, size: 96, offset: 800)
!13865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !656, line: 149, size: 96, elements: !13866)
!13866 = !{!13867, !13868, !13869}
!13867 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13865, file: !656, line: 153, baseType: !22, size: 32)
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13865, file: !656, line: 162, baseType: !439, size: 32, offset: 32)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13865, file: !656, line: 168, baseType: !439, size: 32, offset: 64)
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13789, file: !656, line: 325, baseType: !13871, size: 32, offset: 896)
!13871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13872, size: 32)
!13872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !13873)
!13873 = !{!13874, !13880, !13881}
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13872, file: !359, line: 5074, baseType: !13875, size: 96)
!13875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !749, line: 56, size: 96, elements: !13876)
!13876 = !{!13877, !13878, !13879}
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13875, file: !749, line: 57, baseType: !752, size: 32)
!13878 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13875, file: !749, line: 58, baseType: !104, size: 32, offset: 32)
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13875, file: !749, line: 59, baseType: !439, size: 32, offset: 64)
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13872, file: !359, line: 5075, baseType: !13820, size: 64, offset: 96)
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13872, file: !359, line: 5076, baseType: !13882, offset: 160)
!13882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13789, file: !656, line: 343, baseType: !13884, size: 64, offset: 928)
!13884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !723, line: 60, size: 64, elements: !13885)
!13885 = !{!13886, !13887}
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13884, file: !723, line: 63, baseType: !113, size: 32)
!13887 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13884, file: !723, line: 66, baseType: !113, size: 32, offset: 32)
!13888 = !{!13889, !13890, !13891}
!13889 = !DILocalVariable(name: "reason", arg: 1, scope: !13741, file: !3348, line: 209, type: !32)
!13890 = !DILocalVariable(name: "esf", arg: 2, scope: !13741, file: !3348, line: 209, type: !13744)
!13891 = !DILocalVariable(name: "thread", arg: 3, scope: !13741, file: !3348, line: 210, type: !13788)
!13892 = !DILocation(line: 0, scope: !13741)
!13893 = !DILocation(line: 212, column: 1, scope: !13741)
!13894 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3348, file: !3348, line: 214, type: !13895, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13897)
!13895 = !DISubroutineType(types: !13896)
!13896 = !{null, !22, !22}
!13897 = !{!13898, !13899}
!13898 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13894, file: !3348, line: 214, type: !22)
!13899 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13894, file: !3348, line: 214, type: !22)
!13900 = !DILocation(line: 0, scope: !13894)
!13901 = !DILocation(line: 216, column: 1, scope: !13894)
!13902 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3348, file: !3348, line: 218, type: !13903, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13905)
!13903 = !DISubroutineType(types: !13904)
!13904 = !{null, !209, !439}
!13905 = !{!13906, !13907}
!13906 = !DILocalVariable(name: "buf", arg: 1, scope: !13902, file: !3348, line: 218, type: !209)
!13907 = !DILocalVariable(name: "buflen", arg: 2, scope: !13902, file: !3348, line: 218, type: !439)
!13908 = !DILocation(line: 0, scope: !13902)
!13909 = !DILocation(line: 220, column: 1, scope: !13902)
!13910 = distinct !DISubprogram(name: "coredump_query", scope: !3348, file: !3348, line: 222, type: !13911, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13913)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{!108, !3347, !104}
!13913 = !{!13914, !13915}
!13914 = !DILocalVariable(name: "query_id", arg: 1, scope: !13910, file: !3348, line: 222, type: !3347)
!13915 = !DILocalVariable(name: "arg", arg: 2, scope: !13910, file: !3348, line: 222, type: !104)
!13916 = !DILocation(line: 0, scope: !13910)
!13917 = !DILocation(line: 224, column: 2, scope: !13910)
!13918 = distinct !DISubprogram(name: "coredump_cmd", scope: !3348, file: !3348, line: 227, type: !13919, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13921)
!13919 = !DISubroutineType(types: !13920)
!13920 = !{!108, !3354, !104}
!13921 = !{!13922, !13923}
!13922 = !DILocalVariable(name: "query_id", arg: 1, scope: !13918, file: !3348, line: 227, type: !3354)
!13923 = !DILocalVariable(name: "arg", arg: 2, scope: !13918, file: !3348, line: 227, type: !104)
!13924 = !DILocation(line: 0, scope: !13918)
!13925 = !DILocation(line: 229, column: 2, scope: !13918)
!13926 = distinct !DISubprogram(name: "arch_system_halt", scope: !13927, file: !13927, line: 23, type: !4068, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13928)
!13927 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13928 = !{!13929}
!13929 = !DILocalVariable(name: "reason", arg: 1, scope: !13926, file: !13927, line: 23, type: !32)
!13930 = !DILocation(line: 0, scope: !13926)
!13931 = !DILocation(line: 55, column: 2, scope: !13932, inlinedAt: !13936)
!13932 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13933)
!13933 = !{!13934, !13935}
!13934 = !DILocalVariable(name: "key", scope: !13932, file: !4055, line: 44, type: !32)
!13935 = !DILocalVariable(name: "tmp", scope: !13932, file: !4055, line: 53, type: !32)
!13936 = distinct !DILocation(line: 31, column: 8, scope: !13926)
!13937 = !{i64 1667916}
!13938 = !DILocation(line: 0, scope: !13932, inlinedAt: !13936)
!13939 = !DILocation(line: 32, column: 2, scope: !13926)
!13940 = !DILocation(line: 32, column: 2, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13942, file: !13927, line: 32, column: 2)
!13942 = distinct !DILexicalBlock(scope: !13926, file: !13927, line: 32, column: 2)
!13943 = distinct !{!13943, !13944, !13945}
!13944 = !DILocation(line: 32, column: 2, scope: !13942)
!13945 = !DILocation(line: 34, column: 2, scope: !13942)
!13946 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13927, file: !13927, line: 39, type: !13947, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13949)
!13947 = !DISubroutineType(types: !13948)
!13948 = !{null, !32, !13744}
!13949 = !{!13950, !13951}
!13950 = !DILocalVariable(name: "reason", arg: 1, scope: !13946, file: !13927, line: 39, type: !32)
!13951 = !DILocalVariable(name: "esf", arg: 2, scope: !13946, file: !13927, line: 40, type: !13744)
!13952 = !DILocation(line: 0, scope: !13946)
!13953 = !DILocation(line: 45, column: 2, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13955, file: !13927, line: 45, column: 2)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !13927, line: 45, column: 2)
!13956 = distinct !DILexicalBlock(scope: !13957, file: !13927, line: 45, column: 2)
!13957 = distinct !DILexicalBlock(scope: !13946, file: !13927, line: 45, column: 2)
!13958 = !DILocation(line: 46, column: 2, scope: !13946)
!13959 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13927, file: !13927, line: 81, type: !4068, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13960)
!13960 = !{!13961}
!13961 = !DILocalVariable(name: "reason", arg: 1, scope: !13959, file: !13927, line: 81, type: !32)
!13962 = !DILocation(line: 0, scope: !13959)
!13963 = !DILocation(line: 83, column: 2, scope: !13959)
!13964 = distinct !DISubprogram(name: "z_fatal_error", scope: !13927, file: !13927, line: 96, type: !13947, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13965)
!13965 = !{!13966, !13967, !13968, !13969}
!13966 = !DILocalVariable(name: "reason", arg: 1, scope: !13964, file: !13927, line: 96, type: !32)
!13967 = !DILocalVariable(name: "esf", arg: 2, scope: !13964, file: !13927, line: 96, type: !13744)
!13968 = !DILocalVariable(name: "key", scope: !13964, file: !13927, line: 102, type: !32)
!13969 = !DILocalVariable(name: "thread", scope: !13964, file: !13927, line: 103, type: !13788)
!13970 = !DILocation(line: 0, scope: !13964)
!13971 = !DILocation(line: 55, column: 2, scope: !13932, inlinedAt: !13972)
!13972 = distinct !DILocation(line: 102, column: 21, scope: !13964)
!13973 = !DILocation(line: 0, scope: !13932, inlinedAt: !13972)
!13974 = !DILocation(line: 104, column: 4, scope: !13964)
!13975 = !DILocation(line: 109, column: 2, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13977, file: !13927, line: 109, column: 2)
!13977 = distinct !DILexicalBlock(scope: !13978, file: !13927, line: 109, column: 2)
!13978 = distinct !DILexicalBlock(scope: !13979, file: !13927, line: 109, column: 2)
!13979 = distinct !DILexicalBlock(scope: !13964, file: !13927, line: 109, column: 2)
!13980 = !DILocation(line: 119, column: 11, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13964, file: !13927, line: 119, column: 6)
!13982 = !DILocation(line: 119, column: 20, scope: !13981)
!13983 = !DILocalVariable(name: "esf", arg: 1, scope: !13984, file: !8009, line: 71, type: !13744)
!13984 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8009, file: !8009, line: 71, type: !13985, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !13987)
!13985 = !DISubroutineType(types: !13986)
!13986 = !{!422, !13744}
!13987 = !{!13983}
!13988 = !DILocation(line: 0, scope: !13984, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 119, column: 23, scope: !13981)
!13990 = !DILocation(line: 73, column: 21, scope: !13984, inlinedAt: !13989)
!13991 = !DILocation(line: 73, column: 26, scope: !13984, inlinedAt: !13989)
!13992 = !DILocation(line: 73, column: 9, scope: !13984, inlinedAt: !13989)
!13993 = !DILocation(line: 119, column: 6, scope: !13964)
!13994 = !DILocation(line: 120, column: 3, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !13927, line: 120, column: 3)
!13996 = distinct !DILexicalBlock(scope: !13997, file: !13927, line: 120, column: 3)
!13997 = distinct !DILexicalBlock(scope: !13998, file: !13927, line: 120, column: 3)
!13998 = distinct !DILexicalBlock(scope: !13999, file: !13927, line: 120, column: 3)
!13999 = distinct !DILexicalBlock(scope: !13981, file: !13927, line: 119, column: 57)
!14000 = !DILocation(line: 121, column: 2, scope: !13999)
!14001 = !DILocation(line: 124, column: 2, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !14003, file: !13927, line: 124, column: 2)
!14003 = distinct !DILexicalBlock(scope: !14004, file: !13927, line: 124, column: 2)
!14004 = distinct !DILexicalBlock(scope: !14005, file: !13927, line: 124, column: 2)
!14005 = distinct !DILexicalBlock(scope: !13964, file: !13927, line: 124, column: 2)
!14006 = !DILocation(line: 131, column: 2, scope: !13964)
!14007 = !DILocation(line: 0, scope: !13984, inlinedAt: !14008)
!14008 = distinct !DILocation(line: 151, column: 24, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14010, file: !13927, line: 151, column: 7)
!14010 = distinct !DILexicalBlock(scope: !14011, file: !13927, line: 146, column: 32)
!14011 = distinct !DILexicalBlock(scope: !13964, file: !13927, line: 146, column: 6)
!14012 = !DILocation(line: 151, column: 7, scope: !14010)
!14013 = !DILocation(line: 151, column: 21, scope: !14009)
!14014 = !DILocalVariable(name: "key", arg: 1, scope: !14015, file: !4055, line: 84, type: !32)
!14015 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !14016)
!14016 = !{!14014}
!14017 = !DILocation(line: 0, scope: !14015, inlinedAt: !14018)
!14018 = distinct !DILocation(line: 186, column: 2, scope: !13964)
!14019 = !DILocation(line: 95, column: 2, scope: !14015, inlinedAt: !14018)
!14020 = !{i64 1668733}
!14021 = !DILocation(line: 189, column: 3, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !13927, line: 188, column: 41)
!14023 = distinct !DILexicalBlock(scope: !13964, file: !13927, line: 188, column: 6)
!14024 = !DILocation(line: 191, column: 1, scope: !13964)
!14025 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !14026, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !437)
!14026 = !DISubroutineType(types: !14027)
!14027 = !{!14028}
!14028 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !656, line: 347, baseType: !13788)
!14029 = !DILocation(line: 535, column: 9, scope: !14025)
!14030 = !DILocation(line: 535, column: 2, scope: !14025)
!14031 = distinct !DISubprogram(name: "reason_to_str", scope: !13927, file: !13927, line: 62, type: !14032, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !14034)
!14032 = !DISubroutineType(types: !14033)
!14033 = !{!105, !32}
!14034 = !{!14035}
!14035 = !DILocalVariable(name: "reason", arg: 1, scope: !14031, file: !13927, line: 62, type: !32)
!14036 = !DILocation(line: 0, scope: !14031)
!14037 = !DILocation(line: 64, column: 2, scope: !14031)
!14038 = !DILocation(line: 0, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14031, file: !13927, line: 64, column: 18)
!14040 = !DILocation(line: 78, column: 1, scope: !14031)
!14041 = distinct !DISubprogram(name: "thread_name_get", scope: !13927, file: !13927, line: 51, type: !14042, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !14044)
!14042 = !DISubroutineType(types: !14043)
!14043 = !{!105, !13788}
!14044 = !{!14045, !14046}
!14045 = !DILocalVariable(name: "thread", arg: 1, scope: !14041, file: !13927, line: 51, type: !13788)
!14046 = !DILocalVariable(name: "thread_name", scope: !14041, file: !13927, line: 53, type: !105)
!14047 = !DILocation(line: 0, scope: !14041)
!14048 = !DILocation(line: 53, column: 36, scope: !14041)
!14049 = !DILocation(line: 53, column: 28, scope: !14041)
!14050 = !DILocation(line: 53, column: 47, scope: !14041)
!14051 = !DILocation(line: 55, column: 19, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14041, file: !13927, line: 55, column: 6)
!14053 = !DILocation(line: 55, column: 28, scope: !14052)
!14054 = !DILocation(line: 55, column: 32, scope: !14052)
!14055 = !DILocation(line: 55, column: 47, scope: !14052)
!14056 = !DILocation(line: 55, column: 6, scope: !14041)
!14057 = !DILocation(line: 57, column: 2, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14052, file: !13927, line: 55, column: 57)
!14059 = !DILocation(line: 59, column: 2, scope: !14041)
!14060 = distinct !DISubprogram(name: "k_thread_abort", scope: !3777, file: !3777, line: 188, type: !14061, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !14063)
!14061 = !DISubroutineType(types: !14062)
!14062 = !{null, !14028}
!14063 = !{!14064}
!14064 = !DILocalVariable(name: "thread", arg: 1, scope: !14060, file: !3777, line: 188, type: !14028)
!14065 = !DILocation(line: 0, scope: !14060)
!14066 = !DILocation(line: 197, column: 2, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14060, file: !3777, line: 197, column: 2)
!14068 = !{i64 2152233574}
!14069 = !DILocation(line: 198, column: 2, scope: !14060)
!14070 = !DILocation(line: 199, column: 1, scope: !14060)
!14071 = distinct !DISubprogram(name: "z_current_get", scope: !3777, file: !3777, line: 173, type: !14026, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !437)
!14072 = !DILocation(line: 180, column: 2, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14071, file: !3777, line: 180, column: 2)
!14074 = !{i64 2152233506}
!14075 = !DILocation(line: 181, column: 9, scope: !14071)
!14076 = !DILocation(line: 181, column: 2, scope: !14071)
!14077 = distinct !DISubprogram(name: "z_early_memset", scope: !2186, file: !2186, line: 108, type: !14078, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14080)
!14078 = !DISubroutineType(types: !14079)
!14079 = !{null, !104, !108, !439}
!14080 = !{!14081, !14082, !14083}
!14081 = !DILocalVariable(name: "dst", arg: 1, scope: !14077, file: !2186, line: 108, type: !104)
!14082 = !DILocalVariable(name: "c", arg: 2, scope: !14077, file: !2186, line: 108, type: !108)
!14083 = !DILocalVariable(name: "n", arg: 3, scope: !14077, file: !2186, line: 108, type: !439)
!14084 = !DILocation(line: 0, scope: !14077)
!14085 = !DILocation(line: 110, column: 9, scope: !14077)
!14086 = !DILocation(line: 111, column: 1, scope: !14077)
!14087 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2186, file: !2186, line: 121, type: !14088, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14090)
!14088 = !DISubroutineType(types: !14089)
!14089 = !{null, !104, !13, !439}
!14090 = !{!14091, !14092, !14093}
!14091 = !DILocalVariable(name: "dst", arg: 1, scope: !14087, file: !2186, line: 121, type: !104)
!14092 = !DILocalVariable(name: "src", arg: 2, scope: !14087, file: !2186, line: 121, type: !13)
!14093 = !DILocalVariable(name: "n", arg: 3, scope: !14087, file: !2186, line: 121, type: !439)
!14094 = !DILocation(line: 0, scope: !14087)
!14095 = !DILocation(line: 123, column: 9, scope: !14087)
!14096 = !DILocation(line: 124, column: 1, scope: !14087)
!14097 = distinct !DISubprogram(name: "z_bss_zero", scope: !2186, file: !2186, line: 132, type: !3381, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !437)
!14098 = !DILocation(line: 143, column: 2, scope: !14097)
!14099 = !DILocation(line: 168, column: 1, scope: !14097)
!14100 = distinct !DISubprogram(name: "z_init_cpu", scope: !2186, file: !2186, line: 372, type: !9680, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14101)
!14101 = !{!14102}
!14102 = !DILocalVariable(name: "id", arg: 1, scope: !14100, file: !2186, line: 372, type: !108)
!14103 = !DILocation(line: 0, scope: !14100)
!14104 = !DILocation(line: 374, column: 2, scope: !14100)
!14105 = !DILocation(line: 375, column: 34, scope: !14100)
!14106 = !DILocation(line: 375, column: 19, scope: !14100)
!14107 = !DILocation(line: 375, column: 31, scope: !14100)
!14108 = !DILocation(line: 376, column: 24, scope: !14100)
!14109 = !DILocation(line: 376, column: 19, scope: !14100)
!14110 = !DILocation(line: 376, column: 22, scope: !14100)
!14111 = !DILocation(line: 378, column: 26, scope: !14100)
!14112 = !DILocation(line: 378, column: 4, scope: !14100)
!14113 = !DILocation(line: 378, column: 50, scope: !14100)
!14114 = !DILocation(line: 377, column: 19, scope: !14100)
!14115 = !DILocation(line: 377, column: 29, scope: !14100)
!14116 = !DILocation(line: 384, column: 1, scope: !14100)
!14117 = distinct !DISubprogram(name: "init_idle_thread", scope: !2186, file: !2186, line: 343, type: !9680, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14118)
!14118 = !{!14119, !14120, !14121, !14124}
!14119 = !DILocalVariable(name: "i", arg: 1, scope: !14117, file: !2186, line: 343, type: !108)
!14120 = !DILocalVariable(name: "thread", scope: !14117, file: !2186, line: 345, type: !2278)
!14121 = !DILocalVariable(name: "stack", scope: !14117, file: !2186, line: 346, type: !14122)
!14122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14123, size: 32)
!14123 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5148, line: 44, baseType: !2392)
!14124 = !DILocalVariable(name: "tname", scope: !14117, file: !2186, line: 358, type: !443)
!14125 = !DILocation(line: 0, scope: !14117)
!14126 = !DILocation(line: 345, column: 29, scope: !14117)
!14127 = !DILocation(line: 346, column: 28, scope: !14117)
!14128 = !DILocation(line: 362, column: 37, scope: !14117)
!14129 = !DILocation(line: 362, column: 36, scope: !14117)
!14130 = !DILocation(line: 361, column: 2, scope: !14117)
!14131 = !DILocation(line: 365, column: 2, scope: !14117)
!14132 = !DILocation(line: 370, column: 1, scope: !14117)
!14133 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2393, file: !2393, line: 331, type: !14134, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14136)
!14134 = !DISubroutineType(types: !14135)
!14135 = !{!443, !14122}
!14136 = !{!14137}
!14137 = !DILocalVariable(name: "sym", arg: 1, scope: !14133, file: !2393, line: 331, type: !14122)
!14138 = !DILocation(line: 0, scope: !14133)
!14139 = !DILocation(line: 333, column: 21, scope: !14133)
!14140 = !DILocation(line: 333, column: 2, scope: !14133)
!14141 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14142, file: !14142, line: 155, type: !14143, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14145)
!14142 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14143 = !DISubroutineType(types: !14144)
!14144 = !{null, !2278}
!14145 = !{!14146}
!14146 = !DILocalVariable(name: "thread", arg: 1, scope: !14141, file: !14142, line: 155, type: !2278)
!14147 = !DILocation(line: 0, scope: !14141)
!14148 = !DILocation(line: 157, column: 15, scope: !14141)
!14149 = !DILocation(line: 157, column: 28, scope: !14141)
!14150 = !DILocation(line: 158, column: 1, scope: !14141)
!14151 = distinct !DISubprogram(name: "z_cstart", scope: !2186, file: !2186, line: 501, type: !3381, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14152)
!14152 = !{!14153}
!14153 = !DILocalVariable(name: "dummy_thread", scope: !14151, file: !2186, line: 518, type: !2279)
!14154 = !DILocation(line: 507, column: 2, scope: !14151)
!14155 = !DILocation(line: 43, column: 14, scope: !14156, inlinedAt: !14160)
!14156 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14157, file: !14157, line: 40, type: !3381, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14158)
!14157 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14158 = !{!14159}
!14159 = !DILocalVariable(name: "msp", scope: !14156, file: !14157, line: 42, type: !113)
!14160 = distinct !DILocation(line: 44, column: 2, scope: !14161, inlinedAt: !14163)
!14161 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14162, file: !14162, line: 42, type: !3381, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !437)
!14162 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14163 = distinct !DILocation(line: 510, column: 2, scope: !14151)
!14164 = !DILocation(line: 43, column: 3, scope: !14156, inlinedAt: !14160)
!14165 = !DILocation(line: 43, column: 60, scope: !14156, inlinedAt: !14160)
!14166 = !DILocation(line: 0, scope: !14156, inlinedAt: !14160)
!14167 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14168, file: !7032, line: 1153, type: !113)
!14168 = distinct !DISubprogram(name: "__set_MSP", scope: !7032, file: !7032, line: 1153, type: !6721, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14169)
!14169 = !{!14167}
!14170 = !DILocation(line: 0, scope: !14168, inlinedAt: !14171)
!14171 = distinct !DILocation(line: 46, column: 2, scope: !14156, inlinedAt: !14160)
!14172 = !DILocation(line: 1155, column: 3, scope: !14168, inlinedAt: !14171)
!14173 = !{i64 2481356}
!14174 = !DILocation(line: 62, column: 11, scope: !14156, inlinedAt: !14160)
!14175 = !DILocation(line: 102, column: 2, scope: !14176, inlinedAt: !14177)
!14176 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8009, file: !8009, line: 97, type: !3381, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !437)
!14177 = distinct !DILocation(line: 45, column: 2, scope: !14161, inlinedAt: !14163)
!14178 = !DILocation(line: 108, column: 2, scope: !14176, inlinedAt: !14177)
!14179 = !DILocation(line: 112, column: 2, scope: !14176, inlinedAt: !14177)
!14180 = !DILocation(line: 113, column: 2, scope: !14176, inlinedAt: !14177)
!14181 = !DILocation(line: 114, column: 2, scope: !14176, inlinedAt: !14177)
!14182 = !DILocation(line: 116, column: 2, scope: !14176, inlinedAt: !14177)
!14183 = !DILocation(line: 123, column: 13, scope: !14176, inlinedAt: !14177)
!14184 = !DILocation(line: 46, column: 2, scope: !14161, inlinedAt: !14163)
!14185 = !DILocation(line: 47, column: 2, scope: !14161, inlinedAt: !14163)
!14186 = !DILocation(line: 174, column: 12, scope: !14187, inlinedAt: !14188)
!14187 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8009, file: !8009, line: 169, type: !3381, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !437)
!14188 = distinct !DILocation(line: 48, column: 2, scope: !14161, inlinedAt: !14163)
!14189 = !DILocation(line: 179, column: 12, scope: !14187, inlinedAt: !14188)
!14190 = !DILocation(line: 50, column: 2, scope: !14161, inlinedAt: !14163)
!14191 = !DILocation(line: 57, column: 2, scope: !14161, inlinedAt: !14163)
!14192 = !DILocation(line: 518, column: 2, scope: !14151)
!14193 = !DILocation(line: 518, column: 18, scope: !14151)
!14194 = !DILocation(line: 520, column: 2, scope: !14151)
!14195 = !DILocation(line: 523, column: 2, scope: !14151)
!14196 = !DILocation(line: 526, column: 2, scope: !14151)
!14197 = !DILocation(line: 527, column: 2, scope: !14151)
!14198 = !DILocation(line: 543, column: 24, scope: !14151)
!14199 = !DILocation(line: 543, column: 2, scope: !14151)
!14200 = !DILocation(line: 0, scope: !2417)
!14201 = !DILocation(line: 246, column: 15, scope: !2435)
!14202 = !DILocation(line: 246, column: 36, scope: !2434)
!14203 = !DILocation(line: 246, column: 2, scope: !2435)
!14204 = !DILocation(line: 247, column: 37, scope: !2433)
!14205 = !DILocation(line: 0, scope: !2433)
!14206 = !DILocation(line: 248, column: 19, scope: !2433)
!14207 = !DILocation(line: 248, column: 12, scope: !2433)
!14208 = !DILocation(line: 250, column: 11, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !2433, file: !2186, line: 250, column: 7)
!14210 = !DILocation(line: 250, column: 7, scope: !2433)
!14211 = !DILocation(line: 254, column: 11, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14213, file: !2186, line: 254, column: 8)
!14213 = distinct !DILexicalBlock(scope: !14209, file: !2186, line: 250, column: 20)
!14214 = !DILocation(line: 254, column: 8, scope: !14213)
!14215 = !DILocation(line: 255, column: 9, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14212, file: !2186, line: 254, column: 17)
!14217 = !DILocation(line: 258, column: 9, scope: !14216)
!14218 = !DILocation(line: 261, column: 28, scope: !14216)
!14219 = !DILocation(line: 261, column: 10, scope: !14216)
!14220 = !DILocation(line: 261, column: 17, scope: !14216)
!14221 = !DILocation(line: 261, column: 26, scope: !14216)
!14222 = !DILocation(line: 262, column: 4, scope: !14216)
!14223 = !DILocation(line: 263, column: 9, scope: !14213)
!14224 = !DILocation(line: 263, column: 16, scope: !14213)
!14225 = !DILocation(line: 263, column: 28, scope: !14213)
!14226 = !DILocation(line: 264, column: 3, scope: !14213)
!14227 = !DILocation(line: 246, column: 60, scope: !2434)
!14228 = distinct !{!14228, !14203, !14229}
!14229 = !DILocation(line: 265, column: 2, scope: !2435)
!14230 = !DILocation(line: 266, column: 1, scope: !2417)
!14231 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !799, file: !799, line: 1638, type: !7066, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14232)
!14232 = !{!14233, !14234}
!14233 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14231, file: !799, line: 1638, type: !1246)
!14234 = !DILocalVariable(name: "priority", arg: 2, scope: !14231, file: !799, line: 1638, type: !113)
!14235 = !DILocation(line: 0, scope: !14231)
!14236 = !DILocation(line: 1646, column: 48, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14238, file: !799, line: 1645, column: 3)
!14238 = distinct !DILexicalBlock(scope: !14231, file: !799, line: 1640, column: 7)
!14239 = !DILocation(line: 1646, column: 32, scope: !14237)
!14240 = !DILocation(line: 1646, column: 40, scope: !14237)
!14241 = !DILocation(line: 1646, column: 5, scope: !14237)
!14242 = !DILocation(line: 1646, column: 46, scope: !14237)
!14243 = !DILocation(line: 1648, column: 1, scope: !14231)
!14244 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14162, file: !14162, line: 32, type: !3381, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14245 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14246, file: !14246, line: 215, type: !14143, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14247)
!14246 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14247 = !{!14248}
!14248 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14245, file: !14246, line: 215, type: !2278)
!14249 = !DILocation(line: 0, scope: !14245)
!14250 = !DILocation(line: 217, column: 21, scope: !14245)
!14251 = !DILocation(line: 217, column: 34, scope: !14245)
!14252 = !DILocation(line: 221, column: 21, scope: !14245)
!14253 = !DILocation(line: 221, column: 34, scope: !14245)
!14254 = !DILocation(line: 223, column: 27, scope: !14245)
!14255 = !DILocation(line: 223, column: 33, scope: !14245)
!14256 = !DILocation(line: 224, column: 27, scope: !14245)
!14257 = !DILocation(line: 224, column: 32, scope: !14245)
!14258 = !DILocation(line: 232, column: 16, scope: !14245)
!14259 = !DILocation(line: 232, column: 30, scope: !14245)
!14260 = !DILocation(line: 239, column: 24, scope: !14245)
!14261 = !DILocation(line: 240, column: 1, scope: !14245)
!14262 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2186, file: !2186, line: 399, type: !14263, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14265)
!14263 = !DISubroutineType(types: !14264)
!14264 = !{!443}
!14265 = !{!14266}
!14266 = !DILocalVariable(name: "stack_ptr", scope: !14262, file: !2186, line: 401, type: !443)
!14267 = !DILocation(line: 404, column: 2, scope: !14262)
!14268 = !DILocation(line: 416, column: 24, scope: !14262)
!14269 = !DILocation(line: 418, column: 14, scope: !14262)
!14270 = !DILocation(line: 0, scope: !14262)
!14271 = !DILocation(line: 423, column: 2, scope: !14262)
!14272 = !DILocation(line: 424, column: 2, scope: !14262)
!14273 = !DILocation(line: 426, column: 2, scope: !14262)
!14274 = !DILocation(line: 428, column: 2, scope: !14262)
!14275 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2186, file: !2186, line: 432, type: !14276, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14278)
!14276 = !DISubroutineType(types: !14277)
!14277 = !{null, !443}
!14278 = !{!14279}
!14279 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14275, file: !2186, line: 432, type: !443)
!14280 = !DILocation(line: 0, scope: !14275)
!14281 = !DILocation(line: 435, column: 2, scope: !14275)
!14282 = !DILocation(line: 445, column: 2, scope: !14275)
!14283 = distinct !DISubprogram(name: "bg_thread_main", scope: !2186, file: !2186, line: 277, type: !5150, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !14284)
!14284 = !{!14285, !14286, !14287}
!14285 = !DILocalVariable(name: "unused1", arg: 1, scope: !14283, file: !2186, line: 277, type: !104)
!14286 = !DILocalVariable(name: "unused2", arg: 2, scope: !14283, file: !2186, line: 277, type: !104)
!14287 = !DILocalVariable(name: "unused3", arg: 3, scope: !14283, file: !2186, line: 277, type: !104)
!14288 = !DILocation(line: 0, scope: !14283)
!14289 = !DILocation(line: 291, column: 20, scope: !14283)
!14290 = !DILocation(line: 293, column: 2, scope: !14283)
!14291 = !DILocation(line: 297, column: 2, scope: !14283)
!14292 = !DILocation(line: 305, column: 2, scope: !14283)
!14293 = !DILocation(line: 307, column: 2, scope: !14283)
!14294 = !DILocation(line: 330, column: 8, scope: !14283)
!14295 = !DILocation(line: 333, column: 34, scope: !14283)
!14296 = !DILocation(line: 339, column: 1, scope: !14283)
!14297 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2446, file: !2446, line: 45, type: !14298, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14306)
!14298 = !DISubroutineType(types: !14299)
!14299 = !{null, !14300, !104}
!14300 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !359, line: 103, baseType: !14301)
!14301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14302, size: 32)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{null, !14304, !104}
!14304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14305, size: 32)
!14305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!14306 = !{!14307, !14308}
!14307 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14297, file: !2446, line: 45, type: !14300)
!14308 = !DILocalVariable(name: "user_data", arg: 2, scope: !14297, file: !2446, line: 45, type: !104)
!14309 = !DILocation(line: 0, scope: !14297)
!14310 = !DILocation(line: 71, column: 1, scope: !14297)
!14311 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2446, file: !2446, line: 73, type: !14298, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14312)
!14312 = !{!14313, !14314}
!14313 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14311, file: !2446, line: 73, type: !14300)
!14314 = !DILocalVariable(name: "user_data", arg: 2, scope: !14311, file: !2446, line: 73, type: !104)
!14315 = !DILocation(line: 0, scope: !14311)
!14316 = !DILocation(line: 95, column: 1, scope: !14311)
!14317 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2446, file: !2446, line: 97, type: !8010, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !437)
!14318 = !DILocation(line: 1031, column: 3, scope: !14319, inlinedAt: !14322)
!14319 = distinct !DISubprogram(name: "__get_IPSR", scope: !7032, file: !7032, line: 1027, type: !8003, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14320)
!14320 = !{!14321}
!14321 = !DILocalVariable(name: "result", scope: !14319, file: !7032, line: 1029, type: !113)
!14322 = distinct !DILocation(line: 48, column: 10, scope: !14323, inlinedAt: !14324)
!14323 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8009, file: !8009, line: 46, type: !8010, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !437)
!14324 = distinct !DILocation(line: 99, column: 9, scope: !14317)
!14325 = !{i64 2487007}
!14326 = !DILocation(line: 0, scope: !14319, inlinedAt: !14322)
!14327 = !DILocation(line: 48, column: 9, scope: !14323, inlinedAt: !14324)
!14328 = !DILocation(line: 99, column: 2, scope: !14317)
!14329 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2446, file: !2446, line: 106, type: !3381, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !437)
!14330 = !DILocation(line: 108, column: 2, scope: !14329)
!14331 = !DILocation(line: 108, column: 17, scope: !14329)
!14332 = !DILocation(line: 108, column: 30, scope: !14329)
!14333 = !DILocation(line: 109, column: 1, scope: !14329)
!14334 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2446, file: !2446, line: 116, type: !3381, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !437)
!14335 = !DILocation(line: 118, column: 2, scope: !14334)
!14336 = !DILocation(line: 118, column: 17, scope: !14334)
!14337 = !DILocation(line: 118, column: 30, scope: !14334)
!14338 = !DILocation(line: 119, column: 1, scope: !14334)
!14339 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2446, file: !2446, line: 126, type: !8010, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !437)
!14340 = !DILocation(line: 128, column: 10, scope: !14339)
!14341 = !DILocation(line: 128, column: 25, scope: !14339)
!14342 = !DILocation(line: 128, column: 38, scope: !14339)
!14343 = !DILocation(line: 128, column: 53, scope: !14339)
!14344 = !DILocation(line: 128, column: 2, scope: !14339)
!14345 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2446, file: !2446, line: 187, type: !14346, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14348)
!14346 = !DISubroutineType(types: !14347)
!14347 = !{!108, !2450, !105}
!14348 = !{!14349, !14350}
!14349 = !DILocalVariable(name: "thread", arg: 1, scope: !14345, file: !2446, line: 187, type: !2450)
!14350 = !DILocalVariable(name: "value", arg: 2, scope: !14345, file: !2446, line: 187, type: !105)
!14351 = !DILocation(line: 0, scope: !14345)
!14352 = !DILocation(line: 206, column: 2, scope: !14345)
!14353 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2446, file: !2446, line: 238, type: !14354, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14356)
!14354 = !DISubroutineType(types: !14355)
!14355 = !{!105, !2450}
!14356 = !{!14357}
!14357 = !DILocalVariable(name: "thread", arg: 1, scope: !14353, file: !2446, line: 238, type: !2450)
!14358 = !DILocation(line: 0, scope: !14353)
!14359 = !DILocation(line: 244, column: 2, scope: !14353)
!14360 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2446, file: !2446, line: 248, type: !14361, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14363)
!14361 = !DISubroutineType(types: !14362)
!14362 = !{!108, !2449, !443, !439}
!14363 = !{!14364, !14365, !14366}
!14364 = !DILocalVariable(name: "thread", arg: 1, scope: !14360, file: !2446, line: 248, type: !2449)
!14365 = !DILocalVariable(name: "buf", arg: 2, scope: !14360, file: !2446, line: 248, type: !443)
!14366 = !DILocalVariable(name: "size", arg: 3, scope: !14360, file: !2446, line: 248, type: !439)
!14367 = !DILocation(line: 0, scope: !14360)
!14368 = !DILocation(line: 257, column: 2, scope: !14360)
!14369 = !DILocation(line: 0, scope: !2445)
!14370 = !DILocation(line: 281, column: 11, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !2445, file: !2446, line: 281, column: 6)
!14372 = !DILocation(line: 281, column: 20, scope: !14371)
!14373 = !DILocation(line: 275, column: 45, scope: !2445)
!14374 = !DILocation(line: 285, column: 10, scope: !2445)
!14375 = !DILocation(line: 0, scope: !2566)
!14376 = !DILocation(line: 293, column: 39, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !2566, file: !2446, line: 293, column: 2)
!14378 = !DILocation(line: 293, column: 2, scope: !2566)
!14379 = !DILocation(line: 273, column: 14, scope: !2445)
!14380 = !DILocation(line: 309, column: 2, scope: !2445)
!14381 = !DILocation(line: 309, column: 11, scope: !2445)
!14382 = !DILocation(line: 311, column: 2, scope: !2445)
!14383 = !DILocation(line: 293, column: 26, scope: !14377)
!14384 = !DILocation(line: 294, column: 9, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14377, file: !2446, line: 293, column: 54)
!14386 = !DILocation(line: 295, column: 21, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14385, file: !2446, line: 295, column: 7)
!14388 = !DILocation(line: 295, column: 28, scope: !14387)
!14389 = !DILocation(line: 295, column: 7, scope: !14385)
!14390 = !DILocation(line: 299, column: 25, scope: !14385)
!14391 = !DILocation(line: 299, column: 41, scope: !14385)
!14392 = !DILocation(line: 300, column: 7, scope: !14385)
!14393 = !DILocation(line: 300, column: 26, scope: !14385)
!14394 = !DILocation(line: 299, column: 10, scope: !14385)
!14395 = !DILocation(line: 299, column: 7, scope: !14385)
!14396 = !DILocation(line: 302, column: 16, scope: !14385)
!14397 = !DILocation(line: 304, column: 20, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14385, file: !2446, line: 304, column: 7)
!14399 = !DILocation(line: 304, column: 7, scope: !14385)
!14400 = !DILocation(line: 305, column: 26, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14398, file: !2446, line: 304, column: 26)
!14402 = !DILocation(line: 305, column: 42, scope: !14401)
!14403 = !DILocation(line: 305, column: 11, scope: !14401)
!14404 = !DILocation(line: 305, column: 8, scope: !14401)
!14405 = !DILocation(line: 306, column: 3, scope: !14401)
!14406 = !DILocation(line: 293, column: 50, scope: !14377)
!14407 = !DILocation(line: 312, column: 1, scope: !2445)
!14408 = distinct !DISubprogram(name: "copy_bytes", scope: !2446, file: !2446, line: 261, type: !14409, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14411)
!14409 = !DISubroutineType(types: !14410)
!14410 = !{!439, !443, !439, !105, !439}
!14411 = !{!14412, !14413, !14414, !14415, !14416}
!14412 = !DILocalVariable(name: "dest", arg: 1, scope: !14408, file: !2446, line: 261, type: !443)
!14413 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14408, file: !2446, line: 261, type: !439)
!14414 = !DILocalVariable(name: "src", arg: 3, scope: !14408, file: !2446, line: 261, type: !105)
!14415 = !DILocalVariable(name: "src_size", arg: 4, scope: !14408, file: !2446, line: 261, type: !439)
!14416 = !DILocalVariable(name: "bytes_to_copy", scope: !14408, file: !2446, line: 263, type: !439)
!14417 = !DILocation(line: 0, scope: !14408)
!14418 = !DILocation(line: 265, column: 18, scope: !14408)
!14419 = !DILocation(line: 266, column: 2, scope: !14408)
!14420 = !DILocation(line: 268, column: 2, scope: !14408)
!14421 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2446, file: !2446, line: 383, type: !14422, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14424)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{null, !2450}
!14424 = !{!14425}
!14425 = !DILocalVariable(name: "thread", arg: 1, scope: !14421, file: !2446, line: 383, type: !2450)
!14426 = !DILocation(line: 0, scope: !14421)
!14427 = !DILocation(line: 387, column: 2, scope: !14421)
!14428 = !DILocation(line: 388, column: 1, scope: !14421)
!14429 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2446, file: !2446, line: 528, type: !14430, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14437)
!14430 = !DISubroutineType(types: !14431)
!14431 = !{!443, !2450, !14432, !439, !5147, !104, !104, !104, !108, !113, !105}
!14432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14433, size: 32)
!14433 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5148, line: 44, baseType: !14434)
!14434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2393, line: 47, size: 8, elements: !14435)
!14435 = !{!14436}
!14436 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14434, file: !2393, line: 48, baseType: !107, size: 8)
!14437 = !{!14438, !14439, !14440, !14441, !14442, !14443, !14444, !14445, !14446, !14447, !14448}
!14438 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14429, file: !2446, line: 528, type: !2450)
!14439 = !DILocalVariable(name: "stack", arg: 2, scope: !14429, file: !2446, line: 529, type: !14432)
!14440 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14429, file: !2446, line: 529, type: !439)
!14441 = !DILocalVariable(name: "entry", arg: 4, scope: !14429, file: !2446, line: 530, type: !5147)
!14442 = !DILocalVariable(name: "p1", arg: 5, scope: !14429, file: !2446, line: 531, type: !104)
!14443 = !DILocalVariable(name: "p2", arg: 6, scope: !14429, file: !2446, line: 531, type: !104)
!14444 = !DILocalVariable(name: "p3", arg: 7, scope: !14429, file: !2446, line: 531, type: !104)
!14445 = !DILocalVariable(name: "prio", arg: 8, scope: !14429, file: !2446, line: 532, type: !108)
!14446 = !DILocalVariable(name: "options", arg: 9, scope: !14429, file: !2446, line: 532, type: !113)
!14447 = !DILocalVariable(name: "name", arg: 10, scope: !14429, file: !2446, line: 532, type: !105)
!14448 = !DILocalVariable(name: "stack_ptr", scope: !14429, file: !2446, line: 534, type: !443)
!14449 = !DILocation(line: 0, scope: !14429)
!14450 = !DILocation(line: 550, column: 28, scope: !14429)
!14451 = !DILocation(line: 550, column: 2, scope: !14429)
!14452 = !DILocation(line: 553, column: 34, scope: !14429)
!14453 = !DILocation(line: 553, column: 2, scope: !14429)
!14454 = !DILocation(line: 554, column: 14, scope: !14429)
!14455 = !DILocation(line: 564, column: 2, scope: !14429)
!14456 = !DILocation(line: 567, column: 14, scope: !14429)
!14457 = !DILocation(line: 567, column: 24, scope: !14429)
!14458 = !DILocation(line: 612, column: 7, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14429, file: !2446, line: 612, column: 6)
!14460 = !DILocation(line: 612, column: 6, scope: !14429)
!14461 = !DILocation(line: 627, column: 40, scope: !14429)
!14462 = !DILocation(line: 637, column: 2, scope: !14429)
!14463 = !DILocation(line: 613, column: 15, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14459, file: !2446, line: 612, column: 17)
!14465 = !DILocation(line: 613, column: 29, scope: !14464)
!14466 = !DILocation(line: 638, column: 1, scope: !14429)
!14467 = distinct !DISubprogram(name: "z_waitq_init", scope: !14468, file: !14468, line: 47, type: !14469, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14471)
!14468 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14469 = !DISubroutineType(types: !14470)
!14470 = !{null, !2481}
!14471 = !{!14472}
!14472 = !DILocalVariable(name: "w", arg: 1, scope: !14467, file: !14468, line: 47, type: !2481)
!14473 = !DILocation(line: 0, scope: !14467)
!14474 = !DILocation(line: 49, column: 21, scope: !14467)
!14475 = !DILocation(line: 49, column: 2, scope: !14467)
!14476 = !DILocation(line: 50, column: 1, scope: !14467)
!14477 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2446, file: !2446, line: 791, type: !14478, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14481)
!14478 = !DISubroutineType(types: !14479)
!14479 = !{null, !14480, !108, !113, !32}
!14480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!14481 = !{!14482, !14483, !14484, !14485}
!14482 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14477, file: !2446, line: 791, type: !14480)
!14483 = !DILocalVariable(name: "priority", arg: 2, scope: !14477, file: !2446, line: 791, type: !108)
!14484 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14477, file: !2446, line: 792, type: !113)
!14485 = !DILocalVariable(name: "options", arg: 4, scope: !14477, file: !2446, line: 792, type: !32)
!14486 = !DILocation(line: 0, scope: !14477)
!14487 = !DILocation(line: 795, column: 15, scope: !14477)
!14488 = !DILocation(line: 795, column: 25, scope: !14477)
!14489 = !DILocation(line: 796, column: 30, scope: !14477)
!14490 = !DILocation(line: 796, column: 15, scope: !14477)
!14491 = !DILocation(line: 796, column: 28, scope: !14477)
!14492 = !DILocation(line: 797, column: 30, scope: !14477)
!14493 = !DILocation(line: 797, column: 15, scope: !14477)
!14494 = !DILocation(line: 797, column: 28, scope: !14477)
!14495 = !DILocation(line: 799, column: 22, scope: !14477)
!14496 = !DILocation(line: 799, column: 15, scope: !14477)
!14497 = !DILocation(line: 799, column: 20, scope: !14477)
!14498 = !DILocation(line: 801, column: 15, scope: !14477)
!14499 = !DILocation(line: 801, column: 28, scope: !14477)
!14500 = !DILocation(line: 814, column: 2, scope: !14477)
!14501 = !DILocation(line: 815, column: 1, scope: !14477)
!14502 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2446, file: !2446, line: 449, type: !14503, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14505)
!14503 = !DISubroutineType(types: !14504)
!14504 = !{!443, !2450, !14432, !439}
!14505 = !{!14506, !14507, !14508, !14509, !14510, !14511, !14512, !14513}
!14506 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14502, file: !2446, line: 449, type: !2450)
!14507 = !DILocalVariable(name: "stack", arg: 2, scope: !14502, file: !2446, line: 450, type: !14432)
!14508 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14502, file: !2446, line: 450, type: !439)
!14509 = !DILocalVariable(name: "stack_obj_size", scope: !14502, file: !2446, line: 452, type: !439)
!14510 = !DILocalVariable(name: "stack_buf_size", scope: !14502, file: !2446, line: 452, type: !439)
!14511 = !DILocalVariable(name: "stack_ptr", scope: !14502, file: !2446, line: 453, type: !443)
!14512 = !DILocalVariable(name: "stack_buf_start", scope: !14502, file: !2446, line: 453, type: !443)
!14513 = !DILocalVariable(name: "delta", scope: !14502, file: !2446, line: 454, type: !439)
!14514 = !DILocation(line: 0, scope: !14502)
!14515 = !DILocation(line: 465, column: 20, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14502, file: !2446, line: 463, column: 2)
!14517 = !DILocation(line: 466, column: 21, scope: !14516)
!14518 = !DILocation(line: 473, column: 28, scope: !14502)
!14519 = !DILocation(line: 514, column: 33, scope: !14502)
!14520 = !DILocation(line: 514, column: 25, scope: !14502)
!14521 = !DILocation(line: 514, column: 31, scope: !14502)
!14522 = !DILocation(line: 515, column: 25, scope: !14502)
!14523 = !DILocation(line: 515, column: 30, scope: !14502)
!14524 = !DILocation(line: 516, column: 25, scope: !14502)
!14525 = !DILocation(line: 516, column: 31, scope: !14502)
!14526 = !DILocation(line: 520, column: 2, scope: !14502)
!14527 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2393, file: !2393, line: 331, type: !14528, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14530)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{!443, !14432}
!14530 = !{!14531}
!14531 = !DILocalVariable(name: "sym", arg: 1, scope: !14527, file: !2393, line: 331, type: !14432)
!14532 = !DILocation(line: 0, scope: !14527)
!14533 = !DILocation(line: 333, column: 21, scope: !14527)
!14534 = !DILocation(line: 333, column: 2, scope: !14527)
!14535 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14536, file: !14536, line: 40, type: !14537, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14539)
!14536 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14537 = !DISubroutineType(types: !14538)
!14538 = !{null, !14480}
!14539 = !{!14540}
!14540 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14535, file: !14536, line: 40, type: !14480)
!14541 = !DILocation(line: 0, scope: !14535)
!14542 = !DILocation(line: 42, column: 31, scope: !14535)
!14543 = !DILocation(line: 42, column: 2, scope: !14535)
!14544 = !DILocation(line: 43, column: 1, scope: !14535)
!14545 = distinct !DISubprogram(name: "z_init_timeout", scope: !14536, file: !14536, line: 25, type: !2507, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14546)
!14546 = !{!14547}
!14547 = !DILocalVariable(name: "to", arg: 1, scope: !14545, file: !14536, line: 25, type: !2509)
!14548 = !DILocation(line: 0, scope: !14545)
!14549 = !DILocation(line: 27, column: 22, scope: !14545)
!14550 = !DILocation(line: 27, column: 2, scope: !14545)
!14551 = !DILocation(line: 28, column: 1, scope: !14545)
!14552 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !14553, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14555)
!14553 = !DISubroutineType(types: !14554)
!14554 = !{null, !2553}
!14555 = !{!14556}
!14556 = !DILocalVariable(name: "node", arg: 1, scope: !14552, file: !367, line: 211, type: !2553)
!14557 = !DILocation(line: 0, scope: !14552)
!14558 = !DILocation(line: 213, column: 8, scope: !14552)
!14559 = !DILocation(line: 213, column: 13, scope: !14552)
!14560 = !DILocation(line: 214, column: 8, scope: !14552)
!14561 = !DILocation(line: 214, column: 13, scope: !14552)
!14562 = !DILocation(line: 215, column: 1, scope: !14552)
!14563 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !14564, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14567)
!14564 = !DISubroutineType(types: !14565)
!14565 = !{null, !14566}
!14566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!14567 = !{!14568}
!14568 = !DILocalVariable(name: "list", arg: 1, scope: !14563, file: !367, line: 197, type: !14566)
!14569 = !DILocation(line: 0, scope: !14563)
!14570 = !DILocation(line: 199, column: 8, scope: !14563)
!14571 = !DILocation(line: 199, column: 13, scope: !14563)
!14572 = !DILocation(line: 200, column: 8, scope: !14563)
!14573 = !DILocation(line: 200, column: 13, scope: !14563)
!14574 = !DILocation(line: 201, column: 1, scope: !14563)
!14575 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2446, file: !2446, line: 641, type: !14576, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14582)
!14576 = !DISubroutineType(types: !14577)
!14577 = !{!2449, !2450, !14432, !439, !5147, !104, !104, !104, !108, !113, !14578}
!14578 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !14579)
!14579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !14580)
!14580 = !{!14581}
!14581 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14579, file: !110, line: 66, baseType: !109, size: 64)
!14582 = !{!14583, !14584, !14585, !14586, !14587, !14588, !14589, !14590, !14591, !14592}
!14583 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14575, file: !2446, line: 641, type: !2450)
!14584 = !DILocalVariable(name: "stack", arg: 2, scope: !14575, file: !2446, line: 642, type: !14432)
!14585 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14575, file: !2446, line: 643, type: !439)
!14586 = !DILocalVariable(name: "entry", arg: 4, scope: !14575, file: !2446, line: 643, type: !5147)
!14587 = !DILocalVariable(name: "p1", arg: 5, scope: !14575, file: !2446, line: 644, type: !104)
!14588 = !DILocalVariable(name: "p2", arg: 6, scope: !14575, file: !2446, line: 644, type: !104)
!14589 = !DILocalVariable(name: "p3", arg: 7, scope: !14575, file: !2446, line: 644, type: !104)
!14590 = !DILocalVariable(name: "prio", arg: 8, scope: !14575, file: !2446, line: 645, type: !108)
!14591 = !DILocalVariable(name: "options", arg: 9, scope: !14575, file: !2446, line: 645, type: !113)
!14592 = !DILocalVariable(name: "delay", arg: 10, scope: !14575, file: !2446, line: 645, type: !14578)
!14593 = !DILocation(line: 0, scope: !14575)
!14594 = !DILocation(line: 649, column: 2, scope: !14575)
!14595 = !DILocation(line: 652, column: 7, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14575, file: !2446, line: 652, column: 6)
!14597 = !DILocation(line: 652, column: 6, scope: !14575)
!14598 = !DILocation(line: 653, column: 3, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14596, file: !2446, line: 652, column: 39)
!14600 = !DILocation(line: 654, column: 2, scope: !14599)
!14601 = !DILocation(line: 656, column: 2, scope: !14575)
!14602 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2446, file: !2446, line: 401, type: !14603, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14605)
!14603 = !DISubroutineType(types: !14604)
!14604 = !{null, !2450, !14578}
!14605 = !{!14606, !14607}
!14606 = !DILocalVariable(name: "thread", arg: 1, scope: !14602, file: !2446, line: 401, type: !2450)
!14607 = !DILocalVariable(name: "delay", arg: 2, scope: !14602, file: !2446, line: 401, type: !14578)
!14608 = !DILocation(line: 0, scope: !14602)
!14609 = !DILocation(line: 404, column: 6, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14602, file: !2446, line: 404, column: 6)
!14611 = !DILocation(line: 404, column: 6, scope: !14602)
!14612 = !DILocation(line: 405, column: 3, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14610, file: !2446, line: 404, column: 38)
!14614 = !DILocation(line: 406, column: 2, scope: !14613)
!14615 = !DILocation(line: 407, column: 3, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14610, file: !2446, line: 406, column: 9)
!14617 = !DILocation(line: 413, column: 1, scope: !14602)
!14618 = distinct !DISubprogram(name: "k_thread_start", scope: !3777, file: !3777, line: 205, type: !14619, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14621)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{null, !2449}
!14621 = !{!14622}
!14622 = !DILocalVariable(name: "thread", arg: 1, scope: !14618, file: !3777, line: 205, type: !2449)
!14623 = !DILocation(line: 0, scope: !14618)
!14624 = !DILocation(line: 214, column: 2, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14618, file: !3777, line: 214, column: 2)
!14626 = !{i64 2152258798}
!14627 = !DILocation(line: 215, column: 2, scope: !14618)
!14628 = !DILocation(line: 216, column: 1, scope: !14618)
!14629 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14536, file: !14536, line: 47, type: !14603, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14630)
!14630 = !{!14631, !14632}
!14631 = !DILocalVariable(name: "thread", arg: 1, scope: !14629, file: !14536, line: 47, type: !2450)
!14632 = !DILocalVariable(name: "ticks", arg: 2, scope: !14629, file: !14536, line: 47, type: !14578)
!14633 = !DILocation(line: 0, scope: !14629)
!14634 = !DILocation(line: 49, column: 30, scope: !14629)
!14635 = !DILocation(line: 49, column: 2, scope: !14629)
!14636 = !DILocation(line: 50, column: 1, scope: !14629)
!14637 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2446, file: !2446, line: 748, type: !3381, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14638)
!14638 = !{!14639, !14657}
!14639 = !DILocalVariable(name: "thread_data", scope: !14640, file: !2446, line: 750, type: !14641)
!14640 = distinct !DILexicalBlock(scope: !14637, file: !2446, line: 750, column: 2)
!14641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14642, size: 32)
!14642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !359, line: 620, size: 384, elements: !14643)
!14643 = !{!14644, !14645, !14646, !14647, !14648, !14649, !14650, !14651, !14652, !14653, !14654, !14656}
!14644 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14642, file: !359, line: 621, baseType: !2450, size: 32)
!14645 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14642, file: !359, line: 622, baseType: !14432, size: 32, offset: 32)
!14646 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14642, file: !359, line: 623, baseType: !32, size: 32, offset: 64)
!14647 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14642, file: !359, line: 624, baseType: !5147, size: 32, offset: 96)
!14648 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14642, file: !359, line: 625, baseType: !104, size: 32, offset: 128)
!14649 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14642, file: !359, line: 626, baseType: !104, size: 32, offset: 160)
!14650 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14642, file: !359, line: 627, baseType: !104, size: 32, offset: 192)
!14651 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14642, file: !359, line: 628, baseType: !108, size: 32, offset: 224)
!14652 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14642, file: !359, line: 629, baseType: !113, size: 32, offset: 256)
!14653 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14642, file: !359, line: 630, baseType: !220, size: 32, offset: 288)
!14654 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14642, file: !359, line: 631, baseType: !14655, size: 32, offset: 320)
!14655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 32)
!14656 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14642, file: !359, line: 632, baseType: !105, size: 32, offset: 352)
!14657 = !DILocalVariable(name: "thread_data", scope: !14658, file: !2446, line: 781, type: !14641)
!14658 = distinct !DILexicalBlock(scope: !14637, file: !2446, line: 781, column: 2)
!14659 = !DILocation(line: 0, scope: !14640)
!14660 = !DILocation(line: 750, column: 2, scope: !14640)
!14661 = !DILocation(line: 780, column: 2, scope: !14637)
!14662 = !DILocation(line: 0, scope: !14658)
!14663 = !DILocation(line: 781, column: 2, scope: !14658)
!14664 = !DILocation(line: 752, column: 17, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14666, file: !2446, line: 750, column: 38)
!14666 = distinct !DILexicalBlock(scope: !14640, file: !2446, line: 750, column: 2)
!14667 = !DILocation(line: 753, column: 17, scope: !14665)
!14668 = !DILocation(line: 754, column: 17, scope: !14665)
!14669 = !DILocation(line: 755, column: 17, scope: !14665)
!14670 = !DILocation(line: 756, column: 17, scope: !14665)
!14671 = !DILocation(line: 757, column: 17, scope: !14665)
!14672 = !DILocation(line: 758, column: 17, scope: !14665)
!14673 = !DILocation(line: 759, column: 17, scope: !14665)
!14674 = !DILocation(line: 760, column: 17, scope: !14665)
!14675 = !DILocation(line: 751, column: 3, scope: !14665)
!14676 = !DILocation(line: 763, column: 16, scope: !14665)
!14677 = !DILocation(line: 763, column: 29, scope: !14665)
!14678 = !DILocation(line: 763, column: 39, scope: !14665)
!14679 = !DILocation(line: 750, column: 2, scope: !14666)
!14680 = !DILocation(line: 750, column: 2, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14666, file: !2446, line: 750, column: 2)
!14682 = distinct !{!14682, !14660, !14683}
!14683 = !DILocation(line: 764, column: 2, scope: !14640)
!14684 = !DILocation(line: 787, column: 2, scope: !14637)
!14685 = !DILocation(line: 788, column: 1, scope: !14637)
!14686 = !DILocation(line: 782, column: 20, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14688, file: !2446, line: 782, column: 7)
!14688 = distinct !DILexicalBlock(scope: !14689, file: !2446, line: 781, column: 38)
!14689 = distinct !DILexicalBlock(scope: !14658, file: !2446, line: 781, column: 2)
!14690 = !DILocation(line: 782, column: 31, scope: !14687)
!14691 = !DILocation(line: 782, column: 7, scope: !14688)
!14692 = !DILocation(line: 783, column: 37, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14687, file: !2446, line: 782, column: 51)
!14694 = !DILocation(line: 784, column: 10, scope: !14693)
!14695 = !DILocation(line: 783, column: 4, scope: !14693)
!14696 = !DILocation(line: 785, column: 3, scope: !14693)
!14697 = !DILocation(line: 781, column: 2, scope: !14689)
!14698 = !DILocation(line: 781, column: 2, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14689, file: !2446, line: 781, column: 2)
!14700 = distinct !{!14700, !14663, !14701}
!14701 = !DILocation(line: 786, column: 2, scope: !14658)
!14702 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3744, file: !3744, line: 403, type: !3745, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14703)
!14703 = !{!14704}
!14704 = !DILocalVariable(name: "t", arg: 1, scope: !14702, file: !3744, line: 403, type: !114)
!14705 = !DILocation(line: 0, scope: !14702)
!14706 = !DILocalVariable(name: "t", arg: 1, scope: !14707, file: !3744, line: 102, type: !114)
!14707 = distinct !DISubprogram(name: "z_tmcvt", scope: !3744, file: !3744, line: 102, type: !3752, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14708)
!14708 = !{!14706, !14709, !14710, !14711, !14712, !14713, !14714, !14715, !14716, !14717, !14718}
!14709 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14707, file: !3744, line: 102, type: !113)
!14710 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14707, file: !3744, line: 103, type: !113)
!14711 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14707, file: !3744, line: 103, type: !422)
!14712 = !DILocalVariable(name: "result32", arg: 5, scope: !14707, file: !3744, line: 104, type: !422)
!14713 = !DILocalVariable(name: "round_up", arg: 6, scope: !14707, file: !3744, line: 104, type: !422)
!14714 = !DILocalVariable(name: "round_off", arg: 7, scope: !14707, file: !3744, line: 105, type: !422)
!14715 = !DILocalVariable(name: "mul_ratio", scope: !14707, file: !3744, line: 107, type: !422)
!14716 = !DILocalVariable(name: "div_ratio", scope: !14707, file: !3744, line: 109, type: !422)
!14717 = !DILocalVariable(name: "off", scope: !14707, file: !3744, line: 116, type: !114)
!14718 = !DILocalVariable(name: "rdivisor", scope: !14719, file: !3744, line: 119, type: !113)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !3744, line: 118, column: 18)
!14720 = distinct !DILexicalBlock(scope: !14707, file: !3744, line: 118, column: 6)
!14721 = !DILocation(line: 0, scope: !14707, inlinedAt: !14722)
!14722 = distinct !DILocation(line: 406, column: 9, scope: !14702)
!14723 = !DILocation(line: 145, column: 13, scope: !14724, inlinedAt: !14722)
!14724 = distinct !DILexicalBlock(scope: !14725, file: !3744, line: 144, column: 10)
!14725 = distinct !DILexicalBlock(scope: !14726, file: !3744, line: 142, column: 7)
!14726 = distinct !DILexicalBlock(scope: !14727, file: !3744, line: 141, column: 24)
!14727 = distinct !DILexicalBlock(scope: !14728, file: !3744, line: 141, column: 13)
!14728 = distinct !DILexicalBlock(scope: !14707, file: !3744, line: 134, column: 6)
!14729 = !DILocation(line: 406, column: 2, scope: !14702)
!14730 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2446, file: !2446, line: 817, type: !5145, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14731)
!14731 = !{!14732, !14733, !14734, !14735}
!14732 = !DILocalVariable(name: "entry", arg: 1, scope: !14730, file: !2446, line: 817, type: !5147)
!14733 = !DILocalVariable(name: "p1", arg: 2, scope: !14730, file: !2446, line: 818, type: !104)
!14734 = !DILocalVariable(name: "p2", arg: 3, scope: !14730, file: !2446, line: 818, type: !104)
!14735 = !DILocalVariable(name: "p3", arg: 4, scope: !14730, file: !2446, line: 818, type: !104)
!14736 = !DILocation(line: 0, scope: !14730)
!14737 = !DILocation(line: 822, column: 2, scope: !14730)
!14738 = !DILocation(line: 822, column: 17, scope: !14730)
!14739 = !DILocation(line: 822, column: 30, scope: !14730)
!14740 = !DILocation(line: 823, column: 2, scope: !14730)
!14741 = !DILocation(line: 845, column: 2, scope: !14730)
!14742 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2446, file: !2446, line: 888, type: !14743, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14745)
!14743 = !DISubroutineType(types: !14744)
!14744 = !{!108, !2450}
!14745 = !{!14746}
!14746 = !DILocalVariable(name: "thread", arg: 1, scope: !14742, file: !2446, line: 888, type: !2450)
!14747 = !DILocation(line: 0, scope: !14742)
!14748 = !DILocation(line: 893, column: 2, scope: !14742)
!14749 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2446, file: !2446, line: 897, type: !14750, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14752)
!14750 = !DISubroutineType(types: !14751)
!14751 = !{!108, !2450, !32}
!14752 = !{!14753, !14754}
!14753 = !DILocalVariable(name: "thread", arg: 1, scope: !14749, file: !2446, line: 897, type: !2450)
!14754 = !DILocalVariable(name: "options", arg: 2, scope: !14749, file: !2446, line: 897, type: !32)
!14755 = !DILocation(line: 0, scope: !14749)
!14756 = !DILocation(line: 902, column: 2, scope: !14749)
!14757 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2446, file: !2446, line: 1072, type: !14758, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14763)
!14758 = !DISubroutineType(types: !14759)
!14759 = !{!108, !2449, !14760}
!14760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14761, size: 32)
!14761 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !656, line: 234, baseType: !14762)
!14762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !656, line: 192, elements: !437)
!14763 = !{!14764, !14765}
!14764 = !DILocalVariable(name: "thread", arg: 1, scope: !14757, file: !2446, line: 1072, type: !2449)
!14765 = !DILocalVariable(name: "stats", arg: 2, scope: !14757, file: !2446, line: 1073, type: !14760)
!14766 = !DILocation(line: 0, scope: !14757)
!14767 = !DILocation(line: 1075, column: 14, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14757, file: !2446, line: 1075, column: 6)
!14769 = !DILocation(line: 1075, column: 23, scope: !14768)
!14770 = !DILocation(line: 1086, column: 1, scope: !14757)
!14771 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2446, file: !2446, line: 1088, type: !14772, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !14774)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{!108, !14760}
!14774 = !{!14775}
!14775 = !DILocalVariable(name: "stats", arg: 1, scope: !14771, file: !2446, line: 1088, type: !14760)
!14776 = !DILocation(line: 0, scope: !14771)
!14777 = !DILocation(line: 1094, column: 12, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !14771, file: !2446, line: 1094, column: 6)
!14779 = !DILocation(line: 1120, column: 1, scope: !14771)
!14780 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14781, file: !14781, line: 20, type: !3381, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3362, retainedNodes: !437)
!14781 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14782 = !DILocation(line: 30, column: 2, scope: !14780)
!14783 = !DILocation(line: 31, column: 1, scope: !14780)
!14784 = distinct !DISubprogram(name: "idle", scope: !14781, file: !14781, line: 33, type: !5150, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3362, retainedNodes: !14785)
!14785 = !{!14786, !14787, !14788}
!14786 = !DILocalVariable(name: "unused1", arg: 1, scope: !14784, file: !14781, line: 33, type: !104)
!14787 = !DILocalVariable(name: "unused2", arg: 2, scope: !14784, file: !14781, line: 33, type: !104)
!14788 = !DILocalVariable(name: "unused3", arg: 3, scope: !14784, file: !14781, line: 33, type: !104)
!14789 = !DILocation(line: 0, scope: !14784)
!14790 = !DILocation(line: 41, column: 2, scope: !14784)
!14791 = !DILocation(line: 55, column: 2, scope: !14792, inlinedAt: !14796)
!14792 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3362, retainedNodes: !14793)
!14793 = !{!14794, !14795}
!14794 = !DILocalVariable(name: "key", scope: !14792, file: !4055, line: 44, type: !32)
!14795 = !DILocalVariable(name: "tmp", scope: !14792, file: !4055, line: 53, type: !32)
!14796 = distinct !DILocation(line: 62, column: 10, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14784, file: !14781, line: 41, column: 15)
!14798 = !{i64 1666258}
!14799 = !DILocation(line: 0, scope: !14792, inlinedAt: !14796)
!14800 = !DILocation(line: 86, column: 3, scope: !14797)
!14801 = distinct !{!14801, !14790, !14802}
!14802 = !DILocation(line: 105, column: 2, scope: !14784)
!14803 = distinct !DISubprogram(name: "k_cpu_idle", scope: !359, file: !359, line: 5627, type: !3381, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3362, retainedNodes: !437)
!14804 = !DILocation(line: 5629, column: 2, scope: !14803)
!14805 = !DILocation(line: 5630, column: 1, scope: !14803)
!14806 = !DISubprogram(name: "arch_cpu_idle", scope: !5148, file: !5148, line: 167, type: !3381, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14807 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2678, file: !2678, line: 93, type: !14808, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14810)
!14808 = !DISubroutineType(types: !14809)
!14809 = !{!220, !2573, !2573}
!14810 = !{!14811, !14812, !14813, !14814}
!14811 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14807, file: !2678, line: 93, type: !2573)
!14812 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14807, file: !2678, line: 94, type: !2573)
!14813 = !DILocalVariable(name: "b1", scope: !14807, file: !2678, line: 97, type: !220)
!14814 = !DILocalVariable(name: "b2", scope: !14807, file: !2678, line: 98, type: !220)
!14815 = !DILocation(line: 0, scope: !14807)
!14816 = !DILocation(line: 97, column: 30, scope: !14807)
!14817 = !DILocation(line: 98, column: 30, scope: !14807)
!14818 = !DILocation(line: 100, column: 9, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14807, file: !2678, line: 100, column: 6)
!14820 = !DILocation(line: 100, column: 6, scope: !14807)
!14821 = !DILocation(line: 125, column: 1, scope: !14807)
!14822 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2678, file: !2678, line: 428, type: !14823, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14825)
!14823 = !DISubroutineType(types: !14824)
!14824 = !{null, !2573}
!14825 = !{!14826}
!14826 = !DILocalVariable(name: "curr", arg: 1, scope: !14822, file: !2678, line: 428, type: !2573)
!14827 = !DILocation(line: 0, scope: !14822)
!14828 = !DILocation(line: 434, column: 6, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14822, file: !2678, line: 434, column: 6)
!14830 = !DILocation(line: 434, column: 23, scope: !14829)
!14831 = !DILocation(line: 434, column: 6, scope: !14822)
!14832 = !DILocation(line: 435, column: 50, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14829, file: !2678, line: 434, column: 29)
!14834 = !DILocation(line: 435, column: 48, scope: !14833)
!14835 = !DILocation(line: 435, column: 29, scope: !14833)
!14836 = !DILocation(line: 436, column: 24, scope: !14833)
!14837 = !DILocation(line: 436, column: 3, scope: !14833)
!14838 = !DILocation(line: 437, column: 2, scope: !14833)
!14839 = !DILocation(line: 438, column: 1, scope: !14822)
!14840 = distinct !DISubprogram(name: "slice_time", scope: !2678, file: !2678, line: 407, type: !14841, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14843)
!14841 = !DISubroutineType(types: !14842)
!14842 = !{!108, !2573}
!14843 = !{!14844, !14845}
!14844 = !DILocalVariable(name: "curr", arg: 1, scope: !14840, file: !2678, line: 407, type: !2573)
!14845 = !DILocalVariable(name: "ret", scope: !14840, file: !2678, line: 409, type: !108)
!14846 = !DILocation(line: 0, scope: !14840)
!14847 = !DILocation(line: 409, column: 12, scope: !14840)
!14848 = !DILocation(line: 416, column: 2, scope: !14840)
!14849 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2678, file: !2678, line: 440, type: !14850, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14852)
!14850 = !DISubroutineType(types: !14851)
!14851 = !{null, !220, !108}
!14852 = !{!14853, !14854, !14855, !14861}
!14853 = !DILocalVariable(name: "slice", arg: 1, scope: !14849, file: !2678, line: 440, type: !220)
!14854 = !DILocalVariable(name: "prio", arg: 2, scope: !14849, file: !2678, line: 440, type: !108)
!14855 = !DILocalVariable(name: "__i", scope: !14856, file: !2678, line: 442, type: !14857)
!14856 = distinct !DILexicalBlock(scope: !14849, file: !2678, line: 442, column: 2)
!14857 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !14858)
!14858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !14859)
!14859 = !{!14860}
!14860 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14858, file: !436, line: 33, baseType: !108, size: 32)
!14861 = !DILocalVariable(name: "__key", scope: !14856, file: !2678, line: 442, type: !14857)
!14862 = !DILocation(line: 0, scope: !14849)
!14863 = !DILocation(line: 0, scope: !14856)
!14864 = !DILocalVariable(name: "l", arg: 1, scope: !14865, file: !436, line: 136, type: !14868)
!14865 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !14866, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14869)
!14866 = !DISubroutineType(types: !14867)
!14867 = !{!14857, !14868}
!14868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!14869 = !{!14864, !14870}
!14870 = !DILocalVariable(name: "k", scope: !14865, file: !436, line: 139, type: !14857)
!14871 = !DILocation(line: 0, scope: !14865, inlinedAt: !14872)
!14872 = distinct !DILocation(line: 442, column: 2, scope: !14856)
!14873 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !14878)
!14874 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14875)
!14875 = !{!14876, !14877}
!14876 = !DILocalVariable(name: "key", scope: !14874, file: !4055, line: 44, type: !32)
!14877 = !DILocalVariable(name: "tmp", scope: !14874, file: !4055, line: 53, type: !32)
!14878 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !14872)
!14879 = !{i64 1710229}
!14880 = !DILocation(line: 0, scope: !14874, inlinedAt: !14878)
!14881 = !DILocation(line: 443, column: 29, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14883, file: !2678, line: 442, column: 26)
!14883 = distinct !DILexicalBlock(scope: !14856, file: !2678, line: 442, column: 2)
!14884 = !DILocation(line: 444, column: 17, scope: !14882)
!14885 = !DILocation(line: 445, column: 51, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14882, file: !2678, line: 445, column: 7)
!14887 = !DILocation(line: 445, column: 7, scope: !14882)
!14888 = !DILocation(line: 0, scope: !14882)
!14889 = !DILocation(line: 451, column: 18, scope: !14882)
!14890 = !DILocation(line: 452, column: 3, scope: !14882)
!14891 = !DILocalVariable(name: "key", arg: 2, scope: !14892, file: !436, line: 190, type: !14857)
!14892 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !14893, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14895)
!14893 = !DISubroutineType(types: !14894)
!14894 = !{null, !14868, !14857}
!14895 = !{!14896, !14891}
!14896 = !DILocalVariable(name: "l", arg: 1, scope: !14892, file: !436, line: 189, type: !14868)
!14897 = !DILocation(line: 0, scope: !14892, inlinedAt: !14898)
!14898 = distinct !DILocation(line: 442, column: 2, scope: !14883)
!14899 = !DILocalVariable(name: "key", arg: 1, scope: !14900, file: !4055, line: 84, type: !32)
!14900 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14901)
!14901 = !{!14899}
!14902 = !DILocation(line: 0, scope: !14900, inlinedAt: !14903)
!14903 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !14898)
!14904 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !14903)
!14905 = !{i64 1711046}
!14906 = !DILocation(line: 454, column: 1, scope: !14849)
!14907 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3744, file: !3744, line: 389, type: !8237, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14908)
!14908 = !{!14909}
!14909 = !DILocalVariable(name: "t", arg: 1, scope: !14907, file: !3744, line: 389, type: !113)
!14910 = !DILocation(line: 0, scope: !14907)
!14911 = !DILocalVariable(name: "t", arg: 1, scope: !14912, file: !3744, line: 102, type: !114)
!14912 = distinct !DISubprogram(name: "z_tmcvt", scope: !3744, file: !3744, line: 102, type: !3752, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14913)
!14913 = !{!14911, !14914, !14915, !14916, !14917, !14918, !14919, !14920, !14921, !14922, !14923}
!14914 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14912, file: !3744, line: 102, type: !113)
!14915 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14912, file: !3744, line: 103, type: !113)
!14916 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14912, file: !3744, line: 103, type: !422)
!14917 = !DILocalVariable(name: "result32", arg: 5, scope: !14912, file: !3744, line: 104, type: !422)
!14918 = !DILocalVariable(name: "round_up", arg: 6, scope: !14912, file: !3744, line: 104, type: !422)
!14919 = !DILocalVariable(name: "round_off", arg: 7, scope: !14912, file: !3744, line: 105, type: !422)
!14920 = !DILocalVariable(name: "mul_ratio", scope: !14912, file: !3744, line: 107, type: !422)
!14921 = !DILocalVariable(name: "div_ratio", scope: !14912, file: !3744, line: 109, type: !422)
!14922 = !DILocalVariable(name: "off", scope: !14912, file: !3744, line: 116, type: !114)
!14923 = !DILocalVariable(name: "rdivisor", scope: !14924, file: !3744, line: 119, type: !113)
!14924 = distinct !DILexicalBlock(scope: !14925, file: !3744, line: 118, column: 18)
!14925 = distinct !DILexicalBlock(scope: !14912, file: !3744, line: 118, column: 6)
!14926 = !DILocation(line: 0, scope: !14912, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 392, column: 9, scope: !14907)
!14928 = !DILocation(line: 143, column: 25, scope: !14929, inlinedAt: !14927)
!14929 = distinct !DILexicalBlock(scope: !14930, file: !3744, line: 142, column: 17)
!14930 = distinct !DILexicalBlock(scope: !14931, file: !3744, line: 142, column: 7)
!14931 = distinct !DILexicalBlock(scope: !14932, file: !3744, line: 141, column: 24)
!14932 = distinct !DILexicalBlock(scope: !14933, file: !3744, line: 141, column: 13)
!14933 = distinct !DILexicalBlock(scope: !14912, file: !3744, line: 134, column: 6)
!14934 = !DILocation(line: 392, column: 2, scope: !14907)
!14935 = distinct !DISubprogram(name: "z_time_slice", scope: !2678, file: !2678, line: 502, type: !9680, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14936)
!14936 = !{!14937, !14938}
!14937 = !DILocalVariable(name: "ticks", arg: 1, scope: !14935, file: !2678, line: 502, type: !108)
!14938 = !DILocalVariable(name: "key", scope: !14935, file: !2678, line: 511, type: !14857)
!14939 = !DILocation(line: 0, scope: !14935)
!14940 = !DILocation(line: 0, scope: !14865, inlinedAt: !14941)
!14941 = distinct !DILocation(line: 511, column: 25, scope: !14935)
!14942 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !14943)
!14943 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !14941)
!14944 = !DILocation(line: 0, scope: !14874, inlinedAt: !14943)
!14945 = !DILocation(line: 514, column: 6, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14935, file: !2678, line: 514, column: 6)
!14947 = !DILocation(line: 514, column: 25, scope: !14946)
!14948 = !DILocation(line: 514, column: 22, scope: !14946)
!14949 = !DILocation(line: 514, column: 6, scope: !14935)
!14950 = !DILocation(line: 515, column: 3, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14946, file: !2678, line: 514, column: 35)
!14952 = !DILocation(line: 0, scope: !14892, inlinedAt: !14953)
!14953 = distinct !DILocation(line: 516, column: 3, scope: !14951)
!14954 = !DILocation(line: 0, scope: !14900, inlinedAt: !14955)
!14955 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !14953)
!14956 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !14955)
!14957 = !DILocation(line: 517, column: 3, scope: !14951)
!14958 = !DILocation(line: 519, column: 18, scope: !14935)
!14959 = !DILocation(line: 522, column: 6, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14935, file: !2678, line: 522, column: 6)
!14961 = !DILocation(line: 522, column: 27, scope: !14960)
!14962 = !DILocation(line: 522, column: 30, scope: !14960)
!14963 = !DILocation(line: 522, column: 6, scope: !14935)
!14964 = !DILocation(line: 523, column: 30, scope: !14965)
!14965 = distinct !DILexicalBlock(scope: !14966, file: !2678, line: 523, column: 7)
!14966 = distinct !DILexicalBlock(scope: !14960, file: !2678, line: 522, column: 51)
!14967 = !DILocation(line: 523, column: 13, scope: !14965)
!14968 = !DILocation(line: 523, column: 7, scope: !14966)
!14969 = !DILocation(line: 530, column: 10, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14965, file: !2678, line: 523, column: 43)
!14971 = !DILocation(line: 531, column: 3, scope: !14970)
!14972 = !DILocation(line: 532, column: 30, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14965, file: !2678, line: 531, column: 10)
!14974 = !DILocation(line: 535, column: 29, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14960, file: !2678, line: 534, column: 9)
!14976 = !DILocation(line: 0, scope: !14892, inlinedAt: !14977)
!14977 = distinct !DILocation(line: 537, column: 2, scope: !14935)
!14978 = !DILocation(line: 0, scope: !14900, inlinedAt: !14979)
!14979 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !14977)
!14980 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !14979)
!14981 = !DILocation(line: 538, column: 1, scope: !14935)
!14982 = distinct !DISubprogram(name: "sliceable", scope: !2678, file: !2678, line: 468, type: !14983, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !14985)
!14983 = !DISubroutineType(types: !14984)
!14984 = !{!422, !2573}
!14985 = !{!14986, !14987}
!14986 = !DILocalVariable(name: "thread", arg: 1, scope: !14982, file: !2678, line: 468, type: !2573)
!14987 = !DILocalVariable(name: "ret", scope: !14982, file: !2678, line: 470, type: !422)
!14988 = !DILocation(line: 0, scope: !14982)
!14989 = !DILocation(line: 470, column: 13, scope: !14982)
!14990 = !DILocation(line: 471, column: 3, scope: !14982)
!14991 = !DILocation(line: 471, column: 7, scope: !14982)
!14992 = !DILocation(line: 472, column: 3, scope: !14982)
!14993 = !DILocation(line: 472, column: 37, scope: !14982)
!14994 = !DILocation(line: 472, column: 24, scope: !14982)
!14995 = !DILocation(line: 472, column: 43, scope: !14982)
!14996 = !DILocation(line: 472, column: 7, scope: !14982)
!14997 = !DILocation(line: 473, column: 3, scope: !14982)
!14998 = !DILocation(line: 473, column: 7, scope: !14982)
!14999 = !DILocation(line: 473, column: 6, scope: !14982)
!15000 = !DILocation(line: 479, column: 2, scope: !14982)
!15001 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2678, file: !2678, line: 482, type: !15002, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15004)
!15002 = !DISubroutineType(types: !15003)
!15003 = !{!14857, !14857}
!15004 = !{!15005, !15006}
!15005 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15001, file: !2678, line: 482, type: !14857)
!15006 = !DILocalVariable(name: "curr", scope: !15001, file: !2678, line: 484, type: !2573)
!15007 = !DILocation(line: 0, scope: !15001)
!15008 = !DILocation(line: 484, column: 26, scope: !15001)
!15009 = !DILocation(line: 493, column: 7, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !15001, file: !2678, line: 493, column: 6)
!15011 = !DILocation(line: 493, column: 6, scope: !15001)
!15012 = !DILocation(line: 494, column: 3, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15010, file: !2678, line: 493, column: 49)
!15014 = !DILocation(line: 495, column: 2, scope: !15013)
!15015 = !DILocation(line: 496, column: 2, scope: !15001)
!15016 = !DILocation(line: 499, column: 1, scope: !15001)
!15017 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14142, file: !14142, line: 106, type: !14983, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15018)
!15018 = !{!15019, !15020}
!15019 = !DILocalVariable(name: "thread", arg: 1, scope: !15017, file: !14142, line: 106, type: !2573)
!15020 = !DILocalVariable(name: "state", scope: !15017, file: !14142, line: 108, type: !164)
!15021 = !DILocation(line: 0, scope: !15017)
!15022 = !DILocation(line: 108, column: 31, scope: !15017)
!15023 = !DILocation(line: 110, column: 16, scope: !15017)
!15024 = !DILocation(line: 111, column: 41, scope: !15017)
!15025 = !DILocation(line: 110, column: 2, scope: !15017)
!15026 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2678, file: !2678, line: 393, type: !14823, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15027)
!15027 = !{!15028}
!15028 = !DILocalVariable(name: "thread", arg: 1, scope: !15026, file: !2678, line: 393, type: !2573)
!15029 = !DILocation(line: 0, scope: !15026)
!15030 = !DILocation(line: 395, column: 6, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15026, file: !2678, line: 395, column: 6)
!15032 = !DILocation(line: 395, column: 6, scope: !15026)
!15033 = !DILocalVariable(name: "thread", arg: 1, scope: !15034, file: !2678, line: 264, type: !2573)
!15034 = distinct !DISubprogram(name: "dequeue_thread", scope: !2678, file: !2678, line: 264, type: !14823, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15035)
!15035 = !{!15033}
!15036 = !DILocation(line: 0, scope: !15034, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 396, column: 3, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15031, file: !2678, line: 395, column: 34)
!15039 = !DILocation(line: 266, column: 15, scope: !15034, inlinedAt: !15037)
!15040 = !DILocation(line: 266, column: 28, scope: !15034, inlinedAt: !15037)
!15041 = !DILocalVariable(name: "thread", arg: 1, scope: !15042, file: !2678, line: 232, type: !2573)
!15042 = distinct !DISubprogram(name: "runq_remove", scope: !2678, file: !2678, line: 232, type: !14823, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15043)
!15043 = !{!15041}
!15044 = !DILocation(line: 0, scope: !15042, inlinedAt: !15045)
!15045 = distinct !DILocation(line: 268, column: 3, scope: !15046, inlinedAt: !15037)
!15046 = distinct !DILexicalBlock(scope: !15047, file: !2678, line: 267, column: 35)
!15047 = distinct !DILexicalBlock(scope: !15034, file: !2678, line: 267, column: 6)
!15048 = !DILocation(line: 234, column: 2, scope: !15042, inlinedAt: !15045)
!15049 = !DILocation(line: 397, column: 2, scope: !15038)
!15050 = !DILocalVariable(name: "thread", arg: 1, scope: !15051, file: !2678, line: 250, type: !2573)
!15051 = distinct !DISubprogram(name: "queue_thread", scope: !2678, file: !2678, line: 250, type: !14823, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15052)
!15052 = !{!15050}
!15053 = !DILocation(line: 0, scope: !15051, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 398, column: 2, scope: !15026)
!15055 = !DILocation(line: 252, column: 15, scope: !15051, inlinedAt: !15054)
!15056 = !DILocation(line: 252, column: 28, scope: !15051, inlinedAt: !15054)
!15057 = !DILocalVariable(name: "thread", arg: 1, scope: !15058, file: !2678, line: 227, type: !2573)
!15058 = distinct !DISubprogram(name: "runq_add", scope: !2678, file: !2678, line: 227, type: !14823, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15059)
!15059 = !{!15057}
!15060 = !DILocation(line: 0, scope: !15058, inlinedAt: !15061)
!15061 = distinct !DILocation(line: 254, column: 3, scope: !15062, inlinedAt: !15054)
!15062 = distinct !DILexicalBlock(scope: !15063, file: !2678, line: 253, column: 35)
!15063 = distinct !DILexicalBlock(scope: !15051, file: !2678, line: 253, column: 6)
!15064 = !DILocalVariable(name: "pq", arg: 1, scope: !15065, file: !2678, line: 181, type: !15068)
!15065 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2678, file: !2678, line: 181, type: !15066, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15069)
!15066 = !DISubroutineType(types: !15067)
!15067 = !{null, !15068, !2573}
!15068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!15069 = !{!15064, !15070, !15071}
!15070 = !DILocalVariable(name: "thread", arg: 2, scope: !15065, file: !2678, line: 182, type: !2573)
!15071 = !DILocalVariable(name: "t", scope: !15065, file: !2678, line: 184, type: !2573)
!15072 = !DILocation(line: 0, scope: !15065, inlinedAt: !15073)
!15073 = distinct !DILocation(line: 229, column: 2, scope: !15058, inlinedAt: !15061)
!15074 = !DILocation(line: 188, column: 2, scope: !15075, inlinedAt: !15073)
!15075 = distinct !DILexicalBlock(scope: !15065, file: !2678, line: 188, column: 2)
!15076 = !DILocation(line: 188, column: 2, scope: !15077, inlinedAt: !15073)
!15077 = distinct !DILexicalBlock(scope: !15075, file: !2678, line: 188, column: 2)
!15078 = !DILocation(line: 0, scope: !15075, inlinedAt: !15073)
!15079 = !DILocation(line: 189, column: 7, scope: !15080, inlinedAt: !15073)
!15080 = distinct !DILexicalBlock(scope: !15081, file: !2678, line: 189, column: 7)
!15081 = distinct !DILexicalBlock(scope: !15077, file: !2678, line: 188, column: 56)
!15082 = !DILocation(line: 189, column: 35, scope: !15080, inlinedAt: !15073)
!15083 = !DILocation(line: 189, column: 7, scope: !15081, inlinedAt: !15073)
!15084 = !DILocation(line: 191, column: 21, scope: !15085, inlinedAt: !15073)
!15085 = distinct !DILexicalBlock(scope: !15080, file: !2678, line: 189, column: 40)
!15086 = !DILocation(line: 190, column: 4, scope: !15085, inlinedAt: !15073)
!15087 = !DILocation(line: 192, column: 4, scope: !15085, inlinedAt: !15073)
!15088 = distinct !{!15088, !15074, !15089}
!15089 = !DILocation(line: 194, column: 2, scope: !15075, inlinedAt: !15073)
!15090 = !DILocation(line: 196, column: 37, scope: !15065, inlinedAt: !15073)
!15091 = !DILocation(line: 196, column: 2, scope: !15065, inlinedAt: !15073)
!15092 = !DILocation(line: 197, column: 1, scope: !15065, inlinedAt: !15073)
!15093 = !DILocation(line: 399, column: 25, scope: !15026)
!15094 = !DILocation(line: 399, column: 22, scope: !15026)
!15095 = !DILocation(line: 399, column: 2, scope: !15026)
!15096 = !DILocation(line: 400, column: 1, scope: !15026)
!15097 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14142, file: !14142, line: 136, type: !14983, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15098)
!15098 = !{!15099}
!15099 = !DILocalVariable(name: "thread", arg: 1, scope: !15097, file: !14142, line: 136, type: !2573)
!15100 = !DILocation(line: 0, scope: !15097)
!15101 = !DILocation(line: 138, column: 9, scope: !15097)
!15102 = !DILocation(line: 138, column: 2, scope: !15097)
!15103 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2678, file: !2678, line: 1137, type: !15066, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15104)
!15104 = !{!15105, !15106}
!15105 = !DILocalVariable(name: "pq", arg: 1, scope: !15103, file: !2678, line: 1137, type: !15068)
!15106 = !DILocalVariable(name: "thread", arg: 2, scope: !15103, file: !2678, line: 1137, type: !2573)
!15107 = !DILocation(line: 0, scope: !15103)
!15108 = !DILocation(line: 1141, column: 33, scope: !15103)
!15109 = !DILocation(line: 1141, column: 2, scope: !15103)
!15110 = !DILocation(line: 1142, column: 1, scope: !15103)
!15111 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !15112, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15114)
!15112 = !DISubroutineType(types: !15113)
!15113 = !{!2674, !15068}
!15114 = !{!15115}
!15115 = !DILocalVariable(name: "list", arg: 1, scope: !15111, file: !367, line: 294, type: !15068)
!15116 = !DILocation(line: 0, scope: !15111)
!15117 = !DILocation(line: 296, column: 9, scope: !15111)
!15118 = !DILocation(line: 296, column: 49, scope: !15111)
!15119 = !DILocation(line: 296, column: 2, scope: !15111)
!15120 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !15121, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15123)
!15121 = !DISubroutineType(types: !15122)
!15122 = !{null, !2674, !2674}
!15123 = !{!15124, !15125, !15126}
!15124 = !DILocalVariable(name: "successor", arg: 1, scope: !15120, file: !367, line: 443, type: !2674)
!15125 = !DILocalVariable(name: "node", arg: 2, scope: !15120, file: !367, line: 443, type: !2674)
!15126 = !DILocalVariable(name: "prev", scope: !15120, file: !367, line: 445, type: !15127)
!15127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2674)
!15128 = !DILocation(line: 0, scope: !15120)
!15129 = !DILocation(line: 445, column: 39, scope: !15120)
!15130 = !DILocation(line: 447, column: 8, scope: !15120)
!15131 = !DILocation(line: 447, column: 13, scope: !15120)
!15132 = !DILocation(line: 448, column: 8, scope: !15120)
!15133 = !DILocation(line: 448, column: 13, scope: !15120)
!15134 = !DILocation(line: 449, column: 8, scope: !15120)
!15135 = !DILocation(line: 449, column: 13, scope: !15120)
!15136 = !DILocation(line: 450, column: 18, scope: !15120)
!15137 = !DILocation(line: 451, column: 1, scope: !15120)
!15138 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !15139, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15141)
!15139 = !DISubroutineType(types: !15140)
!15140 = !{!2674, !15068, !2674}
!15141 = !{!15142, !15143}
!15142 = !DILocalVariable(name: "list", arg: 1, scope: !15138, file: !367, line: 341, type: !15068)
!15143 = !DILocalVariable(name: "node", arg: 2, scope: !15138, file: !367, line: 342, type: !2674)
!15144 = !DILocation(line: 0, scope: !15138)
!15145 = !DILocation(line: 344, column: 15, scope: !15138)
!15146 = !DILocation(line: 344, column: 9, scope: !15138)
!15147 = !DILocation(line: 344, column: 26, scope: !15138)
!15148 = !DILocation(line: 344, column: 2, scope: !15138)
!15149 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !15150, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15152)
!15150 = !DISubroutineType(types: !15151)
!15151 = !{null, !15068, !2674}
!15152 = !{!15153, !15154, !15155}
!15153 = !DILocalVariable(name: "list", arg: 1, scope: !15149, file: !367, line: 404, type: !15068)
!15154 = !DILocalVariable(name: "node", arg: 2, scope: !15149, file: !367, line: 404, type: !2674)
!15155 = !DILocalVariable(name: "tail", scope: !15149, file: !367, line: 406, type: !15127)
!15156 = !DILocation(line: 0, scope: !15149)
!15157 = !DILocation(line: 406, column: 34, scope: !15149)
!15158 = !DILocation(line: 408, column: 8, scope: !15149)
!15159 = !DILocation(line: 408, column: 13, scope: !15149)
!15160 = !DILocation(line: 409, column: 8, scope: !15149)
!15161 = !DILocation(line: 409, column: 13, scope: !15149)
!15162 = !DILocation(line: 411, column: 8, scope: !15149)
!15163 = !DILocation(line: 411, column: 13, scope: !15149)
!15164 = !DILocation(line: 412, column: 13, scope: !15149)
!15165 = !DILocation(line: 413, column: 1, scope: !15149)
!15166 = distinct !DISubprogram(name: "update_cache", scope: !2678, file: !2678, line: 559, type: !9680, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15167)
!15167 = !{!15168, !15169}
!15168 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15166, file: !2678, line: 559, type: !108)
!15169 = !DILocalVariable(name: "thread", scope: !15166, file: !2678, line: 562, type: !2573)
!15170 = !DILocation(line: 0, scope: !15166)
!15171 = !DILocation(line: 239, column: 9, scope: !15172, inlinedAt: !15175)
!15172 = distinct !DISubprogram(name: "runq_best", scope: !2678, file: !2678, line: 237, type: !15173, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!15173 = !DISubroutineType(types: !15174)
!15174 = !{!2573}
!15175 = distinct !DILocation(line: 314, column: 28, scope: !15176, inlinedAt: !15179)
!15176 = distinct !DISubprogram(name: "next_up", scope: !2678, file: !2678, line: 312, type: !15173, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15177)
!15177 = !{!15178}
!15178 = !DILocalVariable(name: "thread", scope: !15176, file: !2678, line: 314, type: !2573)
!15179 = distinct !DILocation(line: 562, column: 28, scope: !15166)
!15180 = !DILocation(line: 0, scope: !15176, inlinedAt: !15179)
!15181 = !DILocation(line: 340, column: 17, scope: !15176, inlinedAt: !15179)
!15182 = !DILocation(line: 340, column: 9, scope: !15176, inlinedAt: !15179)
!15183 = !DILocalVariable(name: "thread", arg: 1, scope: !15184, file: !2678, line: 127, type: !2573)
!15184 = distinct !DISubprogram(name: "should_preempt", scope: !2678, file: !2678, line: 127, type: !15185, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15187)
!15185 = !DISubroutineType(types: !15186)
!15186 = !{!422, !2573, !108}
!15187 = !{!15183, !15188}
!15188 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15184, file: !2678, line: 128, type: !108)
!15189 = !DILocation(line: 0, scope: !15184, inlinedAt: !15190)
!15190 = distinct !DILocation(line: 564, column: 6, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15166, file: !2678, line: 564, column: 6)
!15192 = !DILocation(line: 133, column: 17, scope: !15193, inlinedAt: !15190)
!15193 = distinct !DILexicalBlock(scope: !15184, file: !2678, line: 133, column: 6)
!15194 = !DILocation(line: 0, scope: !15191)
!15195 = !DILocation(line: 133, column: 6, scope: !15184, inlinedAt: !15190)
!15196 = !DILocation(line: 140, column: 6, scope: !15197, inlinedAt: !15190)
!15197 = distinct !DILexicalBlock(scope: !15184, file: !2678, line: 140, column: 6)
!15198 = !DILocation(line: 140, column: 6, scope: !15184, inlinedAt: !15190)
!15199 = !DILocation(line: 150, column: 9, scope: !15200, inlinedAt: !15190)
!15200 = distinct !DILexicalBlock(scope: !15184, file: !2678, line: 149, column: 6)
!15201 = !DILocation(line: 149, column: 6, scope: !15184, inlinedAt: !15190)
!15202 = !DILocation(line: 157, column: 6, scope: !15203, inlinedAt: !15190)
!15203 = distinct !DILexicalBlock(scope: !15184, file: !2678, line: 157, column: 6)
!15204 = !DILocation(line: 564, column: 6, scope: !15166)
!15205 = !DILocation(line: 566, column: 14, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !2678, line: 566, column: 7)
!15207 = distinct !DILexicalBlock(scope: !15191, file: !2678, line: 564, column: 42)
!15208 = !DILocation(line: 566, column: 7, scope: !15207)
!15209 = !DILocation(line: 567, column: 4, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15206, file: !2678, line: 566, column: 27)
!15211 = !DILocation(line: 568, column: 3, scope: !15210)
!15212 = !DILocation(line: 585, column: 1, scope: !15166)
!15213 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2678, file: !2678, line: 1144, type: !15214, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15216)
!15214 = !DISubroutineType(types: !15215)
!15215 = !{!2573, !15068}
!15216 = !{!15217, !15218, !15219}
!15217 = !DILocalVariable(name: "pq", arg: 1, scope: !15213, file: !2678, line: 1144, type: !15068)
!15218 = !DILocalVariable(name: "thread", scope: !15213, file: !2678, line: 1146, type: !2573)
!15219 = !DILocalVariable(name: "n", scope: !15213, file: !2678, line: 1147, type: !2674)
!15220 = !DILocation(line: 0, scope: !15213)
!15221 = !DILocation(line: 1147, column: 19, scope: !15213)
!15222 = !DILocation(line: 1152, column: 2, scope: !15213)
!15223 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14142, file: !14142, line: 115, type: !14983, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15224)
!15224 = !{!15225}
!15225 = !DILocalVariable(name: "thread", arg: 1, scope: !15223, file: !14142, line: 115, type: !2573)
!15226 = !DILocation(line: 0, scope: !15223)
!15227 = !DILocation(line: 117, column: 46, scope: !15223)
!15228 = !DILocation(line: 117, column: 10, scope: !15223)
!15229 = !DILocation(line: 117, column: 9, scope: !15223)
!15230 = !DILocation(line: 117, column: 2, scope: !15223)
!15231 = distinct !DISubprogram(name: "is_preempt", scope: !2678, file: !2678, line: 62, type: !14841, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15232)
!15232 = !{!15233}
!15233 = !DILocalVariable(name: "thread", arg: 1, scope: !15231, file: !2678, line: 62, type: !2573)
!15234 = !DILocation(line: 0, scope: !15231)
!15235 = !DILocation(line: 65, column: 22, scope: !15231)
!15236 = !DILocation(line: 65, column: 30, scope: !15231)
!15237 = !DILocation(line: 65, column: 2, scope: !15231)
!15238 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14536, file: !14536, line: 35, type: !15239, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15243)
!15239 = !DISubroutineType(types: !15240)
!15240 = !{!422, !15241}
!15241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15242, size: 32)
!15242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2624)
!15243 = !{!15244}
!15244 = !DILocalVariable(name: "to", arg: 1, scope: !15238, file: !14536, line: 35, type: !15241)
!15245 = !DILocation(line: 0, scope: !15238)
!15246 = !DILocation(line: 37, column: 35, scope: !15238)
!15247 = !DILocation(line: 37, column: 10, scope: !15238)
!15248 = !DILocation(line: 37, column: 9, scope: !15238)
!15249 = !DILocation(line: 37, column: 2, scope: !15238)
!15250 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !15251, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15255)
!15251 = !DISubroutineType(types: !15252)
!15252 = !{!422, !15253}
!15253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15254, size: 32)
!15254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2583)
!15255 = !{!15256}
!15256 = !DILocalVariable(name: "node", arg: 1, scope: !15250, file: !367, line: 225, type: !15253)
!15257 = !DILocation(line: 0, scope: !15250)
!15258 = !DILocation(line: 227, column: 15, scope: !15250)
!15259 = !DILocation(line: 227, column: 20, scope: !15250)
!15260 = !DILocation(line: 227, column: 2, scope: !15250)
!15261 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !15139, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15262)
!15262 = !{!15263, !15264}
!15263 = !DILocalVariable(name: "list", arg: 1, scope: !15261, file: !367, line: 325, type: !15068)
!15264 = !DILocalVariable(name: "node", arg: 2, scope: !15261, file: !367, line: 326, type: !2674)
!15265 = !DILocation(line: 0, scope: !15261)
!15266 = !DILocation(line: 328, column: 24, scope: !15261)
!15267 = !DILocation(line: 328, column: 15, scope: !15261)
!15268 = !DILocation(line: 328, column: 9, scope: !15261)
!15269 = !DILocation(line: 328, column: 45, scope: !15261)
!15270 = !DILocation(line: 328, column: 2, scope: !15261)
!15271 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !15272, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15274)
!15272 = !DISubroutineType(types: !15273)
!15273 = !{!422, !15068}
!15274 = !{!15275}
!15275 = !DILocalVariable(name: "list", arg: 1, scope: !15271, file: !367, line: 266, type: !15068)
!15276 = !DILocation(line: 0, scope: !15271)
!15277 = !DILocation(line: 268, column: 15, scope: !15271)
!15278 = !DILocation(line: 268, column: 20, scope: !15271)
!15279 = !DILocation(line: 268, column: 2, scope: !15271)
!15280 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !15281, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15283)
!15281 = !DISubroutineType(types: !15282)
!15282 = !{null, !2674}
!15283 = !{!15284, !15285, !15286}
!15284 = !DILocalVariable(name: "node", arg: 1, scope: !15280, file: !367, line: 496, type: !2674)
!15285 = !DILocalVariable(name: "prev", scope: !15280, file: !367, line: 498, type: !15127)
!15286 = !DILocalVariable(name: "next", scope: !15280, file: !367, line: 499, type: !15127)
!15287 = !DILocation(line: 0, scope: !15280)
!15288 = !DILocation(line: 498, column: 34, scope: !15280)
!15289 = !DILocation(line: 499, column: 34, scope: !15280)
!15290 = !DILocation(line: 501, column: 8, scope: !15280)
!15291 = !DILocation(line: 501, column: 13, scope: !15280)
!15292 = !DILocation(line: 502, column: 8, scope: !15280)
!15293 = !DILocation(line: 502, column: 13, scope: !15280)
!15294 = !DILocation(line: 503, column: 2, scope: !15280)
!15295 = !DILocation(line: 504, column: 1, scope: !15280)
!15296 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !15281, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15297)
!15297 = !{!15298}
!15298 = !DILocalVariable(name: "node", arg: 1, scope: !15296, file: !367, line: 211, type: !2674)
!15299 = !DILocation(line: 0, scope: !15296)
!15300 = !DILocation(line: 213, column: 8, scope: !15296)
!15301 = !DILocation(line: 213, column: 13, scope: !15296)
!15302 = !DILocation(line: 214, column: 8, scope: !15296)
!15303 = !DILocation(line: 214, column: 13, scope: !15296)
!15304 = !DILocation(line: 215, column: 1, scope: !15296)
!15305 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14142, file: !14142, line: 131, type: !15306, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15308)
!15306 = !DISubroutineType(types: !15307)
!15307 = !{!422, !2573, !113}
!15308 = !{!15309, !15310}
!15309 = !DILocalVariable(name: "thread", arg: 1, scope: !15305, file: !14142, line: 131, type: !2573)
!15310 = !DILocalVariable(name: "state", arg: 2, scope: !15305, file: !14142, line: 131, type: !113)
!15311 = !DILocation(line: 0, scope: !15305)
!15312 = !DILocation(line: 133, column: 23, scope: !15305)
!15313 = !DILocation(line: 133, column: 45, scope: !15305)
!15314 = !DILocation(line: 133, column: 2, scope: !15305)
!15315 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14142, file: !14142, line: 211, type: !15316, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15318)
!15316 = !DISubroutineType(types: !15317)
!15317 = !{!422, !108, !108}
!15318 = !{!15319, !15320}
!15319 = !DILocalVariable(name: "prio", arg: 1, scope: !15315, file: !14142, line: 211, type: !108)
!15320 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15315, file: !14142, line: 211, type: !108)
!15321 = !DILocation(line: 0, scope: !15315)
!15322 = !DILocation(line: 213, column: 9, scope: !15315)
!15323 = !DILocation(line: 213, column: 2, scope: !15315)
!15324 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14142, file: !14142, line: 83, type: !14983, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15325)
!15325 = !{!15326}
!15326 = !DILocalVariable(name: "thread", arg: 1, scope: !15324, file: !14142, line: 83, type: !2573)
!15327 = !DILocation(line: 0, scope: !15324)
!15328 = !DILocation(line: 89, column: 16, scope: !15324)
!15329 = !DILocation(line: 89, column: 2, scope: !15324)
!15330 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14142, file: !14142, line: 206, type: !15316, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15331)
!15331 = !{!15332, !15333}
!15332 = !DILocalVariable(name: "prio1", arg: 1, scope: !15330, file: !14142, line: 206, type: !108)
!15333 = !DILocalVariable(name: "prio2", arg: 2, scope: !15330, file: !14142, line: 206, type: !108)
!15334 = !DILocation(line: 0, scope: !15330)
!15335 = !DILocation(line: 208, column: 15, scope: !15330)
!15336 = !DILocation(line: 208, column: 2, scope: !15330)
!15337 = distinct !DISubprogram(name: "z_ready_thread", scope: !2678, file: !2678, line: 635, type: !14823, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15338)
!15338 = !{!15339, !15340, !15342}
!15339 = !DILocalVariable(name: "thread", arg: 1, scope: !15337, file: !2678, line: 635, type: !2573)
!15340 = !DILocalVariable(name: "__i", scope: !15341, file: !2678, line: 637, type: !14857)
!15341 = distinct !DILexicalBlock(scope: !15337, file: !2678, line: 637, column: 2)
!15342 = !DILocalVariable(name: "__key", scope: !15341, file: !2678, line: 637, type: !14857)
!15343 = !DILocation(line: 0, scope: !15337)
!15344 = !DILocation(line: 0, scope: !15341)
!15345 = !DILocation(line: 0, scope: !14865, inlinedAt: !15346)
!15346 = distinct !DILocation(line: 637, column: 2, scope: !15341)
!15347 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15346)
!15349 = !DILocation(line: 0, scope: !14874, inlinedAt: !15348)
!15350 = !DILocation(line: 639, column: 4, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15352, file: !2678, line: 638, column: 41)
!15352 = distinct !DILexicalBlock(scope: !15353, file: !2678, line: 638, column: 7)
!15353 = distinct !DILexicalBlock(scope: !15354, file: !2678, line: 637, column: 26)
!15354 = distinct !DILexicalBlock(scope: !15341, file: !2678, line: 637, column: 2)
!15355 = !DILocation(line: 0, scope: !14892, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 637, column: 2, scope: !15354)
!15357 = !DILocation(line: 0, scope: !14900, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15356)
!15359 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15358)
!15360 = !DILocation(line: 642, column: 1, scope: !15337)
!15361 = distinct !DISubprogram(name: "ready_thread", scope: !2678, file: !2678, line: 617, type: !14823, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15362)
!15362 = !{!15363}
!15363 = !DILocalVariable(name: "thread", arg: 1, scope: !15361, file: !2678, line: 617, type: !2573)
!15364 = !DILocation(line: 0, scope: !15361)
!15365 = !DILocation(line: 626, column: 7, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15361, file: !2678, line: 626, column: 6)
!15367 = !DILocation(line: 626, column: 34, scope: !15366)
!15368 = !DILocation(line: 626, column: 37, scope: !15366)
!15369 = !DILocation(line: 626, column: 6, scope: !15361)
!15370 = !DILocation(line: 0, scope: !15051, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 629, column: 3, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15366, file: !2678, line: 626, column: 64)
!15373 = !DILocation(line: 252, column: 15, scope: !15051, inlinedAt: !15371)
!15374 = !DILocation(line: 252, column: 28, scope: !15051, inlinedAt: !15371)
!15375 = !DILocation(line: 0, scope: !15058, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 254, column: 3, scope: !15062, inlinedAt: !15371)
!15377 = !DILocation(line: 0, scope: !15065, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 229, column: 2, scope: !15058, inlinedAt: !15376)
!15379 = !DILocation(line: 188, column: 2, scope: !15075, inlinedAt: !15378)
!15380 = !DILocation(line: 188, column: 2, scope: !15077, inlinedAt: !15378)
!15381 = !DILocation(line: 0, scope: !15075, inlinedAt: !15378)
!15382 = !DILocation(line: 189, column: 7, scope: !15080, inlinedAt: !15378)
!15383 = !DILocation(line: 189, column: 35, scope: !15080, inlinedAt: !15378)
!15384 = !DILocation(line: 189, column: 7, scope: !15081, inlinedAt: !15378)
!15385 = !DILocation(line: 191, column: 21, scope: !15085, inlinedAt: !15378)
!15386 = !DILocation(line: 190, column: 4, scope: !15085, inlinedAt: !15378)
!15387 = !DILocation(line: 192, column: 4, scope: !15085, inlinedAt: !15378)
!15388 = distinct !{!15388, !15379, !15389}
!15389 = !DILocation(line: 194, column: 2, scope: !15075, inlinedAt: !15378)
!15390 = !DILocation(line: 196, column: 37, scope: !15065, inlinedAt: !15378)
!15391 = !DILocation(line: 196, column: 2, scope: !15065, inlinedAt: !15378)
!15392 = !DILocation(line: 197, column: 1, scope: !15065, inlinedAt: !15378)
!15393 = !DILocation(line: 630, column: 3, scope: !15372)
!15394 = !DILocation(line: 632, column: 2, scope: !15372)
!15395 = !DILocation(line: 633, column: 1, scope: !15361)
!15396 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14142, file: !14142, line: 120, type: !14983, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15397)
!15397 = !{!15398}
!15398 = !DILocalVariable(name: "thread", arg: 1, scope: !15396, file: !14142, line: 120, type: !2573)
!15399 = !DILocation(line: 0, scope: !15396)
!15400 = !DILocation(line: 122, column: 12, scope: !15396)
!15401 = !DILocation(line: 122, column: 62, scope: !15396)
!15402 = !DILocation(line: 123, column: 4, scope: !15396)
!15403 = !DILocation(line: 122, column: 2, scope: !15396)
!15404 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2678, file: !2678, line: 644, type: !14823, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15405)
!15405 = !{!15406, !15407, !15409}
!15406 = !DILocalVariable(name: "thread", arg: 1, scope: !15404, file: !2678, line: 644, type: !2573)
!15407 = !DILocalVariable(name: "__i", scope: !15408, file: !2678, line: 646, type: !14857)
!15408 = distinct !DILexicalBlock(scope: !15404, file: !2678, line: 646, column: 2)
!15409 = !DILocalVariable(name: "__key", scope: !15408, file: !2678, line: 646, type: !14857)
!15410 = !DILocation(line: 0, scope: !15404)
!15411 = !DILocation(line: 0, scope: !15408)
!15412 = !DILocation(line: 0, scope: !14865, inlinedAt: !15413)
!15413 = distinct !DILocation(line: 646, column: 2, scope: !15408)
!15414 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15415)
!15415 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15413)
!15416 = !DILocation(line: 0, scope: !14874, inlinedAt: !15415)
!15417 = !DILocation(line: 647, column: 3, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15419, file: !2678, line: 646, column: 26)
!15419 = distinct !DILexicalBlock(scope: !15408, file: !2678, line: 646, column: 2)
!15420 = !DILocation(line: 0, scope: !14892, inlinedAt: !15421)
!15421 = distinct !DILocation(line: 646, column: 2, scope: !15419)
!15422 = !DILocation(line: 0, scope: !14900, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15421)
!15424 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15423)
!15425 = !DILocation(line: 649, column: 1, scope: !15404)
!15426 = distinct !DISubprogram(name: "z_sched_start", scope: !2678, file: !2678, line: 651, type: !14823, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15427)
!15427 = !{!15428, !15429}
!15428 = !DILocalVariable(name: "thread", arg: 1, scope: !15426, file: !2678, line: 651, type: !2573)
!15429 = !DILocalVariable(name: "key", scope: !15426, file: !2678, line: 653, type: !14857)
!15430 = !DILocation(line: 0, scope: !15426)
!15431 = !DILocation(line: 0, scope: !14865, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 653, column: 25, scope: !15426)
!15433 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15434)
!15434 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15432)
!15435 = !DILocation(line: 0, scope: !14874, inlinedAt: !15434)
!15436 = !DILocation(line: 655, column: 6, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !15426, file: !2678, line: 655, column: 6)
!15438 = !DILocation(line: 655, column: 6, scope: !15426)
!15439 = !DILocation(line: 0, scope: !14892, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 656, column: 3, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15437, file: !2678, line: 655, column: 36)
!15442 = !DILocation(line: 0, scope: !14900, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15440)
!15444 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15443)
!15445 = !DILocation(line: 657, column: 3, scope: !15441)
!15446 = !DILocation(line: 660, column: 2, scope: !15426)
!15447 = !DILocation(line: 661, column: 2, scope: !15426)
!15448 = !DILocation(line: 662, column: 2, scope: !15426)
!15449 = !DILocation(line: 663, column: 1, scope: !15426)
!15450 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14142, file: !14142, line: 126, type: !14983, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15451)
!15451 = !{!15452}
!15452 = !DILocalVariable(name: "thread", arg: 1, scope: !15450, file: !14142, line: 126, type: !2573)
!15453 = !DILocation(line: 0, scope: !15450)
!15454 = !DILocation(line: 128, column: 23, scope: !15450)
!15455 = !DILocation(line: 128, column: 36, scope: !15450)
!15456 = !DILocation(line: 128, column: 56, scope: !15450)
!15457 = !DILocation(line: 128, column: 2, scope: !15450)
!15458 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14142, file: !14142, line: 155, type: !14823, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15459)
!15459 = !{!15460}
!15460 = !DILocalVariable(name: "thread", arg: 1, scope: !15458, file: !14142, line: 155, type: !2573)
!15461 = !DILocation(line: 0, scope: !15458)
!15462 = !DILocation(line: 157, column: 15, scope: !15458)
!15463 = !DILocation(line: 157, column: 28, scope: !15458)
!15464 = !DILocation(line: 158, column: 1, scope: !15458)
!15465 = distinct !DISubprogram(name: "z_reschedule", scope: !2678, file: !2678, line: 967, type: !14893, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15466)
!15466 = !{!15467, !15468}
!15467 = !DILocalVariable(name: "lock", arg: 1, scope: !15465, file: !2678, line: 967, type: !14868)
!15468 = !DILocalVariable(name: "key", arg: 2, scope: !15465, file: !2678, line: 967, type: !14857)
!15469 = !DILocation(line: 0, scope: !15465)
!15470 = !DILocation(line: 969, column: 6, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15465, file: !2678, line: 969, column: 6)
!15472 = !DILocation(line: 969, column: 23, scope: !15471)
!15473 = !DILocation(line: 969, column: 26, scope: !15471)
!15474 = !DILocation(line: 969, column: 6, scope: !15465)
!15475 = !DILocalVariable(name: "key", arg: 2, scope: !15476, file: !14246, line: 193, type: !14857)
!15476 = distinct !DISubprogram(name: "z_swap", scope: !14246, file: !14246, line: 193, type: !15477, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15479)
!15477 = !DISubroutineType(types: !15478)
!15478 = !{!108, !14868, !14857}
!15479 = !{!15480, !15475}
!15480 = !DILocalVariable(name: "lock", arg: 1, scope: !15476, file: !14246, line: 193, type: !14868)
!15481 = !DILocation(line: 0, scope: !15476, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 970, column: 3, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15471, file: !2678, line: 969, column: 39)
!15484 = !DILocation(line: 196, column: 9, scope: !15476, inlinedAt: !15482)
!15485 = !DILocation(line: 971, column: 2, scope: !15483)
!15486 = !DILocation(line: 0, scope: !14892, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 972, column: 3, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15471, file: !2678, line: 971, column: 9)
!15489 = !DILocation(line: 0, scope: !14900, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15487)
!15491 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15490)
!15492 = !DILocation(line: 975, column: 1, scope: !15465)
!15493 = distinct !DISubprogram(name: "resched", scope: !2678, file: !2678, line: 940, type: !15494, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15496)
!15494 = !DISubroutineType(types: !15495)
!15495 = !{!422, !113}
!15496 = !{!15497}
!15497 = !DILocalVariable(name: "key", arg: 1, scope: !15493, file: !2678, line: 940, type: !113)
!15498 = !DILocation(line: 0, scope: !15493)
!15499 = !DILocalVariable(name: "key", arg: 1, scope: !15500, file: !4055, line: 112, type: !32)
!15500 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4055, file: !4055, line: 112, type: !15501, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15503)
!15501 = !DISubroutineType(types: !15502)
!15502 = !{!422, !32}
!15503 = !{!15499}
!15504 = !DILocation(line: 0, scope: !15500, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 946, column: 9, scope: !15493)
!15506 = !DILocation(line: 115, column: 13, scope: !15500, inlinedAt: !15505)
!15507 = !DILocation(line: 946, column: 32, scope: !15493)
!15508 = !DILocation(line: 1031, column: 3, scope: !15509, inlinedAt: !15512)
!15509 = distinct !DISubprogram(name: "__get_IPSR", scope: !7032, file: !7032, line: 1027, type: !8003, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15510)
!15510 = !{!15511}
!15511 = !DILocalVariable(name: "result", scope: !15509, file: !7032, line: 1029, type: !113)
!15512 = distinct !DILocation(line: 48, column: 10, scope: !15513, inlinedAt: !15514)
!15513 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8009, file: !8009, line: 46, type: !8010, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!15514 = distinct !DILocation(line: 946, column: 36, scope: !15493)
!15515 = !{i64 2504164}
!15516 = !DILocation(line: 0, scope: !15509, inlinedAt: !15512)
!15517 = !DILocation(line: 48, column: 9, scope: !15513, inlinedAt: !15514)
!15518 = !DILocation(line: 946, column: 2, scope: !15493)
!15519 = distinct !DISubprogram(name: "need_swap", scope: !2678, file: !2678, line: 953, type: !8010, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15520)
!15520 = !{!15521}
!15521 = !DILocalVariable(name: "new_thread", scope: !15519, file: !2678, line: 959, type: !2573)
!15522 = !DILocation(line: 962, column: 31, scope: !15519)
!15523 = !DILocation(line: 0, scope: !15519)
!15524 = !DILocation(line: 963, column: 23, scope: !15519)
!15525 = !DILocation(line: 963, column: 20, scope: !15519)
!15526 = !DILocation(line: 963, column: 2, scope: !15519)
!15527 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14246, file: !14246, line: 181, type: !7042, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15528)
!15528 = !{!15529, !15530}
!15529 = !DILocalVariable(name: "key", arg: 1, scope: !15527, file: !14246, line: 181, type: !32)
!15530 = !DILocalVariable(name: "ret", scope: !15527, file: !14246, line: 183, type: !108)
!15531 = !DILocation(line: 0, scope: !15527)
!15532 = !DILocation(line: 185, column: 8, scope: !15527)
!15533 = !DILocation(line: 186, column: 2, scope: !15527)
!15534 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2678, file: !2678, line: 665, type: !14823, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15535)
!15535 = !{!15536, !15537, !15539}
!15536 = !DILocalVariable(name: "thread", arg: 1, scope: !15534, file: !2678, line: 665, type: !2573)
!15537 = !DILocalVariable(name: "__i", scope: !15538, file: !2678, line: 671, type: !14857)
!15538 = distinct !DILexicalBlock(scope: !15534, file: !2678, line: 671, column: 2)
!15539 = !DILocalVariable(name: "__key", scope: !15538, file: !2678, line: 671, type: !14857)
!15540 = !DILocation(line: 0, scope: !15534)
!15541 = !DILocation(line: 669, column: 8, scope: !15534)
!15542 = !DILocation(line: 0, scope: !15538)
!15543 = !DILocation(line: 0, scope: !14865, inlinedAt: !15544)
!15544 = distinct !DILocation(line: 671, column: 2, scope: !15538)
!15545 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15546)
!15546 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15544)
!15547 = !DILocation(line: 0, scope: !14874, inlinedAt: !15546)
!15548 = !DILocation(line: 672, column: 7, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15550, file: !2678, line: 672, column: 7)
!15550 = distinct !DILexicalBlock(scope: !15551, file: !2678, line: 671, column: 26)
!15551 = distinct !DILexicalBlock(scope: !15538, file: !2678, line: 671, column: 2)
!15552 = !DILocation(line: 672, column: 7, scope: !15550)
!15553 = !DILocation(line: 0, scope: !15034, inlinedAt: !15554)
!15554 = distinct !DILocation(line: 673, column: 4, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15549, file: !2678, line: 672, column: 35)
!15556 = !DILocation(line: 266, column: 15, scope: !15034, inlinedAt: !15554)
!15557 = !DILocation(line: 266, column: 28, scope: !15034, inlinedAt: !15554)
!15558 = !DILocation(line: 0, scope: !15042, inlinedAt: !15559)
!15559 = distinct !DILocation(line: 268, column: 3, scope: !15046, inlinedAt: !15554)
!15560 = !DILocation(line: 234, column: 2, scope: !15042, inlinedAt: !15559)
!15561 = !DILocation(line: 674, column: 3, scope: !15555)
!15562 = !DILocation(line: 675, column: 3, scope: !15550)
!15563 = !DILocation(line: 676, column: 26, scope: !15550)
!15564 = !DILocation(line: 676, column: 23, scope: !15550)
!15565 = !DILocation(line: 676, column: 3, scope: !15550)
!15566 = !DILocation(line: 0, scope: !14892, inlinedAt: !15567)
!15567 = distinct !DILocation(line: 671, column: 2, scope: !15551)
!15568 = !DILocation(line: 0, scope: !14900, inlinedAt: !15569)
!15569 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15567)
!15570 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15569)
!15571 = !DILocation(line: 679, column: 16, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15534, file: !2678, line: 679, column: 6)
!15573 = !DILocation(line: 679, column: 13, scope: !15572)
!15574 = !DILocation(line: 679, column: 6, scope: !15534)
!15575 = !DILocation(line: 680, column: 3, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15572, file: !2678, line: 679, column: 26)
!15577 = !DILocation(line: 681, column: 2, scope: !15576)
!15578 = !DILocation(line: 684, column: 1, scope: !15534)
!15579 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14536, file: !14536, line: 52, type: !14841, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15580)
!15580 = !{!15581}
!15581 = !DILocalVariable(name: "thread", arg: 1, scope: !15579, file: !14536, line: 52, type: !2573)
!15582 = !DILocation(line: 0, scope: !15579)
!15583 = !DILocation(line: 54, column: 39, scope: !15579)
!15584 = !DILocation(line: 54, column: 9, scope: !15579)
!15585 = !DILocation(line: 54, column: 2, scope: !15579)
!15586 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14142, file: !14142, line: 141, type: !14823, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15587)
!15587 = !{!15588}
!15588 = !DILocalVariable(name: "thread", arg: 1, scope: !15586, file: !14142, line: 141, type: !2573)
!15589 = !DILocation(line: 0, scope: !15586)
!15590 = !DILocation(line: 143, column: 15, scope: !15586)
!15591 = !DILocation(line: 143, column: 28, scope: !15586)
!15592 = !DILocation(line: 146, column: 1, scope: !15586)
!15593 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14142, file: !14142, line: 73, type: !3381, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!15594 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15595)
!15595 = distinct !DILocation(line: 75, column: 30, scope: !15593)
!15596 = !DILocation(line: 0, scope: !14874, inlinedAt: !15595)
!15597 = !DILocation(line: 75, column: 9, scope: !15593)
!15598 = !DILocation(line: 76, column: 1, scope: !15593)
!15599 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2678, file: !2678, line: 977, type: !6721, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15600)
!15600 = !{!15601}
!15601 = !DILocalVariable(name: "key", arg: 1, scope: !15599, file: !2678, line: 977, type: !113)
!15602 = !DILocation(line: 0, scope: !15599)
!15603 = !DILocation(line: 979, column: 6, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15599, file: !2678, line: 979, column: 6)
!15605 = !DILocation(line: 979, column: 6, scope: !15599)
!15606 = !DILocation(line: 980, column: 3, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15604, file: !2678, line: 979, column: 20)
!15608 = !DILocation(line: 981, column: 2, scope: !15607)
!15609 = !DILocation(line: 0, scope: !14900, inlinedAt: !15610)
!15610 = distinct !DILocation(line: 982, column: 3, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15604, file: !2678, line: 981, column: 9)
!15612 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15610)
!15613 = !DILocation(line: 985, column: 1, scope: !15599)
!15614 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2678, file: !2678, line: 695, type: !14823, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15615)
!15615 = !{!15616, !15617}
!15616 = !DILocalVariable(name: "thread", arg: 1, scope: !15614, file: !2678, line: 695, type: !2573)
!15617 = !DILocalVariable(name: "key", scope: !15614, file: !2678, line: 699, type: !14857)
!15618 = !DILocation(line: 0, scope: !15614)
!15619 = !DILocation(line: 0, scope: !14865, inlinedAt: !15620)
!15620 = distinct !DILocation(line: 699, column: 25, scope: !15614)
!15621 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15622)
!15622 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15620)
!15623 = !DILocation(line: 0, scope: !14874, inlinedAt: !15622)
!15624 = !DILocation(line: 702, column: 7, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15614, file: !2678, line: 702, column: 6)
!15626 = !DILocation(line: 702, column: 6, scope: !15614)
!15627 = !DILocation(line: 0, scope: !14892, inlinedAt: !15628)
!15628 = distinct !DILocation(line: 703, column: 3, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15625, file: !2678, line: 702, column: 38)
!15630 = !DILocation(line: 0, scope: !14900, inlinedAt: !15631)
!15631 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15628)
!15632 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15631)
!15633 = !DILocation(line: 704, column: 3, scope: !15629)
!15634 = !DILocation(line: 707, column: 2, scope: !15614)
!15635 = !DILocation(line: 708, column: 2, scope: !15614)
!15636 = !DILocation(line: 710, column: 2, scope: !15614)
!15637 = !DILocation(line: 713, column: 1, scope: !15614)
!15638 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14142, file: !14142, line: 96, type: !14983, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15639)
!15639 = !{!15640}
!15640 = !DILocalVariable(name: "thread", arg: 1, scope: !15638, file: !14142, line: 96, type: !2573)
!15641 = !DILocation(line: 0, scope: !15638)
!15642 = !DILocation(line: 98, column: 23, scope: !15638)
!15643 = !DILocation(line: 98, column: 36, scope: !15638)
!15644 = !DILocation(line: 98, column: 57, scope: !15638)
!15645 = !DILocation(line: 98, column: 2, scope: !15638)
!15646 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14142, file: !14142, line: 148, type: !14823, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15647)
!15647 = !{!15648}
!15648 = !DILocalVariable(name: "thread", arg: 1, scope: !15646, file: !14142, line: 148, type: !2573)
!15649 = !DILocation(line: 0, scope: !15646)
!15650 = !DILocation(line: 150, column: 15, scope: !15646)
!15651 = !DILocation(line: 150, column: 28, scope: !15646)
!15652 = !DILocation(line: 153, column: 1, scope: !15646)
!15653 = distinct !DISubprogram(name: "z_pend_thread", scope: !2678, file: !2678, line: 770, type: !15654, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15660)
!15654 = !DISubroutineType(types: !15655)
!15655 = !{null, !2573, !2604, !15656}
!15656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !15657)
!15657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !15658)
!15658 = !{!15659}
!15659 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15657, file: !110, line: 66, baseType: !109, size: 64)
!15660 = !{!15661, !15662, !15663, !15664, !15666}
!15661 = !DILocalVariable(name: "thread", arg: 1, scope: !15653, file: !2678, line: 770, type: !2573)
!15662 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15653, file: !2678, line: 770, type: !2604)
!15663 = !DILocalVariable(name: "timeout", arg: 3, scope: !15653, file: !2678, line: 771, type: !15656)
!15664 = !DILocalVariable(name: "__i", scope: !15665, file: !2678, line: 774, type: !14857)
!15665 = distinct !DILexicalBlock(scope: !15653, file: !2678, line: 774, column: 2)
!15666 = !DILocalVariable(name: "__key", scope: !15665, file: !2678, line: 774, type: !14857)
!15667 = !DILocation(line: 0, scope: !15653)
!15668 = !DILocation(line: 0, scope: !15665)
!15669 = !DILocation(line: 0, scope: !14865, inlinedAt: !15670)
!15670 = distinct !DILocation(line: 774, column: 2, scope: !15665)
!15671 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15672)
!15672 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15670)
!15673 = !DILocation(line: 0, scope: !14874, inlinedAt: !15672)
!15674 = !DILocation(line: 775, column: 3, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15676, file: !2678, line: 774, column: 26)
!15676 = distinct !DILexicalBlock(scope: !15665, file: !2678, line: 774, column: 2)
!15677 = !DILocation(line: 0, scope: !14892, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 774, column: 2, scope: !15676)
!15679 = !DILocation(line: 0, scope: !14900, inlinedAt: !15680)
!15680 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15678)
!15681 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15680)
!15682 = !DILocation(line: 777, column: 1, scope: !15653)
!15683 = distinct !DISubprogram(name: "pend_locked", scope: !2678, file: !2678, line: 760, type: !15654, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15684)
!15684 = !{!15685, !15686, !15687}
!15685 = !DILocalVariable(name: "thread", arg: 1, scope: !15683, file: !2678, line: 760, type: !2573)
!15686 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15683, file: !2678, line: 760, type: !2604)
!15687 = !DILocalVariable(name: "timeout", arg: 3, scope: !15683, file: !2678, line: 761, type: !15656)
!15688 = !DILocation(line: 0, scope: !15683)
!15689 = !DILocation(line: 766, column: 2, scope: !15683)
!15690 = !DILocation(line: 767, column: 2, scope: !15683)
!15691 = !DILocation(line: 768, column: 1, scope: !15683)
!15692 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2678, file: !2678, line: 740, type: !15693, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15695)
!15693 = !DISubroutineType(types: !15694)
!15694 = !{null, !2573, !2604}
!15695 = !{!15696, !15697}
!15696 = !DILocalVariable(name: "thread", arg: 1, scope: !15692, file: !2678, line: 740, type: !2573)
!15697 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15692, file: !2678, line: 740, type: !2604)
!15698 = !DILocation(line: 0, scope: !15692)
!15699 = !DILocation(line: 742, column: 2, scope: !15692)
!15700 = !DILocation(line: 743, column: 2, scope: !15692)
!15701 = !DILocation(line: 747, column: 13, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15692, file: !2678, line: 747, column: 6)
!15703 = !DILocation(line: 747, column: 6, scope: !15692)
!15704 = !DILocation(line: 748, column: 16, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15702, file: !2678, line: 747, column: 22)
!15706 = !DILocation(line: 748, column: 26, scope: !15705)
!15707 = !DILocation(line: 749, column: 28, scope: !15705)
!15708 = !DILocation(line: 0, scope: !15065, inlinedAt: !15709)
!15709 = distinct !DILocation(line: 749, column: 3, scope: !15705)
!15710 = !DILocation(line: 188, column: 2, scope: !15075, inlinedAt: !15709)
!15711 = !DILocation(line: 188, column: 2, scope: !15077, inlinedAt: !15709)
!15712 = !DILocation(line: 0, scope: !15075, inlinedAt: !15709)
!15713 = !DILocation(line: 189, column: 7, scope: !15080, inlinedAt: !15709)
!15714 = !DILocation(line: 189, column: 35, scope: !15080, inlinedAt: !15709)
!15715 = !DILocation(line: 189, column: 7, scope: !15081, inlinedAt: !15709)
!15716 = !DILocation(line: 191, column: 21, scope: !15085, inlinedAt: !15709)
!15717 = !DILocation(line: 190, column: 4, scope: !15085, inlinedAt: !15709)
!15718 = !DILocation(line: 192, column: 4, scope: !15085, inlinedAt: !15709)
!15719 = distinct !{!15719, !15710, !15720}
!15720 = !DILocation(line: 194, column: 2, scope: !15075, inlinedAt: !15709)
!15721 = !DILocation(line: 196, column: 37, scope: !15065, inlinedAt: !15709)
!15722 = !DILocation(line: 196, column: 2, scope: !15065, inlinedAt: !15709)
!15723 = !DILocation(line: 197, column: 1, scope: !15065, inlinedAt: !15709)
!15724 = !DILocation(line: 751, column: 1, scope: !15692)
!15725 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2678, file: !2678, line: 753, type: !15726, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15728)
!15726 = !DISubroutineType(types: !15727)
!15727 = !{null, !2573, !15656}
!15728 = !{!15729, !15730}
!15729 = !DILocalVariable(name: "thread", arg: 1, scope: !15725, file: !2678, line: 753, type: !2573)
!15730 = !DILocalVariable(name: "timeout", arg: 2, scope: !15725, file: !2678, line: 753, type: !15656)
!15731 = !DILocation(line: 0, scope: !15725)
!15732 = !DILocation(line: 755, column: 7, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15725, file: !2678, line: 755, column: 6)
!15734 = !DILocation(line: 755, column: 6, scope: !15725)
!15735 = !DILocation(line: 756, column: 3, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15733, file: !2678, line: 755, column: 41)
!15737 = !DILocation(line: 757, column: 2, scope: !15736)
!15738 = !DILocation(line: 758, column: 1, scope: !15725)
!15739 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14536, file: !14536, line: 47, type: !15726, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15740)
!15740 = !{!15741, !15742}
!15741 = !DILocalVariable(name: "thread", arg: 1, scope: !15739, file: !14536, line: 47, type: !2573)
!15742 = !DILocalVariable(name: "ticks", arg: 2, scope: !15739, file: !14536, line: 47, type: !15656)
!15743 = !DILocation(line: 0, scope: !15739)
!15744 = !DILocation(line: 49, column: 30, scope: !15739)
!15745 = !DILocation(line: 49, column: 2, scope: !15739)
!15746 = !DILocation(line: 50, column: 1, scope: !15739)
!15747 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2678, file: !2678, line: 795, type: !2630, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15748)
!15748 = !{!15749, !15750, !15751, !15753, !15754}
!15749 = !DILocalVariable(name: "timeout", arg: 1, scope: !15747, file: !2678, line: 795, type: !2632)
!15750 = !DILocalVariable(name: "thread", scope: !15747, file: !2678, line: 797, type: !2573)
!15751 = !DILocalVariable(name: "__i", scope: !15752, file: !2678, line: 800, type: !14857)
!15752 = distinct !DILexicalBlock(scope: !15747, file: !2678, line: 800, column: 2)
!15753 = !DILocalVariable(name: "__key", scope: !15752, file: !2678, line: 800, type: !14857)
!15754 = !DILocalVariable(name: "killed", scope: !15755, file: !2678, line: 801, type: !422)
!15755 = distinct !DILexicalBlock(scope: !15756, file: !2678, line: 800, column: 26)
!15756 = distinct !DILexicalBlock(scope: !15752, file: !2678, line: 800, column: 2)
!15757 = !DILocation(line: 0, scope: !15747)
!15758 = !DILocation(line: 797, column: 28, scope: !15747)
!15759 = !DILocation(line: 0, scope: !15752)
!15760 = !DILocation(line: 0, scope: !14865, inlinedAt: !15761)
!15761 = distinct !DILocation(line: 800, column: 2, scope: !15752)
!15762 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15763)
!15763 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15761)
!15764 = !DILocation(line: 0, scope: !14874, inlinedAt: !15763)
!15765 = !DILocation(line: 801, column: 27, scope: !15755)
!15766 = !DILocation(line: 801, column: 32, scope: !15755)
!15767 = !DILocation(line: 801, column: 61, scope: !15755)
!15768 = !DILocation(line: 0, scope: !15755)
!15769 = !DILocation(line: 804, column: 7, scope: !15755)
!15770 = !DILocation(line: 805, column: 21, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15772, file: !2678, line: 805, column: 8)
!15772 = distinct !DILexicalBlock(scope: !15773, file: !2678, line: 804, column: 16)
!15773 = distinct !DILexicalBlock(scope: !15755, file: !2678, line: 804, column: 7)
!15774 = !DILocation(line: 805, column: 31, scope: !15771)
!15775 = !DILocation(line: 805, column: 8, scope: !15772)
!15776 = !DILocation(line: 806, column: 5, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15771, file: !2678, line: 805, column: 40)
!15778 = !DILocation(line: 807, column: 4, scope: !15777)
!15779 = !DILocation(line: 808, column: 4, scope: !15772)
!15780 = !DILocation(line: 809, column: 4, scope: !15772)
!15781 = !DILocation(line: 810, column: 4, scope: !15772)
!15782 = !DILocation(line: 811, column: 3, scope: !15772)
!15783 = !DILocation(line: 0, scope: !14892, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 800, column: 2, scope: !15756)
!15785 = !DILocation(line: 0, scope: !14900, inlinedAt: !15786)
!15786 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15784)
!15787 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15786)
!15788 = !DILocation(line: 813, column: 1, scope: !15747)
!15789 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2678, file: !2678, line: 779, type: !14823, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15790)
!15790 = !{!15791}
!15791 = !DILocalVariable(name: "thread", arg: 1, scope: !15789, file: !2678, line: 779, type: !2573)
!15792 = !DILocation(line: 0, scope: !15789)
!15793 = !DILocation(line: 781, column: 2, scope: !15789)
!15794 = !DILocation(line: 782, column: 2, scope: !15789)
!15795 = !DILocation(line: 783, column: 15, scope: !15789)
!15796 = !DILocation(line: 783, column: 25, scope: !15789)
!15797 = !DILocation(line: 784, column: 1, scope: !15789)
!15798 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14142, file: !14142, line: 165, type: !14823, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15799)
!15799 = !{!15800}
!15800 = !DILocalVariable(name: "thread", arg: 1, scope: !15798, file: !14142, line: 165, type: !2573)
!15801 = !DILocation(line: 0, scope: !15798)
!15802 = !DILocation(line: 167, column: 15, scope: !15798)
!15803 = !DILocation(line: 167, column: 28, scope: !15798)
!15804 = !DILocation(line: 168, column: 1, scope: !15798)
!15805 = distinct !DISubprogram(name: "unready_thread", scope: !2678, file: !2678, line: 731, type: !14823, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15806)
!15806 = !{!15807}
!15807 = !DILocalVariable(name: "thread", arg: 1, scope: !15805, file: !2678, line: 731, type: !2573)
!15808 = !DILocation(line: 0, scope: !15805)
!15809 = !DILocation(line: 733, column: 6, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15805, file: !2678, line: 733, column: 6)
!15811 = !DILocation(line: 733, column: 6, scope: !15805)
!15812 = !DILocation(line: 0, scope: !15034, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 734, column: 3, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15810, file: !2678, line: 733, column: 34)
!15815 = !DILocation(line: 266, column: 15, scope: !15034, inlinedAt: !15813)
!15816 = !DILocation(line: 266, column: 28, scope: !15034, inlinedAt: !15813)
!15817 = !DILocation(line: 0, scope: !15042, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 268, column: 3, scope: !15046, inlinedAt: !15813)
!15819 = !DILocation(line: 234, column: 2, scope: !15042, inlinedAt: !15818)
!15820 = !DILocation(line: 735, column: 2, scope: !15814)
!15821 = !DILocation(line: 736, column: 25, scope: !15805)
!15822 = !DILocation(line: 736, column: 22, scope: !15805)
!15823 = !DILocation(line: 736, column: 2, scope: !15805)
!15824 = !DILocation(line: 737, column: 1, scope: !15805)
!15825 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14142, file: !14142, line: 160, type: !14823, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15826)
!15826 = !{!15827}
!15827 = !DILocalVariable(name: "thread", arg: 1, scope: !15825, file: !14142, line: 160, type: !2573)
!15828 = !DILocation(line: 0, scope: !15825)
!15829 = !DILocation(line: 162, column: 15, scope: !15825)
!15830 = !DILocation(line: 162, column: 28, scope: !15825)
!15831 = !DILocation(line: 163, column: 1, scope: !15825)
!15832 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2678, file: !2678, line: 786, type: !14823, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15833)
!15833 = !{!15834, !15835, !15837}
!15834 = !DILocalVariable(name: "thread", arg: 1, scope: !15832, file: !2678, line: 786, type: !2573)
!15835 = !DILocalVariable(name: "__i", scope: !15836, file: !2678, line: 788, type: !14857)
!15836 = distinct !DILexicalBlock(scope: !15832, file: !2678, line: 788, column: 2)
!15837 = !DILocalVariable(name: "__key", scope: !15836, file: !2678, line: 788, type: !14857)
!15838 = !DILocation(line: 0, scope: !15832)
!15839 = !DILocation(line: 0, scope: !15836)
!15840 = !DILocation(line: 0, scope: !14865, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 788, column: 2, scope: !15836)
!15842 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15841)
!15844 = !DILocation(line: 0, scope: !14874, inlinedAt: !15843)
!15845 = !DILocation(line: 789, column: 3, scope: !15846)
!15846 = distinct !DILexicalBlock(scope: !15847, file: !2678, line: 788, column: 26)
!15847 = distinct !DILexicalBlock(scope: !15836, file: !2678, line: 788, column: 2)
!15848 = !DILocation(line: 0, scope: !14892, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 788, column: 2, scope: !15847)
!15850 = !DILocation(line: 0, scope: !14900, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15849)
!15852 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15851)
!15853 = !DILocation(line: 791, column: 1, scope: !15832)
!15854 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2678, file: !2678, line: 816, type: !15855, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15857)
!15855 = !DISubroutineType(types: !15856)
!15856 = !{!108, !113, !2604, !15656}
!15857 = !{!15858, !15859, !15860, !15861, !15862, !15864}
!15858 = !DILocalVariable(name: "key", arg: 1, scope: !15854, file: !2678, line: 816, type: !113)
!15859 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15854, file: !2678, line: 816, type: !2604)
!15860 = !DILocalVariable(name: "timeout", arg: 3, scope: !15854, file: !2678, line: 816, type: !15656)
!15861 = !DILocalVariable(name: "ret", scope: !15854, file: !2678, line: 828, type: !108)
!15862 = !DILocalVariable(name: "__i", scope: !15863, file: !2678, line: 829, type: !14857)
!15863 = distinct !DILexicalBlock(scope: !15854, file: !2678, line: 829, column: 2)
!15864 = !DILocalVariable(name: "__key", scope: !15863, file: !2678, line: 829, type: !14857)
!15865 = !DILocation(line: 0, scope: !15854)
!15866 = !DILocation(line: 823, column: 14, scope: !15854)
!15867 = !DILocation(line: 823, column: 2, scope: !15854)
!15868 = !DILocation(line: 826, column: 20, scope: !15854)
!15869 = !DILocation(line: 826, column: 18, scope: !15854)
!15870 = !DILocation(line: 828, column: 12, scope: !15854)
!15871 = !DILocation(line: 0, scope: !15863)
!15872 = !DILocation(line: 0, scope: !14865, inlinedAt: !15873)
!15873 = distinct !DILocation(line: 829, column: 2, scope: !15863)
!15874 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15873)
!15876 = !DILocation(line: 0, scope: !14874, inlinedAt: !15875)
!15877 = !DILocation(line: 830, column: 7, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15879, file: !2678, line: 830, column: 7)
!15879 = distinct !DILexicalBlock(scope: !15880, file: !2678, line: 829, column: 26)
!15880 = distinct !DILexicalBlock(scope: !15863, file: !2678, line: 829, column: 2)
!15881 = !DILocation(line: 830, column: 26, scope: !15878)
!15882 = !DILocation(line: 830, column: 23, scope: !15878)
!15883 = !DILocation(line: 830, column: 7, scope: !15879)
!15884 = !DILocation(line: 831, column: 20, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15878, file: !2678, line: 830, column: 36)
!15886 = !DILocation(line: 832, column: 3, scope: !15885)
!15887 = !DILocation(line: 0, scope: !14892, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 829, column: 2, scope: !15880)
!15889 = !DILocation(line: 0, scope: !14900, inlinedAt: !15890)
!15890 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15888)
!15891 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15890)
!15892 = !DILocation(line: 834, column: 2, scope: !15854)
!15893 = distinct !DISubprogram(name: "z_pend_curr", scope: !2678, file: !2678, line: 840, type: !15894, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15896)
!15894 = !DISubroutineType(types: !15895)
!15895 = !{!108, !14868, !14857, !2604, !15656}
!15896 = !{!15897, !15898, !15899, !15900}
!15897 = !DILocalVariable(name: "lock", arg: 1, scope: !15893, file: !2678, line: 840, type: !14868)
!15898 = !DILocalVariable(name: "key", arg: 2, scope: !15893, file: !2678, line: 840, type: !14857)
!15899 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15893, file: !2678, line: 841, type: !2604)
!15900 = !DILocalVariable(name: "timeout", arg: 4, scope: !15893, file: !2678, line: 841, type: !15656)
!15901 = !DILocation(line: 0, scope: !15893)
!15902 = !DILocation(line: 844, column: 20, scope: !15893)
!15903 = !DILocation(line: 844, column: 18, scope: !15893)
!15904 = !DILocation(line: 0, scope: !14865, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 856, column: 9, scope: !15893)
!15906 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15907)
!15907 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15905)
!15908 = !DILocation(line: 0, scope: !14874, inlinedAt: !15907)
!15909 = !DILocation(line: 857, column: 14, scope: !15893)
!15910 = !DILocation(line: 857, column: 2, scope: !15893)
!15911 = !DILocation(line: 0, scope: !15476, inlinedAt: !15912)
!15912 = distinct !DILocation(line: 859, column: 9, scope: !15893)
!15913 = !DILocation(line: 196, column: 9, scope: !15476, inlinedAt: !15912)
!15914 = !DILocation(line: 859, column: 2, scope: !15893)
!15915 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2678, file: !2678, line: 862, type: !15916, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15918)
!15916 = !DISubroutineType(types: !15917)
!15917 = !{!2573, !2604}
!15918 = !{!15919, !15920, !15921, !15923}
!15919 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15915, file: !2678, line: 862, type: !2604)
!15920 = !DILocalVariable(name: "thread", scope: !15915, file: !2678, line: 864, type: !2573)
!15921 = !DILocalVariable(name: "__i", scope: !15922, file: !2678, line: 866, type: !14857)
!15922 = distinct !DILexicalBlock(scope: !15915, file: !2678, line: 866, column: 2)
!15923 = !DILocalVariable(name: "__key", scope: !15922, file: !2678, line: 866, type: !14857)
!15924 = !DILocation(line: 0, scope: !15915)
!15925 = !DILocation(line: 0, scope: !15922)
!15926 = !DILocation(line: 0, scope: !14865, inlinedAt: !15927)
!15927 = distinct !DILocation(line: 866, column: 2, scope: !15922)
!15928 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15929)
!15929 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15927)
!15930 = !DILocation(line: 0, scope: !14874, inlinedAt: !15929)
!15931 = !DILocation(line: 867, column: 12, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15933, file: !2678, line: 866, column: 26)
!15933 = distinct !DILexicalBlock(scope: !15922, file: !2678, line: 866, column: 2)
!15934 = !DILocation(line: 869, column: 14, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15932, file: !2678, line: 869, column: 7)
!15936 = !DILocation(line: 869, column: 7, scope: !15932)
!15937 = !DILocation(line: 870, column: 4, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15935, file: !2678, line: 869, column: 23)
!15939 = !DILocation(line: 871, column: 3, scope: !15938)
!15940 = !DILocation(line: 0, scope: !14892, inlinedAt: !15941)
!15941 = distinct !DILocation(line: 866, column: 2, scope: !15933)
!15942 = !DILocation(line: 0, scope: !14900, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15941)
!15944 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15943)
!15945 = !DILocation(line: 874, column: 2, scope: !15915)
!15946 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2678, file: !2678, line: 877, type: !15916, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15947)
!15947 = !{!15948, !15949, !15950, !15952}
!15948 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15946, file: !2678, line: 877, type: !2604)
!15949 = !DILocalVariable(name: "thread", scope: !15946, file: !2678, line: 879, type: !2573)
!15950 = !DILocalVariable(name: "__i", scope: !15951, file: !2678, line: 881, type: !14857)
!15951 = distinct !DILexicalBlock(scope: !15946, file: !2678, line: 881, column: 2)
!15952 = !DILocalVariable(name: "__key", scope: !15951, file: !2678, line: 881, type: !14857)
!15953 = !DILocation(line: 0, scope: !15946)
!15954 = !DILocation(line: 0, scope: !15951)
!15955 = !DILocation(line: 0, scope: !14865, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 881, column: 2, scope: !15951)
!15957 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15958)
!15958 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15956)
!15959 = !DILocation(line: 0, scope: !14874, inlinedAt: !15958)
!15960 = !DILocation(line: 882, column: 12, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15962, file: !2678, line: 881, column: 26)
!15962 = distinct !DILexicalBlock(scope: !15951, file: !2678, line: 881, column: 2)
!15963 = !DILocation(line: 884, column: 14, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15961, file: !2678, line: 884, column: 7)
!15965 = !DILocation(line: 884, column: 7, scope: !15961)
!15966 = !DILocation(line: 885, column: 4, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15964, file: !2678, line: 884, column: 23)
!15968 = !DILocation(line: 886, column: 10, scope: !15967)
!15969 = !DILocation(line: 887, column: 3, scope: !15967)
!15970 = !DILocation(line: 0, scope: !14892, inlinedAt: !15971)
!15971 = distinct !DILocation(line: 881, column: 2, scope: !15962)
!15972 = !DILocation(line: 0, scope: !14900, inlinedAt: !15973)
!15973 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15971)
!15974 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15973)
!15975 = !DILocation(line: 890, column: 2, scope: !15946)
!15976 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2678, file: !2678, line: 893, type: !14823, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15977)
!15977 = !{!15978}
!15978 = !DILocalVariable(name: "thread", arg: 1, scope: !15976, file: !2678, line: 893, type: !2573)
!15979 = !DILocation(line: 0, scope: !15976)
!15980 = !DILocation(line: 0, scope: !15832, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 895, column: 2, scope: !15976)
!15982 = !DILocation(line: 0, scope: !15836, inlinedAt: !15981)
!15983 = !DILocation(line: 0, scope: !14865, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 788, column: 2, scope: !15836, inlinedAt: !15981)
!15985 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !15986)
!15986 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !15984)
!15987 = !DILocation(line: 0, scope: !14874, inlinedAt: !15986)
!15988 = !DILocation(line: 789, column: 3, scope: !15846, inlinedAt: !15981)
!15989 = !DILocation(line: 0, scope: !14892, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 788, column: 2, scope: !15847, inlinedAt: !15981)
!15991 = !DILocation(line: 0, scope: !14900, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !15990)
!15993 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !15992)
!15994 = !DILocation(line: 896, column: 8, scope: !15976)
!15995 = !DILocation(line: 897, column: 1, scope: !15976)
!15996 = distinct !DISubprogram(name: "z_set_prio", scope: !2678, file: !2678, line: 902, type: !15185, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !15997)
!15997 = !{!15998, !15999, !16000, !16001, !16003}
!15998 = !DILocalVariable(name: "thread", arg: 1, scope: !15996, file: !2678, line: 902, type: !2573)
!15999 = !DILocalVariable(name: "prio", arg: 2, scope: !15996, file: !2678, line: 902, type: !108)
!16000 = !DILocalVariable(name: "need_sched", scope: !15996, file: !2678, line: 904, type: !422)
!16001 = !DILocalVariable(name: "__i", scope: !16002, file: !2678, line: 906, type: !14857)
!16002 = distinct !DILexicalBlock(scope: !15996, file: !2678, line: 906, column: 2)
!16003 = !DILocalVariable(name: "__key", scope: !16002, file: !2678, line: 906, type: !14857)
!16004 = !DILocation(line: 0, scope: !15996)
!16005 = !DILocation(line: 0, scope: !16002)
!16006 = !DILocation(line: 0, scope: !14865, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 906, column: 2, scope: !16002)
!16008 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !16009)
!16009 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !16007)
!16010 = !DILocation(line: 0, scope: !14874, inlinedAt: !16009)
!16011 = !DILocation(line: 907, column: 16, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16013, file: !2678, line: 906, column: 26)
!16013 = distinct !DILexicalBlock(scope: !16002, file: !2678, line: 906, column: 2)
!16014 = !DILocation(line: 909, column: 7, scope: !16012)
!16015 = !DILocation(line: 0, scope: !15034, inlinedAt: !16016)
!16016 = distinct !DILocation(line: 912, column: 5, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16018, file: !2678, line: 911, column: 63)
!16018 = distinct !DILexicalBlock(scope: !16019, file: !2678, line: 911, column: 8)
!16019 = distinct !DILexicalBlock(scope: !16020, file: !2678, line: 909, column: 19)
!16020 = distinct !DILexicalBlock(scope: !16012, file: !2678, line: 909, column: 7)
!16021 = !DILocation(line: 266, column: 28, scope: !15034, inlinedAt: !16016)
!16022 = !DILocation(line: 0, scope: !15042, inlinedAt: !16023)
!16023 = distinct !DILocation(line: 268, column: 3, scope: !15046, inlinedAt: !16016)
!16024 = !DILocation(line: 234, column: 2, scope: !15042, inlinedAt: !16023)
!16025 = !DILocation(line: 913, column: 23, scope: !16017)
!16026 = !DILocation(line: 0, scope: !15051, inlinedAt: !16027)
!16027 = distinct !DILocation(line: 914, column: 5, scope: !16017)
!16028 = !DILocation(line: 252, column: 28, scope: !15051, inlinedAt: !16027)
!16029 = !DILocation(line: 0, scope: !15058, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 254, column: 3, scope: !15062, inlinedAt: !16027)
!16031 = !DILocation(line: 0, scope: !15065, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 229, column: 2, scope: !15058, inlinedAt: !16030)
!16033 = !DILocation(line: 188, column: 2, scope: !15075, inlinedAt: !16032)
!16034 = !DILocation(line: 188, column: 2, scope: !15077, inlinedAt: !16032)
!16035 = !DILocation(line: 0, scope: !15075, inlinedAt: !16032)
!16036 = !DILocation(line: 189, column: 7, scope: !15080, inlinedAt: !16032)
!16037 = !DILocation(line: 189, column: 35, scope: !15080, inlinedAt: !16032)
!16038 = !DILocation(line: 189, column: 7, scope: !15081, inlinedAt: !16032)
!16039 = !DILocation(line: 190, column: 4, scope: !15085, inlinedAt: !16032)
!16040 = !DILocation(line: 192, column: 4, scope: !15085, inlinedAt: !16032)
!16041 = distinct !{!16041, !16033, !16042}
!16042 = !DILocation(line: 194, column: 2, scope: !15075, inlinedAt: !16032)
!16043 = !DILocation(line: 196, column: 2, scope: !15065, inlinedAt: !16032)
!16044 = !DILocation(line: 197, column: 1, scope: !15065, inlinedAt: !16032)
!16045 = !DILocation(line: 918, column: 4, scope: !16019)
!16046 = !DILocation(line: 919, column: 3, scope: !16019)
!16047 = !DILocation(line: 920, column: 22, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16020, file: !2678, line: 919, column: 10)
!16049 = !DILocation(line: 0, scope: !14892, inlinedAt: !16050)
!16050 = distinct !DILocation(line: 906, column: 2, scope: !16013)
!16051 = !DILocation(line: 0, scope: !14900, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !16050)
!16053 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !16052)
!16054 = !DILocation(line: 926, column: 2, scope: !15996)
!16055 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2678, file: !2678, line: 929, type: !16056, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16058)
!16056 = !DISubroutineType(types: !16057)
!16057 = !{null, !2573, !108}
!16058 = !{!16059, !16060, !16061}
!16059 = !DILocalVariable(name: "thread", arg: 1, scope: !16055, file: !2678, line: 929, type: !2573)
!16060 = !DILocalVariable(name: "prio", arg: 2, scope: !16055, file: !2678, line: 929, type: !108)
!16061 = !DILocalVariable(name: "need_sched", scope: !16055, file: !2678, line: 931, type: !422)
!16062 = !DILocation(line: 0, scope: !16055)
!16063 = !DILocation(line: 931, column: 20, scope: !16055)
!16064 = !DILocation(line: 935, column: 17, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16055, file: !2678, line: 935, column: 6)
!16066 = !DILocation(line: 935, column: 20, scope: !16065)
!16067 = !DILocation(line: 935, column: 35, scope: !16065)
!16068 = !DILocation(line: 935, column: 48, scope: !16065)
!16069 = !DILocation(line: 935, column: 6, scope: !16055)
!16070 = !DILocation(line: 936, column: 3, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16065, file: !2678, line: 935, column: 55)
!16072 = !DILocation(line: 937, column: 2, scope: !16071)
!16073 = !DILocation(line: 938, column: 1, scope: !16055)
!16074 = distinct !DISubprogram(name: "k_sched_lock", scope: !2678, file: !2678, line: 987, type: !3381, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16075)
!16075 = !{!16076, !16078}
!16076 = !DILocalVariable(name: "__i", scope: !16077, file: !2678, line: 989, type: !14857)
!16077 = distinct !DILexicalBlock(scope: !16074, file: !2678, line: 989, column: 2)
!16078 = !DILocalVariable(name: "__key", scope: !16077, file: !2678, line: 989, type: !14857)
!16079 = !DILocation(line: 0, scope: !16077)
!16080 = !DILocation(line: 0, scope: !14865, inlinedAt: !16081)
!16081 = distinct !DILocation(line: 989, column: 2, scope: !16077)
!16082 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !16081)
!16084 = !DILocation(line: 0, scope: !14874, inlinedAt: !16083)
!16085 = !DILocation(line: 992, column: 3, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16087, file: !2678, line: 989, column: 26)
!16087 = distinct !DILexicalBlock(scope: !16077, file: !2678, line: 989, column: 2)
!16088 = !DILocation(line: 0, scope: !14892, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 989, column: 2, scope: !16087)
!16090 = !DILocation(line: 0, scope: !14900, inlinedAt: !16091)
!16091 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !16089)
!16092 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !16091)
!16093 = !DILocation(line: 994, column: 1, scope: !16074)
!16094 = distinct !DISubprogram(name: "z_sched_lock", scope: !14142, file: !14142, line: 251, type: !3381, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!16095 = !DILocation(line: 256, column: 4, scope: !16094)
!16096 = !DILocation(line: 256, column: 19, scope: !16094)
!16097 = !DILocation(line: 256, column: 2, scope: !16094)
!16098 = !DILocation(line: 258, column: 2, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16094, file: !14142, line: 258, column: 2)
!16100 = !{i64 2152357974}
!16101 = !DILocation(line: 259, column: 1, scope: !16094)
!16102 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2678, file: !2678, line: 996, type: !3381, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16103)
!16103 = !{!16104, !16106}
!16104 = !DILocalVariable(name: "__i", scope: !16105, file: !2678, line: 998, type: !14857)
!16105 = distinct !DILexicalBlock(scope: !16102, file: !2678, line: 998, column: 2)
!16106 = !DILocalVariable(name: "__key", scope: !16105, file: !2678, line: 998, type: !14857)
!16107 = !DILocation(line: 0, scope: !16105)
!16108 = !DILocation(line: 0, scope: !14865, inlinedAt: !16109)
!16109 = distinct !DILocation(line: 998, column: 2, scope: !16105)
!16110 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !16111)
!16111 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !16109)
!16112 = !DILocation(line: 0, scope: !14874, inlinedAt: !16111)
!16113 = !DILocation(line: 1002, column: 5, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16115, file: !2678, line: 998, column: 26)
!16115 = distinct !DILexicalBlock(scope: !16105, file: !2678, line: 998, column: 2)
!16116 = !DILocation(line: 1002, column: 20, scope: !16114)
!16117 = !DILocation(line: 1002, column: 3, scope: !16114)
!16118 = !DILocation(line: 1003, column: 3, scope: !16114)
!16119 = !DILocation(line: 0, scope: !14892, inlinedAt: !16120)
!16120 = distinct !DILocation(line: 998, column: 2, scope: !16115)
!16121 = !DILocation(line: 0, scope: !14900, inlinedAt: !16122)
!16122 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !16120)
!16123 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !16122)
!16124 = !DILocation(line: 1011, column: 2, scope: !16102)
!16125 = !DILocation(line: 1012, column: 1, scope: !16102)
!16126 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2678, file: !2678, line: 1014, type: !15173, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!16127 = !DILocation(line: 1028, column: 25, scope: !16126)
!16128 = !DILocation(line: 1028, column: 2, scope: !16126)
!16129 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2678, file: !2678, line: 1155, type: !16130, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16132)
!16130 = !DISubroutineType(types: !16131)
!16131 = !{!422, !2602, !2602}
!16132 = !{!16133, !16134, !16135, !16136, !16137}
!16133 = !DILocalVariable(name: "a", arg: 1, scope: !16129, file: !2678, line: 1155, type: !2602)
!16134 = !DILocalVariable(name: "b", arg: 2, scope: !16129, file: !2678, line: 1155, type: !2602)
!16135 = !DILocalVariable(name: "thread_a", scope: !16129, file: !2678, line: 1157, type: !2573)
!16136 = !DILocalVariable(name: "thread_b", scope: !16129, file: !2678, line: 1157, type: !2573)
!16137 = !DILocalVariable(name: "cmp", scope: !16129, file: !2678, line: 1158, type: !220)
!16138 = !DILocation(line: 0, scope: !16129)
!16139 = !DILocation(line: 1160, column: 13, scope: !16129)
!16140 = !DILocation(line: 1161, column: 13, scope: !16129)
!16141 = !DILocation(line: 1163, column: 8, scope: !16129)
!16142 = !DILocation(line: 1165, column: 10, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16129, file: !2678, line: 1165, column: 6)
!16144 = !DILocation(line: 1165, column: 6, scope: !16129)
!16145 = !DILocation(line: 1167, column: 17, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16143, file: !2678, line: 1167, column: 13)
!16147 = !DILocation(line: 1167, column: 13, scope: !16143)
!16148 = !DILocation(line: 1170, column: 25, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16146, file: !2678, line: 1169, column: 9)
!16150 = !DILocation(line: 1170, column: 52, scope: !16149)
!16151 = !DILocation(line: 1170, column: 35, scope: !16149)
!16152 = !DILocation(line: 1170, column: 3, scope: !16149)
!16153 = !DILocation(line: 0, scope: !16143)
!16154 = !DILocation(line: 1173, column: 1, scope: !16129)
!16155 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2678, file: !2678, line: 1175, type: !16156, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16171)
!16156 = !DISubroutineType(types: !16157)
!16157 = !{null, !16158, !2573}
!16158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16159, size: 32)
!16159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16160, line: 37, size: 128, elements: !16161)
!16160 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16161 = !{!16162, !16170}
!16162 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16159, file: !16160, line: 38, baseType: !16163, size: 96)
!16163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !681, line: 83, size: 96, elements: !16164)
!16164 = !{!16165, !16166, !16169}
!16165 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16163, file: !681, line: 84, baseType: !2602, size: 32)
!16166 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16163, file: !681, line: 85, baseType: !16167, size: 32, offset: 32)
!16167 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !681, line: 81, baseType: !16168)
!16168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16130, size: 32)
!16169 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16163, file: !681, line: 86, baseType: !108, size: 32, offset: 64)
!16170 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16159, file: !16160, line: 39, baseType: !108, size: 32, offset: 96)
!16171 = !{!16172, !16173, !16174, !16175, !16184}
!16172 = !DILocalVariable(name: "pq", arg: 1, scope: !16155, file: !2678, line: 1175, type: !16158)
!16173 = !DILocalVariable(name: "thread", arg: 2, scope: !16155, file: !2678, line: 1175, type: !2573)
!16174 = !DILocalVariable(name: "t", scope: !16155, file: !2678, line: 1177, type: !2573)
!16175 = !DILocalVariable(name: "__f", scope: !16176, file: !2678, line: 1190, type: !16179)
!16176 = distinct !DILexicalBlock(scope: !16177, file: !2678, line: 1190, column: 3)
!16177 = distinct !DILexicalBlock(scope: !16178, file: !2678, line: 1189, column: 27)
!16178 = distinct !DILexicalBlock(scope: !16155, file: !2678, line: 1189, column: 6)
!16179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !681, line: 155, size: 96, elements: !16180)
!16180 = !{!16181, !16182, !16183}
!16181 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16179, file: !681, line: 156, baseType: !2673, size: 32)
!16182 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16179, file: !681, line: 157, baseType: !209, size: 32, offset: 32)
!16183 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16179, file: !681, line: 158, baseType: !220, size: 32, offset: 64)
!16184 = !DILocalVariable(name: "n", scope: !16185, file: !2678, line: 1190, type: !2602)
!16185 = distinct !DILexicalBlock(scope: !16186, file: !2678, line: 1190, column: 3)
!16186 = distinct !DILexicalBlock(scope: !16176, file: !2678, line: 1190, column: 3)
!16187 = !DILocation(line: 0, scope: !16155)
!16188 = !DILocation(line: 1181, column: 31, scope: !16155)
!16189 = !DILocation(line: 1181, column: 45, scope: !16155)
!16190 = !DILocation(line: 1181, column: 15, scope: !16155)
!16191 = !DILocation(line: 1181, column: 25, scope: !16155)
!16192 = !DILocation(line: 1189, column: 11, scope: !16178)
!16193 = !DILocation(line: 1189, column: 7, scope: !16178)
!16194 = !DILocation(line: 1189, column: 6, scope: !16155)
!16195 = !DILocation(line: 1190, column: 3, scope: !16176)
!16196 = !DILocation(line: 1190, column: 3, scope: !16185)
!16197 = !DILocation(line: 0, scope: !16185)
!16198 = !DILocation(line: 1190, column: 3, scope: !16186)
!16199 = !DILocation(line: 1193, column: 2, scope: !16177)
!16200 = !DILocation(line: 1191, column: 42, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16186, file: !2678, line: 1190, column: 54)
!16202 = !DILocation(line: 1191, column: 12, scope: !16201)
!16203 = !DILocation(line: 1191, column: 22, scope: !16201)
!16204 = distinct !{!16204, !16195, !16205}
!16205 = !DILocation(line: 1192, column: 3, scope: !16176)
!16206 = !DILocation(line: 1195, column: 17, scope: !16155)
!16207 = !DILocation(line: 1195, column: 37, scope: !16155)
!16208 = !DILocation(line: 1195, column: 2, scope: !16155)
!16209 = !DILocation(line: 1196, column: 1, scope: !16155)
!16210 = !DISubprogram(name: "z_rb_foreach_next", scope: !681, file: !681, line: 176, type: !16211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16211 = !DISubroutineType(types: !16212)
!16212 = !{!2602, !16213, !16214}
!16213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16163, size: 32)
!16214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16179, size: 32)
!16215 = !DISubprogram(name: "rb_insert", scope: !681, file: !681, line: 105, type: !16216, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16216 = !DISubroutineType(types: !16217)
!16217 = !{null, !16213, !2602}
!16218 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2678, file: !2678, line: 1198, type: !16156, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16219)
!16219 = !{!16220, !16221}
!16220 = !DILocalVariable(name: "pq", arg: 1, scope: !16218, file: !2678, line: 1198, type: !16158)
!16221 = !DILocalVariable(name: "thread", arg: 2, scope: !16218, file: !2678, line: 1198, type: !2573)
!16222 = !DILocation(line: 0, scope: !16218)
!16223 = !DILocation(line: 1202, column: 17, scope: !16218)
!16224 = !DILocation(line: 1202, column: 37, scope: !16218)
!16225 = !DILocation(line: 1202, column: 2, scope: !16218)
!16226 = !DILocation(line: 1204, column: 16, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16218, file: !2678, line: 1204, column: 6)
!16228 = !DILocation(line: 1204, column: 7, scope: !16227)
!16229 = !DILocation(line: 1204, column: 6, scope: !16218)
!16230 = !DILocation(line: 1205, column: 7, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16227, file: !2678, line: 1204, column: 22)
!16232 = !DILocation(line: 1205, column: 22, scope: !16231)
!16233 = !DILocation(line: 1206, column: 2, scope: !16231)
!16234 = !DILocation(line: 1207, column: 1, scope: !16218)
!16235 = !DISubprogram(name: "rb_remove", scope: !681, file: !681, line: 110, type: !16216, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16236 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2678, file: !2678, line: 1209, type: !16237, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16239)
!16237 = !DISubroutineType(types: !16238)
!16238 = !{!2573, !16158}
!16239 = !{!16240, !16241, !16242}
!16240 = !DILocalVariable(name: "pq", arg: 1, scope: !16236, file: !2678, line: 1209, type: !16158)
!16241 = !DILocalVariable(name: "thread", scope: !16236, file: !2678, line: 1211, type: !2573)
!16242 = !DILocalVariable(name: "n", scope: !16236, file: !2678, line: 1212, type: !2602)
!16243 = !DILocation(line: 0, scope: !16236)
!16244 = !DILocation(line: 1212, column: 37, scope: !16236)
!16245 = !DILocation(line: 1212, column: 21, scope: !16236)
!16246 = !DILocation(line: 1217, column: 2, scope: !16236)
!16247 = distinct !DISubprogram(name: "rb_get_min", scope: !681, file: !681, line: 115, type: !16248, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16250)
!16248 = !DISubroutineType(types: !16249)
!16249 = !{!2602, !16213}
!16250 = !{!16251}
!16251 = !DILocalVariable(name: "tree", arg: 1, scope: !16247, file: !681, line: 115, type: !16213)
!16252 = !DILocation(line: 0, scope: !16247)
!16253 = !DILocation(line: 117, column: 9, scope: !16247)
!16254 = !DILocation(line: 117, column: 2, scope: !16247)
!16255 = !DISubprogram(name: "z_rb_get_minmax", scope: !681, file: !681, line: 100, type: !16256, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16256 = !DISubroutineType(types: !16257)
!16257 = !{!2602, !16213, !164}
!16258 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2678, file: !2678, line: 1246, type: !16259, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16267)
!16259 = !DISubroutineType(types: !16260)
!16260 = !{!2573, !16261}
!16261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16262, size: 32)
!16262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16160, line: 53, size: 2080, elements: !16263)
!16263 = !{!16264, !16266}
!16264 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16262, file: !16160, line: 54, baseType: !16265, size: 2048)
!16265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2609, size: 2048, elements: !1295)
!16266 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16262, file: !16160, line: 55, baseType: !32, size: 32, offset: 2048)
!16267 = !{!16268, !16269, !16270, !16271}
!16268 = !DILocalVariable(name: "pq", arg: 1, scope: !16258, file: !2678, line: 1246, type: !16261)
!16269 = !DILocalVariable(name: "thread", scope: !16258, file: !2678, line: 1252, type: !2573)
!16270 = !DILocalVariable(name: "l", scope: !16258, file: !2678, line: 1253, type: !15068)
!16271 = !DILocalVariable(name: "n", scope: !16258, file: !2678, line: 1254, type: !2674)
!16272 = !DILocation(line: 0, scope: !16258)
!16273 = !DILocation(line: 1248, column: 11, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16258, file: !2678, line: 1248, column: 6)
!16275 = !DILocation(line: 1248, column: 7, scope: !16274)
!16276 = !DILocation(line: 1248, column: 6, scope: !16258)
!16277 = !DILocation(line: 1253, column: 31, scope: !16258)
!16278 = !DILocation(line: 1253, column: 20, scope: !16258)
!16279 = !DILocation(line: 1254, column: 19, scope: !16258)
!16280 = !DILocation(line: 1260, column: 1, scope: !16258)
!16281 = distinct !DISubprogram(name: "z_unpend_all", scope: !2678, file: !2678, line: 1262, type: !16282, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16284)
!16282 = !DISubroutineType(types: !16283)
!16283 = !{!108, !2604}
!16284 = !{!16285, !16286, !16287}
!16285 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16281, file: !2678, line: 1262, type: !2604)
!16286 = !DILocalVariable(name: "need_sched", scope: !16281, file: !2678, line: 1264, type: !108)
!16287 = !DILocalVariable(name: "thread", scope: !16281, file: !2678, line: 1265, type: !2573)
!16288 = !DILocation(line: 0, scope: !16281)
!16289 = !DILocation(line: 1267, column: 19, scope: !16281)
!16290 = !DILocation(line: 1267, column: 41, scope: !16281)
!16291 = !DILocation(line: 1267, column: 2, scope: !16281)
!16292 = !DILocation(line: 1268, column: 3, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16281, file: !2678, line: 1267, column: 50)
!16294 = !DILocation(line: 1269, column: 3, scope: !16293)
!16295 = distinct !{!16295, !16291, !16296}
!16296 = !DILocation(line: 1271, column: 2, scope: !16281)
!16297 = !DILocation(line: 1273, column: 2, scope: !16281)
!16298 = distinct !DISubprogram(name: "z_waitq_head", scope: !14468, file: !14468, line: 52, type: !15916, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16299)
!16299 = !{!16300}
!16300 = !DILocalVariable(name: "w", arg: 1, scope: !16298, file: !14468, line: 52, type: !2604)
!16301 = !DILocation(line: 0, scope: !16298)
!16302 = !DILocation(line: 54, column: 52, scope: !16298)
!16303 = !DILocation(line: 54, column: 28, scope: !16298)
!16304 = !DILocation(line: 54, column: 9, scope: !16298)
!16305 = !DILocation(line: 54, column: 2, scope: !16298)
!16306 = distinct !DISubprogram(name: "init_ready_q", scope: !2678, file: !2678, line: 1276, type: !16307, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16314)
!16307 = !DISubroutineType(types: !16308)
!16308 = !{null, !16309}
!16309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16310, size: 32)
!16310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !16311)
!16311 = !{!16312, !16313}
!16312 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16310, file: !363, line: 86, baseType: !2573, size: 32)
!16313 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16310, file: !363, line: 90, baseType: !2609, size: 64, offset: 32)
!16314 = !{!16315}
!16315 = !DILocalVariable(name: "rq", arg: 1, scope: !16306, file: !2678, line: 1276, type: !16309)
!16316 = !DILocation(line: 0, scope: !16306)
!16317 = !DILocation(line: 1289, column: 22, scope: !16306)
!16318 = !DILocation(line: 1289, column: 2, scope: !16306)
!16319 = !DILocation(line: 1291, column: 1, scope: !16306)
!16320 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !16321, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16323)
!16321 = !DISubroutineType(types: !16322)
!16322 = !{null, !15068}
!16323 = !{!16324}
!16324 = !DILocalVariable(name: "list", arg: 1, scope: !16320, file: !367, line: 197, type: !15068)
!16325 = !DILocation(line: 0, scope: !16320)
!16326 = !DILocation(line: 199, column: 8, scope: !16320)
!16327 = !DILocation(line: 199, column: 13, scope: !16320)
!16328 = !DILocation(line: 200, column: 8, scope: !16320)
!16329 = !DILocation(line: 200, column: 13, scope: !16320)
!16330 = !DILocation(line: 201, column: 1, scope: !16320)
!16331 = distinct !DISubprogram(name: "z_sched_init", scope: !2678, file: !2678, line: 1293, type: !3381, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!16332 = !DILocation(line: 1302, column: 2, scope: !16331)
!16333 = !DILocation(line: 1306, column: 2, scope: !16331)
!16334 = !DILocation(line: 1309, column: 1, scope: !16331)
!16335 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2678, file: !2678, line: 1311, type: !16336, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16339)
!16336 = !DISubroutineType(types: !16337)
!16337 = !{!108, !16338}
!16338 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !656, line: 347, baseType: !2573)
!16339 = !{!16340}
!16340 = !DILocalVariable(name: "thread", arg: 1, scope: !16335, file: !2678, line: 1311, type: !16338)
!16341 = !DILocation(line: 0, scope: !16335)
!16342 = !DILocation(line: 1313, column: 22, scope: !16335)
!16343 = !DILocation(line: 1313, column: 9, scope: !16335)
!16344 = !DILocation(line: 1313, column: 2, scope: !16335)
!16345 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2678, file: !2678, line: 1325, type: !16346, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16348)
!16346 = !DISubroutineType(types: !16347)
!16347 = !{null, !16338, !108}
!16348 = !{!16349, !16350, !16351}
!16349 = !DILocalVariable(name: "thread", arg: 1, scope: !16345, file: !2678, line: 1325, type: !16338)
!16350 = !DILocalVariable(name: "prio", arg: 2, scope: !16345, file: !2678, line: 1325, type: !108)
!16351 = !DILocalVariable(name: "th", scope: !16345, file: !2678, line: 1334, type: !2573)
!16352 = !DILocation(line: 0, scope: !16345)
!16353 = !DILocation(line: 1336, column: 2, scope: !16345)
!16354 = !DILocation(line: 1337, column: 1, scope: !16345)
!16355 = distinct !DISubprogram(name: "k_can_yield", scope: !2678, file: !2678, line: 1384, type: !8010, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!16356 = !DILocation(line: 1386, column: 11, scope: !16355)
!16357 = !DILocation(line: 1386, column: 29, scope: !16355)
!16358 = !DILocation(line: 1386, column: 32, scope: !16355)
!16359 = !DILocation(line: 1386, column: 46, scope: !16355)
!16360 = !DILocation(line: 1387, column: 28, scope: !16355)
!16361 = !DILocation(line: 1387, column: 4, scope: !16355)
!16362 = !DILocation(line: 1386, column: 2, scope: !16355)
!16363 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !359, file: !359, line: 989, type: !8010, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!16364 = !DILocation(line: 993, column: 10, scope: !16363)
!16365 = !DILocation(line: 993, column: 2, scope: !16363)
!16366 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2678, file: !2678, line: 1390, type: !3381, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16367)
!16367 = !{!16368}
!16368 = !DILocalVariable(name: "key", scope: !16366, file: !2678, line: 1396, type: !14857)
!16369 = !DILocation(line: 0, scope: !14865, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 1396, column: 25, scope: !16366)
!16371 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !16372)
!16372 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !16370)
!16373 = !DILocation(line: 0, scope: !14874, inlinedAt: !16372)
!16374 = !DILocation(line: 0, scope: !16366)
!16375 = !DILocation(line: 1400, column: 18, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16377, file: !2678, line: 1399, column: 36)
!16377 = distinct !DILexicalBlock(scope: !16366, file: !2678, line: 1398, column: 6)
!16378 = !DILocation(line: 0, scope: !15034, inlinedAt: !16379)
!16379 = distinct !DILocation(line: 1400, column: 3, scope: !16376)
!16380 = !DILocation(line: 266, column: 15, scope: !15034, inlinedAt: !16379)
!16381 = !DILocation(line: 266, column: 28, scope: !15034, inlinedAt: !16379)
!16382 = !DILocation(line: 0, scope: !15042, inlinedAt: !16383)
!16383 = distinct !DILocation(line: 268, column: 3, scope: !15046, inlinedAt: !16379)
!16384 = !DILocation(line: 234, column: 2, scope: !15042, inlinedAt: !16383)
!16385 = !DILocation(line: 1402, column: 15, scope: !16366)
!16386 = !DILocation(line: 0, scope: !15051, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 1402, column: 2, scope: !16366)
!16388 = !DILocation(line: 252, column: 15, scope: !15051, inlinedAt: !16387)
!16389 = !DILocation(line: 252, column: 28, scope: !15051, inlinedAt: !16387)
!16390 = !DILocation(line: 0, scope: !15058, inlinedAt: !16391)
!16391 = distinct !DILocation(line: 254, column: 3, scope: !15062, inlinedAt: !16387)
!16392 = !DILocation(line: 0, scope: !15065, inlinedAt: !16393)
!16393 = distinct !DILocation(line: 229, column: 2, scope: !15058, inlinedAt: !16391)
!16394 = !DILocation(line: 188, column: 2, scope: !15075, inlinedAt: !16393)
!16395 = !DILocation(line: 188, column: 2, scope: !15077, inlinedAt: !16393)
!16396 = !DILocation(line: 0, scope: !15075, inlinedAt: !16393)
!16397 = !DILocation(line: 189, column: 7, scope: !15080, inlinedAt: !16393)
!16398 = !DILocation(line: 189, column: 35, scope: !15080, inlinedAt: !16393)
!16399 = !DILocation(line: 189, column: 7, scope: !15081, inlinedAt: !16393)
!16400 = !DILocation(line: 191, column: 21, scope: !15085, inlinedAt: !16393)
!16401 = !DILocation(line: 190, column: 4, scope: !15085, inlinedAt: !16393)
!16402 = !DILocation(line: 192, column: 4, scope: !15085, inlinedAt: !16393)
!16403 = distinct !{!16403, !16394, !16404}
!16404 = !DILocation(line: 194, column: 2, scope: !15075, inlinedAt: !16393)
!16405 = !DILocation(line: 196, column: 37, scope: !15065, inlinedAt: !16393)
!16406 = !DILocation(line: 196, column: 2, scope: !15065, inlinedAt: !16393)
!16407 = !DILocation(line: 197, column: 1, scope: !15065, inlinedAt: !16393)
!16408 = !DILocation(line: 1403, column: 2, scope: !16366)
!16409 = !DILocation(line: 0, scope: !15476, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 1404, column: 2, scope: !16366)
!16411 = !DILocation(line: 196, column: 9, scope: !15476, inlinedAt: !16410)
!16412 = !DILocation(line: 1405, column: 1, scope: !16366)
!16413 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2678, file: !2678, line: 1459, type: !16414, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16416)
!16414 = !DISubroutineType(types: !16415)
!16415 = !{!220, !15656}
!16416 = !{!16417, !16418, !16419}
!16417 = !DILocalVariable(name: "timeout", arg: 1, scope: !16413, file: !2678, line: 1459, type: !15656)
!16418 = !DILocalVariable(name: "ticks", scope: !16413, file: !2678, line: 1461, type: !109)
!16419 = !DILocalVariable(name: "ret", scope: !16413, file: !2678, line: 1480, type: !220)
!16420 = !DILocation(line: 0, scope: !16413)
!16421 = !DILocation(line: 1468, column: 6, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16413, file: !2678, line: 1468, column: 6)
!16423 = !DILocation(line: 1468, column: 6, scope: !16413)
!16424 = !DILocation(line: 1469, column: 20, scope: !16425)
!16425 = distinct !DILexicalBlock(scope: !16422, file: !2678, line: 1468, column: 40)
!16426 = !DILocation(line: 1469, column: 3, scope: !16425)
!16427 = !DILocation(line: 1473, column: 3, scope: !16425)
!16428 = !DILocation(line: 1478, column: 10, scope: !16413)
!16429 = !DILocation(line: 1480, column: 16, scope: !16413)
!16430 = !DILocation(line: 1485, column: 1, scope: !16413)
!16431 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3777, file: !3777, line: 310, type: !16432, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16434)
!16432 = !DISubroutineType(types: !16433)
!16433 = !{null, !16338}
!16434 = !{!16435}
!16435 = !DILocalVariable(name: "thread", arg: 1, scope: !16431, file: !3777, line: 310, type: !16338)
!16436 = !DILocation(line: 0, scope: !16431)
!16437 = !DILocation(line: 319, column: 2, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16431, file: !3777, line: 319, column: 2)
!16439 = !{i64 2152276363}
!16440 = !DILocation(line: 320, column: 2, scope: !16431)
!16441 = !DILocation(line: 321, column: 1, scope: !16431)
!16442 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2678, file: !2678, line: 1415, type: !16443, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16445)
!16443 = !DISubroutineType(types: !16444)
!16444 = !{!220, !109}
!16445 = !{!16446, !16447, !16448, !16449}
!16446 = !DILocalVariable(name: "ticks", arg: 1, scope: !16442, file: !2678, line: 1415, type: !109)
!16447 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16442, file: !2678, line: 1418, type: !113)
!16448 = !DILocalVariable(name: "timeout", scope: !16442, file: !2678, line: 1430, type: !15656)
!16449 = !DILocalVariable(name: "key", scope: !16442, file: !2678, line: 1437, type: !14857)
!16450 = !DILocation(line: 0, scope: !16442)
!16451 = !DILocation(line: 1425, column: 12, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16442, file: !2678, line: 1425, column: 6)
!16453 = !DILocation(line: 1425, column: 6, scope: !16442)
!16454 = !DILocation(line: 1426, column: 3, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !16452, file: !2678, line: 1425, column: 18)
!16456 = !DILocation(line: 1427, column: 3, scope: !16455)
!16457 = !DILocation(line: 1431, column: 24, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16442, file: !2678, line: 1431, column: 6)
!16459 = !DILocation(line: 1431, column: 6, scope: !16442)
!16460 = !DILocation(line: 1432, column: 35, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16458, file: !2678, line: 1431, column: 30)
!16462 = !DILocation(line: 1432, column: 27, scope: !16461)
!16463 = !DILocation(line: 1433, column: 2, scope: !16461)
!16464 = !DILocation(line: 1434, column: 27, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16458, file: !2678, line: 1433, column: 9)
!16466 = !DILocation(line: 0, scope: !16458)
!16467 = !DILocation(line: 0, scope: !14865, inlinedAt: !16468)
!16468 = distinct !DILocation(line: 1437, column: 25, scope: !16442)
!16469 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !16470)
!16470 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !16468)
!16471 = !DILocation(line: 0, scope: !14874, inlinedAt: !16470)
!16472 = !DILocation(line: 1440, column: 20, scope: !16442)
!16473 = !DILocation(line: 1440, column: 18, scope: !16442)
!16474 = !DILocation(line: 1442, column: 2, scope: !16442)
!16475 = !DILocation(line: 1443, column: 23, scope: !16442)
!16476 = !DILocation(line: 1443, column: 2, scope: !16442)
!16477 = !DILocation(line: 1444, column: 29, scope: !16442)
!16478 = !DILocation(line: 1444, column: 2, scope: !16442)
!16479 = !DILocation(line: 0, scope: !15476, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 1446, column: 8, scope: !16442)
!16481 = !DILocation(line: 196, column: 9, scope: !15476, inlinedAt: !16480)
!16482 = !DILocation(line: 1450, column: 10, scope: !16442)
!16483 = !DILocation(line: 1450, column: 45, scope: !16442)
!16484 = !DILocation(line: 1450, column: 43, scope: !16442)
!16485 = !DILocation(line: 1451, column: 6, scope: !16442)
!16486 = !DILocation(line: 1457, column: 1, scope: !16442)
!16487 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3744, file: !3744, line: 1103, type: !3745, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16488)
!16488 = !{!16489}
!16489 = !DILocalVariable(name: "t", arg: 1, scope: !16487, file: !3744, line: 1103, type: !114)
!16490 = !DILocation(line: 0, scope: !16487)
!16491 = !DILocation(line: 0, scope: !14912, inlinedAt: !16492)
!16492 = distinct !DILocation(line: 1106, column: 9, scope: !16487)
!16493 = !DILocation(line: 139, column: 13, scope: !16494, inlinedAt: !16492)
!16494 = distinct !DILexicalBlock(scope: !16495, file: !3744, line: 138, column: 10)
!16495 = distinct !DILexicalBlock(scope: !16496, file: !3744, line: 136, column: 7)
!16496 = distinct !DILexicalBlock(scope: !14933, file: !3744, line: 134, column: 17)
!16497 = !DILocation(line: 1106, column: 2, scope: !16487)
!16498 = distinct !DISubprogram(name: "k_yield", scope: !3777, file: !3777, line: 140, type: !3381, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!16499 = !DILocation(line: 148, column: 2, scope: !16500)
!16500 = distinct !DILexicalBlock(scope: !16498, file: !3777, line: 148, column: 2)
!16501 = !{i64 2152275683}
!16502 = !DILocation(line: 149, column: 2, scope: !16498)
!16503 = !DILocation(line: 150, column: 1, scope: !16498)
!16504 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2678, file: !2678, line: 1495, type: !16505, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16507)
!16505 = !DISubroutineType(types: !16506)
!16506 = !{!220, !108}
!16507 = !{!16508, !16509}
!16508 = !DILocalVariable(name: "us", arg: 1, scope: !16504, file: !2678, line: 1495, type: !108)
!16509 = !DILocalVariable(name: "ticks", scope: !16504, file: !2678, line: 1497, type: !220)
!16510 = !DILocation(line: 0, scope: !16504)
!16511 = !DILocation(line: 1501, column: 31, scope: !16504)
!16512 = !DILocation(line: 1501, column: 10, scope: !16504)
!16513 = !DILocation(line: 1502, column: 23, scope: !16504)
!16514 = !DILocation(line: 1502, column: 10, scope: !16504)
!16515 = !DILocation(line: 1506, column: 31, scope: !16504)
!16516 = !DILocation(line: 1506, column: 9, scope: !16504)
!16517 = !DILocation(line: 1506, column: 2, scope: !16504)
!16518 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3744, file: !3744, line: 571, type: !3745, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16519)
!16519 = !{!16520}
!16520 = !DILocalVariable(name: "t", arg: 1, scope: !16518, file: !3744, line: 571, type: !114)
!16521 = !DILocation(line: 0, scope: !16518)
!16522 = !DILocation(line: 0, scope: !14912, inlinedAt: !16523)
!16523 = distinct !DILocation(line: 574, column: 9, scope: !16518)
!16524 = !DILocation(line: 135, column: 5, scope: !16496, inlinedAt: !16523)
!16525 = !DILocation(line: 139, column: 13, scope: !16494, inlinedAt: !16523)
!16526 = !DILocation(line: 574, column: 2, scope: !16518)
!16527 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3744, file: !3744, line: 1187, type: !3745, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16528)
!16528 = !{!16529}
!16529 = !DILocalVariable(name: "t", arg: 1, scope: !16527, file: !3744, line: 1187, type: !114)
!16530 = !DILocation(line: 0, scope: !16527)
!16531 = !DILocation(line: 0, scope: !14912, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 1190, column: 9, scope: !16527)
!16533 = !DILocation(line: 145, column: 13, scope: !16534, inlinedAt: !16532)
!16534 = distinct !DILexicalBlock(scope: !14930, file: !3744, line: 144, column: 10)
!16535 = !DILocation(line: 1190, column: 2, scope: !16527)
!16536 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2678, file: !2678, line: 1517, type: !16432, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16537)
!16537 = !{!16538}
!16538 = !DILocalVariable(name: "thread", arg: 1, scope: !16536, file: !2678, line: 1517, type: !16338)
!16539 = !DILocation(line: 0, scope: !16536)
!16540 = !DILocation(line: 1521, column: 6, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16536, file: !2678, line: 1521, column: 6)
!16542 = !DILocation(line: 1521, column: 6, scope: !16536)
!16543 = !DILocation(line: 1525, column: 6, scope: !16544)
!16544 = distinct !DILexicalBlock(scope: !16536, file: !2678, line: 1525, column: 6)
!16545 = !DILocation(line: 1525, column: 37, scope: !16544)
!16546 = !DILocation(line: 1525, column: 6, scope: !16536)
!16547 = !DILocation(line: 1527, column: 20, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16549, file: !2678, line: 1527, column: 7)
!16549 = distinct !DILexicalBlock(scope: !16544, file: !2678, line: 1525, column: 42)
!16550 = !DILocation(line: 1527, column: 33, scope: !16548)
!16551 = !DILocation(line: 1527, column: 7, scope: !16549)
!16552 = !DILocation(line: 1532, column: 2, scope: !16536)
!16553 = !DILocation(line: 1533, column: 2, scope: !16536)
!16554 = !DILocation(line: 1031, column: 3, scope: !15509, inlinedAt: !16555)
!16555 = distinct !DILocation(line: 48, column: 10, scope: !15513, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 1537, column: 7, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16536, file: !2678, line: 1537, column: 6)
!16558 = !DILocation(line: 0, scope: !15509, inlinedAt: !16555)
!16559 = !DILocation(line: 48, column: 9, scope: !15513, inlinedAt: !16556)
!16560 = !DILocation(line: 1537, column: 6, scope: !16536)
!16561 = !DILocation(line: 1538, column: 3, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16557, file: !2678, line: 1537, column: 25)
!16563 = !DILocation(line: 1539, column: 2, scope: !16562)
!16564 = !DILocation(line: 1540, column: 1, scope: !16536)
!16565 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14142, file: !14142, line: 101, type: !14983, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16566)
!16566 = !{!16567}
!16567 = !DILocalVariable(name: "thread", arg: 1, scope: !16565, file: !14142, line: 101, type: !2573)
!16568 = !DILocation(line: 0, scope: !16565)
!16569 = !DILocation(line: 103, column: 23, scope: !16565)
!16570 = !DILocation(line: 103, column: 36, scope: !16565)
!16571 = !DILocation(line: 103, column: 55, scope: !16565)
!16572 = !DILocation(line: 103, column: 2, scope: !16565)
!16573 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2678, file: !2678, line: 1567, type: !16574, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16576)
!16574 = !DISubroutineType(types: !16575)
!16575 = !{!16338}
!16576 = !{!16577}
!16577 = !DILocalVariable(name: "ret", scope: !16573, file: !2678, line: 1577, type: !16338)
!16578 = !DILocation(line: 1577, column: 30, scope: !16573)
!16579 = !DILocation(line: 0, scope: !16573)
!16580 = !DILocation(line: 1582, column: 2, scope: !16573)
!16581 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2678, file: !2678, line: 1593, type: !8299, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !437)
!16582 = !DILocation(line: 1031, column: 3, scope: !15509, inlinedAt: !16583)
!16583 = distinct !DILocation(line: 48, column: 10, scope: !15513, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 1595, column: 10, scope: !16581)
!16585 = !DILocation(line: 0, scope: !15509, inlinedAt: !16583)
!16586 = !DILocation(line: 48, column: 9, scope: !15513, inlinedAt: !16584)
!16587 = !DILocation(line: 1595, column: 27, scope: !16581)
!16588 = !DILocation(line: 1595, column: 41, scope: !16581)
!16589 = !DILocation(line: 1595, column: 30, scope: !16581)
!16590 = !DILocation(line: 1595, column: 2, scope: !16581)
!16591 = distinct !DISubprogram(name: "z_thread_abort", scope: !2678, file: !2678, line: 1725, type: !14823, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16592)
!16592 = !{!16593, !16594}
!16593 = !DILocalVariable(name: "thread", arg: 1, scope: !16591, file: !2678, line: 1725, type: !2573)
!16594 = !DILocalVariable(name: "key", scope: !16591, file: !2678, line: 1727, type: !14857)
!16595 = !DILocation(line: 0, scope: !16591)
!16596 = !DILocation(line: 0, scope: !14865, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 1727, column: 25, scope: !16591)
!16598 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !16597)
!16600 = !DILocation(line: 0, scope: !14874, inlinedAt: !16599)
!16601 = !DILocation(line: 1729, column: 20, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16591, file: !2678, line: 1729, column: 6)
!16603 = !DILocation(line: 1729, column: 33, scope: !16602)
!16604 = !DILocation(line: 1729, column: 48, scope: !16602)
!16605 = !DILocation(line: 1729, column: 6, scope: !16591)
!16606 = !DILocation(line: 0, scope: !14892, inlinedAt: !16607)
!16607 = distinct !DILocation(line: 1730, column: 3, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16602, file: !2678, line: 1729, column: 54)
!16609 = !DILocation(line: 0, scope: !14900, inlinedAt: !16610)
!16610 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !16607)
!16611 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !16610)
!16612 = !DILocation(line: 1732, column: 3, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16608, file: !2678, line: 1732, column: 3)
!16614 = !{i64 2153011688, i64 2153011704, i64 2153011730, i64 2153011758, i64 2153011778}
!16615 = !DILocation(line: 1733, column: 3, scope: !16608)
!16616 = !DILocation(line: 1736, column: 20, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16591, file: !2678, line: 1736, column: 6)
!16618 = !DILocation(line: 1736, column: 33, scope: !16617)
!16619 = !DILocation(line: 1736, column: 49, scope: !16617)
!16620 = !DILocation(line: 1736, column: 6, scope: !16591)
!16621 = !DILocation(line: 0, scope: !14892, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 1737, column: 3, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16617, file: !2678, line: 1736, column: 56)
!16624 = !DILocation(line: 0, scope: !14900, inlinedAt: !16625)
!16625 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !16622)
!16626 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !16625)
!16627 = !DILocation(line: 1738, column: 3, scope: !16623)
!16628 = !DILocation(line: 1775, column: 2, scope: !16591)
!16629 = !DILocation(line: 1776, column: 16, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16591, file: !2678, line: 1776, column: 6)
!16631 = !DILocation(line: 1776, column: 13, scope: !16630)
!16632 = !DILocation(line: 1776, column: 25, scope: !16630)
!16633 = !DILocation(line: 1031, column: 3, scope: !15509, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 48, column: 10, scope: !15513, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 1776, column: 29, scope: !16630)
!16636 = !DILocation(line: 0, scope: !15509, inlinedAt: !16634)
!16637 = !DILocation(line: 48, column: 9, scope: !15513, inlinedAt: !16635)
!16638 = !DILocation(line: 1776, column: 6, scope: !16591)
!16639 = !DILocation(line: 0, scope: !15476, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 1777, column: 3, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16630, file: !2678, line: 1776, column: 47)
!16642 = !DILocation(line: 196, column: 9, scope: !15476, inlinedAt: !16640)
!16643 = !DILocation(line: 1779, column: 2, scope: !16641)
!16644 = !DILocation(line: 0, scope: !14892, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 1780, column: 2, scope: !16591)
!16646 = !DILocation(line: 0, scope: !14900, inlinedAt: !16647)
!16647 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !16645)
!16648 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !16647)
!16649 = !DILocation(line: 1781, column: 1, scope: !16591)
!16650 = distinct !DISubprogram(name: "end_thread", scope: !2678, file: !2678, line: 1690, type: !14823, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16651)
!16651 = !{!16652}
!16652 = !DILocalVariable(name: "thread", arg: 1, scope: !16650, file: !2678, line: 1690, type: !2573)
!16653 = !DILocation(line: 0, scope: !16650)
!16654 = !DILocation(line: 1695, column: 20, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16650, file: !2678, line: 1695, column: 6)
!16656 = !DILocation(line: 1695, column: 33, scope: !16655)
!16657 = !DILocation(line: 1695, column: 49, scope: !16655)
!16658 = !DILocation(line: 1695, column: 6, scope: !16650)
!16659 = !DILocation(line: 1697, column: 29, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16655, file: !2678, line: 1695, column: 56)
!16661 = !DILocation(line: 1698, column: 7, scope: !16662)
!16662 = distinct !DILexicalBlock(scope: !16660, file: !2678, line: 1698, column: 7)
!16663 = !DILocation(line: 1698, column: 7, scope: !16660)
!16664 = !DILocation(line: 0, scope: !15034, inlinedAt: !16665)
!16665 = distinct !DILocation(line: 1699, column: 4, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16662, file: !2678, line: 1698, column: 35)
!16667 = !DILocation(line: 266, column: 28, scope: !15034, inlinedAt: !16665)
!16668 = !DILocation(line: 0, scope: !15042, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 268, column: 3, scope: !15046, inlinedAt: !16665)
!16670 = !DILocation(line: 234, column: 2, scope: !15042, inlinedAt: !16669)
!16671 = !DILocation(line: 1700, column: 3, scope: !16666)
!16672 = !DILocation(line: 1701, column: 20, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16660, file: !2678, line: 1701, column: 7)
!16674 = !DILocation(line: 1701, column: 30, scope: !16673)
!16675 = !DILocation(line: 1701, column: 7, scope: !16660)
!16676 = !DILocation(line: 1702, column: 4, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16673, file: !2678, line: 1701, column: 39)
!16678 = !DILocation(line: 1703, column: 3, scope: !16677)
!16679 = !DILocation(line: 1704, column: 9, scope: !16660)
!16680 = !DILocation(line: 1705, column: 23, scope: !16660)
!16681 = !DILocation(line: 1705, column: 3, scope: !16660)
!16682 = !DILocation(line: 1706, column: 3, scope: !16660)
!16683 = !DILocation(line: 1722, column: 2, scope: !16660)
!16684 = !DILocation(line: 1723, column: 1, scope: !16650)
!16685 = distinct !DISubprogram(name: "unpend_all", scope: !2678, file: !2678, line: 1674, type: !16686, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16688)
!16686 = !DISubroutineType(types: !16687)
!16687 = !{null, !2604}
!16688 = !{!16689, !16690}
!16689 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16685, file: !2678, line: 1674, type: !2604)
!16690 = !DILocalVariable(name: "thread", scope: !16685, file: !2678, line: 1676, type: !2573)
!16691 = !DILocation(line: 0, scope: !16685)
!16692 = !DILocation(line: 1678, column: 19, scope: !16685)
!16693 = !DILocation(line: 1678, column: 41, scope: !16685)
!16694 = !DILocation(line: 1678, column: 2, scope: !16685)
!16695 = !DILocation(line: 1679, column: 3, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16685, file: !2678, line: 1678, column: 50)
!16697 = !DILocation(line: 1680, column: 9, scope: !16696)
!16698 = !DILocalVariable(name: "thread", arg: 1, scope: !16699, file: !14162, line: 65, type: !2573)
!16699 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14162, file: !14162, line: 65, type: !16700, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16702)
!16700 = !DISubroutineType(types: !16701)
!16701 = !{null, !2573, !32}
!16702 = !{!16698, !16703}
!16703 = !DILocalVariable(name: "value", arg: 2, scope: !16699, file: !14162, line: 65, type: !32)
!16704 = !DILocation(line: 0, scope: !16699, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 1681, column: 3, scope: !16696)
!16706 = !DILocation(line: 67, column: 15, scope: !16699, inlinedAt: !16705)
!16707 = !DILocation(line: 67, column: 33, scope: !16699, inlinedAt: !16705)
!16708 = !DILocation(line: 1682, column: 3, scope: !16696)
!16709 = distinct !{!16709, !16694, !16710}
!16710 = !DILocation(line: 1683, column: 2, scope: !16685)
!16711 = !DILocation(line: 1684, column: 1, scope: !16685)
!16712 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2678, file: !2678, line: 1794, type: !16713, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16715)
!16713 = !DISubroutineType(types: !16714)
!16714 = !{!108, !2573, !15656}
!16715 = !{!16716, !16717, !16718, !16719}
!16716 = !DILocalVariable(name: "thread", arg: 1, scope: !16712, file: !2678, line: 1794, type: !2573)
!16717 = !DILocalVariable(name: "timeout", arg: 2, scope: !16712, file: !2678, line: 1794, type: !15656)
!16718 = !DILocalVariable(name: "key", scope: !16712, file: !2678, line: 1796, type: !14857)
!16719 = !DILocalVariable(name: "ret", scope: !16712, file: !2678, line: 1797, type: !108)
!16720 = !DILocation(line: 0, scope: !16712)
!16721 = !DILocation(line: 0, scope: !14865, inlinedAt: !16722)
!16722 = distinct !DILocation(line: 1796, column: 25, scope: !16712)
!16723 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !16724)
!16724 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !16722)
!16725 = !DILocation(line: 0, scope: !14874, inlinedAt: !16724)
!16726 = !DILocation(line: 1801, column: 20, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16712, file: !2678, line: 1801, column: 6)
!16728 = !DILocation(line: 1801, column: 33, scope: !16727)
!16729 = !DILocation(line: 1801, column: 49, scope: !16727)
!16730 = !DILocation(line: 1801, column: 6, scope: !16712)
!16731 = !DILocation(line: 1803, column: 13, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16727, file: !2678, line: 1803, column: 13)
!16733 = !DILocation(line: 1803, column: 13, scope: !16727)
!16734 = !DILocation(line: 1805, column: 24, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16732, file: !2678, line: 1805, column: 13)
!16736 = !DILocation(line: 1805, column: 21, scope: !16735)
!16737 = !DILocation(line: 1805, column: 34, scope: !16735)
!16738 = !DILocation(line: 1806, column: 20, scope: !16735)
!16739 = !DILocation(line: 1806, column: 44, scope: !16735)
!16740 = !DILocation(line: 1806, column: 30, scope: !16735)
!16741 = !DILocation(line: 1805, column: 13, scope: !16732)
!16742 = !DILocation(line: 1810, column: 42, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16735, file: !2678, line: 1808, column: 9)
!16744 = !DILocation(line: 1810, column: 3, scope: !16743)
!16745 = !DILocation(line: 1811, column: 22, scope: !16743)
!16746 = !DILocation(line: 1811, column: 3, scope: !16743)
!16747 = !DILocation(line: 0, scope: !15476, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 1814, column: 9, scope: !16743)
!16749 = !DILocation(line: 196, column: 9, scope: !15476, inlinedAt: !16748)
!16750 = !DILocation(line: 1817, column: 3, scope: !16743)
!16751 = !DILocation(line: 0, scope: !16727)
!16752 = !DILocation(line: 0, scope: !14892, inlinedAt: !16753)
!16753 = distinct !DILocation(line: 1822, column: 2, scope: !16712)
!16754 = !DILocation(line: 0, scope: !14900, inlinedAt: !16755)
!16755 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !16753)
!16756 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !16755)
!16757 = !DILocation(line: 1823, column: 2, scope: !16712)
!16758 = !DILocation(line: 1824, column: 1, scope: !16712)
!16759 = distinct !DISubprogram(name: "z_sched_wake", scope: !2678, file: !2678, line: 1882, type: !16760, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16762)
!16760 = !DISubroutineType(types: !16761)
!16761 = !{!422, !2604, !108, !104}
!16762 = !{!16763, !16764, !16765, !16766, !16767, !16768, !16770}
!16763 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16759, file: !2678, line: 1882, type: !2604)
!16764 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16759, file: !2678, line: 1882, type: !108)
!16765 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16759, file: !2678, line: 1882, type: !104)
!16766 = !DILocalVariable(name: "thread", scope: !16759, file: !2678, line: 1884, type: !2573)
!16767 = !DILocalVariable(name: "ret", scope: !16759, file: !2678, line: 1885, type: !422)
!16768 = !DILocalVariable(name: "__i", scope: !16769, file: !2678, line: 1887, type: !14857)
!16769 = distinct !DILexicalBlock(scope: !16759, file: !2678, line: 1887, column: 2)
!16770 = !DILocalVariable(name: "__key", scope: !16769, file: !2678, line: 1887, type: !14857)
!16771 = !DILocation(line: 0, scope: !16759)
!16772 = !DILocation(line: 0, scope: !16769)
!16773 = !DILocation(line: 0, scope: !14865, inlinedAt: !16774)
!16774 = distinct !DILocation(line: 1887, column: 2, scope: !16769)
!16775 = !DILocation(line: 55, column: 2, scope: !14874, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 145, column: 10, scope: !14865, inlinedAt: !16774)
!16777 = !DILocation(line: 0, scope: !14874, inlinedAt: !16776)
!16778 = !DILocation(line: 1888, column: 12, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16780, file: !2678, line: 1887, column: 26)
!16780 = distinct !DILexicalBlock(scope: !16769, file: !2678, line: 1887, column: 2)
!16781 = !DILocation(line: 1890, column: 14, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16779, file: !2678, line: 1890, column: 7)
!16783 = !DILocation(line: 1890, column: 7, scope: !16779)
!16784 = !DILocalVariable(name: "thread", arg: 1, scope: !16785, file: !16786, line: 134, type: !2573)
!16785 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16786, file: !16786, line: 134, type: !16787, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16789)
!16786 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16787 = !DISubroutineType(types: !16788)
!16788 = !{null, !2573, !32, !104}
!16789 = !{!16784, !16790, !16791}
!16790 = !DILocalVariable(name: "value", arg: 2, scope: !16785, file: !16786, line: 135, type: !32)
!16791 = !DILocalVariable(name: "data", arg: 3, scope: !16785, file: !16786, line: 136, type: !104)
!16792 = !DILocation(line: 0, scope: !16785, inlinedAt: !16793)
!16793 = distinct !DILocation(line: 1891, column: 4, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16782, file: !2678, line: 1890, column: 23)
!16795 = !DILocation(line: 0, scope: !16699, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 138, column: 2, scope: !16785, inlinedAt: !16793)
!16797 = !DILocation(line: 67, column: 15, scope: !16699, inlinedAt: !16796)
!16798 = !DILocation(line: 67, column: 33, scope: !16699, inlinedAt: !16796)
!16799 = !DILocation(line: 139, column: 15, scope: !16785, inlinedAt: !16793)
!16800 = !DILocation(line: 139, column: 25, scope: !16785, inlinedAt: !16793)
!16801 = !DILocation(line: 1894, column: 4, scope: !16794)
!16802 = !DILocation(line: 1895, column: 10, scope: !16794)
!16803 = !DILocation(line: 1896, column: 4, scope: !16794)
!16804 = !DILocation(line: 1898, column: 3, scope: !16794)
!16805 = !DILocation(line: 0, scope: !14892, inlinedAt: !16806)
!16806 = distinct !DILocation(line: 1887, column: 2, scope: !16780)
!16807 = !DILocation(line: 0, scope: !14900, inlinedAt: !16808)
!16808 = distinct !DILocation(line: 215, column: 2, scope: !14892, inlinedAt: !16806)
!16809 = !DILocation(line: 95, column: 2, scope: !14900, inlinedAt: !16808)
!16810 = !DILocation(line: 1901, column: 2, scope: !16759)
!16811 = distinct !DISubprogram(name: "z_sched_wait", scope: !2678, file: !2678, line: 1904, type: !16812, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !16815)
!16812 = !DISubroutineType(types: !16813)
!16813 = !{!108, !14868, !14857, !2604, !15656, !16814}
!16814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!16815 = !{!16816, !16817, !16818, !16819, !16820, !16821}
!16816 = !DILocalVariable(name: "lock", arg: 1, scope: !16811, file: !2678, line: 1904, type: !14868)
!16817 = !DILocalVariable(name: "key", arg: 2, scope: !16811, file: !2678, line: 1904, type: !14857)
!16818 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16811, file: !2678, line: 1905, type: !2604)
!16819 = !DILocalVariable(name: "timeout", arg: 4, scope: !16811, file: !2678, line: 1905, type: !15656)
!16820 = !DILocalVariable(name: "data", arg: 5, scope: !16811, file: !2678, line: 1905, type: !16814)
!16821 = !DILocalVariable(name: "ret", scope: !16811, file: !2678, line: 1907, type: !108)
!16822 = !DILocation(line: 0, scope: !16811)
!16823 = !DILocation(line: 1907, column: 12, scope: !16811)
!16824 = !DILocation(line: 1909, column: 11, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16811, file: !2678, line: 1909, column: 6)
!16826 = !DILocation(line: 1909, column: 6, scope: !16811)
!16827 = !DILocation(line: 1910, column: 11, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16825, file: !2678, line: 1909, column: 20)
!16829 = !DILocation(line: 1910, column: 26, scope: !16828)
!16830 = !DILocation(line: 1910, column: 9, scope: !16828)
!16831 = !DILocation(line: 1911, column: 2, scope: !16828)
!16832 = !DILocation(line: 1912, column: 2, scope: !16811)
!16833 = distinct !DISubprogram(name: "z_data_copy", scope: !16834, file: !16834, line: 22, type: !3381, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3364, retainedNodes: !437)
!16834 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16835 = !DILocation(line: 24, column: 2, scope: !16833)
!16836 = !DILocation(line: 27, column: 2, scope: !16833)
!16837 = !DILocation(line: 71, column: 1, scope: !16833)
!16838 = distinct !DISubprogram(name: "z_add_timeout", scope: !2715, file: !2715, line: 88, type: !16839, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !16845)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{null, !2688, !2707, !16841}
!16841 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !16842)
!16842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !16843)
!16843 = !{!16844}
!16844 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16842, file: !110, line: 66, baseType: !109, size: 64)
!16845 = !{!16846, !16847, !16848, !16849, !16855, !16856, !16859, !16862}
!16846 = !DILocalVariable(name: "to", arg: 1, scope: !16838, file: !2715, line: 88, type: !2688)
!16847 = !DILocalVariable(name: "fn", arg: 2, scope: !16838, file: !2715, line: 88, type: !2707)
!16848 = !DILocalVariable(name: "timeout", arg: 3, scope: !16838, file: !2715, line: 89, type: !16841)
!16849 = !DILocalVariable(name: "__i", scope: !16850, file: !2715, line: 102, type: !16851)
!16850 = distinct !DILexicalBlock(scope: !16838, file: !2715, line: 102, column: 2)
!16851 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !16852)
!16852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !16853)
!16853 = !{!16854}
!16854 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16852, file: !436, line: 33, baseType: !108, size: 32)
!16855 = !DILocalVariable(name: "__key", scope: !16850, file: !2715, line: 102, type: !16851)
!16856 = !DILocalVariable(name: "t", scope: !16857, file: !2715, line: 103, type: !2688)
!16857 = distinct !DILexicalBlock(scope: !16858, file: !2715, line: 102, column: 24)
!16858 = distinct !DILexicalBlock(scope: !16850, file: !2715, line: 102, column: 2)
!16859 = !DILocalVariable(name: "ticks", scope: !16860, file: !2715, line: 107, type: !109)
!16860 = distinct !DILexicalBlock(scope: !16861, file: !2715, line: 106, column: 39)
!16861 = distinct !DILexicalBlock(scope: !16857, file: !2715, line: 105, column: 7)
!16862 = !DILocalVariable(name: "next_time", scope: !16863, file: !2715, line: 137, type: !220)
!16863 = distinct !DILexicalBlock(scope: !16864, file: !2715, line: 127, column: 22)
!16864 = distinct !DILexicalBlock(scope: !16857, file: !2715, line: 127, column: 7)
!16865 = !DILocation(line: 0, scope: !16838)
!16866 = !DILocation(line: 91, column: 6, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16838, file: !2715, line: 91, column: 6)
!16868 = !DILocation(line: 91, column: 6, scope: !16838)
!16869 = !DILocation(line: 100, column: 6, scope: !16838)
!16870 = !DILocation(line: 100, column: 9, scope: !16838)
!16871 = !DILocation(line: 0, scope: !16850)
!16872 = !DILocalVariable(name: "l", arg: 1, scope: !16873, file: !436, line: 136, type: !16876)
!16873 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !16874, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !16877)
!16874 = !DISubroutineType(types: !16875)
!16875 = !{!16851, !16876}
!16876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 32)
!16877 = !{!16872, !16878}
!16878 = !DILocalVariable(name: "k", scope: !16873, file: !436, line: 139, type: !16851)
!16879 = !DILocation(line: 0, scope: !16873, inlinedAt: !16880)
!16880 = distinct !DILocation(line: 102, column: 2, scope: !16850)
!16881 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !16886)
!16882 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !16883)
!16883 = !{!16884, !16885}
!16884 = !DILocalVariable(name: "key", scope: !16882, file: !4055, line: 44, type: !32)
!16885 = !DILocalVariable(name: "tmp", scope: !16882, file: !4055, line: 53, type: !32)
!16886 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !16880)
!16887 = !{i64 1671771}
!16888 = !DILocation(line: 0, scope: !16882, inlinedAt: !16886)
!16889 = !DILocation(line: 106, column: 33, scope: !16861)
!16890 = !DILocation(line: 105, column: 7, scope: !16857)
!16891 = !DILocation(line: 107, column: 50, scope: !16860)
!16892 = !DILocation(line: 107, column: 48, scope: !16860)
!16893 = !DILocation(line: 0, scope: !16860)
!16894 = !DILocation(line: 109, column: 17, scope: !16860)
!16895 = !DILocation(line: 110, column: 3, scope: !16860)
!16896 = !DILocation(line: 111, column: 31, scope: !16897)
!16897 = distinct !DILexicalBlock(scope: !16861, file: !2715, line: 110, column: 10)
!16898 = !DILocation(line: 111, column: 37, scope: !16897)
!16899 = !DILocation(line: 111, column: 35, scope: !16897)
!16900 = !DILocation(line: 0, scope: !16861)
!16901 = !DILocation(line: 109, column: 8, scope: !16860)
!16902 = !DILocation(line: 109, column: 15, scope: !16860)
!16903 = !DILocation(line: 114, column: 12, scope: !16904)
!16904 = distinct !DILexicalBlock(scope: !16857, file: !2715, line: 114, column: 3)
!16905 = !DILocation(line: 0, scope: !16857)
!16906 = !DILocation(line: 114, column: 3, scope: !16904)
!16907 = !DILocation(line: 115, column: 24, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16909, file: !2715, line: 115, column: 8)
!16909 = distinct !DILexicalBlock(scope: !16910, file: !2715, line: 114, column: 45)
!16910 = distinct !DILexicalBlock(scope: !16904, file: !2715, line: 114, column: 3)
!16911 = !DILocation(line: 115, column: 11, scope: !16908)
!16912 = !DILocation(line: 115, column: 18, scope: !16908)
!16913 = !DILocation(line: 115, column: 8, scope: !16909)
!16914 = !DILocation(line: 116, column: 15, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16908, file: !2715, line: 115, column: 32)
!16916 = !DILocation(line: 117, column: 26, scope: !16915)
!16917 = !DILocation(line: 117, column: 37, scope: !16915)
!16918 = !DILocation(line: 117, column: 5, scope: !16915)
!16919 = !DILocation(line: 123, column: 7, scope: !16857)
!16920 = !DILocation(line: 120, column: 15, scope: !16909)
!16921 = !DILocation(line: 114, column: 36, scope: !16910)
!16922 = distinct !{!16922, !16906, !16923}
!16923 = !DILocation(line: 121, column: 3, scope: !16904)
!16924 = !DILocation(line: 124, column: 41, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16926, file: !2715, line: 123, column: 18)
!16926 = distinct !DILexicalBlock(scope: !16857, file: !2715, line: 123, column: 7)
!16927 = !DILocation(line: 124, column: 4, scope: !16925)
!16928 = !DILocation(line: 125, column: 3, scope: !16925)
!16929 = !DILocation(line: 127, column: 13, scope: !16864)
!16930 = !DILocation(line: 127, column: 10, scope: !16864)
!16931 = !DILocation(line: 127, column: 7, scope: !16857)
!16932 = !DILocation(line: 137, column: 24, scope: !16863)
!16933 = !DILocation(line: 0, scope: !16863)
!16934 = !DILocation(line: 139, column: 18, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16863, file: !2715, line: 139, column: 8)
!16936 = !DILocation(line: 139, column: 23, scope: !16935)
!16937 = !DILocation(line: 141, column: 5, scope: !16938)
!16938 = distinct !DILexicalBlock(scope: !16935, file: !2715, line: 140, column: 48)
!16939 = !DILocation(line: 142, column: 4, scope: !16938)
!16940 = !DILocalVariable(name: "key", arg: 2, scope: !16941, file: !436, line: 190, type: !16851)
!16941 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !16942, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !16944)
!16942 = !DISubroutineType(types: !16943)
!16943 = !{null, !16876, !16851}
!16944 = !{!16945, !16940}
!16945 = !DILocalVariable(name: "l", arg: 1, scope: !16941, file: !436, line: 189, type: !16876)
!16946 = !DILocation(line: 0, scope: !16941, inlinedAt: !16947)
!16947 = distinct !DILocation(line: 102, column: 2, scope: !16858)
!16948 = !DILocalVariable(name: "key", arg: 1, scope: !16949, file: !4055, line: 84, type: !32)
!16949 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !16950)
!16950 = !{!16948}
!16951 = !DILocation(line: 0, scope: !16949, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !16947)
!16953 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !16952)
!16954 = !{i64 1672588}
!16955 = !DILocation(line: 148, column: 1, scope: !16838)
!16956 = distinct !DISubprogram(name: "elapsed", scope: !2715, file: !2715, line: 62, type: !16957, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !437)
!16957 = !DISubroutineType(types: !16958)
!16958 = !{!220}
!16959 = !DILocation(line: 64, column: 9, scope: !16956)
!16960 = !DILocation(line: 64, column: 28, scope: !16956)
!16961 = !DILocation(line: 64, column: 35, scope: !16956)
!16962 = !DILocation(line: 64, column: 2, scope: !16956)
!16963 = distinct !DISubprogram(name: "first", scope: !2715, file: !2715, line: 39, type: !16964, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !16966)
!16964 = !DISubroutineType(types: !16965)
!16965 = !{!2688}
!16966 = !{!16967}
!16967 = !DILocalVariable(name: "t", scope: !16963, file: !2715, line: 41, type: !16968)
!16968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 32)
!16969 = !DILocation(line: 41, column: 19, scope: !16963)
!16970 = !DILocation(line: 0, scope: !16963)
!16971 = !DILocation(line: 43, column: 9, scope: !16963)
!16972 = !DILocation(line: 43, column: 2, scope: !16963)
!16973 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !16974, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !16976)
!16974 = !DISubroutineType(types: !16975)
!16975 = !{null, !16968, !16968}
!16976 = !{!16977, !16978, !16979}
!16977 = !DILocalVariable(name: "successor", arg: 1, scope: !16973, file: !367, line: 443, type: !16968)
!16978 = !DILocalVariable(name: "node", arg: 2, scope: !16973, file: !367, line: 443, type: !16968)
!16979 = !DILocalVariable(name: "prev", scope: !16973, file: !367, line: 445, type: !16980)
!16980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16968)
!16981 = !DILocation(line: 0, scope: !16973)
!16982 = !DILocation(line: 445, column: 39, scope: !16973)
!16983 = !DILocation(line: 447, column: 8, scope: !16973)
!16984 = !DILocation(line: 447, column: 13, scope: !16973)
!16985 = !DILocation(line: 448, column: 8, scope: !16973)
!16986 = !DILocation(line: 448, column: 13, scope: !16973)
!16987 = !DILocation(line: 449, column: 8, scope: !16973)
!16988 = !DILocation(line: 449, column: 13, scope: !16973)
!16989 = !DILocation(line: 450, column: 18, scope: !16973)
!16990 = !DILocation(line: 451, column: 1, scope: !16973)
!16991 = distinct !DISubprogram(name: "next", scope: !2715, file: !2715, line: 46, type: !16992, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !16994)
!16992 = !DISubroutineType(types: !16993)
!16993 = !{!2688, !2688}
!16994 = !{!16995, !16996}
!16995 = !DILocalVariable(name: "t", arg: 1, scope: !16991, file: !2715, line: 46, type: !2688)
!16996 = !DILocalVariable(name: "n", scope: !16991, file: !2715, line: 48, type: !16968)
!16997 = !DILocation(line: 0, scope: !16991)
!16998 = !DILocation(line: 48, column: 58, scope: !16991)
!16999 = !DILocation(line: 48, column: 19, scope: !16991)
!17000 = !DILocation(line: 50, column: 9, scope: !16991)
!17001 = !DILocation(line: 50, column: 2, scope: !16991)
!17002 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !17003, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17006)
!17003 = !DISubroutineType(types: !17004)
!17004 = !{null, !17005, !16968}
!17005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 32)
!17006 = !{!17007, !17008, !17009}
!17007 = !DILocalVariable(name: "list", arg: 1, scope: !17002, file: !367, line: 404, type: !17005)
!17008 = !DILocalVariable(name: "node", arg: 2, scope: !17002, file: !367, line: 404, type: !16968)
!17009 = !DILocalVariable(name: "tail", scope: !17002, file: !367, line: 406, type: !16980)
!17010 = !DILocation(line: 0, scope: !17002)
!17011 = !DILocation(line: 406, column: 34, scope: !17002)
!17012 = !DILocation(line: 408, column: 8, scope: !17002)
!17013 = !DILocation(line: 408, column: 13, scope: !17002)
!17014 = !DILocation(line: 409, column: 8, scope: !17002)
!17015 = !DILocation(line: 409, column: 13, scope: !17002)
!17016 = !DILocation(line: 411, column: 8, scope: !17002)
!17017 = !DILocation(line: 411, column: 13, scope: !17002)
!17018 = !DILocation(line: 412, column: 13, scope: !17002)
!17019 = !DILocation(line: 413, column: 1, scope: !17002)
!17020 = distinct !DISubprogram(name: "next_timeout", scope: !2715, file: !2715, line: 67, type: !16957, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17021)
!17021 = !{!17022, !17023, !17024}
!17022 = !DILocalVariable(name: "to", scope: !17020, file: !2715, line: 69, type: !2688)
!17023 = !DILocalVariable(name: "ticks_elapsed", scope: !17020, file: !2715, line: 70, type: !220)
!17024 = !DILocalVariable(name: "ret", scope: !17020, file: !2715, line: 71, type: !220)
!17025 = !DILocation(line: 69, column: 24, scope: !17020)
!17026 = !DILocation(line: 0, scope: !17020)
!17027 = !DILocation(line: 70, column: 26, scope: !17020)
!17028 = !DILocation(line: 73, column: 10, scope: !17029)
!17029 = distinct !DILexicalBlock(scope: !17020, file: !2715, line: 73, column: 6)
!17030 = !DILocation(line: 73, column: 19, scope: !17029)
!17031 = !DILocation(line: 74, column: 21, scope: !17029)
!17032 = !DILocation(line: 74, column: 30, scope: !17029)
!17033 = !DILocation(line: 74, column: 28, scope: !17029)
!17034 = !DILocation(line: 74, column: 45, scope: !17029)
!17035 = !DILocation(line: 73, column: 6, scope: !17020)
!17036 = !DILocation(line: 77, column: 9, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17029, file: !2715, line: 76, column: 9)
!17038 = !DILocation(line: 0, scope: !17029)
!17039 = !DILocation(line: 81, column: 20, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17020, file: !2715, line: 81, column: 6)
!17041 = !DILocation(line: 81, column: 6, scope: !17040)
!17042 = !DILocation(line: 81, column: 32, scope: !17040)
!17043 = !DILocation(line: 85, column: 2, scope: !17020)
!17044 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !17045, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17047)
!17045 = !DISubroutineType(types: !17046)
!17046 = !{!16968, !17005, !16968}
!17047 = !{!17048, !17049}
!17048 = !DILocalVariable(name: "list", arg: 1, scope: !17044, file: !367, line: 341, type: !17005)
!17049 = !DILocalVariable(name: "node", arg: 2, scope: !17044, file: !367, line: 342, type: !16968)
!17050 = !DILocation(line: 0, scope: !17044)
!17051 = !DILocation(line: 344, column: 15, scope: !17044)
!17052 = !DILocation(line: 344, column: 9, scope: !17044)
!17053 = !DILocation(line: 344, column: 26, scope: !17044)
!17054 = !DILocation(line: 344, column: 2, scope: !17044)
!17055 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !17045, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17056)
!17056 = !{!17057, !17058}
!17057 = !DILocalVariable(name: "list", arg: 1, scope: !17055, file: !367, line: 325, type: !17005)
!17058 = !DILocalVariable(name: "node", arg: 2, scope: !17055, file: !367, line: 326, type: !16968)
!17059 = !DILocation(line: 0, scope: !17055)
!17060 = !DILocation(line: 328, column: 24, scope: !17055)
!17061 = !DILocation(line: 328, column: 15, scope: !17055)
!17062 = !DILocation(line: 328, column: 9, scope: !17055)
!17063 = !DILocation(line: 328, column: 45, scope: !17055)
!17064 = !DILocation(line: 328, column: 2, scope: !17055)
!17065 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17066, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17068)
!17066 = !DISubroutineType(types: !17067)
!17067 = !{!16968, !17005}
!17068 = !{!17069}
!17069 = !DILocalVariable(name: "list", arg: 1, scope: !17065, file: !367, line: 294, type: !17005)
!17070 = !DILocation(line: 0, scope: !17065)
!17071 = !DILocation(line: 296, column: 9, scope: !17065)
!17072 = !DILocation(line: 296, column: 2, scope: !17065)
!17073 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17074, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17076)
!17074 = !DISubroutineType(types: !17075)
!17075 = !{!422, !17005}
!17076 = !{!17077}
!17077 = !DILocalVariable(name: "list", arg: 1, scope: !17073, file: !367, line: 266, type: !17005)
!17078 = !DILocation(line: 0, scope: !17073)
!17079 = !DILocation(line: 268, column: 15, scope: !17073)
!17080 = !DILocation(line: 268, column: 20, scope: !17073)
!17081 = !DILocation(line: 268, column: 2, scope: !17073)
!17082 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2715, file: !2715, line: 150, type: !17083, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17085)
!17083 = !DISubroutineType(types: !17084)
!17084 = !{!108, !2688}
!17085 = !{!17086, !17087, !17088, !17090}
!17086 = !DILocalVariable(name: "to", arg: 1, scope: !17082, file: !2715, line: 150, type: !2688)
!17087 = !DILocalVariable(name: "ret", scope: !17082, file: !2715, line: 152, type: !108)
!17088 = !DILocalVariable(name: "__i", scope: !17089, file: !2715, line: 154, type: !16851)
!17089 = distinct !DILexicalBlock(scope: !17082, file: !2715, line: 154, column: 2)
!17090 = !DILocalVariable(name: "__key", scope: !17089, file: !2715, line: 154, type: !16851)
!17091 = !DILocation(line: 0, scope: !17082)
!17092 = !DILocation(line: 0, scope: !17089)
!17093 = !DILocation(line: 0, scope: !16873, inlinedAt: !17094)
!17094 = distinct !DILocation(line: 154, column: 2, scope: !17089)
!17095 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !17096)
!17096 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !17094)
!17097 = !DILocation(line: 0, scope: !16882, inlinedAt: !17096)
!17098 = !DILocation(line: 155, column: 7, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17100, file: !2715, line: 155, column: 7)
!17100 = distinct !DILexicalBlock(scope: !17101, file: !2715, line: 154, column: 24)
!17101 = distinct !DILexicalBlock(scope: !17089, file: !2715, line: 154, column: 2)
!17102 = !DILocation(line: 155, column: 7, scope: !17100)
!17103 = !DILocation(line: 156, column: 4, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17099, file: !2715, line: 155, column: 39)
!17105 = !DILocation(line: 158, column: 3, scope: !17104)
!17106 = !DILocation(line: 0, scope: !16941, inlinedAt: !17107)
!17107 = distinct !DILocation(line: 154, column: 2, scope: !17101)
!17108 = !DILocation(line: 0, scope: !16949, inlinedAt: !17109)
!17109 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !17107)
!17110 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !17109)
!17111 = !DILocation(line: 161, column: 2, scope: !17082)
!17112 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17113, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17117)
!17113 = !DISubroutineType(types: !17114)
!17114 = !{!422, !17115}
!17115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17116, size: 32)
!17116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2692)
!17117 = !{!17118}
!17118 = !DILocalVariable(name: "node", arg: 1, scope: !17112, file: !367, line: 225, type: !17115)
!17119 = !DILocation(line: 0, scope: !17112)
!17120 = !DILocation(line: 227, column: 15, scope: !17112)
!17121 = !DILocation(line: 227, column: 20, scope: !17112)
!17122 = !DILocation(line: 227, column: 2, scope: !17112)
!17123 = distinct !DISubprogram(name: "remove_timeout", scope: !2715, file: !2715, line: 53, type: !2709, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17124)
!17124 = !{!17125}
!17125 = !DILocalVariable(name: "t", arg: 1, scope: !17123, file: !2715, line: 53, type: !2688)
!17126 = !DILocation(line: 0, scope: !17123)
!17127 = !DILocation(line: 55, column: 6, scope: !17128)
!17128 = distinct !DILexicalBlock(scope: !17123, file: !2715, line: 55, column: 6)
!17129 = !DILocation(line: 55, column: 14, scope: !17128)
!17130 = !DILocation(line: 55, column: 6, scope: !17123)
!17131 = !DILocation(line: 56, column: 25, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17128, file: !2715, line: 55, column: 23)
!17133 = !DILocation(line: 56, column: 12, scope: !17132)
!17134 = !DILocation(line: 56, column: 19, scope: !17132)
!17135 = !DILocation(line: 57, column: 2, scope: !17132)
!17136 = !DILocation(line: 59, column: 23, scope: !17123)
!17137 = !DILocation(line: 59, column: 2, scope: !17123)
!17138 = !DILocation(line: 60, column: 1, scope: !17123)
!17139 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !17140, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17142)
!17140 = !DISubroutineType(types: !17141)
!17141 = !{null, !16968}
!17142 = !{!17143, !17144, !17145}
!17143 = !DILocalVariable(name: "node", arg: 1, scope: !17139, file: !367, line: 496, type: !16968)
!17144 = !DILocalVariable(name: "prev", scope: !17139, file: !367, line: 498, type: !16980)
!17145 = !DILocalVariable(name: "next", scope: !17139, file: !367, line: 499, type: !16980)
!17146 = !DILocation(line: 0, scope: !17139)
!17147 = !DILocation(line: 498, column: 34, scope: !17139)
!17148 = !DILocation(line: 499, column: 34, scope: !17139)
!17149 = !DILocation(line: 501, column: 8, scope: !17139)
!17150 = !DILocation(line: 501, column: 13, scope: !17139)
!17151 = !DILocation(line: 502, column: 8, scope: !17139)
!17152 = !DILocation(line: 502, column: 13, scope: !17139)
!17153 = !DILocation(line: 503, column: 2, scope: !17139)
!17154 = !DILocation(line: 504, column: 1, scope: !17139)
!17155 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17140, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17156)
!17156 = !{!17157}
!17157 = !DILocalVariable(name: "node", arg: 1, scope: !17155, file: !367, line: 211, type: !16968)
!17158 = !DILocation(line: 0, scope: !17155)
!17159 = !DILocation(line: 213, column: 8, scope: !17155)
!17160 = !DILocation(line: 213, column: 13, scope: !17155)
!17161 = !DILocation(line: 214, column: 8, scope: !17155)
!17162 = !DILocation(line: 214, column: 13, scope: !17155)
!17163 = !DILocation(line: 215, column: 1, scope: !17155)
!17164 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2715, file: !2715, line: 183, type: !17165, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17169)
!17165 = !DISubroutineType(types: !17166)
!17166 = !{!109, !17167}
!17167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17168, size: 32)
!17168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2689)
!17169 = !{!17170, !17171, !17172, !17174}
!17170 = !DILocalVariable(name: "timeout", arg: 1, scope: !17164, file: !2715, line: 183, type: !17167)
!17171 = !DILocalVariable(name: "ticks", scope: !17164, file: !2715, line: 185, type: !109)
!17172 = !DILocalVariable(name: "__i", scope: !17173, file: !2715, line: 187, type: !16851)
!17173 = distinct !DILexicalBlock(scope: !17164, file: !2715, line: 187, column: 2)
!17174 = !DILocalVariable(name: "__key", scope: !17173, file: !2715, line: 187, type: !16851)
!17175 = !DILocation(line: 0, scope: !17164)
!17176 = !DILocation(line: 0, scope: !17173)
!17177 = !DILocation(line: 0, scope: !16873, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 187, column: 2, scope: !17173)
!17179 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !17178)
!17181 = !DILocation(line: 0, scope: !16882, inlinedAt: !17180)
!17182 = !DILocation(line: 188, column: 11, scope: !17183)
!17183 = distinct !DILexicalBlock(scope: !17184, file: !2715, line: 187, column: 24)
!17184 = distinct !DILexicalBlock(scope: !17173, file: !2715, line: 187, column: 2)
!17185 = !DILocation(line: 0, scope: !16941, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 187, column: 2, scope: !17184)
!17187 = !DILocation(line: 0, scope: !16949, inlinedAt: !17188)
!17188 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !17186)
!17189 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !17188)
!17190 = !DILocation(line: 191, column: 2, scope: !17164)
!17191 = distinct !DISubprogram(name: "timeout_rem", scope: !2715, file: !2715, line: 165, type: !17165, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17192)
!17192 = !{!17193, !17194, !17195}
!17193 = !DILocalVariable(name: "timeout", arg: 1, scope: !17191, file: !2715, line: 165, type: !17167)
!17194 = !DILocalVariable(name: "ticks", scope: !17191, file: !2715, line: 167, type: !109)
!17195 = !DILocalVariable(name: "t", scope: !17196, file: !2715, line: 173, type: !2688)
!17196 = distinct !DILexicalBlock(scope: !17191, file: !2715, line: 173, column: 2)
!17197 = !DILocation(line: 0, scope: !17191)
!17198 = !DILocation(line: 169, column: 6, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17191, file: !2715, line: 169, column: 6)
!17200 = !DILocation(line: 169, column: 6, scope: !17191)
!17201 = !DILocation(line: 173, column: 28, scope: !17196)
!17202 = !DILocation(line: 0, scope: !17196)
!17203 = !DILocation(line: 173, column: 39, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17196, file: !2715, line: 173, column: 2)
!17205 = !DILocation(line: 173, column: 2, scope: !17196)
!17206 = !DILocation(line: 174, column: 15, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17204, file: !2715, line: 173, column: 61)
!17208 = !DILocation(line: 174, column: 9, scope: !17207)
!17209 = !DILocation(line: 175, column: 15, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17207, file: !2715, line: 175, column: 7)
!17211 = !DILocation(line: 175, column: 7, scope: !17207)
!17212 = !DILocation(line: 173, column: 52, scope: !17204)
!17213 = distinct !{!17213, !17205, !17214}
!17214 = !DILocation(line: 178, column: 2, scope: !17196)
!17215 = !DILocation(line: 180, column: 17, scope: !17191)
!17216 = !DILocation(line: 180, column: 15, scope: !17191)
!17217 = !DILocation(line: 180, column: 2, scope: !17191)
!17218 = !DILocation(line: 181, column: 1, scope: !17191)
!17219 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14536, file: !14536, line: 35, type: !17220, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17222)
!17220 = !DISubroutineType(types: !17221)
!17221 = !{!422, !17167}
!17222 = !{!17223}
!17223 = !DILocalVariable(name: "to", arg: 1, scope: !17219, file: !14536, line: 35, type: !17167)
!17224 = !DILocation(line: 0, scope: !17219)
!17225 = !DILocation(line: 37, column: 35, scope: !17219)
!17226 = !DILocation(line: 37, column: 10, scope: !17219)
!17227 = !DILocation(line: 37, column: 9, scope: !17219)
!17228 = !DILocation(line: 37, column: 2, scope: !17219)
!17229 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2715, file: !2715, line: 194, type: !17165, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17230)
!17230 = !{!17231, !17232, !17233, !17235}
!17231 = !DILocalVariable(name: "timeout", arg: 1, scope: !17229, file: !2715, line: 194, type: !17167)
!17232 = !DILocalVariable(name: "ticks", scope: !17229, file: !2715, line: 196, type: !109)
!17233 = !DILocalVariable(name: "__i", scope: !17234, file: !2715, line: 198, type: !16851)
!17234 = distinct !DILexicalBlock(scope: !17229, file: !2715, line: 198, column: 2)
!17235 = !DILocalVariable(name: "__key", scope: !17234, file: !2715, line: 198, type: !16851)
!17236 = !DILocation(line: 0, scope: !17229)
!17237 = !DILocation(line: 0, scope: !17234)
!17238 = !DILocation(line: 0, scope: !16873, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 198, column: 2, scope: !17234)
!17240 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !17239)
!17242 = !DILocation(line: 0, scope: !16882, inlinedAt: !17241)
!17243 = !DILocation(line: 199, column: 11, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17245, file: !2715, line: 198, column: 24)
!17245 = distinct !DILexicalBlock(scope: !17234, file: !2715, line: 198, column: 2)
!17246 = !DILocation(line: 199, column: 23, scope: !17244)
!17247 = !DILocation(line: 0, scope: !16941, inlinedAt: !17248)
!17248 = distinct !DILocation(line: 198, column: 2, scope: !17245)
!17249 = !DILocation(line: 0, scope: !16949, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !17248)
!17251 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !17250)
!17252 = !DILocation(line: 199, column: 21, scope: !17244)
!17253 = !DILocation(line: 202, column: 2, scope: !17229)
!17254 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2715, file: !2715, line: 205, type: !16957, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17255)
!17255 = !{!17256, !17257, !17259}
!17256 = !DILocalVariable(name: "ret", scope: !17254, file: !2715, line: 207, type: !220)
!17257 = !DILocalVariable(name: "__i", scope: !17258, file: !2715, line: 209, type: !16851)
!17258 = distinct !DILexicalBlock(scope: !17254, file: !2715, line: 209, column: 2)
!17259 = !DILocalVariable(name: "__key", scope: !17258, file: !2715, line: 209, type: !16851)
!17260 = !DILocation(line: 0, scope: !17254)
!17261 = !DILocation(line: 0, scope: !17258)
!17262 = !DILocation(line: 0, scope: !16873, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 209, column: 2, scope: !17258)
!17264 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !17265)
!17265 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !17263)
!17266 = !DILocation(line: 0, scope: !16882, inlinedAt: !17265)
!17267 = !DILocation(line: 210, column: 9, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17269, file: !2715, line: 209, column: 24)
!17269 = distinct !DILexicalBlock(scope: !17258, file: !2715, line: 209, column: 2)
!17270 = !DILocation(line: 0, scope: !16941, inlinedAt: !17271)
!17271 = distinct !DILocation(line: 209, column: 2, scope: !17269)
!17272 = !DILocation(line: 0, scope: !16949, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !17271)
!17274 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !17273)
!17275 = !DILocation(line: 212, column: 2, scope: !17254)
!17276 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2715, file: !2715, line: 215, type: !11919, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17277)
!17277 = !{!17278, !17279, !17280, !17282, !17283, !17286, !17287}
!17278 = !DILocalVariable(name: "ticks", arg: 1, scope: !17276, file: !2715, line: 215, type: !220)
!17279 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17276, file: !2715, line: 215, type: !422)
!17280 = !DILocalVariable(name: "__i", scope: !17281, file: !2715, line: 217, type: !16851)
!17281 = distinct !DILexicalBlock(scope: !17276, file: !2715, line: 217, column: 2)
!17282 = !DILocalVariable(name: "__key", scope: !17281, file: !2715, line: 217, type: !16851)
!17283 = !DILocalVariable(name: "next_to", scope: !17284, file: !2715, line: 218, type: !108)
!17284 = distinct !DILexicalBlock(scope: !17285, file: !2715, line: 217, column: 24)
!17285 = distinct !DILexicalBlock(scope: !17281, file: !2715, line: 217, column: 2)
!17286 = !DILocalVariable(name: "sooner", scope: !17284, file: !2715, line: 219, type: !422)
!17287 = !DILocalVariable(name: "imminent", scope: !17284, file: !2715, line: 221, type: !422)
!17288 = !DILocation(line: 0, scope: !17276)
!17289 = !DILocation(line: 0, scope: !17281)
!17290 = !DILocation(line: 0, scope: !16873, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 217, column: 2, scope: !17281)
!17292 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !17293)
!17293 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !17291)
!17294 = !DILocation(line: 0, scope: !16882, inlinedAt: !17293)
!17295 = !DILocation(line: 218, column: 17, scope: !17284)
!17296 = !DILocation(line: 0, scope: !17284)
!17297 = !DILocation(line: 221, column: 27, scope: !17284)
!17298 = !DILocation(line: 233, column: 17, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17284, file: !2715, line: 233, column: 7)
!17300 = !DILocation(line: 234, column: 26, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17299, file: !2715, line: 233, column: 56)
!17302 = !DILocation(line: 234, column: 4, scope: !17301)
!17303 = !DILocation(line: 235, column: 3, scope: !17301)
!17304 = !DILocation(line: 0, scope: !16941, inlinedAt: !17305)
!17305 = distinct !DILocation(line: 217, column: 2, scope: !17285)
!17306 = !DILocation(line: 0, scope: !16949, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !17305)
!17308 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !17307)
!17309 = !DILocation(line: 237, column: 1, scope: !17276)
!17310 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2715, file: !2715, line: 239, type: !17311, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17313)
!17311 = !DISubroutineType(types: !17312)
!17312 = !{null, !220}
!17313 = !{!17314, !17315, !17316, !17318}
!17314 = !DILocalVariable(name: "ticks", arg: 1, scope: !17310, file: !2715, line: 239, type: !220)
!17315 = !DILocalVariable(name: "key", scope: !17310, file: !2715, line: 245, type: !16851)
!17316 = !DILocalVariable(name: "t", scope: !17317, file: !2715, line: 262, type: !2688)
!17317 = distinct !DILexicalBlock(scope: !17310, file: !2715, line: 261, column: 67)
!17318 = !DILocalVariable(name: "dt", scope: !17317, file: !2715, line: 263, type: !108)
!17319 = !DILocation(line: 0, scope: !17310)
!17320 = !DILocation(line: 242, column: 2, scope: !17310)
!17321 = !DILocation(line: 0, scope: !16873, inlinedAt: !17322)
!17322 = distinct !DILocation(line: 245, column: 25, scope: !17310)
!17323 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !17324)
!17324 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !17322)
!17325 = !DILocation(line: 0, scope: !16882, inlinedAt: !17324)
!17326 = !DILocation(line: 261, column: 9, scope: !17310)
!17327 = !DILocation(line: 261, column: 17, scope: !17310)
!17328 = !DILocation(line: 261, column: 25, scope: !17310)
!17329 = !DILocation(line: 261, column: 37, scope: !17310)
!17330 = !DILocation(line: 261, column: 47, scope: !17310)
!17331 = !DILocation(line: 261, column: 44, scope: !17310)
!17332 = !DILocation(line: 261, column: 2, scope: !17310)
!17333 = !DILocation(line: 0, scope: !17317)
!17334 = !DILocation(line: 263, column: 12, scope: !17317)
!17335 = !DILocation(line: 265, column: 16, scope: !17317)
!17336 = !DILocation(line: 265, column: 13, scope: !17317)
!17337 = !DILocation(line: 266, column: 13, scope: !17317)
!17338 = !DILocation(line: 267, column: 3, scope: !17317)
!17339 = !DILocation(line: 0, scope: !16941, inlinedAt: !17340)
!17340 = distinct !DILocation(line: 269, column: 3, scope: !17317)
!17341 = !DILocation(line: 0, scope: !16949, inlinedAt: !17342)
!17342 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !17340)
!17343 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !17342)
!17344 = !DILocation(line: 270, column: 6, scope: !17317)
!17345 = !DILocation(line: 270, column: 3, scope: !17317)
!17346 = !DILocation(line: 0, scope: !16873, inlinedAt: !17347)
!17347 = distinct !DILocation(line: 271, column: 9, scope: !17317)
!17348 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !17349)
!17349 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !17347)
!17350 = !DILocation(line: 0, scope: !16882, inlinedAt: !17349)
!17351 = !DILocation(line: 272, column: 22, scope: !17317)
!17352 = distinct !{!17352, !17332, !17353}
!17353 = !DILocation(line: 273, column: 2, scope: !17310)
!17354 = !DILocation(line: 276, column: 19, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17356, file: !2715, line: 275, column: 23)
!17356 = distinct !DILexicalBlock(scope: !17310, file: !2715, line: 275, column: 6)
!17357 = !DILocation(line: 277, column: 2, scope: !17355)
!17358 = !DILocation(line: 279, column: 15, scope: !17310)
!17359 = !DILocation(line: 279, column: 12, scope: !17310)
!17360 = !DILocation(line: 280, column: 21, scope: !17310)
!17361 = !DILocation(line: 282, column: 24, scope: !17310)
!17362 = !DILocation(line: 282, column: 2, scope: !17310)
!17363 = !DILocation(line: 0, scope: !16941, inlinedAt: !17364)
!17364 = distinct !DILocation(line: 284, column: 2, scope: !17310)
!17365 = !DILocation(line: 0, scope: !16949, inlinedAt: !17366)
!17366 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !17364)
!17367 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !17366)
!17368 = !DILocation(line: 285, column: 1, scope: !17310)
!17369 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2715, file: !2715, line: 287, type: !17370, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17372)
!17370 = !DISubroutineType(types: !17371)
!17371 = !{!111}
!17372 = !{!17373, !17374, !17376}
!17373 = !DILocalVariable(name: "t", scope: !17369, file: !2715, line: 289, type: !114)
!17374 = !DILocalVariable(name: "__i", scope: !17375, file: !2715, line: 291, type: !16851)
!17375 = distinct !DILexicalBlock(scope: !17369, file: !2715, line: 291, column: 2)
!17376 = !DILocalVariable(name: "__key", scope: !17375, file: !2715, line: 291, type: !16851)
!17377 = !DILocation(line: 0, scope: !17369)
!17378 = !DILocation(line: 0, scope: !17375)
!17379 = !DILocation(line: 0, scope: !16873, inlinedAt: !17380)
!17380 = distinct !DILocation(line: 291, column: 2, scope: !17375)
!17381 = !DILocation(line: 55, column: 2, scope: !16882, inlinedAt: !17382)
!17382 = distinct !DILocation(line: 145, column: 10, scope: !16873, inlinedAt: !17380)
!17383 = !DILocation(line: 0, scope: !16882, inlinedAt: !17382)
!17384 = !DILocation(line: 292, column: 7, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17386, file: !2715, line: 291, column: 24)
!17386 = distinct !DILexicalBlock(scope: !17375, file: !2715, line: 291, column: 2)
!17387 = !DILocation(line: 292, column: 19, scope: !17385)
!17388 = !DILocation(line: 0, scope: !16941, inlinedAt: !17389)
!17389 = distinct !DILocation(line: 291, column: 2, scope: !17386)
!17390 = !DILocation(line: 0, scope: !16949, inlinedAt: !17391)
!17391 = distinct !DILocation(line: 215, column: 2, scope: !16941, inlinedAt: !17389)
!17392 = !DILocation(line: 95, column: 2, scope: !16949, inlinedAt: !17391)
!17393 = !DILocation(line: 292, column: 17, scope: !17385)
!17394 = !DILocation(line: 294, column: 2, scope: !17369)
!17395 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2715, file: !2715, line: 297, type: !8003, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !437)
!17396 = !DILocation(line: 300, column: 19, scope: !17395)
!17397 = !DILocation(line: 300, column: 9, scope: !17395)
!17398 = !DILocation(line: 300, column: 2, scope: !17395)
!17399 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2715, file: !2715, line: 306, type: !17370, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !437)
!17400 = !DILocation(line: 308, column: 9, scope: !17399)
!17401 = !DILocation(line: 308, column: 2, scope: !17399)
!17402 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2715, file: !2715, line: 319, type: !6721, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17403)
!17403 = !{!17404, !17405, !17406, !17407}
!17404 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17402, file: !2715, line: 319, type: !113)
!17405 = !DILocalVariable(name: "start_cycles", scope: !17402, file: !2715, line: 328, type: !113)
!17406 = !DILocalVariable(name: "cycles_to_wait", scope: !17402, file: !2715, line: 331, type: !113)
!17407 = !DILocalVariable(name: "current_cycles", scope: !17408, file: !2715, line: 338, type: !113)
!17408 = distinct !DILexicalBlock(scope: !17409, file: !2715, line: 337, column: 11)
!17409 = distinct !DILexicalBlock(scope: !17410, file: !2715, line: 337, column: 2)
!17410 = distinct !DILexicalBlock(scope: !17402, file: !2715, line: 337, column: 2)
!17411 = !DILocation(line: 0, scope: !17402)
!17412 = !DILocation(line: 322, column: 19, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17402, file: !2715, line: 322, column: 6)
!17414 = !DILocation(line: 322, column: 6, scope: !17402)
!17415 = !DILocation(line: 328, column: 26, scope: !17402)
!17416 = !DILocation(line: 333, column: 43, scope: !17402)
!17417 = !DILocation(line: 337, column: 2, scope: !17402)
!17418 = !DILocation(line: 338, column: 29, scope: !17408)
!17419 = !DILocation(line: 0, scope: !17408)
!17420 = !DILocation(line: 341, column: 23, scope: !17421)
!17421 = distinct !DILexicalBlock(scope: !17408, file: !2715, line: 341, column: 7)
!17422 = !DILocation(line: 341, column: 39, scope: !17421)
!17423 = !DILocation(line: 349, column: 1, scope: !17402)
!17424 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !359, file: !359, line: 1675, type: !8003, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !437)
!17425 = !DILocation(line: 1677, column: 9, scope: !17424)
!17426 = !DILocation(line: 1677, column: 2, scope: !17424)
!17427 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17428, file: !17428, line: 24, type: !8003, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !437)
!17428 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17429 = !DILocation(line: 26, column: 9, scope: !17427)
!17430 = !DILocation(line: 26, column: 2, scope: !17427)
!17431 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2715, file: !2715, line: 364, type: !17432, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !17434)
!17432 = !DISubroutineType(types: !17433)
!17433 = !{!114, !16841}
!17434 = !{!17435, !17436}
!17435 = !DILocalVariable(name: "timeout", arg: 1, scope: !17431, file: !2715, line: 364, type: !16841)
!17436 = !DILocalVariable(name: "dt", scope: !17431, file: !2715, line: 366, type: !109)
!17437 = !DILocation(line: 0, scope: !17431)
!17438 = !DILocation(line: 368, column: 6, scope: !17431)
!17439 = !DILocation(line: 371, column: 10, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !17441, file: !2715, line: 370, column: 47)
!17441 = distinct !DILexicalBlock(scope: !17442, file: !2715, line: 370, column: 13)
!17442 = distinct !DILexicalBlock(scope: !17431, file: !2715, line: 368, column: 6)
!17443 = !DILocation(line: 371, column: 3, scope: !17440)
!17444 = !DILocation(line: 376, column: 58, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17446, file: !2715, line: 376, column: 7)
!17446 = distinct !DILexicalBlock(scope: !17441, file: !2715, line: 372, column: 9)
!17447 = !DILocation(line: 376, column: 7, scope: !17446)
!17448 = !DILocation(line: 376, column: 43, scope: !17445)
!17449 = !DILocation(line: 377, column: 4, scope: !17450)
!17450 = distinct !DILexicalBlock(scope: !17445, file: !2715, line: 376, column: 64)
!17451 = !DILocation(line: 379, column: 10, scope: !17446)
!17452 = !DILocation(line: 379, column: 33, scope: !17446)
!17453 = !DILocation(line: 379, column: 31, scope: !17446)
!17454 = !DILocation(line: 379, column: 3, scope: !17446)
!17455 = !DILocation(line: 0, scope: !17442)
!17456 = !DILocation(line: 381, column: 1, scope: !17431)
!17457 = distinct !DISubprogram(name: "z_timer_expiration_handler", scope: !2846, file: !2846, line: 23, type: !2751, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17458)
!17458 = !{!17459, !17460, !17461, !17462, !17467}
!17459 = !DILocalVariable(name: "t", arg: 1, scope: !17457, file: !2846, line: 23, type: !2753)
!17460 = !DILocalVariable(name: "timer", scope: !17457, file: !2846, line: 25, type: !2727)
!17461 = !DILocalVariable(name: "thread", scope: !17457, file: !2846, line: 26, type: !2773)
!17462 = !DILocalVariable(name: "key", scope: !17457, file: !2846, line: 27, type: !17463)
!17463 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !17464)
!17464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !17465)
!17465 = !{!17466}
!17466 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17464, file: !436, line: 33, baseType: !108, size: 32)
!17467 = !DILocalVariable(name: "next", scope: !17468, file: !2846, line: 35, type: !2767)
!17468 = distinct !DILexicalBlock(scope: !17469, file: !2846, line: 34, column: 47)
!17469 = distinct !DILexicalBlock(scope: !17457, file: !2846, line: 33, column: 6)
!17470 = !DILocation(line: 0, scope: !17457)
!17471 = !DILocation(line: 25, column: 26, scope: !17457)
!17472 = !DILocalVariable(name: "l", arg: 1, scope: !17473, file: !436, line: 136, type: !17476)
!17473 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !17474, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17477)
!17474 = !DISubroutineType(types: !17475)
!17475 = !{!17463, !17476}
!17476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 32)
!17477 = !{!17472, !17478}
!17478 = !DILocalVariable(name: "k", scope: !17473, file: !436, line: 139, type: !17463)
!17479 = !DILocation(line: 0, scope: !17473, inlinedAt: !17480)
!17480 = distinct !DILocation(line: 27, column: 25, scope: !17457)
!17481 = !DILocation(line: 55, column: 2, scope: !17482, inlinedAt: !17486)
!17482 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4055, file: !4055, line: 42, type: !4056, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17483)
!17483 = !{!17484, !17485}
!17484 = !DILocalVariable(name: "key", scope: !17482, file: !4055, line: 44, type: !32)
!17485 = !DILocalVariable(name: "tmp", scope: !17482, file: !4055, line: 53, type: !32)
!17486 = distinct !DILocation(line: 145, column: 10, scope: !17473, inlinedAt: !17480)
!17487 = !{i64 1670822}
!17488 = !DILocation(line: 0, scope: !17482, inlinedAt: !17486)
!17489 = !DILocation(line: 33, column: 7, scope: !17469)
!17490 = !DILocation(line: 33, column: 46, scope: !17469)
!17491 = !DILocation(line: 0, scope: !17468)
!17492 = !DILocation(line: 49, column: 10, scope: !17468)
!17493 = !DILocation(line: 52, column: 3, scope: !17468)
!17494 = !DILocation(line: 54, column: 2, scope: !17468)
!17495 = !DILocation(line: 57, column: 9, scope: !17457)
!17496 = !DILocation(line: 57, column: 16, scope: !17457)
!17497 = !DILocation(line: 60, column: 13, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17457, file: !2846, line: 60, column: 6)
!17499 = !DILocation(line: 60, column: 23, scope: !17498)
!17500 = !DILocation(line: 60, column: 6, scope: !17457)
!17501 = !DILocalVariable(name: "key", arg: 2, scope: !17502, file: !436, line: 190, type: !17463)
!17502 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !17503, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17505)
!17503 = !DISubroutineType(types: !17504)
!17504 = !{null, !17476, !17463}
!17505 = !{!17506, !17501}
!17506 = !DILocalVariable(name: "l", arg: 1, scope: !17502, file: !436, line: 189, type: !17476)
!17507 = !DILocation(line: 0, scope: !17502, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 62, column: 3, scope: !17509)
!17509 = distinct !DILexicalBlock(scope: !17498, file: !2846, line: 60, column: 32)
!17510 = !DILocalVariable(name: "key", arg: 1, scope: !17511, file: !4055, line: 84, type: !32)
!17511 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4055, file: !4055, line: 84, type: !4068, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17512)
!17512 = !{!17510}
!17513 = !DILocation(line: 0, scope: !17511, inlinedAt: !17514)
!17514 = distinct !DILocation(line: 215, column: 2, scope: !17502, inlinedAt: !17508)
!17515 = !DILocation(line: 95, column: 2, scope: !17511, inlinedAt: !17514)
!17516 = !{i64 1671639}
!17517 = !DILocation(line: 63, column: 10, scope: !17509)
!17518 = !DILocation(line: 63, column: 3, scope: !17509)
!17519 = !DILocation(line: 0, scope: !17473, inlinedAt: !17520)
!17520 = distinct !DILocation(line: 64, column: 9, scope: !17509)
!17521 = !DILocation(line: 55, column: 2, scope: !17482, inlinedAt: !17522)
!17522 = distinct !DILocation(line: 145, column: 10, scope: !17473, inlinedAt: !17520)
!17523 = !DILocation(line: 0, scope: !17482, inlinedAt: !17522)
!17524 = !DILocation(line: 65, column: 2, scope: !17509)
!17525 = !DILocation(line: 72, column: 32, scope: !17457)
!17526 = !DILocation(line: 72, column: 11, scope: !17457)
!17527 = !DILocation(line: 74, column: 13, scope: !17528)
!17528 = distinct !DILexicalBlock(scope: !17457, file: !2846, line: 74, column: 6)
!17529 = !DILocation(line: 74, column: 6, scope: !17457)
!17530 = !DILocation(line: 0, scope: !17502, inlinedAt: !17531)
!17531 = distinct !DILocation(line: 75, column: 3, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17528, file: !2846, line: 74, column: 22)
!17533 = !DILocation(line: 0, scope: !17511, inlinedAt: !17534)
!17534 = distinct !DILocation(line: 215, column: 2, scope: !17502, inlinedAt: !17531)
!17535 = !DILocation(line: 95, column: 2, scope: !17511, inlinedAt: !17534)
!17536 = !DILocation(line: 76, column: 3, scope: !17532)
!17537 = !DILocation(line: 79, column: 2, scope: !17457)
!17538 = !DILocalVariable(name: "thread", arg: 1, scope: !17539, file: !14162, line: 65, type: !2773)
!17539 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14162, file: !14162, line: 65, type: !17540, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17542)
!17540 = !DISubroutineType(types: !17541)
!17541 = !{null, !2773, !32}
!17542 = !{!17538, !17543}
!17543 = !DILocalVariable(name: "value", arg: 2, scope: !17539, file: !14162, line: 65, type: !32)
!17544 = !DILocation(line: 0, scope: !17539, inlinedAt: !17545)
!17545 = distinct !DILocation(line: 81, column: 2, scope: !17457)
!17546 = !DILocation(line: 67, column: 15, scope: !17539, inlinedAt: !17545)
!17547 = !DILocation(line: 67, column: 33, scope: !17539, inlinedAt: !17545)
!17548 = !DILocation(line: 0, scope: !17502, inlinedAt: !17549)
!17549 = distinct !DILocation(line: 83, column: 2, scope: !17457)
!17550 = !DILocation(line: 0, scope: !17511, inlinedAt: !17551)
!17551 = distinct !DILocation(line: 215, column: 2, scope: !17502, inlinedAt: !17549)
!17552 = !DILocation(line: 95, column: 2, scope: !17511, inlinedAt: !17551)
!17553 = !DILocation(line: 85, column: 2, scope: !17457)
!17554 = !DILocation(line: 86, column: 1, scope: !17457)
!17555 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3777, file: !3777, line: 564, type: !17370, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !437)
!17556 = !DILocation(line: 573, column: 2, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17555, file: !3777, line: 573, column: 2)
!17558 = !{i64 2152237976}
!17559 = !DILocation(line: 574, column: 9, scope: !17555)
!17560 = !DILocation(line: 574, column: 2, scope: !17555)
!17561 = distinct !DISubprogram(name: "z_waitq_head", scope: !14468, file: !14468, line: 52, type: !17562, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17564)
!17562 = !DISubroutineType(types: !17563)
!17563 = !{!2773, !2790}
!17564 = !{!17565}
!17565 = !DILocalVariable(name: "w", arg: 1, scope: !17561, file: !14468, line: 52, type: !2790)
!17566 = !DILocation(line: 0, scope: !17561)
!17567 = !DILocation(line: 54, column: 52, scope: !17561)
!17568 = !DILocation(line: 54, column: 28, scope: !17561)
!17569 = !DILocation(line: 54, column: 9, scope: !17561)
!17570 = !DILocation(line: 54, column: 2, scope: !17561)
!17571 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17572, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17575)
!17572 = !DISubroutineType(types: !17573)
!17573 = !{!2844, !17574}
!17574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 32)
!17575 = !{!17576}
!17576 = !DILocalVariable(name: "list", arg: 1, scope: !17571, file: !367, line: 294, type: !17574)
!17577 = !DILocation(line: 0, scope: !17571)
!17578 = !DILocation(line: 296, column: 9, scope: !17571)
!17579 = !DILocation(line: 296, column: 49, scope: !17571)
!17580 = !DILocation(line: 296, column: 2, scope: !17571)
!17581 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17582, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17584)
!17582 = !DISubroutineType(types: !17583)
!17583 = !{!422, !17574}
!17584 = !{!17585}
!17585 = !DILocalVariable(name: "list", arg: 1, scope: !17581, file: !367, line: 266, type: !17574)
!17586 = !DILocation(line: 0, scope: !17581)
!17587 = !DILocation(line: 268, column: 15, scope: !17581)
!17588 = !DILocation(line: 268, column: 20, scope: !17581)
!17589 = !DILocation(line: 268, column: 2, scope: !17581)
!17590 = distinct !DISubprogram(name: "k_timer_init", scope: !2846, file: !2846, line: 89, type: !17591, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17595)
!17591 = !DISubroutineType(types: !17592)
!17592 = !{null, !2727, !17593, !17594}
!17593 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_expiry_t", file: !359, line: 1381, baseType: !2762)
!17594 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_stop_t", file: !359, line: 1397, baseType: !2762)
!17595 = !{!17596, !17597, !17598}
!17596 = !DILocalVariable(name: "timer", arg: 1, scope: !17590, file: !2846, line: 89, type: !2727)
!17597 = !DILocalVariable(name: "expiry_fn", arg: 2, scope: !17590, file: !2846, line: 90, type: !17593)
!17598 = !DILocalVariable(name: "stop_fn", arg: 3, scope: !17590, file: !2846, line: 91, type: !17594)
!17599 = !DILocation(line: 0, scope: !17590)
!17600 = !DILocation(line: 93, column: 9, scope: !17590)
!17601 = !DILocation(line: 93, column: 19, scope: !17590)
!17602 = !DILocation(line: 94, column: 9, scope: !17590)
!17603 = !DILocation(line: 94, column: 17, scope: !17590)
!17604 = !DILocation(line: 95, column: 9, scope: !17590)
!17605 = !DILocation(line: 95, column: 16, scope: !17590)
!17606 = !DILocation(line: 98, column: 24, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17608, file: !2846, line: 97, column: 41)
!17608 = distinct !DILexicalBlock(scope: !17590, file: !2846, line: 97, column: 6)
!17609 = !DILocation(line: 98, column: 3, scope: !17607)
!17610 = !DILocation(line: 101, column: 25, scope: !17590)
!17611 = !DILocation(line: 101, column: 2, scope: !17590)
!17612 = !DILocation(line: 105, column: 9, scope: !17590)
!17613 = !DILocation(line: 105, column: 19, scope: !17590)
!17614 = !DILocation(line: 108, column: 1, scope: !17590)
!17615 = distinct !DISubprogram(name: "z_waitq_init", scope: !14468, file: !14468, line: 47, type: !17616, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17618)
!17616 = !DISubroutineType(types: !17617)
!17617 = !{null, !2790}
!17618 = !{!17619}
!17619 = !DILocalVariable(name: "w", arg: 1, scope: !17615, file: !14468, line: 47, type: !2790)
!17620 = !DILocation(line: 0, scope: !17615)
!17621 = !DILocation(line: 49, column: 21, scope: !17615)
!17622 = !DILocation(line: 49, column: 2, scope: !17615)
!17623 = !DILocation(line: 50, column: 1, scope: !17615)
!17624 = distinct !DISubprogram(name: "z_init_timeout", scope: !14536, file: !14536, line: 25, type: !2751, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17625)
!17625 = !{!17626}
!17626 = !DILocalVariable(name: "to", arg: 1, scope: !17624, file: !14536, line: 25, type: !2753)
!17627 = !DILocation(line: 0, scope: !17624)
!17628 = !DILocation(line: 27, column: 22, scope: !17624)
!17629 = !DILocation(line: 27, column: 2, scope: !17624)
!17630 = !DILocation(line: 28, column: 1, scope: !17624)
!17631 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17632, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17634)
!17632 = !DISubroutineType(types: !17633)
!17633 = !{null, !2844}
!17634 = !{!17635}
!17635 = !DILocalVariable(name: "node", arg: 1, scope: !17631, file: !367, line: 211, type: !2844)
!17636 = !DILocation(line: 0, scope: !17631)
!17637 = !DILocation(line: 213, column: 8, scope: !17631)
!17638 = !DILocation(line: 213, column: 13, scope: !17631)
!17639 = !DILocation(line: 214, column: 8, scope: !17631)
!17640 = !DILocation(line: 214, column: 13, scope: !17631)
!17641 = !DILocation(line: 215, column: 1, scope: !17631)
!17642 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !17643, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17645)
!17643 = !DISubroutineType(types: !17644)
!17644 = !{null, !17574}
!17645 = !{!17646}
!17646 = !DILocalVariable(name: "list", arg: 1, scope: !17642, file: !367, line: 197, type: !17574)
!17647 = !DILocation(line: 0, scope: !17642)
!17648 = !DILocation(line: 199, column: 8, scope: !17642)
!17649 = !DILocation(line: 199, column: 13, scope: !17642)
!17650 = !DILocation(line: 200, column: 8, scope: !17642)
!17651 = !DILocation(line: 200, column: 13, scope: !17642)
!17652 = !DILocation(line: 201, column: 1, scope: !17642)
!17653 = distinct !DISubprogram(name: "z_impl_k_timer_start", scope: !2846, file: !2846, line: 111, type: !17654, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17656)
!17654 = !DISubroutineType(types: !17655)
!17655 = !{null, !2727, !2767, !2767}
!17656 = !{!17657, !17658, !17659}
!17657 = !DILocalVariable(name: "timer", arg: 1, scope: !17653, file: !2846, line: 111, type: !2727)
!17658 = !DILocalVariable(name: "duration", arg: 2, scope: !17653, file: !2846, line: 111, type: !2767)
!17659 = !DILocalVariable(name: "period", arg: 3, scope: !17653, file: !2846, line: 112, type: !2767)
!17660 = !DILocation(line: 0, scope: !17653)
!17661 = !DILocation(line: 116, column: 6, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17653, file: !2846, line: 116, column: 6)
!17663 = !DILocation(line: 116, column: 6, scope: !17653)
!17664 = !DILocation(line: 133, column: 39, scope: !17665)
!17665 = distinct !DILexicalBlock(scope: !17653, file: !2846, line: 133, column: 6)
!17666 = !DILocation(line: 137, column: 33, scope: !17667)
!17667 = distinct !DILexicalBlock(scope: !17653, file: !2846, line: 137, column: 6)
!17668 = !DILocation(line: 137, column: 6, scope: !17653)
!17669 = !DILocation(line: 141, column: 32, scope: !17653)
!17670 = !DILocation(line: 141, column: 8, scope: !17653)
!17671 = !DILocation(line: 142, column: 18, scope: !17653)
!17672 = !DILocation(line: 143, column: 9, scope: !17653)
!17673 = !DILocation(line: 143, column: 16, scope: !17653)
!17674 = !DILocation(line: 145, column: 2, scope: !17653)
!17675 = !DILocation(line: 147, column: 1, scope: !17653)
!17676 = distinct !DISubprogram(name: "z_impl_k_timer_stop", scope: !2846, file: !2846, line: 160, type: !2763, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17677)
!17677 = !{!17678, !17679, !17680}
!17678 = !DILocalVariable(name: "timer", arg: 1, scope: !17676, file: !2846, line: 160, type: !2727)
!17679 = !DILocalVariable(name: "inactive", scope: !17676, file: !2846, line: 164, type: !422)
!17680 = !DILocalVariable(name: "pending_thread", scope: !17681, file: !2846, line: 175, type: !2773)
!17681 = distinct !DILexicalBlock(scope: !17682, file: !2846, line: 174, column: 41)
!17682 = distinct !DILexicalBlock(scope: !17676, file: !2846, line: 174, column: 6)
!17683 = !DILocation(line: 0, scope: !17676)
!17684 = !DILocation(line: 164, column: 43, scope: !17676)
!17685 = !DILocation(line: 164, column: 19, scope: !17676)
!17686 = !DILocation(line: 164, column: 52, scope: !17676)
!17687 = !DILocation(line: 166, column: 6, scope: !17676)
!17688 = !DILocation(line: 170, column: 13, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17676, file: !2846, line: 170, column: 6)
!17690 = !DILocation(line: 170, column: 21, scope: !17689)
!17691 = !DILocation(line: 170, column: 6, scope: !17676)
!17692 = !DILocation(line: 171, column: 3, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17689, file: !2846, line: 170, column: 30)
!17694 = !DILocation(line: 172, column: 2, scope: !17693)
!17695 = !DILocation(line: 175, column: 66, scope: !17681)
!17696 = !DILocation(line: 175, column: 37, scope: !17681)
!17697 = !DILocation(line: 0, scope: !17681)
!17698 = !DILocation(line: 177, column: 22, scope: !17699)
!17699 = distinct !DILexicalBlock(scope: !17681, file: !2846, line: 177, column: 7)
!17700 = !DILocation(line: 177, column: 7, scope: !17681)
!17701 = !DILocation(line: 178, column: 4, scope: !17702)
!17702 = distinct !DILexicalBlock(scope: !17699, file: !2846, line: 177, column: 31)
!17703 = !DILocation(line: 179, column: 4, scope: !17702)
!17704 = !DILocation(line: 180, column: 3, scope: !17702)
!17705 = !DILocation(line: 182, column: 1, scope: !17676)
!17706 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14142, file: !14142, line: 73, type: !3381, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !437)
!17707 = !DILocation(line: 55, column: 2, scope: !17482, inlinedAt: !17708)
!17708 = distinct !DILocation(line: 75, column: 30, scope: !17706)
!17709 = !DILocation(line: 0, scope: !17482, inlinedAt: !17708)
!17710 = !DILocation(line: 75, column: 9, scope: !17706)
!17711 = !DILocation(line: 76, column: 1, scope: !17706)
!17712 = distinct !DISubprogram(name: "z_impl_k_timer_status_get", scope: !2846, file: !2846, line: 193, type: !17713, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17715)
!17713 = !DISubroutineType(types: !17714)
!17714 = !{!113, !2727}
!17715 = !{!17716, !17717, !17718}
!17716 = !DILocalVariable(name: "timer", arg: 1, scope: !17712, file: !2846, line: 193, type: !2727)
!17717 = !DILocalVariable(name: "key", scope: !17712, file: !2846, line: 195, type: !17463)
!17718 = !DILocalVariable(name: "result", scope: !17712, file: !2846, line: 196, type: !113)
!17719 = !DILocation(line: 0, scope: !17712)
!17720 = !DILocation(line: 0, scope: !17473, inlinedAt: !17721)
!17721 = distinct !DILocation(line: 195, column: 25, scope: !17712)
!17722 = !DILocation(line: 55, column: 2, scope: !17482, inlinedAt: !17723)
!17723 = distinct !DILocation(line: 145, column: 10, scope: !17473, inlinedAt: !17721)
!17724 = !DILocation(line: 0, scope: !17482, inlinedAt: !17723)
!17725 = !DILocation(line: 196, column: 27, scope: !17712)
!17726 = !DILocation(line: 198, column: 16, scope: !17712)
!17727 = !DILocation(line: 0, scope: !17502, inlinedAt: !17728)
!17728 = distinct !DILocation(line: 199, column: 2, scope: !17712)
!17729 = !DILocation(line: 0, scope: !17511, inlinedAt: !17730)
!17730 = distinct !DILocation(line: 215, column: 2, scope: !17502, inlinedAt: !17728)
!17731 = !DILocation(line: 95, column: 2, scope: !17511, inlinedAt: !17730)
!17732 = !DILocation(line: 201, column: 2, scope: !17712)
!17733 = distinct !DISubprogram(name: "z_impl_k_timer_status_sync", scope: !2846, file: !2846, line: 213, type: !17713, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17734)
!17734 = !{!17735, !17736, !17737}
!17735 = !DILocalVariable(name: "timer", arg: 1, scope: !17733, file: !2846, line: 213, type: !2727)
!17736 = !DILocalVariable(name: "key", scope: !17733, file: !2846, line: 241, type: !17463)
!17737 = !DILocalVariable(name: "result", scope: !17733, file: !2846, line: 242, type: !113)
!17738 = !DILocation(line: 0, scope: !17733)
!17739 = !DILocation(line: 0, scope: !17473, inlinedAt: !17740)
!17740 = distinct !DILocation(line: 241, column: 25, scope: !17733)
!17741 = !DILocation(line: 55, column: 2, scope: !17482, inlinedAt: !17742)
!17742 = distinct !DILocation(line: 145, column: 10, scope: !17473, inlinedAt: !17740)
!17743 = !DILocation(line: 0, scope: !17482, inlinedAt: !17742)
!17744 = !DILocation(line: 242, column: 27, scope: !17733)
!17745 = !DILocation(line: 244, column: 13, scope: !17746)
!17746 = distinct !DILexicalBlock(scope: !17733, file: !2846, line: 244, column: 6)
!17747 = !DILocation(line: 244, column: 6, scope: !17733)
!17748 = !DILocation(line: 245, column: 38, scope: !17749)
!17749 = distinct !DILexicalBlock(scope: !17750, file: !2846, line: 245, column: 7)
!17750 = distinct !DILexicalBlock(scope: !17746, file: !2846, line: 244, column: 20)
!17751 = !DILocation(line: 245, column: 8, scope: !17749)
!17752 = !DILocation(line: 245, column: 7, scope: !17750)
!17753 = !DILocation(line: 249, column: 42, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17749, file: !2846, line: 245, column: 48)
!17755 = !DILocation(line: 249, column: 10, scope: !17754)
!17756 = !DILocation(line: 0, scope: !17473, inlinedAt: !17757)
!17757 = distinct !DILocation(line: 252, column: 10, scope: !17754)
!17758 = !DILocation(line: 55, column: 2, scope: !17482, inlinedAt: !17759)
!17759 = distinct !DILocation(line: 145, column: 10, scope: !17473, inlinedAt: !17757)
!17760 = !DILocation(line: 0, scope: !17482, inlinedAt: !17759)
!17761 = !DILocation(line: 253, column: 20, scope: !17754)
!17762 = !DILocation(line: 254, column: 3, scope: !17754)
!17763 = !DILocation(line: 261, column: 16, scope: !17733)
!17764 = !DILocation(line: 0, scope: !17502, inlinedAt: !17765)
!17765 = distinct !DILocation(line: 262, column: 2, scope: !17733)
!17766 = !DILocation(line: 0, scope: !17511, inlinedAt: !17767)
!17767 = distinct !DILocation(line: 215, column: 2, scope: !17502, inlinedAt: !17765)
!17768 = !DILocation(line: 95, column: 2, scope: !17511, inlinedAt: !17767)
!17769 = !DILocation(line: 269, column: 2, scope: !17733)
!17770 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14536, file: !14536, line: 35, type: !17771, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17775)
!17771 = !DISubroutineType(types: !17772)
!17772 = !{!422, !17773}
!17773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17774, size: 32)
!17774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2731)
!17775 = !{!17776}
!17776 = !DILocalVariable(name: "to", arg: 1, scope: !17770, file: !14536, line: 35, type: !17773)
!17777 = !DILocation(line: 0, scope: !17770)
!17778 = !DILocation(line: 37, column: 35, scope: !17770)
!17779 = !DILocation(line: 37, column: 10, scope: !17770)
!17780 = !DILocation(line: 37, column: 9, scope: !17770)
!17781 = !DILocation(line: 37, column: 2, scope: !17770)
!17782 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17783, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !17787)
!17783 = !DISubroutineType(types: !17784)
!17784 = !{!422, !17785}
!17785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17786, size: 32)
!17786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2734)
!17787 = !{!17788}
!17788 = !DILocalVariable(name: "node", arg: 1, scope: !17782, file: !367, line: 225, type: !17785)
!17789 = !DILocation(line: 0, scope: !17782)
!17790 = !DILocation(line: 227, column: 15, scope: !17782)
!17791 = !DILocation(line: 227, column: 20, scope: !17782)
!17792 = !DILocation(line: 227, column: 2, scope: !17782)
!17793 = distinct !DISubprogram(name: "boot_banner", scope: !17794, file: !17794, line: 26, type: !3381, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3367, retainedNodes: !437)
!17794 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17795 = !DILocation(line: 34, column: 2, scope: !17793)
!17796 = !DILocation(line: 36, column: 1, scope: !17793)
