; ModuleID = 'build/96b_wistrio/integration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236112 to i8*), void (i8*)* inttoptr (i32 134234865 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236112 to i8*), void (i8*)* inttoptr (i32 134234855 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236112 to i8*), void (i8*)* inttoptr (i32 134234845 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236112 to i8*), void (i8*)* inttoptr (i32 134234835 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236112 to i8*), void (i8*)* inttoptr (i32 134234825 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236112 to i8*), void (i8*)* inttoptr (i32 134234815 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236112 to i8*), void (i8*)* inttoptr (i32 134234805 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [38 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_framework_tests to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__framework_tests__test_assert to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [16 x i8] c"framework_tests\00", align 1
@z_ztest_suite_node_stats_framework_tests = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_framework_tests = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_framework_tests }, section "._ztest_suite_node.static.z_ztest_test_node_framework_tests", align 4, !dbg !109
@.str.1 = private unnamed_addr constant [12 x i8] c"test_assert\00", align 1
@z_ztest_unit_test_stats_framework_tests_test_assert = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__framework_tests__test_assert = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (i8*)* @_framework_tests_test_assert_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_framework_tests_test_assert }, section "._ztest_unit_test.static.z_ztest_unit_test__framework_tests__test_assert", align 4, !dbg !155
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !279
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !308
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !460
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !314
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !469
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !505
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933596 } }], align 4, !dbg !515
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !520
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !540
@.str.90 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.92 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.10.103 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.11.104 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.12.91 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.13.93 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.14.94 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.15.95 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.16.96 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.17.97 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.18.98 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.19.99 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.20.100 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.21.101 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.22.102 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !648
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !703
@.str.105 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.108 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.107 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.106 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !814
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !690
@.str.4.120 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.121 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.109 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.136 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.137 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.138 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !694
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !705
@.str.10.111 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.112 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.113 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.114 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.115 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.116 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.110 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.122 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.124 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.123 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.125 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !812
@.str.21.126 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !809
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.128 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.129 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.130 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.127 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.131 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.132 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.133 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.134 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.135 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.111, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.113, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.116, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.128, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.129, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.130, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !815
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !850
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1003
@.str.4.141 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !972
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !955
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.141, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !928
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !944
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !974
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !988
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !990
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !992
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !994
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !996
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !998
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1008
@.str.143 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1033
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1108
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1097
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1149
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1024
@.str.154 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1215
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1461
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1439
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1425
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1022
@.str.1.164 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1463
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1443
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1441
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1390
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1020
@.str.2.165 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1476
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1447
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1445
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1399
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1018
@.str.3.166 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1478
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1451
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1449
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1408
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1016
@.str.4.167 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1480
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1455
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1453
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1414
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1014
@.str.5.168 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1482
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1459
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1457
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1423
@.str.6.155 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.29.161 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.30.157 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.31.160 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.32.156 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.33.158 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.34.159 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.172 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1484
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1028
@.str.1.173 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1644
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1699
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1640
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1701
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.173, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1625
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1627
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1026
@.str.2.182 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1707
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1642
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1717
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.182, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1636
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1638
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1688
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1691
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1693
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1696
@.str.3.175 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.176 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.177 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.178 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.179 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.8.185 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.9.187 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.10.188 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.143, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1081
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1709
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1711
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1713
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1715
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.11 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1724
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1835
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1837
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1833
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1828
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1802
@.str.192 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.193 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.194 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.195 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.196 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.197 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1839
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.164, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1388
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.165, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1397
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.166, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1406
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.167, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1412
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.168, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1421
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1926
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1950
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1953
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1957
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1961
@.str.230 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.234 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.235 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.236 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.240 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.241 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.242 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.243 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.244 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.239 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.238 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.240, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.241, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.242, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.243, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.244, i32 0, i32 0)], align 4
@.str.246 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1968
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2192
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2181
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2187
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2199
@.str.5.252 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2204
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.256 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.264, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.265, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.266, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.267, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.268, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.269, i32 0, i32 0)], align 4, !dbg !2232
@.str.263 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.264 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.265 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.266 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.267 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.268 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.262 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.269 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2347
@.str.8.261 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.274 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.275 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.276 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.277 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.281 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.282 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.286 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.287 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.296 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.297 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.298 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2360
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2471
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2474
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2476
@.str.299 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.315 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.306 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.320 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.328 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.308 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.323 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.305 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.332 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.333 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.339 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.340 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.341 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.344 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.300 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.301 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.302 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.303 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.304 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.307 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.319 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.324 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.325 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2189
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2197
@.str.23.334 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.350 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.351 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.352 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.353 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2478
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2508
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2513
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2055
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2511
@.str.4.354 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.355 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.356 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.360 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.361 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.381 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3053 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3057, !srcloc !3058
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3059, !srcloc !3060
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3061, !srcloc !3062
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3063, !srcloc !3064
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3065, !srcloc !3066
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3067, !srcloc !3068
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3069, !srcloc !3070
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3071, !srcloc !3072
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3073, !srcloc !3074
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3075, !srcloc !3076
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3077, !srcloc !3078
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3079, !srcloc !3080
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3081, !srcloc !3082
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3083, !srcloc !3084
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3085, !srcloc !3086
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3087, !srcloc !3088
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3089, !srcloc !3090
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3111, !srcloc !3114
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3161, !srcloc !3162
  ret void, !dbg !3163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal void @_framework_tests_test_assert_wrapper(i8* nocapture noundef %0) #2 !dbg !3166 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3168, metadata !DIExpression()), !dbg !3169
  ret void, !dbg !3170
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3171 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %0, metadata !3182, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %1, metadata !3183, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %2, metadata !3184, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %3, metadata !3185, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %0, metadata !3187, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %0, metadata !3188, metadata !DIExpression()), !dbg !3249
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3250
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3250
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3191, metadata !DIExpression()), !dbg !3251
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3252
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3252
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3193, metadata !DIExpression()), !dbg !3253
  call void @llvm.dbg.value(metadata i32 0, metadata !3194, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 0, metadata !3195, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 0, metadata !3196, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 -1, metadata !3197, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 0, metadata !3200, metadata !DIExpression()), !dbg !3249
  %12 = and i32 %2, 4, !dbg !3254
  %13 = icmp eq i32 %12, 0, !dbg !3255
  call void @llvm.dbg.value(metadata i1 %13, metadata !3201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3249
  %14 = lshr i32 %2, 3, !dbg !3256
  %15 = and i32 %14, 7, !dbg !3256
  %16 = add nuw nsw i32 %15, 1, !dbg !3257
  call void @llvm.dbg.value(metadata i32 %16, metadata !3202, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 0, metadata !3203, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %0, metadata !3204, metadata !DIExpression()), !dbg !3249
  %17 = ptrtoint i8* %0 to i32, !dbg !3258
  %18 = and i32 %17, 3, !dbg !3260
  %19 = icmp eq i32 %18, 0, !dbg !3260
  br i1 %19, label %20, label %320, !dbg !3261

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3262
  call void @llvm.dbg.value(metadata i8* %21, metadata !3188, metadata !DIExpression()), !dbg !3249
  %22 = icmp eq i8* %0, null, !dbg !3263
  %23 = and i32 %1, 7, !dbg !3265
  %24 = sub nuw nsw i32 8, %23, !dbg !3265
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3265
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3265
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3265
  call void @llvm.dbg.value(metadata i32 %27, metadata !3183, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %26, metadata !3188, metadata !DIExpression()), !dbg !3249
  br i1 %22, label %33, label %28, !dbg !3266

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3268
  %30 = sub i32 4, %17, !dbg !3268
  %31 = add i32 %30, %29, !dbg !3269
  %32 = icmp ugt i32 %31, %27, !dbg !3270
  br i1 %32, label %320, label %33, !dbg !3271

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3272
  call void @llvm.dbg.value(metadata i8* %34, metadata !3185, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %3, metadata !3199, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 4, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 4, metadata !3189, metadata !DIExpression()), !dbg !3249
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3273

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %42, metadata !3185, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %43, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %44, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %45, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %72, metadata !3197, metadata !DIExpression()), !dbg !3249
  br i1 %46, label %73, label %47, !dbg !3274

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3275
  %49 = zext i1 %48 to i32, !dbg !3279
  %50 = add nsw i32 %72, %49, !dbg !3279
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3279
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3279
  call void @llvm.dbg.value(metadata i32 %52, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %51, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3200, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %50, metadata !3197, metadata !DIExpression()), !dbg !3249
  br label %53, !dbg !3280

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %40, metadata !3185, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %58, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %57, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %56, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3200, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %54, metadata !3197, metadata !DIExpression()), !dbg !3249
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3281
  call void @llvm.dbg.value(metadata i8* %60, metadata !3185, metadata !DIExpression()), !dbg !3249
  %61 = load i8, i8* %60, align 1, !dbg !3283
  %62 = icmp eq i8 %61, 0, !dbg !3284
  br i1 %62, label %226, label %63, !dbg !3285, !llvm.loop !3286

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3274

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3289

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3200, metadata !DIExpression()), !dbg !3249
  %75 = add nsw i32 %72, -1, !dbg !3290
  call void @llvm.dbg.value(metadata i32 %75, metadata !3197, metadata !DIExpression()), !dbg !3249
  br label %53, !dbg !3291

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3292

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 4, metadata !3189, metadata !DIExpression()), !dbg !3249
  br label %53, !dbg !3293

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 4, metadata !3189, metadata !DIExpression()), !dbg !3249
  br label %53, !dbg !3294

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3295
  %81 = icmp eq i8 %80, 108, !dbg !3297
  br i1 %81, label %82, label %109, !dbg !3298

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3299
  %84 = load i8, i8* %83, align 1, !dbg !3299
  %85 = icmp eq i8 %84, 108, !dbg !3302
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3303
  %89 = add i32 %88, 7, !dbg !3303
  %90 = and i32 %89, -8, !dbg !3303
  %91 = inttoptr i32 %90 to i8*, !dbg !3303
  %92 = inttoptr i32 %90 to double*, !dbg !3303
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3303
  %94 = load double, double* %92, align 8, !dbg !3303
  call void @llvm.dbg.value(metadata i8* %93, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 8, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 8, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata double %94, metadata !3217, metadata !DIExpression()), !dbg !3305
  %95 = ptrtoint i8* %43 to i32, !dbg !3306
  %96 = add i32 %95, 7, !dbg !3306
  %97 = and i32 %96, -8, !dbg !3306
  %98 = inttoptr i32 %97 to i8*, !dbg !3307
  call void @llvm.dbg.value(metadata i8* %98, metadata !3188, metadata !DIExpression()), !dbg !3249
  br i1 %22, label %104, label %99, !dbg !3308

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3309
  %101 = icmp ugt i32 %100, %196, !dbg !3313
  br i1 %101, label %320, label %102, !dbg !3314

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3315
  store double %94, double* %103, align 8, !dbg !3315
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3318
  call void @llvm.dbg.value(metadata i8* %105, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3200, metadata !DIExpression()), !dbg !3249
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3200, metadata !DIExpression()), !dbg !3249
  br label %53, !dbg !3319

107:                                              ; preds = %73, %73
  br label %109, !dbg !3320

108:                                              ; preds = %73
  br label %109, !dbg !3320

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3249
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3249
  call void @llvm.dbg.value(metadata i32 %113, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %112, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3200, metadata !DIExpression()), !dbg !3249
  %114 = ptrtoint i8* %43 to i32, !dbg !3320
  %115 = add i32 %114, -1, !dbg !3320
  %116 = add i32 %115, %112, !dbg !3320
  %117 = sub i32 0, %112, !dbg !3320
  %118 = and i32 %116, %117, !dbg !3320
  %119 = inttoptr i32 %118 to i8*, !dbg !3321
  call void @llvm.dbg.value(metadata i8* %119, metadata !3188, metadata !DIExpression()), !dbg !3249
  br i1 %22, label %124, label %120, !dbg !3322

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3324
  %122 = add i32 %121, %118, !dbg !3325
  %123 = icmp ugt i32 %122, %196, !dbg !3326
  br i1 %123, label %320, label %124, !dbg !3327

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3328

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3321
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3329
  call void @llvm.dbg.value(metadata i8* %127, metadata !3186, metadata !DIExpression()), !dbg !3249
  %128 = bitcast i8* %41 to i8**, !dbg !3329
  %129 = load i8*, i8** %128, align 4, !dbg !3329
  call void @llvm.dbg.value(metadata i8* %129, metadata !3199, metadata !DIExpression()), !dbg !3249
  br label %130, !dbg !3330

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3249
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3331
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3249
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3332
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3249
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3249
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3249
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3249
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3249
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3249
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3333
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %142, metadata !3183, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %141, metadata !3185, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %140, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %139, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %138, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %137, metadata !3194, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %136, metadata !3202, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %135, metadata !3195, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3200, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %133, metadata !3199, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %132, metadata !3197, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %131, metadata !3196, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.label(metadata !3248), !dbg !3335
  br i1 %22, label %146, label %144, !dbg !3336

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3337
  store i8* %133, i8** %145, align 4, !dbg !3340
  br label %146, !dbg !3341

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3342
  call void @llvm.dbg.value(metadata i32 %147, metadata !3202, metadata !DIExpression()), !dbg !3249
  %148 = icmp sgt i32 %136, 0, !dbg !3343
  br i1 %148, label %152, label %149, !dbg !3344

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3345
  %151 = zext i1 %150 to i32, !dbg !3345
  br label %152, !dbg !3344

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3344
  %154 = icmp eq i32 %153, 0, !dbg !3344
  call void @llvm.dbg.value(metadata i1 %154, metadata !3226, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3346
  call void @llvm.dbg.value(metadata i1 %36, metadata !3229, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3346
  %155 = or i1 %36, %154, !dbg !3347
  br i1 %155, label %156, label %192, !dbg !3347

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3348
  %158 = sub i32 %157, %17, !dbg !3348
  %159 = lshr i32 %158, 2, !dbg !3349
  call void @llvm.dbg.value(metadata i32 %159, metadata !3230, metadata !DIExpression()), !dbg !3350
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3351
  br i1 %161, label %162, label %163, !dbg !3351

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3353
  unreachable, !dbg !3353

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3358
  br i1 %164, label %165, label %166, !dbg !3360

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3361
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3361
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3361
  unreachable, !dbg !3361

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3366

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3367
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3370
  store i8 %168, i8* %169, align 1, !dbg !3371
  %170 = trunc i32 %132 to i8, !dbg !3372
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3373
  store i8 %170, i8* %171, align 1, !dbg !3374
  br i1 %154, label %175, label %172, !dbg !3375

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3376
  store i8 %173, i8* %169, align 1, !dbg !3376
  %174 = add i32 %131, 1, !dbg !3379
  call void @llvm.dbg.value(metadata i32 %174, metadata !3196, metadata !DIExpression()), !dbg !3249
  br label %187, !dbg !3380

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3381
  call void @llvm.dbg.value(metadata i32 %176, metadata !3195, metadata !DIExpression()), !dbg !3249
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3383

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3384
  call void @llvm.dbg.value(metadata i32 %179, metadata !3183, metadata !DIExpression()), !dbg !3249
  br label %187, !dbg !3387

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3388

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3389
  call void @llvm.dbg.value(metadata i32 %182, metadata !3183, metadata !DIExpression()), !dbg !3249
  br label %187, !dbg !3392

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3393
  %185 = add i32 %142, 2, !dbg !3395
  %186 = add i32 %185, %184, !dbg !3396
  call void @llvm.dbg.value(metadata i32 %186, metadata !3183, metadata !DIExpression()), !dbg !3249
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3249
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3249
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3249
  call void @llvm.dbg.value(metadata i32 %190, metadata !3183, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %189, metadata !3195, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %188, metadata !3196, metadata !DIExpression()), !dbg !3249
  %191 = add nuw nsw i32 %137, 1, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %191, metadata !3194, metadata !DIExpression()), !dbg !3249
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3249
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3332
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3249
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3333
  call void @llvm.dbg.value(metadata i32 %196, metadata !3183, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %195, metadata !3194, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %194, metadata !3195, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %193, metadata !3196, metadata !DIExpression()), !dbg !3249
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3398
  call void @llvm.dbg.value(metadata i8* %197, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %143, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %141, metadata !3185, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %139, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %138, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3200, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %132, metadata !3197, metadata !DIExpression()), !dbg !3249
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3281
  call void @llvm.dbg.value(metadata i8* %198, metadata !3185, metadata !DIExpression()), !dbg !3249
  %199 = load i8, i8* %198, align 1, !dbg !3283
  %200 = icmp eq i8 %199, 0, !dbg !3284
  br i1 %200, label %226, label %63, !dbg !3285

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3399

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3400
  call void @llvm.dbg.value(metadata i8* %203, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 undef, metadata !3233, metadata !DIExpression()), !dbg !3401
  br i1 %22, label %219, label %204, !dbg !3402

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3400
  %206 = load i32, i32* %205, align 4, !dbg !3400
  call void @llvm.dbg.value(metadata i32 %206, metadata !3233, metadata !DIExpression()), !dbg !3401
  %207 = inttoptr i32 %118 to i32*, !dbg !3403
  store i32 %206, i32* %207, align 4, !dbg !3406
  br label %219, !dbg !3407

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3408
  %210 = add i32 %209, 7, !dbg !3408
  %211 = and i32 %210, -8, !dbg !3408
  %212 = inttoptr i32 %211 to i8*, !dbg !3408
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3408
  call void @llvm.dbg.value(metadata i8* %213, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i64 undef, metadata !3239, metadata !DIExpression()), !dbg !3409
  br i1 %22, label %219, label %214, !dbg !3410

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3408
  %216 = load i64, i64* %215, align 8, !dbg !3408
  call void @llvm.dbg.value(metadata i64 %216, metadata !3239, metadata !DIExpression()), !dbg !3409
  %217 = inttoptr i32 %118 to i64*, !dbg !3411
  store i64 %216, i64* %217, align 8, !dbg !3416
  br label %219, !dbg !3417

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3418
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3418
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3418
  unreachable, !dbg !3418

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3423
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3423
  call void @llvm.dbg.value(metadata i8* %221, metadata !3186, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %40, metadata !3185, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %222, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %113, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %112, metadata !3190, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8 poison, metadata !3200, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %72, metadata !3197, metadata !DIExpression()), !dbg !3249
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3281
  call void @llvm.dbg.value(metadata i8* %223, metadata !3185, metadata !DIExpression()), !dbg !3249
  %224 = load i8, i8* %223, align 1, !dbg !3283
  %225 = icmp eq i8 %224, 0, !dbg !3284
  br i1 %225, label %226, label %38, !dbg !3285

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3424
  %228 = ptrtoint i8* %227 to i32, !dbg !3425
  %229 = sub i32 %228, %17, !dbg !3425
  %230 = lshr i32 %229, 2, !dbg !3427
  %231 = icmp ugt i32 %229, 1023, !dbg !3428
  br i1 %231, label %232, label %233, !dbg !3429

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3430
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3430
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3430
  unreachable, !dbg !3430

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3435

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3436
  %236 = add i32 %235, %229, !dbg !3439
  br label %320, !dbg !3440

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3441
  store i8 %238, i8* %0, align 1, !dbg !3442
  %239 = trunc i32 %194 to i8, !dbg !3443
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3445
  store i8 %240, i8* %242, align 1, !dbg !3447
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3448
  store i8 %241, i8* %243, align 1, !dbg !3449
  %244 = trunc i32 %193 to i8, !dbg !3450
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3451
  store i8 %244, i8* %245, align 1, !dbg !3452
  %246 = icmp eq i32 %193, 0, !dbg !3453
  %247 = xor i1 %246, true, !dbg !3454
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3454
  call void @llvm.dbg.value(metadata i8* %227, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 0, metadata !3198, metadata !DIExpression()), !dbg !3249
  br i1 %249, label %250, label %269, !dbg !3454

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3455

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %254, metadata !3198, metadata !DIExpression()), !dbg !3249
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3456
  %256 = load i8, i8* %255, align 1, !dbg !3456
  %257 = icmp sgt i8 %256, -1, !dbg !3458
  br i1 %257, label %265, label %258, !dbg !3459

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3242, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3460
  %259 = ptrtoint i8* %253 to i32, !dbg !3461
  %260 = add i32 %251, %259, !dbg !3463
  %261 = icmp ugt i32 %260, %196, !dbg !3464
  br i1 %261, label %320, label %262, !dbg !3465

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3466
  call void @llvm.dbg.value(metadata i8 %263, metadata !3242, metadata !DIExpression()), !dbg !3460
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3467
  call void @llvm.dbg.value(metadata i8* %264, metadata !3188, metadata !DIExpression()), !dbg !3249
  store i8 %263, i8* %253, align 1, !dbg !3468
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3398
  call void @llvm.dbg.value(metadata i8* %266, metadata !3188, metadata !DIExpression()), !dbg !3249
  %267 = add nuw i32 %254, 1, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %267, metadata !3198, metadata !DIExpression()), !dbg !3249
  %268 = icmp eq i32 %267, %195, !dbg !3470
  br i1 %268, label %269, label %252, !dbg !3455, !llvm.loop !3471

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3398
  call void @llvm.dbg.value(metadata i8* %270, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 0, metadata !3198, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %133, metadata !3199, metadata !DIExpression()), !dbg !3249
  %271 = icmp eq i32 %195, 0, !dbg !3473
  br i1 %271, label %316, label %272, !dbg !3476

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3476

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %276, metadata !3199, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %277, metadata !3198, metadata !DIExpression()), !dbg !3249
  br i1 %246, label %282, label %278, !dbg !3477

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3480
  %280 = load i8, i8* %279, align 1, !dbg !3480
  %281 = icmp sgt i8 %280, -1, !dbg !3481
  br i1 %281, label %282, label %311, !dbg !3482

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3483

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3189, metadata !DIExpression()), !dbg !3249
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3484
  %285 = load i8, i8* %284, align 1, !dbg !3484
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3487
  call void @llvm.dbg.value(metadata i8* %286, metadata !3188, metadata !DIExpression()), !dbg !3249
  store i8 %285, i8* %275, align 1, !dbg !3488
  br label %297, !dbg !3489

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3490
  %289 = load i8, i8* %288, align 1, !dbg !3490
  %290 = zext i8 %289 to i32, !dbg !3490
  %291 = shl nuw nsw i32 %290, 2, !dbg !3492
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3493
  %293 = bitcast i8* %292 to i8**, !dbg !3494
  %294 = load i8*, i8** %293, align 4, !dbg !3494
  call void @llvm.dbg.value(metadata i8* %294, metadata !3199, metadata !DIExpression()), !dbg !3249
  store i8* null, i8** %293, align 4, !dbg !3495
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3496
  %296 = add i32 %295, 1, !dbg !3497
  call void @llvm.dbg.value(metadata i32 %296, metadata !3189, metadata !DIExpression()), !dbg !3249
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3249
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3498
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3249
  call void @llvm.dbg.value(metadata i8* %300, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i32 %299, metadata !3189, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %298, metadata !3199, metadata !DIExpression()), !dbg !3249
  %301 = ptrtoint i8* %300 to i32, !dbg !3499
  %302 = add i32 %273, %299, !dbg !3501
  %303 = add i32 %302, %301, !dbg !3502
  %304 = icmp ugt i32 %303, %196, !dbg !3503
  br i1 %304, label %320, label %305, !dbg !3504

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3505
  %307 = load i8, i8* %306, align 1, !dbg !3505
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3506
  call void @llvm.dbg.value(metadata i8* %308, metadata !3188, metadata !DIExpression()), !dbg !3249
  store i8 %307, i8* %300, align 1, !dbg !3507
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3508
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3509
  call void @llvm.dbg.value(metadata i8* %310, metadata !3188, metadata !DIExpression()), !dbg !3249
  br label %311, !dbg !3510

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3511
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3249
  call void @llvm.dbg.value(metadata i8* %313, metadata !3188, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %312, metadata !3199, metadata !DIExpression()), !dbg !3249
  %314 = add nuw i32 %277, 1, !dbg !3512
  call void @llvm.dbg.value(metadata i32 %314, metadata !3198, metadata !DIExpression()), !dbg !3249
  %315 = icmp eq i32 %314, %195, !dbg !3473
  br i1 %315, label %316, label %274, !dbg !3476, !llvm.loop !3513

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3398
  %318 = ptrtoint i8* %317 to i32, !dbg !3515
  %319 = sub i32 %318, %17, !dbg !3515
  br label %320, !dbg !3516

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3517
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3517
  ret i32 %321, !dbg !3517
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3518 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3522, metadata !DIExpression()), !dbg !3523
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3524
  ret i1 %2, !dbg !3525
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3526 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3529, metadata !DIExpression()), !dbg !3530
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3531
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3532
  %4 = and i1 %2, %3, !dbg !3532
  ret i1 %4, !dbg !3533
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3534 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3538, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata i32 %1, metadata !3539, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata i32 %2, metadata !3540, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata i8* %3, metadata !3541, metadata !DIExpression()), !dbg !3544
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3545
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3545
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3542, metadata !DIExpression()), !dbg !3546
  call void @llvm.va_start(i8* nonnull %6), !dbg !3547
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3548
  %8 = load i32, i32* %7, align 4, !dbg !3548
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3548
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3548
  call void @llvm.dbg.value(metadata i32 %10, metadata !3543, metadata !DIExpression()), !dbg !3544
  call void @llvm.va_end(i8* nonnull %6), !dbg !3549
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3550
  ret i32 %10, !dbg !3551
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3552 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3564, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3565, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i8* %2, metadata !3566, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i8* %3, metadata !3567, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i8* %3, metadata !3568, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i8* %3, metadata !3569, metadata !DIExpression()), !dbg !3583
  %5 = icmp eq i8* %3, null, !dbg !3584
  br i1 %5, label %45, label %6, !dbg !3586

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3578, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3583
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3587
  %8 = load i8, i8* %7, align 1, !dbg !3587
  %9 = zext i8 %8 to i32, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %9, metadata !3579, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i8 undef, metadata !3580, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3583
  call void @llvm.dbg.value(metadata i8 undef, metadata !3581, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3583
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  call void @llvm.dbg.value(metadata i32 0, metadata !3577, metadata !DIExpression()), !dbg !3583
  %10 = icmp eq i8 %8, 0, !dbg !3589
  br i1 %10, label %39, label %11, !dbg !3592

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3593
  call void @llvm.dbg.value(metadata i8 %12, metadata !3578, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3583
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %13 = zext i8 %12 to i32, !dbg !3594
  call void @llvm.dbg.value(metadata i32 %13, metadata !3578, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3583
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %14 = shl nuw nsw i32 %13, 2, !dbg !3595
  call void @llvm.dbg.value(metadata i32 %14, metadata !3578, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3597
  %17 = load i8, i8* %16, align 1, !dbg !3597
  call void @llvm.dbg.value(metadata i8 %17, metadata !3580, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3583
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %18 = zext i8 %17 to i32, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %18, metadata !3580, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3599
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3600
  %21 = load i8, i8* %20, align 1, !dbg !3600
  call void @llvm.dbg.value(metadata i8 %21, metadata !3581, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3583
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %22 = zext i8 %21 to i32, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %22, metadata !3581, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %23 = shl nuw nsw i32 %22, 1, !dbg !3602
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3583
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3603
  call void @llvm.dbg.value(metadata i8* %24, metadata !3575, metadata !DIExpression()), !dbg !3583
  br label %25, !dbg !3592

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3575, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i32 %27, metadata !3577, metadata !DIExpression()), !dbg !3583
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3604
  call void @llvm.dbg.value(metadata i8* %28, metadata !3575, metadata !DIExpression()), !dbg !3583
  %29 = load i8, i8* %26, align 1, !dbg !3606
  %30 = zext i8 %29 to i32, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %30, metadata !3582, metadata !DIExpression()), !dbg !3583
  %31 = shl nuw nsw i32 %30, 2, !dbg !3607
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3608
  %33 = bitcast i8* %32 to i8**, !dbg !3609
  call void @llvm.dbg.value(metadata i8** %33, metadata !3576, metadata !DIExpression()), !dbg !3583
  store i8* %28, i8** %33, align 4, !dbg !3610
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3611
  %35 = add i32 %34, 1, !dbg !3612
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3613
  call void @llvm.dbg.value(metadata i8* %36, metadata !3575, metadata !DIExpression()), !dbg !3583
  %37 = add nuw nsw i32 %27, 1, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %37, metadata !3577, metadata !DIExpression()), !dbg !3583
  %38 = icmp eq i32 %37, %9, !dbg !3589
  br i1 %38, label %39, label %25, !dbg !3592, !llvm.loop !3615

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3617
  call void @llvm.dbg.value(metadata i8* %40, metadata !3568, metadata !DIExpression()), !dbg !3583
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3618
  %42 = bitcast i8* %41 to i8**, !dbg !3618
  %43 = load i8*, i8** %42, align 1, !dbg !3618
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3619
  br label %45, !dbg !3620

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3583
  ret i32 %46, !dbg !3621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3622 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3626, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3627, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %2, metadata !3628, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %3, metadata !3629, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %4, metadata !3630, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %4, metadata !3631, metadata !DIExpression()), !dbg !3636
  %6 = ptrtoint i8* %4 to i32, !dbg !3637
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3637
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3637
  ret i32 %8, !dbg !3638
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3639 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3643, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i32 %1, metadata !3644, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i8 0, metadata !3646, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i32 0, metadata !3647, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i8 poison, metadata !3646, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i8* %0, metadata !3643, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3648
  %3 = load i8, i8* %0, align 1, !dbg !3649
  call void @llvm.dbg.value(metadata i8 %3, metadata !3645, metadata !DIExpression()), !dbg !3648
  %4 = icmp eq i8 %3, 0, !dbg !3650
  br i1 %4, label %29, label %5, !dbg !3651

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %8, metadata !3647, metadata !DIExpression()), !dbg !3648
  br i1 %9, label %11, label %22, !dbg !3653

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3655
  br i1 %12, label %13, label %17, !dbg !3659

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3660
  br i1 %14, label %29, label %15, !dbg !3663

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3664
  br i1 %16, label %29, label %22, !dbg !3666

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3667
  %19 = xor i1 %18, true, !dbg !3669
  %20 = zext i1 %18 to i32, !dbg !3669
  %21 = add nsw i32 %8, %20, !dbg !3669
  br label %22, !dbg !3669

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3648
  call void @llvm.dbg.value(metadata i32 %24, metadata !3647, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i8 poison, metadata !3646, metadata !DIExpression()), !dbg !3648
  %25 = icmp eq i8 %6, 37, !dbg !3670
  %26 = xor i1 %25, %23, !dbg !3672
  call void @llvm.dbg.value(metadata i8* %10, metadata !3643, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i8* %10, metadata !3643, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3648
  %27 = load i8, i8* %10, align 1, !dbg !3649
  call void @llvm.dbg.value(metadata i8 %27, metadata !3645, metadata !DIExpression()), !dbg !3648
  %28 = icmp eq i8 %27, 0, !dbg !3650
  br i1 %28, label %29, label %5, !dbg !3651, !llvm.loop !3673

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3648
  ret i1 %30, !dbg !3675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3676 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3680, metadata !DIExpression()), !dbg !3681
  %2 = add i8 %0, -64, !dbg !3682
  %3 = icmp ult i8 %2, 59, !dbg !3682
  ret i1 %3, !dbg !3683
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3684 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3692, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %1, metadata !3693, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3694, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %3, metadata !3695, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %4, metadata !3696, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i16* %5, metadata !3697, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %6, metadata !3698, metadata !DIExpression()), !dbg !3761
  %11 = icmp eq i8* %0, null, !dbg !3762
  br i1 %11, label %12, label %13, !dbg !3765

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3766
  unreachable, !dbg !3766

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3699, metadata !DIExpression()), !dbg !3761
  %14 = bitcast i8* %0 to i32*, !dbg !3768
  call void @llvm.dbg.value(metadata i32* %14, metadata !3700, metadata !DIExpression()), !dbg !3761
  %15 = and i32 %4, 8, !dbg !3769
  %16 = icmp eq i32 %15, 0, !dbg !3770
  call void @llvm.dbg.value(metadata i1 %16, metadata !3704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %0, metadata !3707, metadata !DIExpression()), !dbg !3761
  %17 = icmp eq i32 %1, 0, !dbg !3771
  br i1 %17, label %18, label %20, !dbg !3772

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3773
  br label %20, !dbg !3772

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3772
  call void @llvm.dbg.value(metadata i32 %21, metadata !3693, metadata !DIExpression()), !dbg !3761
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3774
  %23 = load i8, i8* %22, align 1, !dbg !3774
  %24 = zext i8 %23 to i32, !dbg !3775
  call void @llvm.dbg.value(metadata i32 %24, metadata !3702, metadata !DIExpression()), !dbg !3761
  %25 = icmp ne i8 %23, 0, !dbg !3776
  %26 = and i32 %4, 1, !dbg !3777
  %27 = icmp ne i32 %26, 0, !dbg !3777
  %28 = and i1 %27, %25, !dbg !3777
  call void @llvm.dbg.value(metadata i1 %28, metadata !3706, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3761
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3778
  %30 = load i8, i8* %29, align 1, !dbg !3778
  %31 = zext i8 %30 to i32, !dbg !3779
  call void @llvm.dbg.value(metadata i32 %31, metadata !3703, metadata !DIExpression()), !dbg !3761
  %32 = icmp ne i8 %30, 0, !dbg !3780
  %33 = and i32 %4, 2, !dbg !3781
  %34 = icmp ne i32 %33, 0, !dbg !3781
  %35 = and i1 %34, %32, !dbg !3781
  call void @llvm.dbg.value(metadata i1 %35, metadata !3705, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3761
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3782
  br i1 %36, label %41, label %37, !dbg !3782

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3784
  br i1 %38, label %287, label %39, !dbg !3787

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3788
  br label %287, !dbg !3790

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3791
  %43 = zext i8 %42 to i32, !dbg !3792
  %44 = shl nuw nsw i32 %43, 2, !dbg !3793
  call void @llvm.dbg.value(metadata i32 %44, metadata !3701, metadata !DIExpression()), !dbg !3761
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3794
  %46 = bitcast i8* %45 to i8**, !dbg !3795
  %47 = load i8*, i8** %46, align 4, !dbg !3795
  call void @llvm.dbg.value(metadata i8* %47, metadata !3710, metadata !DIExpression()), !dbg !3761
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3796
  call void @llvm.dbg.value(metadata i8* %48, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 0, metadata !3712, metadata !DIExpression()), !dbg !3761
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3797
  br i1 %49, label %50, label %135, !dbg !3798

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3709, metadata !DIExpression()), !dbg !3761
  br i1 %28, label %51, label %76, !dbg !3799

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %48, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 0, metadata !3712, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 0, metadata !3713, metadata !DIExpression()), !dbg !3800
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3801

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %55, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %56, metadata !3712, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %57, metadata !3713, metadata !DIExpression()), !dbg !3800
  %58 = load i8, i8* %55, align 1, !dbg !3802
  %59 = zext i8 %58 to i32, !dbg !3803
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3803
  %61 = bitcast i32* %60 to i8**, !dbg !3804
  %62 = load i8*, i8** %61, align 4, !dbg !3804
  call void @llvm.dbg.value(metadata i8* %62, metadata !3719, metadata !DIExpression()), !dbg !3805
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %63, metadata !3722, metadata !DIExpression()), !dbg !3805
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3807
  br i1 %65, label %66, label %70, !dbg !3807

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3809
  %68 = add nuw i32 %56, 1, !dbg !3811
  call void @llvm.dbg.value(metadata i32 %68, metadata !3712, metadata !DIExpression()), !dbg !3761
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3812
  store i16 %67, i16* %69, align 2, !dbg !3813
  br label %70, !dbg !3814

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3761
  call void @llvm.dbg.value(metadata i32 %71, metadata !3712, metadata !DIExpression()), !dbg !3761
  %72 = add nsw i32 %63, %54, !dbg !3815
  call void @llvm.dbg.value(metadata i32 %72, metadata !3709, metadata !DIExpression()), !dbg !3761
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3816
  call void @llvm.dbg.value(metadata i8* %73, metadata !3711, metadata !DIExpression()), !dbg !3761
  %74 = add nuw nsw i32 %57, 1, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %74, metadata !3713, metadata !DIExpression()), !dbg !3800
  %75 = icmp eq i32 %74, %24, !dbg !3818
  br i1 %75, label %82, label %53, !dbg !3801, !llvm.loop !3819

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3821
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3821
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3821
  br label %82, !dbg !3821

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3824
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3761
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3825
  call void @llvm.dbg.value(metadata i1 undef, metadata !3723, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3826
  call void @llvm.dbg.value(metadata i32 0, metadata !3724, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 %85, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %84, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %83, metadata !3712, metadata !DIExpression()), !dbg !3761
  %86 = icmp eq i8 %30, 0, !dbg !3828
  br i1 %86, label %287, label %87, !dbg !3829

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3830
  %89 = icmp eq i32 %88, 0, !dbg !3831
  call void @llvm.dbg.value(metadata i1 %89, metadata !3723, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3826
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3829

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %96, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %97, metadata !3712, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %98, metadata !3724, metadata !DIExpression()), !dbg !3827
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3832
  call void @llvm.dbg.value(metadata i8* %99, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 undef, metadata !3726, metadata !DIExpression()), !dbg !3833
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3834
  call void @llvm.dbg.value(metadata i8* %100, metadata !3711, metadata !DIExpression()), !dbg !3761
  %101 = load i8, i8* %99, align 1, !dbg !3835
  call void @llvm.dbg.value(metadata i8 %101, metadata !3729, metadata !DIExpression()), !dbg !3833
  %102 = zext i8 %101 to i32, !dbg !3836
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3836
  %104 = bitcast i32* %103 to i8**, !dbg !3837
  %105 = load i8*, i8** %104, align 4, !dbg !3837
  call void @llvm.dbg.value(metadata i8* %105, metadata !3730, metadata !DIExpression()), !dbg !3833
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3838
  call void @llvm.dbg.value(metadata i1 %106, metadata !3731, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3833
  br i1 %16, label %113, label %107, !dbg !3839

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3841
  call void @llvm.dbg.value(metadata i8 %108, metadata !3726, metadata !DIExpression()), !dbg !3833
  %109 = zext i8 %108 to i32, !dbg !3842
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3843
  br i1 %110, label %111, label %113, !dbg !3844

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3845
  %112 = add nsw i32 %95, -2, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %112, metadata !3709, metadata !DIExpression()), !dbg !3761
  br label %130, !dbg !3852

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3853

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3854

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3856
  call void @llvm.dbg.value(metadata i32 %116, metadata !3709, metadata !DIExpression()), !dbg !3761
  br label %130, !dbg !3859

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3860

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3757), !dbg !3861
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3862
  call void @llvm.dbg.value(metadata i32 %119, metadata !3732, metadata !DIExpression()), !dbg !3833
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3863
  br i1 %121, label %122, label %126, !dbg !3863

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3865
  %124 = add nuw i32 %97, 1, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %124, metadata !3712, metadata !DIExpression()), !dbg !3761
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3868
  store i16 %123, i16* %125, align 2, !dbg !3869
  br label %126, !dbg !3870

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3761
  call void @llvm.dbg.value(metadata i32 %127, metadata !3712, metadata !DIExpression()), !dbg !3761
  %128 = add i32 %95, -1, !dbg !3871
  %129 = add i32 %128, %119, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %129, metadata !3709, metadata !DIExpression()), !dbg !3761
  br label %130, !dbg !3873

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3761
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3833
  call void @llvm.dbg.value(metadata i32 %132, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %131, metadata !3712, metadata !DIExpression()), !dbg !3761
  %133 = add nuw nsw i32 %98, 1, !dbg !3874
  call void @llvm.dbg.value(metadata i8* %100, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %133, metadata !3724, metadata !DIExpression()), !dbg !3827
  %134 = icmp eq i32 %133, %31, !dbg !3828
  br i1 %134, label %287, label %94, !dbg !3829, !llvm.loop !3875

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3734, metadata !DIExpression()), !dbg !3877
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3735, metadata !DIExpression()), !dbg !3878
  br i1 %28, label %136, label %138, !dbg !3879

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3736, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 0, metadata !3737, metadata !DIExpression()), !dbg !3761
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3880
  call void @llvm.dbg.value(metadata i8* %137, metadata !3738, metadata !DIExpression()), !dbg !3761
  br label %143, !dbg !3883

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3884
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3884

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3738, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 undef, metadata !3737, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 0, metadata !3736, metadata !DIExpression()), !dbg !3761
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3886
  br label %148, !dbg !3889

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %151, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 0, metadata !3740, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i8 %149, metadata !3737, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 %150, metadata !3736, metadata !DIExpression()), !dbg !3761
  %152 = icmp eq i8 %30, 0, !dbg !3892
  br i1 %152, label %153, label %155, !dbg !3893

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3894
  br label %160, !dbg !3893

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3893

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3894
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3895
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3896
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3761
  call void @llvm.dbg.value(metadata i8 undef, metadata !3733, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3761
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3897
  %166 = load i8, i8* %165, align 1, !dbg !3897
  %167 = zext i8 %162 to i32, !dbg !3898
  %168 = add i8 %166, %162, !dbg !3899
  call void @llvm.dbg.value(metadata i8 %168, metadata !3733, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3761
  %169 = icmp eq i32 %33, 0, !dbg !3900
  %170 = lshr i8 %163, 1, !dbg !3901
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3901
  call void @llvm.dbg.value(metadata i8 %171, metadata !3733, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3761
  %172 = icmp eq i32 %26, 0, !dbg !3902
  %173 = icmp eq i32 %161, 0, !dbg !3894
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3894
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3894
  call void @llvm.dbg.value(metadata i8 %175, metadata !3733, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3761
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3748, metadata !DIExpression()), !dbg !3903
  %176 = load i32, i32* %14, align 1, !dbg !3904
  store i8 %168, i8* %165, align 1, !dbg !3905
  store i8 %175, i8* %22, align 1, !dbg !3905
  store i8 %171, i8* %29, align 1, !dbg !3905
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %177, metadata !3739, metadata !DIExpression()), !dbg !3761
  %178 = icmp slt i32 %177, 0, !dbg !3907
  br i1 %178, label %287, label %240, !dbg !3909

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %181, metadata !3740, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i8 %182, metadata !3737, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 %183, metadata !3736, metadata !DIExpression()), !dbg !3761
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3910
  call void @llvm.dbg.value(metadata i8* %184, metadata !3711, metadata !DIExpression()), !dbg !3761
  %185 = load i8, i8* %180, align 1, !dbg !3911
  call void @llvm.dbg.value(metadata i8 %185, metadata !3742, metadata !DIExpression()), !dbg !3912
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3913
  call void @llvm.dbg.value(metadata i8* %186, metadata !3711, metadata !DIExpression()), !dbg !3761
  %187 = load i8, i8* %184, align 1, !dbg !3914
  call void @llvm.dbg.value(metadata i8 %187, metadata !3745, metadata !DIExpression()), !dbg !3912
  %188 = zext i8 %187 to i32, !dbg !3915
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3915
  %190 = bitcast i32* %189 to i8**, !dbg !3916
  %191 = load i8*, i8** %190, align 4, !dbg !3916
  call void @llvm.dbg.value(metadata i8* %191, metadata !3746, metadata !DIExpression()), !dbg !3912
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3917
  call void @llvm.dbg.value(metadata i1 %192, metadata !3747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3912
  br i1 %16, label %196, label %193, !dbg !3918

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3920
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3921
  br i1 %195, label %235, label %196, !dbg !3922

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3923

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3924

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3927
  br i1 %199, label %201, label %200, !dbg !3932

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3933
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3933
  unreachable, !dbg !3933

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3927
  %203 = add nuw nsw i8 %183, 1, !dbg !3935
  call void @llvm.dbg.value(metadata i8 %203, metadata !3736, metadata !DIExpression()), !dbg !3761
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3936
  br label %231, !dbg !3937

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3938

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3939
  br i1 %207, label %209, label %208, !dbg !3944

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3945
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3945
  unreachable, !dbg !3945

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3939
  %211 = add nuw nsw i8 %182, 1, !dbg !3947
  call void @llvm.dbg.value(metadata i8 %211, metadata !3737, metadata !DIExpression()), !dbg !3761
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3948
  br label %231, !dbg !3949

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3950

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3952
  br i1 %215, label %217, label %216, !dbg !3957

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3958
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3958
  unreachable, !dbg !3958

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3952
  %219 = add nuw nsw i8 %183, 1, !dbg !3960
  call void @llvm.dbg.value(metadata i8 %219, metadata !3736, metadata !DIExpression()), !dbg !3761
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3961
  br label %231, !dbg !3962

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3963
  br i1 %222, label %224, label %223, !dbg !3967

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3968
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3968
  unreachable, !dbg !3968

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3963
  %226 = add nuw nsw i8 %182, 1, !dbg !3970
  call void @llvm.dbg.value(metadata i8 %226, metadata !3737, metadata !DIExpression()), !dbg !3761
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !3971
  store i8 %185, i8* %227, align 1, !dbg !3972
  %228 = add nuw nsw i8 %182, 2, !dbg !3973
  call void @llvm.dbg.value(metadata i8 %228, metadata !3737, metadata !DIExpression()), !dbg !3761
  %229 = zext i8 %226 to i32, !dbg !3974
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !3974
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !3975
  br label %235, !dbg !3976

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3761
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3896
  call void @llvm.dbg.value(metadata i8 %237, metadata !3737, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 %236, metadata !3736, metadata !DIExpression()), !dbg !3761
  %238 = add nuw nsw i32 %181, 1, !dbg !3976
  call void @llvm.dbg.value(metadata i8* %186, metadata !3711, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %238, metadata !3740, metadata !DIExpression()), !dbg !3891
  %239 = icmp eq i32 %238, %31, !dbg !3892
  br i1 %239, label %160, label %179, !dbg !3893, !llvm.loop !3977

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3901
  call void @llvm.dbg.value(metadata i32 %177, metadata !3709, metadata !DIExpression()), !dbg !3761
  store i32 %176, i32* %14, align 1, !dbg !3979
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !3980
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !3981
  call void @llvm.dbg.value(metadata i32 %243, metadata !3739, metadata !DIExpression()), !dbg !3761
  %244 = icmp slt i32 %243, 0, !dbg !3982
  br i1 %244, label %287, label %245, !dbg !3984

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3709, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3761
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !3985
  %248 = add nuw nsw i32 %44, %24, !dbg !3985
  %249 = sub i32 %247, %248, !dbg !3985
  call void @llvm.dbg.value(metadata i32 %249, metadata !3749, metadata !DIExpression()), !dbg !3761
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %250, metadata !3739, metadata !DIExpression()), !dbg !3761
  %251 = icmp slt i32 %250, 0, !dbg !3987
  br i1 %251, label %287, label %252, !dbg !3989

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %253, metadata !3709, metadata !DIExpression()), !dbg !3761
  %254 = add nuw nsw i32 %253, %250, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %254, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 0, metadata !3750, metadata !DIExpression()), !dbg !3992
  %255 = icmp eq i8 %162, 0, !dbg !3993
  br i1 %255, label %284, label %256, !dbg !3994

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !3994

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3750, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata i32 %260, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !3995
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !3996
  %262 = load i8, i8* %261, align 1, !dbg !3996
  call void @llvm.dbg.value(metadata i8 %262, metadata !3752, metadata !DIExpression()), !dbg !3997
  store i8 %262, i8* %10, align 1, !dbg !3998
  %263 = zext i8 %262 to i32, !dbg !3999
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !3999
  %265 = bitcast i32* %264 to i8**, !dbg !4000
  %266 = load i8*, i8** %265, align 4, !dbg !4000
  call void @llvm.dbg.value(metadata i8* %266, metadata !3755, metadata !DIExpression()), !dbg !3997
  br i1 %257, label %270, label %267, !dbg !4001

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4002
  %269 = load i16, i16* %268, align 2, !dbg !4002
  br label %270, !dbg !4001

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4001
  call void @llvm.dbg.value(metadata i32 undef, metadata !3756, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3997
  call void @llvm.dbg.value(metadata i8* %10, metadata !3752, metadata !DIExpression(DW_OP_deref)), !dbg !3997
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4003
  call void @llvm.dbg.value(metadata i32 %272, metadata !3739, metadata !DIExpression()), !dbg !3761
  %273 = icmp slt i32 %272, 0, !dbg !4004
  br i1 %273, label %277, label %274, !dbg !4006

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3756, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3709, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3761
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4007
  call void @llvm.dbg.value(metadata i32 %275, metadata !3739, metadata !DIExpression()), !dbg !3761
  %276 = icmp slt i32 %275, 0, !dbg !4008
  br i1 %276, label %277, label %279, !dbg !4010

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4011
  call void @llvm.dbg.value(metadata i32 undef, metadata !3709, metadata !DIExpression()), !dbg !3761
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %280, metadata !3709, metadata !DIExpression()), !dbg !3761
  %281 = add nsw i32 %280, %275, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %281, metadata !3709, metadata !DIExpression()), !dbg !3761
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4011
  %282 = add nuw nsw i32 %259, 1, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %282, metadata !3750, metadata !DIExpression()), !dbg !3992
  %283 = icmp eq i32 %282, %167, !dbg !3993
  br i1 %283, label %284, label %258, !dbg !3994, !llvm.loop !4015

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !3991
  call void @llvm.dbg.value(metadata i32 %285, metadata !3709, metadata !DIExpression()), !dbg !3761
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4017
  br label %287, !dbg !4018

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3761
  ret i32 %288, !dbg !4019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4024, metadata !DIExpression()), !dbg !4032
  %2 = icmp eq i8* %0, null, !dbg !4033
  br i1 %2, label %3, label %4, !dbg !4036

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4037
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4037
  unreachable, !dbg !4037

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4025, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i8* %0, metadata !4026, metadata !DIExpression()), !dbg !4032
  %5 = load i8, i8* %0, align 1, !dbg !4039
  %6 = zext i8 %5 to i32, !dbg !4039
  %7 = shl nuw nsw i32 %6, 2, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %7, metadata !4027, metadata !DIExpression()), !dbg !4032
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4041
  %9 = load i8, i8* %8, align 1, !dbg !4041
  %10 = zext i8 %9 to i32, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %10, metadata !4028, metadata !DIExpression()), !dbg !4032
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4042
  %12 = load i8, i8* %11, align 1, !dbg !4042
  %13 = zext i8 %12 to i32, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %13, metadata !4029, metadata !DIExpression()), !dbg !4032
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4043
  call void @llvm.dbg.value(metadata i8* %14, metadata !4025, metadata !DIExpression()), !dbg !4032
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4044
  call void @llvm.dbg.value(metadata i8* %15, metadata !4025, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 0, metadata !4030, metadata !DIExpression()), !dbg !4045
  %16 = icmp eq i8 %9, 0, !dbg !4046
  br i1 %16, label %17, label %22, !dbg !4048

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4032
  %19 = ptrtoint i8* %18 to i32, !dbg !4049
  %20 = ptrtoint i8* %0 to i32, !dbg !4049
  %21 = sub i32 %19, %20, !dbg !4049
  ret i32 %21, !dbg !4050

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4030, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i8* %24, metadata !4025, metadata !DIExpression()), !dbg !4032
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4051
  call void @llvm.dbg.value(metadata i8* %25, metadata !4025, metadata !DIExpression()), !dbg !4032
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4053
  %27 = add i32 %26, 1, !dbg !4054
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4055
  call void @llvm.dbg.value(metadata i8* %28, metadata !4025, metadata !DIExpression()), !dbg !4032
  %29 = add nuw nsw i32 %23, 1, !dbg !4056
  call void @llvm.dbg.value(metadata i32 %29, metadata !4030, metadata !DIExpression()), !dbg !4045
  %30 = icmp eq i32 %29, %10, !dbg !4046
  br i1 %30, label %17, label %22, !dbg !4048, !llvm.loop !4057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4059 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4063, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i8* %1, metadata !4064, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i8* %2, metadata !4065, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i16 %3, metadata !4066, metadata !DIExpression()), !dbg !4067
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4068
  br i1 %5, label %6, label %9, !dbg !4070

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4071
  %8 = add i32 %7, 1, !dbg !4073
  br label %20, !dbg !4074

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4075
  br i1 %10, label %13, label %11, !dbg !4076

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4076
  br label %16, !dbg !4076

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4077
  %15 = add i32 %14, 1, !dbg !4078
  br label %16, !dbg !4076

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4076
  %18 = and i32 %17, 65535, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %17, metadata !4066, metadata !DIExpression()), !dbg !4067
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4080
  br label %20, !dbg !4081

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4067
  ret i32 %21, !dbg !4082
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4085, metadata !DIExpression()), !dbg !4086
  ret i32 0, !dbg !4087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4088 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4092, metadata !DIExpression()), !dbg !4093
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4094
  ret void, !dbg !4095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4096 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4097
  ret i8* %1, !dbg !4098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4099 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4110, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i8* %0, metadata !4109, metadata !DIExpression()), !dbg !4121
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4122
  ret void, !dbg !4124
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4129, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i8* %1, metadata !4130, metadata !DIExpression()), !dbg !4131
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4132
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4132
  ret i32 %4, !dbg !4133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4134 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4141, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4138, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i8* %1, metadata !4139, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i8* %2, metadata !4140, metadata !DIExpression()), !dbg !4142
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4143
  ret void, !dbg !4144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4145 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4149, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 %1, metadata !4150, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 0, metadata !4151, metadata !DIExpression()), !dbg !4152
  %3 = icmp eq i32 %1, 0, !dbg !4153
  br i1 %3, label %13, label %4, !dbg !4156

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4151, metadata !DIExpression()), !dbg !4152
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4157
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4159
  %8 = load i8, i8* %7, align 1, !dbg !4159
  %9 = zext i8 %8 to i32, !dbg !4159
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4157
  %11 = add nuw i32 %5, 1, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %11, metadata !4151, metadata !DIExpression()), !dbg !4152
  %12 = icmp eq i32 %11, %1, !dbg !4153
  br i1 %12, label %13, label %4, !dbg !4156, !llvm.loop !4161

13:                                               ; preds = %4, %2
  ret void, !dbg !4163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4164 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4168, metadata !DIExpression()), !dbg !4170
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4171
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4169, metadata !DIExpression()), !dbg !4172
  call void @llvm.va_start(i8* nonnull %3), !dbg !4173
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4174
  %5 = load i32, i32* %4, align 4, !dbg !4174
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4174
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4174
  call void @llvm.va_end(i8* nonnull %3), !dbg !4175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4176
  ret void, !dbg !4176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4177 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4181, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 %1, metadata !4182, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i8* %2, metadata !4183, metadata !DIExpression()), !dbg !4186
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4187
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4187
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4184, metadata !DIExpression()), !dbg !4188
  call void @llvm.va_start(i8* nonnull %5), !dbg !4189
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4190
  %7 = load i32, i32* %6, align 4, !dbg !4190
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4190
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %9, metadata !4185, metadata !DIExpression()), !dbg !4186
  call void @llvm.va_end(i8* nonnull %5), !dbg !4191
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4192
  ret i32 %9, !dbg !4193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4194 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4201, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %0, metadata !4198, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %1, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %2, metadata !4200, metadata !DIExpression()), !dbg !4208
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4209
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4209
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4202, metadata !DIExpression()), !dbg !4210
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4211
  store i8* %0, i8** %7, align 4, !dbg !4211
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4211
  store i32 %1, i32* %8, align 4, !dbg !4211
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4211
  store i32 0, i32* %9, align 4, !dbg !4211
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4212
  %10 = load i32, i32* %9, align 4, !dbg !4213
  %11 = load i32, i32* %8, align 4, !dbg !4215
  %12 = icmp slt i32 %10, %11, !dbg !4216
  br i1 %12, label %13, label %15, !dbg !4217

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4218
  store i8 0, i8* %14, align 1, !dbg !4220
  br label %15, !dbg !4221

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4222
  ret i32 %10, !dbg !4223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4229, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4230, metadata !DIExpression()), !dbg !4231
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4232
  %4 = load i8*, i8** %3, align 4, !dbg !4232
  %5 = icmp eq i8* %4, null, !dbg !4234
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4235
  br i1 %5, label %12, label %8, !dbg !4236

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4237
  %10 = load i32, i32* %9, align 4, !dbg !4237
  %11 = icmp slt i32 %7, %10, !dbg !4238
  br i1 %11, label %15, label %12, !dbg !4239

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4240
  %14 = add nsw i32 %7, 1, !dbg !4242
  store i32 %14, i32* %13, align 4, !dbg !4242
  br label %25, !dbg !4243

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4244
  %17 = icmp eq i32 %7, %16, !dbg !4246
  br i1 %17, label %18, label %21, !dbg !4247

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4248
  store i32 %19, i32* %6, align 4, !dbg !4248
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4250
  store i8 0, i8* %20, align 1, !dbg !4251
  br label %25, !dbg !4252

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4253
  %23 = add nsw i32 %7, 1, !dbg !4255
  store i32 %23, i32* %6, align 4, !dbg !4255
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4256
  store i8 %22, i8* %24, align 1, !dbg !4257
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4258
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4259 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4264, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8* %1, metadata !4265, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8* %2, metadata !4266, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8* %3, metadata !4267, metadata !DIExpression()), !dbg !4268
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4269
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4270
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4271
  unreachable, !dbg !4272
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4273 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4380
  ret %struct.k_thread* %1, !dbg !4381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4387, metadata !DIExpression()), !dbg !4388
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4389, !srcloc !4391
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4392
  ret void, !dbg !4393
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4394 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4395, !srcloc !4397
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4398
  ret %struct.k_thread* %1, !dbg !4399
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4400 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4413, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4410, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8* %1, metadata !4411, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8* %2, metadata !4412, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %4, metadata !4414, metadata !DIExpression()), !dbg !4539
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4540
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4540
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4415, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 0, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i1 undef, metadata !4421, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4539
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4542

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4542

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4543
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4413, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8* %30, metadata !4412, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %29, metadata !4419, metadata !DIExpression()), !dbg !4539
  %31 = load i8, i8* %30, align 1, !dbg !4544
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4542

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4544
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4545
  call void @llvm.dbg.value(metadata i8* %34, metadata !4412, metadata !DIExpression()), !dbg !4539
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %35, metadata !4423, metadata !DIExpression()), !dbg !4546
  %36 = icmp slt i32 %35, 0, !dbg !4547
  %37 = add i32 %29, 1, !dbg !4545
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %36, label %365, label %28, !llvm.loop !4549

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4551
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4428, metadata !DIExpression()), !dbg !4552
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4552
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4471, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4474, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %30, metadata !4477, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 -1, metadata !4478, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 -1, metadata !4479, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* null, metadata !4480, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %14, metadata !4481, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8 0, metadata !4482, metadata !DIExpression()), !dbg !4553
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %39, metadata !4412, metadata !DIExpression()), !dbg !4539
  %40 = load i24, i24* %15, align 8, !dbg !4555
  %41 = and i24 %40, 256, !dbg !4555
  %42 = icmp eq i24 %41, 0, !dbg !4555
  br i1 %42, label %51, label %43, !dbg !4557

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4558
  call void @llvm.dbg.value(metadata i8* %44, metadata !4413, metadata !DIExpression()), !dbg !4539
  %45 = bitcast i8* %27 to i32*, !dbg !4558
  %46 = load i32, i32* %45, align 4, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %46, metadata !4478, metadata !DIExpression()), !dbg !4553
  %47 = icmp slt i32 %46, 0, !dbg !4560
  br i1 %47, label %48, label %56, !dbg !4562

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4563
  store i24 %49, i24* %15, align 8, !dbg !4563
  %50 = sub nsw i32 0, %46, !dbg !4565
  call void @llvm.dbg.value(metadata i32 %50, metadata !4478, metadata !DIExpression()), !dbg !4553
  br label %56, !dbg !4566

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4567
  %53 = icmp eq i24 %52, 0, !dbg !4567
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4569
  br label %56, !dbg !4569

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4570
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4553
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4413, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %58, metadata !4478, metadata !DIExpression()), !dbg !4553
  %60 = and i24 %57, 1024, !dbg !4570
  %61 = icmp eq i24 %60, 0, !dbg !4570
  br i1 %61, label %69, label %62, !dbg !4571

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4572
  call void @llvm.dbg.value(metadata i8* %63, metadata !4413, metadata !DIExpression()), !dbg !4539
  %64 = bitcast i8* %59 to i32*, !dbg !4572
  %65 = load i32, i32* %64, align 4, !dbg !4572
  call void @llvm.dbg.value(metadata i32 %65, metadata !4483, metadata !DIExpression()), !dbg !4573
  %66 = icmp slt i32 %65, 0, !dbg !4574
  br i1 %66, label %67, label %74, !dbg !4576

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4577
  store i24 %68, i24* %15, align 8, !dbg !4577
  br label %74, !dbg !4579

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4580
  %71 = icmp eq i24 %70, 0, !dbg !4580
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4582
  br label %74, !dbg !4582

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4583
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4553
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4553
  call void @llvm.dbg.value(metadata i8* %77, metadata !4413, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %76, metadata !4479, metadata !DIExpression()), !dbg !4553
  store i32 0, i32* %16, align 4, !dbg !4584
  store i32 0, i32* %17, align 8, !dbg !4585
  %78 = lshr i24 %75, 16, !dbg !4583
  call void @llvm.dbg.value(metadata i24 %78, metadata !4486, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4553
  %79 = lshr i24 %75, 11, !dbg !4586
  %80 = and i24 %79, 15, !dbg !4586
  %81 = zext i24 %80 to i32, !dbg !4586
  call void @llvm.dbg.value(metadata i32 %81, metadata !4487, metadata !DIExpression()), !dbg !4553
  %82 = trunc i24 %78 to i3, !dbg !4587
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4587

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4588

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4591
  call void @llvm.dbg.value(metadata i8* %85, metadata !4413, metadata !DIExpression()), !dbg !4539
  %86 = bitcast i8* %77 to i32*, !dbg !4591
  %87 = load i32, i32* %86, align 4, !dbg !4591
  %88 = sext i32 %87 to i64, !dbg !4591
  store i64 %88, i64* %20, align 8, !dbg !4593
  br label %115, !dbg !4594

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4595
  call void @llvm.dbg.value(metadata i8* %90, metadata !4413, metadata !DIExpression()), !dbg !4539
  %91 = bitcast i8* %77 to i32*, !dbg !4595
  %92 = load i32, i32* %91, align 4, !dbg !4595
  %93 = sext i32 %92 to i64, !dbg !4595
  store i64 %93, i64* %20, align 8, !dbg !4598
  br label %115, !dbg !4599

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4600
  %96 = add i32 %95, 7, !dbg !4600
  %97 = and i32 %96, -8, !dbg !4600
  %98 = inttoptr i32 %97 to i8*, !dbg !4600
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4600
  call void @llvm.dbg.value(metadata i8* %99, metadata !4413, metadata !DIExpression()), !dbg !4539
  %100 = inttoptr i32 %97 to i64*, !dbg !4600
  %101 = load i64, i64* %100, align 8, !dbg !4600
  store i64 %101, i64* %20, align 8, !dbg !4601
  br label %115, !dbg !4602

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4603
  %104 = add i32 %103, 7, !dbg !4603
  %105 = and i32 %104, -8, !dbg !4603
  %106 = inttoptr i32 %105 to i8*, !dbg !4603
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4603
  call void @llvm.dbg.value(metadata i8* %107, metadata !4413, metadata !DIExpression()), !dbg !4539
  %108 = inttoptr i32 %105 to i64*, !dbg !4603
  %109 = load i64, i64* %108, align 8, !dbg !4603
  store i64 %109, i64* %20, align 8, !dbg !4604
  br label %115, !dbg !4605

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %111, metadata !4413, metadata !DIExpression()), !dbg !4539
  %112 = bitcast i8* %77 to i32*, !dbg !4606
  %113 = load i32, i32* %112, align 4, !dbg !4606
  %114 = sext i32 %113 to i64, !dbg !4607
  store i64 %114, i64* %20, align 8, !dbg !4608
  br label %115, !dbg !4609

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4610
  call void @llvm.dbg.value(metadata i8* %117, metadata !4413, metadata !DIExpression()), !dbg !4539
  %118 = trunc i24 %79 to i4, !dbg !4611
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4611

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4612
  %121 = ashr exact i64 %120, 56, !dbg !4612
  store i64 %121, i64* %20, align 8, !dbg !4615
  br label %177, !dbg !4616

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4617
  %124 = ashr exact i64 %123, 48, !dbg !4617
  store i64 %124, i64* %20, align 8, !dbg !4620
  br label %177, !dbg !4621

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4622

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4625
  call void @llvm.dbg.value(metadata i8* %127, metadata !4413, metadata !DIExpression()), !dbg !4539
  %128 = bitcast i8* %77 to i32*, !dbg !4625
  %129 = load i32, i32* %128, align 4, !dbg !4625
  %130 = zext i32 %129 to i64, !dbg !4625
  store i64 %130, i64* %20, align 8, !dbg !4627
  br label %157, !dbg !4628

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4629
  call void @llvm.dbg.value(metadata i8* %132, metadata !4413, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8* %132, metadata !4413, metadata !DIExpression()), !dbg !4539
  %133 = bitcast i8* %77 to i32*, !dbg !4629
  %134 = load i32, i32* %133, align 4, !dbg !4629
  %135 = zext i32 %134 to i64, !dbg !4629
  store i64 %135, i64* %20, align 8, !dbg !4629
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4631
  %138 = add i32 %137, 7, !dbg !4631
  %139 = and i32 %138, -8, !dbg !4631
  %140 = inttoptr i32 %139 to i8*, !dbg !4631
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4631
  call void @llvm.dbg.value(metadata i8* %141, metadata !4413, metadata !DIExpression()), !dbg !4539
  %142 = inttoptr i32 %139 to i64*, !dbg !4631
  %143 = load i64, i64* %142, align 8, !dbg !4631
  store i64 %143, i64* %20, align 8, !dbg !4632
  br label %157, !dbg !4633

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4634
  %146 = add i32 %145, 7, !dbg !4634
  %147 = and i32 %146, -8, !dbg !4634
  %148 = inttoptr i32 %147 to i8*, !dbg !4634
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4634
  call void @llvm.dbg.value(metadata i8* %149, metadata !4413, metadata !DIExpression()), !dbg !4539
  %150 = inttoptr i32 %147 to i64*, !dbg !4634
  %151 = load i64, i64* %150, align 8, !dbg !4634
  store i64 %151, i64* %20, align 8, !dbg !4635
  br label %157, !dbg !4636

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4637
  call void @llvm.dbg.value(metadata i8* %153, metadata !4413, metadata !DIExpression()), !dbg !4539
  %154 = bitcast i8* %77 to i32*, !dbg !4637
  %155 = load i32, i32* %154, align 4, !dbg !4637
  %156 = zext i32 %155 to i64, !dbg !4638
  store i64 %156, i64* %20, align 8, !dbg !4639
  br label %157, !dbg !4640

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4641
  call void @llvm.dbg.value(metadata i8* %159, metadata !4413, metadata !DIExpression()), !dbg !4539
  %160 = trunc i24 %79 to i4, !dbg !4642
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4642

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4643
  store i64 %162, i64* %20, align 8, !dbg !4646
  br label %177, !dbg !4647

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4648
  store i64 %164, i64* %20, align 8, !dbg !4651
  br label %177, !dbg !4652

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4653
  %167 = add i32 %166, 7, !dbg !4653
  %168 = and i32 %167, -8, !dbg !4653
  %169 = inttoptr i32 %168 to i8*, !dbg !4653
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4653
  call void @llvm.dbg.value(metadata i8* %170, metadata !4413, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8* %170, metadata !4413, metadata !DIExpression()), !dbg !4539
  %171 = inttoptr i32 %168 to double*, !dbg !4653
  %172 = load double, double* %171, align 8, !dbg !4653
  store double %172, double* %19, align 8, !dbg !4653
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4657
  call void @llvm.dbg.value(metadata i8* %174, metadata !4413, metadata !DIExpression()), !dbg !4539
  %175 = bitcast i8* %77 to i8**, !dbg !4657
  %176 = load i8*, i8** %175, align 4, !dbg !4657
  store i8* %176, i8** %18, align 8, !dbg !4660
  br label %177, !dbg !4661

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4553
  call void @llvm.dbg.value(metadata i8* %178, metadata !4413, metadata !DIExpression()), !dbg !4539
  %179 = and i24 %75, 3, !dbg !4662
  %180 = icmp eq i24 %179, 0, !dbg !4662
  br i1 %180, label %185, label %181, !dbg !4662

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4663
  call void @llvm.dbg.value(metadata i32 %182, metadata !4488, metadata !DIExpression()), !dbg !4664
  %183 = icmp slt i32 %182, 0, !dbg !4665
  %184 = add i32 %182, %29, !dbg !4663
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4667
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4668

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %188, metadata !4492, metadata !DIExpression()), !dbg !4670
  %189 = icmp slt i32 %188, 0, !dbg !4671
  %190 = add i32 %29, 1, !dbg !4669
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4673
  call void @llvm.dbg.value(metadata i8* %192, metadata !4480, metadata !DIExpression()), !dbg !4553
  %193 = icmp sgt i32 %76, -1, !dbg !4674
  br i1 %193, label %194, label %196, !dbg !4676

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4677
  call void @llvm.dbg.value(metadata i32 %195, metadata !4495, metadata !DIExpression()), !dbg !4679
  br label %241, !dbg !4680

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4681
  call void @llvm.dbg.value(metadata i32 %197, metadata !4495, metadata !DIExpression()), !dbg !4679
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4480, metadata !DIExpression()), !dbg !4553
  %199 = load i64, i64* %20, align 8, !dbg !4683
  %200 = trunc i64 %199 to i8, !dbg !4684
  store i8 %200, i8* %10, align 1, !dbg !4685
  call void @llvm.dbg.value(metadata i8* %23, metadata !4481, metadata !DIExpression()), !dbg !4553
  br label %245, !dbg !4686

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4687
  %203 = icmp eq i24 %202, 0, !dbg !4687
  %204 = trunc i24 %75 to i8, !dbg !4689
  %205 = shl i8 %204, 1, !dbg !4689
  %206 = and i8 %205, 32, !dbg !4689
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4689
  call void @llvm.dbg.value(metadata i8 %207, metadata !4482, metadata !DIExpression()), !dbg !4553
  %208 = load i64, i64* %20, align 8, !dbg !4690
  call void @llvm.dbg.value(metadata i64 %208, metadata !4420, metadata !DIExpression()), !dbg !4539
  %209 = icmp slt i64 %208, 0, !dbg !4691
  br i1 %209, label %210, label %212, !dbg !4693

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4482, metadata !DIExpression()), !dbg !4553
  %211 = sub nsw i64 0, %208, !dbg !4694
  store i64 %211, i64* %20, align 8, !dbg !4696
  br label %212, !dbg !4697

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4553
  call void @llvm.dbg.value(metadata i8 %213, metadata !4482, metadata !DIExpression()), !dbg !4553
  %214 = load i64, i64* %20, align 8, !dbg !4698
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4699
  call void @llvm.dbg.value(metadata i8* %215, metadata !4480, metadata !DIExpression()), !dbg !4553
  br label %216, !dbg !4700

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4701
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4702
  call void @llvm.dbg.value(metadata i8* %218, metadata !4480, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8 %217, metadata !4482, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.label(metadata !4538), !dbg !4703
  %219 = icmp sgt i32 %76, -1, !dbg !4704
  br i1 %219, label %222, label %220, !dbg !4705

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4706
  br label %245, !dbg !4705

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4708
  %224 = sub i32 %22, %223, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %224, metadata !4497, metadata !DIExpression()), !dbg !4709
  %225 = load i24, i24* %15, align 8, !dbg !4710
  %226 = and i24 %225, -65, !dbg !4710
  store i24 %226, i24* %15, align 8, !dbg !4710
  %227 = icmp ugt i32 %76, %224, !dbg !4711
  br i1 %227, label %228, label %245, !dbg !4713

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4714
  store i32 %229, i32* %16, align 4, !dbg !4716
  br label %245, !dbg !4717

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4718
  %232 = icmp eq i8* %231, null, !dbg !4720
  br i1 %232, label %245, label %233, !dbg !4721

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4722
  %235 = zext i32 %234 to i64, !dbg !4722
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4724
  call void @llvm.dbg.value(metadata i8* %236, metadata !4480, metadata !DIExpression()), !dbg !4553
  %237 = load i24, i24* %15, align 8, !dbg !4725
  %238 = or i24 %237, 1048576, !dbg !4725
  store i24 %238, i24* %15, align 8, !dbg !4725
  store i8 120, i8* %21, align 1, !dbg !4726
  br label %216, !dbg !4727

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4728
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4731
  br label %363, !dbg !4732

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %242, metadata !4495, metadata !DIExpression()), !dbg !4679
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4734
  call void @llvm.dbg.value(metadata i32 -1, metadata !4479, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %29, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8* %192, metadata !4480, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %243, metadata !4481, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8 0, metadata !4482, metadata !DIExpression()), !dbg !4553
  %244 = icmp eq i8* %192, null, !dbg !4735
  br i1 %244, label %363, label %245, !dbg !4737, !llvm.loop !4549

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4706
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4553
  call void @llvm.dbg.value(metadata i32 0, metadata !4501, metadata !DIExpression()), !dbg !4553
  %250 = zext i8 %249 to i32, !dbg !4738
  %251 = icmp eq i8 %249, 0, !dbg !4740
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  call void @llvm.dbg.value(metadata i32 undef, metadata !4500, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  call void @llvm.dbg.value(metadata i32 undef, metadata !4500, metadata !DIExpression()), !dbg !4553
  %252 = icmp sgt i32 %58, 0, !dbg !4741
  br i1 %252, label %253, label %302, !dbg !4742

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4706
  %255 = icmp eq i24 %254, 0, !dbg !4706
  %256 = ptrtoint i8* %248 to i32, !dbg !4743
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  %257 = ptrtoint i8* %247 to i32, !dbg !4743
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  %258 = xor i1 %251, true, !dbg !4744
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  %259 = sext i1 %258 to i32, !dbg !4744
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  %260 = lshr i24 %246, 19, !dbg !4745
  %261 = and i24 %260, 1, !dbg !4745
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4745
  %263 = zext i24 %262 to i32, !dbg !4745
  %264 = add i32 %257, %259, !dbg !4745
  %265 = add i32 %256, %263, !dbg !4745
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  %266 = and i24 %246, 4194304, !dbg !4746
  %267 = icmp eq i24 %266, 0, !dbg !4746
  %268 = load i32, i32* %16, align 4, !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4553
  call void @llvm.dbg.value(metadata i32 undef, metadata !4500, metadata !DIExpression()), !dbg !4553
  %269 = load i32, i32* %17, align 8, !dbg !4749
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4749
  call void @llvm.dbg.value(metadata i32 undef, metadata !4500, metadata !DIExpression()), !dbg !4553
  %271 = add i32 %264, %58, !dbg !4749
  %272 = add i32 %265, %268, !dbg !4749
  %273 = add i32 %272, %270, !dbg !4750
  %274 = sub i32 %271, %273, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %274, metadata !4478, metadata !DIExpression()), !dbg !4553
  %275 = and i24 %246, 4, !dbg !4751
  %276 = icmp eq i24 %275, 0, !dbg !4751
  br i1 %276, label %277, label %302, !dbg !4752

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4502, metadata !DIExpression()), !dbg !4753
  %278 = and i24 %246, 64, !dbg !4754
  %279 = icmp eq i24 %278, 0, !dbg !4754
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4755
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4755
  %282 = select i1 %279, i32 32, i32 48, !dbg !4755
  br i1 %280, label %287, label %283, !dbg !4755

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %284, metadata !4507, metadata !DIExpression()), !dbg !4757
  %285 = icmp slt i32 %284, 0, !dbg !4758
  %286 = add i32 %29, 1, !dbg !4756
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4553
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4543
  call void @llvm.dbg.value(metadata i32 %290, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8 undef, metadata !4502, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8 %288, metadata !4482, metadata !DIExpression()), !dbg !4553
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4760
  %292 = add i32 %291, -1, !dbg !4760
  br label %293, !dbg !4760

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4761
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4543
  call void @llvm.dbg.value(metadata i32 %295, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %294, metadata !4478, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %294, metadata !4478, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4553
  %296 = icmp sgt i32 %294, 0, !dbg !4762
  br i1 %296, label %297, label %302, !dbg !4760

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %298, metadata !4478, metadata !DIExpression()), !dbg !4553
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %299, metadata !4513, metadata !DIExpression()), !dbg !4765
  %300 = icmp slt i32 %299, 0, !dbg !4766
  %301 = add i32 %295, 1, !dbg !4764
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %300, label %361, label %293, !llvm.loop !4768

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4553
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4553
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4543
  call void @llvm.dbg.value(metadata i32 %305, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %304, metadata !4478, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8 %303, metadata !4482, metadata !DIExpression()), !dbg !4553
  %306 = icmp eq i8 %303, 0, !dbg !4770
  br i1 %306, label %312, label %307, !dbg !4771

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4772
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %309, metadata !4516, metadata !DIExpression()), !dbg !4774
  %310 = icmp slt i32 %309, 0, !dbg !4775
  %311 = add i32 %305, 1, !dbg !4773
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4543
  call void @llvm.dbg.value(metadata i32 %313, metadata !4419, metadata !DIExpression()), !dbg !4539
  %314 = lshr i24 %246, 20, !dbg !4777
  %315 = lshr i24 %246, 19, !dbg !4778
  %316 = or i24 %314, %315, !dbg !4779
  %317 = and i24 %316, 1, !dbg !4779
  %318 = icmp eq i24 %317, 0, !dbg !4779
  br i1 %318, label %323, label %319, !dbg !4780

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %320, metadata !4520, metadata !DIExpression()), !dbg !4782
  %321 = icmp slt i32 %320, 0, !dbg !4783
  %322 = add i32 %313, 1, !dbg !4781
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4543
  call void @llvm.dbg.value(metadata i32 %324, metadata !4419, metadata !DIExpression()), !dbg !4539
  %325 = and i24 %246, 1048576, !dbg !4785
  %326 = icmp eq i24 %325, 0, !dbg !4785
  br i1 %326, label %333, label %327, !dbg !4786

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4787
  %329 = zext i8 %328 to i32, !dbg !4787
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %330, metadata !4526, metadata !DIExpression()), !dbg !4788
  %331 = icmp slt i32 %330, 0, !dbg !4789
  %332 = add i32 %324, 1, !dbg !4787
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4543
  call void @llvm.dbg.value(metadata i32 %334, metadata !4419, metadata !DIExpression()), !dbg !4539
  %335 = load i32, i32* %16, align 4, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %335, metadata !4501, metadata !DIExpression()), !dbg !4553
  br label %336, !dbg !4792

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4793
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4543
  call void @llvm.dbg.value(metadata i32 %338, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %337, metadata !4501, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4553
  %339 = icmp sgt i32 %337, 0, !dbg !4794
  br i1 %339, label %340, label %345, !dbg !4792

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4795
  call void @llvm.dbg.value(metadata i32 %341, metadata !4501, metadata !DIExpression()), !dbg !4553
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %342, metadata !4530, metadata !DIExpression()), !dbg !4797
  %343 = icmp slt i32 %342, 0, !dbg !4798
  %344 = add i32 %338, 1, !dbg !4796
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %343, label %361, label %336, !llvm.loop !4800

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %346, metadata !4533, metadata !DIExpression()), !dbg !4803
  %347 = icmp slt i32 %346, 0, !dbg !4804
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %349, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %304, metadata !4478, metadata !DIExpression()), !dbg !4553
  %350 = icmp sgt i32 %304, 0, !dbg !4806
  br i1 %350, label %351, label %363, !dbg !4807

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4807
  %353 = add i32 %352, %338, !dbg !4807
  br label %354, !dbg !4807

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %355, metadata !4478, metadata !DIExpression()), !dbg !4553
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %356, metadata !4535, metadata !DIExpression()), !dbg !4809
  %357 = icmp slt i32 %356, 0, !dbg !4810
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4812
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %359, metadata !4478, metadata !DIExpression()), !dbg !4553
  %360 = icmp sgt i32 %355, 1, !dbg !4806
  br i1 %360, label %354, label %363, !dbg !4807, !llvm.loop !4813

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4550
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4543
  call void @llvm.dbg.value(metadata i32 %364, metadata !4419, metadata !DIExpression()), !dbg !4539
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4550
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4539
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4815
  ret i32 %366, !dbg !4815
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4816 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4820, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %1, metadata !4821, metadata !DIExpression()), !dbg !4822
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4823
  store i24 0, i24* %3, align 4, !dbg !4823
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4823
  store i8 0, i8* %4, align 1, !dbg !4823
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4823
  store i32 0, i32* %5, align 4, !dbg !4823
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4823
  store i32 0, i32* %6, align 4, !dbg !4823
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4824
  call void @llvm.dbg.value(metadata i8* %7, metadata !4821, metadata !DIExpression()), !dbg !4822
  %8 = load i8, i8* %7, align 1, !dbg !4825
  %9 = icmp eq i8 %8, 37, !dbg !4827
  br i1 %9, label %10, label %12, !dbg !4828

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4829
  call void @llvm.dbg.value(metadata i8* %11, metadata !4821, metadata !DIExpression()), !dbg !4822
  store i8 37, i8* %4, align 1, !dbg !4831
  br label %18, !dbg !4832

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4833
  call void @llvm.dbg.value(metadata i8* %13, metadata !4821, metadata !DIExpression()), !dbg !4822
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %14, metadata !4821, metadata !DIExpression()), !dbg !4822
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4835
  call void @llvm.dbg.value(metadata i8* %15, metadata !4821, metadata !DIExpression()), !dbg !4822
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4836
  call void @llvm.dbg.value(metadata i8* %16, metadata !4821, metadata !DIExpression()), !dbg !4822
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %17, metadata !4821, metadata !DIExpression()), !dbg !4822
  br label %18, !dbg !4838

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4822
  ret i8* %19, !dbg !4839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4840 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4844, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i8* %1, metadata !4845, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i8* %2, metadata !4846, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i8* %3, metadata !4847, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i32 0, metadata !4848, metadata !DIExpression()), !dbg !4851
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4852

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4853
  call void @llvm.dbg.value(metadata i32 %9, metadata !4848, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i8* %8, metadata !4846, metadata !DIExpression()), !dbg !4851
  %10 = icmp ult i8* %8, %3, !dbg !4854
  br i1 %10, label %11, label %13, !dbg !4855

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4856
  br label %17, !dbg !4855

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4857

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4858
  %16 = icmp eq i8 %15, 0, !dbg !4857
  br i1 %16, label %24, label %17, !dbg !4852

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4856
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %19, metadata !4846, metadata !DIExpression()), !dbg !4851
  %20 = zext i8 %18 to i32, !dbg !4860
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %21, metadata !4849, metadata !DIExpression()), !dbg !4862
  %22 = icmp slt i32 %21, 0, !dbg !4863
  %23 = add i32 %9, 1, !dbg !4865
  call void @llvm.dbg.value(metadata i32 undef, metadata !4848, metadata !DIExpression()), !dbg !4851
  br i1 %22, label %24, label %7, !llvm.loop !4866

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4851
  ret i32 %25, !dbg !4868
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4869 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4873, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4874, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i8* %2, metadata !4875, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i8* %3, metadata !4876, metadata !DIExpression()), !dbg !4883
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4884
  %6 = load i8, i8* %5, align 1, !dbg !4884
  %7 = zext i8 %6 to i32, !dbg !4885
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4886
  %9 = icmp eq i32 %8, 0, !dbg !4886
  call void @llvm.dbg.value(metadata i1 %9, metadata !4877, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4883
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %10, metadata !4878, metadata !DIExpression()), !dbg !4883
  %11 = ptrtoint i8* %3 to i32, !dbg !4888
  %12 = ptrtoint i8* %2 to i32, !dbg !4888
  %13 = sub i32 %11, %12, !dbg !4888
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %14, metadata !4880, metadata !DIExpression()), !dbg !4883
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4890

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4883
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4873, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i8* %18, metadata !4880, metadata !DIExpression()), !dbg !4883
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4891
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %25, metadata !4881, metadata !DIExpression()), !dbg !4893
  %26 = icmp ult i32 %25, 10, !dbg !4894
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4895
  %28 = add i32 %27, %25, !dbg !4893
  %29 = trunc i32 %28 to i8, !dbg !4895
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %30, metadata !4880, metadata !DIExpression()), !dbg !4883
  store i8 %29, i8* %30, align 1, !dbg !4897
  call void @llvm.dbg.value(metadata i64 %22, metadata !4873, metadata !DIExpression()), !dbg !4883
  %31 = icmp uge i64 %19, %15, !dbg !4898
  %32 = icmp ugt i8* %30, %2, !dbg !4899
  %33 = and i1 %31, %32, !dbg !4899
  br i1 %33, label %17, label %34, !dbg !4900, !llvm.loop !4901

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4903
  %36 = load i24, i24* %35, align 4, !dbg !4903
  %37 = and i24 %36, 32, !dbg !4903
  %38 = icmp eq i24 %37, 0, !dbg !4903
  br i1 %38, label %44, label %39, !dbg !4905

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4906

40:                                               ; preds = %39
  br label %41, !dbg !4908

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4912
  store i24 %43, i24* %35, align 4, !dbg !4912
  br label %44, !dbg !4913

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4914 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4920, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.value(metadata i8* %1, metadata !4921, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.value(metadata i32 %2, metadata !4922, metadata !DIExpression()), !dbg !4923
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4924
  %5 = load i24, i24* %4, align 4, !dbg !4924
  %6 = lshr i24 %5, 11, !dbg !4924
  %7 = and i24 %6, 15, !dbg !4924
  %8 = zext i24 %7 to i32, !dbg !4924
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4925

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4926
  store i32 %2, i32* %10, align 4, !dbg !4928
  br label %28, !dbg !4929

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4930
  store i8 %12, i8* %1, align 1, !dbg !4931
  br label %28, !dbg !4932

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4933
  %15 = bitcast i8* %1 to i16*, !dbg !4934
  store i16 %14, i16* %15, align 2, !dbg !4935
  br label %28, !dbg !4936

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4937
  store i32 %2, i32* %17, align 4, !dbg !4938
  br label %28, !dbg !4939

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4940
  %20 = bitcast i8* %1 to i64*, !dbg !4941
  store i64 %19, i64* %20, align 8, !dbg !4942
  br label %28, !dbg !4943

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4944
  %23 = bitcast i8* %1 to i64*, !dbg !4945
  store i64 %22, i64* %23, align 8, !dbg !4946
  br label %28, !dbg !4947

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4948
  store i32 %2, i32* %25, align 4, !dbg !4949
  br label %28, !dbg !4950

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4951
  store i32 %2, i32* %27, align 4, !dbg !4952
  br label %28, !dbg !4953

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4954
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !4955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4958, metadata !DIExpression()), !dbg !4959
  %2 = add i32 %0, -65, !dbg !4960
  %3 = icmp ult i32 %2, 26, !dbg !4961
  %4 = zext i1 %3 to i32, !dbg !4961
  ret i32 %4, !dbg !4962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !4963 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4967, metadata !DIExpression()), !dbg !4968
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4969

2:                                                ; preds = %1
  br label %4, !dbg !4970

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4972

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4973
  ret i32 %5, !dbg !4974
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !4975 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4977, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %1, metadata !4978, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8 1, metadata !4979, metadata !DIExpression()), !dbg !4980
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4981

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4979, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %5, metadata !4978, metadata !DIExpression()), !dbg !4980
  %6 = load i8, i8* %5, align 1, !dbg !4982
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4984

7:                                                ; preds = %4
  br label %11, !dbg !4985

8:                                                ; preds = %4
  br label %11, !dbg !4987

9:                                                ; preds = %4
  br label %11, !dbg !4988

10:                                               ; preds = %4
  br label %11, !dbg !4989

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4990
  %14 = or i24 %13, %12, !dbg !4990
  store i24 %14, i24* %3, align 4, !dbg !4990
  call void @llvm.dbg.value(metadata i8 poison, metadata !4979, metadata !DIExpression()), !dbg !4980
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4978, metadata !DIExpression()), !dbg !4980
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4979, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %15, metadata !4978, metadata !DIExpression()), !dbg !4980
  %17 = load i24, i24* %3, align 4, !dbg !4991
  %18 = and i24 %17, 68, !dbg !4993
  %19 = icmp eq i24 %18, 68, !dbg !4993
  br i1 %19, label %20, label %22, !dbg !4993

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4994
  store i24 %21, i24* %3, align 4, !dbg !4994
  br label %22, !dbg !4996

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4997
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4998 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5000, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8* %1, metadata !5001, metadata !DIExpression()), !dbg !5004
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5005
  %5 = load i24, i24* %4, align 4, !dbg !5006
  %6 = or i24 %5, 128, !dbg !5006
  store i24 %6, i24* %4, align 4, !dbg !5006
  call void @llvm.dbg.value(metadata i8* %1, metadata !5001, metadata !DIExpression()), !dbg !5004
  %7 = load i8, i8* %1, align 1, !dbg !5007
  %8 = icmp eq i8 %7, 42, !dbg !5009
  br i1 %8, label %9, label %12, !dbg !5010

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5011
  store i24 %10, i24* %4, align 4, !dbg !5011
  call void @llvm.dbg.value(metadata i8* %1, metadata !5001, metadata !DIExpression()), !dbg !5004
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5013
  call void @llvm.dbg.value(metadata i8* %11, metadata !5001, metadata !DIExpression()), !dbg !5004
  store i8* %11, i8** %3, align 4, !dbg !5013
  br label %29, !dbg !5014

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5002, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8** %3, metadata !5001, metadata !DIExpression(DW_OP_deref)), !dbg !5004
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %13, metadata !5003, metadata !DIExpression()), !dbg !5004
  %14 = load i8*, i8** %3, align 4, !dbg !5016
  call void @llvm.dbg.value(metadata i8* %14, metadata !5001, metadata !DIExpression()), !dbg !5004
  %15 = icmp eq i8* %14, %1, !dbg !5018
  br i1 %15, label %29, label %16, !dbg !5019

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5020
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5022
  store i32 %13, i32* %18, align 4, !dbg !5023
  %19 = lshr i32 %13, 31, !dbg !5024
  %20 = lshr i24 %17, 1, !dbg !5025
  %21 = and i24 %20, 1, !dbg !5025
  %22 = zext i24 %21 to i32, !dbg !5025
  %23 = or i32 %19, %22, !dbg !5025
  %24 = trunc i32 %23 to i24, !dbg !5025
  %25 = shl nuw nsw i24 %24, 1, !dbg !5025
  %26 = and i24 %17, -131, !dbg !5025
  %27 = or i24 %26, 128, !dbg !5025
  %28 = or i24 %25, %27, !dbg !5025
  store i24 %28, i24* %4, align 4, !dbg !5025
  br label %29, !dbg !5026

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5004
  ret i8* %30, !dbg !5027
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5028 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5030, metadata !DIExpression()), !dbg !5033
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5033
  %4 = load i8, i8* %1, align 1, !dbg !5034
  %5 = icmp eq i8 %4, 46, !dbg !5035
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5036
  %7 = load i24, i24* %6, align 4, !dbg !5037
  %8 = select i1 %5, i24 512, i24 0, !dbg !5037
  %9 = and i24 %7, -513, !dbg !5037
  %10 = or i24 %9, %8, !dbg !5037
  store i24 %10, i24* %6, align 4, !dbg !5037
  br i1 %5, label %11, label %32, !dbg !5038

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5033
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %12, metadata !5031, metadata !DIExpression()), !dbg !5033
  store i8* %12, i8** %3, align 4, !dbg !5039
  %13 = load i8, i8* %12, align 1, !dbg !5040
  %14 = icmp eq i8 %13, 42, !dbg !5042
  br i1 %14, label %15, label %18, !dbg !5043

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5044
  store i24 %16, i24* %6, align 4, !dbg !5044
  call void @llvm.dbg.value(metadata i8* %12, metadata !5031, metadata !DIExpression()), !dbg !5033
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %17, metadata !5031, metadata !DIExpression()), !dbg !5033
  store i8* %17, i8** %3, align 4, !dbg !5046
  br label %32, !dbg !5047

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5031, metadata !DIExpression(DW_OP_deref)), !dbg !5033
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %19, metadata !5032, metadata !DIExpression()), !dbg !5033
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5049
  store i32 %19, i32* %20, align 4, !dbg !5050
  %21 = lshr i32 %19, 31, !dbg !5051
  %22 = load i24, i24* %6, align 4, !dbg !5052
  %23 = lshr i24 %22, 1, !dbg !5052
  %24 = and i24 %23, 1, !dbg !5052
  %25 = zext i24 %24 to i32, !dbg !5052
  %26 = or i32 %21, %25, !dbg !5052
  %27 = trunc i32 %26 to i24, !dbg !5052
  %28 = shl nuw nsw i24 %27, 1, !dbg !5052
  %29 = and i24 %22, -3, !dbg !5052
  %30 = or i24 %28, %29, !dbg !5052
  store i24 %30, i24* %6, align 4, !dbg !5052
  %31 = load i8*, i8** %3, align 4, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %31, metadata !5031, metadata !DIExpression()), !dbg !5033
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5033
  ret i8* %33, !dbg !5054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5055 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5057, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i8* %1, metadata !5058, metadata !DIExpression()), !dbg !5059
  %3 = load i8, i8* %1, align 1, !dbg !5060
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5061

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %5, metadata !5058, metadata !DIExpression()), !dbg !5059
  %6 = load i8, i8* %5, align 1, !dbg !5065
  %7 = icmp eq i8 %6, 104, !dbg !5066
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5067
  %9 = load i24, i24* %8, align 4, !dbg !5067
  %10 = and i24 %9, -30721, !dbg !5067
  br i1 %7, label %11, label %14, !dbg !5068

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5069
  store i24 %12, i24* %8, align 4, !dbg !5069
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5071
  call void @llvm.dbg.value(metadata i8* %13, metadata !5058, metadata !DIExpression()), !dbg !5059
  br label %56, !dbg !5072

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5073
  store i24 %15, i24* %8, align 4, !dbg !5073
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5075
  call void @llvm.dbg.value(metadata i8* %17, metadata !5058, metadata !DIExpression()), !dbg !5059
  %18 = load i8, i8* %17, align 1, !dbg !5077
  %19 = icmp eq i8 %18, 108, !dbg !5078
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5079
  %21 = load i24, i24* %20, align 4, !dbg !5079
  %22 = and i24 %21, -30721, !dbg !5079
  br i1 %19, label %23, label %26, !dbg !5080

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5081
  store i24 %24, i24* %20, align 4, !dbg !5081
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %25, metadata !5058, metadata !DIExpression()), !dbg !5059
  br label %56, !dbg !5084

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5085
  store i24 %27, i24* %20, align 4, !dbg !5085
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5087
  %30 = load i24, i24* %29, align 4, !dbg !5088
  %31 = and i24 %30, -30721, !dbg !5088
  %32 = or i24 %31, 10240, !dbg !5088
  store i24 %32, i24* %29, align 4, !dbg !5088
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5089
  call void @llvm.dbg.value(metadata i8* %33, metadata !5058, metadata !DIExpression()), !dbg !5059
  br label %56, !dbg !5090

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5091
  %36 = load i24, i24* %35, align 4, !dbg !5092
  %37 = and i24 %36, -30721, !dbg !5092
  %38 = or i24 %37, 12288, !dbg !5092
  store i24 %38, i24* %35, align 4, !dbg !5092
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5093
  call void @llvm.dbg.value(metadata i8* %39, metadata !5058, metadata !DIExpression()), !dbg !5059
  br label %56, !dbg !5094

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5095
  %42 = load i24, i24* %41, align 4, !dbg !5096
  %43 = and i24 %42, -30721, !dbg !5096
  %44 = or i24 %43, 14336, !dbg !5096
  store i24 %44, i24* %41, align 4, !dbg !5096
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5097
  call void @llvm.dbg.value(metadata i8* %45, metadata !5058, metadata !DIExpression()), !dbg !5059
  br label %56, !dbg !5098

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5099
  %48 = load i24, i24* %47, align 4, !dbg !5100
  %49 = and i24 %48, -30723, !dbg !5100
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5101
  call void @llvm.dbg.value(metadata i8* %50, metadata !5058, metadata !DIExpression()), !dbg !5059
  %51 = or i24 %49, 16386, !dbg !5102
  store i24 %51, i24* %47, align 4, !dbg !5102
  br label %56, !dbg !5103

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5104
  %54 = load i24, i24* %53, align 4, !dbg !5105
  %55 = and i24 %54, -30721, !dbg !5105
  store i24 %55, i24* %53, align 4, !dbg !5105
  br label %56, !dbg !5106

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5058, metadata !DIExpression()), !dbg !5059
  ret i8* %57, !dbg !5107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5108 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5110, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %1, metadata !5111, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8 0, metadata !5112, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %1, metadata !5111, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5115
  %3 = load i8, i8* %1, align 1, !dbg !5116
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5117
  store i8 %3, i8* %4, align 1, !dbg !5118
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5119

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5120

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5121
  %9 = load i24, i24* %8, align 4, !dbg !5121
  %10 = and i24 %9, -458753, !dbg !5121
  %11 = or i24 %10, %7, !dbg !5121
  call void @llvm.dbg.label(metadata !5113), !dbg !5122
  %12 = and i24 %9, 30720, !dbg !5123
  %13 = icmp eq i24 %12, 16384, !dbg !5123
  %14 = zext i1 %13 to i24, !dbg !5125
  %15 = or i24 %11, %14, !dbg !5125
  %16 = icmp eq i8 %3, 99, !dbg !5126
  br i1 %16, label %17, label %43, !dbg !5128

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5129
  %19 = icmp ne i24 %18, 0, !dbg !5129
  call void @llvm.dbg.value(metadata i1 %19, metadata !5112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5115
  br label %43, !dbg !5131

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5132
  %22 = load i24, i24* %21, align 4, !dbg !5133
  %23 = and i24 %22, -458753, !dbg !5133
  %24 = or i24 %23, 262144, !dbg !5133
  call void @llvm.dbg.value(metadata i8 1, metadata !5112, metadata !DIExpression()), !dbg !5115
  br label %43, !dbg !5134

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5137
  %27 = load i24, i24* %26, align 4, !dbg !5138
  %28 = and i24 %27, -458753, !dbg !5138
  %29 = or i24 %28, 196608, !dbg !5138
  %30 = and i24 %27, 30720, !dbg !5139
  %31 = icmp eq i24 %30, 16384, !dbg !5139
  br label %43, !dbg !5141

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5142
  %34 = load i24, i24* %33, align 4, !dbg !5143
  %35 = and i24 %34, -458753, !dbg !5143
  %36 = or i24 %35, 196608, !dbg !5143
  %37 = and i24 %34, 30720, !dbg !5144
  %38 = icmp ne i24 %37, 0, !dbg !5144
  br label %43, !dbg !5146

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5147
  %41 = load i24, i24* %40, align 4, !dbg !5148
  %42 = or i24 %41, 1, !dbg !5148
  br label %43, !dbg !5149

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5150
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5151
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5152
  call void @llvm.dbg.value(metadata i8* %48, metadata !5111, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8 poison, metadata !5112, metadata !DIExpression()), !dbg !5115
  %49 = lshr i24 %44, 1, !dbg !5150
  %50 = and i24 %49, 1, !dbg !5150
  %51 = zext i24 %50 to i32, !dbg !5150
  %52 = or i32 %51, %47, !dbg !5150
  %53 = trunc i32 %52 to i24, !dbg !5150
  %54 = shl nuw nsw i24 %53, 1, !dbg !5150
  %55 = and i24 %44, -3, !dbg !5150
  %56 = or i24 %54, %55, !dbg !5150
  store i24 %56, i24* %46, align 4, !dbg !5150
  ret i8* %48, !dbg !5153
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5154 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5158, metadata !DIExpression()), !dbg !5161
  %2 = load i8*, i8** %0, align 4, !dbg !5162
  call void @llvm.dbg.value(metadata i8* %2, metadata !5159, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i32 0, metadata !5160, metadata !DIExpression()), !dbg !5161
  %3 = load i8, i8* %2, align 1, !dbg !5163
  %4 = zext i8 %3 to i32, !dbg !5164
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5165
  %6 = icmp eq i32 %5, 0, !dbg !5166
  br i1 %6, label %19, label %7, !dbg !5166

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5160, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i8* %10, metadata !5159, metadata !DIExpression()), !dbg !5161
  %11 = mul i32 %9, 10, !dbg !5167
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5169
  call void @llvm.dbg.value(metadata i8* %12, metadata !5159, metadata !DIExpression()), !dbg !5161
  %13 = add i32 %11, -48, !dbg !5170
  %14 = add i32 %13, %8, !dbg !5171
  call void @llvm.dbg.value(metadata i32 %14, metadata !5160, metadata !DIExpression()), !dbg !5161
  %15 = load i8, i8* %12, align 1, !dbg !5163
  %16 = zext i8 %15 to i32, !dbg !5164
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5165
  %18 = icmp eq i32 %17, 0, !dbg !5166
  br i1 %18, label %19, label %7, !dbg !5166, !llvm.loop !5172

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5161
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5161
  store i8* %20, i8** %0, align 4, !dbg !5174
  ret i32 %21, !dbg !5175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !5176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5178, metadata !DIExpression()), !dbg !5179
  %2 = add i32 %0, -48, !dbg !5180
  %3 = icmp ult i32 %2, 10, !dbg !5181
  %4 = zext i1 %3 to i32, !dbg !5181
  ret i32 %4, !dbg !5182
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5183 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5188, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.value(metadata i32 %1, metadata !5189, metadata !DIExpression()), !dbg !5190
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5191, !srcloc !5193
  ret void, !dbg !5194
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5195 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5197, metadata !DIExpression()), !dbg !5205
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5206
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5206
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5198, metadata !DIExpression()), !dbg !5207
  call void @llvm.va_start(i8* nonnull %3), !dbg !5208
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5209
  %5 = load i32, i32* %4, align 4, !dbg !5209
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5209
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5209
  call void @llvm.va_end(i8* nonnull %3), !dbg !5210
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5211
  ret void, !dbg !5211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5212 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #23, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #23, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #23, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #23, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #23, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #23, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #23, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5874, !srcloc !5875
  ret void, !dbg !5876
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5879, metadata !DIExpression()), !dbg !5881
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5882, !srcloc !5891
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5882
  call void @llvm.dbg.value(metadata i32 %3, metadata !5888, metadata !DIExpression()) #23, !dbg !5892
  call void @llvm.dbg.value(metadata i32 undef, metadata !5889, metadata !DIExpression()) #23, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %3, metadata !5880, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 %3, metadata !5893, metadata !DIExpression()) #23, !dbg !5898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5900, !srcloc !5901
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !5902
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !5903
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #24, !dbg !5904
  ret i32 0, !dbg !5905
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #14 !dbg !5906 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !5911, metadata !DIExpression()), !dbg !5913
  %2 = bitcast i32* %1 to i8*, !dbg !5914
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5914
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5912, metadata !DIExpression()), !dbg !5915
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5916
  %4 = or i32 %3, 268435456, !dbg !5916
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5916
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5917
  %6 = and i32 %5, 268435456, !dbg !5917
  store volatile i32 %6, i32* %1, align 4, !dbg !5918
  %7 = load volatile i32, i32* %1, align 4, !dbg !5919
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5920
  ret void, !dbg !5920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #15 !dbg !5921 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !5924, metadata !DIExpression()), !dbg !5925
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5926
  %2 = and i32 %1, -6145, !dbg !5926
  %3 = or i32 %2, 2048, !dbg !5926
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5926
  ret void, !dbg !5927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #2 !dbg !5928 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5930, metadata !DIExpression()), !dbg !5931
  ret i32 0, !dbg !5932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5933 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5936, metadata !DIExpression()), !dbg !5944
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5945
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5945
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5937, metadata !DIExpression()), !dbg !5946
  call void @llvm.va_start(i8* nonnull %3), !dbg !5947
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5948
  %5 = load i32, i32* %4, align 4, !dbg !5948
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5948
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5948
  call void @llvm.va_end(i8* nonnull %3), !dbg !5949
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5950
  ret void, !dbg !5950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5951 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5956, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i8* %0, metadata !5955, metadata !DIExpression()), !dbg !5957
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !5958
  ret void, !dbg !5959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5964, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %1, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %2, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %1, metadata !5967, metadata !DIExpression()), !dbg !5968
  %4 = icmp eq i32 %2, 0, !dbg !5969
  br i1 %4, label %14, label %5, !dbg !5970

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !5968
  %7 = zext i8 %6 to i32
  br label %8, !dbg !5970

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %10, metadata !5966, metadata !DIExpression()), !dbg !5968
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !5971
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !5973
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !5974
  call void @llvm.dbg.value(metadata i32 %11, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %12, metadata !5967, metadata !DIExpression()), !dbg !5968
  br i1 %13, label %14, label %8, !dbg !5974, !llvm.loop !5975

14:                                               ; preds = %8, %3
  ret void, !dbg !5977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #2 !dbg !5978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5983, metadata !DIExpression()), !dbg !5984
  %2 = add i32 %0, -1, !dbg !5985
  %3 = icmp ult i32 %2, 4, !dbg !5985
  %4 = shl i32 %2, 3, !dbg !5985
  %5 = lshr i32 1145657157, %4, !dbg !5985
  %6 = trunc i32 %5 to i8, !dbg !5985
  %7 = select i1 %3, i8 %6, i8 63, !dbg !5985
  ret i8 %7, !dbg !5986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !5987 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5991, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 %1, metadata !5992, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 0, metadata !5993, metadata !DIExpression()), !dbg !6003
  br label %4, !dbg !6004

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6005
  call void @llvm.dbg.value(metadata i32 0, metadata !5995, metadata !DIExpression()), !dbg !6006
  br label %16, !dbg !6007

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5993, metadata !DIExpression()), !dbg !6003
  %6 = icmp ult i32 %5, %1, !dbg !6008
  br i1 %6, label %7, label %11, !dbg !6012

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6013
  %9 = load i8, i8* %8, align 1, !dbg !6013
  %10 = zext i8 %9 to i32, !dbg !6015
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6016
  br label %12, !dbg !6017

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6018
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %13, metadata !5993, metadata !DIExpression()), !dbg !6003
  %14 = icmp eq i32 %13, 8, !dbg !6021
  br i1 %14, label %3, label %4, !dbg !6004, !llvm.loop !6022

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6024
  ret void, !dbg !6025

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !5995, metadata !DIExpression()), !dbg !6006
  %18 = icmp ult i32 %17, %1, !dbg !6026
  br i1 %18, label %19, label %26, !dbg !6027

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6028
  %21 = load i8, i8* %20, align 1, !dbg !6028
  call void @llvm.dbg.value(metadata i8 %21, metadata !5997, metadata !DIExpression()), !dbg !6029
  %22 = zext i8 %21 to i32, !dbg !6030
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6031
  %24 = icmp eq i32 %23, 0, !dbg !6032
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6031
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6033
  br label %27, !dbg !6034

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6035
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6037
  call void @llvm.dbg.value(metadata i32 %28, metadata !5995, metadata !DIExpression()), !dbg !6006
  %29 = icmp eq i32 %28, 8, !dbg !6038
  br i1 %29, label %15, label %16, !dbg !6007, !llvm.loop !6039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #2 !dbg !6041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6043, metadata !DIExpression()), !dbg !6044
  %2 = add i32 %0, -32, !dbg !6045
  %3 = icmp ult i32 %2, 95, !dbg !6045
  %4 = zext i1 %3 to i32, !dbg !6045
  ret i32 %4, !dbg !6046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6096, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6097, metadata !DIExpression()), !dbg !6098
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6099
  br i1 %3, label %5, label %4, !dbg !6101

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6102
  br label %5, !dbg !6104

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6105
  ret void, !dbg !6106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6107 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6111, metadata !DIExpression()), !dbg !6112
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6113
  %3 = load i32, i32* %2, align 4, !dbg !6113
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6113
  %5 = load i32, i32* %4, align 4, !dbg !6113
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6113
  %7 = load i32, i32* %6, align 4, !dbg !6113
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6113
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6118
  %9 = load i32, i32* %8, align 4, !dbg !6118
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6118
  %11 = load i32, i32* %10, align 4, !dbg !6118
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6118
  %13 = load i32, i32* %12, align 4, !dbg !6118
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6118
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6123
  %15 = load i32, i32* %14, align 4, !dbg !6123
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6123
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6128
  %17 = load i32, i32* %16, align 4, !dbg !6128
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6128
  ret void, !dbg !6133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6134 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6151, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6152, metadata !DIExpression()), !dbg !6154
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6155
  %4 = load i32, i32* %3, align 4, !dbg !6155
  call void @llvm.dbg.value(metadata i32 %4, metadata !6153, metadata !DIExpression()), !dbg !6154
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6156
  ret void, !dbg !6157
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6158 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6160, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8* %0, metadata !6161, metadata !DIExpression()), !dbg !6163
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6164
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6164
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6162, metadata !DIExpression()), !dbg !6165
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6165
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6166
  %5 = bitcast i8* %4 to i32*, !dbg !6166
  %6 = load i32, i32* %5, align 4, !dbg !6166
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6167
  store i32 %6, i32* %7, align 4, !dbg !6168
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6169
  unreachable, !dbg !6170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6174, metadata !DIExpression()), !dbg !6175
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6176
  ret void, !dbg !6177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6182, metadata !DIExpression()), !dbg !6183
  %2 = icmp sgt i32 %0, -1, !dbg !6184
  br i1 %2, label %3, label %8, !dbg !6186

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6187, !srcloc !6189
  %4 = and i32 %0, 31, !dbg !6190
  %5 = shl nuw i32 1, %4, !dbg !6191
  %6 = lshr i32 %0, 5, !dbg !6192
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6193
  store volatile i32 %5, i32* %7, align 4, !dbg !6194
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6195, !srcloc !6196
  br label %8, !dbg !6197

8:                                                ; preds = %3, %1
  ret void, !dbg !6198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6201, metadata !DIExpression()), !dbg !6202
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6203
  ret void, !dbg !6204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6207, metadata !DIExpression()), !dbg !6208
  %2 = icmp sgt i32 %0, -1, !dbg !6209
  br i1 %2, label %3, label %8, !dbg !6211

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6212
  %5 = shl nuw i32 1, %4, !dbg !6214
  %6 = lshr i32 %0, 5, !dbg !6215
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6216
  store volatile i32 %5, i32* %7, align 4, !dbg !6217
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6218, !srcloc !6222
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6223, !srcloc !6226
  br label %8, !dbg !6227

8:                                                ; preds = %3, %1
  ret void, !dbg !6228
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6233, metadata !DIExpression()), !dbg !6234
  %2 = lshr i32 %0, 5, !dbg !6235
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6236
  %4 = load volatile i32, i32* %3, align 4, !dbg !6236
  %5 = and i32 %0, 31, !dbg !6237
  %6 = shl nuw i32 1, %5, !dbg !6237
  %7 = and i32 %4, %6, !dbg !6238
  ret i32 %7, !dbg !6239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6244, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %1, metadata !6245, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %2, metadata !6246, metadata !DIExpression()), !dbg !6247
  %4 = add i32 %1, 1, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %4, metadata !6245, metadata !DIExpression()), !dbg !6247
  %5 = icmp ult i32 %4, 16, !dbg !6251
  br i1 %5, label %7, label %6, !dbg !6254

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6255
  unreachable, !dbg !6255

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6257
  ret void, !dbg !6258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6263, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata i32 %1, metadata !6264, metadata !DIExpression()), !dbg !6265
  %3 = trunc i32 %1 to i8, !dbg !6266
  %4 = shl i8 %3, 4, !dbg !6266
  %5 = and i32 %0, 15, !dbg !6268
  %6 = add nsw i32 %5, -4, !dbg !6268
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6268
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6268
  %9 = icmp slt i32 %0, 0, !dbg !6268
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6268
  store volatile i8 %4, i8* %10, align 1, !dbg !6266
  ret void, !dbg !6269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6270 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6272, metadata !DIExpression()), !dbg !6273
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6274
  ret void, !dbg !6275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6276 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6278
  tail call void @z_arm_int_exit() #25, !dbg !6279
  ret void, !dbg !6280
}

; Function Attrs: optsize
declare !dbg !6281 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6282 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6284 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6286
  tail call void @z_bss_zero() #25, !dbg !6287
  tail call void @z_data_copy() #25, !dbg !6288
  tail call void @z_arm_interrupt_init() #25, !dbg !6289
  tail call void @z_cstart() #27, !dbg !6290
  unreachable, !dbg !6290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6291 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6292
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6293, !srcloc !6296
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6297, !srcloc !6300
  ret void, !dbg !6301
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6305, metadata !DIExpression()), !dbg !6306
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6307
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6308
  store i32 %0, i32* %3, align 4, !dbg !6309
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6310
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6311
  store i32 %4, i32* %5, align 4, !dbg !6312
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6313
  %7 = or i32 %6, 268435456, !dbg !6313
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6313
  call void @llvm.dbg.value(metadata i32 0, metadata !6314, metadata !DIExpression()) #23, !dbg !6317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6319, !srcloc !6320
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6321
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6322
  %10 = load i32, i32* %9, align 4, !dbg !6322
  ret i32 %10, !dbg !6323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6437, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6438, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %2, metadata !6439, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6440, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %4, metadata !6441, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %5, metadata !6442, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %6, metadata !6443, metadata !DIExpression()), !dbg !6445
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6446
  call void @llvm.dbg.value(metadata i8* %8, metadata !6444, metadata !DIExpression()), !dbg !6445
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6447
  %10 = bitcast i8* %9 to i32*, !dbg !6447
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6448
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6449
  %12 = bitcast i8* %8 to i32*, !dbg !6450
  store i32 %11, i32* %12, align 4, !dbg !6451
  %13 = ptrtoint i8* %4 to i32, !dbg !6452
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6453
  %15 = bitcast i8* %14 to i32*, !dbg !6453
  store i32 %13, i32* %15, align 4, !dbg !6454
  %16 = ptrtoint i8* %5 to i32, !dbg !6455
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6456
  %18 = bitcast i8* %17 to i32*, !dbg !6456
  store i32 %16, i32* %18, align 4, !dbg !6457
  %19 = ptrtoint i8* %6 to i32, !dbg !6458
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6459
  %21 = bitcast i8* %20 to i32*, !dbg !6459
  store i32 %19, i32* %21, align 4, !dbg !6460
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6461
  %23 = bitcast i8* %22 to i32*, !dbg !6461
  store i32 16777216, i32* %23, align 4, !dbg !6462
  %24 = ptrtoint i8* %8 to i32, !dbg !6463
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6464
  store i32 %24, i32* %25, align 8, !dbg !6465
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6466
  store i32 0, i32* %26, align 4, !dbg !6467
  ret void, !dbg !6468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6474, metadata !DIExpression()), !dbg !6480
  call void @llvm.dbg.value(metadata i32 %1, metadata !6475, metadata !DIExpression()), !dbg !6480
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6481
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6476, metadata !DIExpression()), !dbg !6480
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6482
  br i1 %4, label %19, label %5, !dbg !6484

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6479, metadata !DIExpression()), !dbg !6480
  %6 = icmp eq i32 %0, -22, !dbg !6485
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6485
  %8 = load i32, i32* %7, align 4, !dbg !6485
  br i1 %6, label %16, label %9, !dbg !6487

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6485
  %11 = icmp ule i32 %10, %0, !dbg !6485
  %12 = icmp ugt i32 %8, %0, !dbg !6485
  %13 = and i1 %12, %11, !dbg !6485
  %14 = icmp ugt i32 %8, %1, !dbg !6485
  %15 = and i1 %14, %13, !dbg !6485
  br i1 %15, label %18, label %19, !dbg !6485

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6485
  br i1 %17, label %18, label %19, !dbg !6487

18:                                               ; preds = %9, %16
  br label %19, !dbg !6488

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6480
  ret i32 %20, !dbg !6490
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6495, metadata !DIExpression()), !dbg !6498
  call void @llvm.dbg.value(metadata i8* %1, metadata !6496, metadata !DIExpression()), !dbg !6498
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6497, metadata !DIExpression()), !dbg !6498
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6499
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6500
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6501, !srcloc !6502
  unreachable, !dbg !6503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6504 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6522, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i32 %1, metadata !6523, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i32 %2, metadata !6524, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6525, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i32 0, metadata !6526, metadata !DIExpression()), !dbg !6532
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6533
  call void @llvm.dbg.value(metadata i32 %8, metadata !6527, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6532
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6534
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6534
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6535
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6535
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6531, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i32 0, metadata !6537, metadata !DIExpression()) #23, !dbg !6540
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6542, !srcloc !6543
  call void @llvm.dbg.value(metadata i8* %6, metadata !6529, metadata !DIExpression(DW_OP_deref)), !dbg !6532
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6544
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6530, metadata !DIExpression()), !dbg !6532
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6545
  br i1 %11, label %12, label %13, !dbg !6548

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6549
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6549
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6549
  unreachable, !dbg !6549

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %14, metadata !6527, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i8* %5, metadata !6528, metadata !DIExpression(DW_OP_deref)), !dbg !6532
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %15, metadata !6526, metadata !DIExpression()), !dbg !6532
  %16 = load i8, i8* %5, align 1, !dbg !6553, !range !6555
  call void @llvm.dbg.value(metadata i8 %16, metadata !6528, metadata !DIExpression()), !dbg !6532
  %17 = icmp eq i8 %16, 0, !dbg !6553
  br i1 %17, label %18, label %35, !dbg !6556

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6557
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6558
  %21 = load i8, i8* %6, align 1, !dbg !6559, !range !6555
  call void @llvm.dbg.value(metadata i8 %21, metadata !6529, metadata !DIExpression()), !dbg !6532
  %22 = icmp eq i8 %21, 0, !dbg !6559
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6561
  %24 = load i32, i32* %23, align 4, !dbg !6561
  br i1 %22, label %30, label %25, !dbg !6562

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6563
  %27 = icmp eq i32 %26, 0, !dbg !6566
  br i1 %27, label %28, label %34, !dbg !6567

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6568
  br label %32, !dbg !6570

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6571
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6561
  br label %34, !dbg !6573

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6573
  br label %35, !dbg !6574

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6574
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6574
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6574
  ret void, !dbg !6574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6580, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 %1, metadata !6581, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 %2, metadata !6582, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i8* %3, metadata !6583, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i8 0, metadata !6584, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6585, metadata !DIExpression()), !dbg !6586
  store i8 0, i8* %3, align 1, !dbg !6587
  %5 = icmp ugt i32 %2, -16777217, !dbg !6588
  br i1 %5, label %6, label %17, !dbg !6590

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6591
  %8 = icmp eq i32 %7, 8, !dbg !6591
  br i1 %8, label %9, label %10, !dbg !6591

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6593
  br label %17, !dbg !6599

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6600
  %12 = icmp eq i32 %11, 0, !dbg !6600
  br i1 %12, label %13, label %14, !dbg !6601

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6585, metadata !DIExpression()), !dbg !6586
  store i8 1, i8* %3, align 1, !dbg !6604
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6586
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6585, metadata !DIExpression()), !dbg !6586
  br label %17, !dbg !6607

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6586
  ret %struct.__esf* %18, !dbg !6608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6609 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6613, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %1, metadata !6614, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i8* %2, metadata !6615, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 0, metadata !6616, metadata !DIExpression()), !dbg !6617
  store i8 0, i8* %2, align 1, !dbg !6618
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6619

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6620
  call void @llvm.dbg.value(metadata i32 %5, metadata !6616, metadata !DIExpression()), !dbg !6617
  br label %12, !dbg !6622

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6623
  call void @llvm.dbg.value(metadata i32 %7, metadata !6616, metadata !DIExpression()), !dbg !6617
  br label %12, !dbg !6624

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6625
  call void @llvm.dbg.value(metadata i32 0, metadata !6616, metadata !DIExpression()), !dbg !6617
  br label %12, !dbg !6626

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6627
  call void @llvm.dbg.value(metadata i32 0, metadata !6616, metadata !DIExpression()), !dbg !6617
  br label %12, !dbg !6628

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6629
  br label %12, !dbg !6630

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6631
  br label %12, !dbg !6632

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6617
  call void @llvm.dbg.value(metadata i32 %13, metadata !6616, metadata !DIExpression()), !dbg !6617
  ret i32 %13, !dbg !6633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6634 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6638, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8* %1, metadata !6639, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6642
  store i8 0, i8* %1, align 1, !dbg !6647
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6648
  %4 = and i32 %3, 2, !dbg !6650
  %5 = icmp eq i32 %4, 0, !dbg !6651
  br i1 %5, label %7, label %6, !dbg !6652

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6653
  br label %38, !dbg !6659

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6660
  %9 = icmp sgt i32 %8, -1, !dbg !6662
  br i1 %9, label %11, label %10, !dbg !6663

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6664
  br label %38, !dbg !6670

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6671
  %13 = and i32 %12, 1073741824, !dbg !6673
  %14 = icmp eq i32 %13, 0, !dbg !6674
  br i1 %14, label %37, label %15, !dbg !6675

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6676
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6682
  br i1 %16, label %17, label %21, !dbg !6684

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6685
  %19 = load i32, i32* %18, align 4, !dbg !6685
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6685
  %20 = load i32, i32* %18, align 4, !dbg !6691
  call void @llvm.dbg.value(metadata i32 %20, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %38, !dbg !6692

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6693
  %23 = and i32 %22, 255, !dbg !6695
  %24 = icmp eq i32 %23, 0, !dbg !6696
  br i1 %24, label %27, label %25, !dbg !6697

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6698
  call void @llvm.dbg.value(metadata i32 %26, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %38, !dbg !6700

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6701
  %29 = and i32 %28, 65280, !dbg !6703
  %30 = icmp eq i32 %29, 0, !dbg !6704
  br i1 %30, label %32, label %31, !dbg !6705

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6706
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %38, !dbg !6708

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6709
  %34 = icmp ult i32 %33, 65536, !dbg !6711
  br i1 %34, label %36, label %35, !dbg !6712

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6713
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6715
  unreachable, !dbg !6715

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6720
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6720
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6720
  unreachable, !dbg !6720

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6641
  call void @llvm.dbg.value(metadata i32 %39, metadata !6640, metadata !DIExpression()), !dbg !6641
  ret i32 %39, !dbg !6725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6726 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6728, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i32 %1, metadata !6729, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i8* %2, metadata !6730, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i32 0, metadata !6731, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i32 -22, metadata !6732, metadata !DIExpression()), !dbg !6741
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6742
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6747
  %5 = and i32 %4, 16, !dbg !6749
  %6 = icmp eq i32 %5, 0, !dbg !6750
  br i1 %6, label %8, label %7, !dbg !6751

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6752
  br label %8, !dbg !6758

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6759
  %10 = and i32 %9, 8, !dbg !6761
  %11 = icmp eq i32 %10, 0, !dbg !6762
  br i1 %11, label %13, label %12, !dbg !6763

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6764
  br label %13, !dbg !6770

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6771
  %15 = and i32 %14, 2, !dbg !6772
  %16 = icmp eq i32 %15, 0, !dbg !6773
  br i1 %16, label %27, label %17, !dbg !6774

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6775
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6780
  call void @llvm.dbg.value(metadata i32 %18, metadata !6733, metadata !DIExpression()), !dbg !6781
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6782
  %20 = and i32 %19, 128, !dbg !6784
  %21 = icmp eq i32 %20, 0, !dbg !6785
  br i1 %21, label %27, label %22, !dbg !6786

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6732, metadata !DIExpression()), !dbg !6741
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6787
  %23 = icmp eq i32 %1, 0, !dbg !6793
  br i1 %23, label %27, label %24, !dbg !6795

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6796
  %26 = and i32 %25, -129, !dbg !6796
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6796
  br label %27, !dbg !6798

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6741
  call void @llvm.dbg.value(metadata i32 %28, metadata !6732, metadata !DIExpression()), !dbg !6741
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6799
  %30 = and i32 %29, 1, !dbg !6801
  %31 = icmp eq i32 %30, 0, !dbg !6802
  br i1 %31, label %33, label %32, !dbg !6803

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6804
  br label %33, !dbg !6810

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6811
  %35 = and i32 %34, 16, !dbg !6812
  %36 = icmp eq i32 %35, 0, !dbg !6812
  br i1 %36, label %37, label %41, !dbg !6813

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6814
  %39 = and i32 %38, 2, !dbg !6815
  %40 = icmp eq i32 %39, 0, !dbg !6815
  br i1 %40, label %55, label %41, !dbg !6816

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6817
  %43 = and i32 %42, 2048, !dbg !6818
  %44 = icmp eq i32 %43, 0, !dbg !6818
  br i1 %44, label %55, label %45, !dbg !6819

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !6820
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #25, !dbg !6821
  call void @llvm.dbg.value(metadata i32 %47, metadata !6736, metadata !DIExpression()), !dbg !6822
  %48 = icmp eq i32 %47, 0, !dbg !6823
  br i1 %48, label %50, label %49, !dbg !6825

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !6826, metadata !DIExpression()) #23, !dbg !6829
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #23, !dbg !6832, !srcloc !6833
  call void @llvm.dbg.value(metadata i32 2, metadata !6731, metadata !DIExpression()), !dbg !6741
  br label %55, !dbg !6834

50:                                               ; preds = %45
  %51 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6835
  %52 = and i32 %51, 16, !dbg !6835
  %53 = icmp eq i32 %52, 0, !dbg !6835
  br i1 %53, label %55, label %54, !dbg !6839

54:                                               ; preds = %50
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6840
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #25, !dbg !6840
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6840
  unreachable, !dbg !6840

55:                                               ; preds = %49, %50, %41, %37
  %56 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %50 ], !dbg !6741
  call void @llvm.dbg.value(metadata i32 %56, metadata !6731, metadata !DIExpression()), !dbg !6741
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6842
  %58 = or i32 %57, 255, !dbg !6842
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6842
  store i8 0, i8* %2, align 1, !dbg !6843
  ret i32 %56, !dbg !6844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6845 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6849, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i32 %0, metadata !6850, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i8* %1, metadata !6851, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i32 0, metadata !6852, metadata !DIExpression()), !dbg !6856
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !6857
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6862
  %4 = and i32 %3, 4096, !dbg !6864
  %5 = icmp eq i32 %4, 0, !dbg !6864
  br i1 %5, label %7, label %6, !dbg !6865

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6866
  br label %7, !dbg !6872

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6873
  %9 = and i32 %8, 2048, !dbg !6875
  %10 = icmp eq i32 %9, 0, !dbg !6875
  br i1 %10, label %12, label %11, !dbg !6876

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6877
  br label %12, !dbg !6883

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6884
  %14 = and i32 %13, 512, !dbg !6885
  %15 = icmp eq i32 %14, 0, !dbg !6885
  br i1 %15, label %26, label %16, !dbg !6886

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6887
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6892
  call void @llvm.dbg.value(metadata i32 %17, metadata !6853, metadata !DIExpression()), !dbg !6893
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6894
  %19 = and i32 %18, 32768, !dbg !6896
  %20 = icmp eq i32 %19, 0, !dbg !6897
  br i1 %20, label %26, label %21, !dbg !6898

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6899
  %22 = icmp eq i32 %0, 0, !dbg !6905
  br i1 %22, label %26, label %23, !dbg !6907

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6908
  %25 = and i32 %24, -32769, !dbg !6908
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6908
  br label %26, !dbg !6910

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6911
  %28 = and i32 %27, 1024, !dbg !6913
  %29 = icmp eq i32 %28, 0, !dbg !6913
  br i1 %29, label %31, label %30, !dbg !6914

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !6915
  br label %31, !dbg !6921

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6922
  %33 = and i32 %32, 256, !dbg !6924
  %34 = icmp eq i32 %33, 0, !dbg !6925
  br i1 %34, label %36, label %35, !dbg !6926

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !6927
  br label %36, !dbg !6933

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6934
  %38 = or i32 %37, 65280, !dbg !6934
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6934
  store i8 0, i8* %1, align 1, !dbg !6935
  ret void, !dbg !6936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !6937 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 0, metadata !6944, metadata !DIExpression()), !dbg !6945
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69) #25, !dbg !6946
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6951
  %2 = and i32 %1, 33554432, !dbg !6953
  %3 = icmp eq i32 %2, 0, !dbg !6954
  br i1 %3, label %5, label %4, !dbg !6955

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !6956
  br label %5, !dbg !6962

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6963
  %7 = and i32 %6, 16777216, !dbg !6965
  %8 = icmp eq i32 %7, 0, !dbg !6966
  br i1 %8, label %10, label %9, !dbg !6967

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !6968
  br label %10, !dbg !6974

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6975
  %12 = and i32 %11, 524288, !dbg !6977
  %13 = icmp eq i32 %12, 0, !dbg !6978
  br i1 %13, label %15, label %14, !dbg !6979

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !6980
  br label %15, !dbg !6986

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6987
  %17 = and i32 %16, 262144, !dbg !6989
  %18 = icmp eq i32 %17, 0, !dbg !6990
  br i1 %18, label %20, label %19, !dbg !6991

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !6992
  br label %20, !dbg !6998

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  %22 = and i32 %21, 131072, !dbg !7001
  %23 = icmp eq i32 %22, 0, !dbg !7002
  br i1 %23, label %25, label %24, !dbg !7003

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7004
  br label %25, !dbg !7010

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  %27 = and i32 %26, 65536, !dbg !7013
  %28 = icmp eq i32 %27, 0, !dbg !7014
  br i1 %28, label %30, label %29, !dbg !7015

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7016
  br label %30, !dbg !7022

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7023
  %32 = or i32 %31, -65536, !dbg !7023
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7023
  ret void, !dbg !7024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7025 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7029, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata i8* %0, metadata !7030, metadata !DIExpression()), !dbg !7031
  store i8 0, i8* %0, align 1, !dbg !7032
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7033
  ret void, !dbg !7038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7039 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7043, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i32 %0, metadata !7044, metadata !DIExpression()), !dbg !7045
  %2 = icmp slt i32 %0, 16, !dbg !7046
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i32 0, i32 0), !dbg !7046
  %4 = add nsw i32 %0, -16, !dbg !7046
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7046
  ret void, !dbg !7051
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7052 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7056, metadata !DIExpression()), !dbg !7059
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7060
  %3 = load i32, i32* %2, align 4, !dbg !7060
  %4 = inttoptr i32 %3 to i16*, !dbg !7061
  call void @llvm.dbg.value(metadata i16* %4, metadata !7057, metadata !DIExpression()), !dbg !7059
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7062
  %6 = or i32 %5, 256, !dbg !7062
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7062
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7063, !srcloc !7066
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7067, !srcloc !7070
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7071
  %8 = load i16, i16* %7, align 2, !dbg !7072
  call void @llvm.dbg.value(metadata i16 %8, metadata !7058, metadata !DIExpression()), !dbg !7059
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7073
  %10 = and i32 %9, -257, !dbg !7073
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7073
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7074, !srcloc !7066
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7076, !srcloc !7070
  %11 = icmp eq i16 %8, -8446, !dbg !7078
  ret i1 %11, !dbg !7080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7081 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7082
  %2 = or i32 %1, 16, !dbg !7082
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7082
  ret void, !dbg !7083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7084 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7087, metadata !DIExpression()), !dbg !7088
  br label %1, !dbg !7089

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7087, metadata !DIExpression()), !dbg !7088
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7091
  %3 = add nuw nsw i32 %2, 1, !dbg !7094
  call void @llvm.dbg.value(metadata i32 %3, metadata !7087, metadata !DIExpression()), !dbg !7088
  %4 = icmp eq i32 %3, 45, !dbg !7095
  br i1 %4, label %5, label %1, !dbg !7089, !llvm.loop !7096

5:                                                ; preds = %1
  ret void, !dbg !7098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #15 !dbg !7099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7101, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i32 1, metadata !7102, metadata !DIExpression()), !dbg !7103
  %2 = and i32 %0, 15, !dbg !7104
  %3 = add nsw i32 %2, -4, !dbg !7104
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7104
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7104
  %6 = icmp slt i32 %0, 0, !dbg !7104
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7104
  store volatile i8 16, i8* %7, align 1, !dbg !7105
  ret void, !dbg !7107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7217, metadata !DIExpression()), !dbg !7218
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7219
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7221
  br i1 %3, label %4, label %12, !dbg !7222

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7223, !srcloc !7237
  call void @llvm.dbg.value(metadata i32 %5, metadata !7228, metadata !DIExpression()) #23, !dbg !7238
  %6 = icmp eq i32 %5, 0, !dbg !7239
  br i1 %6, label %12, label %7, !dbg !7240

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7241
  %9 = or i32 %8, 268435456, !dbg !7241
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7241
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7243
  %11 = and i32 %10, -32769, !dbg !7243
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7243
  br label %12, !dbg !7244

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7245
  ret void, !dbg !7246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7247 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7248
  ret void, !dbg !7249
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !316 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !442, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i8 0, metadata !443, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 64, metadata !445, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 undef, metadata !444, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7250
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7251
  %3 = load i32, i32* %2, align 4, !dbg !7251
  call void @llvm.dbg.value(metadata i32 %3, metadata !444, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7250
  %4 = add i32 %3, -64, !dbg !7253
  call void @llvm.dbg.value(metadata i32 %4, metadata !444, metadata !DIExpression()), !dbg !7250
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7254
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7255
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7256
  call void @llvm.dbg.value(metadata i8 1, metadata !443, metadata !DIExpression()), !dbg !7250
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7257
  ret void, !dbg !7258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7259 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7260
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7261, !srcloc !7264
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7265, !srcloc !7268
  ret void, !dbg !7269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7270 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7271, !srcloc !7274
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7275
  ret void, !dbg !7276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7277 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7292, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8 %1, metadata !7293, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %2, metadata !7294, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %3, metadata !7295, metadata !DIExpression()), !dbg !7296
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7297
  %6 = icmp eq i32 %5, -22, !dbg !7299
  br i1 %6, label %7, label %9, !dbg !7300

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7301
  %8 = zext i8 %1 to i32, !dbg !7301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7301
  unreachable, !dbg !7301

9:                                                ; preds = %4
  ret void, !dbg !7306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7307 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7312, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i8 %1, metadata !7313, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i32 undef, metadata !7314, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i32 undef, metadata !7315, metadata !DIExpression()), !dbg !7317
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7318
  call void @llvm.dbg.value(metadata i8 %3, metadata !7316, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7317
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7319
  call void @llvm.dbg.value(metadata i32 %4, metadata !7316, metadata !DIExpression()), !dbg !7317
  %5 = trunc i32 %4 to i8, !dbg !7320
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7321
  ret i32 %4, !dbg !7322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7323 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7327, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i8 %1, metadata !7328, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i8 %2, metadata !7329, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i1 %3, metadata !7330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7333
  %5 = zext i8 %2 to i32, !dbg !7334
  call void @llvm.dbg.value(metadata i32 %5, metadata !7332, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 0, metadata !7331, metadata !DIExpression()), !dbg !7333
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7332, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 0, metadata !7331, metadata !DIExpression()), !dbg !7333
  %7 = icmp eq i8 %1, 0, !dbg !7335
  br i1 %7, label %30, label %8, !dbg !7338

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7332, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 %10, metadata !7331, metadata !DIExpression()), !dbg !7333
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7339
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7342
  %13 = load i32, i32* %12, align 4, !dbg !7342
  %14 = icmp eq i32 %13, 0, !dbg !7343
  br i1 %14, label %26, label %15, !dbg !7344

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7345

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7347
  %18 = icmp eq i32 %17, 0, !dbg !7347
  br i1 %18, label %19, label %20, !dbg !7348

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7349
  br label %30, !dbg !7355

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7356
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7357
  call void @llvm.dbg.value(metadata i32 %22, metadata !7332, metadata !DIExpression()), !dbg !7333
  %23 = icmp eq i32 %22, -22, !dbg !7358
  br i1 %23, label %30, label %24, !dbg !7360

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7361
  call void @llvm.dbg.value(metadata i32 %25, metadata !7332, metadata !DIExpression()), !dbg !7333
  br label %26, !dbg !7362

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7333
  call void @llvm.dbg.value(metadata i32 %27, metadata !7332, metadata !DIExpression()), !dbg !7333
  %28 = add nuw nsw i32 %10, 1, !dbg !7363
  call void @llvm.dbg.value(metadata i32 %28, metadata !7331, metadata !DIExpression()), !dbg !7333
  %29 = icmp eq i32 %28, %6, !dbg !7335
  br i1 %29, label %30, label %8, !dbg !7338, !llvm.loop !7364

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7333
  ret i32 %31, !dbg !7366
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !7367 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7371, metadata !DIExpression()), !dbg !7373
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7374
  %3 = load i32, i32* %2, align 4, !dbg !7374
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7375, !range !7376
  %5 = icmp ult i32 %4, 2, !dbg !7375
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7377
  br i1 %7, label %8, label %15, !dbg !7377

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7378
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7379
  %11 = load i32, i32* %10, align 4, !dbg !7379
  %12 = and i32 %11, %9, !dbg !7380
  %13 = icmp eq i32 %12, 0, !dbg !7381
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7372, metadata !DIExpression()), !dbg !7373
  ret i32 %16, !dbg !7382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7383 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7387, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7388, metadata !DIExpression()), !dbg !7390
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7391
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7391
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7389, metadata !DIExpression()), !dbg !7392
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7393
  %6 = load i32, i32* %5, align 4, !dbg !7393
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7394
  store i32 %6, i32* %7, align 4, !dbg !7395
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7396
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7397
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7398
  %11 = load i32, i32* %10, align 4, !dbg !7398
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7399
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7400
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7401
  ret i32 %12, !dbg !7402
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !7403 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7410, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7411, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 undef, metadata !7412, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 %2, metadata !7413, metadata !DIExpression()), !dbg !7414
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7415
  %5 = load i32, i32* %4, align 4, !dbg !7415
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7416
  %7 = or i32 %6, %5, !dbg !7417
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7418
  store i32 %7, i32* %8, align 4, !dbg !7419
  ret void, !dbg !7420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7421 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7425, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7426, metadata !DIExpression()), !dbg !7427
  %3 = zext i8 %0 to i32, !dbg !7428
  %4 = icmp ugt i8 %0, 7, !dbg !7430
  br i1 %4, label %5, label %6, !dbg !7431

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7432
  br label %7, !dbg !7438

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7439
  br label %7, !dbg !7440

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7427
  ret i32 %8, !dbg !7441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7446, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7447, metadata !DIExpression()), !dbg !7448
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7449
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7450
  %4 = load i32, i32* %3, align 4, !dbg !7450
  %5 = and i32 %4, -32, !dbg !7451
  %6 = or i32 %5, %0, !dbg !7452
  %7 = or i32 %6, 16, !dbg !7452
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7453
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7454
  %9 = load i32, i32* %8, align 4, !dbg !7454
  %10 = or i32 %9, 1, !dbg !7455
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7456
  ret void, !dbg !7457
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7461, metadata !DIExpression()), !dbg !7462
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7463
  ret void, !dbg !7464
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7469, metadata !DIExpression()), !dbg !7470
  %2 = icmp ult i32 %0, 33, !dbg !7471
  br i1 %2, label %11, label %3, !dbg !7473

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7474
  br i1 %4, label %11, label %5, !dbg !7476

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7477
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7478, !range !7376
  %8 = mul nsw i32 %7, -2, !dbg !7479
  %9 = add nsw i32 %8, 62, !dbg !7479
  %10 = and i32 %9, 62, !dbg !7480
  br label %11, !dbg !7481

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7470
  ret i32 %12, !dbg !7482
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7483 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7487, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8 %1, metadata !7488, metadata !DIExpression()), !dbg !7489
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7490
  %4 = icmp eq i32 %3, -22, !dbg !7492
  br i1 %4, label %5, label %7, !dbg !7493

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7494
  %6 = zext i8 %1 to i32, !dbg !7494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7494
  unreachable, !dbg !7494

7:                                                ; preds = %2
  ret void, !dbg !7499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7500 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7504, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i8 %1, metadata !7505, metadata !DIExpression()), !dbg !7511
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7512
  call void @llvm.dbg.value(metadata i8 %3, metadata !7506, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7511
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7513
  call void @llvm.dbg.value(metadata i32 %4, metadata !7506, metadata !DIExpression()), !dbg !7511
  %5 = icmp ne i32 %4, -22, !dbg !7514
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7515
  call void @llvm.dbg.value(metadata i32 %4, metadata !7507, metadata !DIExpression()), !dbg !7516
  br i1 %7, label %8, label %12, !dbg !7515

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7507, metadata !DIExpression()), !dbg !7516
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7517
  %10 = add i32 %9, 1, !dbg !7520
  call void @llvm.dbg.value(metadata i32 %10, metadata !7507, metadata !DIExpression()), !dbg !7516
  %11 = icmp eq i32 %10, 8, !dbg !7521
  br i1 %11, label %12, label %8, !dbg !7522, !llvm.loop !7523

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7529, metadata !DIExpression()), !dbg !7530
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7531
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7532
  ret void, !dbg !7533
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7534 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7539
  %2 = icmp ugt i32 %1, 8, !dbg !7541
  br i1 %2, label %3, label %4, !dbg !7542

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7543
  unreachable, !dbg !7543

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7548
  call void @llvm.dbg.value(metadata i32 0, metadata !7538, metadata !DIExpression()), !dbg !7549
  %5 = icmp eq i32 %1, 0, !dbg !7550
  br i1 %5, label %13, label %6, !dbg !7553

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7553

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7538, metadata !DIExpression()), !dbg !7549
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7554
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7556
  %11 = add nuw i32 %9, 1, !dbg !7557
  call void @llvm.dbg.value(metadata i32 %11, metadata !7538, metadata !DIExpression()), !dbg !7549
  %12 = icmp eq i32 %11, %1, !dbg !7550
  br i1 %12, label %13, label %8, !dbg !7553, !llvm.loop !7558

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7560
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7561
  tail call void @arm_core_mpu_enable() #24, !dbg !7562
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7563
  %16 = and i32 %15, 65280, !dbg !7563
  %17 = icmp eq i32 %16, 2048, !dbg !7563
  br i1 %17, label %19, label %18, !dbg !7566

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7567
  unreachable, !dbg !7567

19:                                               ; preds = %13
  ret i32 0, !dbg !7569
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7570 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7577, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8* %1, metadata !7578, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8* %0, metadata !7579, metadata !DIExpression()), !dbg !7580
  %3 = load i8, i8* %1, align 1, !dbg !7581
  %4 = icmp eq i8 %3, 0, !dbg !7582
  br i1 %4, label %13, label %5, !dbg !7583

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7577, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8* %8, metadata !7578, metadata !DIExpression()), !dbg !7580
  store i8 %6, i8* %7, align 1, !dbg !7584
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7586
  call void @llvm.dbg.value(metadata i8* %9, metadata !7577, metadata !DIExpression()), !dbg !7580
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7587
  call void @llvm.dbg.value(metadata i8* %10, metadata !7578, metadata !DIExpression()), !dbg !7580
  %11 = load i8, i8* %10, align 1, !dbg !7581
  %12 = icmp eq i8 %11, 0, !dbg !7582
  br i1 %12, label %13, label %5, !dbg !7583, !llvm.loop !7588

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7590
  ret i8* %0, !dbg !7591
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7592 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7596, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %1, metadata !7597, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 %2, metadata !7598, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %0, metadata !7599, metadata !DIExpression()), !dbg !7600
  %4 = icmp eq i32 %2, 0, !dbg !7601
  br i1 %4, label %22, label %5, !dbg !7602

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7596, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 %7, metadata !7598, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %8, metadata !7597, metadata !DIExpression()), !dbg !7600
  %9 = load i8, i8* %8, align 1, !dbg !7603
  %10 = icmp eq i8 %9, 0, !dbg !7604
  br i1 %10, label %16, label %11, !dbg !7605

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7606
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7608
  call void @llvm.dbg.value(metadata i8* %12, metadata !7597, metadata !DIExpression()), !dbg !7600
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7609
  call void @llvm.dbg.value(metadata i8* %13, metadata !7596, metadata !DIExpression()), !dbg !7600
  %14 = add i32 %7, -1, !dbg !7610
  call void @llvm.dbg.value(metadata i32 %14, metadata !7598, metadata !DIExpression()), !dbg !7600
  %15 = icmp eq i32 %14, 0, !dbg !7601
  br i1 %15, label %22, label %5, !dbg !7602, !llvm.loop !7611

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7596, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 %18, metadata !7598, metadata !DIExpression()), !dbg !7600
  store i8 0, i8* %17, align 1, !dbg !7613
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7615
  call void @llvm.dbg.value(metadata i8* %19, metadata !7596, metadata !DIExpression()), !dbg !7600
  %20 = add i32 %18, -1, !dbg !7616
  call void @llvm.dbg.value(metadata i32 %20, metadata !7598, metadata !DIExpression()), !dbg !7600
  %21 = icmp eq i32 %20, 0, !dbg !7617
  br i1 %21, label %22, label %16, !dbg !7618, !llvm.loop !7619

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7621
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7622 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7626, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.value(metadata i32 %1, metadata !7627, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.value(metadata i32 %1, metadata !7628, metadata !DIExpression()), !dbg !7629
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7630

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7626, metadata !DIExpression()), !dbg !7629
  %6 = load i8, i8* %5, align 1, !dbg !7631
  %7 = icmp eq i8 %6, %3, !dbg !7632
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7633
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7634
  call void @llvm.dbg.value(metadata i8* %10, metadata !7626, metadata !DIExpression()), !dbg !7629
  br i1 %9, label %11, label %4, !dbg !7633, !llvm.loop !7636

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7638
  ret i8* %12, !dbg !7639
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7640 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7642, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %1, metadata !7643, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* null, metadata !7644, metadata !DIExpression()), !dbg !7645
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7646

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7645
  call void @llvm.dbg.value(metadata i8* %6, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %5, metadata !7642, metadata !DIExpression()), !dbg !7645
  %7 = load i8, i8* %5, align 1, !dbg !7647
  %8 = icmp eq i8 %7, %3, !dbg !7650
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7651
  call void @llvm.dbg.value(metadata i8* %9, metadata !7644, metadata !DIExpression()), !dbg !7645
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7652
  call void @llvm.dbg.value(metadata i8* %10, metadata !7642, metadata !DIExpression()), !dbg !7645
  %11 = icmp eq i8 %7, 0, !dbg !7653
  br i1 %11, label %12, label %4, !dbg !7653, !llvm.loop !7654

12:                                               ; preds = %4
  ret i8* %9, !dbg !7656
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7657 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7661, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i32 0, metadata !7662, metadata !DIExpression()), !dbg !7663
  %2 = load i8, i8* %0, align 1, !dbg !7664
  %3 = icmp eq i8 %2, 0, !dbg !7665
  br i1 %3, label %11, label %4, !dbg !7666

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i8* %6, metadata !7661, metadata !DIExpression()), !dbg !7663
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7667
  call void @llvm.dbg.value(metadata i8* %7, metadata !7661, metadata !DIExpression()), !dbg !7663
  %8 = add i32 %5, 1, !dbg !7669
  call void @llvm.dbg.value(metadata i32 %8, metadata !7662, metadata !DIExpression()), !dbg !7663
  %9 = load i8, i8* %7, align 1, !dbg !7664
  %10 = icmp eq i8 %9, 0, !dbg !7665
  br i1 %10, label %11, label %4, !dbg !7666, !llvm.loop !7670

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7663
  ret i32 %12, !dbg !7672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7677, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 %1, metadata !7678, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 0, metadata !7679, metadata !DIExpression()), !dbg !7680
  %3 = load i8, i8* %0, align 1, !dbg !7681
  %4 = icmp ne i8 %3, 0, !dbg !7682
  %5 = icmp ne i32 %1, 0, !dbg !7683
  %6 = and i1 %4, %5, !dbg !7683
  br i1 %6, label %7, label %16, !dbg !7684

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7679, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %9, metadata !7677, metadata !DIExpression()), !dbg !7680
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7685
  call void @llvm.dbg.value(metadata i8* %10, metadata !7677, metadata !DIExpression()), !dbg !7680
  %11 = add nuw i32 %8, 1, !dbg !7687
  call void @llvm.dbg.value(metadata i32 %11, metadata !7679, metadata !DIExpression()), !dbg !7680
  %12 = load i8, i8* %10, align 1, !dbg !7681
  %13 = icmp ne i8 %12, 0, !dbg !7682
  %14 = icmp ult i32 %11, %1, !dbg !7683
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7683
  br i1 %15, label %7, label %16, !dbg !7684, !llvm.loop !7688

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7680
  ret i32 %17, !dbg !7690
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7695, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i8* %1, metadata !7696, metadata !DIExpression()), !dbg !7697
  %3 = load i8, i8* %0, align 1, !dbg !7698
  %4 = load i8, i8* %1, align 1, !dbg !7699
  %5 = icmp ne i8 %3, %4, !dbg !7700
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7701
  br i1 %7, label %18, label %8, !dbg !7701

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7696, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i8* %10, metadata !7695, metadata !DIExpression()), !dbg !7697
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7702
  call void @llvm.dbg.value(metadata i8* %11, metadata !7695, metadata !DIExpression()), !dbg !7697
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7704
  call void @llvm.dbg.value(metadata i8* %12, metadata !7696, metadata !DIExpression()), !dbg !7697
  %13 = load i8, i8* %11, align 1, !dbg !7698
  %14 = load i8, i8* %12, align 1, !dbg !7699
  %15 = icmp ne i8 %13, %14, !dbg !7700
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7701
  br i1 %17, label %18, label %8, !dbg !7701, !llvm.loop !7705

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7698
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7699
  %21 = zext i8 %19 to i32, !dbg !7708
  %22 = zext i8 %20 to i32, !dbg !7709
  %23 = sub nsw i32 %21, %22, !dbg !7710
  ret i32 %23, !dbg !7711
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7712 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7716, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* %1, metadata !7717, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 %2, metadata !7718, metadata !DIExpression()), !dbg !7719
  %4 = icmp eq i32 %2, 0, !dbg !7720
  br i1 %4, label %23, label %5, !dbg !7720

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7718, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* %7, metadata !7717, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* %8, metadata !7716, metadata !DIExpression()), !dbg !7719
  %9 = load i8, i8* %8, align 1, !dbg !7721
  %10 = load i8, i8* %7, align 1, !dbg !7722
  %11 = icmp ne i8 %9, %10, !dbg !7723
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7724
  br i1 %13, label %19, label %14, !dbg !7724

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7725
  call void @llvm.dbg.value(metadata i8* %15, metadata !7716, metadata !DIExpression()), !dbg !7719
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7727
  call void @llvm.dbg.value(metadata i8* %16, metadata !7717, metadata !DIExpression()), !dbg !7719
  %17 = add i32 %6, -1, !dbg !7728
  call void @llvm.dbg.value(metadata i32 %17, metadata !7718, metadata !DIExpression()), !dbg !7719
  %18 = icmp eq i32 %17, 0, !dbg !7720
  br i1 %18, label %23, label %5, !dbg !7720, !llvm.loop !7729

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7732
  %21 = zext i8 %10 to i32, !dbg !7733
  %22 = sub nsw i32 %20, %21, !dbg !7734
  br label %23, !dbg !7735

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7735
  ret i32 %24, !dbg !7736
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7737 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7741, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.value(metadata i8* %1, metadata !7742, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.value(metadata i8** %2, metadata !7743, metadata !DIExpression()), !dbg !7746
  %4 = icmp eq i8* %0, null, !dbg !7747
  br i1 %4, label %5, label %7, !dbg !7747

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7748
  br label %7, !dbg !7747

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7747
  call void @llvm.dbg.value(metadata i8* %8, metadata !7744, metadata !DIExpression()), !dbg !7746
  %9 = load i8, i8* %8, align 1, !dbg !7749
  %10 = icmp eq i8 %9, 0, !dbg !7749
  br i1 %10, label %33, label %11, !dbg !7750

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7744, metadata !DIExpression()), !dbg !7746
  %14 = zext i8 %12 to i32, !dbg !7749
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7751
  %16 = icmp eq i8* %15, null, !dbg !7750
  br i1 %16, label %21, label %17, !dbg !7752

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7753
  call void @llvm.dbg.value(metadata i8* %18, metadata !7744, metadata !DIExpression()), !dbg !7746
  %19 = load i8, i8* %18, align 1, !dbg !7749
  %20 = icmp eq i8 %19, 0, !dbg !7749
  br i1 %20, label %33, label %11, !dbg !7750, !llvm.loop !7755

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7745, metadata !DIExpression()), !dbg !7746
  %24 = zext i8 %22 to i32, !dbg !7757
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7758
  %26 = icmp eq i8* %25, null, !dbg !7759
  br i1 %26, label %27, label %31, !dbg !7760

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7761
  call void @llvm.dbg.value(metadata i8* %28, metadata !7745, metadata !DIExpression()), !dbg !7746
  %29 = load i8, i8* %28, align 1, !dbg !7757
  %30 = icmp eq i8 %29, 0, !dbg !7757
  br i1 %30, label %33, label %21, !dbg !7763, !llvm.loop !7764

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7766
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7769
  br label %33, !dbg !7770

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7746
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7746
  store i8* %34, i8** %2, align 4, !dbg !7746
  ret i8* %35, !dbg !7771
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7772 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7774, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata i8* %1, metadata !7775, metadata !DIExpression()), !dbg !7776
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7777
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7778
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7779
  ret i8* %0, !dbg !7780
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7781 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7783, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i8* %1, metadata !7784, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i32 %2, metadata !7785, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i8* %0, metadata !7786, metadata !DIExpression()), !dbg !7788
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7789
  call void @llvm.dbg.value(metadata i32 %4, metadata !7787, metadata !DIExpression()), !dbg !7788
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7790
  call void @llvm.dbg.value(metadata i8* %5, metadata !7783, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i8* %1, metadata !7784, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i32 %2, metadata !7785, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i32 %2, metadata !7785, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7788
  %6 = icmp eq i32 %2, 0, !dbg !7791
  br i1 %6, label %18, label %7, !dbg !7792

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7793
  call void @llvm.dbg.value(metadata i8* %9, metadata !7783, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i8* %10, metadata !7784, metadata !DIExpression()), !dbg !7788
  %12 = load i8, i8* %10, align 1, !dbg !7794
  %13 = icmp eq i8 %12, 0, !dbg !7795
  br i1 %13, label %18, label %14, !dbg !7796

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7797
  call void @llvm.dbg.value(metadata i8* %15, metadata !7784, metadata !DIExpression()), !dbg !7788
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7799
  call void @llvm.dbg.value(metadata i8* %16, metadata !7783, metadata !DIExpression()), !dbg !7788
  store i8 %12, i8* %9, align 1, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %11, metadata !7785, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i32 %11, metadata !7785, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7788
  %17 = icmp eq i32 %11, 0, !dbg !7791
  br i1 %17, label %18, label %7, !dbg !7792, !llvm.loop !7801

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7788
  store i8 0, i8* %19, align 1, !dbg !7803
  ret i8* %0, !dbg !7804
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7805 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7809, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i8* %1, metadata !7810, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i32 %2, metadata !7811, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i8* %0, metadata !7812, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i8* %1, metadata !7813, metadata !DIExpression()), !dbg !7814
  %4 = icmp eq i32 %2, 0, !dbg !7815
  br i1 %4, label %31, label %5, !dbg !7817

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i8* %0, metadata !7812, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i32 %2, metadata !7811, metadata !DIExpression()), !dbg !7814
  %6 = add i32 %2, -1, !dbg !7818
  call void @llvm.dbg.value(metadata i32 %6, metadata !7811, metadata !DIExpression()), !dbg !7814
  %7 = icmp eq i32 %6, 0, !dbg !7819
  br i1 %7, label %23, label %8, !dbg !7820

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7821
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7821
  br label %11, !dbg !7821

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i8* %14, metadata !7812, metadata !DIExpression()), !dbg !7814
  %15 = load i8, i8* %14, align 1, !dbg !7822
  %16 = load i8, i8* %13, align 1, !dbg !7823
  %17 = icmp eq i8 %15, %16, !dbg !7824
  br i1 %17, label %18, label %23, !dbg !7821

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7825
  call void @llvm.dbg.value(metadata i8* %19, metadata !7812, metadata !DIExpression()), !dbg !7814
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7827
  call void @llvm.dbg.value(metadata i8* %20, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i32 %12, metadata !7811, metadata !DIExpression()), !dbg !7814
  %21 = add i32 %12, -1, !dbg !7818
  call void @llvm.dbg.value(metadata i32 %21, metadata !7811, metadata !DIExpression()), !dbg !7814
  %22 = icmp eq i32 %21, 0, !dbg !7819
  br i1 %22, label %23, label %11, !dbg !7820, !llvm.loop !7828

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7814
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7814
  %26 = load i8, i8* %24, align 1, !dbg !7830
  %27 = zext i8 %26 to i32, !dbg !7830
  %28 = load i8, i8* %25, align 1, !dbg !7831
  %29 = zext i8 %28 to i32, !dbg !7831
  %30 = sub nsw i32 %27, %29, !dbg !7832
  br label %31, !dbg !7833

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7814
  ret i32 %32, !dbg !7834
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7839, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8* %1, metadata !7840, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %2, metadata !7841, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8* %0, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8* %1, metadata !7843, metadata !DIExpression()), !dbg !7844
  %4 = ptrtoint i8* %0 to i32, !dbg !7845
  %5 = ptrtoint i8* %1 to i32, !dbg !7845
  %6 = sub i32 %4, %5, !dbg !7845
  %7 = icmp ult i32 %6, %2, !dbg !7847
  br i1 %7, label %10, label %8, !dbg !7848

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8* %0, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %2, metadata !7841, metadata !DIExpression()), !dbg !7844
  %9 = icmp eq i32 %2, 0, !dbg !7849
  br i1 %9, label %26, label %17, !dbg !7851

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7841, metadata !DIExpression()), !dbg !7844
  %12 = add i32 %11, -1, !dbg !7852
  call void @llvm.dbg.value(metadata i32 %12, metadata !7841, metadata !DIExpression()), !dbg !7844
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7855
  %14 = load i8, i8* %13, align 1, !dbg !7855
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7856
  store i8 %14, i8* %15, align 1, !dbg !7857
  %16 = icmp eq i32 %12, 0, !dbg !7858
  br i1 %16, label %26, label %10, !dbg !7859, !llvm.loop !7860

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8* %19, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %20, metadata !7841, metadata !DIExpression()), !dbg !7844
  %21 = load i8, i8* %18, align 1, !dbg !7862
  store i8 %21, i8* %19, align 1, !dbg !7864
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7865
  call void @llvm.dbg.value(metadata i8* %22, metadata !7842, metadata !DIExpression()), !dbg !7844
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7866
  call void @llvm.dbg.value(metadata i8* %23, metadata !7843, metadata !DIExpression()), !dbg !7844
  %24 = add i32 %20, -1, !dbg !7867
  call void @llvm.dbg.value(metadata i32 %24, metadata !7841, metadata !DIExpression()), !dbg !7844
  %25 = icmp eq i32 %24, 0, !dbg !7849
  br i1 %25, label %26, label %17, !dbg !7851, !llvm.loop !7868

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7877, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %1, metadata !7878, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %2, metadata !7879, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7882
  %4 = icmp eq i32 %2, 0, !dbg !7883
  br i1 %4, label %14, label %5, !dbg !7884

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7881, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %7, metadata !7880, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %8, metadata !7879, metadata !DIExpression()), !dbg !7882
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7885
  call void @llvm.dbg.value(metadata i8* %9, metadata !7881, metadata !DIExpression()), !dbg !7882
  %10 = load i8, i8* %6, align 1, !dbg !7887
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7888
  call void @llvm.dbg.value(metadata i8* %11, metadata !7880, metadata !DIExpression()), !dbg !7882
  store i8 %10, i8* %7, align 1, !dbg !7889
  %12 = add i32 %8, -1, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %12, metadata !7879, metadata !DIExpression()), !dbg !7882
  %13 = icmp eq i32 %12, 0, !dbg !7883
  br i1 %13, label %14, label %5, !dbg !7884, !llvm.loop !7891

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7893
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7894 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7898, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i32 %1, metadata !7899, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i32 %2, metadata !7900, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* %0, metadata !7901, metadata !DIExpression()), !dbg !7903
  %4 = trunc i32 %1 to i8, !dbg !7904
  call void @llvm.dbg.value(metadata i8 %4, metadata !7902, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i32 %2, metadata !7900, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* %0, metadata !7901, metadata !DIExpression()), !dbg !7903
  %5 = icmp eq i32 %2, 0, !dbg !7905
  br i1 %5, label %12, label %6, !dbg !7906

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7900, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* %8, metadata !7901, metadata !DIExpression()), !dbg !7903
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7907
  call void @llvm.dbg.value(metadata i8* %9, metadata !7901, metadata !DIExpression()), !dbg !7903
  store i8 %4, i8* %8, align 1, !dbg !7909
  %10 = add i32 %7, -1, !dbg !7910
  call void @llvm.dbg.value(metadata i32 %10, metadata !7900, metadata !DIExpression()), !dbg !7903
  %11 = icmp eq i32 %10, 0, !dbg !7905
  br i1 %11, label %12, label %6, !dbg !7906, !llvm.loop !7911

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7913
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7918, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.value(metadata i32 %1, metadata !7919, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.value(metadata i32 %2, metadata !7920, metadata !DIExpression()), !dbg !7924
  %4 = icmp eq i32 %2, 0, !dbg !7925
  br i1 %4, label %17, label %5, !dbg !7926

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7927

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7928
  call void @llvm.dbg.value(metadata i8* %9, metadata !7921, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i32 %8, metadata !7920, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.value(metadata i8* %9, metadata !7921, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7928
  %10 = load i8, i8* %9, align 1, !dbg !7929
  %11 = icmp eq i8 %10, %6, !dbg !7932
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7933
  call void @llvm.dbg.value(metadata i8* %12, metadata !7921, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i32 %13, metadata !7920, metadata !DIExpression()), !dbg !7924
  br i1 %15, label %16, label %7, !dbg !7933, !llvm.loop !7934

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7936

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7924
  ret i8* %19, !dbg !7937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !7938 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7940, metadata !DIExpression()), !dbg !7941
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7942
  ret void, !dbg !7943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !7944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7946, metadata !DIExpression()), !dbg !7947
  ret i32 -1, !dbg !7948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7953, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32* %1, metadata !7954, metadata !DIExpression()), !dbg !7955
  %3 = ptrtoint i32* %1 to i32, !dbg !7956
  %4 = and i32 %3, -2, !dbg !7956
  %5 = icmp eq i32 %4, 2, !dbg !7956
  br i1 %5, label %6, label %9, !dbg !7956

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7957
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7957
  br label %9, !dbg !7958

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7958
  ret i32 %10, !dbg !7959
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7962, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32* %1, metadata !7963, metadata !DIExpression()), !dbg !7964
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7965
  ret i32 %3, !dbg !7966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7970, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32* %1, metadata !7971, metadata !DIExpression()), !dbg !7972
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7973, !srcloc !7975
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7976
  ret i32 %3, !dbg !7977
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7978 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7983, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32* %1, metadata !7984, metadata !DIExpression()), !dbg !7987
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7988
  call void @llvm.dbg.value(metadata i32 %3, metadata !7985, metadata !DIExpression()), !dbg !7987
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !7989
  call void @llvm.dbg.value(metadata i32 %4, metadata !7986, metadata !DIExpression()), !dbg !7987
  %5 = icmp ne i32 %3, %4, !dbg !7990
  %6 = sext i1 %5 to i32, !dbg !7991
  ret i32 %6, !dbg !7992
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7993 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7997, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %1, metadata !7998, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %2, metadata !7999, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32* %3, metadata !8000, metadata !DIExpression()), !dbg !8001
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8002
  ret i32 %5, !dbg !8003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8006, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i32 %1, metadata !8007, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i32 %2, metadata !8008, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i32* %3, metadata !8009, metadata !DIExpression()), !dbg !8010
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8011, !srcloc !8013
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8014
  ret i32 %5, !dbg !8015
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8016 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8018, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %1, metadata !8019, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %2, metadata !8020, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32* %3, metadata !8021, metadata !DIExpression()), !dbg !8026
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8027
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8029
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8029
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8029
  br i1 %11, label %33, label %12, !dbg !8029

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8026
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8026
  call void @llvm.dbg.value(metadata i8* %14, metadata !8024, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %13, metadata !8022, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %1, metadata !8023, metadata !DIExpression()), !dbg !8026
  br label %15, !dbg !8030

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8032
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8026
  call void @llvm.dbg.value(metadata i8* %17, metadata !8024, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %16, metadata !8023, metadata !DIExpression()), !dbg !8026
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8033
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8036
  call void @llvm.dbg.value(metadata i8* %19, metadata !8024, metadata !DIExpression()), !dbg !8026
  %20 = load i8, i8* %17, align 1, !dbg !8037
  %21 = zext i8 %20 to i32, !dbg !8038
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8033
  %23 = icmp eq i32 %22, -1, !dbg !8039
  br i1 %23, label %30, label %24, !dbg !8040

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8041
  call void @llvm.dbg.value(metadata i32 %25, metadata !8023, metadata !DIExpression()), !dbg !8026
  %26 = icmp eq i32 %25, 0, !dbg !8042
  br i1 %26, label %27, label %15, !dbg !8043, !llvm.loop !8044

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8046
  call void @llvm.dbg.value(metadata i32 %28, metadata !8022, metadata !DIExpression()), !dbg !8026
  %29 = icmp eq i32 %28, 0, !dbg !8047
  br i1 %29, label %30, label %12, !dbg !8048, !llvm.loop !8049

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8026
  call void @llvm.dbg.value(metadata i32 %31, metadata !8022, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.label(metadata !8025), !dbg !8052
  %32 = sub i32 %2, %31, !dbg !8053
  br label %33, !dbg !8054

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8026
  ret i32 %34, !dbg !8055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8060, metadata !DIExpression()), !dbg !8061
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8062
  %3 = icmp eq i32 %2, -1, !dbg !8064
  br i1 %3, label %8, label %4, !dbg !8065

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8066
  %6 = icmp eq i32 %5, -1, !dbg !8067
  %7 = sext i1 %6 to i32, !dbg !8066
  br label %8, !dbg !8068

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8061
  ret i32 %9, !dbg !8069
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8070 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8072, metadata !DIExpression()), !dbg !8083
  %8 = bitcast i64* %2 to i8*, !dbg !8084
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8084
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !8073, metadata !DIExpression()), !dbg !8085
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !8085
  store i64 %9, i64* %2, align 8, !dbg !8085
  %10 = bitcast i64* %4 to i8*, !dbg !8086
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8086
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !8081, metadata !DIExpression()), !dbg !8087
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !8087
  store i64 %11, i64* %4, align 8, !dbg !8087
  %12 = bitcast i64* %6 to i8*, !dbg !8088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8088
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !8082, metadata !DIExpression()), !dbg !8089
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !8089
  store i64 %13, i64* %6, align 8, !dbg !8089
  %14 = trunc i64 %9 to i32, !dbg !8090
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !8090
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #24, !dbg !8092
  %17 = trunc i64 %13 to i32, !dbg !8093
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !8093
  br i1 %16, label %19, label %26, !dbg !8093

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !8093
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !8093
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #24, !dbg !8094
  br i1 %22, label %23, label %26, !dbg !8095

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #24, !dbg !8096
  br i1 %24, label %25, label %26, !dbg !8097

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #24, !dbg !8098
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #24, !dbg !8099
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #24, !dbg !8100
  br label %26, !dbg !8101

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !8083
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8102
  ret i32 %27, !dbg !8102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8108, metadata !DIExpression()), !dbg !8109
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8110, !srcloc !8112
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #24, !dbg !8113
  ret i1 %2, !dbg !8114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8115 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !8120, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.value(metadata i32 %1, metadata !8121, metadata !DIExpression()), !dbg !8122
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !8123
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !8123
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !8124
  %6 = load i8, i8* %5, align 4, !dbg !8124
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !8125
  %8 = load i16, i16* %7, align 2, !dbg !8125
  %9 = zext i16 %8 to i32, !dbg !8126
  %10 = or i32 %9, %1, !dbg !8127
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #24, !dbg !8128
  ret void, !dbg !8129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8133, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8 %1, metadata !8134, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %2, metadata !8135, metadata !DIExpression()), !dbg !8136
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8137, !srcloc !8139
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #24, !dbg !8140
  ret void, !dbg !8141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8142 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8144, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i8 %1, metadata !8145, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i32 %2, metadata !8146, metadata !DIExpression()), !dbg !8151
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8152
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !8152
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !8152
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !8147, metadata !DIExpression()), !dbg !8151
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8153
  %8 = bitcast i8** %7 to %struct.k_spinlock**, !dbg !8153
  %9 = load %struct.k_spinlock*, %struct.k_spinlock** %8, align 4, !dbg !8153
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !8148, metadata !DIExpression()), !dbg !8151
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8154
  %11 = bitcast i8** %10 to %struct.k_spinlock**, !dbg !8154
  %12 = load %struct.k_spinlock*, %struct.k_spinlock** %11, align 4, !dbg !8154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %12, metadata !8150, metadata !DIExpression()), !dbg !8151
  %13 = and i32 %2, 132120576, !dbg !8155
  %14 = icmp eq i32 %13, 0, !dbg !8155
  br i1 %14, label %16, label %15, !dbg !8158

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12.91, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 679) #25, !dbg !8159
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.93, i32 0, i32 0)) #25, !dbg !8159
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 679) #25, !dbg !8159
  unreachable, !dbg !8159

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !8161
  %18 = icmp eq i32 %17, 48, !dbg !8161
  br i1 %18, label %19, label %20, !dbg !8164

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 683) #25, !dbg !8165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.95, i32 0, i32 0)) #25, !dbg !8165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 683) #25, !dbg !8165
  unreachable, !dbg !8165

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !8167
  %22 = icmp ne i32 %21, 0, !dbg !8167
  %23 = and i32 %2, 131074, !dbg !8167
  %24 = icmp eq i32 %23, 2, !dbg !8167
  br i1 %24, label %25, label %26, !dbg !8167

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 687) #25, !dbg !8170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.17.97, i32 0, i32 0)) #25, !dbg !8170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 687) #25, !dbg !8170
  unreachable, !dbg !8170

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !8172
  %28 = icmp eq i32 %27, 4, !dbg !8172
  br i1 %28, label %29, label %30, !dbg !8172

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 690) #25, !dbg !8175
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 690) #25, !dbg !8175
  unreachable, !dbg !8175

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !8177
  %32 = icmp eq i32 %31, 0, !dbg !8177
  %33 = or i1 %32, %22, !dbg !8177
  br i1 %33, label %35, label %34, !dbg !8177

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 694) #25, !dbg !8180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.100, i32 0, i32 0)) #25, !dbg !8180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 694) #25, !dbg !8180
  unreachable, !dbg !8180

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !8182
  br i1 %36, label %37, label %38, !dbg !8185

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 698) #25, !dbg !8186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.102, i32 0, i32 0)) #25, !dbg !8186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 698) #25, !dbg !8186
  unreachable, !dbg !8186

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !8188
  %40 = icmp ne i32 %39, 1048577, !dbg !8188
  %41 = or i1 %40, %32, !dbg !8188
  %42 = xor i32 %2, 786432, !dbg !8188
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !8188
  call void @llvm.dbg.value(metadata i32 %43, metadata !8146, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i32 %43, metadata !8146, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !8151
  %44 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %9, i32 0, i32 0, !dbg !8190
  %45 = load i32, i32* %44, align 4, !dbg !8190
  %46 = zext i8 %1 to i32, !dbg !8190
  %47 = shl nuw i32 1, %46, !dbg !8190
  %48 = and i32 %45, %47, !dbg !8190
  %49 = icmp eq i32 %48, 0, !dbg !8190
  br i1 %49, label %50, label %51, !dbg !8193

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 709) #25, !dbg !8194
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.104, i32 0, i32 0)) #25, !dbg !8194
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 709) #25, !dbg !8194
  unreachable, !dbg !8194

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !8196
  %53 = icmp eq i32 %52, 0, !dbg !8198
  br i1 %53, label %58, label %54, !dbg !8199

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !8200
  %56 = load i32, i32* %55, align 4, !dbg !8202
  %57 = or i32 %56, %47, !dbg !8202
  store i32 %57, i32* %55, align 4, !dbg !8202
  br label %63, !dbg !8203

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !8204
  %60 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !8206
  %61 = load i32, i32* %60, align 4, !dbg !8207
  %62 = and i32 %61, %59, !dbg !8207
  store i32 %62, i32* %60, align 4, !dbg !8207
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !8208
  call void @llvm.dbg.value(metadata i32 %64, metadata !8146, metadata !DIExpression()), !dbg !8151
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !8209
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !8209
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #25, !dbg !8210
  ret void, !dbg !8211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8214, metadata !DIExpression()), !dbg !8215
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8216
  ret i1 %2, !dbg !8217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8218 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8219
  %2 = icmp eq i32 %1, 0, !dbg !8219
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.105, i32 0, i32 0)) #25, !dbg !8221
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.107, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.108, i32 0, i32 0), i8* noundef %3) #25, !dbg !8221
  ret void, !dbg !8222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #2 !dbg !8223 {
  ret void, !dbg !8224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #2 !dbg !8225 {
  ret void, !dbg !8226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8227 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8228
  tail call void @ztest_test_skip() #24, !dbg !8231
  ret void, !dbg !8232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8233 {
  %1 = load i32, i32* @phase, align 4, !dbg !8234
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8235

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8236
  br label %6, !dbg !8238

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8239
  tail call fastcc void @test_finalize() #24, !dbg !8240
  br label %6, !dbg !8241

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8242
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8243
  store i32 2, i32* @test_status, align 4, !dbg !8244
  br label %6, !dbg !8245

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8247 {
  tail call fastcc void @k_thread_abort.117(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8248
  %1 = tail call fastcc %struct.k_thread* @k_current_get.118() #26, !dbg !8251
  tail call fastcc void @k_thread_abort.117(%struct.k_thread* noundef %1) #24, !dbg !8252
  ret void, !dbg !8253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #2 !dbg !8254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8258, metadata !DIExpression()), !dbg !8259
  %2 = icmp ult i32 %0, 6, !dbg !8260
  br i1 %2, label %3, label %6, !dbg !8260

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8260
  %5 = load i8*, i8** %4, align 4, !dbg !8260
  br label %6, !dbg !8260

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.110, i32 0, i32 0), %1 ], !dbg !8261
  ret i8* %7, !dbg !8263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.117(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8270, metadata !DIExpression()), !dbg !8271
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8272, !srcloc !8274
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8275
  ret void, !dbg !8276
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.118() unnamed_addr #11 !dbg !8277 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.119() #26, !dbg !8280
  ret %struct.k_thread* %1, !dbg !8281
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.119() unnamed_addr #11 !dbg !8282 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8283, !srcloc !8285
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8286
  ret %struct.k_thread* %1, !dbg !8287
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8288 {
  %1 = load i32, i32* @phase, align 4, !dbg !8289
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8290

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8291
  br label %6, !dbg !8293

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8294
  tail call fastcc void @test_finalize() #24, !dbg !8295
  br label %6, !dbg !8296

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8297
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.120, i32 0, i32 0), i8* noundef %5) #25, !dbg !8298
  store i32 2, i32* @test_status, align 4, !dbg !8299
  br label %6, !dbg !8300

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8302 {
  %1 = load i32, i32* @phase, align 4, !dbg !8303
  %2 = icmp eq i32 %1, 2, !dbg !8304
  br i1 %2, label %3, label %4, !dbg !8304

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8305
  br label %8, !dbg !8307

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8308
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.121, i32 0, i32 0), i8* noundef %5) #25, !dbg !8309
  store i32 2, i32* @test_status, align 4, !dbg !8310
  %6 = load i32, i32* @phase, align 4, !dbg !8311
  %7 = icmp eq i32 %6, 1, !dbg !8313
  br i1 %7, label %8, label %9, !dbg !8314

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8315
  br label %9, !dbg !8316

9:                                                ; preds = %8, %4
  ret void, !dbg !8316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8319, metadata !DIExpression()), !dbg !8320
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8321
  ret void, !dbg !8322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8323 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8325, !srcloc !8327
  ret void, !dbg !8328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8329 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8331, metadata !DIExpression()), !dbg !8332
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8333
  ret void, !dbg !8334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8335 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8336, !srcloc !8338
  ret void, !dbg !8339
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8361, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8362, metadata !DIExpression()), !dbg !8364
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8365
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8366
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8366
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8363, metadata !DIExpression()), !dbg !8364
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8367
  br i1 %6, label %7, label %16, !dbg !8370

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8363, metadata !DIExpression()), !dbg !8364
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8371
  %10 = load i8*, i8** %9, align 4, !dbg !8371
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8374
  %12 = icmp eq i32 %11, 0, !dbg !8375
  br i1 %12, label %16, label %13, !dbg !8376

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8377
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8363, metadata !DIExpression()), !dbg !8364
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8367
  br i1 %15, label %7, label %16, !dbg !8370, !llvm.loop !8378

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8364
  ret %struct.ztest_unit_test* %17, !dbg !8380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8381 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8383, metadata !DIExpression()), !dbg !8384
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8385
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8386
  ret i32 %3, !dbg !8387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8388 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8409, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8410, metadata !DIExpression()), !dbg !8411
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8412

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8410, metadata !DIExpression()), !dbg !8411
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8414
  %5 = load i8*, i8** %4, align 4, !dbg !8414
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8418
  %7 = icmp eq i32 %6, 0, !dbg !8419
  br i1 %7, label %11, label %8, !dbg !8420

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8421
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8410, metadata !DIExpression()), !dbg !8411
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8422
  br i1 %10, label %2, label %11, !dbg !8412, !llvm.loop !8423

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8411
  ret %struct.ztest_suite_node* %12, !dbg !8425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8426 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8430, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8431, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i8* null, metadata !8432, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 0, metadata !8433, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 0, metadata !8434, metadata !DIExpression()), !dbg !8437
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8438
  br i1 %2, label %3, label %4, !dbg !8440

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8441
  br label %68, !dbg !8443

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8444
  %6 = load i8*, i8** %5, align 4, !dbg !8444
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.122, i32 0, i32 0), i8* noundef %6) #25, !dbg !8444
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.105, i32 0, i32 0)) #25, !dbg !8444
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8446
  store i32 0, i32* @test_result, align 4, !dbg !8447
  store i32 0, i32* @phase, align 4, !dbg !8448
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8449
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8449
  %9 = icmp eq i8* ()* %8, null, !dbg !8451
  br i1 %9, label %12, label %10, !dbg !8452

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8453
  call void @llvm.dbg.value(metadata i8* %11, metadata !8432, metadata !DIExpression()), !dbg !8437
  br label %12, !dbg !8455

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8437
  call void @llvm.dbg.value(metadata i8* %13, metadata !8432, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 0, metadata !8435, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.value(metadata i32 undef, metadata !8435, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.value(metadata i32 0, metadata !8433, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8431, metadata !DIExpression()), !dbg !8437
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8431, metadata !DIExpression()), !dbg !8437
  br label %15, !dbg !8457

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8437
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8460
  call void @llvm.dbg.value(metadata i32 %17, metadata !8433, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8431, metadata !DIExpression()), !dbg !8437
  %18 = load i8*, i8** %5, align 4, !dbg !8461
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8462
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8431, metadata !DIExpression()), !dbg !8437
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8463
  br i1 %20, label %53, label %21, !dbg !8457

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8464
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8467
  %24 = load i8*, i8** %23, align 4, !dbg !8467
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8468
  br i1 %25, label %26, label %49, !dbg !8469

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8470
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8470
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8472
  %30 = load i32, i32* %29, align 4, !dbg !8473
  %31 = add i32 %30, 1, !dbg !8473
  store i32 %31, i32* %29, align 4, !dbg !8473
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8474
  call void @llvm.dbg.value(metadata i32 %32, metadata !8434, metadata !DIExpression()), !dbg !8437
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8475

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8476
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8479
  br label %42, !dbg !8480

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8481
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8484
  br label %42, !dbg !8485

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8486
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8489
  br label %42, !dbg !8490

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8491
  %45 = add i32 %44, 1, !dbg !8491
  store i32 %45, i32* %43, align 4, !dbg !8491
  %46 = icmp eq i32 %32, 1, !dbg !8492
  %47 = zext i1 %46 to i32, !dbg !8494
  %48 = add nsw i32 %17, %47, !dbg !8494
  br label %49, !dbg !8494

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8460
  call void @llvm.dbg.value(metadata i32 %50, metadata !8433, metadata !DIExpression()), !dbg !8437
  %51 = load i32, i32* @test_status, align 4, !dbg !8495
  %52 = icmp eq i32 %51, 2, !dbg !8497
  br i1 %52, label %59, label %15, !dbg !8498, !llvm.loop !8499

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8501
  %55 = icmp eq i32 %54, 0, !dbg !8457
  call void @llvm.dbg.value(metadata i32 %17, metadata !8433, metadata !DIExpression()), !dbg !8437
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8503
  br i1 %57, label %58, label %59, !dbg !8503

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8504
  br label %59, !dbg !8506

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8435, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.value(metadata i32 %17, metadata !8433, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8431, metadata !DIExpression()), !dbg !8437
  %61 = icmp sgt i32 %60, 0, !dbg !8507
  %62 = load i8*, i8** %5, align 4, !dbg !8510
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.123, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.124, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8510
  store i32 4, i32* @phase, align 4, !dbg !8511
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8512
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8512
  %66 = icmp eq void (i8*)* %65, null, !dbg !8514
  br i1 %66, label %68, label %67, !dbg !8515

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8516
  br label %68, !dbg !8518

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8437
  ret i32 %69, !dbg !8519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8520 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8524, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8525, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.value(metadata i8* %2, metadata !8526, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.value(metadata i32 0, metadata !8527, metadata !DIExpression()), !dbg !8528
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8529
  %5 = load i8*, i8** %4, align 4, !dbg !8529
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.125, i32 0, i32 0), i8* noundef %5) #25, !dbg !8529
  store i32 1, i32* @phase, align 4, !dbg !8531
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8532
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8535
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8536
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8537
  %9 = load i32, i32* %8, align 4, !dbg !8537
  %10 = or i32 %9, 8, !dbg !8538
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8539
  tail call fastcc void @k_object_access_grant() #24, !dbg !8540
  tail call fastcc void @k_object_access_grant() #24, !dbg !8540
  tail call fastcc void @k_object_access_grant() #24, !dbg !8540
  %11 = load i8*, i8** %4, align 4, !dbg !8541
  %12 = icmp eq i8* %11, null, !dbg !8543
  br i1 %12, label %14, label %13, !dbg !8544

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8545
  br label %14, !dbg !8547

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8548
  %16 = and i32 %15, -2, !dbg !8550
  %17 = icmp eq i32 %16, 4, !dbg !8550
  br i1 %17, label %19, label %18, !dbg !8550

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8551
  tail call fastcc void @k_thread_join() #24, !dbg !8553
  br label %19, !dbg !8554

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8555
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8556
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8556
  %22 = icmp eq void (i8*)* %21, null, !dbg !8558
  br i1 %22, label %24, label %23, !dbg !8559

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8560
  br label %24, !dbg !8562

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8563
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8564
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8565
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8567
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8567
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8568
  %29 = load i32, i32* %28, align 4, !dbg !8568
  %30 = icmp ugt i32 %25, %29, !dbg !8569
  br i1 %30, label %31, label %32, !dbg !8570

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8571
  br label %32, !dbg !8573

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8574
  %33 = load i32, i32* @test_result, align 4, !dbg !8575
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8577

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8578
  %36 = icmp ult i32 %35, 2, !dbg !8578
  %37 = select i1 %36, i32 2, i32 0, !dbg !8578
  br label %38, !dbg !8578

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8528
  call void @llvm.dbg.value(metadata i32 %39, metadata !8527, metadata !DIExpression()), !dbg !8528
  tail call fastcc void @cleanup_test() #24, !dbg !8580
  call void @llvm.dbg.value(metadata i32 %39, metadata !8527, metadata !DIExpression()), !dbg !8528
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8583
  call void @llvm.dbg.value(metadata i32 %40, metadata !8527, metadata !DIExpression()), !dbg !8528
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8584
  %42 = load i8*, i8** %4, align 4, !dbg !8584
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8584
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8584
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.126, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8584
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.105, i32 0, i32 0)) #25, !dbg !8584
  %48 = icmp eq i32 %40, 2, !dbg !8586
  br i1 %48, label %49, label %52, !dbg !8588

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8589
  br i1 %50, label %51, label %52, !dbg !8590

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8591
  br label %52, !dbg !8593

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8595 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8596
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8599 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8618, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8609, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8610, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i32 1024, metadata !8611, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8612, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i8* %0, metadata !8613, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i8* %1, metadata !8614, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i8* %2, metadata !8615, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i32 -1, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i32 %3, metadata !8617, metadata !DIExpression()), !dbg !8619
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8620, !srcloc !8622
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8623
  ret void, !dbg !8624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8625 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8630, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8631, metadata !DIExpression()), !dbg !8632
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8633, !srcloc !8635
  ret void, !dbg !8636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8637 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8641, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %0, metadata !8642, metadata !DIExpression()), !dbg !8643
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8644, !srcloc !8646
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8647
  ret void, !dbg !8648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8651, metadata !DIExpression()), !dbg !8652
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8653, !srcloc !8655
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8656
  ret void, !dbg !8657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8658 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8663, metadata !DIExpression()), !dbg !8664
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8662, metadata !DIExpression()), !dbg !8664
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8665, !srcloc !8667
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8670 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8674, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8690
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8675, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i8* %2, metadata !8676, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8677, metadata !DIExpression()), !dbg !8691
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8692

4:                                                ; preds = %17, %3
  ret void, !dbg !8693

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8677, metadata !DIExpression()), !dbg !8691
  br i1 %0, label %7, label %11, !dbg !8694

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8698
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8698
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8699
  br i1 %10, label %17, label %15, !dbg !8700

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8701
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8701
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8703
  br i1 %14, label %17, label %15, !dbg !8704

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8705
  br label %17, !dbg !8706

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8706
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8677, metadata !DIExpression()), !dbg !8691
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8707
  br i1 %19, label %5, label %4, !dbg !8692, !llvm.loop !8708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8710 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8713
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8714
  %3 = sub i32 %1, %2, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %3, metadata !8712, metadata !DIExpression()), !dbg !8716
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8717
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8718
  ret void, !dbg !8719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8720 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8724, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 0, metadata !8725, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 0, metadata !8726, metadata !DIExpression()), !dbg !8727
  tail call fastcc void @k_thread_abort.117(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8728
  call void @llvm.dbg.value(metadata i32 0, metadata !8725, metadata !DIExpression()), !dbg !8727
  ret void, !dbg !8731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8732 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8736, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i32 %1, metadata !8737, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i32 -1, metadata !8738, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8739, metadata !DIExpression()), !dbg !8748
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8749

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8749

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8739, metadata !DIExpression()), !dbg !8748
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8750
  %9 = load i8*, i8** %8, align 4, !dbg !8750
  %10 = load i8*, i8** %4, align 4, !dbg !8754
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8755
  %12 = icmp eq i32 %11, 0, !dbg !8756
  br i1 %12, label %13, label %19, !dbg !8757

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8758
  %15 = load i8*, i8** %14, align 4, !dbg !8758
  %16 = load i8*, i8** %5, align 4, !dbg !8759
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8760
  %18 = icmp eq i32 %17, 0, !dbg !8761
  br i1 %18, label %22, label %19, !dbg !8762

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8763
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8739, metadata !DIExpression()), !dbg !8748
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8764
  br i1 %21, label %6, label %31, !dbg !8749, !llvm.loop !8765

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8767
  %24 = load i32, i32* %23, align 4, !dbg !8767
  call void @llvm.dbg.value(metadata i32 %24, metadata !8738, metadata !DIExpression()), !dbg !8747
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8769

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8770
  %27 = zext i1 %26 to i32, !dbg !8773
  br label %31, !dbg !8774

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8775
  %30 = zext i1 %29 to i32, !dbg !8778
  br label %31, !dbg !8779

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8747
  ret i32 %32, !dbg !8780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #2 !dbg !8781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8785, metadata !DIExpression()), !dbg !8786
  %2 = icmp ult i32 %0, 3, !dbg !8787
  br i1 %2, label %3, label %6, !dbg !8787

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8787
  %5 = load i8*, i8** %4, align 4, !dbg !8787
  br label %6, !dbg !8787

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.127, i32 0, i32 0), %1 ], !dbg !8788
  ret i8* %7, !dbg !8790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8791 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8792
  ret i32 %1, !dbg !8793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !8794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8797, metadata !DIExpression()), !dbg !8798
  %2 = zext i32 %0 to i64, !dbg !8799
  call void @llvm.dbg.value(metadata i64 %2, metadata !8800, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 32000000, metadata !8805, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 1000, metadata !8806, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8 1, metadata !8807, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8 1, metadata !8808, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8 1, metadata !8809, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8 0, metadata !8810, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8 0, metadata !8811, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8 1, metadata !8812, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i64 0, metadata !8813, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i64 31999, metadata !8813, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i64 31999, metadata !8813, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i64 31999, metadata !8813, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i64 31999, metadata !8813, metadata !DIExpression()), !dbg !8817
  %3 = add nuw nsw i64 %2, 31999, !dbg !8819
  call void @llvm.dbg.value(metadata i64 %3, metadata !8800, metadata !DIExpression()), !dbg !8817
  %4 = icmp ult i32 %0, -31999
  %5 = trunc i64 %3 to i32, !dbg !8822
  %6 = udiv i32 %5, 32000, !dbg !8822
  %7 = zext i32 %6 to i64, !dbg !8822
  %8 = udiv i64 %3, 32000, !dbg !8822
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8822
  %10 = trunc i64 %9 to i32, !dbg !8824
  ret i32 %10, !dbg !8825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8826 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8828
  ret i32 %1, !dbg !8829
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8832, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i8* %1, metadata !8833, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i8* %2, metadata !8834, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i8* %0, metadata !8835, metadata !DIExpression()), !dbg !8837
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8838
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8836, metadata !DIExpression()), !dbg !8837
  store i32 0, i32* @test_result, align 4, !dbg !8839
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8840
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8841
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8841
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8841
  %8 = icmp eq void (i8*)* %7, null, !dbg !8843
  br i1 %8, label %10, label %9, !dbg !8844

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8845
  br label %10, !dbg !8847

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8848
  store i32 1, i32* @test_result, align 4, !dbg !8849
  ret void, !dbg !8850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8851 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8855, metadata !DIExpression()), !dbg !8858
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8856, metadata !DIExpression()), !dbg !8858
  call void @llvm.dbg.value(metadata i8* %1, metadata !8857, metadata !DIExpression()), !dbg !8858
  store i32 2, i32* @phase, align 4, !dbg !8859
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8860
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8860
  tail call void %4(i8* noundef %1) #25, !dbg !8861
  ret void, !dbg !8862
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8863 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8867, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i32 0, metadata !8868, metadata !DIExpression()), !dbg !8871
  %2 = load i32, i32* @test_status, align 4, !dbg !8872
  %3 = icmp eq i32 %2, 2, !dbg !8874
  br i1 %3, label %17, label %4, !dbg !8875

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8869, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i32 0, metadata !8868, metadata !DIExpression()), !dbg !8871
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8877

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8869, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i32 %7, metadata !8868, metadata !DIExpression()), !dbg !8871
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8878
  %9 = add nsw i32 %8, %7, !dbg !8881
  call void @llvm.dbg.value(metadata i32 %9, metadata !8868, metadata !DIExpression()), !dbg !8871
  %10 = load i32, i32* @test_status, align 4, !dbg !8882
  %11 = icmp ne i32 %10, 2, !dbg !8884
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8885
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8869, metadata !DIExpression()), !dbg !8876
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8886
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8869, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i32 %9, metadata !8868, metadata !DIExpression()), !dbg !8871
  br i1 %14, label %5, label %15, !dbg !8886, !llvm.loop !8887

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8871
  call void @llvm.dbg.value(metadata i32 %16, metadata !8868, metadata !DIExpression()), !dbg !8871
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8889
  br label %17, !dbg !8890

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8871
  ret i32 %18, !dbg !8891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8892 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8896, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %1, metadata !8897, metadata !DIExpression()), !dbg !8907
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8908
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8908
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8898, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8907
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8900, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 undef, metadata !8900, metadata !DIExpression()), !dbg !8910
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8907
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8911
  br i1 %8, label %9, label %16, !dbg !8912

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %11, metadata !8902, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.value(metadata i32 1, metadata !8899, metadata !DIExpression()), !dbg !8907
  %12 = load i32, i32* %7, align 4, !dbg !8915
  %13 = add i32 %12, 1, !dbg !8915
  store i32 %13, i32* %7, align 4, !dbg !8915
  %14 = icmp ne i32 %11, 0, !dbg !8916
  %15 = zext i1 %14 to i32, !dbg !8917
  br label %16, !dbg !8918

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8907
  %20 = load i32, i32* %17, align 4, !dbg !8919
  %21 = add i32 %20, %18, !dbg !8919
  store i32 %21, i32* %17, align 4, !dbg !8919
  call void @llvm.dbg.value(metadata i32 %19, metadata !8899, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 undef, metadata !8900, metadata !DIExpression()), !dbg !8910
  ret i32 %19, !dbg !8920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8921 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.131, i32 0, i32 0)) #25, !dbg !8925
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8923, metadata !DIExpression()), !dbg !8926
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8927

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.132, i32 0, i32 0)) #25, !dbg !8928
  ret void, !dbg !8929

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8923, metadata !DIExpression()), !dbg !8926
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8930
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8933
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8923, metadata !DIExpression()), !dbg !8926
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8934
  br i1 %5, label %2, label %1, !dbg !8927, !llvm.loop !8935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8937 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8941, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8942, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 0, metadata !8943, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 0, metadata !8944, metadata !DIExpression()), !dbg !8945
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8946
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8944, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8942, metadata !DIExpression()), !dbg !8945
  %3 = load i8*, i8** %2, align 4, !dbg !8947
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8948
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8942, metadata !DIExpression()), !dbg !8945
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8949
  br i1 %5, label %36, label %6, !dbg !8950

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8951
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8951
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8954
  %11 = load i32, i32* %10, align 4, !dbg !8954
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8955
  %13 = load i32, i32* %12, align 4, !dbg !8955
  %14 = icmp eq i32 %11, %13, !dbg !8956
  br i1 %14, label %20, label %15, !dbg !8957

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8958
  %17 = load i32, i32* %16, align 4, !dbg !8958
  %18 = icmp ne i32 %17, %13, !dbg !8960
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8961
  call void @llvm.dbg.value(metadata i32 %21, metadata !8943, metadata !DIExpression()), !dbg !8945
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8962
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8962
  %24 = load i8*, i8** %23, align 4, !dbg !8962
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8962
  %26 = load i8*, i8** %25, align 4, !dbg !8962
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8962
  %28 = load i32, i32* %27, align 4, !dbg !8962
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8962
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.133, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8962
  call void @llvm.dbg.value(metadata i32 poison, metadata !8944, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8942, metadata !DIExpression()), !dbg !8945
  %33 = load i8*, i8** %2, align 4, !dbg !8947
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8948
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8942, metadata !DIExpression()), !dbg !8945
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8949
  br i1 %35, label %36, label %6, !dbg !8950, !llvm.loop !8963

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.134, i32 0, i32 0)) #25, !dbg !8965
  ret void, !dbg !8966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8967 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8969, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8970, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8971, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8972, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8974, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8975, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8976, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8977, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8978, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8979, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8980, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8981, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8982, metadata !DIExpression()), !dbg !8983
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8982, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8981, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8972, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8971, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 0, metadata !8970, metadata !DIExpression()), !dbg !8983
  %3 = load i8*, i8** %2, align 4, !dbg !8984
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8985
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8981, metadata !DIExpression()), !dbg !8983
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8986
  br i1 %5, label %58, label %6, !dbg !8987

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8982, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %9, metadata !8973, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %10, metadata !8972, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %11, metadata !8971, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %12, metadata !8970, metadata !DIExpression()), !dbg !8983
  %13 = add nuw nsw i32 %9, 1, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %13, metadata !8973, metadata !DIExpression()), !dbg !8983
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8990
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8990
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8991
  %17 = load i32, i32* %16, align 4, !dbg !8991
  %18 = add i32 %17, %8, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %18, metadata !8982, metadata !DIExpression()), !dbg !8983
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8993
  %20 = load i32, i32* %19, align 4, !dbg !8993
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8995
  %22 = load i32, i32* %21, align 4, !dbg !8995
  %23 = icmp eq i32 %20, %22, !dbg !8996
  br i1 %23, label %24, label %26, !dbg !8997

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8998
  call void @llvm.dbg.value(metadata i32 %25, metadata !8972, metadata !DIExpression()), !dbg !8983
  br label %34, !dbg !9000

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9001
  %28 = load i32, i32* %27, align 4, !dbg !9001
  %29 = icmp eq i32 %28, %22, !dbg !9003
  br i1 %29, label %30, label %32, !dbg !9004

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !9005
  call void @llvm.dbg.value(metadata i32 %31, metadata !8970, metadata !DIExpression()), !dbg !8983
  br label %34, !dbg !9007

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !9008
  call void @llvm.dbg.value(metadata i32 %33, metadata !8971, metadata !DIExpression()), !dbg !8983
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8983
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8983
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8983
  call void @llvm.dbg.value(metadata i32 %18, metadata !8982, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8981, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %13, metadata !8973, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %37, metadata !8972, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %36, metadata !8971, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %35, metadata !8970, metadata !DIExpression()), !dbg !8983
  %38 = load i8*, i8** %2, align 4, !dbg !8984
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8985
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8981, metadata !DIExpression()), !dbg !8983
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8986
  br i1 %40, label %41, label %6, !dbg !8987, !llvm.loop !9010

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !9012
  br i1 %42, label %58, label %43, !dbg !9014

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !9015
  %45 = zext i1 %44 to i32, !dbg !9017
  call void @llvm.dbg.value(metadata i32 %45, metadata !8980, metadata !DIExpression()), !dbg !8983
  %46 = sub nsw i32 %13, %37, !dbg !9018
  call void @llvm.dbg.value(metadata i32 %46, metadata !8974, metadata !DIExpression()), !dbg !8983
  %47 = mul nsw i32 %35, 100000, !dbg !9019
  call void @llvm.dbg.value(metadata i32 %47, metadata !8975, metadata !DIExpression()), !dbg !8983
  %48 = sdiv i32 %47, %46, !dbg !9020
  call void @llvm.dbg.value(metadata i32 %48, metadata !8976, metadata !DIExpression()), !dbg !8983
  %49 = sdiv i32 %48, 1000, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %49, metadata !8977, metadata !DIExpression()), !dbg !8983
  %50 = mul nsw i32 %49, -1000, !dbg !9022
  %51 = add i32 %50, %48, !dbg !9023
  %52 = sdiv i32 %51, 10, !dbg !9024
  call void @llvm.dbg.value(metadata i32 %52, metadata !8978, metadata !DIExpression()), !dbg !8983
  %53 = mul nsw i32 %52, -10, !dbg !9025
  %54 = add i32 %53, %51, !dbg !9026
  call void @llvm.dbg.value(metadata i32 %54, metadata !8979, metadata !DIExpression()), !dbg !8983
  %55 = icmp sgt i32 %54, 4, !dbg !9027
  %56 = zext i1 %55 to i32, !dbg !9029
  %57 = add nsw i32 %52, %56, !dbg !9029
  br label %58, !dbg !9029

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !9030
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !9030
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !9030
  call void @llvm.dbg.value(metadata i32 %66, metadata !8980, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %65, metadata !8978, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %64, metadata !8977, metadata !DIExpression()), !dbg !8983
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !9031
  %68 = load i8*, i8** %2, align 4, !dbg !9031
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !9031
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.135, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !9031
  ret void, !dbg !9032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9033 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !9035, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9036, metadata !DIExpression()), !dbg !9037
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9036, metadata !DIExpression()), !dbg !9037
  %3 = load i8*, i8** %2, align 4, !dbg !9038
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !9039
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !9036, metadata !DIExpression()), !dbg !9037
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !9040
  br i1 %5, label %22, label %6, !dbg !9041

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !9042
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9042
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !9044
  store i32 0, i32* %10, align 4, !dbg !9045
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9046
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !9047
  store i32 0, i32* %12, align 4, !dbg !9048
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9049
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !9050
  store i32 0, i32* %14, align 4, !dbg !9051
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9052
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9053
  store i32 0, i32* %16, align 4, !dbg !9054
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9055
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !9056
  store i32 0, i32* %18, align 4, !dbg !9057
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !9036, metadata !DIExpression()), !dbg !9037
  %19 = load i8*, i8** %2, align 4, !dbg !9038
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !9039
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !9036, metadata !DIExpression()), !dbg !9037
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !9040
  br i1 %21, label %22, label %6, !dbg !9041, !llvm.loop !9058

22:                                               ; preds = %6, %1
  ret void, !dbg !9060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !9061 {
  call void @llvm.dbg.value(metadata i8 1, metadata !9063, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !9064, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i8 poison, metadata !9063, metadata !DIExpression()), !dbg !9066
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !9067

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9065, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i8 poison, metadata !9063, metadata !DIExpression()), !dbg !9066
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9071

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !9064, metadata !DIExpression()), !dbg !9066
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9073
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9073
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9077
  %9 = load i32, i32* %8, align 4, !dbg !9077
  %10 = icmp eq i32 %9, 0, !dbg !9078
  br i1 %10, label %11, label %14, !dbg !9079

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9080
  %13 = load i8*, i8** %12, align 4, !dbg !9080
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.136, i32 0, i32 0), i8* noundef %13) #25, !dbg !9082
  call void @llvm.dbg.value(metadata i8 0, metadata !9063, metadata !DIExpression()), !dbg !9066
  br label %14, !dbg !9083

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9063, metadata !DIExpression()), !dbg !9066
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9084
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !9064, metadata !DIExpression()), !dbg !9066
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9085
  br i1 %17, label %3, label %1, !dbg !9067, !llvm.loop !9086

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !9065, metadata !DIExpression()), !dbg !9066
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9088
  %22 = load i8*, i8** %21, align 4, !dbg !9088
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9091
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !9064, metadata !DIExpression()), !dbg !9066
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9092
  br i1 %24, label %25, label %29, !dbg !9094

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9095
  %27 = load i8*, i8** %26, align 4, !dbg !9095
  %28 = load i8*, i8** %21, align 4, !dbg !9097
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.137, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9098
  call void @llvm.dbg.value(metadata i8 0, metadata !9063, metadata !DIExpression()), !dbg !9066
  br label %29, !dbg !9099

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9063, metadata !DIExpression()), !dbg !9066
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9100
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !9065, metadata !DIExpression()), !dbg !9066
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9101
  br i1 %32, label %18, label %33, !dbg !9071, !llvm.loop !9102

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9104

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9105
  br label %36, !dbg !9108

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9065, metadata !DIExpression()), !dbg !9066
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9109

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !9065, metadata !DIExpression()), !dbg !9066
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9111
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9111
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9115
  %42 = load i32, i32* %41, align 4, !dbg !9115
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9116
  %44 = load i32, i32* %43, align 4, !dbg !9116
  %45 = add i32 %44, %42, !dbg !9117
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9118
  %47 = load i32, i32* %46, align 4, !dbg !9118
  %48 = add i32 %45, %47, !dbg !9119
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9120
  %50 = load i32, i32* %49, align 4, !dbg !9120
  %51 = icmp eq i32 %48, %50, !dbg !9121
  br i1 %51, label %57, label %52, !dbg !9122

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9123
  %54 = load i8*, i8** %53, align 4, !dbg !9123
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9125
  %56 = load i8*, i8** %55, align 4, !dbg !9125
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.138, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9126
  store i32 1, i32* @test_status, align 4, !dbg !9127
  br label %57, !dbg !9128

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9129
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !9065, metadata !DIExpression()), !dbg !9066
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9130
  br i1 %59, label %37, label %60, !dbg !9109, !llvm.loop !9131

60:                                               ; preds = %57, %36
  ret void, !dbg !9133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9134 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9136, metadata !DIExpression()), !dbg !9137
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9138
  tail call void %2(i8* noundef %0) #25, !dbg !9139
  ret void, !dbg !9140
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9141 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9142
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9145 {
  tail call void @test_main() #24, !dbg !9146
  tail call void @end_report() #24, !dbg !9147
  ret void, !dbg !9148
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9151, metadata !DIExpression()), !dbg !9152
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9153
  ret void, !dbg !9154
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9157, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9158, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.value(metadata i8 1, metadata !9159, metadata !DIExpression()), !dbg !9160
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9161
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9161
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9163
  br i1 %5, label %8, label %6, !dbg !9164

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9165
  call void @llvm.dbg.value(metadata i1 %7, metadata !9159, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9160
  br label %8, !dbg !9167

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9159, metadata !DIExpression()), !dbg !9160
  ret i1 %9, !dbg !9168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #2 !dbg !9169 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9171, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i8* undef, metadata !9172, metadata !DIExpression()), !dbg !9173
  ret i1 true, !dbg !9174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9175 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9178, metadata !DIExpression()), !dbg !9179
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9180, !srcloc !9182
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9183
  ret void, !dbg !9184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #2 !dbg !9185 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9189, metadata !DIExpression()), !dbg !9190
  ret i8* %0, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9194, metadata !DIExpression()), !dbg !9195
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9196
  ret void, !dbg !9197
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9202, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i32 %1, metadata !9203, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9204, metadata !DIExpression()), !dbg !9208
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9209
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9209
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9209
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9205, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i32 %0, metadata !9207, metadata !DIExpression()), !dbg !9208
  %7 = icmp slt i32 %0, %1, !dbg !9210
  br i1 %7, label %8, label %22, !dbg !9213

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9207, metadata !DIExpression()), !dbg !9208
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9214
  %11 = icmp eq i32 %10, 0, !dbg !9214
  br i1 %11, label %19, label %12, !dbg !9217

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9218
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9220
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9220
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9222
  br i1 %15, label %19, label %16, !dbg !9223

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9224
  %18 = load i8*, i8** %17, align 4, !dbg !9224
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9225
  br label %19, !dbg !9226

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9227
  call void @llvm.dbg.value(metadata i32 %20, metadata !9207, metadata !DIExpression()), !dbg !9208
  %21 = icmp eq i32 %20, %1, !dbg !9210
  br i1 %21, label %22, label %8, !dbg !9213, !llvm.loop !9228

22:                                               ; preds = %19, %3
  ret void, !dbg !9230
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !9231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9233, metadata !DIExpression()), !dbg !9234
  %2 = shl nuw i32 1, %0, !dbg !9235
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9238
  ret i32 %3, !dbg !9239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !9240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9244, metadata !DIExpression()), !dbg !9245
  %2 = shl nuw i32 1, %0, !dbg !9246
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9249
  ret void, !dbg !9250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9254, metadata !DIExpression()), !dbg !9255
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9256
  ret void, !dbg !9257
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9260, metadata !DIExpression()), !dbg !9261
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9262
  %3 = and i32 %2, %0, !dbg !9262
  %4 = icmp eq i32 %3, %0, !dbg !9263
  %5 = zext i1 %4 to i32, !dbg !9263
  ret i32 %5, !dbg !9264
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9267, metadata !DIExpression()), !dbg !9268
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9269
  ret void, !dbg !9270
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9273, metadata !DIExpression()), !dbg !9274
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9275
  ret void, !dbg !9276
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9279, metadata !DIExpression()), !dbg !9280
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9281
  ret void, !dbg !9282
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9285, metadata !DIExpression()), !dbg !9286
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9287
  ret void, !dbg !9288
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9291, metadata !DIExpression()), !dbg !9292
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9293
  ret void, !dbg !9294
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9297, metadata !DIExpression()), !dbg !9298
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9299
  ret void, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9303, metadata !DIExpression()), !dbg !9304
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9305
  ret i32 0, !dbg !9306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !976 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !980, metadata !DIExpression()), !dbg !9307
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9308
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9310
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9312
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9314
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9316
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9318
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9320
  ret void, !dbg !9322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9325, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata i32 0, metadata !9326, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata i32 undef, metadata !9326, metadata !DIExpression()), !dbg !9327
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9328
  %3 = load i32, i32* %2, align 4, !dbg !9328
  call void @llvm.dbg.value(metadata i32 %3, metadata !9326, metadata !DIExpression()), !dbg !9327
  %4 = shl nuw i32 1, %0, !dbg !9329
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9330
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9331
  ret void, !dbg !9332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9335, metadata !DIExpression()), !dbg !9336
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9337
  %3 = or i32 %2, %0, !dbg !9337
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9337
  ret void, !dbg !9338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !9339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9341, metadata !DIExpression()), !dbg !9342
  %2 = icmp slt i32 %0, 32, !dbg !9343
  br i1 %2, label %3, label %5, !dbg !9345

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9346
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9348
  br label %5, !dbg !9349

5:                                                ; preds = %1, %3
  ret void, !dbg !9350
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9353, metadata !DIExpression()), !dbg !9354
  %2 = xor i32 %0, -1, !dbg !9355
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9355
  %4 = and i32 %3, %2, !dbg !9355
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9355
  ret void, !dbg !9356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9361, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata i32 %1, metadata !9362, metadata !DIExpression()), !dbg !9363
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9364

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9365
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9367
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9368
  br label %11, !dbg !9369

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9370
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9371
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9372
  br label %11, !dbg !9373

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9374
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9375
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9376
  br label %11, !dbg !9377

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9378
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9379
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9380
  br label %11, !dbg !9381

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9385, metadata !DIExpression()), !dbg !9386
  %2 = xor i32 %0, -1, !dbg !9387
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9387
  %4 = and i32 %3, %2, !dbg !9387
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9387
  ret void, !dbg !9388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9391, metadata !DIExpression()), !dbg !9392
  %2 = xor i32 %0, -1, !dbg !9393
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9393
  %4 = and i32 %3, %2, !dbg !9393
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9393
  ret void, !dbg !9394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9397, metadata !DIExpression()), !dbg !9398
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9399
  %3 = or i32 %2, %0, !dbg !9399
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9399
  ret void, !dbg !9400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9403, metadata !DIExpression()), !dbg !9404
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9405
  %3 = or i32 %2, %0, !dbg !9405
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9405
  ret void, !dbg !9406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9411, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9412, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i8* %2, metadata !9413, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !9414, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9416, metadata !DIExpression()), !dbg !9417
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9418
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9418
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9420
  br i1 %6, label %7, label %9, !dbg !9421

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9422
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9423
  store i8* %2, i8** %8, align 4, !dbg !9424
  br label %9, !dbg !9425

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9417
  ret i32 %10, !dbg !9426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9429, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !9430, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9431, metadata !DIExpression()), !dbg !9432
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9433
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9434
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9435
  store i8* null, i8** %3, align 4, !dbg !9436
  ret void, !dbg !9437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9438 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9440, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %1, metadata !9441, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %1, metadata !9442, metadata !DIExpression()), !dbg !9445
  %3 = bitcast i8* %1 to i32*, !dbg !9446
  %4 = load i32, i32* %3, align 4, !dbg !9446
  %5 = add i32 %4, -37, !dbg !9446
  %6 = icmp ult i32 %5, -9, !dbg !9446
  br i1 %6, label %15, label %7, !dbg !9448

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9449
  %9 = inttoptr i32 %8 to i32*, !dbg !9450
  call void @llvm.dbg.value(metadata i32* %9, metadata !9443, metadata !DIExpression()), !dbg !9445
  %10 = load volatile i32, i32* %9, align 4, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %10, metadata !9444, metadata !DIExpression()), !dbg !9445
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9452
  %12 = bitcast i8* %11 to i32*, !dbg !9452
  %13 = load i32, i32* %12, align 4, !dbg !9452
  %14 = or i32 %13, %10, !dbg !9453
  call void @llvm.dbg.value(metadata i32 %14, metadata !9444, metadata !DIExpression()), !dbg !9445
  store volatile i32 %14, i32* %9, align 4, !dbg !9454
  br label %15, !dbg !9455

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9445
  ret i32 %16, !dbg !9456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9457 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9459, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata i8* %1, metadata !9460, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata i8* %1, metadata !9461, metadata !DIExpression()), !dbg !9464
  %3 = bitcast i8* %1 to i32*, !dbg !9465
  %4 = load i32, i32* %3, align 4, !dbg !9465
  %5 = add i32 %4, -37, !dbg !9465
  %6 = icmp ult i32 %5, -9, !dbg !9465
  br i1 %6, label %16, label %7, !dbg !9467

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9468
  %9 = inttoptr i32 %8 to i32*, !dbg !9469
  call void @llvm.dbg.value(metadata i32* %9, metadata !9462, metadata !DIExpression()), !dbg !9464
  %10 = load volatile i32, i32* %9, align 4, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %10, metadata !9463, metadata !DIExpression()), !dbg !9464
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9471
  %12 = bitcast i8* %11 to i32*, !dbg !9471
  %13 = load i32, i32* %12, align 4, !dbg !9471
  %14 = xor i32 %13, -1, !dbg !9472
  %15 = and i32 %10, %14, !dbg !9473
  call void @llvm.dbg.value(metadata i32 %15, metadata !9463, metadata !DIExpression()), !dbg !9464
  store volatile i32 %15, i32* %9, align 4, !dbg !9474
  br label %16, !dbg !9475

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9464
  ret i32 %17, !dbg !9476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #9 !dbg !9477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9479, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i8* %1, metadata !9480, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i32* %2, metadata !9481, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i8* %1, metadata !9482, metadata !DIExpression()), !dbg !9486
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %4, metadata !9483, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i32 %4, metadata !9484, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i32 %4, metadata !9485, metadata !DIExpression()), !dbg !9486
  %5 = bitcast i8* %1 to i32*, !dbg !9488
  %6 = load i32, i32* %5, align 4, !dbg !9488
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !9489

7:                                                ; preds = %3
  br label %10, !dbg !9490

8:                                                ; preds = %3
  br label %10, !dbg !9492

9:                                                ; preds = %3
  br label %10, !dbg !9493

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !9494
  br label %12, !dbg !9495

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !9486
  ret i32 %13, !dbg !9495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9498, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i8* %1, metadata !9499, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i8* %2, metadata !9500, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i8* %1, metadata !9501, metadata !DIExpression()), !dbg !9506
  %4 = bitcast i8* %1 to i32*, !dbg !9507
  %5 = load i32, i32* %4, align 4, !dbg !9507
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %6, metadata !9505, metadata !DIExpression()), !dbg !9506
  %7 = icmp slt i32 %6, 0, !dbg !9509
  br i1 %7, label %22, label %8, !dbg !9511

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9501, metadata !DIExpression()), !dbg !9506
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9512
  %10 = bitcast i8* %9 to i32*, !dbg !9512
  %11 = load i32, i32* %10, align 4, !dbg !9512
  %12 = lshr i32 %11, 16, !dbg !9512
  %13 = and i32 %12, 7, !dbg !9512
  %14 = lshr i32 %11, 8, !dbg !9513
  %15 = and i32 %14, 31, !dbg !9513
  %16 = shl i32 %13, %15, !dbg !9514
  call void @llvm.dbg.value(metadata i32 %16, metadata !9504, metadata !DIExpression()), !dbg !9506
  %17 = and i32 %11, 255, !dbg !9515
  %18 = or i32 %17, 1073887232, !dbg !9516
  %19 = inttoptr i32 %18 to i32*, !dbg !9517
  call void @llvm.dbg.value(metadata i32* %19, metadata !9502, metadata !DIExpression()), !dbg !9506
  %20 = load volatile i32, i32* %19, align 4, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %20, metadata !9503, metadata !DIExpression()), !dbg !9506
  %21 = or i32 %16, %20, !dbg !9519
  call void @llvm.dbg.value(metadata i32 %21, metadata !9503, metadata !DIExpression()), !dbg !9506
  store volatile i32 %21, i32* %19, align 4, !dbg !9520
  br label %22, !dbg !9521

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9506
  ret i32 %23, !dbg !9522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #2 !dbg !9523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9527, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 0, metadata !9528, metadata !DIExpression()), !dbg !9529
  %2 = add i32 %0, -1, !dbg !9530
  %3 = icmp ult i32 %2, 4, !dbg !9530
  br i1 %3, label %4, label %7, !dbg !9530

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9530
  %6 = load i32, i32* %5, align 4, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %6, metadata !9528, metadata !DIExpression()), !dbg !9529
  br label %7, !dbg !9531

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9529
  ret i32 %8, !dbg !9532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9533 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9535, metadata !DIExpression()), !dbg !9538
  tail call void @config_enable_default_clocks() #25, !dbg !9539
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9540
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9540
  %4 = lshr i32 %3, 4, !dbg !9540
  %5 = and i32 %4, 15, !dbg !9540
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9540
  %7 = load i8, i8* %6, align 1, !dbg !9540
  %8 = zext i8 %7 to i32, !dbg !9540
  %9 = lshr i32 %2, %8, !dbg !9540
  call void @llvm.dbg.value(metadata i32 %9, metadata !9536, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !9537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9538
  %10 = icmp ult i32 %9, 32000000, !dbg !9541
  br i1 %10, label %11, label %13, !dbg !9543

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !9544
  br label %13, !dbg !9546

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9547
  tail call fastcc void @set_up_plls() #24, !dbg !9548
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9549
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #24, !dbg !9552
  br label %14, !dbg !9553

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9554
  %16 = icmp eq i32 %15, 12, !dbg !9555
  br i1 %16, label %17, label %14, !dbg !9553, !llvm.loop !9556

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !9558
  br i1 %18, label %19, label %21, !dbg !9560

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !9561
  br label %21, !dbg !9563

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !9564
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9565
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9566
  ret i32 0, !dbg !9567
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !9568 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9570
  %2 = and i32 %1, 240, !dbg !9570
  ret i32 %2, !dbg !9571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !9572 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9573
  %2 = icmp eq i32 %1, 1, !dbg !9577
  br i1 %2, label %7, label %3, !dbg !9578

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9579
  br label %4, !dbg !9581

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9582
  %6 = icmp eq i32 %5, 1, !dbg !9583
  br i1 %6, label %7, label %4, !dbg !9581, !llvm.loop !9584

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9586
  br label %8, !dbg !9589

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9590
  %10 = icmp eq i32 %9, 1, !dbg !9591
  br i1 %10, label %11, label %8, !dbg !9589, !llvm.loop !9592

11:                                               ; preds = %8
  ret void, !dbg !9594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9595 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9596
  %2 = icmp eq i32 %1, 12, !dbg !9598
  br i1 %2, label %3, label %4, !dbg !9599

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9600
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9602
  br label %4, !dbg !9603

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9604
  tail call void @config_pll_sysclock() #25, !dbg !9605
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9606
  br label %5, !dbg !9607

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9608
  %7 = icmp eq i32 %6, 1, !dbg !9609
  br i1 %7, label %8, label %5, !dbg !9607, !llvm.loop !9610

8:                                                ; preds = %5
  ret void, !dbg !9612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !9613 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9615, metadata !DIExpression()), !dbg !9616
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9617
  %2 = and i32 %1, -241, !dbg !9617
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9617
  ret void, !dbg !9618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !9619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9621, metadata !DIExpression()), !dbg !9622
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9623
  %3 = and i32 %2, -4, !dbg !9623
  %4 = or i32 %3, %0, !dbg !9623
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9623
  ret void, !dbg !9624
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !9625 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9626
  %2 = and i32 %1, 12, !dbg !9626
  ret i32 %2, !dbg !9627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !9628 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9630, metadata !DIExpression()), !dbg !9631
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9632
  %2 = and i32 %1, -1793, !dbg !9632
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9632
  ret void, !dbg !9633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !9634 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9636, metadata !DIExpression()), !dbg !9637
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9638
  %2 = and i32 %1, -14337, !dbg !9638
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9638
  ret void, !dbg !9639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !9640 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9641
  %2 = icmp eq i32 %1, 1, !dbg !9643
  br i1 %2, label %7, label %3, !dbg !9644

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9645
  br label %4, !dbg !9647

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9648
  %6 = icmp eq i32 %5, 1, !dbg !9649
  br i1 %6, label %7, label %4, !dbg !9647, !llvm.loop !9650

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #24, !dbg !9652
  br label %8, !dbg !9653

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9654
  %10 = icmp eq i32 %9, 4, !dbg !9655
  br i1 %10, label %11, label %8, !dbg !9653, !llvm.loop !9656

11:                                               ; preds = %8
  ret void, !dbg !9658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !9659 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9660
  %2 = and i32 %1, -16777217, !dbg !9660
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9660
  ret void, !dbg !9661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !9662 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9663
  %2 = or i32 %1, 16777216, !dbg !9663
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9663
  ret void, !dbg !9664
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !9665 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9666
  %2 = lshr i32 %1, 25, !dbg !9667
  %3 = and i32 %2, 1, !dbg !9667
  ret i32 %3, !dbg !9668
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !9669 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9670
  %2 = lshr i32 %1, 1, !dbg !9671
  %3 = and i32 %2, 1, !dbg !9671
  ret i32 %3, !dbg !9672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !9673 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9674
  %2 = or i32 %1, 1, !dbg !9674
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9674
  ret void, !dbg !9675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !9676 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9677
  %2 = or i32 %1, 1, !dbg !9677
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9677
  ret void, !dbg !9678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !9679 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9680
  %2 = lshr i32 %1, 1, !dbg !9681
  %3 = and i32 %2, 1, !dbg !9681
  ret i32 %3, !dbg !9682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #2 !dbg !9683 {
  ret i32 16000000, !dbg !9685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !9688 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9689
  ret void, !dbg !9690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !9691 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9695, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 262144, metadata !9696, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9697, metadata !DIExpression()), !dbg !9698
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9699
  %2 = and i32 %1, -16580609, !dbg !9699
  %3 = or i32 %2, 4456448, !dbg !9699
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9699
  ret void, !dbg !9700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #2 !dbg !9701 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !9702
  %2 = zext i8 %1 to i32, !dbg !9702
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !9702
  ret i32 %3, !dbg !9703
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #14 !dbg !9704 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #24, !dbg !9705
  ret void, !dbg !9706
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #14 !dbg !9707 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !9709, metadata !DIExpression()), !dbg !9711
  %2 = bitcast i32* %1 to i8*, !dbg !9712
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9712
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9710, metadata !DIExpression()), !dbg !9713
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9714
  %4 = or i32 %3, 1, !dbg !9714
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9714
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9715
  %6 = and i32 %5, 1, !dbg !9715
  store volatile i32 %6, i32* %1, align 4, !dbg !9716
  %7 = load volatile i32, i32* %1, align 4, !dbg !9717
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9718
  ret void, !dbg !9718
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9721, metadata !DIExpression()), !dbg !9722
  %2 = tail call fastcc zeroext i1 @device_is_ready.150() #24, !dbg !9723
  br i1 %2, label %3, label %4, !dbg !9725

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9726
  br label %4, !dbg !9727

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9722
  ret i32 %5, !dbg !9728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.150() unnamed_addr #1 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9733, metadata !DIExpression()), !dbg !9734
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9735, !srcloc !9737
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.151() #24, !dbg !9738
  ret i1 %1, !dbg !9739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9740 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9741
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9742
  ret void, !dbg !9743
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9746, metadata !DIExpression()), !dbg !9747
  %2 = icmp eq i32 %0, 10, !dbg !9748
  br i1 %2, label %3, label %4, !dbg !9750

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9751
  br label %4, !dbg !9753

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9754
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9755
  ret i32 %0, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9757 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9760, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i8 %0, metadata !9761, metadata !DIExpression()), !dbg !9762
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9763, !srcloc !9765
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9770, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i8 %0, metadata !9771, metadata !DIExpression()), !dbg !9773
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9774
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9772, metadata !DIExpression()), !dbg !9773
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9775
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9775
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #25, !dbg !9776
  ret void, !dbg !9777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.151() unnamed_addr #1 !dbg !9778 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9780, metadata !DIExpression()), !dbg !9781
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9782
  ret i1 %1, !dbg !9783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !9784 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9833, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9834, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9835, metadata !DIExpression()), !dbg !9836
  ret void, !dbg !9837
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9838 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9840, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i8 %1, metadata !9841, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i32 %2, metadata !9842, metadata !DIExpression()), !dbg !9845
  %5 = bitcast i32* %4 to i8*, !dbg !9846
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9846
  call void @llvm.dbg.value(metadata i32* %4, metadata !9844, metadata !DIExpression(DW_OP_deref)), !dbg !9845
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %6, metadata !9843, metadata !DIExpression()), !dbg !9845
  %7 = icmp eq i32 %6, 0, !dbg !9848
  br i1 %7, label %8, label %31, !dbg !9850

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9843, metadata !DIExpression()), !dbg !9845
  %9 = and i32 %2, 131072, !dbg !9851
  %10 = icmp eq i32 %9, 0, !dbg !9853
  br i1 %10, label %28, label %11, !dbg !9854

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9855
  %13 = icmp eq i32 %12, 0, !dbg !9858
  br i1 %13, label %18, label %14, !dbg !9859

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9860
  %16 = shl nuw i32 1, %15, !dbg !9860
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9862
  br label %25, !dbg !9863

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9864
  %20 = icmp eq i32 %19, 0, !dbg !9866
  %21 = zext i8 %1 to i32, !dbg !9845
  br i1 %20, label %25, label %22, !dbg !9867

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9868
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9870
  br label %25, !dbg !9871

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9872
  %27 = load i32, i32* %4, align 4, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %30, metadata !9844, metadata !DIExpression()), !dbg !9845
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9874
  br label %31, !dbg !9875

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9872
  %30 = load i32, i32* %4, align 4, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %30, metadata !9844, metadata !DIExpression()), !dbg !9845
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9874
  call void @llvm.dbg.value(metadata i32 0, metadata !9843, metadata !DIExpression()), !dbg !9845
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9876
  ret i32 %6, !dbg !9876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9881, metadata !DIExpression()), !dbg !9886
  call void @llvm.dbg.value(metadata i32* %1, metadata !9882, metadata !DIExpression()), !dbg !9886
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9887
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9887
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9887
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9883, metadata !DIExpression()), !dbg !9886
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9888
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9888
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9888
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9885, metadata !DIExpression()), !dbg !9886
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9889
  store i32 %9, i32* %1, align 4, !dbg !9890
  ret i32 0, !dbg !9891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9894, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i32 %1, metadata !9895, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i32 %2, metadata !9896, metadata !DIExpression()), !dbg !9900
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9901
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9901
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9901
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9897, metadata !DIExpression()), !dbg !9900
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9902
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9902
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9902
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9898, metadata !DIExpression()), !dbg !9900
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %10, metadata !9899, metadata !DIExpression()), !dbg !9900
  %11 = xor i32 %1, -1, !dbg !9904
  %12 = and i32 %10, %11, !dbg !9905
  %13 = and i32 %2, %1, !dbg !9906
  %14 = or i32 %12, %13, !dbg !9907
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9908
  ret i32 0, !dbg !9909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9912, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata i32 %1, metadata !9913, metadata !DIExpression()), !dbg !9916
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9917
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9917
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9917
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9914, metadata !DIExpression()), !dbg !9916
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9918
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9918
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9918
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9915, metadata !DIExpression()), !dbg !9916
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9919
  store volatile i32 %1, i32* %9, align 4, !dbg !9919
  ret i32 0, !dbg !9920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9921 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9923, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 %1, metadata !9924, metadata !DIExpression()), !dbg !9927
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9928
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9928
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9928
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9925, metadata !DIExpression()), !dbg !9927
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9929
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9929
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9929
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9926, metadata !DIExpression()), !dbg !9927
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9930
  ret i32 0, !dbg !9931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9932 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9934, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i32 %1, metadata !9935, metadata !DIExpression()), !dbg !9938
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9939
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9939
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9939
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9936, metadata !DIExpression()), !dbg !9938
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9940
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9940
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9940
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9937, metadata !DIExpression()), !dbg !9938
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9941
  %10 = load volatile i32, i32* %9, align 4, !dbg !9941
  %11 = xor i32 %10, %1, !dbg !9941
  store volatile i32 %11, i32* %9, align 4, !dbg !9941
  ret i32 0, !dbg !9942
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9943 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9945, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8 %1, metadata !9946, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 %2, metadata !9947, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 %3, metadata !9948, metadata !DIExpression()), !dbg !9955
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9956
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9956
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9956
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9949, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8* undef, metadata !9950, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 0, metadata !9952, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 0, metadata !9953, metadata !DIExpression()), !dbg !9955
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9957

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9958
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9962
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9963
  %12 = load i32, i32* %11, align 4, !dbg !9963
  %13 = icmp eq i32 %10, %12, !dbg !9964
  br i1 %13, label %14, label %29, !dbg !9965

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9966
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9968
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9969
  br label %29, !dbg !9970

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9971
  %17 = load i8*, i8** %16, align 4, !dbg !9971
  call void @llvm.dbg.value(metadata i8* %17, metadata !9950, metadata !DIExpression()), !dbg !9955
  %18 = zext i8 %1 to i32, !dbg !9972
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9974
  %20 = icmp eq i32 %19, 0, !dbg !9975
  br i1 %20, label %21, label %29, !dbg !9976

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9977
  %23 = load i32, i32* %22, align 4, !dbg !9977
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9978
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9979

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9952, metadata !DIExpression()), !dbg !9955
  br label %27, !dbg !9980

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9952, metadata !DIExpression()), !dbg !9955
  br label %27, !dbg !9982

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9952, metadata !DIExpression()), !dbg !9955
  br label %27, !dbg !9983

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9955
  call void @llvm.dbg.value(metadata i32 %28, metadata !9952, metadata !DIExpression()), !dbg !9955
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9984
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9985
  br label %29, !dbg !9985

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9955
  call void @llvm.dbg.value(metadata i32 %30, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.label(metadata !9954), !dbg !9986
  ret i32 %30, !dbg !9987
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9990, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9991, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i1 %2, metadata !9992, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9994
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9995
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9995
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9995
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9993, metadata !DIExpression()), !dbg !9994
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9996
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9997
  ret i32 %8, !dbg !9998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10005, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10006, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata i1 %2, metadata !10007, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10008
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10009
  br i1 %4, label %5, label %6, !dbg !10012

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 42) #25, !dbg !10013
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.158, i32 0, i32 0)) #25, !dbg !10013
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 42) #25, !dbg !10013
  unreachable, !dbg !10013

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10015
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10015
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10015
  br i1 %9, label %10, label %11, !dbg !10018

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 43) #25, !dbg !10019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.160, i32 0, i32 0)) #25, !dbg !10019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 43) #25, !dbg !10019
  unreachable, !dbg !10019

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10021
  br i1 %12, label %18, label %13, !dbg !10023

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10024
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10027
  %16 = or i1 %15, %2, !dbg !10028
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10028
  br i1 %2, label %19, label %21, !dbg !10028

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10029

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10030
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10033
  br label %21, !dbg !10034

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10008
  ret i32 %22, !dbg !10035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10036 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10040, metadata !DIExpression()), !dbg !10041
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10042
  %3 = icmp eq %struct._snode* %2, null, !dbg !10042
  ret i1 %3, !dbg !10042
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10043 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10047, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10048, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10049, metadata !DIExpression()), !dbg !10051
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10052
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10050, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10049, metadata !DIExpression()), !dbg !10051
  %4 = icmp eq %struct._snode* %3, null, !dbg !10054
  br i1 %4, label %15, label %5, !dbg !10052

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10050, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10049, metadata !DIExpression()), !dbg !10051
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10056
  br i1 %6, label %9, label %11, !dbg !10059

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10050, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10049, metadata !DIExpression()), !dbg !10051
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10056
  br i1 %8, label %9, label %11, !dbg !10059, !llvm.loop !10060

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10061
  br label %15, !dbg !10061

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10050, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10049, metadata !DIExpression()), !dbg !10051
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10054
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10050, metadata !DIExpression()), !dbg !10051
  %14 = icmp eq %struct._snode* %13, null, !dbg !10054
  br i1 %14, label %15, label %7, !dbg !10052, !llvm.loop !10060

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10068, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10069, metadata !DIExpression()), !dbg !10070
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10071
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10071
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10071
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10072
  %5 = icmp eq %struct._snode* %4, null, !dbg !10072
  br i1 %5, label %6, label %8, !dbg !10071

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10074
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10074
  br label %8, !dbg !10074

8:                                                ; preds = %6, %2
  ret void, !dbg !10071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10076 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10080, metadata !DIExpression()), !dbg !10081
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10082
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10082
  ret %struct._snode* %3, !dbg !10083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10084 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10088, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10089, metadata !DIExpression()), !dbg !10090
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10091
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10092
  ret void, !dbg !10093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10094 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10096, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10097, metadata !DIExpression()), !dbg !10098
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10099
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10100
  ret void, !dbg !10101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10104, metadata !DIExpression()), !dbg !10105
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10106
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10106
  ret %struct._snode* %3, !dbg !10107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10108 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10110, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10111, metadata !DIExpression()), !dbg !10112
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10113
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10114
  ret void, !dbg !10115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10120, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10121, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10122, metadata !DIExpression()), !dbg !10123
  %4 = icmp eq %struct._snode* %1, null, !dbg !10124
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10126
  br i1 %4, label %6, label %11, !dbg !10127

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10128
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10130
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10130
  br i1 %8, label %9, label %15, !dbg !10128

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10132
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10132
  br label %15, !dbg !10132

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10134
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10136
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10136
  br i1 %13, label %14, label %15, !dbg !10134

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10138
  br label %15, !dbg !10138

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10127
  ret void, !dbg !10127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10140 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10144, metadata !DIExpression()), !dbg !10145
  %2 = icmp eq %struct._snode* %0, null, !dbg !10146
  br i1 %2, label %5, label %3, !dbg !10146

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10146
  br label %5, !dbg !10146

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10146
  ret %struct._snode* %6, !dbg !10146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10147 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10149, metadata !DIExpression()), !dbg !10150
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10151
  ret %struct._snode* %2, !dbg !10151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10152 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10156
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10156
  ret %struct._snode* %3, !dbg !10157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10160, metadata !DIExpression()), !dbg !10163
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10164, !range !10165
  call void @llvm.dbg.value(metadata i32 %2, metadata !10161, metadata !DIExpression()), !dbg !10163
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10166
  call void @llvm.dbg.value(metadata i32 %3, metadata !10162, metadata !DIExpression()), !dbg !10163
  ret i32 %3, !dbg !10167
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10170, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.value(metadata i8* %1, metadata !10171, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.value(metadata i8* %1, metadata !10172, metadata !DIExpression()), !dbg !10173
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10174
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10174
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10175
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10175
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10175
  %8 = shl nuw i32 1, %0, !dbg !10176
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10177
  ret void, !dbg !10178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10179 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10183, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i32 %1, metadata !10184, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10185, metadata !DIExpression()), !dbg !10189
  %4 = bitcast i64* %3 to i8*, !dbg !10190
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10190
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !10187, metadata !DIExpression()), !dbg !10189
  store i64 4294967328, i64* %3, align 8, !dbg !10191
  call void @llvm.dbg.value(metadata i64* %3, metadata !10187, metadata !DIExpression(DW_OP_deref)), !dbg !10189
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10192
  call void @llvm.dbg.value(metadata i32 %5, metadata !10188, metadata !DIExpression()), !dbg !10189
  %6 = icmp eq i32 %5, 0, !dbg !10193
  br i1 %6, label %7, label %8, !dbg !10195

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10196
  br label %8, !dbg !10197

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10198
  ret void, !dbg !10198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10199 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10201, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.value(metadata i8* %0, metadata !10202, metadata !DIExpression()), !dbg !10204
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10205
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10203, metadata !DIExpression()), !dbg !10204
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10206
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10206
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10207
  ret i32 %5, !dbg !10208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10211, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata i32 %1, metadata !10212, metadata !DIExpression()), !dbg !10214
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10215
  call void @llvm.dbg.value(metadata i32 %3, metadata !10213, metadata !DIExpression()), !dbg !10214
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10216
  ret void, !dbg !10217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #2 !dbg !10218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10222, metadata !DIExpression()), !dbg !10223
  %2 = sdiv i32 %0, 4, !dbg !10224
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10225
  %6 = add nsw i32 %5, 16, !dbg !10226
  %7 = shl i32 15, %6, !dbg !10227
  %8 = or i32 %7, %2, !dbg !10228
  ret i32 %8, !dbg !10229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10235, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata i32 %1, metadata !10236, metadata !DIExpression()), !dbg !10237
  %3 = and i32 %1, 3, !dbg !10238
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !10238
  %5 = load volatile i32, i32* %4, align 4, !dbg !10238
  %6 = lshr i32 %1, 16, !dbg !10238
  %7 = xor i32 %6, -1, !dbg !10238
  %8 = and i32 %5, %7, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %6, metadata !10239, metadata !DIExpression()) #23, !dbg !10243
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10245, !srcloc !10246
  call void @llvm.dbg.value(metadata i32 %9, metadata !10242, metadata !DIExpression()) #23, !dbg !10243
  call void @llvm.dbg.value(metadata i32 %9, metadata !10247, metadata !DIExpression()) #23, !dbg !10252
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10254, !range !7376
  %11 = shl i32 %0, %10, !dbg !10238
  %12 = or i32 %11, %8, !dbg !10238
  store volatile i32 %12, i32* %4, align 4, !dbg !10238
  ret void, !dbg !10255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10256 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10260, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10261, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i32 %2, metadata !10262, metadata !DIExpression()), !dbg !10265
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10266
  %5 = icmp eq %struct._snode* %4, null, !dbg !10266
  br i1 %5, label %24, label %6, !dbg !10266

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10268
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10264, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10263, metadata !DIExpression()), !dbg !10265
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10269
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10269
  %12 = load i32, i32* %11, align 4, !dbg !10269
  %13 = and i32 %12, %2, !dbg !10273
  %14 = icmp eq i32 %13, 0, !dbg !10273
  br i1 %14, label %22, label %15, !dbg !10274

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10275
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10275
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10275
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10275
  br i1 %19, label %20, label %21, !dbg !10279

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 77) #25, !dbg !10280
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.160, i32 0, i32 0)) #25, !dbg !10280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 77) #25, !dbg !10280
  unreachable, !dbg !10280

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10282
  br label %22, !dbg !10283

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10263, metadata !DIExpression()), !dbg !10265
  %23 = icmp eq %struct._snode* %8, null, !dbg !10284
  br i1 %23, label %24, label %6, !dbg !10284

24:                                               ; preds = %22, %3
  ret void, !dbg !10285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10288, metadata !DIExpression()), !dbg !10289
  %2 = and i32 %0, 3, !dbg !10290
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !10290
  %4 = load volatile i32, i32* %3, align 4, !dbg !10290
  %5 = lshr i32 %0, 16, !dbg !10290
  %6 = and i32 %4, %5, !dbg !10290
  call void @llvm.dbg.value(metadata i32 %5, metadata !10239, metadata !DIExpression()) #23, !dbg !10291
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10293, !srcloc !10246
  call void @llvm.dbg.value(metadata i32 %7, metadata !10242, metadata !DIExpression()) #23, !dbg !10291
  call void @llvm.dbg.value(metadata i32 %7, metadata !10247, metadata !DIExpression()) #23, !dbg !10294
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10296, !range !7376
  %9 = lshr i32 %6, %8, !dbg !10297
  ret i32 %9, !dbg !10298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10299 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10304, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 %1, metadata !10305, metadata !DIExpression()), !dbg !10306
  %3 = shl i32 %1, 16, !dbg !10307
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10307
  store volatile i32 %3, i32* %4, align 4, !dbg !10307
  ret void, !dbg !10308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10309 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10313, metadata !DIExpression()), !dbg !10314
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10315
  %3 = load volatile i32, i32* %2, align 4, !dbg !10315
  ret i32 %3, !dbg !10316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10317 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10319, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.value(metadata i32 %1, metadata !10320, metadata !DIExpression()), !dbg !10321
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10322
  store volatile i32 %1, i32* %3, align 4, !dbg !10322
  ret void, !dbg !10323
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10324 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10326, metadata !DIExpression()), !dbg !10327
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10328
  %3 = load volatile i32, i32* %2, align 4, !dbg !10328
  ret i32 %3, !dbg !10329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10334, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.value(metadata i32* %1, metadata !10335, metadata !DIExpression()), !dbg !10336
  %3 = and i32 %0, 131072, !dbg !10337
  %4 = icmp eq i32 %3, 0, !dbg !10339
  br i1 %4, label %22, label %5, !dbg !10340

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10341
  %6 = and i32 %0, 2, !dbg !10343
  %7 = icmp eq i32 %6, 0, !dbg !10345
  br i1 %7, label %11, label %8, !dbg !10346

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10347
  %10 = icmp eq i32 %9, 0, !dbg !10347
  br i1 %10, label %33, label %11, !dbg !10350

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10351
  store i32 %12, i32* %1, align 4, !dbg !10351
  %13 = and i32 %0, 16, !dbg !10352
  %14 = icmp eq i32 %13, 0, !dbg !10354
  br i1 %14, label %17, label %15, !dbg !10355

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10356
  br label %31, !dbg !10358

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10359
  %19 = icmp eq i32 %18, 0, !dbg !10361
  br i1 %19, label %33, label %20, !dbg !10362

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10363
  br label %31, !dbg !10365

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10366
  %24 = icmp eq i32 %23, 0, !dbg !10368
  br i1 %24, label %31, label %25, !dbg !10369

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10370
  %27 = icmp eq i32 %26, 0, !dbg !10373
  br i1 %27, label %28, label %31, !dbg !10374

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10375
  br label %33, !dbg !10376

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10336
  ret i32 %34, !dbg !10376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10381, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %1, metadata !10382, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %2, metadata !10383, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %3, metadata !10384, metadata !DIExpression()), !dbg !10392
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10393
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10393
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10393
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10385, metadata !DIExpression()), !dbg !10392
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10394
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10394
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10394
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10386, metadata !DIExpression()), !dbg !10392
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10395
  call void @llvm.dbg.value(metadata i32 %11, metadata !10387, metadata !DIExpression()), !dbg !10392
  %12 = and i32 %2, 48, !dbg !10396
  call void @llvm.dbg.value(metadata i32 %12, metadata !10388, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %2, metadata !10389, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %2, metadata !10390, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %2, metadata !10391, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10392
  %13 = lshr i32 %2, 6, !dbg !10397
  %14 = and i32 %13, 1, !dbg !10397
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10398
  %15 = lshr i32 %2, 7, !dbg !10399
  %16 = and i32 %15, 3, !dbg !10399
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10400
  %17 = lshr i32 %2, 9, !dbg !10401
  %18 = and i32 %17, 3, !dbg !10401
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10402
  %19 = icmp eq i32 %12, 32, !dbg !10403
  br i1 %19, label %20, label %24, !dbg !10405

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10406
  br i1 %21, label %22, label %23, !dbg !10409

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10410
  br label %24, !dbg !10412

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10413
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10415
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10416
  ret void, !dbg !10417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #2 !dbg !10418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10420, metadata !DIExpression()), !dbg !10422
  %2 = shl nuw i32 1, %0, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %2, metadata !10421, metadata !DIExpression()), !dbg !10422
  ret i32 %2, !dbg !10424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10425 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10429, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 %1, metadata !10430, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 %2, metadata !10431, metadata !DIExpression()), !dbg !10432
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10433
  %5 = load volatile i32, i32* %4, align 4, !dbg !10433
  %6 = xor i32 %1, -1, !dbg !10433
  %7 = and i32 %5, %6, !dbg !10433
  %8 = mul i32 %2, %1, !dbg !10433
  %9 = or i32 %7, %8, !dbg !10433
  store volatile i32 %9, i32* %4, align 4, !dbg !10433
  ret void, !dbg !10434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10435 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10437, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i32 %1, metadata !10438, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i32 %2, metadata !10439, metadata !DIExpression()), !dbg !10440
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10441
  %5 = load volatile i32, i32* %4, align 4, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()) #23, !dbg !10442
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10444, !srcloc !10246
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10442
  call void @llvm.dbg.value(metadata i32 %6, metadata !10247, metadata !DIExpression()) #23, !dbg !10445
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10447, !range !7376
  %8 = shl nuw nsw i32 %7, 1, !dbg !10441
  %9 = shl i32 3, %8, !dbg !10441
  %10 = xor i32 %9, -1, !dbg !10441
  %11 = and i32 %5, %10, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()) #23, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %6, metadata !10247, metadata !DIExpression()) #23, !dbg !10450
  %12 = shl i32 %2, %8, !dbg !10441
  %13 = or i32 %11, %12, !dbg !10441
  store volatile i32 %13, i32* %4, align 4, !dbg !10441
  ret void, !dbg !10452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10453 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10455, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i32 %1, metadata !10456, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i32 %2, metadata !10457, metadata !DIExpression()), !dbg !10458
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10459
  %5 = load volatile i32, i32* %4, align 4, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()) #23, !dbg !10460
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10462, !srcloc !10246
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %6, metadata !10247, metadata !DIExpression()) #23, !dbg !10463
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10465, !range !7376
  %8 = shl nuw nsw i32 %7, 1, !dbg !10459
  %9 = shl i32 3, %8, !dbg !10459
  %10 = xor i32 %9, -1, !dbg !10459
  %11 = and i32 %5, %10, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()) #23, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %6, metadata !10247, metadata !DIExpression()) #23, !dbg !10468
  %12 = shl i32 %2, %8, !dbg !10459
  %13 = or i32 %11, %12, !dbg !10459
  store volatile i32 %13, i32* %4, align 4, !dbg !10459
  ret void, !dbg !10470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10471 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10473, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 %1, metadata !10474, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 %2, metadata !10475, metadata !DIExpression()), !dbg !10476
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10477
  %5 = load volatile i32, i32* %4, align 4, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()) #23, !dbg !10478
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10480, !srcloc !10246
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %6, metadata !10247, metadata !DIExpression()) #23, !dbg !10481
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10483, !range !7376
  %8 = shl nuw nsw i32 %7, 2, !dbg !10477
  %9 = shl i32 15, %8, !dbg !10477
  %10 = xor i32 %9, -1, !dbg !10477
  %11 = and i32 %5, %10, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()) #23, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %6, metadata !10247, metadata !DIExpression()) #23, !dbg !10486
  %12 = shl i32 %2, %8, !dbg !10477
  %13 = or i32 %11, %12, !dbg !10477
  store volatile i32 %13, i32* %4, align 4, !dbg !10477
  ret void, !dbg !10488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10489 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10491, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i32 %1, metadata !10492, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i32 %2, metadata !10493, metadata !DIExpression()), !dbg !10494
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10495
  %5 = load volatile i32, i32* %4, align 4, !dbg !10495
  %6 = lshr i32 %1, 8, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %6, metadata !10239, metadata !DIExpression()) #23, !dbg !10496
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10498, !srcloc !10246
  call void @llvm.dbg.value(metadata i32 %7, metadata !10242, metadata !DIExpression()) #23, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %7, metadata !10247, metadata !DIExpression()) #23, !dbg !10499
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10501, !range !7376
  %9 = shl nuw nsw i32 %8, 2, !dbg !10495
  %10 = shl i32 15, %9, !dbg !10495
  %11 = xor i32 %10, -1, !dbg !10495
  %12 = and i32 %5, %11, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %6, metadata !10239, metadata !DIExpression()) #23, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %7, metadata !10242, metadata !DIExpression()) #23, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %7, metadata !10247, metadata !DIExpression()) #23, !dbg !10504
  %13 = shl i32 %2, %9, !dbg !10495
  %14 = or i32 %12, %13, !dbg !10495
  store volatile i32 %14, i32* %4, align 4, !dbg !10495
  ret void, !dbg !10506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10507 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10509, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 %1, metadata !10510, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 %2, metadata !10511, metadata !DIExpression()), !dbg !10512
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10513
  %5 = load volatile i32, i32* %4, align 4, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()) #23, !dbg !10514
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10516, !srcloc !10246
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %6, metadata !10247, metadata !DIExpression()) #23, !dbg !10517
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10519, !range !7376
  %8 = shl nuw nsw i32 %7, 1, !dbg !10513
  %9 = shl i32 3, %8, !dbg !10513
  %10 = xor i32 %9, -1, !dbg !10513
  %11 = and i32 %5, %10, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()) #23, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %6, metadata !10247, metadata !DIExpression()) #23, !dbg !10522
  %12 = shl i32 %2, %8, !dbg !10513
  %13 = or i32 %11, %12, !dbg !10513
  store volatile i32 %13, i32* %4, align 4, !dbg !10513
  ret void, !dbg !10524
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10525 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10527, metadata !DIExpression()), !dbg !10530
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10531
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10531
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10531
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10528, metadata !DIExpression()), !dbg !10530
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10532
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10533
  %6 = tail call fastcc zeroext i1 @device_is_ready.170() #24, !dbg !10534
  br i1 %6, label %7, label %11, !dbg !10536

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %8, metadata !10529, metadata !DIExpression()), !dbg !10530
  %9 = icmp slt i32 %8, 0, !dbg !10538
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10540
  br label %11, !dbg !10540

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10530
  ret i32 %12, !dbg !10541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.170() unnamed_addr #1 !dbg !10542 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10546, metadata !DIExpression()), !dbg !10547
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10548, !srcloc !10550
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.171() #24, !dbg !10551
  ret i1 %1, !dbg !10552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10553 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10557, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i8 1, metadata !10558, metadata !DIExpression()), !dbg !10562
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10563
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10563
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10563
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10559, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10560, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10561, metadata !DIExpression()), !dbg !10562
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10564
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10567
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10568
  call void @llvm.dbg.value(metadata i32 %7, metadata !10560, metadata !DIExpression()), !dbg !10562
  ret i32 %7, !dbg !10569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.171() unnamed_addr #1 !dbg !10570 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10572, metadata !DIExpression()), !dbg !10573
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10574
  ret i1 %1, !dbg !10575
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10580, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.value(metadata i32 %1, metadata !10581, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.value(metadata i32 %2, metadata !10582, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.value(metadata i32 %3, metadata !10583, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.value(metadata i32 0, metadata !10584, metadata !DIExpression()), !dbg !10588
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10589
  %5 = icmp eq i32 %3, 17, !dbg !10590
  br i1 %5, label %6, label %14, !dbg !10591

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %7, metadata !10585, metadata !DIExpression()), !dbg !10593
  %8 = icmp eq i32 %7, 0, !dbg !10594
  %9 = shl nuw i32 1, %1, !dbg !10596
  br i1 %8, label %12, label %10, !dbg !10597

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10598
  br label %14, !dbg !10600

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10601
  br label %14, !dbg !10604

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10605
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #14 !dbg !10606 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10608, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i8* %1, metadata !10609, metadata !DIExpression()), !dbg !10612
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10613
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10613
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10613
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10610, metadata !DIExpression()), !dbg !10612
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10614
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10614
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10616
  %9 = icmp eq i32 %8, 0, !dbg !10616
  br i1 %9, label %12, label %10, !dbg !10617

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10618
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10620
  br label %12, !dbg !10621

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10622
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10624
  %15 = icmp eq i32 %14, 0, !dbg !10624
  br i1 %15, label %19, label %16, !dbg !10625

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10626
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10627
  store i8 %18, i8* %1, align 1, !dbg !10628
  br label %19, !dbg !10629

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10612
  ret i32 %20, !dbg !10630
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10633, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8 %1, metadata !10634, metadata !DIExpression()), !dbg !10637
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10638
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10638
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10638
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10635, metadata !DIExpression()), !dbg !10637
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10639

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10640
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10643
  %10 = icmp eq i32 %9, 0, !dbg !10643
  br i1 %10, label %18, label %11, !dbg !10644

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10645, !srcloc !10652
  call void @llvm.dbg.value(metadata i32 undef, metadata !10648, metadata !DIExpression()) #23, !dbg !10653
  call void @llvm.dbg.value(metadata i32 undef, metadata !10649, metadata !DIExpression()) #23, !dbg !10653
  call void @llvm.dbg.value(metadata i32 undef, metadata !10636, metadata !DIExpression()), !dbg !10637
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10654
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10656
  %15 = icmp eq i32 %14, 0, !dbg !10656
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10645
  br i1 %15, label %17, label %19, !dbg !10657

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10648, metadata !DIExpression()) #23, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %16, metadata !10636, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i32 undef, metadata !10658, metadata !DIExpression()) #23, !dbg !10661
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10663, !srcloc !10664
  br label %18, !dbg !10665

18:                                               ; preds = %17, %7
  br label %7, !dbg !10640, !llvm.loop !10666

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10645
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10668
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10669
  call void @llvm.dbg.value(metadata i32 %20, metadata !10658, metadata !DIExpression()) #23, !dbg !10670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10672, !srcloc !10664
  ret void, !dbg !10673
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #14 !dbg !10674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10676, metadata !DIExpression()), !dbg !10679
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10680
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10680
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10680
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10677, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata i32 0, metadata !10678, metadata !DIExpression()), !dbg !10679
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10681
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10681
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10683
  %8 = icmp ne i32 %7, 0, !dbg !10683
  %9 = zext i1 %8 to i32, !dbg !10684
  call void @llvm.dbg.value(metadata i32 %9, metadata !10678, metadata !DIExpression()), !dbg !10679
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10685
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10687
  %12 = icmp eq i32 %11, 0, !dbg !10687
  %13 = or i32 %9, 2, !dbg !10688
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10688
  call void @llvm.dbg.value(metadata i32 %14, metadata !10678, metadata !DIExpression()), !dbg !10679
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10689
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10691
  %17 = icmp eq i32 %16, 0, !dbg !10691
  %18 = or i32 %14, 4, !dbg !10692
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10692
  call void @llvm.dbg.value(metadata i32 %19, metadata !10678, metadata !DIExpression()), !dbg !10679
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10693
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10695
  %22 = icmp eq i32 %21, 0, !dbg !10695
  %23 = or i32 %19, 8, !dbg !10696
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %24, metadata !10678, metadata !DIExpression()), !dbg !10679
  %25 = and i32 %24, 8, !dbg !10697
  %26 = icmp eq i32 %25, 0, !dbg !10697
  br i1 %26, label %29, label %27, !dbg !10699

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10700
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10702
  br label %29, !dbg !10703

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10704
  %31 = icmp eq i32 %30, 0, !dbg !10704
  br i1 %31, label %34, label %32, !dbg !10706

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10707
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10709
  br label %34, !dbg !10710

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10711
  %36 = icmp eq i32 %35, 0, !dbg !10711
  br i1 %36, label %39, label %37, !dbg !10713

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10714
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10716
  br label %39, !dbg !10717

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10718
  %41 = icmp eq i32 %40, 0, !dbg !10718
  br i1 %41, label %44, label %42, !dbg !10720

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10721
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10723
  br label %44, !dbg !10724

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10725
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10726
  ret i32 %24, !dbg !10727
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10730, metadata !DIExpression()), !dbg !10739
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10731, metadata !DIExpression()), !dbg !10739
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10740
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10740
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10740
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10732, metadata !DIExpression()), !dbg !10739
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10741
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10741
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10741
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10733, metadata !DIExpression()), !dbg !10739
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10742
  %10 = load i8, i8* %9, align 4, !dbg !10742
  %11 = zext i8 %10 to i32, !dbg !10743
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10744
  call void @llvm.dbg.value(metadata i32 %12, metadata !10735, metadata !DIExpression()), !dbg !10739
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10745
  %14 = load i8, i8* %13, align 1, !dbg !10745
  %15 = zext i8 %14 to i32, !dbg !10746
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10747
  call void @llvm.dbg.value(metadata i32 %16, metadata !10736, metadata !DIExpression()), !dbg !10739
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10748
  %18 = load i8, i8* %17, align 2, !dbg !10748
  %19 = zext i8 %18 to i32, !dbg !10749
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %20, metadata !10737, metadata !DIExpression()), !dbg !10739
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10751
  %22 = load i8, i8* %21, align 1, !dbg !10751
  %23 = zext i8 %22 to i32, !dbg !10752
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10753
  call void @llvm.dbg.value(metadata i32 %24, metadata !10738, metadata !DIExpression()), !dbg !10739
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10754

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10756
  br i1 %26, label %69, label %27, !dbg !10758

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10759

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10760
  br i1 %29, label %65, label %30, !dbg !10760

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10762
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10739
  br i1 %31, label %38, label %34, !dbg !10764

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10765
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10765

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10768
  br i1 %37, label %38, label %69, !dbg !10769

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10770
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10771
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10772
  %41 = icmp eq i32 %12, %40, !dbg !10774
  br i1 %41, label %43, label %42, !dbg !10775

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10776
  br label %43, !dbg !10778

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10779
  %45 = icmp eq i32 %16, %44, !dbg !10781
  br i1 %45, label %47, label %46, !dbg !10782

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10783
  br label %47, !dbg !10785

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10786
  %49 = icmp eq i32 %20, %48, !dbg !10788
  br i1 %49, label %51, label %50, !dbg !10789

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10790
  br label %51, !dbg !10792

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10793
  %53 = icmp eq i32 %24, %52, !dbg !10795
  br i1 %53, label %55, label %54, !dbg !10796

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10797
  br label %55, !dbg !10799

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10800
  %57 = load i32, i32* %56, align 4, !dbg !10800
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10802
  %59 = load i32, i32* %58, align 4, !dbg !10802
  %60 = icmp eq i32 %57, %59, !dbg !10803
  br i1 %60, label %63, label %61, !dbg !10804

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10805
  %62 = load i32, i32* %56, align 4, !dbg !10807
  store i32 %62, i32* %58, align 4, !dbg !10808
  br label %63, !dbg !10809

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10810
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10811
  br label %69, !dbg !10812

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10760
  %67 = and i8 %66, 1, !dbg !10760
  %68 = icmp eq i8 %67, 0, !dbg !10760
  br i1 %68, label %30, label %69, !dbg !10760

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10739
  ret i32 %70, !dbg !10813
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10814 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10816, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10817, metadata !DIExpression()), !dbg !10819
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10820
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10820
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10820
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10818, metadata !DIExpression()), !dbg !10819
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10821
  %7 = load i32, i32* %6, align 4, !dbg !10821
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10822
  store i32 %7, i32* %8, align 4, !dbg !10823
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10824, !range !10825
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10826
  %11 = trunc i32 %10 to i8, !dbg !10826
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10827
  store i8 %11, i8* %12, align 4, !dbg !10828
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10829, !range !10830
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10831
  %15 = trunc i32 %14 to i8, !dbg !10831
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10832
  store i8 %15, i8* %16, align 1, !dbg !10833
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10834
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10835, !range !10825
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10836
  %20 = trunc i32 %19 to i8, !dbg !10836
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10837
  store i8 %20, i8* %21, align 2, !dbg !10838
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10839, !range !10840
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10841
  %24 = trunc i32 %23 to i8, !dbg !10841
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10842
  store i8 %24, i8* %25, align 1, !dbg !10843
  ret i32 0, !dbg !10844
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10849, metadata !DIExpression()), !dbg !10851
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10852
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10852
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10852
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10850, metadata !DIExpression()), !dbg !10851
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10853
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10853
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10854
  ret i32 %7, !dbg !10855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #2 !dbg !10856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10860, metadata !DIExpression()), !dbg !10861
  %2 = icmp eq i32 %0, 1024, !dbg !10862
  %3 = select i1 %2, i32 2, i32 0, !dbg !10862
  %4 = icmp eq i32 %0, 1536, !dbg !10862
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10862
  ret i32 %5, !dbg !10863
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10866, metadata !DIExpression()), !dbg !10868
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10869
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10869
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10869
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10867, metadata !DIExpression()), !dbg !10868
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10870
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10870
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10871
  ret i32 %7, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10877, metadata !DIExpression()), !dbg !10878
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10879
  %3 = icmp ult i32 %2, 4, !dbg !10879
  br i1 %3, label %4, label %7, !dbg !10879

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10879
  %6 = load i32, i32* %5, align 4, !dbg !10879
  br label %7, !dbg !10879

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10880
  ret i32 %8, !dbg !10882
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10883 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10885, metadata !DIExpression()), !dbg !10887
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10888
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10888
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10888
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10886, metadata !DIExpression()), !dbg !10887
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10889
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10889
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10890
  ret i32 %7, !dbg !10891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10896, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %1, metadata !10897, metadata !DIExpression()), !dbg !10898
  %3 = icmp eq i32 %0, 4096, !dbg !10899
  %4 = icmp eq i32 %1, 0, !dbg !10899
  %5 = select i1 %4, i32 4, i32 3, !dbg !10899
  %6 = select i1 %4, i32 3, i32 2, !dbg !10899
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10899
  ret i32 %7, !dbg !10900
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10901 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10903, metadata !DIExpression()), !dbg !10905
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10906
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10906
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10906
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10904, metadata !DIExpression()), !dbg !10905
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10907
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10907
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10908
  ret i32 %7, !dbg !10909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10914, metadata !DIExpression()), !dbg !10915
  %2 = icmp eq i32 %0, 768, !dbg !10916
  %3 = zext i1 %2 to i32, !dbg !10915
  ret i32 %3, !dbg !10918
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10919 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10924, metadata !DIExpression()), !dbg !10925
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10926
  %3 = load volatile i32, i32* %2, align 4, !dbg !10926
  %4 = and i32 %3, 768, !dbg !10926
  ret i32 %4, !dbg !10927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10928 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10930, metadata !DIExpression()), !dbg !10931
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10932
  %3 = load volatile i32, i32* %2, align 4, !dbg !10932
  %4 = and i32 %3, 4096, !dbg !10932
  ret i32 %4, !dbg !10933
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10934 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10938
  %3 = load volatile i32, i32* %2, align 4, !dbg !10938
  %4 = and i32 %3, 12288, !dbg !10938
  ret i32 %4, !dbg !10939
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10940 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10942, metadata !DIExpression()), !dbg !10943
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10944
  %3 = load volatile i32, i32* %2, align 4, !dbg !10944
  %4 = and i32 %3, 1536, !dbg !10944
  ret i32 %4, !dbg !10945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #2 !dbg !10946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10950, metadata !DIExpression()), !dbg !10951
  %2 = icmp eq i32 %0, 2, !dbg !10952
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10952
  %4 = icmp eq i32 %0, 1, !dbg !10952
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10952
  ret i32 %5, !dbg !10953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #2 !dbg !10954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10958, metadata !DIExpression()), !dbg !10959
  %2 = icmp ult i32 %0, 3, !dbg !10960
  br i1 %2, label %3, label %6, !dbg !10960

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10960
  %5 = load i32, i32* %4, align 4, !dbg !10960
  br label %6, !dbg !10960

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10961
  ret i32 %7, !dbg !10963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10968, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %1, metadata !10969, metadata !DIExpression()), !dbg !10970
  %3 = icmp eq i32 %0, 4, !dbg !10971
  %4 = icmp eq i32 %1, 0, !dbg !10971
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10971
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10971
  ret i32 %6, !dbg !10972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10977, metadata !DIExpression()), !dbg !10978
  %2 = icmp eq i32 %0, 1, !dbg !10979
  %3 = select i1 %2, i32 768, i32 0, !dbg !10978
  ret i32 %3, !dbg !10981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10982 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10986, metadata !DIExpression()), !dbg !10987
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10988
  %3 = load volatile i32, i32* %2, align 4, !dbg !10988
  %4 = and i32 %3, -8193, !dbg !10988
  store volatile i32 %4, i32* %2, align 4, !dbg !10988
  ret void, !dbg !10989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10990 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10994, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.value(metadata i32 %1, metadata !10995, metadata !DIExpression()), !dbg !10997
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10998
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10998
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10998
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10996, metadata !DIExpression()), !dbg !10997
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10999
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10999
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11000
  ret void, !dbg !11001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11004, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 %1, metadata !11005, metadata !DIExpression()), !dbg !11007
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11008
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11008
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11008
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11006, metadata !DIExpression()), !dbg !11007
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11009
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11009
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11010
  ret void, !dbg !11011
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11012 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11014, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 %1, metadata !11015, metadata !DIExpression()), !dbg !11017
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11018
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11018
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11018
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11016, metadata !DIExpression()), !dbg !11017
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11019
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11019
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11020
  ret void, !dbg !11021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11022 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11024, metadata !DIExpression()), !dbg !11027
  call void @llvm.dbg.value(metadata i32 %1, metadata !11025, metadata !DIExpression()), !dbg !11027
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11028
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11028
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11028
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11026, metadata !DIExpression()), !dbg !11027
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11029
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11029
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11030
  ret void, !dbg !11031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11032 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11034, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata i32 %1, metadata !11035, metadata !DIExpression()), !dbg !11039
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11040
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11040
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11040
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11036, metadata !DIExpression()), !dbg !11039
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11041
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11041
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11041
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11037, metadata !DIExpression()), !dbg !11039
  %10 = bitcast i32* %3 to i8*, !dbg !11042
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11042
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11043
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11043
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11047
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11047
  %15 = load i8*, i8** %14, align 4, !dbg !11047
  call void @llvm.dbg.value(metadata i32* %3, metadata !11038, metadata !DIExpression(DW_OP_deref)), !dbg !11039
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11048
  %17 = icmp slt i32 %16, 0, !dbg !11049
  br i1 %17, label %18, label %21, !dbg !11050

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef 1) #24, !dbg !11051
  %20 = zext i8 %19 to i32, !dbg !11051
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.175, i32 0, i32 0), i32 noundef %20) #25, !dbg !11051
  br label %31, !dbg !11057

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11058
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11058
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11059
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11060
  %25 = load i32, i32* %3, align 4, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %25, metadata !11038, metadata !DIExpression()), !dbg !11039
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11062
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11063
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11063
  %28 = load volatile i32, i32* %27, align 4, !dbg !11063
  %29 = icmp ugt i32 %28, 16, !dbg !11063
  br i1 %29, label %31, label %30, !dbg !11066

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.178, i32 0, i32 0), i32 noundef 190) #25, !dbg !11067
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.179, i32 0, i32 0)) #25, !dbg !11067
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.178, i32 0, i32 0), i32 noundef 190) #25, !dbg !11067
  unreachable, !dbg !11067

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11069
  ret void, !dbg !11069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11070 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11072, metadata !DIExpression()), !dbg !11073
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11074
  %3 = load volatile i32, i32* %2, align 4, !dbg !11074
  %4 = or i32 %3, 8192, !dbg !11074
  store volatile i32 %4, i32* %2, align 4, !dbg !11074
  ret void, !dbg !11075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11078, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata i8* %1, metadata !11079, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata i32* %2, metadata !11080, metadata !DIExpression()), !dbg !11082
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11083
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11083
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11083
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11081, metadata !DIExpression()), !dbg !11082
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11084
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11084
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11086
  br i1 %9, label %12, label %10, !dbg !11087

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11088
  br label %12, !dbg !11089

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11082
  ret i32 %13, !dbg !11090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef %0) unnamed_addr #2 !dbg !11091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11093, metadata !DIExpression()), !dbg !11094
  %2 = icmp eq i32 %0, 2, !dbg !11095
  %3 = select i1 %2, i8 87, i8 63, !dbg !11095
  %4 = icmp eq i32 %0, 1, !dbg !11095
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11095
  ret i8 %5, !dbg !11096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11097 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11101, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 0, metadata !11102, metadata !DIExpression()), !dbg !11103
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11104
  %3 = load volatile i32, i32* %2, align 4, !dbg !11104
  %4 = and i32 %3, -32769, !dbg !11104
  store volatile i32 %4, i32* %2, align 4, !dbg !11104
  ret void, !dbg !11105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11106 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11110, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 %1, metadata !11111, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 0, metadata !11112, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 %2, metadata !11113, metadata !DIExpression()), !dbg !11114
  %4 = mul i32 %1, 25, !dbg !11115
  %5 = shl i32 %2, 2, !dbg !11115
  %6 = udiv i32 %4, %5, !dbg !11115
  %7 = udiv i32 %6, 100, !dbg !11115
  %8 = shl nuw nsw i32 %7, 4, !dbg !11115
  %9 = mul i32 %7, -100, !dbg !11115
  %10 = add i32 %9, %6, !dbg !11115
  %11 = shl i32 %10, 4, !dbg !11115
  %12 = add i32 %11, 50, !dbg !11115
  %13 = udiv i32 %12, 100, !dbg !11115
  %14 = and i32 %13, 240, !dbg !11115
  %15 = add nuw nsw i32 %14, %8, !dbg !11115
  %16 = and i32 %13, 15, !dbg !11115
  %17 = and i32 %15, 65520, !dbg !11118
  %18 = or i32 %17, %16, !dbg !11118
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11119
  store volatile i32 %18, i32* %19, align 4, !dbg !11120
  ret void, !dbg !11121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11122 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11124, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !11125, metadata !DIExpression()), !dbg !11126
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11127
  %4 = load volatile i32, i32* %3, align 4, !dbg !11127
  %5 = and i32 %4, -769, !dbg !11127
  %6 = or i32 %5, %1, !dbg !11127
  store volatile i32 %6, i32* %3, align 4, !dbg !11127
  ret void, !dbg !11128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11129 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11131, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i32 %1, metadata !11132, metadata !DIExpression()), !dbg !11133
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11134
  %4 = load volatile i32, i32* %3, align 4, !dbg !11134
  %5 = and i32 %4, -4097, !dbg !11134
  %6 = or i32 %5, %1, !dbg !11134
  store volatile i32 %6, i32* %3, align 4, !dbg !11134
  ret void, !dbg !11135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11136 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11138, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i32 %1, metadata !11139, metadata !DIExpression()), !dbg !11140
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11141
  %4 = load volatile i32, i32* %3, align 4, !dbg !11141
  %5 = and i32 %4, -12289, !dbg !11141
  %6 = or i32 %5, %1, !dbg !11141
  store volatile i32 %6, i32* %3, align 4, !dbg !11141
  ret void, !dbg !11142
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11143 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11145, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %1, metadata !11146, metadata !DIExpression()), !dbg !11147
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11148
  %4 = load volatile i32, i32* %3, align 4, !dbg !11148
  %5 = and i32 %4, -1537, !dbg !11148
  %6 = or i32 %5, %1, !dbg !11148
  store volatile i32 %6, i32* %3, align 4, !dbg !11148
  ret void, !dbg !11149
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11150 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11152, metadata !DIExpression()), !dbg !11153
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11154
  %3 = load volatile i32, i32* %2, align 4, !dbg !11154
  %4 = lshr i32 %3, 3, !dbg !11155
  %5 = and i32 %4, 1, !dbg !11155
  ret i32 %5, !dbg !11156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11157 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11159, metadata !DIExpression()), !dbg !11160
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11161
  %3 = load volatile i32, i32* %2, align 4, !dbg !11161
  %4 = and i32 %3, 1, !dbg !11161
  ret i32 %4, !dbg !11162
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11163 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11165, metadata !DIExpression()), !dbg !11166
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11167
  %3 = load volatile i32, i32* %2, align 4, !dbg !11167
  %4 = lshr i32 %3, 1, !dbg !11168
  %5 = and i32 %4, 1, !dbg !11168
  ret i32 %5, !dbg !11169
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11170 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11172, metadata !DIExpression()), !dbg !11173
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11174
  %3 = load volatile i32, i32* %2, align 4, !dbg !11174
  %4 = lshr i32 %3, 8, !dbg !11175
  %5 = and i32 %4, 1, !dbg !11175
  ret i32 %5, !dbg !11176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11177 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11179, metadata !DIExpression()), !dbg !11180
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11181
  store volatile i32 -257, i32* %2, align 4, !dbg !11181
  ret void, !dbg !11182
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11183 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11185, metadata !DIExpression()), !dbg !11187
  %3 = bitcast i32* %2 to i8*, !dbg !11188
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11188
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11186, metadata !DIExpression()), !dbg !11189
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11190
  %5 = load volatile i32, i32* %4, align 4, !dbg !11190
  store volatile i32 %5, i32* %2, align 4, !dbg !11191
  %6 = load volatile i32, i32* %2, align 4, !dbg !11192
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11193
  %8 = load volatile i32, i32* %7, align 4, !dbg !11193
  store volatile i32 %8, i32* %2, align 4, !dbg !11194
  %9 = load volatile i32, i32* %2, align 4, !dbg !11195
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11196
  ret void, !dbg !11196
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11197 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11199, metadata !DIExpression()), !dbg !11201
  %3 = bitcast i32* %2 to i8*, !dbg !11202
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11202
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11200, metadata !DIExpression()), !dbg !11203
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11204
  %5 = load volatile i32, i32* %4, align 4, !dbg !11204
  store volatile i32 %5, i32* %2, align 4, !dbg !11205
  %6 = load volatile i32, i32* %2, align 4, !dbg !11206
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11207
  %8 = load volatile i32, i32* %7, align 4, !dbg !11207
  store volatile i32 %8, i32* %2, align 4, !dbg !11208
  %9 = load volatile i32, i32* %2, align 4, !dbg !11209
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11210
  ret void, !dbg !11210
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11211 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11213, metadata !DIExpression()), !dbg !11215
  %3 = bitcast i32* %2 to i8*, !dbg !11216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11216
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11214, metadata !DIExpression()), !dbg !11217
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11218
  %5 = load volatile i32, i32* %4, align 4, !dbg !11218
  store volatile i32 %5, i32* %2, align 4, !dbg !11219
  %6 = load volatile i32, i32* %2, align 4, !dbg !11220
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11221
  %8 = load volatile i32, i32* %7, align 4, !dbg !11221
  store volatile i32 %8, i32* %2, align 4, !dbg !11222
  %9 = load volatile i32, i32* %2, align 4, !dbg !11223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11224
  ret void, !dbg !11224
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11225 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11227, metadata !DIExpression()), !dbg !11229
  %3 = bitcast i32* %2 to i8*, !dbg !11230
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11230
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11228, metadata !DIExpression()), !dbg !11231
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11232
  %5 = load volatile i32, i32* %4, align 4, !dbg !11232
  store volatile i32 %5, i32* %2, align 4, !dbg !11233
  %6 = load volatile i32, i32* %2, align 4, !dbg !11234
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11235
  %8 = load volatile i32, i32* %7, align 4, !dbg !11235
  store volatile i32 %8, i32* %2, align 4, !dbg !11236
  %9 = load volatile i32, i32* %2, align 4, !dbg !11237
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11238
  ret void, !dbg !11238
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11239 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11241, metadata !DIExpression()), !dbg !11242
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11243
  %3 = load volatile i32, i32* %2, align 4, !dbg !11243
  %4 = lshr i32 %3, 7, !dbg !11244
  %5 = and i32 %4, 1, !dbg !11244
  ret i32 %5, !dbg !11245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11246 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11250, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i8 %1, metadata !11251, metadata !DIExpression()), !dbg !11252
  %3 = zext i8 %1 to i32, !dbg !11253
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11254
  store volatile i32 %3, i32* %4, align 4, !dbg !11255
  ret void, !dbg !11256
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11257 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11259, metadata !DIExpression()), !dbg !11260
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11261
  %3 = load volatile i32, i32* %2, align 4, !dbg !11261
  %4 = lshr i32 %3, 5, !dbg !11262
  %5 = and i32 %4, 1, !dbg !11262
  ret i32 %5, !dbg !11263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11264 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11268, metadata !DIExpression()), !dbg !11269
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11270
  %3 = load volatile i32, i32* %2, align 4, !dbg !11270
  %4 = trunc i32 %3 to i8, !dbg !11271
  ret i8 %4, !dbg !11272
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11273 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11275, metadata !DIExpression()), !dbg !11281
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11282
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11282
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11282
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11276, metadata !DIExpression()), !dbg !11281
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11283
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11283
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11283
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11277, metadata !DIExpression()), !dbg !11281
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11284
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11285
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11285
  %10 = tail call fastcc zeroext i1 @device_is_ready.184(%struct.device* noundef %9) #24, !dbg !11287
  br i1 %10, label %14, label %11, !dbg !11288

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef 1) #24, !dbg !11289
  %13 = zext i8 %12 to i32, !dbg !11289
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.185, i32 0, i32 0), i32 noundef %13) #25, !dbg !11289
  br label %62, !dbg !11295

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11296
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11297
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11297
  %18 = load i8*, i8** %17, align 4, !dbg !11297
  %19 = tail call fastcc i32 @clock_control_on.186(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11298
  call void @llvm.dbg.value(metadata i32 %19, metadata !11280, metadata !DIExpression()), !dbg !11281
  %20 = icmp eq i32 %19, 0, !dbg !11299
  br i1 %20, label %24, label %21, !dbg !11301

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef 1) #24, !dbg !11302
  %23 = zext i8 %22 to i32, !dbg !11302
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.187, i32 0, i32 0), i32 noundef %23) #25, !dbg !11302
  br label %62, !dbg !11308

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11309
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11309
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11310
  call void @llvm.dbg.value(metadata i32 %27, metadata !11280, metadata !DIExpression()), !dbg !11281
  %28 = icmp slt i32 %27, 0, !dbg !11311
  br i1 %28, label %62, label %29, !dbg !11313

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11314
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11314
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11315
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11316
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11317
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11318
  %34 = load i32, i32* %33, align 4, !dbg !11318
  %35 = icmp ult i32 %34, 3, !dbg !11320
  br i1 %35, label %39, label %36, !dbg !11320

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef 2) #24, !dbg !11321
  %38 = zext i8 %37 to i32, !dbg !11321
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10.188, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11321
  call void @llvm.dbg.value(metadata i32 0, metadata !11278, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 0, metadata !11279, metadata !DIExpression()), !dbg !11281
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11320
  %41 = load i32, i32* %40, align 4, !dbg !11320
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.11, i32 0, i32 %34, !dbg !11320
  %43 = load i32, i32* %42, align 4, !dbg !11320
  br label %44, !dbg !11320

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11330
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11330
  call void @llvm.dbg.value(metadata i32 %46, metadata !11279, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 %45, metadata !11278, metadata !DIExpression()), !dbg !11281
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11331
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11332
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11333
  %49 = load i8, i8* %48, align 4, !dbg !11333, !range !6555
  %50 = icmp eq i8 %49, 0, !dbg !11333
  br i1 %50, label %52, label %51, !dbg !11335

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11336
  br label %52, !dbg !11338

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11339
  %54 = load i32, i32* %53, align 4, !dbg !11339
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11340
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11341
  %56 = load i8, i8* %55, align 4, !dbg !11341, !range !6555
  %57 = icmp eq i8 %56, 0, !dbg !11341
  br i1 %57, label %60, label %58, !dbg !11343

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11344
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11346
  br label %60, !dbg !11347

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11348
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11349
  br label %62, !dbg !11350

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11281
  ret i32 %63, !dbg !11351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11352 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11356, metadata !DIExpression()), !dbg !11360
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11361
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11361
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11361
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11357, metadata !DIExpression()), !dbg !11360
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11358, metadata !DIExpression()), !dbg !11360
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11362
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11363
  ret void, !dbg !11364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.184(%struct.device* noundef %0) unnamed_addr #1 !dbg !11365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11369, metadata !DIExpression()), !dbg !11370
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11371, !srcloc !11373
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) #24, !dbg !11374
  ret i1 %2, !dbg !11375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.186(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11378, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i8* %1, metadata !11379, metadata !DIExpression()), !dbg !11381
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11382
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11382
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11382
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11380, metadata !DIExpression()), !dbg !11381
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11383
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11383
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11384
  ret i32 %8, !dbg !11385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11386 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11390, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata i8 0, metadata !11391, metadata !DIExpression()), !dbg !11394
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11395
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11395
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11393, metadata !DIExpression(DW_OP_deref)), !dbg !11394
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11396
  call void @llvm.dbg.value(metadata i32 %4, metadata !11392, metadata !DIExpression()), !dbg !11394
  %5 = icmp slt i32 %4, 0, !dbg !11397
  br i1 %5, label %9, label %6, !dbg !11399

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11400
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11393, metadata !DIExpression()), !dbg !11394
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11401
  br label %9, !dbg !11402

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11394
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11403
  ret i32 %10, !dbg !11403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11404 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11406, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata i32 12, metadata !11407, metadata !DIExpression()), !dbg !11408
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11409
  %3 = load volatile i32, i32* %2, align 4, !dbg !11409
  %4 = or i32 %3, 12, !dbg !11409
  store volatile i32 %4, i32* %2, align 4, !dbg !11409
  ret void, !dbg !11410
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11411 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11413, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.value(metadata i32 %1, metadata !11414, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.value(metadata i32 %2, metadata !11415, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.value(metadata i32 0, metadata !11416, metadata !DIExpression()), !dbg !11417
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11418
  %5 = load volatile i32, i32* %4, align 4, !dbg !11418
  %6 = and i32 %5, -5633, !dbg !11418
  %7 = or i32 %2, %1, !dbg !11418
  %8 = or i32 %7, %6, !dbg !11418
  store volatile i32 %8, i32* %4, align 4, !dbg !11418
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11419
  %10 = load volatile i32, i32* %9, align 4, !dbg !11419
  %11 = and i32 %10, -12289, !dbg !11419
  store volatile i32 %11, i32* %9, align 4, !dbg !11419
  ret void, !dbg !11420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11421 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11423, metadata !DIExpression()), !dbg !11424
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11425
  %3 = load volatile i32, i32* %2, align 4, !dbg !11425
  %4 = or i32 %3, 8, !dbg !11425
  store volatile i32 %4, i32* %2, align 4, !dbg !11425
  ret void, !dbg !11426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11427 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11431, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11432, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata i32 0, metadata !11433, metadata !DIExpression()), !dbg !11434
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11435
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11435
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11436
  %5 = load i8, i8* %4, align 4, !dbg !11436
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11437
  ret i32 %6, !dbg !11438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !11439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11441, metadata !DIExpression()), !dbg !11442
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11443
  ret i1 %2, !dbg !11444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11445 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11447, metadata !DIExpression()), !dbg !11448
  tail call fastcc void @__NVIC_SetPriority.191() #24, !dbg !11449
  store i32 3199, i32* @last_load, align 4, !dbg !11450
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11451
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11452
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11453
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11454
  %3 = or i32 %2, 7, !dbg !11454
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11454
  ret i32 0, !dbg !11455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.191() unnamed_addr #15 !dbg !11456 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11458, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i32 1, metadata !11459, metadata !DIExpression()), !dbg !11460
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11461
  ret void, !dbg !11464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11465 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11467, metadata !DIExpression()), !dbg !11469
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11470
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11471
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11472
  %5 = add i32 %4, %3, !dbg !11472
  store i32 %5, i32* @cycle_count, align 4, !dbg !11472
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11473
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11474
  %7 = sub i32 %5, %6, !dbg !11477
  %8 = udiv i32 %7, 3200, !dbg !11478
  call void @llvm.dbg.value(metadata i32 %8, metadata !11468, metadata !DIExpression()), !dbg !11469
  %9 = mul nuw i32 %8, 3200, !dbg !11479
  %10 = add i32 %9, %6, !dbg !11480
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11480
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11481
  tail call void @z_arm_int_exit() #25, !dbg !11482
  ret void, !dbg !11483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11484 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11489
  call void @llvm.dbg.value(metadata i32 %1, metadata !11486, metadata !DIExpression()), !dbg !11490
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11491
  call void @llvm.dbg.value(metadata i32 %2, metadata !11487, metadata !DIExpression()), !dbg !11490
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11492
  call void @llvm.dbg.value(metadata i32 %3, metadata !11488, metadata !DIExpression()), !dbg !11490
  %4 = and i32 %2, 65536, !dbg !11493
  %5 = icmp ne i32 %4, 0, !dbg !11493
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11495
  %8 = load i32, i32* @last_load, align 4, !dbg !11490
  br i1 %7, label %9, label %13, !dbg !11495

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11496
  %11 = add i32 %10, %8, !dbg !11496
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11496
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11498
  br label %13, !dbg !11499

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11500
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11501
  %16 = add i32 %14, %15, !dbg !11502
  ret i32 %16, !dbg !11503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11508, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i1 %1, metadata !11509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11521
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11522
  br i1 %4, label %5, label %8, !dbg !11522

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11524
  %7 = and i32 %6, -2, !dbg !11524
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11524
  store i32 -16777216, i32* @last_load, align 4, !dbg !11526
  br label %60, !dbg !11527

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %9, metadata !11513, metadata !DIExpression()), !dbg !11521
  br i1 %3, label %18, label %10, !dbg !11529

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11529
  call void @llvm.dbg.value(metadata i32 undef, metadata !11508, metadata !DIExpression()), !dbg !11521
  %12 = icmp slt i32 %11, 1, !dbg !11530
  br i1 %12, label %18, label %13, !dbg !11530

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !11530
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !11530
  %16 = mul nuw nsw i32 %15, 3200, !dbg !11530
  %17 = add nuw nsw i32 %16, 3199, !dbg !11530
  br label %18, !dbg !11530

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11508, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11531, metadata !DIExpression()) #23, !dbg !11538
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11540, !srcloc !11546
  call void @llvm.dbg.value(metadata i32 undef, metadata !11543, metadata !DIExpression()) #23, !dbg !11547
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !11547
  call void @llvm.dbg.value(metadata i32 undef, metadata !11537, metadata !DIExpression()) #23, !dbg !11538
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11548
  br i1 %21, label %23, label %22, !dbg !11551

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.195, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11552
  unreachable, !dbg !11552

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11540
  call void @llvm.dbg.value(metadata i32 %24, metadata !11543, metadata !DIExpression()) #23, !dbg !11547
  call void @llvm.dbg.value(metadata i32 %24, metadata !11537, metadata !DIExpression()) #23, !dbg !11538
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11554
  call void @llvm.dbg.value(metadata i32 %24, metadata !11514, metadata !DIExpression()), !dbg !11521
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %25, metadata !11519, metadata !DIExpression()), !dbg !11521
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11556
  call void @llvm.dbg.value(metadata i32 %26, metadata !11511, metadata !DIExpression()), !dbg !11521
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11557
  %28 = add i32 %27, %25, !dbg !11557
  store i32 %28, i32* @cycle_count, align 4, !dbg !11557
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11558
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11559
  %30 = sub i32 %28, %29, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %30, metadata !11520, metadata !DIExpression()), !dbg !11521
  %31 = icmp slt i32 %30, 0, !dbg !11561
  br i1 %31, label %41, label %32, !dbg !11563

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11510, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 undef, metadata !11510, metadata !DIExpression()), !dbg !11521
  %33 = add nuw i32 %19, %30, !dbg !11564
  %34 = urem i32 %33, 3200, !dbg !11566
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11521
  %35 = sub nuw nsw i32 %19, %34, !dbg !11567
  call void @llvm.dbg.value(metadata i32 %35, metadata !11510, metadata !DIExpression()), !dbg !11521
  %36 = icmp ugt i32 %35, 1024, !dbg !11568
  br i1 %36, label %37, label %39, !dbg !11568

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11510, metadata !DIExpression()), !dbg !11521
  %38 = icmp ugt i32 %35, 16771200, !dbg !11569
  br i1 %38, label %41, label %39, !dbg !11571

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16771200, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11572
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11573
  call void @llvm.dbg.value(metadata i32 %43, metadata !11512, metadata !DIExpression()), !dbg !11521
  %44 = add nsw i32 %42, -1, !dbg !11574
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11575
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11576
  %45 = icmp ult i32 %26, %43, !dbg !11577
  br i1 %45, label %46, label %51, !dbg !11579

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11580
  %48 = add i32 %26, %9, !dbg !11582
  %49 = sub i32 %48, %43, !dbg !11583
  %50 = add i32 %49, %47, !dbg !11580
  br label %55, !dbg !11584

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11585
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11587
  %54 = add i32 %52, %53, !dbg !11587
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11588
  store i32 %56, i32* @cycle_count, align 4, !dbg !11588
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #23, !dbg !11595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11594, metadata !DIExpression()) #23, !dbg !11595
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11597
  br i1 %57, label %59, label %58, !dbg !11600

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.197, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11601
  unreachable, !dbg !11601

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11589, metadata !DIExpression()) #23, !dbg !11595
  call void @llvm.dbg.value(metadata i32 %24, metadata !11603, metadata !DIExpression()) #23, !dbg !11606
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11608, !srcloc !11609
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11610
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11611 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11531, metadata !DIExpression()) #23, !dbg !11615
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11617, !srcloc !11546
  call void @llvm.dbg.value(metadata i32 undef, metadata !11543, metadata !DIExpression()) #23, !dbg !11619
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !11619
  call void @llvm.dbg.value(metadata i32 undef, metadata !11537, metadata !DIExpression()) #23, !dbg !11615
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11620
  br i1 %2, label %4, label %3, !dbg !11621

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11622
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.195, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11622
  unreachable, !dbg !11622

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11543, metadata !DIExpression()) #23, !dbg !11619
  call void @llvm.dbg.value(metadata i32 undef, metadata !11537, metadata !DIExpression()) #23, !dbg !11615
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11623
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11624
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11625
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11626
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11627
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11624
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #23, !dbg !11628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11594, metadata !DIExpression()) #23, !dbg !11628
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11630
  br i1 %8, label %10, label %9, !dbg !11631

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.197, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11632
  unreachable, !dbg !11632

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11633
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11624
  %12 = sub i32 %11, %7, !dbg !11634
  call void @llvm.dbg.value(metadata i32 %12, metadata !11614, metadata !DIExpression()), !dbg !11624
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11617
  call void @llvm.dbg.value(metadata i32 %13, metadata !11543, metadata !DIExpression()) #23, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %13, metadata !11537, metadata !DIExpression()) #23, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %13, metadata !11613, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #23, !dbg !11628
  call void @llvm.dbg.value(metadata i32 undef, metadata !11603, metadata !DIExpression()) #23, !dbg !11635
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11637, !srcloc !11609
  %14 = udiv i32 %12, 3200, !dbg !11638
  ret i32 %14, !dbg !11639
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11640 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11531, metadata !DIExpression()) #23, !dbg !11644
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11646, !srcloc !11546
  call void @llvm.dbg.value(metadata i32 undef, metadata !11543, metadata !DIExpression()) #23, !dbg !11648
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !11648
  call void @llvm.dbg.value(metadata i32 undef, metadata !11537, metadata !DIExpression()) #23, !dbg !11644
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11649
  br i1 %2, label %4, label %3, !dbg !11650

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.195, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11651
  unreachable, !dbg !11651

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11543, metadata !DIExpression()) #23, !dbg !11648
  call void @llvm.dbg.value(metadata i32 undef, metadata !11537, metadata !DIExpression()) #23, !dbg !11644
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11652
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()), !dbg !11653
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11654
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11655
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11653
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #23, !dbg !11656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11594, metadata !DIExpression()) #23, !dbg !11656
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11658
  br i1 %7, label %9, label %8, !dbg !11659

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.197, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11660
  unreachable, !dbg !11660

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11661
  call void @llvm.dbg.value(metadata i32 %10, metadata !11643, metadata !DIExpression()), !dbg !11653
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11646
  call void @llvm.dbg.value(metadata i32 %11, metadata !11543, metadata !DIExpression()) #23, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %11, metadata !11537, metadata !DIExpression()) #23, !dbg !11644
  call void @llvm.dbg.value(metadata i32 %11, metadata !11642, metadata !DIExpression()), !dbg !11653
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #23, !dbg !11656
  call void @llvm.dbg.value(metadata i32 undef, metadata !11603, metadata !DIExpression()) #23, !dbg !11662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11664, !srcloc !11609
  ret i32 %10, !dbg !11665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11666 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11667
  %2 = icmp eq i32 %1, -16777216, !dbg !11669
  br i1 %2, label %3, label %6, !dbg !11670

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11671
  %5 = or i32 %4, 1, !dbg !11671
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11671
  br label %6, !dbg !11673

6:                                                ; preds = %3, %0
  ret void, !dbg !11674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11675 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11676
  %2 = and i32 %1, -2, !dbg !11676
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11676
  ret void, !dbg !11677
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11678 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11704, metadata !DIExpression()), !dbg !11707
  call void @llvm.dbg.value(metadata i8 %1, metadata !11705, metadata !DIExpression()), !dbg !11707
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11706, metadata !DIExpression()), !dbg !11707
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11708
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11708
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11707
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11709
  %8 = load i8, i8* %6, align 4, !dbg !11710
  %9 = zext i8 %8 to i32, !dbg !11711
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11711
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11712
  br i1 %11, label %18, label %24, !dbg !11713

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11707
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11709
  %14 = load i8, i8* %6, align 4, !dbg !11710
  %15 = zext i8 %14 to i32, !dbg !11711
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11711
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11712
  br i1 %17, label %18, label %24, !dbg !11713, !llvm.loop !11714

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11716
  %21 = load i8, i8* %20, align 1, !dbg !11716
  %22 = icmp eq i8 %21, %1, !dbg !11719
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11720
  br i1 %22, label %24, label %12, !dbg !11721

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11707
  ret i32 %25, !dbg !11722
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11723 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11734, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.value(metadata i8 %1, metadata !11735, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.value(metadata i32 %2, metadata !11736, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.value(metadata i32 0, metadata !11739, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.value(metadata i32 0, metadata !11740, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.value(metadata i8 0, metadata !11741, metadata !DIExpression()), !dbg !11751
  %4 = icmp eq i8 %1, 0, !dbg !11752
  br i1 %4, label %35, label %5, !dbg !11753

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11752
  br label %9, !dbg !11753

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11741, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.value(metadata i32 %29, metadata !11739, metadata !DIExpression()), !dbg !11750
  %8 = icmp eq i32 %34, %6, !dbg !11752
  br i1 %8, label %35, label %9, !dbg !11753, !llvm.loop !11754

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11741, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.value(metadata i32 %11, metadata !11739, metadata !DIExpression()), !dbg !11750
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11756
  %13 = load i32, i32* %12, align 4, !dbg !11756
  call void @llvm.dbg.value(metadata i32 %13, metadata !11738, metadata !DIExpression()), !dbg !11750
  %14 = and i32 %13, 31, !dbg !11757
  %15 = icmp ult i32 %14, 16, !dbg !11758
  br i1 %15, label %16, label %20, !dbg !11759

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11760
  %18 = load i32, i32* %17, align 4, !dbg !11760
  %19 = or i32 %18, 32, !dbg !11762
  call void @llvm.dbg.value(metadata i32 %19, metadata !11739, metadata !DIExpression()), !dbg !11750
  br label %28, !dbg !11763

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11764

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11765
  %23 = load i32, i32* %22, align 4, !dbg !11765
  call void @llvm.dbg.value(metadata i32 %23, metadata !11743, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11766
  %24 = lshr i32 %23, 7, !dbg !11767
  %25 = and i32 %24, 16, !dbg !11767
  %26 = or i32 %25, %23, !dbg !11767
  call void @llvm.dbg.value(metadata i32 %26, metadata !11739, metadata !DIExpression()), !dbg !11750
  br label %28, !dbg !11768

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11750
  call void @llvm.dbg.value(metadata i32 %29, metadata !11739, metadata !DIExpression()), !dbg !11750
  %30 = lshr i32 %13, 5, !dbg !11769
  %31 = and i32 %30, 255, !dbg !11769
  call void @llvm.dbg.value(metadata i32 %31, metadata !11737, metadata !DIExpression()), !dbg !11750
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %32, metadata !11740, metadata !DIExpression()), !dbg !11750
  %33 = icmp slt i32 %32, 0, !dbg !11771
  %34 = add nuw nsw i32 %10, 1, !dbg !11773
  call void @llvm.dbg.value(metadata i32 %34, metadata !11741, metadata !DIExpression()), !dbg !11751
  br i1 %33, label %35, label %7, !dbg !11774

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11780, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %1, metadata !11781, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %2, metadata !11782, metadata !DIExpression()), !dbg !11784
  %4 = icmp ugt i32 %0, 175, !dbg !11785
  br i1 %4, label %17, label %5, !dbg !11787

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11788
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11789
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11789
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11783, metadata !DIExpression()), !dbg !11784
  %9 = lshr i32 1888, %6, !dbg !11790
  %10 = and i32 %9, 1, !dbg !11790
  %11 = icmp eq i32 %10, 0, !dbg !11790
  br i1 %11, label %12, label %17, !dbg !11792

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.204(%struct.device* noundef %8) #24, !dbg !11793
  br i1 %13, label %14, label %17, !dbg !11794

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !11795
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !11796
  br label %17, !dbg !11797

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !11784
  ret i32 %18, !dbg !11798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.204(%struct.device* noundef %0) unnamed_addr #1 !dbg !11799 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11803, metadata !DIExpression()), !dbg !11804
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11805, !srcloc !11807
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.205(%struct.device* noundef %0) #24, !dbg !11808
  ret i1 %2, !dbg !11809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.205(%struct.device* noundef %0) unnamed_addr #1 !dbg !11810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11812, metadata !DIExpression()), !dbg !11813
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11814
  ret i1 %2, !dbg !11815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11816 {
  ret void, !dbg !11817
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11818 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11820, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.value(metadata i32 0, metadata !11821, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.value(metadata i32 0, metadata !11822, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.value(metadata i32 0, metadata !11823, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.value(metadata i32 0, metadata !11824, metadata !DIExpression()), !dbg !11825
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11826
  call void @llvm.dbg.value(metadata i32 %1, metadata !11820, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !11825
  %2 = lshr i32 %1, 2, !dbg !11827
  %3 = and i32 %2, 3, !dbg !11827
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !11827

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11828
  %6 = lshr i32 %5, 13, !dbg !11830
  %7 = and i32 %6, 7, !dbg !11830
  call void @llvm.dbg.value(metadata i32 %7, metadata !11824, metadata !DIExpression()), !dbg !11825
  %8 = shl nuw nsw i32 65536, %7, !dbg !11831
  br label %31, !dbg !11832

9:                                                ; preds = %0
  br label %31, !dbg !11833

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %11, metadata !11821, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !11825
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11835
  call void @llvm.dbg.value(metadata i32 %12, metadata !11822, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !11825
  %13 = lshr i32 %11, 18, !dbg !11836
  %14 = and i32 %13, 15, !dbg !11836
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !11837
  %16 = load i8, i8* %15, align 1, !dbg !11837
  %17 = zext i8 %16 to i32, !dbg !11837
  call void @llvm.dbg.value(metadata i32 %17, metadata !11821, metadata !DIExpression()), !dbg !11825
  %18 = lshr i32 %12, 22, !dbg !11838
  %19 = and i32 %18, 3, !dbg !11838
  %20 = add nuw nsw i32 %19, 1, !dbg !11839
  call void @llvm.dbg.value(metadata i32 %20, metadata !11822, metadata !DIExpression()), !dbg !11825
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11840
  %22 = and i32 %21, 65536, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %22, metadata !11823, metadata !DIExpression()), !dbg !11825
  %23 = icmp eq i32 %22, 0, !dbg !11842
  br i1 %23, label %24, label %27, !dbg !11844

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !11845
  %26 = udiv i32 %25, %20, !dbg !11847
  br label %31, !dbg !11848

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !11849
  %29 = udiv i32 %28, %20, !dbg !11851
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !11852
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11853
  %34 = lshr i32 %33, 4, !dbg !11854
  %35 = and i32 %34, 15, !dbg !11854
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !11855
  %37 = load i8, i8* %36, align 1, !dbg !11855
  %38 = zext i8 %37 to i32, !dbg !11855
  call void @llvm.dbg.value(metadata i32 %38, metadata !11820, metadata !DIExpression()), !dbg !11825
  %39 = lshr i32 %32, %38, !dbg !11856
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !11856
  ret void, !dbg !11857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11858 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11866
  %2 = and i32 %1, 16711935, !dbg !11866
  %3 = or i32 %2, 45056, !dbg !11866
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11866
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11867
  %5 = or i32 %4, 256, !dbg !11867
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11867
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %6, metadata !11864, metadata !DIExpression()), !dbg !11869
  br label %7, !dbg !11870

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11871
  %9 = and i32 %8, 512, !dbg !11871
  %10 = icmp eq i32 %9, 0, !dbg !11872
  br i1 %10, label %11, label %15, !dbg !11870

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !11873
  %13 = sub i32 %12, %6, !dbg !11876
  %14 = icmp ugt i32 %13, 2, !dbg !11877
  br i1 %14, label %47, label %7, !dbg !11878, !llvm.loop !11879

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11881
  %17 = and i32 %16, -4, !dbg !11881
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11881
  br label %18, !dbg !11882

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11883
  %20 = and i32 %19, 12, !dbg !11883
  %21 = icmp eq i32 %20, 0, !dbg !11884
  br i1 %21, label %26, label %22, !dbg !11882

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !11885
  %24 = sub i32 %23, %6, !dbg !11888
  %25 = icmp ugt i32 %24, 5000, !dbg !11889
  br i1 %25, label %47, label %18, !dbg !11890, !llvm.loop !11891

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !11893
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !11894
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !11895
  call void @llvm.dbg.value(metadata i32 %28, metadata !11865, metadata !DIExpression()), !dbg !11869
  %29 = icmp eq i32 %28, 0, !dbg !11896
  br i1 %29, label %30, label %47, !dbg !11898

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11899
  %32 = and i32 %31, -285278210, !dbg !11899
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11899
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11900
  %34 = and i32 %33, -262145, !dbg !11900
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11900
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %35, metadata !11864, metadata !DIExpression()), !dbg !11869
  br label %36, !dbg !11902

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11903
  %38 = and i32 %37, 33554432, !dbg !11903
  %39 = icmp eq i32 %38, 0, !dbg !11904
  br i1 %39, label %44, label %40, !dbg !11902

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !11905
  %42 = sub i32 %41, %35, !dbg !11908
  %43 = icmp ugt i32 %42, 2, !dbg !11909
  br i1 %43, label %47, label %36, !dbg !11910, !llvm.loop !11911

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11913
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11914
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11915
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11916
  %46 = or i32 %45, 16777216, !dbg !11916
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11916
  br label %47, !dbg !11917

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !11869
  ret i32 %48, !dbg !11918
}

; Function Attrs: optsize
declare !dbg !11919 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !11921 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11924 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11950, metadata !DIExpression()), !dbg !11963
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11964
  br i1 %3, label %385, label %4, !dbg !11966

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11967
  %6 = and i32 %5, 12, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %6, metadata !11953, metadata !DIExpression()), !dbg !11963
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11968
  %8 = and i32 %7, 65536, !dbg !11968
  call void @llvm.dbg.value(metadata i32 %8, metadata !11954, metadata !DIExpression()), !dbg !11963
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11969
  %10 = load i32, i32* %9, align 4, !dbg !11969
  %11 = and i32 %10, 1, !dbg !11971
  %12 = icmp eq i32 %11, 0, !dbg !11972
  br i1 %12, label %69, label %13, !dbg !11973

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !11974
  br i1 %14, label %19, label %15, !dbg !11977

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !11978
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !11979
  br i1 %18, label %19, label %27, !dbg !11979

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11980
  %21 = and i32 %20, 131072, !dbg !11980
  %22 = icmp eq i32 %21, 0, !dbg !11983
  br i1 %22, label %69, label %23, !dbg !11984

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11985
  %25 = load i32, i32* %24, align 4, !dbg !11985
  %26 = icmp eq i32 %25, 0, !dbg !11986
  br i1 %26, label %385, label %69, !dbg !11987

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11988
  %29 = load i32, i32* %28, align 4, !dbg !11988
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !11992

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11993
  %32 = or i32 %31, 65536, !dbg !11993
  br label %48, !dbg !11993

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11995
  %35 = and i32 %34, -65537, !dbg !11995
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11995
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11995
  %37 = and i32 %36, -262145, !dbg !11995
  br label %48, !dbg !11995

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11998
  %40 = or i32 %39, 262144, !dbg !11998
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11998
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11998
  %42 = or i32 %41, 65536, !dbg !11998
  br label %48, !dbg !11998

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12001
  %45 = and i32 %44, -65537, !dbg !12001
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12001
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12001
  %47 = and i32 %46, -262145, !dbg !12001
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12003
  %50 = load i32, i32* %28, align 4, !dbg !12004
  %51 = icmp eq i32 %50, 0, !dbg !12006
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !12007
  call void @llvm.dbg.value(metadata i32 %52, metadata !11951, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.value(metadata i32 %52, metadata !11951, metadata !DIExpression()), !dbg !11963
  br i1 %51, label %61, label %53, !dbg !12008

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12009
  %55 = and i32 %54, 131072, !dbg !12009
  %56 = icmp eq i32 %55, 0, !dbg !12011
  br i1 %56, label %57, label %69, !dbg !12012

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !12013
  %59 = sub i32 %58, %52, !dbg !12016
  %60 = icmp ugt i32 %59, 100, !dbg !12017
  br i1 %60, label %385, label %53, !dbg !12018, !llvm.loop !12019

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12021
  %63 = and i32 %62, 131072, !dbg !12021
  %64 = icmp eq i32 %63, 0, !dbg !12023
  br i1 %64, label %69, label %65, !dbg !12024

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12025
  %67 = sub i32 %66, %52, !dbg !12028
  %68 = icmp ugt i32 %67, 100, !dbg !12029
  br i1 %68, label %385, label %61, !dbg !12030, !llvm.loop !12031

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !12033
  %71 = and i32 %70, 2, !dbg !12035
  %72 = icmp eq i32 %71, 0, !dbg !12036
  br i1 %72, label %118, label %73, !dbg !12037

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !12038
  br i1 %74, label %79, label %75, !dbg !12041

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !12042
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !12043
  br i1 %78, label %79, label %87, !dbg !12043

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12044
  %81 = and i32 %80, 2, !dbg !12044
  %82 = icmp eq i32 %81, 0, !dbg !12047
  br i1 %82, label %111, label %83, !dbg !12048

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12049
  %85 = load i32, i32* %84, align 4, !dbg !12049
  %86 = icmp eq i32 %85, 1, !dbg !12050
  br i1 %86, label %111, label %385, !dbg !12051

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12052
  %89 = load i32, i32* %88, align 4, !dbg !12052
  %90 = icmp eq i32 %89, 0, !dbg !12055
  br i1 %90, label %101, label %91, !dbg !12056

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12057
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %92, metadata !11951, metadata !DIExpression()), !dbg !11963
  br label %93, !dbg !12060

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12061
  %95 = and i32 %94, 2, !dbg !12061
  %96 = icmp eq i32 %95, 0, !dbg !12062
  br i1 %96, label %97, label %111, !dbg !12060

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !12063
  %99 = sub i32 %98, %92, !dbg !12066
  %100 = icmp ugt i32 %99, 2, !dbg !12067
  br i1 %100, label %385, label %93, !dbg !12068, !llvm.loop !12069

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12071
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !12073
  call void @llvm.dbg.value(metadata i32 %102, metadata !11951, metadata !DIExpression()), !dbg !11963
  br label %103, !dbg !12074

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12075
  %105 = and i32 %104, 2, !dbg !12075
  %106 = icmp eq i32 %105, 0, !dbg !12076
  br i1 %106, label %118, label %107, !dbg !12074

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !12077
  %109 = sub i32 %108, %102, !dbg !12080
  %110 = icmp ugt i32 %109, 2, !dbg !12081
  br i1 %110, label %385, label %103, !dbg !12082, !llvm.loop !12083

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12085
  %113 = and i32 %112, -7937, !dbg !12085
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12085
  %115 = load i32, i32* %114, align 4, !dbg !12085
  %116 = shl i32 %115, 8, !dbg !12085
  %117 = or i32 %116, %113, !dbg !12085
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12085
  br label %118, !dbg !12086

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !12086
  %120 = and i32 %119, 16, !dbg !12088
  %121 = icmp eq i32 %120, 0, !dbg !12089
  br i1 %121, label %215, label %122, !dbg !12090

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !12091
  br i1 %123, label %124, label %179, !dbg !12094

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12095
  %126 = and i32 %125, 512, !dbg !12095
  %127 = icmp eq i32 %126, 0, !dbg !12098
  br i1 %127, label %132, label %128, !dbg !12099

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12100
  %130 = load i32, i32* %129, align 4, !dbg !12100
  %131 = icmp eq i32 %130, 0, !dbg !12101
  br i1 %131, label %385, label %132, !dbg !12102

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12103
  %134 = load i32, i32* %133, align 4, !dbg !12103
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12106
  %136 = and i32 %135, 57344, !dbg !12106
  %137 = icmp ugt i32 %134, %136, !dbg !12107
  br i1 %137, label %138, label %152, !dbg !12108

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #24, !dbg !12109
  %140 = icmp eq i32 %139, 0, !dbg !12112
  br i1 %140, label %141, label %385, !dbg !12113

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12114
  %143 = and i32 %142, -57345, !dbg !12114
  %144 = load i32, i32* %133, align 4, !dbg !12114
  %145 = or i32 %143, %144, !dbg !12114
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12114
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12115
  %147 = and i32 %146, 16777215, !dbg !12115
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12115
  %149 = load i32, i32* %148, align 4, !dbg !12115
  %150 = shl i32 %149, 24, !dbg !12115
  %151 = or i32 %150, %147, !dbg !12115
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12115
  br label %165, !dbg !12116

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12117
  %154 = and i32 %153, -57345, !dbg !12117
  %155 = or i32 %154, %134, !dbg !12117
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12117
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12119
  %157 = and i32 %156, 16777215, !dbg !12119
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12119
  %159 = load i32, i32* %158, align 4, !dbg !12119
  %160 = shl i32 %159, 24, !dbg !12119
  %161 = or i32 %160, %157, !dbg !12119
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12119
  %162 = load i32, i32* %133, align 4, !dbg !12120
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #24, !dbg !12122
  %164 = icmp eq i32 %163, 0, !dbg !12123
  br i1 %164, label %165, label %385, !dbg !12124

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !12125
  %167 = lshr i32 %166, 13, !dbg !12126
  %168 = shl i32 65536, %167, !dbg !12127
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12128
  %170 = lshr i32 %169, 4, !dbg !12129
  %171 = and i32 %170, 15, !dbg !12129
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !12130
  %173 = load i8, i8* %172, align 1, !dbg !12130
  %174 = zext i8 %173 to i32, !dbg !12130
  %175 = lshr i32 %168, %174, !dbg !12131
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !12132
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !12133
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %177, metadata !11952, metadata !DIExpression()), !dbg !11963
  %178 = icmp eq i32 %177, 0, !dbg !12135
  br i1 %178, label %215, label %385, !dbg !12137

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12138
  %181 = load i32, i32* %180, align 4, !dbg !12138
  %182 = icmp eq i32 %181, 0, !dbg !12141
  br i1 %182, label %205, label %183, !dbg !12142

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12143
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !12145
  call void @llvm.dbg.value(metadata i32 %184, metadata !11951, metadata !DIExpression()), !dbg !11963
  br label %185, !dbg !12146

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12147
  %187 = and i32 %186, 512, !dbg !12147
  %188 = icmp eq i32 %187, 0, !dbg !12148
  br i1 %188, label %189, label %193, !dbg !12146

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !12149
  %191 = sub i32 %190, %184, !dbg !12152
  %192 = icmp ugt i32 %191, 2, !dbg !12153
  br i1 %192, label %385, label %185, !dbg !12154, !llvm.loop !12155

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12157
  %195 = and i32 %194, -57345, !dbg !12157
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12157
  %197 = load i32, i32* %196, align 4, !dbg !12157
  %198 = or i32 %195, %197, !dbg !12157
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12157
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12158
  %200 = and i32 %199, 16777215, !dbg !12158
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12158
  %202 = load i32, i32* %201, align 4, !dbg !12158
  %203 = shl i32 %202, 24, !dbg !12158
  %204 = or i32 %203, %200, !dbg !12158
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12158
  br label %215, !dbg !12159

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12160
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %206, metadata !11951, metadata !DIExpression()), !dbg !11963
  br label %207, !dbg !12163

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12164
  %209 = and i32 %208, 512, !dbg !12164
  %210 = icmp eq i32 %209, 0, !dbg !12165
  br i1 %210, label %215, label %211, !dbg !12163

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !12166
  %213 = sub i32 %212, %206, !dbg !12169
  %214 = icmp ugt i32 %213, 2, !dbg !12170
  br i1 %214, label %385, label %207, !dbg !12171, !llvm.loop !12172

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !12174
  %217 = and i32 %216, 8, !dbg !12176
  %218 = icmp eq i32 %217, 0, !dbg !12177
  br i1 %218, label %243, label %219, !dbg !12178

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12179
  %221 = load i32, i32* %220, align 4, !dbg !12179
  %222 = icmp eq i32 %221, 0, !dbg !12182
  br i1 %222, label %233, label %223, !dbg !12183

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12184
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %224, metadata !11951, metadata !DIExpression()), !dbg !11963
  br label %225, !dbg !12187

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12188
  %227 = and i32 %226, 2, !dbg !12188
  %228 = icmp eq i32 %227, 0, !dbg !12189
  br i1 %228, label %229, label %243, !dbg !12187

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !12190
  %231 = sub i32 %230, %224, !dbg !12193
  %232 = icmp ugt i32 %231, 2, !dbg !12194
  br i1 %232, label %385, label %225, !dbg !12195, !llvm.loop !12196

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12198
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !12200
  call void @llvm.dbg.value(metadata i32 %234, metadata !11951, metadata !DIExpression()), !dbg !11963
  br label %235, !dbg !12201

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12202
  %237 = and i32 %236, 2, !dbg !12202
  %238 = icmp eq i32 %237, 0, !dbg !12203
  br i1 %238, label %243, label %239, !dbg !12201

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !12204
  %241 = sub i32 %240, %234, !dbg !12207
  %242 = icmp ugt i32 %241, 2, !dbg !12208
  br i1 %242, label %385, label %235, !dbg !12209, !llvm.loop !12210

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !12212
  %245 = and i32 %244, 4, !dbg !12213
  %246 = icmp eq i32 %245, 0, !dbg !12214
  br i1 %246, label %320, label %247, !dbg !12215

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !11955, metadata !DIExpression()), !dbg !12216
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12217
  %249 = and i32 %248, 268435456, !dbg !12217
  %250 = icmp eq i32 %249, 0, !dbg !12217
  br i1 %250, label %251, label %258, !dbg !12218

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !12219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !12219
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11959, metadata !DIExpression()), !dbg !12219
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12219
  %254 = or i32 %253, 268435456, !dbg !12219
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12219
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12219
  %256 = and i32 %255, 268435456, !dbg !12219
  store volatile i32 %256, i32* %2, align 4, !dbg !12219
  %257 = load volatile i32, i32* %2, align 4, !dbg !12219
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !12220
  call void @llvm.dbg.value(metadata i32 1, metadata !11955, metadata !DIExpression()), !dbg !12216
  br label %258, !dbg !12221

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !11955, metadata !DIExpression()), !dbg !12216
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12222
  %260 = and i32 %259, 256, !dbg !12222
  %261 = icmp eq i32 %260, 0, !dbg !12222
  br i1 %261, label %262, label %274, !dbg !12224

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12225
  %264 = or i32 %263, 256, !dbg !12225
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12225
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !12227
  call void @llvm.dbg.value(metadata i32 %265, metadata !11951, metadata !DIExpression()), !dbg !11963
  br label %266, !dbg !12228

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12229
  %268 = and i32 %267, 256, !dbg !12229
  %269 = icmp eq i32 %268, 0, !dbg !12229
  br i1 %269, label %270, label %274, !dbg !12228

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !12230
  %272 = sub i32 %271, %265, !dbg !12233
  %273 = icmp ugt i32 %272, 100, !dbg !12234
  br i1 %273, label %385, label %266, !dbg !12235, !llvm.loop !12236

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12238
  %276 = load i32, i32* %275, align 4, !dbg !12238
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !12241

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12242
  %279 = or i32 %278, 256, !dbg !12242
  br label %295, !dbg !12242

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12244
  %282 = and i32 %281, -257, !dbg !12244
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12244
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12244
  %284 = and i32 %283, -1025, !dbg !12244
  br label %295, !dbg !12244

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12247
  %287 = or i32 %286, 1024, !dbg !12247
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12247
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12247
  %289 = or i32 %288, 256, !dbg !12247
  br label %295, !dbg !12247

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12250
  %292 = and i32 %291, -257, !dbg !12250
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12250
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12250
  %294 = and i32 %293, -1025, !dbg !12250
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12252
  %297 = load i32, i32* %275, align 4, !dbg !12253
  %298 = icmp eq i32 %297, 0, !dbg !12255
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !12256
  call void @llvm.dbg.value(metadata i32 %299, metadata !11951, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.value(metadata i32 %299, metadata !11951, metadata !DIExpression()), !dbg !11963
  br i1 %298, label %308, label %300, !dbg !12257

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12258
  %302 = and i32 %301, 512, !dbg !12258
  %303 = icmp eq i32 %302, 0, !dbg !12260
  br i1 %303, label %304, label %316, !dbg !12261

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !12262
  %306 = sub i32 %305, %299, !dbg !12265
  %307 = icmp ugt i32 %306, 5000, !dbg !12266
  br i1 %307, label %385, label %300, !dbg !12267, !llvm.loop !12268

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12270
  %310 = and i32 %309, 512, !dbg !12270
  %311 = icmp eq i32 %310, 0, !dbg !12272
  br i1 %311, label %316, label %312, !dbg !12273

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !12274
  %314 = sub i32 %313, %299, !dbg !12277
  %315 = icmp ugt i32 %314, 5000, !dbg !12278
  br i1 %315, label %385, label %308, !dbg !12279, !llvm.loop !12280

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !12282

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12283
  %319 = and i32 %318, -268435457, !dbg !12283
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12283
  br label %320, !dbg !12286

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12287
  %322 = load i32, i32* %321, align 4, !dbg !12287
  %323 = icmp eq i32 %322, 0, !dbg !12289
  br i1 %323, label %384, label %324, !dbg !12290

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !12291
  br i1 %325, label %366, label %326, !dbg !12294

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !12295
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12298
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %328, metadata !11951, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.value(metadata i32 %328, metadata !11951, metadata !DIExpression()), !dbg !11963
  br i1 %327, label %329, label %358, !dbg !12299

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12300
  %331 = and i32 %330, 33554432, !dbg !12300
  %332 = icmp eq i32 %331, 0, !dbg !12302
  br i1 %332, label %337, label %333, !dbg !12303

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !12304
  %335 = sub i32 %334, %328, !dbg !12307
  %336 = icmp ugt i32 %335, 2, !dbg !12308
  br i1 %336, label %385, label %329, !dbg !12309, !llvm.loop !12310

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12312
  %339 = and i32 %338, -16580609, !dbg !12312
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12312
  %341 = load i32, i32* %340, align 4, !dbg !12312
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12312
  %343 = load i32, i32* %342, align 4, !dbg !12312
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12312
  %345 = load i32, i32* %344, align 4, !dbg !12312
  %346 = or i32 %339, %341, !dbg !12312
  %347 = or i32 %346, %343, !dbg !12312
  %348 = or i32 %347, %345, !dbg !12312
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12312
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12313
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !12314
  call void @llvm.dbg.value(metadata i32 %349, metadata !11951, metadata !DIExpression()), !dbg !11963
  br label %350, !dbg !12315

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12316
  %352 = and i32 %351, 33554432, !dbg !12316
  %353 = icmp eq i32 %352, 0, !dbg !12317
  br i1 %353, label %354, label %384, !dbg !12315

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !12318
  %356 = sub i32 %355, %349, !dbg !12321
  %357 = icmp ugt i32 %356, 2, !dbg !12322
  br i1 %357, label %385, label %350, !dbg !12323, !llvm.loop !12324

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12326
  %360 = and i32 %359, 33554432, !dbg !12326
  %361 = icmp eq i32 %360, 0, !dbg !12328
  br i1 %361, label %384, label %362, !dbg !12329

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !12330
  %364 = sub i32 %363, %328, !dbg !12333
  %365 = icmp ugt i32 %364, 2, !dbg !12334
  br i1 %365, label %385, label %358, !dbg !12335, !llvm.loop !12336

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !12338
  br i1 %367, label %385, label %368, !dbg !12341

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12342
  call void @llvm.dbg.value(metadata i32 %369, metadata !11954, metadata !DIExpression()), !dbg !11963
  %370 = and i32 %369, 65536, !dbg !12344
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12346
  %372 = load i32, i32* %371, align 4, !dbg !12346
  %373 = icmp eq i32 %370, %372, !dbg !12347
  br i1 %373, label %374, label %385, !dbg !12348

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !12349
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12350
  %377 = load i32, i32* %376, align 4, !dbg !12350
  %378 = icmp eq i32 %375, %377, !dbg !12351
  br i1 %378, label %379, label %385, !dbg !12352

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !12353
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12354
  %382 = load i32, i32* %381, align 4, !dbg !12354
  %383 = icmp eq i32 %380, %382, !dbg !12355
  br i1 %383, label %384, label %385, !dbg !12356

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !12357

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !11963
  ret i32 %386, !dbg !12358
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #14 !dbg !12359 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12361, metadata !DIExpression()), !dbg !12370
  call void @llvm.dbg.value(metadata i32 0, metadata !12363, metadata !DIExpression()), !dbg !12370
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12371
  %4 = and i32 %3, 240, !dbg !12371
  %5 = icmp eq i32 %4, 0, !dbg !12372
  br i1 %5, label %6, label %31, !dbg !12373

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12374
  %8 = and i32 %7, 268435456, !dbg !12374
  %9 = icmp eq i32 %8, 0, !dbg !12374
  br i1 %9, label %12, label %10, !dbg !12375

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12376
  call void @llvm.dbg.value(metadata i32 %11, metadata !12362, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12370
  br label %22, !dbg !12378

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !12379
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !12379
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12364, metadata !DIExpression()), !dbg !12379
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12379
  %15 = or i32 %14, 268435456, !dbg !12379
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12379
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12379
  %17 = and i32 %16, 268435456, !dbg !12379
  store volatile i32 %17, i32* %2, align 4, !dbg !12379
  %18 = load volatile i32, i32* %2, align 4, !dbg !12379
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !12380
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12381
  call void @llvm.dbg.value(metadata i32 %19, metadata !12362, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12370
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12382
  %21 = and i32 %20, -268435457, !dbg !12382
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12382
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !12383
  call void @llvm.dbg.value(metadata i32 %24, metadata !12362, metadata !DIExpression()), !dbg !12370
  %25 = icmp eq i32 %24, 6144, !dbg !12384
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !12386
  call void @llvm.dbg.value(metadata i32 undef, metadata !12363, metadata !DIExpression()), !dbg !12370
  br i1 %27, label %28, label %31, !dbg !12387

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12389
  %30 = or i32 %29, 4, !dbg !12389
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12389
  br label %31, !dbg !12389

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12387
  %34 = and i32 %33, -2, !dbg !12387
  %35 = or i32 %34, %32, !dbg !12387
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12387
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12392
  %37 = and i32 %36, 1, !dbg !12392
  %38 = xor i32 %37, %32, !dbg !12370
  ret i32 %38, !dbg !12394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12395 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12408, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata i32 %1, metadata !12409, metadata !DIExpression()), !dbg !12412
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12413
  br i1 %3, label %136, label %4, !dbg !12415

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12416
  %6 = and i32 %5, 1, !dbg !12416
  %7 = icmp ult i32 %6, %1, !dbg !12418
  br i1 %7, label %8, label %20, !dbg !12419

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !12420
  br i1 %9, label %10, label %13, !dbg !12424

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12425
  %12 = or i32 %11, 4, !dbg !12425
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12425
  br label %13, !dbg !12425

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12424
  %15 = and i32 %14, -2, !dbg !12424
  %16 = or i32 %15, %1, !dbg !12424
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12424
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12427
  %18 = and i32 %17, 1, !dbg !12427
  %19 = icmp eq i32 %18, %1, !dbg !12429
  br i1 %19, label %20, label %136, !dbg !12430

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12431
  %22 = load i32, i32* %21, align 4, !dbg !12431
  %23 = and i32 %22, 2, !dbg !12433
  %24 = icmp eq i32 %23, 0, !dbg !12434
  br i1 %24, label %32, label %25, !dbg !12435

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12436
  %27 = and i32 %26, -241, !dbg !12436
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12436
  %29 = load i32, i32* %28, align 4, !dbg !12436
  %30 = or i32 %27, %29, !dbg !12436
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12436
  %31 = load i32, i32* %21, align 4, !dbg !12438
  br label %32, !dbg !12440

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !12438
  %34 = and i32 %33, 1, !dbg !12441
  %35 = icmp eq i32 %34, 0, !dbg !12442
  br i1 %35, label %93, label %36, !dbg !12443

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12444
  %38 = load i32, i32* %37, align 4, !dbg !12444
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !12447

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12448
  %41 = and i32 %40, 131072, !dbg !12448
  %42 = icmp eq i32 %41, 0, !dbg !12451
  br i1 %42, label %136, label %55, !dbg !12452

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12453
  %45 = and i32 %44, 33554432, !dbg !12453
  %46 = icmp eq i32 %45, 0, !dbg !12457
  br i1 %46, label %136, label %55, !dbg !12458

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12459
  %49 = and i32 %48, 2, !dbg !12459
  %50 = icmp eq i32 %49, 0, !dbg !12463
  br i1 %50, label %136, label %55, !dbg !12464

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12465
  %53 = and i32 %52, 512, !dbg !12465
  %54 = icmp eq i32 %53, 0, !dbg !12468
  br i1 %54, label %136, label %55, !dbg !12469

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12470
  %57 = and i32 %56, -4, !dbg !12470
  %58 = or i32 %57, %38, !dbg !12470
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12470
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !12471
  call void @llvm.dbg.value(metadata i32 %59, metadata !12410, metadata !DIExpression()), !dbg !12412
  %60 = load i32, i32* %37, align 4, !dbg !12472
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !12474

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12475
  %63 = and i32 %62, 12, !dbg !12475
  %64 = icmp eq i32 %63, 8, !dbg !12477
  br i1 %64, label %93, label %65, !dbg !12478

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12479
  %67 = sub i32 %66, %59, !dbg !12482
  %68 = icmp ugt i32 %67, 5000, !dbg !12483
  br i1 %68, label %136, label %61, !dbg !12484, !llvm.loop !12485

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12487
  %71 = and i32 %70, 12, !dbg !12487
  %72 = icmp eq i32 %71, 12, !dbg !12490
  br i1 %72, label %93, label %73, !dbg !12491

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !12492
  %75 = sub i32 %74, %59, !dbg !12495
  %76 = icmp ugt i32 %75, 5000, !dbg !12496
  br i1 %76, label %136, label %69, !dbg !12497, !llvm.loop !12498

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12500
  %79 = and i32 %78, 12, !dbg !12500
  %80 = icmp eq i32 %79, 4, !dbg !12503
  br i1 %80, label %93, label %81, !dbg !12504

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12505
  %83 = sub i32 %82, %59, !dbg !12508
  %84 = icmp ugt i32 %83, 5000, !dbg !12509
  br i1 %84, label %136, label %77, !dbg !12510, !llvm.loop !12511

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12513
  %87 = and i32 %86, 12, !dbg !12513
  %88 = icmp eq i32 %87, 0, !dbg !12515
  br i1 %88, label %93, label %89, !dbg !12516

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !12517
  %91 = sub i32 %90, %59, !dbg !12520
  %92 = icmp ugt i32 %91, 5000, !dbg !12521
  br i1 %92, label %136, label %85, !dbg !12522, !llvm.loop !12523

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12525
  %95 = and i32 %94, 1, !dbg !12525
  %96 = icmp ugt i32 %95, %1, !dbg !12527
  br i1 %96, label %97, label %103, !dbg !12528

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12529
  %99 = and i32 %98, -2, !dbg !12529
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12529
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12532
  %101 = and i32 %100, 1, !dbg !12532
  %102 = icmp eq i32 %101, 0, !dbg !12534
  br i1 %102, label %103, label %136, !dbg !12535

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !12536
  %105 = and i32 %104, 4, !dbg !12538
  %106 = icmp eq i32 %105, 0, !dbg !12539
  br i1 %106, label %114, label %107, !dbg !12540

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12541
  %109 = and i32 %108, -1793, !dbg !12541
  %110 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12541
  %111 = load i32, i32* %110, align 4, !dbg !12541
  %112 = or i32 %109, %111, !dbg !12541
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12541
  %113 = load i32, i32* %21, align 4, !dbg !12543
  br label %114, !dbg !12545

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !12543
  %116 = and i32 %115, 8, !dbg !12546
  %117 = icmp eq i32 %116, 0, !dbg !12547
  br i1 %117, label %125, label %118, !dbg !12548

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12549
  %120 = and i32 %119, -14337, !dbg !12549
  %121 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12549
  %122 = load i32, i32* %121, align 4, !dbg !12549
  %123 = shl i32 %122, 3, !dbg !12549
  %124 = or i32 %123, %120, !dbg !12549
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12549
  br label %125, !dbg !12551

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12552
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12553
  %128 = lshr i32 %127, 4, !dbg !12554
  %129 = and i32 %128, 15, !dbg !12554
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !12555
  %131 = load i8, i8* %130, align 1, !dbg !12555
  %132 = zext i8 %131 to i32, !dbg !12555
  %133 = lshr i32 %126, %132, !dbg !12556
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !12557
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !12558
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !12559
  call void @llvm.dbg.value(metadata i32 %135, metadata !12411, metadata !DIExpression()), !dbg !12412
  br label %136, !dbg !12560

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !12412
  ret i32 %137, !dbg !12561
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !12562 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12570
  call void @llvm.dbg.value(metadata i32 %1, metadata !12564, metadata !DIExpression()), !dbg !12571
  %2 = lshr i32 %1, 2, !dbg !12572
  %3 = and i32 %2, 3, !dbg !12572
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !12572

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12569, metadata !DIExpression()), !dbg !12571
  br label %26, !dbg !12573

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !12576
  %7 = and i32 %6, 15, !dbg !12576
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !12578
  %9 = load i8, i8* %8, align 1, !dbg !12578
  call void @llvm.dbg.value(metadata i8 %9, metadata !12565, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12571
  %10 = lshr i32 %1, 22, !dbg !12579
  %11 = and i32 %10, 3, !dbg !12579
  %12 = add nuw nsw i32 %11, 1, !dbg !12580
  call void @llvm.dbg.value(metadata i32 %12, metadata !12566, metadata !DIExpression()), !dbg !12571
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12581
  %14 = and i32 %13, 65536, !dbg !12581
  %15 = icmp eq i32 %14, 0, !dbg !12583
  %16 = zext i8 %9 to i32, !dbg !12584
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !12584
  %18 = mul nuw i32 %17, %16, !dbg !12584
  %19 = udiv i32 %18, %12, !dbg !12585
  call void @llvm.dbg.value(metadata i32 %19, metadata !12567, metadata !DIExpression()), !dbg !12571
  call void @llvm.dbg.value(metadata i32 %19, metadata !12569, metadata !DIExpression()), !dbg !12571
  br label %26, !dbg !12586

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12587
  %23 = lshr i32 %22, 13, !dbg !12589
  %24 = and i32 %23, 7, !dbg !12589
  call void @llvm.dbg.value(metadata i32 %24, metadata !12568, metadata !DIExpression()), !dbg !12571
  %25 = shl nuw nsw i32 65536, %24, !dbg !12590
  call void @llvm.dbg.value(metadata i32 %25, metadata !12569, metadata !DIExpression()), !dbg !12571
  br label %26, !dbg !12591

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !12592
  call void @llvm.dbg.value(metadata i32 %27, metadata !12569, metadata !DIExpression()), !dbg !12571
  ret i32 %27, !dbg !12593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12594 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12596, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 %1, metadata !12597, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 %2, metadata !12598, metadata !DIExpression()), !dbg !12611
  %6 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12612
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12612
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12599, metadata !DIExpression()), !dbg !12613
  %7 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12614
  store i32 2, i32* %7, align 4, !dbg !12615
  %8 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12616
  store i32 2, i32* %8, align 4, !dbg !12617
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12618
  store i32 0, i32* %9, align 4, !dbg !12619
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12620
  store i32 256, i32* %10, align 4, !dbg !12621
  %11 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12622
  store i32 0, i32* %11, align 4, !dbg !12623
  %12 = bitcast i32* %5 to i8*, !dbg !12624
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !12624
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12609, metadata !DIExpression()), !dbg !12624
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12624
  %14 = or i32 %13, 1, !dbg !12624
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12624
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12624
  %16 = and i32 %15, 1, !dbg !12624
  store volatile i32 %16, i32* %5, align 4, !dbg !12624
  %17 = load volatile i32, i32* %5, align 4, !dbg !12624
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !12625
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12626
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12627
  %19 = and i32 %18, -1996488705, !dbg !12627
  %20 = or i32 %2, %1, !dbg !12627
  %21 = or i32 %20, %19, !dbg !12627
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12627
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12628
  ret void, !dbg !12628
}

; Function Attrs: optsize
declare !dbg !12629 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12633 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12634
  ret void, !dbg !12635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12636 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12637
  ret void, !dbg !12638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12639 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12640
  ret i32 %1, !dbg !12641
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !12642 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12643
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12644
  %3 = lshr i32 %2, 8, !dbg !12645
  %4 = and i32 %3, 7, !dbg !12645
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12646
  %6 = load i8, i8* %5, align 1, !dbg !12646
  %7 = zext i8 %6 to i32, !dbg !12646
  %8 = lshr i32 %1, %7, !dbg !12647
  ret i32 %8, !dbg !12648
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !12649 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12650
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12651
  %3 = lshr i32 %2, 11, !dbg !12652
  %4 = and i32 %3, 7, !dbg !12652
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12653
  %6 = load i8, i8* %5, align 1, !dbg !12653
  %7 = zext i8 %6 to i32, !dbg !12653
  %8 = lshr i32 %1, %7, !dbg !12654
  ret i32 %8, !dbg !12655
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !12656 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12660, metadata !DIExpression()), !dbg !12661
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12662
  store i32 31, i32* %2, align 4, !dbg !12663
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12664
  %4 = and i32 %3, 262144, !dbg !12666
  %5 = icmp eq i32 %4, 0, !dbg !12667
  br i1 %5, label %8, label %6, !dbg !12668

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12669
  store i32 5, i32* %7, align 4, !dbg !12671
  br label %15, !dbg !12672

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12673
  %10 = and i32 %9, 65536, !dbg !12675
  %11 = icmp eq i32 %10, 0, !dbg !12676
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12677
  br i1 %11, label %14, label %13, !dbg !12678

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !12679
  br label %15, !dbg !12681

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12682
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12684
  %17 = and i32 %16, 1, !dbg !12686
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12687
  store i32 %17, i32* %18, align 4, !dbg !12689
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12690
  %20 = lshr i32 %19, 8, !dbg !12691
  %21 = and i32 %20, 31, !dbg !12691
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12692
  store i32 %21, i32* %22, align 4, !dbg !12693
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12694
  %24 = lshr i32 %23, 8, !dbg !12696
  %25 = and i32 %24, 1, !dbg !12696
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12697
  store i32 %25, i32* %26, align 4, !dbg !12699
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12700
  %28 = lshr i32 %27, 24, !dbg !12701
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12702
  store i32 %28, i32* %29, align 4, !dbg !12703
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12704
  %31 = and i32 %30, 57344, !dbg !12705
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12706
  store i32 %31, i32* %32, align 4, !dbg !12707
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12708
  %34 = and i32 %33, 1024, !dbg !12710
  %35 = icmp eq i32 %34, 0, !dbg !12711
  br i1 %35, label %38, label %36, !dbg !12712

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12713
  store i32 5, i32* %37, align 4, !dbg !12715
  br label %45, !dbg !12716

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12717
  %40 = and i32 %39, 256, !dbg !12719
  %41 = icmp eq i32 %40, 0, !dbg !12720
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12721
  br i1 %41, label %44, label %43, !dbg !12722

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !12723
  br label %45, !dbg !12725

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !12726
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12728
  %47 = and i32 %46, 1, !dbg !12730
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12731
  store i32 %47, i32* %48, align 4, !dbg !12733
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12734
  %50 = and i32 %49, 16777216, !dbg !12736
  %51 = icmp eq i32 %50, 0, !dbg !12737
  %52 = select i1 %51, i32 1, i32 2, !dbg !12738
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12739
  store i32 %52, i32* %53, align 4, !dbg !12741
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12742
  %55 = and i32 %54, 65536, !dbg !12743
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12744
  store i32 %55, i32* %56, align 4, !dbg !12745
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12746
  %58 = and i32 %57, 3932160, !dbg !12747
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12748
  store i32 %58, i32* %59, align 4, !dbg !12749
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12750
  %61 = and i32 %60, 12582912, !dbg !12751
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12752
  store i32 %61, i32* %62, align 4, !dbg !12753
  ret void, !dbg !12754
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12755 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12759, metadata !DIExpression()), !dbg !12761
  call void @llvm.dbg.value(metadata i32* %1, metadata !12760, metadata !DIExpression()), !dbg !12761
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12762
  store i32 15, i32* %3, align 4, !dbg !12763
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12764
  %5 = and i32 %4, 3, !dbg !12765
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12766
  store i32 %5, i32* %6, align 4, !dbg !12767
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12768
  %8 = and i32 %7, 240, !dbg !12769
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12770
  store i32 %8, i32* %9, align 4, !dbg !12771
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12772
  %11 = and i32 %10, 1792, !dbg !12773
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12774
  store i32 %11, i32* %12, align 4, !dbg !12775
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12776
  %14 = lshr i32 %13, 3, !dbg !12777
  %15 = and i32 %14, 1792, !dbg !12777
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12778
  store i32 %15, i32* %16, align 4, !dbg !12779
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12780
  %18 = and i32 %17, 1, !dbg !12780
  store i32 %18, i32* %1, align 4, !dbg !12781
  ret void, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12783 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12784
  %2 = and i32 %1, 128, !dbg !12784
  %3 = icmp eq i32 %2, 0, !dbg !12784
  br i1 %3, label %5, label %4, !dbg !12786

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12787
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12789
  br label %5, !dbg !12790

5:                                                ; preds = %4, %0
  ret void, !dbg !12791
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12792 {
  ret void, !dbg !12793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12797, metadata !DIExpression()), !dbg !12798
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12799
  ret void, !dbg !12800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12804, metadata !DIExpression()), !dbg !12806
  call void @llvm.dbg.value(metadata i32 1000, metadata !12805, metadata !DIExpression()), !dbg !12806
  %2 = udiv i32 %0, 1000, !dbg !12807
  %3 = add nsw i32 %2, -1, !dbg !12808
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12809
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12810
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12811
  ret void, !dbg !12812
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #14 !dbg !12813 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12815, metadata !DIExpression()), !dbg !12818
  %3 = bitcast i32* %2 to i8*, !dbg !12819
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12819
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12816, metadata !DIExpression()), !dbg !12820
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12821
  store volatile i32 %4, i32* %2, align 4, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %0, metadata !12817, metadata !DIExpression()), !dbg !12818
  %5 = load volatile i32, i32* %2, align 4, !dbg !12822
  %6 = icmp eq i32 %0, -1, !dbg !12823
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12817, metadata !DIExpression()), !dbg !12818
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12818
  call void @llvm.dbg.value(metadata i32 %8, metadata !12817, metadata !DIExpression()), !dbg !12818
  br label %9, !dbg !12825

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12817, metadata !DIExpression()), !dbg !12818
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12826
  call void @llvm.dbg.value(metadata i32 undef, metadata !12817, metadata !DIExpression()), !dbg !12818
  %12 = shl i32 %11, 15, !dbg !12818
  %13 = ashr i32 %12, 31, !dbg !12818
  %14 = add i32 %13, %10, !dbg !12818
  call void @llvm.dbg.value(metadata i32 %14, metadata !12817, metadata !DIExpression()), !dbg !12818
  %15 = icmp eq i32 %14, 0, !dbg !12829
  br i1 %15, label %16, label %9, !dbg !12825

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12830
  ret void, !dbg !12830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12833, metadata !DIExpression()), !dbg !12834
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12835
  ret void, !dbg !12836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12842, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.value(metadata i32 0, metadata !12843, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.value(metadata i32 0, metadata !12844, metadata !DIExpression()), !dbg !12845
  %2 = add i32 %0, -32000001, !dbg !12846
  %3 = icmp ult i32 %2, -32000000, !dbg !12846
  br i1 %3, label %22, label %4, !dbg !12846

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12848
  %6 = icmp eq i32 %5, 2048, !dbg !12851
  br i1 %6, label %7, label %9, !dbg !12852

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !12853
  call void @llvm.dbg.value(metadata i32 undef, metadata !12844, metadata !DIExpression()), !dbg !12845
  br i1 %8, label %16, label %17, !dbg !12856

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12857
  %11 = icmp eq i32 %10, 4096, !dbg !12859
  br i1 %11, label %12, label %14, !dbg !12860

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !12861
  call void @llvm.dbg.value(metadata i32 undef, metadata !12844, metadata !DIExpression()), !dbg !12845
  br i1 %13, label %16, label %17, !dbg !12856

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !12864
  call void @llvm.dbg.value(metadata i32 undef, metadata !12844, metadata !DIExpression()), !dbg !12845
  br i1 %15, label %16, label %17, !dbg !12856

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #24, !dbg !12867
  br label %17, !dbg !12870

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #24, !dbg !12871
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12872
  %20 = icmp ne i32 %19, %18, !dbg !12874
  %21 = zext i1 %20 to i32, !dbg !12875
  br label %22, !dbg !12875

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !12845
  call void @llvm.dbg.value(metadata i32 %23, metadata !12843, metadata !DIExpression()), !dbg !12845
  ret i32 %23, !dbg !12876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12877 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12878
  %2 = and i32 %1, 6144, !dbg !12878
  ret i32 %2, !dbg !12879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #15 !dbg !12880 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12881
  %2 = or i32 %1, 4, !dbg !12881
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12881
  ret void, !dbg !12882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12885, metadata !DIExpression()), !dbg !12886
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12887
  %3 = and i32 %2, -2, !dbg !12887
  %4 = or i32 %3, %0, !dbg !12887
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12887
  ret void, !dbg !12888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12889 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12890
  %2 = and i32 %1, 1, !dbg !12890
  ret i32 %2, !dbg !12891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12892 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12909, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12910, metadata !DIExpression()), !dbg !12913
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12914
  %4 = icmp eq i32 %3, 0, !dbg !12916
  br i1 %4, label %5, label %19, !dbg !12917

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #24, !dbg !12918
  call void @llvm.dbg.value(metadata i32 %6, metadata !12912, metadata !DIExpression()), !dbg !12913
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.216() #24, !dbg !12920
  %8 = icmp eq i32 %7, 1, !dbg !12922
  br i1 %8, label %13, label %9, !dbg !12923

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.217() #24, !dbg !12924
  br label %10, !dbg !12926

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.216() #24, !dbg !12927
  %12 = icmp eq i32 %11, 1, !dbg !12928
  br i1 %12, label %13, label %10, !dbg !12926, !llvm.loop !12929

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !12931
  %15 = load i32, i32* %14, align 4, !dbg !12931
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !12932
  %17 = load i32, i32* %16, align 4, !dbg !12932
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef 0, i32 noundef %15, i32 noundef %17) #24, !dbg !12933
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12934
  call void @llvm.dbg.value(metadata i32 %18, metadata !12911, metadata !DIExpression()), !dbg !12913
  br label %19, !dbg !12935

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !12936
  call void @llvm.dbg.value(metadata i32 %20, metadata !12911, metadata !DIExpression()), !dbg !12913
  ret i32 %20, !dbg !12937
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12938 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12942, metadata !DIExpression()), !dbg !12943
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.220() #24, !dbg !12944
  %2 = icmp ne i32 %1, 0, !dbg !12946
  %3 = zext i1 %2 to i32, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %3, metadata !12942, metadata !DIExpression()), !dbg !12943
  ret i32 %3, !dbg !12948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12953, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !12954, metadata !DIExpression()), !dbg !12956
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !12957
  %4 = load i32, i32* %3, align 4, !dbg !12957
  %5 = lshr i32 %4, 18, !dbg !12958
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !12959
  %7 = load i8, i8* %6, align 1, !dbg !12959
  %8 = zext i8 %7 to i32, !dbg !12960
  %9 = mul i32 %8, %0, !dbg !12961
  call void @llvm.dbg.value(metadata i32 %9, metadata !12955, metadata !DIExpression()), !dbg !12956
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !12962
  %11 = load i32, i32* %10, align 4, !dbg !12962
  %12 = lshr i32 %11, 22, !dbg !12963
  %13 = add nuw nsw i32 %12, 1, !dbg !12964
  %14 = udiv i32 %9, %13, !dbg !12965
  call void @llvm.dbg.value(metadata i32 %14, metadata !12955, metadata !DIExpression()), !dbg !12956
  ret i32 %14, !dbg !12966
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.216() unnamed_addr #16 !dbg !12967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12968
  %2 = lshr i32 %1, 1, !dbg !12969
  %3 = and i32 %2, 1, !dbg !12969
  ret i32 %3, !dbg !12970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.217() unnamed_addr #15 !dbg !12971 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12972
  %2 = or i32 %1, 1, !dbg !12972
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12972
  ret void, !dbg !12973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12976, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 %1, metadata !12977, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 %2, metadata !12978, metadata !DIExpression()), !dbg !12979
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12980
  %5 = and i32 %4, -16580609, !dbg !12980
  %6 = or i32 %1, %0, !dbg !12980
  %7 = or i32 %6, %2, !dbg !12980
  %8 = or i32 %7, %5, !dbg !12980
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12980
  ret void, !dbg !12981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12986, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12987, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 0, metadata !12988, metadata !DIExpression()), !dbg !12990
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12991
  %4 = load i32, i32* %3, align 4, !dbg !12991
  %5 = lshr i32 %4, 4, !dbg !12991
  %6 = and i32 %5, 15, !dbg !12991
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12991
  %8 = load i8, i8* %7, align 1, !dbg !12991
  %9 = zext i8 %8 to i32, !dbg !12991
  %10 = lshr i32 %0, %9, !dbg !12991
  call void @llvm.dbg.value(metadata i32 %10, metadata !12989, metadata !DIExpression()), !dbg !12990
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12992
  %12 = icmp ult i32 %11, %10, !dbg !12994
  br i1 %12, label %13, label %16, !dbg !12995

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12996
  call void @llvm.dbg.value(metadata i32 %14, metadata !12988, metadata !DIExpression()), !dbg !12990
  %15 = icmp eq i32 %14, 0, !dbg !12998
  br i1 %15, label %16, label %30, !dbg !13000

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.219() #24, !dbg !13001
  br label %17, !dbg !13003

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.220() #24, !dbg !13004
  %19 = icmp eq i32 %18, 1, !dbg !13005
  br i1 %19, label %20, label %17, !dbg !13003, !llvm.loop !13006

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13008
  tail call fastcc void @LL_RCC_SetAHBPrescaler.221(i32 noundef %21) #24, !dbg !13009
  tail call fastcc void @LL_RCC_SetSysClkSource.222() #24, !dbg !13010
  br label %22, !dbg !13011

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.223() #24, !dbg !13012
  %24 = icmp eq i32 %23, 12, !dbg !13013
  br i1 %24, label %25, label %22, !dbg !13011, !llvm.loop !13014

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !13016
  %27 = load i32, i32* %26, align 4, !dbg !13016
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.224(i32 noundef %27) #24, !dbg !13017
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !13018
  %29 = load i32, i32* %28, align 4, !dbg !13018
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.225(i32 noundef %29) #24, !dbg !13019
  br label %30, !dbg !13020

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13021
  %33 = icmp ugt i32 %32, %10, !dbg !13023
  br i1 %33, label %34, label %36, !dbg !13024

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %35, metadata !12988, metadata !DIExpression()), !dbg !12990
  br label %36, !dbg !13027

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12990
  call void @llvm.dbg.value(metadata i32 %37, metadata !12988, metadata !DIExpression()), !dbg !12990
  %38 = icmp eq i32 %37, 0, !dbg !13028
  br i1 %38, label %39, label %40, !dbg !13030

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13031
  br label %40, !dbg !13033

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.219() unnamed_addr #15 !dbg !13035 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13036
  %2 = or i32 %1, 16777216, !dbg !13036
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13036
  ret void, !dbg !13037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.220() unnamed_addr #16 !dbg !13038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13039
  %2 = lshr i32 %1, 25, !dbg !13040
  %3 = and i32 %2, 1, !dbg !13040
  ret i32 %3, !dbg !13041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.221(i32 noundef %0) unnamed_addr #15 !dbg !13042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13044, metadata !DIExpression()), !dbg !13045
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13046
  %3 = and i32 %2, -241, !dbg !13046
  %4 = or i32 %3, %0, !dbg !13046
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13046
  ret void, !dbg !13047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.222() unnamed_addr #15 !dbg !13048 {
  call void @llvm.dbg.value(metadata i32 3, metadata !13050, metadata !DIExpression()), !dbg !13051
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13052
  %2 = or i32 %1, 3, !dbg !13052
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13052
  ret void, !dbg !13053
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.223() unnamed_addr #16 !dbg !13054 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13055
  %2 = and i32 %1, 12, !dbg !13055
  ret i32 %2, !dbg !13056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.224(i32 noundef %0) unnamed_addr #15 !dbg !13057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13059, metadata !DIExpression()), !dbg !13060
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13061
  %3 = and i32 %2, -1793, !dbg !13061
  %4 = or i32 %3, %0, !dbg !13061
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.225(i32 noundef %0) unnamed_addr #15 !dbg !13063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13065, metadata !DIExpression()), !dbg !13066
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13067
  %3 = and i32 %2, -14337, !dbg !13067
  %4 = or i32 %3, %0, !dbg !13067
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13067
  ret void, !dbg !13068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13073, metadata !DIExpression()), !dbg !13079
  call void @llvm.dbg.value(metadata i32 %1, metadata !13074, metadata !DIExpression()), !dbg !13079
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !13075, metadata !DIExpression()), !dbg !13079
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !13076, metadata !DIExpression()), !dbg !13079
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13080
  %6 = icmp eq i32 %5, 0, !dbg !13082
  br i1 %6, label %7, label %25, !dbg !13083

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #24, !dbg !13084
  call void @llvm.dbg.value(metadata i32 %8, metadata !13078, metadata !DIExpression()), !dbg !13079
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !13086
  %10 = icmp eq i32 %9, 1, !dbg !13088
  br i1 %10, label %19, label %11, !dbg !13089

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13090
  br i1 %12, label %13, label %14, !dbg !13093

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13094
  br label %15, !dbg !13096

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !13097
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !13099
  br label %16, !dbg !13100

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !13101
  %18 = icmp eq i32 %17, 1, !dbg !13102
  br i1 %18, label %19, label %16, !dbg !13100, !llvm.loop !13103

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !13105
  %21 = load i32, i32* %20, align 4, !dbg !13105
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !13106
  %23 = load i32, i32* %22, align 4, !dbg !13106
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #24, !dbg !13107
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %24, metadata !13077, metadata !DIExpression()), !dbg !13079
  br label %25, !dbg !13109

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !13110
  call void @llvm.dbg.value(metadata i32 %26, metadata !13077, metadata !DIExpression()), !dbg !13079
  ret i32 %26, !dbg !13111
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !13112 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13113
  %2 = lshr i32 %1, 17, !dbg !13114
  %3 = and i32 %2, 1, !dbg !13114
  ret i32 %3, !dbg !13115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13116 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13117
  %2 = or i32 %1, 262144, !dbg !13117
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13117
  ret void, !dbg !13118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !13119 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13120
  %2 = and i32 %1, -262145, !dbg !13120
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13120
  ret void, !dbg !13121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !13122 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13123
  %2 = or i32 %1, 65536, !dbg !13123
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13123
  ret void, !dbg !13124
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13125 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13128, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 undef, metadata !13128, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 undef, metadata !13128, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13144
  ret void, !dbg !13145
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13146 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13150, metadata !DIExpression()), !dbg !13152
  %2 = icmp eq i8* %0, null, !dbg !13153
  br i1 %2, label %29, label %3, !dbg !13155

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13156
  %5 = icmp eq i8 %4, 0, !dbg !13157
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13158
  br i1 %6, label %29, label %8, !dbg !13158

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13151, metadata !DIExpression()), !dbg !13152
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13159

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13151, metadata !DIExpression()), !dbg !13152
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13161
  br i1 %10, label %11, label %15, !dbg !13166

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13167
  %13 = load i8*, i8** %12, align 4, !dbg !13167
  %14 = icmp eq i8* %13, %0, !dbg !13168
  br i1 %14, label %29, label %15, !dbg !13169

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13170
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13151, metadata !DIExpression()), !dbg !13152
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13171
  br i1 %17, label %7, label %8, !dbg !13172, !llvm.loop !13173

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13151, metadata !DIExpression()), !dbg !13152
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13175
  br i1 %20, label %21, label %26, !dbg !13179

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13180
  %23 = load i8*, i8** %22, align 4, !dbg !13180
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13181
  %25 = icmp eq i32 %24, 0, !dbg !13182
  br i1 %25, label %29, label %26, !dbg !13183

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13184
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13151, metadata !DIExpression()), !dbg !13152
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13185
  br i1 %28, label %29, label %18, !dbg !13159, !llvm.loop !13186

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13152
  ret %struct.device* %30, !dbg !13188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13189 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %2 = icmp eq %struct.device* %0, null, !dbg !13195
  br i1 %2, label %14, label %3, !dbg !13197

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13198
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13198
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13199
  %7 = load i8, i8* %6, align 1, !dbg !13199
  %8 = and i8 %7, 1, !dbg !13199
  %9 = icmp eq i8 %8, 0, !dbg !13199
  br i1 %9, label %14, label %10, !dbg !13200

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13201
  %12 = load i8, i8* %11, align 1, !dbg !13201
  %13 = icmp eq i8 %12, 0, !dbg !13202
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13194
  ret i1 %15, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13204 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13209, metadata !DIExpression()), !dbg !13210
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13211
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13213 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13221, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13222, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.value(metadata i8* %2, metadata !13223, metadata !DIExpression()), !dbg !13226
  %5 = bitcast i32* %4 to i8*, !dbg !13227
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13227
  call void @llvm.dbg.value(metadata i32 0, metadata !13224, metadata !DIExpression()), !dbg !13226
  store i32 0, i32* %4, align 4, !dbg !13228
  call void @llvm.dbg.value(metadata i32* %4, metadata !13224, metadata !DIExpression(DW_OP_deref)), !dbg !13226
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13229
  call void @llvm.dbg.value(metadata i16* %6, metadata !13225, metadata !DIExpression()), !dbg !13226
  %7 = load i32, i32* %4, align 4, !dbg !13230
  call void @llvm.dbg.value(metadata i32 %7, metadata !13224, metadata !DIExpression()), !dbg !13226
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13231
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13232
  ret i32 %8, !dbg !13233
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13234 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13238, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.value(metadata i32* %1, metadata !13239, metadata !DIExpression()), !dbg !13244
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13245
  %4 = load i16*, i16** %3, align 4, !dbg !13245
  call void @llvm.dbg.value(metadata i16* %4, metadata !13240, metadata !DIExpression()), !dbg !13244
  %5 = icmp eq i16* %4, null, !dbg !13246
  br i1 %5, label %14, label %6, !dbg !13247

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13248
  call void @llvm.dbg.value(metadata i32 %7, metadata !13241, metadata !DIExpression()), !dbg !13248
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13249
  %9 = load i16, i16* %8, align 2, !dbg !13249
  %10 = add i16 %9, -32767, !dbg !13250
  %11 = icmp ult i16 %10, 2, !dbg !13250
  %12 = add i32 %7, 1, !dbg !13251
  call void @llvm.dbg.value(metadata i32 %12, metadata !13241, metadata !DIExpression()), !dbg !13248
  br i1 %11, label %13, label %6, !dbg !13250, !llvm.loop !13253

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13256
  br label %14, !dbg !13257

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13259 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13263, metadata !DIExpression()), !dbg !13274
  call void @llvm.dbg.value(metadata i32 %1, metadata !13264, metadata !DIExpression()), !dbg !13274
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13265, metadata !DIExpression()), !dbg !13274
  call void @llvm.dbg.value(metadata i8* %3, metadata !13266, metadata !DIExpression()), !dbg !13274
  call void @llvm.dbg.value(metadata i32 0, metadata !13267, metadata !DIExpression()), !dbg !13275
  %5 = icmp eq i32 %1, 0, !dbg !13276
  br i1 %5, label %16, label %8, !dbg !13277

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13267, metadata !DIExpression()), !dbg !13275
  %7 = icmp eq i32 %15, %1, !dbg !13276
  br i1 %7, label %16, label %8, !dbg !13277, !llvm.loop !13278

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13267, metadata !DIExpression()), !dbg !13275
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13280
  %11 = load i16, i16* %10, align 2, !dbg !13280
  call void @llvm.dbg.value(metadata i16 %11, metadata !13269, metadata !DIExpression()), !dbg !13281
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13282
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13272, metadata !DIExpression()), !dbg !13281
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13283
  call void @llvm.dbg.value(metadata i32 %13, metadata !13273, metadata !DIExpression()), !dbg !13281
  %14 = icmp slt i32 %13, 0, !dbg !13284
  %15 = add nuw i32 %9, 1, !dbg !13286
  call void @llvm.dbg.value(metadata i32 %15, metadata !13267, metadata !DIExpression()), !dbg !13275
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !13288 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13292, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13293, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13294, metadata !DIExpression()), !dbg !13295
  %2 = sext i16 %0 to i32, !dbg !13296
  %3 = icmp slt i16 %0, 1, !dbg !13298
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13299
  %6 = add nsw i32 %2, -1, !dbg !13299
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13299
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13299
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13293, metadata !DIExpression()), !dbg !13295
  ret %struct.device* %8, !dbg !13300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13301 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13303, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13304, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i8* %2, metadata !13305, metadata !DIExpression()), !dbg !13308
  %5 = bitcast i32* %4 to i8*, !dbg !13309
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13309
  call void @llvm.dbg.value(metadata i32 0, metadata !13306, metadata !DIExpression()), !dbg !13308
  store i32 0, i32* %4, align 4, !dbg !13310
  call void @llvm.dbg.value(metadata i32* %4, metadata !13306, metadata !DIExpression(DW_OP_deref)), !dbg !13308
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13311
  call void @llvm.dbg.value(metadata i16* %6, metadata !13307, metadata !DIExpression()), !dbg !13308
  %7 = load i32, i32* %4, align 4, !dbg !13312
  call void @llvm.dbg.value(metadata i32 %7, metadata !13306, metadata !DIExpression()), !dbg !13308
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13313
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13314
  ret i32 %8, !dbg !13315
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13318, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.value(metadata i32* %1, metadata !13319, metadata !DIExpression()), !dbg !13323
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13324
  %4 = load i16*, i16** %3, align 4, !dbg !13324
  call void @llvm.dbg.value(metadata i16* %4, metadata !13320, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.value(metadata i32 0, metadata !13321, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.value(metadata i32 0, metadata !13322, metadata !DIExpression()), !dbg !13323
  %5 = icmp eq i16* %4, null, !dbg !13325
  br i1 %5, label %22, label %6, !dbg !13327

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13321, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.value(metadata i16* %8, metadata !13320, metadata !DIExpression()), !dbg !13323
  %9 = load i16, i16* %8, align 2, !dbg !13328
  %10 = icmp eq i16 %9, -32768, !dbg !13332
  call void @llvm.dbg.value(metadata i32 undef, metadata !13321, metadata !DIExpression()), !dbg !13323
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13333
  call void @llvm.dbg.value(metadata i16* %11, metadata !13320, metadata !DIExpression()), !dbg !13323
  %12 = zext i1 %10 to i32, !dbg !13334
  %13 = add i32 %7, %12, !dbg !13334
  call void @llvm.dbg.value(metadata i32 %13, metadata !13321, metadata !DIExpression()), !dbg !13323
  %14 = icmp eq i32 %13, 2, !dbg !13335
  br i1 %14, label %15, label %6, !dbg !13336

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13323
  call void @llvm.dbg.value(metadata i32 %16, metadata !13322, metadata !DIExpression()), !dbg !13323
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13337
  %18 = load i16, i16* %17, align 2, !dbg !13337
  %19 = icmp eq i16 %18, 32767, !dbg !13338
  %20 = add i32 %16, 1, !dbg !13339
  call void @llvm.dbg.value(metadata i32 %20, metadata !13322, metadata !DIExpression()), !dbg !13323
  br i1 %19, label %21, label %15, !dbg !13341, !llvm.loop !13342

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13344
  br label %22, !dbg !13345

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13346
  call void @llvm.dbg.value(metadata i16* %23, metadata !13320, metadata !DIExpression()), !dbg !13323
  ret i16* %23, !dbg !13347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13348 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13351
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13352
  ret i32* %2, !dbg !13353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !13354 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13505, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13506, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13507, metadata !DIExpression()), !dbg !13508
  ret void, !dbg !13509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13514, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 %1, metadata !13515, metadata !DIExpression()), !dbg !13516
  ret void, !dbg !13517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13518 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13522, metadata !DIExpression()), !dbg !13524
  call void @llvm.dbg.value(metadata i32 %1, metadata !13523, metadata !DIExpression()), !dbg !13524
  ret void, !dbg !13525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13530, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata i8* %1, metadata !13531, metadata !DIExpression()), !dbg !13532
  ret i32 -134, !dbg !13533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13538, metadata !DIExpression()), !dbg !13540
  call void @llvm.dbg.value(metadata i8* %1, metadata !13539, metadata !DIExpression()), !dbg !13540
  ret i32 -134, !dbg !13541
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13545, metadata !DIExpression()), !dbg !13546
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13547, !srcloc !13553
  call void @llvm.dbg.value(metadata i32 undef, metadata !13550, metadata !DIExpression()) #23, !dbg !13554
  call void @llvm.dbg.value(metadata i32 undef, metadata !13551, metadata !DIExpression()) #23, !dbg !13554
  br label %3, !dbg !13555

3:                                                ; preds = %3, %1
  br label %3, !dbg !13556, !llvm.loop !13559
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13566, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13567, metadata !DIExpression()), !dbg !13568
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.230, i32 0, i32 0), i32 noundef 69) #25, !dbg !13569
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13574
  unreachable, !dbg !13574
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13577, metadata !DIExpression()), !dbg !13578
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13579
  unreachable, !dbg !13579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13582, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13583, metadata !DIExpression()), !dbg !13586
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13587, !srcloc !13553
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13587
  call void @llvm.dbg.value(metadata i32 %4, metadata !13550, metadata !DIExpression()) #23, !dbg !13589
  call void @llvm.dbg.value(metadata i32 undef, metadata !13551, metadata !DIExpression()) #23, !dbg !13589
  call void @llvm.dbg.value(metadata i32 %4, metadata !13584, metadata !DIExpression()), !dbg !13586
  %5 = tail call fastcc %struct.k_thread* @k_current_get.233() #26, !dbg !13590
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13585, metadata !DIExpression()), !dbg !13586
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13591
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.234, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13591
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13596
  br i1 %7, label %20, label %8, !dbg !13598

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13599, metadata !DIExpression()), !dbg !13604
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13606
  %10 = load i32, i32* %9, align 4, !dbg !13606
  %11 = and i32 %10, 511, !dbg !13607
  %12 = icmp eq i32 %11, 0, !dbg !13608
  br i1 %12, label %14, label %13, !dbg !13609

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 69) #25, !dbg !13610
  br label %14, !dbg !13616

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13617
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.236, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13617
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13622
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13599, metadata !DIExpression()), !dbg !13623
  %16 = load i32, i32* %9, align 4, !dbg !13628
  %17 = and i32 %16, 511, !dbg !13629
  %18 = icmp eq i32 %17, 0, !dbg !13630
  br i1 %18, label %22, label %19, !dbg !13631

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13632, metadata !DIExpression()) #23, !dbg !13635
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13638, !srcloc !13639
  br label %25, !dbg !13640

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13617
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.236, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13617
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13622
  br label %22, !dbg !13641

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13642
  call void @llvm.dbg.value(metadata i32 %4, metadata !13632, metadata !DIExpression()) #23, !dbg !13645
  call void @llvm.dbg.value(metadata i32 %4, metadata !13632, metadata !DIExpression()) #23, !dbg !13648
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13586
  br i1 %23, label %25, label %24, !dbg !13650

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.237(%struct.k_thread* noundef %5) #24, !dbg !13651
  br label %25, !dbg !13654

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13654
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.233() unnamed_addr #11 !dbg !13655 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.245() #26, !dbg !13659
  ret %struct.k_thread* %1, !dbg !13660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #2 !dbg !13661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13665, metadata !DIExpression()), !dbg !13666
  %2 = icmp ult i32 %0, 5, !dbg !13667
  br i1 %2, label %3, label %6, !dbg !13667

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13667
  %5 = load i8*, i8** %4, align 4, !dbg !13667
  br label %6, !dbg !13667

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.239, i32 0, i32 0), %1 ], !dbg !13668
  ret i8* %7, !dbg !13670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13675, metadata !DIExpression()), !dbg !13677
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13678
  br i1 %2, label %9, label %3, !dbg !13679

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13680
  call void @llvm.dbg.value(metadata i8* %4, metadata !13676, metadata !DIExpression()), !dbg !13677
  %5 = icmp eq i8* %4, null, !dbg !13681
  br i1 %5, label %9, label %6, !dbg !13683

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13684
  %8 = icmp eq i8 %7, 0, !dbg !13685
  br i1 %8, label %9, label %10, !dbg !13686

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.238, i32 0, i32 0), metadata !13676, metadata !DIExpression()), !dbg !13677
  br label %10, !dbg !13687

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.238, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13677
  call void @llvm.dbg.value(metadata i8* %11, metadata !13676, metadata !DIExpression()), !dbg !13677
  ret i8* %11, !dbg !13689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.237(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13694, metadata !DIExpression()), !dbg !13695
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13696, !srcloc !13698
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13699
  ret void, !dbg !13700
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.245() unnamed_addr #11 !dbg !13701 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13702, !srcloc !13704
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13705
  ret %struct.k_thread* %1, !dbg !13706
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13707 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13711, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i32 %1, metadata !13712, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i32 %2, metadata !13713, metadata !DIExpression()), !dbg !13714
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13715
  ret void, !dbg !13716
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13721, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i8* %1, metadata !13722, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 %2, metadata !13723, metadata !DIExpression()), !dbg !13724
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13725
  ret void, !dbg !13726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13727 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13728
  ret void, !dbg !13729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13732, metadata !DIExpression()), !dbg !13733
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13734
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13735
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13736
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13737
  %4 = trunc i32 %0 to i8, !dbg !13738
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13739
  store i8 %4, i8* %5, align 4, !dbg !13740
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13741
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13742
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13743
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13744
  store i8* %8, i8** %9, align 4, !dbg !13745
  ret void, !dbg !13746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13749, metadata !DIExpression()), !dbg !13755
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13756
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13750, metadata !DIExpression()), !dbg !13755
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13757
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13751, metadata !DIExpression()), !dbg !13755
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.252, i32 0, i32 0), metadata !13754, metadata !DIExpression()), !dbg !13755
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13758
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13759
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.252, i32 0, i32 0)) #25, !dbg !13760
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13761
  ret void, !dbg !13762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !13763 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13767, metadata !DIExpression()), !dbg !13768
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13769
  ret i8* %2, !dbg !13770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13771 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()), !dbg !13777
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13778
  %3 = load i8, i8* %2, align 1, !dbg !13779
  %4 = and i8 %3, -5, !dbg !13779
  store i8 %4, i8* %2, align 1, !dbg !13779
  ret void, !dbg !13780
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13781 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13784
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13785
  %3 = ptrtoint i8* %2 to i32, !dbg !13794
  %4 = add i32 %3, 2048, !dbg !13795
  call void @llvm.dbg.value(metadata i32 %4, metadata !13789, metadata !DIExpression()) #23, !dbg !13796
  call void @llvm.dbg.value(metadata i32 %4, metadata !13797, metadata !DIExpression()) #23, !dbg !13800
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13802, !srcloc !13803
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13804
  %6 = or i32 %5, 512, !dbg !13804
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13804
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -2, i32 noundef 255) #25, !dbg !13805
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -5, i32 noundef 0) #25, !dbg !13808
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -12, i32 noundef 0) #25, !dbg !13809
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -11, i32 noundef 0) #25, !dbg !13810
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -10, i32 noundef 0) #25, !dbg !13811
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -4, i32 noundef 0) #25, !dbg !13812
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13813
  %8 = or i32 %7, 458752, !dbg !13813
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13813
  tail call void @z_arm_fault_init() #25, !dbg !13814
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13815
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13816
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13819
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13820
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13821
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13822
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13822
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13783, metadata !DIExpression()), !dbg !13823
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13824
  call void @z_device_state_init() #25, !dbg !13825
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13826
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13827
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13828
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13829
  unreachable, !dbg !13829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2210, metadata !DIExpression()), !dbg !13830
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13831
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13831
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !13830
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !13830
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13832
  br i1 %7, label %8, label %35, !dbg !13833

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2211, metadata !DIExpression()), !dbg !13830
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13834
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13834
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2221, metadata !DIExpression()), !dbg !13835
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13836
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13836
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13837
  call void @llvm.dbg.value(metadata i32 %14, metadata !2225, metadata !DIExpression()), !dbg !13835
  %15 = icmp eq %struct.device* %11, null, !dbg !13838
  br i1 %15, label %32, label %16, !dbg !13840

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13841
  br i1 %17, label %26, label %18, !dbg !13844

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13845
  call void @llvm.dbg.value(metadata i32 %19, metadata !2225, metadata !DIExpression()), !dbg !13835
  %20 = icmp ult i32 %19, 255, !dbg !13847
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13847
  call void @llvm.dbg.value(metadata i32 %21, metadata !2225, metadata !DIExpression()), !dbg !13835
  %22 = trunc i32 %21 to i8, !dbg !13848
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13849
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13849
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13850
  store i8 %22, i8* %25, align 1, !dbg !13851
  br label %26, !dbg !13852

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13853
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13853
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13854
  %30 = load i8, i8* %29, align 1, !dbg !13855
  %31 = or i8 %30, 1, !dbg !13855
  store i8 %31, i8* %29, align 1, !dbg !13855
  br label %32, !dbg !13856

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13857
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2211, metadata !DIExpression()), !dbg !13830
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13832
  br i1 %34, label %8, label %35, !dbg !13833, !llvm.loop !13858

35:                                               ; preds = %32, %1
  ret void, !dbg !13860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.255(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13863, metadata !DIExpression()), !dbg !13865
  call void @llvm.dbg.value(metadata i32 %1, metadata !13864, metadata !DIExpression()), !dbg !13865
  %3 = trunc i32 %1 to i8, !dbg !13866
  %4 = shl i8 %3, 4, !dbg !13866
  %5 = and i32 %0, 15, !dbg !13869
  %6 = add nsw i32 %5, -4, !dbg !13870
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13871
  store volatile i8 %4, i8* %7, align 1, !dbg !13872
  ret void, !dbg !13873
}

; Function Attrs: optsize
declare !dbg !13874 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13878, metadata !DIExpression()), !dbg !13879
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13880
  store i8 1, i8* %2, align 1, !dbg !13881
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13882
  store i8 1, i8* %3, align 4, !dbg !13883
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13884
  store i32 0, i32* %4, align 4, !dbg !13885
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13886
  store i32 0, i32* %5, align 4, !dbg !13887
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13888
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13889
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13890
  ret void, !dbg !13891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13892 {
  tail call void @z_sched_init() #25, !dbg !13897
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13898
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.256, i32 0, i32 0)) #25, !dbg !13899
  call void @llvm.dbg.value(metadata i8* %1, metadata !13896, metadata !DIExpression()), !dbg !13900
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13901
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13902
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13903
  ret i8* %1, !dbg !13904
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13909, metadata !DIExpression()), !dbg !13910
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13911
  unreachable, !dbg !13912
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13915, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.value(metadata i8* %1, metadata !13916, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.value(metadata i8* %2, metadata !13917, metadata !DIExpression()), !dbg !13918
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13919
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13920
  tail call void @boot_banner() #25, !dbg !13921
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13922
  tail call void @z_init_static_threads() #25, !dbg !13923
  tail call void @main() #25, !dbg !13924
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13925
  %5 = and i8 %4, -2, !dbg !13925
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13925
  ret void, !dbg !13926
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13927 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13937, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i8* %1, metadata !13938, metadata !DIExpression()), !dbg !13939
  ret void, !dbg !13940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13941 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13943, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.value(metadata i8* %1, metadata !13944, metadata !DIExpression()), !dbg !13945
  ret void, !dbg !13946
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13947 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13948, !srcloc !13955
  call void @llvm.dbg.value(metadata i32 %1, metadata !13951, metadata !DIExpression()) #23, !dbg !13956
  %2 = icmp ne i32 %1, 0, !dbg !13957
  ret i1 %2, !dbg !13958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13959 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13960
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13961
  %3 = load i8, i8* %2, align 4, !dbg !13962
  %4 = or i8 %3, 1, !dbg !13962
  store i8 %4, i8* %2, align 4, !dbg !13962
  ret void, !dbg !13963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13964 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13965
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13966
  %3 = load i8, i8* %2, align 4, !dbg !13967
  %4 = and i8 %3, -2, !dbg !13967
  store i8 %4, i8* %2, align 4, !dbg !13967
  ret void, !dbg !13968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13969 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13970
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13971
  %3 = load i8, i8* %2, align 4, !dbg !13971
  %4 = and i8 %3, 1, !dbg !13972
  %5 = icmp ne i8 %4, 0, !dbg !13973
  ret i1 %5, !dbg !13974
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13975 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13979, metadata !DIExpression()), !dbg !13981
  call void @llvm.dbg.value(metadata i8* %1, metadata !13980, metadata !DIExpression()), !dbg !13981
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13982
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13984
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13979, metadata !DIExpression()), !dbg !13981
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13985
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13986
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13987
  store i8 0, i8* %8, align 1, !dbg !13988
  ret i32 0, !dbg !13989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #2 !dbg !13990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13994, metadata !DIExpression()), !dbg !13995
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13996
  ret i8* %2, !dbg !13997
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13998 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14002, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i8* %1, metadata !14003, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i32 %2, metadata !14004, metadata !DIExpression()), !dbg !14005
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14006
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !14007
  ret i32 0, !dbg !14008
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2351, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i8* %1, metadata !2352, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 %2, metadata !2353, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 0, metadata !2354, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i8 undef, metadata !2356, metadata !DIExpression()), !dbg !14009
  %4 = icmp eq i8* %1, null, !dbg !14010
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14012
  br i1 %6, label %46, label %7, !dbg !14012

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14013
  %9 = load i8, i8* %8, align 1, !dbg !14013
  call void @llvm.dbg.value(metadata i8 %9, metadata !2356, metadata !DIExpression()), !dbg !14009
  %10 = add i32 %2, -1, !dbg !14014
  call void @llvm.dbg.value(metadata i32 %10, metadata !2353, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i8 0, metadata !2357, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i8 %9, metadata !2356, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 0, metadata !2354, metadata !DIExpression()), !dbg !14009
  %11 = icmp eq i8 %9, 0, !dbg !14016
  br i1 %11, label %12, label %15, !dbg !14018

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14019
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14020
  store i8 0, i8* %14, align 1, !dbg !14021
  br label %46, !dbg !14022

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2357, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i8 %17, metadata !2356, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 %18, metadata !2354, metadata !DIExpression()), !dbg !14009
  %19 = zext i8 %17 to i32, !dbg !14023
  %20 = zext i8 %16 to i32, !dbg !14024
  %21 = shl nuw i32 1, %20, !dbg !14024
  call void @llvm.dbg.value(metadata i32 %21, metadata !2355, metadata !DIExpression()), !dbg !14009
  %22 = and i32 %21, %19, !dbg !14026
  %23 = icmp eq i32 %22, 0, !dbg !14028
  br i1 %23, label %42, label %24, !dbg !14029

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14030
  %26 = sub i32 %10, %18, !dbg !14031
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14032
  %28 = load i8*, i8** %27, align 4, !dbg !14032
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14033
  %30 = load i32, i32* %29, align 4, !dbg !14033
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14034
  %32 = add i32 %31, %18, !dbg !14035
  call void @llvm.dbg.value(metadata i32 %32, metadata !2354, metadata !DIExpression()), !dbg !14009
  %33 = trunc i32 %21 to i8, !dbg !14036
  %34 = xor i8 %33, -1, !dbg !14036
  %35 = and i8 %17, %34, !dbg !14036
  call void @llvm.dbg.value(metadata i8 %35, metadata !2356, metadata !DIExpression()), !dbg !14009
  %36 = icmp eq i8 %35, 0, !dbg !14037
  br i1 %36, label %12, label %37, !dbg !14039

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14040
  %39 = sub i32 %10, %32, !dbg !14042
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.261, i32 0, i32 0), i32 noundef 1) #24, !dbg !14043
  %41 = add i32 %40, %32, !dbg !14044
  call void @llvm.dbg.value(metadata i32 %41, metadata !2354, metadata !DIExpression()), !dbg !14009
  br label %42, !dbg !14045

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14009
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14009
  call void @llvm.dbg.value(metadata i8 %44, metadata !2356, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 %43, metadata !2354, metadata !DIExpression()), !dbg !14009
  %45 = add i8 %16, 1, !dbg !14046
  call void @llvm.dbg.value(metadata i8 %45, metadata !2357, metadata !DIExpression()), !dbg !14015
  br label %15, !dbg !14018

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.262, i32 0, i32 0), %3 ], !dbg !14009
  ret i8* %47, !dbg !14047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14052, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 %1, metadata !14053, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i8* %2, metadata !14054, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 %3, metadata !14055, metadata !DIExpression()), !dbg !14057
  %5 = icmp ult i32 %1, %3, !dbg !14058
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14058
  call void @llvm.dbg.value(metadata i32 %6, metadata !14056, metadata !DIExpression()), !dbg !14057
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14059
  ret i32 %6, !dbg !14060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14065, metadata !DIExpression()), !dbg !14066
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14067
  ret void, !dbg !14068
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !14069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14078, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14079, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 %2, metadata !14080, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14081, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i8* %4, metadata !14082, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i8* %5, metadata !14083, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i8* %6, metadata !14084, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 %7, metadata !14085, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 %8, metadata !14086, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i8* %9, metadata !14087, metadata !DIExpression()), !dbg !14089
  %11 = icmp eq i32 %7, 15, !dbg !14090
  br i1 %11, label %12, label %15, !dbg !14090

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14090
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !14090
  br i1 %14, label %19, label %18, !dbg !14090

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14090
  %17 = icmp ult i32 %16, 31, !dbg !14090
  br i1 %17, label %19, label %18, !dbg !14090

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 536) #25, !dbg !14094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.277, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !14094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 536) #25, !dbg !14094
  unreachable, !dbg !14094

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14096
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !14097
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14098
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14099
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14100
  call void @llvm.dbg.value(metadata i8* %22, metadata !14088, metadata !DIExpression()), !dbg !14089
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14101
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14102
  store i8* null, i8** %23, align 4, !dbg !14103
  %24 = icmp eq i8* %9, null, !dbg !14104
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14106
  br i1 %24, label %29, label %26, !dbg !14107

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !14108
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !14110
  store i8 0, i8* %28, align 1, !dbg !14111
  br label %30, !dbg !14112

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !14113
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14115
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !14115
  br i1 %32, label %36, label %33, !dbg !14117

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !14118
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !14118
  br label %36, !dbg !14119

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !14089
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !14120
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !14122
  ret i8* %22, !dbg !14123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #2 !dbg !14124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14128, metadata !DIExpression()), !dbg !14129
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14130
  ret i1 %2, !dbg !14131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !14132 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14137, metadata !DIExpression()), !dbg !14138
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14139
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14140
  ret void, !dbg !14141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14142 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14147, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata i32 %1, metadata !14148, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata i32 %2, metadata !14149, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata i32 %3, metadata !14150, metadata !DIExpression()), !dbg !14151
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14152
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14153
  %6 = trunc i32 %3 to i8, !dbg !14154
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14155
  store i8 %6, i8* %7, align 4, !dbg !14156
  %8 = trunc i32 %2 to i8, !dbg !14157
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14158
  store i8 %8, i8* %9, align 1, !dbg !14159
  %10 = trunc i32 %1 to i8, !dbg !14160
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14161
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14161
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14161
  store i8 %10, i8* %13, align 2, !dbg !14162
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14163
  store i8 0, i8* %14, align 1, !dbg !14164
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14165
  ret void, !dbg !14166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14167 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14171, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14172, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata i32 %2, metadata !14173, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata i32 0, metadata !14178, metadata !DIExpression()), !dbg !14179
  %4 = add i32 %2, 7, !dbg !14180
  %5 = and i32 %4, -8, !dbg !14180
  %6 = add i32 %5, 64, !dbg !14180
  call void @llvm.dbg.value(metadata i32 %6, metadata !14174, metadata !DIExpression()), !dbg !14179
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.278(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14182
  call void @llvm.dbg.value(metadata i8* %7, metadata !14177, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata i32 %5, metadata !14175, metadata !DIExpression()), !dbg !14179
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14183
  call void @llvm.dbg.value(metadata i8* %8, metadata !14176, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata i32 0, metadata !14178, metadata !DIExpression()), !dbg !14179
  %9 = ptrtoint i8* %7 to i32, !dbg !14184
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14185
  store i32 %9, i32* %10, align 4, !dbg !14186
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14187
  store i32 %5, i32* %11, align 4, !dbg !14188
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14189
  store i32 0, i32* %12, align 4, !dbg !14190
  call void @llvm.dbg.value(metadata i8* %8, metadata !14176, metadata !DIExpression()), !dbg !14179
  ret i8* %8, !dbg !14191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.278(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !14192 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14196, metadata !DIExpression()), !dbg !14197
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14198
  ret i8* %2, !dbg !14199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14200 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14205, metadata !DIExpression()), !dbg !14206
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14207
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14208
  ret void, !dbg !14209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14210 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14212, metadata !DIExpression()), !dbg !14213
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14214
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14215
  ret void, !dbg !14216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14217 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14221, metadata !DIExpression()), !dbg !14222
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14223
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14224
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14225
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14226
  ret void, !dbg !14227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14228 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14233, metadata !DIExpression()), !dbg !14234
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14235
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14236
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14237
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14238
  ret void, !dbg !14239
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14240 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14257, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14248, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14249, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i32 %2, metadata !14250, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14251, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i8* %4, metadata !14252, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i8* %5, metadata !14253, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i8* %6, metadata !14254, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i32 %7, metadata !14255, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i32 %8, metadata !14256, metadata !DIExpression()), !dbg !14258
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14259, !srcloc !13955
  call void @llvm.dbg.value(metadata i32 %11, metadata !13951, metadata !DIExpression()) #23, !dbg !14264
  %12 = icmp eq i32 %11, 0, !dbg !14265
  br i1 %12, label %14, label %13, !dbg !14266

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 647) #25, !dbg !14267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.282, i32 0, i32 0)) #25, !dbg !14267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 647) #25, !dbg !14267
  unreachable, !dbg !14267

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14257, metadata !DIExpression()), !dbg !14258
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14269
  %17 = icmp eq i64 %15, -1, !dbg !14270
  br i1 %17, label %19, label %18, !dbg !14272

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14273
  br label %19, !dbg !14275

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14277 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14282, metadata !DIExpression()), !dbg !14283
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14281, metadata !DIExpression()), !dbg !14283
  %4 = icmp eq i64 %3, 0, !dbg !14284
  br i1 %4, label %5, label %6, !dbg !14286

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.283(%struct.k_thread* noundef %0) #24, !dbg !14287
  br label %7, !dbg !14289

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14290
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.283(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14293 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14297, metadata !DIExpression()), !dbg !14298
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14299, !srcloc !14301
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14302
  ret void, !dbg !14303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14304 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14307, metadata !DIExpression()), !dbg !14308
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14306, metadata !DIExpression()), !dbg !14308
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14309
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14310
  ret void, !dbg !14311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14312 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14314, metadata !DIExpression()), !dbg !14334
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14335

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 750) #25, !dbg !14339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.287, i32 0, i32 0)) #25, !dbg !14339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 750) #25, !dbg !14339
  unreachable, !dbg !14339

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14314, metadata !DIExpression()), !dbg !14334
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14342
  br i1 %4, label %6, label %5, !dbg !14343

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14344
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14332, metadata !DIExpression()), !dbg !14345
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14346

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14350
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14350
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14352
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14352
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14353
  %12 = load i32, i32* %11, align 4, !dbg !14353
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14354
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14354
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14355
  %16 = load i8*, i8** %15, align 4, !dbg !14355
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14356
  %18 = load i8*, i8** %17, align 4, !dbg !14356
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14357
  %20 = load i8*, i8** %19, align 4, !dbg !14357
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14358
  %22 = load i32, i32* %21, align 4, !dbg !14358
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14359
  %24 = load i32, i32* %23, align 4, !dbg !14359
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14360
  %26 = load i8*, i8** %25, align 4, !dbg !14360
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14361
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14362
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14363
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14364
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14364
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14365
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14314, metadata !DIExpression()), !dbg !14334
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14366
  br i1 %32, label %1, label %2, !dbg !14335, !llvm.loop !14367

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 781) #25, !dbg !14369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.287, i32 0, i32 0)) #25, !dbg !14369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 781) #25, !dbg !14369
  unreachable, !dbg !14369

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14332, metadata !DIExpression()), !dbg !14345
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14372
  br i1 %36, label %38, label %37, !dbg !14373

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14374
  ret void, !dbg !14375

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14376
  %40 = load i32, i32* %39, align 4, !dbg !14376
  %41 = icmp eq i32 %40, -1, !dbg !14379
  br i1 %41, label %50, label %42, !dbg !14380

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14381
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14381
  %45 = icmp sgt i32 %40, 0, !dbg !14383
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14383
  %47 = zext i32 %46 to i64, !dbg !14383
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14383
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14384
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14384
  br label %50, !dbg !14385

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14386
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14332, metadata !DIExpression()), !dbg !14345
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14387
  br i1 %52, label %33, label %34, !dbg !14346, !llvm.loop !14388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !14390 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14394, metadata !DIExpression()), !dbg !14395
  call void @llvm.dbg.value(metadata i64 %0, metadata !14396, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i32 1000, metadata !14399, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i32 10000, metadata !14400, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i8 1, metadata !14401, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i8 0, metadata !14402, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i8 1, metadata !14403, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i8 0, metadata !14404, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i8 1, metadata !14405, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i8 0, metadata !14406, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i64 0, metadata !14407, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i64 0, metadata !14407, metadata !DIExpression()), !dbg !14411
  %2 = mul i64 %0, 10, !dbg !14413
  ret i64 %2, !dbg !14419
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14420 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14422, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i8* %1, metadata !14423, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i8* %2, metadata !14424, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i8* %3, metadata !14425, metadata !DIExpression()), !dbg !14426
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14427
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14428
  %7 = load i8, i8* %6, align 4, !dbg !14429
  %8 = or i8 %7, 4, !dbg !14429
  store i8 %8, i8* %6, align 4, !dbg !14429
  tail call void @z_thread_essential_clear() #24, !dbg !14430
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14431
  unreachable, !dbg !14431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14432 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14437, metadata !DIExpression()), !dbg !14439
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14440
  %3 = load i32, i32* %2, align 4, !dbg !14440
  call void @llvm.dbg.value(metadata i32 %3, metadata !14438, metadata !DIExpression()), !dbg !14439
  %4 = icmp eq i32 %3, 0, !dbg !14441
  br i1 %4, label %10, label %5, !dbg !14443

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14444
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14447
  %8 = zext i8 %7 to i32, !dbg !14448
  %9 = icmp eq i32 %6, %8, !dbg !14449
  br i1 %9, label %11, label %10, !dbg !14450

10:                                               ; preds = %5, %1
  br label %11, !dbg !14451

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14439
  ret i1 %12, !dbg !14452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14453 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14455, metadata !DIExpression()), !dbg !14456
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14457
  %3 = load i32, i32* %2, align 4, !dbg !14457
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14459
  %5 = zext i8 %4 to i32, !dbg !14460
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14461
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14462
  %8 = or i32 %7, %5, !dbg !14463
  %9 = icmp eq i32 %3, %8, !dbg !14464
  br i1 %9, label %10, label %11, !dbg !14465

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14466
  br label %11, !dbg !14467

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14469 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14473, metadata !DIExpression()), !dbg !14474
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14475
  %3 = zext i8 %2 to i32, !dbg !14476
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14477
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14478
  %6 = or i32 %5, %3, !dbg !14479
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14480
  store i32 %6, i32* %7, align 4, !dbg !14481
  ret void, !dbg !14482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !14483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14487, metadata !DIExpression()), !dbg !14488
  ret i32 -134, !dbg !14489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14494, metadata !DIExpression()), !dbg !14496
  call void @llvm.dbg.value(metadata i32 %1, metadata !14495, metadata !DIExpression()), !dbg !14496
  ret i32 -134, !dbg !14497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #2 !dbg !14498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14505, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14506, metadata !DIExpression()), !dbg !14507
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14508
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14510
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14507
  ret i32 %6, !dbg !14511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #2 !dbg !14512 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14516, metadata !DIExpression()), !dbg !14517
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14518
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14517
  ret i32 %3, !dbg !14520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14521 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14523
  ret void, !dbg !14524
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14525 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14527, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i8* %1, metadata !14528, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i8* %2, metadata !14529, metadata !DIExpression()), !dbg !14530
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14531
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14531
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14531
  %7 = load i8, i8* %6, align 2, !dbg !14531
  %8 = icmp sgt i8 %7, -1, !dbg !14531
  br i1 %8, label %10, label %9, !dbg !14534

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 39) #25, !dbg !14535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 39) #25, !dbg !14535
  unreachable, !dbg !14535

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14537, !srcloc !14544
  call void @llvm.dbg.value(metadata i32 undef, metadata !14540, metadata !DIExpression()) #23, !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !14541, metadata !DIExpression()) #23, !dbg !14545
  tail call fastcc void @k_cpu_idle() #24, !dbg !14546
  br label %10, !dbg !14547, !llvm.loop !14548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14550 {
  tail call void @arch_cpu_idle() #25, !dbg !14551
  ret void, !dbg !14552
}

; Function Attrs: optsize
declare !dbg !14553 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14554 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14558, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14559, metadata !DIExpression()), !dbg !14562
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14563
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14563
  %5 = load i8, i8* %4, align 2, !dbg !14563
  call void @llvm.dbg.value(metadata i8 %5, metadata !14560, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14562
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14564
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14564
  %8 = load i8, i8* %7, align 2, !dbg !14564
  call void @llvm.dbg.value(metadata i8 %8, metadata !14561, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14562
  %9 = icmp eq i8 %8, %5, !dbg !14565
  %10 = sext i8 %5 to i32, !dbg !14567
  %11 = sext i8 %8 to i32, !dbg !14567
  %12 = sub nsw i32 %11, %10, !dbg !14567
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14567
  ret i32 %13, !dbg !14568
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14573, metadata !DIExpression()), !dbg !14574
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14575
  %3 = icmp eq i32 %2, 0, !dbg !14577
  br i1 %3, label %8, label %4, !dbg !14578

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14579
  %6 = add i32 %5, %2, !dbg !14581
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14582
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14583
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14584
  br label %8, !dbg !14585

8:                                                ; preds = %4, %1
  ret void, !dbg !14586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14591, metadata !DIExpression()), !dbg !14593
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14594
  call void @llvm.dbg.value(metadata i32 %1, metadata !14592, metadata !DIExpression()), !dbg !14593
  ret i32 %1, !dbg !14595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14600, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata i32 %1, metadata !14601, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata i32 0, metadata !14602, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !14618
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14620, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !14618
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14628
  br i1 %4, label %6, label %5, !dbg !14631

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !14632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !14632
  unreachable, !dbg !14632

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !14618
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !14608, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14602, metadata !DIExpression()), !dbg !14610
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14635
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14638
  %8 = icmp sgt i32 %0, 0, !dbg !14639
  %9 = icmp sgt i32 %7, 2, !dbg !14641
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14641
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14641
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14642
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14643
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14644
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !14651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !14651
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14653
  br i1 %12, label %14, label %13, !dbg !14656

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14657
  unreachable, !dbg !14657

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14620
  call void @llvm.dbg.value(metadata i32 %15, metadata !14623, metadata !DIExpression()) #23, !dbg !14627
  call void @llvm.dbg.value(metadata i32 %15, metadata !14617, metadata !DIExpression()) #23, !dbg !14618
  call void @llvm.dbg.value(metadata i32 %15, metadata !14608, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !14651
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !14662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14664, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !14602, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14602, metadata !DIExpression()), !dbg !14610
  ret void, !dbg !14666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !14667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14669, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.value(metadata i32 %0, metadata !14671, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14686
  call void @llvm.dbg.value(metadata i32 1000, metadata !14674, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i32 10000, metadata !14675, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i8 1, metadata !14676, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i1 true, metadata !14677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14686
  call void @llvm.dbg.value(metadata i1 true, metadata !14678, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14686
  call void @llvm.dbg.value(metadata i8 0, metadata !14679, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i1 true, metadata !14680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14686
  call void @llvm.dbg.value(metadata i1 false, metadata !14681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14686
  call void @llvm.dbg.value(metadata i64 0, metadata !14682, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i64 0, metadata !14682, metadata !DIExpression()), !dbg !14686
  %2 = mul i32 %0, 10, !dbg !14688
  ret i32 %2, !dbg !14694
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14697, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !14700
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14702, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !14700
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14705
  br i1 %3, label %5, label %4, !dbg !14706

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !14707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !14707
  unreachable, !dbg !14707

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %6, metadata !14623, metadata !DIExpression()) #23, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %6, metadata !14617, metadata !DIExpression()) #23, !dbg !14700
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14708
  call void @llvm.dbg.value(metadata i32 %6, metadata !14698, metadata !DIExpression()), !dbg !14699
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14709
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14711
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14712
  br i1 %9, label %10, label %14, !dbg !14713

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !14716
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14718
  br i1 %11, label %13, label %12, !dbg !14719

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14720
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14720
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14720
  unreachable, !dbg !14720

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14645, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %6, metadata !14659, metadata !DIExpression()) #23, !dbg !14721
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14723, !srcloc !14665
  br label %33, !dbg !14724

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14725
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14726
  %16 = icmp eq i32 %15, 0, !dbg !14726
  br i1 %16, label %27, label %17, !dbg !14728

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14729
  br i1 %18, label %19, label %27, !dbg !14730

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14731
  %21 = icmp sgt i32 %20, %0, !dbg !14734
  br i1 %21, label %25, label %22, !dbg !14735

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14736
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14736
  call void @llvm.dbg.value(metadata i32 %24, metadata !14698, metadata !DIExpression()), !dbg !14699
  br label %28, !dbg !14738

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14739
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14739
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14741
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14699
  call void @llvm.dbg.value(metadata i32 %29, metadata !14698, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !14743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !14743
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14745
  br i1 %30, label %32, label %31, !dbg !14746

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14747
  unreachable, !dbg !14747

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14645, metadata !DIExpression()) #23, !dbg !14743
  call void @llvm.dbg.value(metadata i32 %29, metadata !14659, metadata !DIExpression()) #23, !dbg !14748
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14750, !srcloc !14665
  br label %33, !dbg !14751

33:                                               ; preds = %32, %13
  ret void, !dbg !14751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14756, metadata !DIExpression()), !dbg !14758
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14759
  %3 = icmp eq i32 %2, 0, !dbg !14759
  br i1 %3, label %16, label %4, !dbg !14760

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14761
  br i1 %5, label %16, label %6, !dbg !14762

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14763
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14763
  %9 = load i8, i8* %8, align 2, !dbg !14763
  %10 = sext i8 %9 to i32, !dbg !14764
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14765
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14766
  br i1 %12, label %16, label %13, !dbg !14767

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14768
  %15 = xor i1 %14, true, !dbg !14769
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14758
  call void @llvm.dbg.value(metadata i1 %17, metadata !14757, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14758
  ret i1 %17, !dbg !14770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14771 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14775, metadata !DIExpression()), !dbg !14777
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14778
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14776, metadata !DIExpression()), !dbg !14777
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14779
  br i1 %3, label %5, label %4, !dbg !14781

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14782
  br label %5, !dbg !14784

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14775, metadata !DIExpression()), !dbg !14777
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14785
  ret i32 %6, !dbg !14786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14789, metadata !DIExpression()), !dbg !14791
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14792
  %3 = load i8, i8* %2, align 1, !dbg !14792
  call void @llvm.dbg.value(metadata i8 %3, metadata !14790, metadata !DIExpression()), !dbg !14791
  %4 = and i8 %3, 31, !dbg !14793
  %5 = icmp ne i8 %4, 0, !dbg !14794
  ret i1 %5, !dbg !14795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14796 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14798, metadata !DIExpression()), !dbg !14799
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14800
  br i1 %2, label %3, label %7, !dbg !14802

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14803, metadata !DIExpression()) #23, !dbg !14806
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14809
  %5 = load i8, i8* %4, align 1, !dbg !14810
  %6 = and i8 %5, 127, !dbg !14810
  store i8 %6, i8* %4, align 1, !dbg !14810
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()) #23, !dbg !14814
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14818
  br label %7, !dbg !14819

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14820, metadata !DIExpression()) #23, !dbg !14823
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14825
  %9 = load i8, i8* %8, align 1, !dbg !14826
  %10 = or i8 %9, -128, !dbg !14826
  store i8 %10, i8* %8, align 1, !dbg !14826
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14827, metadata !DIExpression()) #23, !dbg !14830
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14834, metadata !DIExpression()) #23, !dbg !14842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14840, metadata !DIExpression()) #23, !dbg !14842
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14844
  br i1 %11, label %12, label %13, !dbg !14847

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !14848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !14848
  unreachable, !dbg !14848

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14850
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14841, metadata !DIExpression()) #23, !dbg !14842
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14852
  br i1 %15, label %26, label %16, !dbg !14850

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14841, metadata !DIExpression()) #23, !dbg !14842
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14854
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14841, metadata !DIExpression()) #23, !dbg !14842
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14855
  %20 = icmp sgt i32 %19, 0, !dbg !14858
  br i1 %20, label %21, label %23, !dbg !14859

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14860
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14862
  br label %28, !dbg !14863

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14852
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14841, metadata !DIExpression()) #23, !dbg !14842
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14852
  br i1 %25, label %26, label %16, !dbg !14850, !llvm.loop !14864

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14866
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14867
  br label %28, !dbg !14868

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14869
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14870
  %31 = zext i1 %30 to i32, !dbg !14870
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14871
  ret void, !dbg !14872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14875, metadata !DIExpression()), !dbg !14876
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14877
  ret i1 %2, !dbg !14878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14879 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14881, metadata !DIExpression()), !dbg !14883
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14882, metadata !DIExpression()), !dbg !14883
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14884
  br i1 %3, label %4, label %5, !dbg !14887

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14888
  unreachable, !dbg !14888

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14890
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14891
  ret void, !dbg !14892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !14893 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()), !dbg !14896
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14897
  ret i1 %2, !dbg !14898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14899 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14903, metadata !DIExpression()), !dbg !14904
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14905
  br i1 %2, label %6, label %3, !dbg !14905

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14906
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14906
  br label %6, !dbg !14905

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14905
  ret %struct._dnode* %7, !dbg !14907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14908 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14912, metadata !DIExpression()), !dbg !14916
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14913, metadata !DIExpression()), !dbg !14916
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14917
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14917
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14914, metadata !DIExpression()), !dbg !14916
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14918
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14919
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14920
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14921
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14922
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14923
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14924
  ret void, !dbg !14925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14926 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14930, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14931, metadata !DIExpression()), !dbg !14932
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14933
  br i1 %3, label %6, label %4, !dbg !14934

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14935
  br label %6, !dbg !14934

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14934
  ret %struct._dnode* %7, !dbg !14936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14937 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14941, metadata !DIExpression()), !dbg !14944
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14942, metadata !DIExpression()), !dbg !14944
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14945
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14945
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14943, metadata !DIExpression()), !dbg !14944
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14946
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14947
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14948
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14949
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14950
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14951
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14952
  ret void, !dbg !14953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14956, metadata !DIExpression()), !dbg !14958
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14959
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14966, metadata !DIExpression()) #23, !dbg !14968
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14969
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14970
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14970
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14957, metadata !DIExpression()), !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14971, metadata !DIExpression()) #23, !dbg !14977
  call void @llvm.dbg.value(metadata i32 %0, metadata !14976, metadata !DIExpression()) #23, !dbg !14977
  %6 = icmp eq i32 %0, 0, !dbg !14980
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14982
  br i1 %6, label %8, label %18, !dbg !14983

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14984
  br i1 %9, label %10, label %11, !dbg !14987

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 137) #25, !dbg !14988
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !14988
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 137) #25, !dbg !14988
  unreachable, !dbg !14988

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14990
  br i1 %12, label %18, label %13, !dbg !14992

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14993
  br i1 %14, label %18, label %15, !dbg !14995

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14996
  %17 = icmp eq i32 %16, 0, !dbg !14996
  br i1 %17, label %21, label %18, !dbg !14998

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14999
  br i1 %19, label %21, label %20, !dbg !15002

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15003
  br label %21, !dbg !15005

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14982
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14982
  ret void, !dbg !15006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !15007 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15011, metadata !DIExpression()), !dbg !15014
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15012, metadata !DIExpression()), !dbg !15014
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15015
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15013, metadata !DIExpression()), !dbg !15014
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15012, metadata !DIExpression()), !dbg !15014
  ret %struct.k_thread* %3, !dbg !15016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15019, metadata !DIExpression()), !dbg !15020
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15021
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15022
  %4 = xor i1 %3, true, !dbg !15023
  ret i1 %4, !dbg !15024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15027, metadata !DIExpression()), !dbg !15028
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15029
  %3 = load i16, i16* %2, align 2, !dbg !15029
  %4 = icmp ult i16 %3, 128, !dbg !15030
  %5 = zext i1 %4 to i32, !dbg !15030
  ret i32 %5, !dbg !15031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15032 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15038, metadata !DIExpression()), !dbg !15039
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15040
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15041
  %4 = xor i1 %3, true, !dbg !15042
  ret i1 %4, !dbg !15043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15044 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15050, metadata !DIExpression()), !dbg !15051
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15052
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15052
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15053
  ret i1 %4, !dbg !15054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15055 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15057, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15058, metadata !DIExpression()), !dbg !15059
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15060
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15060
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15061
  br i1 %5, label %9, label %6, !dbg !15062

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15063
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15063
  br label %9, !dbg !15062

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15062
  ret %struct._dnode* %10, !dbg !15064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15065 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15069, metadata !DIExpression()), !dbg !15070
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15071
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15071
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15072
  ret i1 %4, !dbg !15073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15074 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15078, metadata !DIExpression()), !dbg !15081
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15082
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15082
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15079, metadata !DIExpression()), !dbg !15081
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15083
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15083
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15080, metadata !DIExpression()), !dbg !15081
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15084
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15085
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15086
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15087
  tail call fastcc void @sys_dnode_init.309(%struct._dnode* noundef %0) #24, !dbg !15088
  ret void, !dbg !15089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.309(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15090 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15092, metadata !DIExpression()), !dbg !15093
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15094
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15095
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15096
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15097
  ret void, !dbg !15098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !15099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15103, metadata !DIExpression()), !dbg !15105
  call void @llvm.dbg.value(metadata i32 %1, metadata !15104, metadata !DIExpression()), !dbg !15105
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15106
  %4 = load i8, i8* %3, align 1, !dbg !15106
  %5 = zext i8 %4 to i32, !dbg !15107
  %6 = and i32 %5, %1, !dbg !15108
  %7 = icmp ne i32 %6, 0, !dbg !15109
  ret i1 %7, !dbg !15110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !15111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15115, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i32 %1, metadata !15116, metadata !DIExpression()), !dbg !15117
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15118
  ret i1 %3, !dbg !15119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !15120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15122, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata i32 %1, metadata !15123, metadata !DIExpression()), !dbg !15124
  %3 = icmp slt i32 %0, %1, !dbg !15125
  ret i1 %3, !dbg !15126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15127 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15129, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata i32 0, metadata !15130, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15135
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15137, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15135
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15140
  br i1 %3, label %5, label %4, !dbg !15141

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15142
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15142
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15142
  unreachable, !dbg !15142

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15135
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15143
  call void @llvm.dbg.value(metadata i32 undef, metadata !15132, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15130, metadata !DIExpression()), !dbg !15134
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15144
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15149
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15149
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15151
  br i1 %6, label %8, label %7, !dbg !15152

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15153
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15153
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15153
  unreachable, !dbg !15153

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15137
  call void @llvm.dbg.value(metadata i32 %9, metadata !14623, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 %9, metadata !14617, metadata !DIExpression()) #23, !dbg !15135
  call void @llvm.dbg.value(metadata i32 %9, metadata !15132, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15149
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15154
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15156, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !15130, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15130, metadata !DIExpression()), !dbg !15134
  ret void, !dbg !15157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15158 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15160, metadata !DIExpression()), !dbg !15161
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15162
  br i1 %2, label %27, label %3, !dbg !15164

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15165
  br i1 %4, label %5, label %27, !dbg !15166

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14820, metadata !DIExpression()) #23, !dbg !15167
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15170
  %7 = load i8, i8* %6, align 1, !dbg !15171
  %8 = or i8 %7, -128, !dbg !15171
  store i8 %8, i8* %6, align 1, !dbg !15171
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14827, metadata !DIExpression()) #23, !dbg !15172
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14834, metadata !DIExpression()) #23, !dbg !15174
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14840, metadata !DIExpression()) #23, !dbg !15174
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15176
  br i1 %9, label %10, label %11, !dbg !15177

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15178
  unreachable, !dbg !15178

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15179
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14841, metadata !DIExpression()) #23, !dbg !15174
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15180
  br i1 %13, label %24, label %14, !dbg !15179

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14841, metadata !DIExpression()) #23, !dbg !15174
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15181
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14841, metadata !DIExpression()) #23, !dbg !15174
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15182
  %18 = icmp sgt i32 %17, 0, !dbg !15183
  br i1 %18, label %19, label %21, !dbg !15184

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15185
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15186
  br label %26, !dbg !15187

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15180
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14841, metadata !DIExpression()) #23, !dbg !15174
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15180
  br i1 %23, label %24, label %14, !dbg !15179, !llvm.loop !15188

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15190
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15191
  br label %26, !dbg !15192

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15193
  br label %27, !dbg !15194

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15198, metadata !DIExpression()), !dbg !15199
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15200
  br i1 %2, label %6, label %3, !dbg !15201

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15202
  %5 = xor i1 %4, true, !dbg !15201
  br label %6, !dbg !15201

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15206, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i32 0, metadata !15207, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15212
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15214, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15212
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15217
  br i1 %3, label %5, label %4, !dbg !15218

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15219
  unreachable, !dbg !15219

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15212
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !15209, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata i32 undef, metadata !15207, metadata !DIExpression()), !dbg !15211
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15221
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15224
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15226
  br i1 %6, label %8, label %7, !dbg !15227

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15228
  unreachable, !dbg !15228

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15214
  call void @llvm.dbg.value(metadata i32 %9, metadata !14623, metadata !DIExpression()) #23, !dbg !15216
  call void @llvm.dbg.value(metadata i32 %9, metadata !14617, metadata !DIExpression()) #23, !dbg !15212
  call void @llvm.dbg.value(metadata i32 %9, metadata !15209, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15224
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15229
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15231, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !15207, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata i32 undef, metadata !15207, metadata !DIExpression()), !dbg !15211
  ret void, !dbg !15232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15233 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15235, metadata !DIExpression()), !dbg !15237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15238
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15240, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15242
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15242
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15238
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15243
  br i1 %3, label %5, label %4, !dbg !15244

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15245
  unreachable, !dbg !15245

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %6, metadata !14623, metadata !DIExpression()) #23, !dbg !15242
  call void @llvm.dbg.value(metadata i32 %6, metadata !14617, metadata !DIExpression()) #23, !dbg !15238
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15246
  call void @llvm.dbg.value(metadata i32 %6, metadata !15236, metadata !DIExpression()), !dbg !15237
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15247
  br i1 %7, label %8, label %12, !dbg !15249

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15250
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15253
  br i1 %9, label %11, label %10, !dbg !15254

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15255
  unreachable, !dbg !15255

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14645, metadata !DIExpression()) #23, !dbg !15250
  call void @llvm.dbg.value(metadata i32 %6, metadata !14659, metadata !DIExpression()) #23, !dbg !15256
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15258, !srcloc !14665
  br label %14, !dbg !15259

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.314(%struct.k_thread* noundef %0) #24, !dbg !15260
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15261
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15262
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15262
  br label %14, !dbg !15263

14:                                               ; preds = %12, %11
  ret void, !dbg !15263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15266, metadata !DIExpression()), !dbg !15267
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15268
  %3 = load i8, i8* %2, align 1, !dbg !15268
  %4 = and i8 %3, 4, !dbg !15269
  %5 = icmp eq i8 %4, 0, !dbg !15270
  ret i1 %5, !dbg !15271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.314(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15274, metadata !DIExpression()), !dbg !15275
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15276
  %3 = load i8, i8* %2, align 1, !dbg !15277
  %4 = and i8 %3, -5, !dbg !15277
  store i8 %4, i8* %2, align 1, !dbg !15277
  ret void, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15279 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15282, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15281, metadata !DIExpression()), !dbg !15283
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15284
  br i1 %4, label %5, label %12, !dbg !15286

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15287
  br i1 %6, label %7, label %12, !dbg !15288

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()) #23, !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15294, metadata !DIExpression()) #23, !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15298, metadata !DIExpression()) #23, !dbg !15303
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15305
  br i1 %8, label %10, label %9, !dbg !15308

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15309
  unreachable, !dbg !15309

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15289, metadata !DIExpression()) #23, !dbg !15295
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15311
  br label %16, !dbg !15312

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14650, metadata !DIExpression()) #23, !dbg !15313
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15316
  br i1 %13, label %15, label %14, !dbg !15317

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15318
  unreachable, !dbg !15318

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14645, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata i32 %3, metadata !14659, metadata !DIExpression()) #23, !dbg !15319
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15321, !srcloc !14665
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15327, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 %0, metadata !15329, metadata !DIExpression()), !dbg !15334
  %2 = icmp eq i32 %0, 0, !dbg !15336
  br i1 %2, label %3, label %6, !dbg !15337

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15338, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %4, metadata !15341, metadata !DIExpression()) #23, !dbg !15346
  %5 = icmp eq i32 %4, 0, !dbg !15347
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15328
  ret i1 %7, !dbg !15348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15349 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15352
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15351, metadata !DIExpression()), !dbg !15353
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15354
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15355
  ret i1 %3, !dbg !15356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15359, metadata !DIExpression()), !dbg !15361
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15362
  call void @llvm.dbg.value(metadata i32 %2, metadata !15360, metadata !DIExpression()), !dbg !15361
  ret i32 %2, !dbg !15363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15366, metadata !DIExpression()), !dbg !15370
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15371
  call void @llvm.dbg.value(metadata i32 0, metadata !15367, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15373
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15375, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15373
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15378
  br i1 %4, label %6, label %5, !dbg !15379

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15380
  unreachable, !dbg !15380

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15375
  call void @llvm.dbg.value(metadata i32 %7, metadata !14623, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 %7, metadata !14617, metadata !DIExpression()) #23, !dbg !15373
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15381
  call void @llvm.dbg.value(metadata i32 %7, metadata !15369, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 undef, metadata !15367, metadata !DIExpression()), !dbg !15372
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15382
  br i1 %8, label %9, label %13, !dbg !15386

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14803, metadata !DIExpression()) #23, !dbg !15387
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15390
  %11 = load i8, i8* %10, align 1, !dbg !15391
  %12 = and i8 %11, 127, !dbg !15391
  store i8 %12, i8* %10, align 1, !dbg !15391
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()) #23, !dbg !15392
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15394
  br label %13, !dbg !15395

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15396
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15397
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15398
  %16 = zext i1 %15 to i32, !dbg !15398
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15399
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15400
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15402
  br i1 %17, label %19, label %18, !dbg !15403

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15404
  unreachable, !dbg !15404

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14645, metadata !DIExpression()) #23, !dbg !15400
  call void @llvm.dbg.value(metadata i32 %7, metadata !14659, metadata !DIExpression()) #23, !dbg !15405
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15407, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !15367, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 undef, metadata !15367, metadata !DIExpression()), !dbg !15372
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15408
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15410
  br i1 %21, label %22, label %23, !dbg !15411

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15412
  br label %23, !dbg !15414

23:                                               ; preds = %22, %19
  ret void, !dbg !15415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15418, metadata !DIExpression()), !dbg !15419
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15420
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15421
  ret i32 %3, !dbg !15422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15425, metadata !DIExpression()), !dbg !15426
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15427
  %3 = load i8, i8* %2, align 1, !dbg !15428
  %4 = or i8 %3, 16, !dbg !15428
  store i8 %4, i8* %2, align 1, !dbg !15428
  ret void, !dbg !15429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15430 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15431, !srcloc !14626
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15431
  call void @llvm.dbg.value(metadata i32 %2, metadata !14623, metadata !DIExpression()) #23, !dbg !15433
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15433
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15434
  ret void, !dbg !15435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15438, metadata !DIExpression()), !dbg !15439
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15440
  br i1 %2, label %3, label %5, !dbg !15442

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15443
  br label %6, !dbg !15445

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14659, metadata !DIExpression()) #23, !dbg !15446
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15449, !srcloc !14665
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15453, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15456
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15458, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15456
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15461
  br i1 %3, label %5, label %4, !dbg !15462

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15463
  unreachable, !dbg !15463

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %6, metadata !14623, metadata !DIExpression()) #23, !dbg !15460
  call void @llvm.dbg.value(metadata i32 %6, metadata !14617, metadata !DIExpression()) #23, !dbg !15456
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15464
  call void @llvm.dbg.value(metadata i32 %6, metadata !15454, metadata !DIExpression()), !dbg !15455
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15465
  br i1 %7, label %12, label %8, !dbg !15467

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15468
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15471
  br i1 %9, label %11, label %10, !dbg !15472

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15473
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15473
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15473
  unreachable, !dbg !15473

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14645, metadata !DIExpression()) #23, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %6, metadata !14659, metadata !DIExpression()) #23, !dbg !15474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15476, !srcloc !14665
  br label %14, !dbg !15477

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15478
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15479
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15480
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15480
  br label %14, !dbg !15481

14:                                               ; preds = %12, %11
  ret void, !dbg !15481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15484, metadata !DIExpression()), !dbg !15485
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15486
  %3 = load i8, i8* %2, align 1, !dbg !15486
  %4 = and i8 %3, 16, !dbg !15487
  %5 = icmp ne i8 %4, 0, !dbg !15488
  ret i1 %5, !dbg !15489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15490 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15492, metadata !DIExpression()), !dbg !15493
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15494
  %3 = load i8, i8* %2, align 1, !dbg !15495
  %4 = and i8 %3, -17, !dbg !15495
  store i8 %4, i8* %2, align 1, !dbg !15495
  ret void, !dbg !15496
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15497 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15507, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15505, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15506, metadata !DIExpression()), !dbg !15511
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15512
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15512
  br i1 %5, label %9, label %6, !dbg !15512

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15512
  br i1 %7, label %9, label %8, !dbg !15515

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 773) #25, !dbg !15516
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 773) #25, !dbg !15516
  unreachable, !dbg !15516

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15508, metadata !DIExpression()), !dbg !15518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15519
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15521, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15519
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15524
  br i1 %11, label %13, label %12, !dbg !15525

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15526
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15526
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15526
  unreachable, !dbg !15526

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15519
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15510, metadata !DIExpression()), !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !15508, metadata !DIExpression()), !dbg !15518
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15528
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15531
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15533
  br i1 %14, label %16, label %15, !dbg !15534

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15535
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15535
  unreachable, !dbg !15535

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15521
  call void @llvm.dbg.value(metadata i32 %17, metadata !14623, metadata !DIExpression()) #23, !dbg !15523
  call void @llvm.dbg.value(metadata i32 %17, metadata !14617, metadata !DIExpression()) #23, !dbg !15519
  call void @llvm.dbg.value(metadata i32 %17, metadata !15510, metadata !DIExpression()), !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15531
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15536
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15538, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !15508, metadata !DIExpression()), !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !15508, metadata !DIExpression()), !dbg !15518
  ret void, !dbg !15539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15542, metadata !DIExpression()), !dbg !15543
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15544
  %3 = load i8, i8* %2, align 1, !dbg !15544
  %4 = and i8 %3, 1, !dbg !15545
  %5 = icmp ne i8 %4, 0, !dbg !15546
  ret i1 %5, !dbg !15547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15548 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15552, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15550, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15551, metadata !DIExpression()), !dbg !15553
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15554
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15555
  ret void, !dbg !15556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15561, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15562, metadata !DIExpression()), !dbg !15563
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15564
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15565
  %3 = icmp eq %union.anon* %1, null, !dbg !15566
  br i1 %3, label %24, label %4, !dbg !15568

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15569
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15571
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15572
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14834, metadata !DIExpression()) #23, !dbg !15573
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14840, metadata !DIExpression()) #23, !dbg !15573
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15575
  br i1 %7, label %8, label %9, !dbg !15576

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15577
  unreachable, !dbg !15577

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15578
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14841, metadata !DIExpression()) #23, !dbg !15573
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15579
  br i1 %11, label %22, label %12, !dbg !15578

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14841, metadata !DIExpression()) #23, !dbg !15573
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15580
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14841, metadata !DIExpression()) #23, !dbg !15573
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15581
  %16 = icmp sgt i32 %15, 0, !dbg !15582
  br i1 %16, label %17, label %19, !dbg !15583

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15584
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15585
  br label %24, !dbg !15586

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15579
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14841, metadata !DIExpression()) #23, !dbg !15573
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15579
  br i1 %21, label %22, label %12, !dbg !15578, !llvm.loop !15587

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15589
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15590
  br label %24, !dbg !15591

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15593 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15598, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15597, metadata !DIExpression()), !dbg !15599
  %4 = icmp eq i64 %3, -1, !dbg !15600
  br i1 %4, label %6, label %5, !dbg !15602

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.316(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15603
  br label %6, !dbg !15605

6:                                                ; preds = %5, %2
  ret void, !dbg !15606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.316(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15607 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15610, metadata !DIExpression()), !dbg !15611
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15609, metadata !DIExpression()), !dbg !15611
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15612
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15613
  ret void, !dbg !15614
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15615 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15617, metadata !DIExpression()), !dbg !15625
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15626
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15626
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15618, metadata !DIExpression()), !dbg !15625
  call void @llvm.dbg.value(metadata i32 0, metadata !15619, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15628
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15630, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15628
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15633
  br i1 %5, label %7, label %6, !dbg !15634

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15635
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15635
  unreachable, !dbg !15635

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15628
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15636
  call void @llvm.dbg.value(metadata i32 undef, metadata !15621, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15619, metadata !DIExpression()), !dbg !15627
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15637
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15638
  %10 = load i8, i8* %9, align 1, !dbg !15638
  %11 = and i8 %10, 40, !dbg !15639
  %12 = icmp eq i8 %11, 0, !dbg !15639
  call void @llvm.dbg.value(metadata i1 %12, metadata !15622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15640
  br i1 %12, label %13, label %20, !dbg !15641

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15642
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15642
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15642
  %17 = icmp eq %union.anon* %16, null, !dbg !15646
  br i1 %17, label %19, label %18, !dbg !15647

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15648
  br label %19, !dbg !15650

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.314(%struct.k_thread* noundef nonnull %3) #24, !dbg !15651
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15652
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15653
  br label %20, !dbg !15654

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15655
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15657
  br i1 %21, label %23, label %22, !dbg !15658

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15659
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15659
  unreachable, !dbg !15659

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15630
  call void @llvm.dbg.value(metadata i32 %24, metadata !14623, metadata !DIExpression()) #23, !dbg !15632
  call void @llvm.dbg.value(metadata i32 %24, metadata !14617, metadata !DIExpression()) #23, !dbg !15628
  call void @llvm.dbg.value(metadata i32 %24, metadata !15621, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15660
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15662, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !15619, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15619, metadata !DIExpression()), !dbg !15627
  ret void, !dbg !15663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15664 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15666, metadata !DIExpression()), !dbg !15667
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15668
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15669
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15670
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15671
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15672
  ret void, !dbg !15673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15674 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15678, metadata !DIExpression()), !dbg !15679
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15680
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15680
  %4 = icmp eq %union.anon* %3, null, !dbg !15680
  br i1 %4, label %5, label %6, !dbg !15683

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 726) #25, !dbg !15684
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 726) #25, !dbg !15684
  unreachable, !dbg !15684

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15689, metadata !DIExpression()), !dbg !15690
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15691
  %3 = load i8, i8* %2, align 1, !dbg !15692
  %4 = and i8 %3, -3, !dbg !15692
  store i8 %4, i8* %2, align 1, !dbg !15692
  ret void, !dbg !15693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15696, metadata !DIExpression()), !dbg !15697
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15698
  br i1 %2, label %3, label %7, !dbg !15700

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14803, metadata !DIExpression()) #23, !dbg !15701
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15704
  %5 = load i8, i8* %4, align 1, !dbg !15705
  %6 = and i8 %5, 127, !dbg !15705
  store i8 %6, i8* %4, align 1, !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()) #23, !dbg !15706
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15708
  br label %7, !dbg !15709

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15710
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15711
  %10 = zext i1 %9 to i32, !dbg !15711
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15712
  ret void, !dbg !15713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15714 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15716, metadata !DIExpression()), !dbg !15717
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15718
  %3 = load i8, i8* %2, align 1, !dbg !15719
  %4 = or i8 %3, 2, !dbg !15719
  store i8 %4, i8* %2, align 1, !dbg !15719
  ret void, !dbg !15720
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15723, metadata !DIExpression()), !dbg !15727
  call void @llvm.dbg.value(metadata i32 0, metadata !15724, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15729
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15731, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15729
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15734
  br i1 %3, label %5, label %4, !dbg !15735

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15736
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15736
  unreachable, !dbg !15736

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15729
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata i32 undef, metadata !15724, metadata !DIExpression()), !dbg !15728
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15738
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15741
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15743
  br i1 %6, label %8, label %7, !dbg !15744

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15745
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15745
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15745
  unreachable, !dbg !15745

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15731
  call void @llvm.dbg.value(metadata i32 %9, metadata !14623, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata i32 %9, metadata !14617, metadata !DIExpression()) #23, !dbg !15729
  call void @llvm.dbg.value(metadata i32 %9, metadata !15726, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15741
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15748, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !15724, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata i32 undef, metadata !15724, metadata !DIExpression()), !dbg !15728
  ret void, !dbg !15749
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15750 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15756, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i32 %0, metadata !15754, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15755, metadata !DIExpression()), !dbg !15761
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15762
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15763
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15764
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15765
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15766
  call void @llvm.dbg.value(metadata i32 %6, metadata !15757, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i32 0, metadata !15758, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15768
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15770, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15768
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15773
  br i1 %8, label %10, label %9, !dbg !15774

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15775
  unreachable, !dbg !15775

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15768
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15776
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !15758, metadata !DIExpression()), !dbg !15767
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15777
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15781
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15782
  br i1 %13, label %14, label %15, !dbg !15783

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15784
  br label %15, !dbg !15786

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15787
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15789
  br i1 %16, label %18, label %17, !dbg !15790

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15791
  unreachable, !dbg !15791

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15770
  call void @llvm.dbg.value(metadata i32 %19, metadata !14623, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 %19, metadata !14617, metadata !DIExpression()) #23, !dbg !15768
  call void @llvm.dbg.value(metadata i32 %19, metadata !15760, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15787
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15792
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15794, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !15758, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !15758, metadata !DIExpression()), !dbg !15767
  ret i32 %6, !dbg !15795
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15796 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15801, metadata !DIExpression()), !dbg !15804
  call void @llvm.dbg.value(metadata i64 undef, metadata !15803, metadata !DIExpression()), !dbg !15804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15800, metadata !DIExpression()), !dbg !15804
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15802, metadata !DIExpression()), !dbg !15804
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15805
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15806
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15807
  br i1 %6, label %7, label %8, !dbg !15810

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 846) #25, !dbg !15811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 846) #25, !dbg !15811
  unreachable, !dbg !15811

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15813
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15815, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15813
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15818
  br i1 %10, label %12, label %11, !dbg !15819

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15820
  unreachable, !dbg !15820

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15813
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15821
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15822
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15298, metadata !DIExpression()) #23, !dbg !15824
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15826
  br i1 %14, label %16, label %15, !dbg !15827

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15828
  unreachable, !dbg !15828

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()) #23, !dbg !15829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15294, metadata !DIExpression()) #23, !dbg !15829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15298, metadata !DIExpression()) #23, !dbg !15831
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15833
  br i1 %17, label %19, label %18, !dbg !15834

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15835
  unreachable, !dbg !15835

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15289, metadata !DIExpression()) #23, !dbg !15829
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15836
  ret i32 %21, !dbg !15837
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15838 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15842, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15843, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i32 0, metadata !15844, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15849
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15851, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15849
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15854
  br i1 %3, label %5, label %4, !dbg !15855

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15856
  unreachable, !dbg !15856

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15849
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15857
  call void @llvm.dbg.value(metadata i32 undef, metadata !15846, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15843, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i32 undef, metadata !15844, metadata !DIExpression()), !dbg !15848
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15858
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15843, metadata !DIExpression()), !dbg !15847
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15861
  br i1 %8, label %10, label %9, !dbg !15863

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15864
  br label %10, !dbg !15866

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15867
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15869
  br i1 %11, label %13, label %12, !dbg !15870

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15871
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15871
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15871
  unreachable, !dbg !15871

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15851
  call void @llvm.dbg.value(metadata i32 %14, metadata !14623, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata i32 %14, metadata !14617, metadata !DIExpression()) #23, !dbg !15849
  call void @llvm.dbg.value(metadata i32 %14, metadata !15846, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15867
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15872
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15874, !srcloc !14665
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15843, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i32 undef, metadata !15844, metadata !DIExpression()), !dbg !15848
  ret %struct.k_thread* %7, !dbg !15875
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15876 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15878, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15879, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.value(metadata i32 0, metadata !15880, metadata !DIExpression()), !dbg !15884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15885
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15887, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15885
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15890
  br i1 %3, label %5, label %4, !dbg !15891

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15892
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15892
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15892
  unreachable, !dbg !15892

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15885
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15893
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()), !dbg !15884
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15879, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !15880, metadata !DIExpression()), !dbg !15884
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15894
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15879, metadata !DIExpression()), !dbg !15883
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15897
  br i1 %8, label %11, label %9, !dbg !15899

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15900
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15902
  br label %11, !dbg !15903

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15904
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15906
  br i1 %12, label %14, label %13, !dbg !15907

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15908
  unreachable, !dbg !15908

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15887
  call void @llvm.dbg.value(metadata i32 %15, metadata !14623, metadata !DIExpression()) #23, !dbg !15889
  call void @llvm.dbg.value(metadata i32 %15, metadata !14617, metadata !DIExpression()) #23, !dbg !15885
  call void @llvm.dbg.value(metadata i32 %15, metadata !15882, metadata !DIExpression()), !dbg !15884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15909
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15911, !srcloc !14665
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15879, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !15880, metadata !DIExpression()), !dbg !15884
  ret %struct.k_thread* %7, !dbg !15912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15913 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15915, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15723, metadata !DIExpression()) #23, !dbg !15917
  call void @llvm.dbg.value(metadata i32 0, metadata !15724, metadata !DIExpression()) #23, !dbg !15919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15920
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15922, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15920
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15925
  br i1 %3, label %5, label %4, !dbg !15926

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15927
  unreachable, !dbg !15927

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15920
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15928
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #23, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !15724, metadata !DIExpression()) #23, !dbg !15919
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !15930
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15932
  br i1 %6, label %8, label %7, !dbg !15933

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15934
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15934
  unreachable, !dbg !15934

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %9, metadata !14623, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 %9, metadata !14617, metadata !DIExpression()) #23, !dbg !15920
  call void @llvm.dbg.value(metadata i32 %9, metadata !15726, metadata !DIExpression()) #23, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !15930
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !15935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15937, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !15724, metadata !DIExpression()) #23, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !15724, metadata !DIExpression()) #23, !dbg !15919
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15938
  ret void, !dbg !15939
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15940 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15942, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 %1, metadata !15943, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i8 0, metadata !15944, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 0, metadata !15945, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !15950
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15952, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !15954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15950
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15955
  br i1 %4, label %6, label %5, !dbg !15956

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15957
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15957
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15957
  unreachable, !dbg !15957

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !15954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !15950
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15958
  call void @llvm.dbg.value(metadata i32 undef, metadata !15947, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i8 poison, metadata !15944, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !15945, metadata !DIExpression()), !dbg !15949
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15959
  call void @llvm.dbg.value(metadata i1 %9, metadata !15944, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15948
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15962

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14803, metadata !DIExpression()) #23, !dbg !15963
  %14 = load i8, i8* %7, align 1, !dbg !15969
  %15 = and i8 %14, 127, !dbg !15969
  store i8 %15, i8* %7, align 1, !dbg !15969
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()) #23, !dbg !15970
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15972
  store i8 %12, i8* %11, align 2, !dbg !15973
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14820, metadata !DIExpression()) #23, !dbg !15974
  %16 = load i8, i8* %7, align 1, !dbg !15976
  %17 = or i8 %16, -128, !dbg !15976
  store i8 %17, i8* %7, align 1, !dbg !15976
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14827, metadata !DIExpression()) #23, !dbg !15977
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14834, metadata !DIExpression()) #23, !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14840, metadata !DIExpression()) #23, !dbg !15979
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15981
  br i1 %18, label %19, label %20, !dbg !15982

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15983
  unreachable, !dbg !15983

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15984
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14841, metadata !DIExpression()) #23, !dbg !15979
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15985
  br i1 %22, label %32, label %23, !dbg !15984

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14841, metadata !DIExpression()) #23, !dbg !15979
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15986
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14841, metadata !DIExpression()) #23, !dbg !15979
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15987
  %27 = icmp sgt i32 %26, 0, !dbg !15988
  br i1 %27, label %28, label %29, !dbg !15989

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15990
  br label %33, !dbg !15991

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15985
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14841, metadata !DIExpression()) #23, !dbg !15979
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15985
  br i1 %31, label %32, label %23, !dbg !15984, !llvm.loop !15992

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15994
  br label %33, !dbg !15995

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15996
  br label %35, !dbg !15997

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15998
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !16000
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16002
  br i1 %36, label %38, label %37, !dbg !16003

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16004
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16004
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16004
  unreachable, !dbg !16004

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15952
  call void @llvm.dbg.value(metadata i32 %39, metadata !14623, metadata !DIExpression()) #23, !dbg !15954
  call void @llvm.dbg.value(metadata i32 %39, metadata !14617, metadata !DIExpression()) #23, !dbg !15950
  call void @llvm.dbg.value(metadata i32 %39, metadata !15947, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !16005
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !16007, !srcloc !14665
  call void @llvm.dbg.value(metadata i8 poison, metadata !15944, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !15945, metadata !DIExpression()), !dbg !15949
  ret i1 %9, !dbg !16008
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16009 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16013, metadata !DIExpression()), !dbg !16016
  call void @llvm.dbg.value(metadata i32 %1, metadata !16014, metadata !DIExpression()), !dbg !16016
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16017
  call void @llvm.dbg.value(metadata i1 %3, metadata !16015, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16016
  br i1 %3, label %4, label %12, !dbg !16018

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16020
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16021
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16021
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16021
  %9 = load i8, i8* %8, align 1, !dbg !16021
  %10 = icmp eq i8 %9, 0, !dbg !16022
  br i1 %10, label %11, label %12, !dbg !16023

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16024
  br label %12, !dbg !16026

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16028 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16030, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !16034
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16036, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !16038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16034
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16039
  br i1 %2, label %4, label %3, !dbg !16040

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16041
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16041
  unreachable, !dbg !16041

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16034
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16032, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata i32 undef, metadata !16030, metadata !DIExpression()), !dbg !16033
  tail call fastcc void @z_sched_lock() #24, !dbg !16043
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !16046
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16048
  br i1 %5, label %7, label %6, !dbg !16049

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16050
  unreachable, !dbg !16050

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16036
  call void @llvm.dbg.value(metadata i32 %8, metadata !14623, metadata !DIExpression()) #23, !dbg !16038
  call void @llvm.dbg.value(metadata i32 %8, metadata !14617, metadata !DIExpression()) #23, !dbg !16034
  call void @llvm.dbg.value(metadata i32 %8, metadata !16032, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16046
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !16051
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16053, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !16030, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata i32 undef, metadata !16030, metadata !DIExpression()), !dbg !16033
  ret void, !dbg !16054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16055 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16056, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %1, metadata !15341, metadata !DIExpression()) #23, !dbg !16061
  %2 = icmp eq i32 %1, 0, !dbg !16062
  br i1 %2, label %4, label %3, !dbg !16063

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.324, i32 0, i32 0), i32 noundef 253) #25, !dbg !16064
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16064
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.324, i32 0, i32 0), i32 noundef 253) #25, !dbg !16064
  unreachable, !dbg !16064

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16066
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16066
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16066
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16066
  %9 = load i8, i8* %8, align 1, !dbg !16066
  %10 = icmp eq i8 %9, 1, !dbg !16066
  br i1 %10, label %11, label %12, !dbg !16069

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.324, i32 0, i32 0), i32 noundef 254) #25, !dbg !16070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.324, i32 0, i32 0), i32 noundef 254) #25, !dbg !16070
  unreachable, !dbg !16070

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16072
  store i8 %13, i8* %8, align 1, !dbg !16072
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16073, !srcloc !16075
  ret void, !dbg !16076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16077 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16079, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !16083
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16085, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !16087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16083
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16088
  br i1 %2, label %4, label %3, !dbg !16089

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16090
  unreachable, !dbg !16090

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16083
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16091
  call void @llvm.dbg.value(metadata i32 undef, metadata !16081, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()), !dbg !16082
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16092
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16092
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16092
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16092
  %9 = load i8, i8* %8, align 1, !dbg !16092
  %10 = icmp eq i8 %9, 0, !dbg !16092
  br i1 %10, label %11, label %12, !dbg !16097

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 999) #25, !dbg !16098
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16098
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 999) #25, !dbg !16098
  unreachable, !dbg !16098

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16100, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %13, metadata !15341, metadata !DIExpression()) #23, !dbg !16105
  %14 = icmp eq i32 %13, 0, !dbg !16106
  br i1 %14, label %16, label %15, !dbg !16107

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16108
  unreachable, !dbg !16108

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16110
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16111
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16111
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16111
  %21 = load i8, i8* %20, align 1, !dbg !16112
  %22 = add i8 %21, 1, !dbg !16112
  store i8 %22, i8* %20, align 1, !dbg !16112
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16113
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !16114
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16116
  br i1 %23, label %25, label %24, !dbg !16117

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16118
  unreachable, !dbg !16118

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16085
  call void @llvm.dbg.value(metadata i32 %26, metadata !14623, metadata !DIExpression()) #23, !dbg !16087
  call void @llvm.dbg.value(metadata i32 %26, metadata !14617, metadata !DIExpression()) #23, !dbg !16083
  call void @llvm.dbg.value(metadata i32 %26, metadata !16081, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16114
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !16119
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !16121, !srcloc !14665
  call void @llvm.dbg.value(metadata i32 1, metadata !16079, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()), !dbg !16082
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16122
  ret void, !dbg !16123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !16124 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16125
  ret %struct.k_thread* %1, !dbg !16126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16127 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16131, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16132, metadata !DIExpression()), !dbg !16136
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16133, metadata !DIExpression()), !dbg !16136
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16138
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16134, metadata !DIExpression()), !dbg !16136
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16139
  call void @llvm.dbg.value(metadata i32 %5, metadata !16135, metadata !DIExpression()), !dbg !16136
  %6 = icmp sgt i32 %5, 0, !dbg !16140
  br i1 %6, label %17, label %7, !dbg !16142

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16143
  br i1 %8, label %17, label %9, !dbg !16145

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16146
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16146
  %12 = load i32, i32* %11, align 8, !dbg !16146
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16148
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16148
  %15 = load i32, i32* %14, align 8, !dbg !16148
  %16 = icmp ult i32 %12, %15, !dbg !16149
  br label %17, !dbg !16150

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16151
  ret i1 %18, !dbg !16152
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16153 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16170, metadata !DIExpression()), !dbg !16185
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16171, metadata !DIExpression()), !dbg !16185
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16186
  br i1 %4, label %5, label %6, !dbg !16189

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16190
  unreachable, !dbg !16190

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16192
  %8 = load i32, i32* %7, align 4, !dbg !16193
  %9 = add nsw i32 %8, 1, !dbg !16193
  store i32 %9, i32* %7, align 4, !dbg !16193
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16194
  store i32 %8, i32* %10, align 8, !dbg !16195
  %11 = load i32, i32* %7, align 4, !dbg !16196
  %12 = icmp eq i32 %11, 0, !dbg !16197
  br i1 %12, label %13, label %35, !dbg !16198

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16199
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16199
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16173, metadata !DIExpression()), !dbg !16199
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16199
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16199
  %17 = load i32, i32* %16, align 4, !dbg !16199
  %18 = shl i32 %17, 2, !dbg !16199
  %19 = alloca i8, i32 %18, align 8, !dbg !16199
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16199
  store i8* %19, i8** %20, align 4, !dbg !16199
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16199
  %22 = alloca i8, i32 %17, align 8, !dbg !16199
  store i8* %22, i8** %21, align 4, !dbg !16199
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16199
  store i32 -1, i32* %23, align 4, !dbg !16199
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16200
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16182, metadata !DIExpression()), !dbg !16201
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16172, metadata !DIExpression()), !dbg !16185
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16202
  br i1 %25, label %26, label %27, !dbg !16199

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16202
  br label %35, !dbg !16203

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16172, metadata !DIExpression()), !dbg !16185
  %29 = load i32, i32* %7, align 4, !dbg !16204
  %30 = add nsw i32 %29, 1, !dbg !16204
  store i32 %30, i32* %7, align 4, !dbg !16204
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16206
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16206
  store i32 %29, i32* %32, align 8, !dbg !16207
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16200
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16182, metadata !DIExpression()), !dbg !16201
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16172, metadata !DIExpression()), !dbg !16185
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16202
  br i1 %34, label %26, label %27, !dbg !16199, !llvm.loop !16208

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16210
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16211
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16212
  ret void, !dbg !16213
}

; Function Attrs: optsize
declare !dbg !16214 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16219 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16222 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16224, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16225, metadata !DIExpression()), !dbg !16226
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16227
  br i1 %3, label %4, label %5, !dbg !16230

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16231
  unreachable, !dbg !16231

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16233
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16234
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16235
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16236
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16236
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16238
  br i1 %10, label %11, label %13, !dbg !16239

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16240
  store i32 0, i32* %12, align 4, !dbg !16242
  br label %13, !dbg !16243

13:                                               ; preds = %11, %5
  ret void, !dbg !16244
}

; Function Attrs: optsize
declare !dbg !16245 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16246 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16250, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16251, metadata !DIExpression()), !dbg !16253
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16254
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16255
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16252, metadata !DIExpression()), !dbg !16253
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16251, metadata !DIExpression()), !dbg !16253
  ret %struct.k_thread* %4, !dbg !16256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16257 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16261, metadata !DIExpression()), !dbg !16262
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16263
  ret %struct.rbnode* %2, !dbg !16264
}

; Function Attrs: optsize
declare !dbg !16265 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !16268 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16278, metadata !DIExpression()), !dbg !16282
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16283
  %3 = load i32, i32* %2, align 4, !dbg !16283
  %4 = icmp eq i32 %3, 0, !dbg !16285
  br i1 %4, label %10, label %5, !dbg !16286

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16279, metadata !DIExpression()), !dbg !16282
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16287, !range !7376
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16288
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16280, metadata !DIExpression()), !dbg !16282
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16289
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16281, metadata !DIExpression()), !dbg !16282
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16279, metadata !DIExpression()), !dbg !16282
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16282
  ret %struct.k_thread* %11, !dbg !16290
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16291 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16295, metadata !DIExpression()), !dbg !16298
  call void @llvm.dbg.value(metadata i32 0, metadata !16296, metadata !DIExpression()), !dbg !16298
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16299
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16297, metadata !DIExpression()), !dbg !16298
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16300
  br i1 %3, label %8, label %4, !dbg !16301

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16302
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16304
  call void @llvm.dbg.value(metadata i32 1, metadata !16296, metadata !DIExpression()), !dbg !16298
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16299
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16297, metadata !DIExpression()), !dbg !16298
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16300
  br i1 %7, label %8, label %4, !dbg !16301, !llvm.loop !16305

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16298
  ret i32 %9, !dbg !16307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16308 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16310, metadata !DIExpression()), !dbg !16311
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16312
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16313
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16314
  ret %struct.k_thread* %4, !dbg !16315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16316 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16325, metadata !DIExpression()), !dbg !16326
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16327
  tail call fastcc void @sys_dlist_init.329(%struct._dnode* noundef nonnull %2) #24, !dbg !16328
  ret void, !dbg !16329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.329(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16330 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16334, metadata !DIExpression()), !dbg !16335
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16336
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16337
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16338
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16339
  ret void, !dbg !16340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16341 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16342
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16343
  ret void, !dbg !16344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16350, metadata !DIExpression()), !dbg !16351
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16352
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16352
  %4 = load i8, i8* %3, align 2, !dbg !16352
  %5 = sext i8 %4 to i32, !dbg !16353
  ret i32 %5, !dbg !16354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16355 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16359, metadata !DIExpression()), !dbg !16362
  call void @llvm.dbg.value(metadata i32 %1, metadata !16360, metadata !DIExpression()), !dbg !16362
  %3 = add i32 %1, 16, !dbg !16363
  %4 = icmp ult i32 %3, 31, !dbg !16363
  br i1 %4, label %6, label %5, !dbg !16363

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.333, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16367
  unreachable, !dbg !16367

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16369, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %7, metadata !15341, metadata !DIExpression()) #23, !dbg !16374
  %8 = icmp eq i32 %7, 0, !dbg !16375
  br i1 %8, label %10, label %9, !dbg !16376

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16377
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16377
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16377
  unreachable, !dbg !16377

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16361, metadata !DIExpression()), !dbg !16362
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16379
  ret void, !dbg !16380
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16381 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16382
  br i1 %1, label %8, label %2, !dbg !16383

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16384
  br i1 %3, label %8, label %4, !dbg !16385

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16386
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16387
  %7 = xor i1 %6, true, !dbg !16385
  br label %8, !dbg !16385

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16389 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16390, !range !6555
  %2 = icmp eq i8 %1, 0, !dbg !16390
  ret i1 %2, !dbg !16391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16392 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16395, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %1, metadata !15341, metadata !DIExpression()) #23, !dbg !16400
  %2 = icmp eq i32 %1, 0, !dbg !16401
  br i1 %2, label %4, label %3, !dbg !16402

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16403
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16403
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16403
  unreachable, !dbg !16403

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !16405
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16407, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16405
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16410
  br i1 %6, label %8, label %7, !dbg !16411

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16412
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16412
  unreachable, !dbg !16412

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16405
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()), !dbg !16414
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16415
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14803, metadata !DIExpression()) #23, !dbg !16418
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16420
  %11 = load i8, i8* %10, align 1, !dbg !16421
  %12 = and i8 %11, 127, !dbg !16421
  store i8 %12, i8* %10, align 1, !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14811, metadata !DIExpression()) #23, !dbg !16422
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16424
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16425
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14820, metadata !DIExpression()) #23, !dbg !16426
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16428
  %15 = load i8, i8* %14, align 1, !dbg !16429
  %16 = or i8 %15, -128, !dbg !16429
  store i8 %16, i8* %14, align 1, !dbg !16429
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14827, metadata !DIExpression()) #23, !dbg !16430
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14834, metadata !DIExpression()) #23, !dbg !16432
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14840, metadata !DIExpression()) #23, !dbg !16432
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16434
  br i1 %17, label %18, label %19, !dbg !16435

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !16436
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !16436
  unreachable, !dbg !16436

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16437
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14841, metadata !DIExpression()) #23, !dbg !16432
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16438
  br i1 %21, label %32, label %22, !dbg !16437

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14841, metadata !DIExpression()) #23, !dbg !16432
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16439
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14841, metadata !DIExpression()) #23, !dbg !16432
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16440
  %26 = icmp sgt i32 %25, 0, !dbg !16441
  br i1 %26, label %27, label %29, !dbg !16442

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16443
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16444
  br label %34, !dbg !16445

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16438
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14841, metadata !DIExpression()) #23, !dbg !16432
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16438
  br i1 %31, label %32, label %22, !dbg !16437, !llvm.loop !16446

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16448
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16449
  br label %34, !dbg !16450

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()) #23, !dbg !16452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15294, metadata !DIExpression()) #23, !dbg !16452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15298, metadata !DIExpression()) #23, !dbg !16454
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16456
  br i1 %35, label %37, label %36, !dbg !16457

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16458
  unreachable, !dbg !16458

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16407
  call void @llvm.dbg.value(metadata i32 %38, metadata !14623, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata i32 %38, metadata !14617, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 %38, metadata !16394, metadata !DIExpression()), !dbg !16414
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()) #23, !dbg !16452
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16459
  ret void, !dbg !16460
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16461 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16465, metadata !DIExpression()), !dbg !16468
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16469, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %3, metadata !15341, metadata !DIExpression()) #23, !dbg !16474
  %4 = icmp eq i32 %3, 0, !dbg !16475
  br i1 %4, label %6, label %5, !dbg !16476

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16477
  unreachable, !dbg !16477

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16479
  br i1 %7, label %8, label %10, !dbg !16481

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16482
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16484
  br label %15, !dbg !16485

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16466, metadata !DIExpression()), !dbg !16468
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16486
  %12 = sext i32 %11 to i64, !dbg !16486
  call void @llvm.dbg.value(metadata i64 %12, metadata !16466, metadata !DIExpression()), !dbg !16468
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16487
  %14 = trunc i64 %13 to i32, !dbg !16487
  call void @llvm.dbg.value(metadata i32 %14, metadata !16467, metadata !DIExpression()), !dbg !16468
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16468
  ret i32 %16, !dbg !16488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16493, metadata !DIExpression()), !dbg !16494
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16495, !srcloc !16497
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16498
  ret void, !dbg !16499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16500 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16504, metadata !DIExpression()), !dbg !16508
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16509, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %2, metadata !15341, metadata !DIExpression()) #23, !dbg !16514
  %3 = icmp eq i32 %2, 0, !dbg !16515
  br i1 %3, label %5, label %4, !dbg !16516

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16517
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16517
  unreachable, !dbg !16517

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16519
  br i1 %6, label %7, label %8, !dbg !16521

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16522
  br label %43, !dbg !16524

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16506, metadata !DIExpression()), !dbg !16508
  %9 = icmp sgt i64 %0, -3, !dbg !16525
  br i1 %9, label %10, label %14, !dbg !16527

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16528
  %12 = trunc i64 %0 to i32, !dbg !16530
  %13 = add i32 %11, %12, !dbg !16530
  call void @llvm.dbg.value(metadata i32 %13, metadata !16505, metadata !DIExpression()), !dbg !16508
  br label %17, !dbg !16531

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16532
  %16 = sub i32 -2, %15, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %16, metadata !16505, metadata !DIExpression()), !dbg !16508
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16534
  call void @llvm.dbg.value(metadata i32 %18, metadata !16505, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !16535
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16537, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16535
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16540
  br i1 %20, label %22, label %21, !dbg !16541

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16542
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16542
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16542
  unreachable, !dbg !16542

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16535
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16543
  call void @llvm.dbg.value(metadata i32 undef, metadata !16507, metadata !DIExpression()), !dbg !16508
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16544
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16545
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16546
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16547
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16548
  tail call fastcc void @z_add_thread_timeout.316(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16548
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16549
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16550
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()) #23, !dbg !16551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15294, metadata !DIExpression()) #23, !dbg !16551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15298, metadata !DIExpression()) #23, !dbg !16553
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16555
  br i1 %27, label %29, label %28, !dbg !16556

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16557
  unreachable, !dbg !16557

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16537
  call void @llvm.dbg.value(metadata i32 %30, metadata !14623, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata i32 %30, metadata !14617, metadata !DIExpression()) #23, !dbg !16535
  call void @llvm.dbg.value(metadata i32 %30, metadata !16507, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()) #23, !dbg !16551
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16558
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16559
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16559
  br i1 %33, label %34, label %35, !dbg !16562

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16563
  unreachable, !dbg !16563

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16565
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16566
  %38 = zext i32 %37 to i64, !dbg !16566
  %39 = sub nsw i64 %36, %38, !dbg !16567
  call void @llvm.dbg.value(metadata i64 %39, metadata !16504, metadata !DIExpression()), !dbg !16508
  %40 = icmp sgt i64 %39, 0, !dbg !16568
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16568
  %42 = trunc i64 %41 to i32, !dbg !16568
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16508
  ret i32 %44, !dbg !16569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16570 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16572, metadata !DIExpression()), !dbg !16573
  call void @llvm.dbg.value(metadata i64 %0, metadata !14671, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 10000, metadata !14674, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 1000, metadata !14675, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i8 1, metadata !14676, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i1 false, metadata !14677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16574
  call void @llvm.dbg.value(metadata i1 false, metadata !14678, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16574
  call void @llvm.dbg.value(metadata i8 0, metadata !14679, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i1 false, metadata !14680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16574
  call void @llvm.dbg.value(metadata i1 true, metadata !14681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16574
  call void @llvm.dbg.value(metadata i64 0, metadata !14682, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i64 0, metadata !14682, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i64 %0, metadata !14671, metadata !DIExpression()), !dbg !16574
  %2 = udiv i64 %0, 10, !dbg !16576
  ret i64 %2, !dbg !16580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16581 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16582, !srcloc !16584
  tail call void @z_impl_k_yield() #24, !dbg !16585
  ret void, !dbg !16586
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16591, metadata !DIExpression()), !dbg !16593
  %2 = sext i32 %0 to i64, !dbg !16594
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16595
  call void @llvm.dbg.value(metadata i64 %3, metadata !16592, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16593
  %4 = shl i64 %3, 32, !dbg !16596
  %5 = ashr exact i64 %4, 32, !dbg !16596
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16597
  call void @llvm.dbg.value(metadata i32 %6, metadata !16592, metadata !DIExpression()), !dbg !16593
  %7 = sext i32 %6 to i64, !dbg !16598
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16599
  %9 = trunc i64 %8 to i32, !dbg !16599
  ret i32 %9, !dbg !16600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !16601 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16603, metadata !DIExpression()), !dbg !16604
  call void @llvm.dbg.value(metadata i64 %0, metadata !14671, metadata !DIExpression()), !dbg !16605
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14674, metadata !DIExpression()), !dbg !16605
  call void @llvm.dbg.value(metadata i32 10000, metadata !14675, metadata !DIExpression()), !dbg !16605
  call void @llvm.dbg.value(metadata i8 1, metadata !14676, metadata !DIExpression()), !dbg !16605
  call void @llvm.dbg.value(metadata i1 false, metadata !14677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16605
  call void @llvm.dbg.value(metadata i1 true, metadata !14678, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16605
  call void @llvm.dbg.value(metadata i8 0, metadata !14679, metadata !DIExpression()), !dbg !16605
  call void @llvm.dbg.value(metadata i1 false, metadata !14680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16605
  call void @llvm.dbg.value(metadata i1 true, metadata !14681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16605
  call void @llvm.dbg.value(metadata i64 0, metadata !14682, metadata !DIExpression()), !dbg !16605
  call void @llvm.dbg.value(metadata i64 0, metadata !14682, metadata !DIExpression()), !dbg !16605
  %2 = add i64 %0, 99, !dbg !16607
  call void @llvm.dbg.value(metadata i64 %2, metadata !14671, metadata !DIExpression()), !dbg !16605
  %3 = udiv i64 %2, 100, !dbg !16608
  ret i64 %3, !dbg !16609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16610 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16612, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata i64 %0, metadata !14671, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i32 10000, metadata !14674, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14675, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i8 1, metadata !14676, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i1 false, metadata !14677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16614
  call void @llvm.dbg.value(metadata i1 false, metadata !14678, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16614
  call void @llvm.dbg.value(metadata i8 0, metadata !14679, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i1 true, metadata !14680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16614
  call void @llvm.dbg.value(metadata i1 false, metadata !14681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16614
  call void @llvm.dbg.value(metadata i64 0, metadata !14682, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i64 0, metadata !14682, metadata !DIExpression()), !dbg !16614
  %2 = mul i64 %0, 100, !dbg !16616
  ret i64 %2, !dbg !16618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16621, metadata !DIExpression()), !dbg !16622
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16623
  br i1 %2, label %14, label %3, !dbg !16625

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16626
  %5 = icmp slt i32 %4, 0, !dbg !16628
  br i1 %5, label %6, label %10, !dbg !16629

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16630
  %8 = load i8, i8* %7, align 1, !dbg !16630
  %9 = icmp eq i8 %8, 16, !dbg !16633
  br i1 %9, label %10, label %14, !dbg !16634

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16635
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16636
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16637, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %11, metadata !15341, metadata !DIExpression()) #23, !dbg !16641
  %12 = icmp eq i32 %11, 0, !dbg !16642
  br i1 %12, label %13, label %14, !dbg !16643

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16644
  br label %14, !dbg !16646

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16648 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16650, metadata !DIExpression()), !dbg !16651
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16652
  %3 = load i8, i8* %2, align 1, !dbg !16652
  %4 = and i8 %3, 2, !dbg !16653
  %5 = icmp ne i8 %4, 0, !dbg !16654
  ret i1 %5, !dbg !16655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16656 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16661
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16660, metadata !DIExpression()), !dbg !16662
  ret %struct.k_thread* %1, !dbg !16663
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16664 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16665, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %1, metadata !15341, metadata !DIExpression()) #23, !dbg !16668
  %2 = icmp eq i32 %1, 0, !dbg !16669
  br i1 %2, label %3, label %8, !dbg !16670

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16671
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16672
  %6 = icmp ne i32 %5, 0, !dbg !16670
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16674 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16676, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !16679
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16681, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !16683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16679
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16684
  br i1 %3, label %5, label %4, !dbg !16685

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16686
  unreachable, !dbg !16686

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16681
  call void @llvm.dbg.value(metadata i32 %6, metadata !14623, metadata !DIExpression()) #23, !dbg !16683
  call void @llvm.dbg.value(metadata i32 %6, metadata !14617, metadata !DIExpression()) #23, !dbg !16679
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16687
  call void @llvm.dbg.value(metadata i32 %6, metadata !16677, metadata !DIExpression()), !dbg !16678
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16688
  %8 = load i8, i8* %7, align 4, !dbg !16688
  %9 = and i8 %8, 1, !dbg !16690
  %10 = icmp eq i8 %9, 0, !dbg !16691
  br i1 %10, label %15, label %11, !dbg !16692

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !16693
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16696
  br i1 %12, label %14, label %13, !dbg !16697

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16698
  unreachable, !dbg !16698

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14645, metadata !DIExpression()) #23, !dbg !16693
  call void @llvm.dbg.value(metadata i32 %6, metadata !14659, metadata !DIExpression()) #23, !dbg !16699
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16701, !srcloc !14665
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16702
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.340, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16702
  unreachable, !dbg !16702

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16706
  %17 = load i8, i8* %16, align 1, !dbg !16706
  %18 = and i8 %17, 8, !dbg !16708
  %19 = icmp eq i8 %18, 0, !dbg !16709
  br i1 %19, label %24, label %20, !dbg !16710

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !16711
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16714
  br i1 %21, label %23, label %22, !dbg !16715

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16716
  unreachable, !dbg !16716

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14645, metadata !DIExpression()) #23, !dbg !16711
  call void @llvm.dbg.value(metadata i32 %6, metadata !14659, metadata !DIExpression()) #23, !dbg !16717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16719, !srcloc !14665
  br label %39, !dbg !16720

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16721
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16722
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16724
  br i1 %26, label %27, label %35, !dbg !16725

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16726, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %28, metadata !15341, metadata !DIExpression()) #23, !dbg !16729
  %29 = icmp eq i32 %28, 0, !dbg !16730
  br i1 %29, label %30, label %35, !dbg !16731

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15294, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15298, metadata !DIExpression()) #23, !dbg !16735
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16737
  br i1 %31, label %33, label %32, !dbg !16738

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16739
  unreachable, !dbg !16739

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15289, metadata !DIExpression()) #23, !dbg !16732
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.341, i32 0, i32 0)) #25, !dbg !16741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16741
  unreachable, !dbg !16741

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !16745
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16747
  br i1 %36, label %38, label %37, !dbg !16748

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16749
  unreachable, !dbg !16749

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14645, metadata !DIExpression()) #23, !dbg !16745
  call void @llvm.dbg.value(metadata i32 %6, metadata !14659, metadata !DIExpression()) #23, !dbg !16750
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16752, !srcloc !14665
  br label %39, !dbg !16753

39:                                               ; preds = %38, %23
  ret void, !dbg !16753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16754 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16756, metadata !DIExpression()), !dbg !16757
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16758
  %3 = load i8, i8* %2, align 1, !dbg !16758
  %4 = and i8 %3, 8, !dbg !16760
  %5 = icmp eq i8 %4, 0, !dbg !16761
  br i1 %5, label %6, label %20, !dbg !16762

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16763
  %8 = or i8 %7, 8, !dbg !16763
  store i8 %8, i8* %2, align 1, !dbg !16763
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16765
  br i1 %9, label %10, label %12, !dbg !16767

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14803, metadata !DIExpression()) #23, !dbg !16768
  %11 = and i8 %8, 95, !dbg !16771
  store i8 %11, i8* %2, align 1, !dbg !16771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()) #23, !dbg !16772
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16774
  br label %12, !dbg !16775

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16776
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16776
  %15 = icmp eq %union.anon* %14, null, !dbg !16778
  br i1 %15, label %17, label %16, !dbg !16779

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16780
  br label %17, !dbg !16782

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16783
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16784
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16785
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16786
  br label %20, !dbg !16787

20:                                               ; preds = %17, %1
  ret void, !dbg !16788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16789 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16793, metadata !DIExpression()), !dbg !16795
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16796
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16794, metadata !DIExpression()), !dbg !16795
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16797
  br i1 %3, label %10, label %4, !dbg !16798

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16799
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16801
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16802, metadata !DIExpression()), !dbg !16808
  call void @llvm.dbg.value(metadata i32 0, metadata !16807, metadata !DIExpression()), !dbg !16808
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16810
  store i32 0, i32* %7, align 4, !dbg !16811
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16812
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16796
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16794, metadata !DIExpression()), !dbg !16795
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16797
  br i1 %9, label %10, label %4, !dbg !16798, !llvm.loop !16813

10:                                               ; preds = %4, %1
  ret void, !dbg !16815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16816 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16821, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16820, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !16825
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16827, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16825
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16830
  br i1 %4, label %6, label %5, !dbg !16831

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16832
  unreachable, !dbg !16832

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16827
  call void @llvm.dbg.value(metadata i32 %7, metadata !14623, metadata !DIExpression()) #23, !dbg !16829
  call void @llvm.dbg.value(metadata i32 %7, metadata !14617, metadata !DIExpression()) #23, !dbg !16825
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16833
  call void @llvm.dbg.value(metadata i32 %7, metadata !16822, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata i32 0, metadata !16823, metadata !DIExpression()), !dbg !16824
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16834
  %9 = load i8, i8* %8, align 1, !dbg !16834
  %10 = and i8 %9, 8, !dbg !16836
  %11 = icmp eq i8 %10, 0, !dbg !16837
  br i1 %11, label %12, label %35, !dbg !16838

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16821, metadata !DIExpression()), !dbg !16824
  %14 = icmp eq i64 %13, 0, !dbg !16839
  br i1 %14, label %35, label %15, !dbg !16841

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16842
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16844
  br i1 %17, label %35, label %18, !dbg !16845

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16846
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16846
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16847
  %22 = icmp eq %union.anon* %20, %21, !dbg !16848
  br i1 %22, label %35, label %23, !dbg !16849

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16850, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %24, metadata !15341, metadata !DIExpression()) #23, !dbg !16856
  %25 = icmp eq i32 %24, 0, !dbg !16857
  br i1 %25, label %27, label %26, !dbg !16858

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16859
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.344, i32 0, i32 0)) #25, !dbg !16859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16859
  unreachable, !dbg !16859

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16861
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16862
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16863
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16864
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16865
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()) #23, !dbg !16866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15294, metadata !DIExpression()) #23, !dbg !16866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15298, metadata !DIExpression()) #23, !dbg !16868
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16870
  br i1 %31, label %33, label %32, !dbg !16871

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16872
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16872
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16872
  unreachable, !dbg !16872

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15289, metadata !DIExpression()) #23, !dbg !16866
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16873
  call void @llvm.dbg.value(metadata i32 %34, metadata !16823, metadata !DIExpression()), !dbg !16824
  br label %40, !dbg !16874

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16875
  call void @llvm.dbg.value(metadata i32 %36, metadata !16823, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !16876
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16878
  br i1 %37, label %39, label %38, !dbg !16879

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16880
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16880
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16880
  unreachable, !dbg !16880

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14645, metadata !DIExpression()) #23, !dbg !16876
  call void @llvm.dbg.value(metadata i32 %7, metadata !14659, metadata !DIExpression()) #23, !dbg !16881
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16883, !srcloc !14665
  br label %40, !dbg !16884

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16824
  ret i32 %41, !dbg !16885
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16886 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16890, metadata !DIExpression()), !dbg !16898
  call void @llvm.dbg.value(metadata i32 %1, metadata !16891, metadata !DIExpression()), !dbg !16898
  call void @llvm.dbg.value(metadata i8* %2, metadata !16892, metadata !DIExpression()), !dbg !16898
  call void @llvm.dbg.value(metadata i8 0, metadata !16894, metadata !DIExpression()), !dbg !16898
  call void @llvm.dbg.value(metadata i32 0, metadata !16895, metadata !DIExpression()), !dbg !16899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14611, metadata !DIExpression()) #23, !dbg !16900
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16902, !srcloc !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()) #23, !dbg !16904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16900
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16905
  br i1 %5, label %7, label %6, !dbg !16906

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16907
  unreachable, !dbg !16907

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #23, !dbg !16904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #23, !dbg !16900
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16908
  call void @llvm.dbg.value(metadata i32 undef, metadata !16897, metadata !DIExpression()), !dbg !16899
  call void @llvm.dbg.value(metadata i8 poison, metadata !16894, metadata !DIExpression()), !dbg !16898
  call void @llvm.dbg.value(metadata i32 undef, metadata !16895, metadata !DIExpression()), !dbg !16899
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16909
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16893, metadata !DIExpression()), !dbg !16898
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16912
  br i1 %10, label %15, label %11, !dbg !16914

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16915, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i32 %1, metadata !16921, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i8* %2, metadata !16922, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16802, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata i32 %1, metadata !16807, metadata !DIExpression()), !dbg !16926
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16928
  store i32 %1, i32* %12, align 4, !dbg !16929
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16930
  store i8* %2, i8** %13, align 4, !dbg !16931
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16932
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16933
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16934
  call void @llvm.dbg.value(metadata i8 1, metadata !16894, metadata !DIExpression()), !dbg !16898
  br label %15, !dbg !16935

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16894, metadata !DIExpression()), !dbg !16898
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14650, metadata !DIExpression()) #23, !dbg !16936
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16938
  br i1 %16, label %18, label %17, !dbg !16939

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16940
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16940
  unreachable, !dbg !16940

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16898
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16902
  call void @llvm.dbg.value(metadata i32 %20, metadata !14623, metadata !DIExpression()) #23, !dbg !16904
  call void @llvm.dbg.value(metadata i32 %20, metadata !14617, metadata !DIExpression()) #23, !dbg !16900
  call void @llvm.dbg.value(metadata i32 %20, metadata !16897, metadata !DIExpression()), !dbg !16899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()) #23, !dbg !16936
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #23, !dbg !16941
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16943, !srcloc !14665
  call void @llvm.dbg.value(metadata i8 poison, metadata !16894, metadata !DIExpression()), !dbg !16898
  call void @llvm.dbg.value(metadata i32 undef, metadata !16895, metadata !DIExpression()), !dbg !16899
  ret i1 %19, !dbg !16944
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16945 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.value(metadata i64 undef, metadata !16953, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16950, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16952, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.value(metadata i8** %4, metadata !16954, metadata !DIExpression()), !dbg !16956
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16957
  call void @llvm.dbg.value(metadata i32 %6, metadata !16955, metadata !DIExpression()), !dbg !16956
  %7 = icmp eq i8** %4, null, !dbg !16958
  br i1 %7, label %12, label %8, !dbg !16960

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16961
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16963
  %11 = load i8*, i8** %10, align 4, !dbg !16963
  store i8* %11, i8** %4, align 4, !dbg !16964
  br label %12, !dbg !16965

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16967 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16969
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16970
  ret void, !dbg !16971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16972 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16982, metadata !DIExpression()), !dbg !16999
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16980, metadata !DIExpression()), !dbg !16999
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16981, metadata !DIExpression()), !dbg !16999
  %5 = icmp eq i64 %4, -1, !dbg !17000
  br i1 %5, label %63, label %6, !dbg !17002

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17003
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %7) #24, !dbg !17003
  br i1 %8, label %9, label %10, !dbg !17006

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 99) #25, !dbg !17007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.353, i32 0, i32 0)) #25, !dbg !17007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 99) #25, !dbg !17007
  unreachable, !dbg !17007

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17009
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17010
  call void @llvm.dbg.value(metadata i32 0, metadata !16983, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17019
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17021, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17019
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17029
  br i1 %13, label %15, label %14, !dbg !17032

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17033
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17033
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17033
  unreachable, !dbg !17033

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17021
  call void @llvm.dbg.value(metadata i32 %16, metadata !17024, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 %16, metadata !17018, metadata !DIExpression()) #23, !dbg !17019
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17035
  call void @llvm.dbg.value(metadata i32 %16, metadata !16989, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i32 undef, metadata !16983, metadata !DIExpression()), !dbg !17011
  %17 = icmp slt i64 %4, -1, !dbg !17036
  br i1 %17, label %18, label %24, !dbg !17037

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17038
  %20 = add i64 %4, %19, !dbg !17039
  %21 = sub i64 -2, %20, !dbg !17039
  call void @llvm.dbg.value(metadata i64 %21, metadata !16993, metadata !DIExpression()), !dbg !17040
  %22 = icmp sgt i64 %21, 1, !dbg !17041
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17041
  br label %29, !dbg !17042

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17043
  %26 = tail call fastcc i32 @elapsed.357() #24, !dbg !17045
  %27 = sext i32 %26 to i64, !dbg !17045
  %28 = add nsw i64 %25, %27, !dbg !17046
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17047
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17048
  store i64 %30, i64* %31, align 8, !dbg !17049
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !17050
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16990, metadata !DIExpression()), !dbg !17052
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17053
  br i1 %33, label %48, label %34, !dbg !17053

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17054
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16990, metadata !DIExpression()), !dbg !17052
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17058
  %38 = load i64, i64* %37, align 8, !dbg !17058
  %39 = icmp slt i64 %35, %38, !dbg !17059
  br i1 %39, label %40, label %44, !dbg !17060

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17058
  %42 = sub nsw i64 %38, %35, !dbg !17061
  store i64 %42, i64* %41, align 8, !dbg !17061
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17063
  tail call fastcc void @sys_dlist_insert.358(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !17064
  br label %49, !dbg !17065

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17066
  store i64 %45, i64* %31, align 8, !dbg !17066
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !17067
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16990, metadata !DIExpression()), !dbg !17052
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17053
  br i1 %47, label %48, label %34, !dbg !17053, !llvm.loop !17068

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.359(%struct._dnode* noundef nonnull %7) #24, !dbg !17070
  br label %49, !dbg !17073

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !17074
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17075
  br i1 %51, label %52, label %59, !dbg !17076

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !17077
  call void @llvm.dbg.value(metadata i32 %53, metadata !16996, metadata !DIExpression()), !dbg !17078
  %54 = icmp ne i32 %53, 0, !dbg !17079
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17081
  br i1 %57, label %59, label %58, !dbg !17081

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !17082
  br label %59, !dbg !17084

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17091
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17091
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17093
  br i1 %60, label %62, label %61, !dbg !17096

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17097
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17097
  unreachable, !dbg !17097

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17085, metadata !DIExpression()) #23, !dbg !17091
  call void @llvm.dbg.value(metadata i32 %16, metadata !17099, metadata !DIExpression()) #23, !dbg !17102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !17104, !srcloc !17105
  call void @llvm.dbg.value(metadata i32 undef, metadata !16983, metadata !DIExpression()), !dbg !17011
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17107 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17113, metadata !DIExpression()), !dbg !17114
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17115
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17115
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17116
  ret i1 %4, !dbg !17117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.357() unnamed_addr #1 !dbg !17118 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17121
  %2 = icmp eq i32 %1, 0, !dbg !17122
  br i1 %2, label %3, label %5, !dbg !17121

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17123
  br label %5, !dbg !17121

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17121
  ret i32 %6, !dbg !17124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !17125 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.364() #24, !dbg !17131
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17129, metadata !DIExpression()), !dbg !17132
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17133
  ret %struct._timeout* %2, !dbg !17134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.358(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17135 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17139, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17140, metadata !DIExpression()), !dbg !17143
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17144
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17144
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17141, metadata !DIExpression()), !dbg !17143
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17145
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17146
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17147
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17148
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17149
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17150
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17151
  ret void, !dbg !17152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17153 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17157, metadata !DIExpression()), !dbg !17159
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17160
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.362(%struct._dnode* noundef %2) #24, !dbg !17161
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17158, metadata !DIExpression()), !dbg !17159
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17162
  ret %struct._timeout* %4, !dbg !17163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.359(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17164 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17169, metadata !DIExpression()), !dbg !17172
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17170, metadata !DIExpression()), !dbg !17172
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17173
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17171, metadata !DIExpression()), !dbg !17172
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17174
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17175
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17176
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17177
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17178
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17179
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17180
  ret void, !dbg !17181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17182 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17187
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17184, metadata !DIExpression()), !dbg !17188
  %2 = tail call fastcc i32 @elapsed.357() #24, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %2, metadata !17185, metadata !DIExpression()), !dbg !17188
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17190
  br i1 %3, label %14, label %4, !dbg !17192

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17193
  %6 = load i64, i64* %5, align 8, !dbg !17193
  %7 = sext i32 %2 to i64, !dbg !17194
  %8 = sub nsw i64 %6, %7, !dbg !17195
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17196
  br i1 %9, label %14, label %10, !dbg !17197

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17198
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17198
  %13 = trunc i64 %12 to i32, !dbg !17198
  call void @llvm.dbg.value(metadata i32 %13, metadata !17186, metadata !DIExpression()), !dbg !17188
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17200
  call void @llvm.dbg.value(metadata i32 %15, metadata !17186, metadata !DIExpression()), !dbg !17188
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17201
  %17 = icmp ne i32 %16, 0, !dbg !17203
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17204
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17204
  call void @llvm.dbg.value(metadata i32 %20, metadata !17186, metadata !DIExpression()), !dbg !17188
  ret i32 %20, !dbg !17205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.362(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17206 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17210, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17211, metadata !DIExpression()), !dbg !17212
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17213
  br i1 %2, label %5, label %3, !dbg !17214

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.363(%struct._dnode* noundef nonnull %0) #24, !dbg !17215
  br label %5, !dbg !17214

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17214
  ret %struct._dnode* %6, !dbg !17216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.363(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17217 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17219, metadata !DIExpression()), !dbg !17221
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17220, metadata !DIExpression()), !dbg !17221
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17222
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17223
  br i1 %3, label %7, label %4, !dbg !17224

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17225
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17225
  br label %7, !dbg !17224

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17224
  ret %struct._dnode* %8, !dbg !17226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.364() unnamed_addr #8 !dbg !17227 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17231, metadata !DIExpression()), !dbg !17232
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.365() #24, !dbg !17233
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17233
  ret %struct._dnode* %3, !dbg !17234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.365() unnamed_addr #8 !dbg !17235 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17239, metadata !DIExpression()), !dbg !17240
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17241
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17242
  ret i1 %2, !dbg !17243
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17244 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17248, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i32 -22, metadata !17249, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i32 0, metadata !17250, metadata !DIExpression()), !dbg !17254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17255
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17257, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17259
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17259
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17255
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17260
  br i1 %3, label %5, label %4, !dbg !17261

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17262
  unreachable, !dbg !17262

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17259
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17255
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17263
  call void @llvm.dbg.value(metadata i32 undef, metadata !17252, metadata !DIExpression()), !dbg !17254
  call void @llvm.dbg.value(metadata i32 -22, metadata !17249, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !17250, metadata !DIExpression()), !dbg !17254
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17249, metadata !DIExpression()), !dbg !17253
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %6) #24, !dbg !17264
  br i1 %7, label %8, label %9, !dbg !17268

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17269
  call void @llvm.dbg.value(metadata i32 0, metadata !17249, metadata !DIExpression()), !dbg !17253
  br label %9, !dbg !17271

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17253
  call void @llvm.dbg.value(metadata i32 %10, metadata !17249, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17272
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17274
  br i1 %11, label %13, label %12, !dbg !17275

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17276
  unreachable, !dbg !17276

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17257
  call void @llvm.dbg.value(metadata i32 %14, metadata !17024, metadata !DIExpression()) #23, !dbg !17259
  call void @llvm.dbg.value(metadata i32 %14, metadata !17018, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 %14, metadata !17252, metadata !DIExpression()), !dbg !17254
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()) #23, !dbg !17277
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17279, !srcloc !17105
  call void @llvm.dbg.value(metadata i32 %10, metadata !17249, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !17250, metadata !DIExpression()), !dbg !17254
  ret i32 %10, !dbg !17280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17281 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17283, metadata !DIExpression()), !dbg !17284
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17285
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17287
  br i1 %3, label %10, label %4, !dbg !17288

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17289
  %6 = load i64, i64* %5, align 8, !dbg !17289
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17291
  %8 = load i64, i64* %7, align 8, !dbg !17292
  %9 = add nsw i64 %8, %6, !dbg !17292
  store i64 %9, i64* %7, align 8, !dbg !17292
  br label %10, !dbg !17293

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17294
  tail call fastcc void @sys_dlist_remove.368(%struct._dnode* noundef %11) #24, !dbg !17295
  ret void, !dbg !17296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.368(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17297 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17301, metadata !DIExpression()), !dbg !17304
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17305
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17305
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17302, metadata !DIExpression()), !dbg !17304
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17306
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17306
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17303, metadata !DIExpression()), !dbg !17304
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17307
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17308
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17309
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17310
  tail call fastcc void @sys_dnode_init.369(%struct._dnode* noundef %0) #24, !dbg !17311
  ret void, !dbg !17312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.369(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17313 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17315, metadata !DIExpression()), !dbg !17316
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17317
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17318
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17319
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17320
  ret void, !dbg !17321
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17322 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17328, metadata !DIExpression()), !dbg !17333
  call void @llvm.dbg.value(metadata i64 0, metadata !17329, metadata !DIExpression()), !dbg !17333
  call void @llvm.dbg.value(metadata i32 0, metadata !17330, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17335
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17337, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17335
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17340
  br i1 %3, label %5, label %4, !dbg !17341

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17342
  unreachable, !dbg !17342

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17335
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17343
  call void @llvm.dbg.value(metadata i32 undef, metadata !17332, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i64 0, metadata !17329, metadata !DIExpression()), !dbg !17333
  call void @llvm.dbg.value(metadata i32 undef, metadata !17330, metadata !DIExpression()), !dbg !17334
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17344
  call void @llvm.dbg.value(metadata i64 %6, metadata !17329, metadata !DIExpression()), !dbg !17333
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17347
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17349
  br i1 %7, label %9, label %8, !dbg !17350

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17351
  unreachable, !dbg !17351

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17337
  call void @llvm.dbg.value(metadata i32 %10, metadata !17024, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 %10, metadata !17018, metadata !DIExpression()) #23, !dbg !17335
  call void @llvm.dbg.value(metadata i32 %10, metadata !17332, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17347
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()) #23, !dbg !17352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17354, !srcloc !17105
  call void @llvm.dbg.value(metadata i64 %6, metadata !17329, metadata !DIExpression()), !dbg !17333
  call void @llvm.dbg.value(metadata i32 undef, metadata !17330, metadata !DIExpression()), !dbg !17334
  ret i64 %6, !dbg !17355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17356 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17358, metadata !DIExpression()), !dbg !17362
  call void @llvm.dbg.value(metadata i64 0, metadata !17359, metadata !DIExpression()), !dbg !17362
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.370(%struct._timeout* noundef %0) #24, !dbg !17363
  br i1 %2, label %21, label %3, !dbg !17365

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17366
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17360, metadata !DIExpression()), !dbg !17367
  call void @llvm.dbg.value(metadata i64 0, metadata !17359, metadata !DIExpression()), !dbg !17362
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17368
  br i1 %5, label %16, label %6, !dbg !17370

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17360, metadata !DIExpression()), !dbg !17367
  call void @llvm.dbg.value(metadata i64 %8, metadata !17359, metadata !DIExpression()), !dbg !17362
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17371
  %10 = load i64, i64* %9, align 8, !dbg !17371
  %11 = add nsw i64 %10, %8, !dbg !17373
  call void @llvm.dbg.value(metadata i64 %11, metadata !17359, metadata !DIExpression()), !dbg !17362
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17374
  br i1 %12, label %16, label %13, !dbg !17376

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17377
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17360, metadata !DIExpression()), !dbg !17367
  call void @llvm.dbg.value(metadata i64 %11, metadata !17359, metadata !DIExpression()), !dbg !17362
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17368
  br i1 %15, label %16, label %6, !dbg !17370, !llvm.loop !17378

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17362
  call void @llvm.dbg.value(metadata i64 %17, metadata !17359, metadata !DIExpression()), !dbg !17362
  %18 = tail call fastcc i32 @elapsed.357() #24, !dbg !17380
  %19 = sext i32 %18 to i64, !dbg !17380
  %20 = sub nsw i64 %17, %19, !dbg !17381
  br label %21, !dbg !17382

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17362
  ret i64 %22, !dbg !17383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.370(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17384 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17388, metadata !DIExpression()), !dbg !17389
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17390
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %2) #24, !dbg !17391
  %4 = xor i1 %3, true, !dbg !17392
  ret i1 %4, !dbg !17393
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17394 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17396, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i64 0, metadata !17397, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i32 0, metadata !17398, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17403
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17405, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17407
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17407
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17403
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17408
  br i1 %3, label %5, label %4, !dbg !17409

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17410
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17410
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17410
  unreachable, !dbg !17410

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17407
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17403
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17411
  call void @llvm.dbg.value(metadata i32 undef, metadata !17400, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i64 0, metadata !17397, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i32 undef, metadata !17398, metadata !DIExpression()), !dbg !17402
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17412
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17415
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17397, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17401
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17416
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17418
  br i1 %8, label %10, label %9, !dbg !17419

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17420
  unreachable, !dbg !17420

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17405
  call void @llvm.dbg.value(metadata i32 %11, metadata !17024, metadata !DIExpression()) #23, !dbg !17407
  call void @llvm.dbg.value(metadata i32 %11, metadata !17018, metadata !DIExpression()) #23, !dbg !17403
  call void @llvm.dbg.value(metadata i32 %11, metadata !17400, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17397, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17401
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17416
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()) #23, !dbg !17421
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17423, !srcloc !17105
  call void @llvm.dbg.value(metadata i32 undef, metadata !17398, metadata !DIExpression()), !dbg !17402
  %12 = add i64 %7, %6, !dbg !17424
  ret i64 %12, !dbg !17425
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17426 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17428, metadata !DIExpression()), !dbg !17432
  call void @llvm.dbg.value(metadata i32 0, metadata !17429, metadata !DIExpression()), !dbg !17433
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17434
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17436, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17438
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17438
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17434
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17439
  br i1 %2, label %4, label %3, !dbg !17440

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17441
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17441
  unreachable, !dbg !17441

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17438
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17434
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17442
  call void @llvm.dbg.value(metadata i32 undef, metadata !17431, metadata !DIExpression()), !dbg !17433
  call void @llvm.dbg.value(metadata i32 -1, metadata !17428, metadata !DIExpression()), !dbg !17432
  call void @llvm.dbg.value(metadata i32 undef, metadata !17429, metadata !DIExpression()), !dbg !17433
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17443
  call void @llvm.dbg.value(metadata i32 %5, metadata !17428, metadata !DIExpression()), !dbg !17432
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17446
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17446
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17448
  br i1 %6, label %8, label %7, !dbg !17449

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17450
  unreachable, !dbg !17450

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17436
  call void @llvm.dbg.value(metadata i32 %9, metadata !17024, metadata !DIExpression()) #23, !dbg !17438
  call void @llvm.dbg.value(metadata i32 %9, metadata !17018, metadata !DIExpression()) #23, !dbg !17434
  call void @llvm.dbg.value(metadata i32 %9, metadata !17431, metadata !DIExpression()), !dbg !17433
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()) #23, !dbg !17451
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17453, !srcloc !17105
  call void @llvm.dbg.value(metadata i32 %5, metadata !17428, metadata !DIExpression()), !dbg !17432
  call void @llvm.dbg.value(metadata i32 undef, metadata !17429, metadata !DIExpression()), !dbg !17433
  ret i32 %5, !dbg !17454
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17457, metadata !DIExpression()), !dbg !17467
  call void @llvm.dbg.value(metadata i1 %1, metadata !17458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17467
  call void @llvm.dbg.value(metadata i32 0, metadata !17459, metadata !DIExpression()), !dbg !17468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17469
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17471, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17473
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17473
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17469
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17474
  br i1 %4, label %6, label %5, !dbg !17475

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17476
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17476
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17476
  unreachable, !dbg !17476

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17473
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17469
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17477
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()), !dbg !17468
  call void @llvm.dbg.value(metadata i32 undef, metadata !17459, metadata !DIExpression()), !dbg !17468
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17478
  call void @llvm.dbg.value(metadata i32 %7, metadata !17462, metadata !DIExpression()), !dbg !17479
  call void @llvm.dbg.value(metadata i1 undef, metadata !17465, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17479
  %8 = icmp slt i32 %7, 2, !dbg !17480
  call void @llvm.dbg.value(metadata i1 %8, metadata !17466, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17479
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17481
  call void @llvm.dbg.value(metadata i1 %9, metadata !17465, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17479
  br i1 %10, label %14, label %11, !dbg !17481

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17483
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17483
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17485
  br label %14, !dbg !17486

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17487
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17489
  br i1 %15, label %17, label %16, !dbg !17490

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17491
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17491
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17491
  unreachable, !dbg !17491

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17471
  call void @llvm.dbg.value(metadata i32 %18, metadata !17024, metadata !DIExpression()) #23, !dbg !17473
  call void @llvm.dbg.value(metadata i32 %18, metadata !17018, metadata !DIExpression()) #23, !dbg !17469
  call void @llvm.dbg.value(metadata i32 %18, metadata !17461, metadata !DIExpression()), !dbg !17468
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17487
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()) #23, !dbg !17492
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17494, !srcloc !17105
  call void @llvm.dbg.value(metadata i32 1, metadata !17459, metadata !DIExpression()), !dbg !17468
  call void @llvm.dbg.value(metadata i32 undef, metadata !17459, metadata !DIExpression()), !dbg !17468
  ret void, !dbg !17495
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17500, metadata !DIExpression()), !dbg !17505
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17507
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17509, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17511
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17511
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17507
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17512
  br i1 %3, label %5, label %4, !dbg !17513

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17514
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17514
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17514
  unreachable, !dbg !17514

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17511
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17507
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17515
  call void @llvm.dbg.value(metadata i32 undef, metadata !17501, metadata !DIExpression()), !dbg !17505
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17505
  call void @llvm.dbg.value(metadata i32 undef, metadata !17501, metadata !DIExpression()), !dbg !17505
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17516
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17517
  br i1 %7, label %37, label %8, !dbg !17518

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17505
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17519
  %14 = load i64, i64* %13, align 8, !dbg !17519
  %15 = sext i32 %11 to i64, !dbg !17520
  %16 = icmp sgt i64 %14, %15, !dbg !17521
  br i1 %16, label %35, label %17, !dbg !17522

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17502, metadata !DIExpression()), !dbg !17523
  %18 = trunc i64 %14 to i32, !dbg !17524
  call void @llvm.dbg.value(metadata i32 %18, metadata !17504, metadata !DIExpression()), !dbg !17523
  %19 = sext i32 %18 to i64, !dbg !17525
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17526
  %21 = add i64 %20, %19, !dbg !17526
  store i64 %21, i64* @curr_tick, align 8, !dbg !17526
  store i64 0, i64* %13, align 8, !dbg !17527
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17528
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17529
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17529
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17531
  br i1 %22, label %24, label %23, !dbg !17532

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17533
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17533
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17533
  unreachable, !dbg !17533

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17085, metadata !DIExpression()) #23, !dbg !17529
  call void @llvm.dbg.value(metadata i32 %12, metadata !17099, metadata !DIExpression()) #23, !dbg !17534
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17536, !srcloc !17105
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17537
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17537
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17539
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17541, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17543
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17543
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17539
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17544
  br i1 %28, label %30, label %29, !dbg !17545

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17546
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17546
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17546
  unreachable, !dbg !17546

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17543
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17539
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17547
  call void @llvm.dbg.value(metadata i32 undef, metadata !17501, metadata !DIExpression()), !dbg !17505
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17548
  %32 = sub nsw i32 %31, %18, !dbg !17548
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17505
  call void @llvm.dbg.value(metadata i32 undef, metadata !17501, metadata !DIExpression()), !dbg !17505
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17516
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17517
  br i1 %34, label %37, label %8, !dbg !17518, !llvm.loop !17549

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17551
  store i64 %36, i64* %13, align 8, !dbg !17551
  br label %41, !dbg !17554

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17505
  %40 = sext i32 %39 to i64, !dbg !17555
  br label %41, !dbg !17555

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17555
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17556
  %45 = add i64 %44, %42, !dbg !17556
  store i64 %45, i64* @curr_tick, align 8, !dbg !17556
  store i32 0, i32* @announce_remaining, align 4, !dbg !17557
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17558
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17559
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17560
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17562
  br i1 %47, label %49, label %48, !dbg !17563

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17564
  unreachable, !dbg !17564

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17505
  call void @llvm.dbg.value(metadata i32 %50, metadata !17085, metadata !DIExpression()) #23, !dbg !17560
  call void @llvm.dbg.value(metadata i32 %50, metadata !17099, metadata !DIExpression()) #23, !dbg !17565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17567, !srcloc !17105
  ret void, !dbg !17568
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17569 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17573, metadata !DIExpression()), !dbg !17577
  call void @llvm.dbg.value(metadata i32 0, metadata !17574, metadata !DIExpression()), !dbg !17578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17012, metadata !DIExpression()) #23, !dbg !17579
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17581, !srcloc !17027
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17583
  call void @llvm.dbg.value(metadata i32 undef, metadata !17025, metadata !DIExpression()) #23, !dbg !17583
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17579
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17584
  br i1 %2, label %4, label %3, !dbg !17585

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17586
  unreachable, !dbg !17586

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17024, metadata !DIExpression()) #23, !dbg !17583
  call void @llvm.dbg.value(metadata i32 undef, metadata !17018, metadata !DIExpression()) #23, !dbg !17579
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17587
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()), !dbg !17578
  call void @llvm.dbg.value(metadata i64 0, metadata !17573, metadata !DIExpression()), !dbg !17577
  call void @llvm.dbg.value(metadata i32 undef, metadata !17574, metadata !DIExpression()), !dbg !17578
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17588
  %6 = tail call fastcc i32 @elapsed.357() #24, !dbg !17591
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17573, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17577
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17090, metadata !DIExpression()) #23, !dbg !17592
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17594
  br i1 %7, label %9, label %8, !dbg !17595

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17596
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17596
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17596
  unreachable, !dbg !17596

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17581
  call void @llvm.dbg.value(metadata i32 %10, metadata !17024, metadata !DIExpression()) #23, !dbg !17583
  call void @llvm.dbg.value(metadata i32 %10, metadata !17018, metadata !DIExpression()) #23, !dbg !17579
  call void @llvm.dbg.value(metadata i32 %10, metadata !17576, metadata !DIExpression()), !dbg !17578
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17573, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17577
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17573, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17577
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()) #23, !dbg !17592
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()) #23, !dbg !17597
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17599, !srcloc !17105
  call void @llvm.dbg.value(metadata i32 undef, metadata !17574, metadata !DIExpression()), !dbg !17578
  %11 = sext i32 %6 to i64, !dbg !17591
  %12 = add i64 %5, %11, !dbg !17600
  ret i64 %12, !dbg !17601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17602 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17603
  %2 = trunc i64 %1 to i32, !dbg !17604
  ret i32 %2, !dbg !17605
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17606 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17607
  ret i64 %1, !dbg !17608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17611, metadata !DIExpression()), !dbg !17618
  %2 = icmp eq i32 %0, 0, !dbg !17619
  br i1 %2, label %10, label %3, !dbg !17621

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.377() #24, !dbg !17622
  call void @llvm.dbg.value(metadata i32 %4, metadata !17612, metadata !DIExpression()), !dbg !17618
  %5 = shl i32 %0, 5, !dbg !17623
  call void @llvm.dbg.value(metadata i32 %5, metadata !17613, metadata !DIExpression()), !dbg !17618
  br label %6, !dbg !17624

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.377() #24, !dbg !17625
  call void @llvm.dbg.value(metadata i32 %7, metadata !17614, metadata !DIExpression()), !dbg !17626
  %8 = sub i32 %7, %4, !dbg !17627
  %9 = icmp ult i32 %8, %5, !dbg !17629
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.377() unnamed_addr #1 !dbg !17631 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.378() #24, !dbg !17632
  ret i32 %1, !dbg !17633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.378() unnamed_addr #1 !dbg !17634 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17635
  ret i32 %1, !dbg !17636
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17637 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17641, metadata !DIExpression()), !dbg !17643
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17644

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17645
  br label %14, !dbg !17649

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17642, metadata !DIExpression()), !dbg !17643
  %6 = icmp slt i64 %2, -1, !dbg !17650
  br i1 %6, label %7, label %9, !dbg !17653

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17654
  br label %14, !dbg !17655

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17657
  %11 = icmp ugt i64 %2, 1, !dbg !17658
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17658
  %13 = add nsw i64 %10, %12, !dbg !17659
  br label %14, !dbg !17660

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17661
  ret i64 %15, !dbg !17662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17663 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.381, i32 0, i32 0)) #25, !dbg !17665
  ret void, !dbg !17666
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1005, !2, !2519, !27, !177, !209, !2521, !2523, !2557, !2559, !218, !281, !2561, !2564, !2575, !2621, !2623, !2651, !2679, !2722, !2794, !2839, !310, !471, !2867, !507, !517, !542, !650, !817, !852, !1035, !2872, !1151, !1217, !1486, !1726, !2893, !1841, !1928, !2895, !2966, !3015, !1963, !3018, !1970, !2342, !3036, !2362, !3038, !2480, !3041}
!llvm.ident = !{!3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043}
!llvm.module.flags = !{!3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_framework_tests", scope: !27, file: !111, line: 10, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_framework_tests", scope: !27, file: !111, line: 10, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__framework_tests__test_assert", scope: !27, file: !111, line: 18, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_framework_tests_test_assert", scope: !27, file: !111, line: 18, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !218, file: !248, line: 60, type: !249, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !247, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!220 = !{!221, !241}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 372, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !224, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !224, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !224, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !224, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !224, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !224, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !224, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !224, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !224, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !224, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !224, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !224, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !224, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 364, baseType: !243)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 64, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !243, file: !223, line: 362, baseType: !227, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !243, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!247 = !{!216}
!248 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !250)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253, !278}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !250, file: !251, line: 60, baseType: !254, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!107, !257}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !261)
!260 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!261 = !{!262, !263, !264, !265, !271, !272}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !259, file: !260, line: 380, baseType: !118, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !259, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !259, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !259, file: !260, line: 386, baseType: !266, size: 32, offset: 96)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 32)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !268)
!268 = !{!269, !270}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !267, file: !260, line: 359, baseType: !195, size: 8)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !267, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !259, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !259, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !260, line: 43, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !277)
!277 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !250, file: !251, line: 65, baseType: !257, size: 32, offset: 32)
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !281, file: !284, line: 71, type: !285, isLocal: true, isDefinition: true, align: 32)
!281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !282, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !283, splitDebugInlining: false, nameTableKind: None)
!282 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!283 = !{!279}
!284 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !287)
!287 = !{!288, !307}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !286, file: !251, line: 60, baseType: !289, size: 32)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32)
!290 = !DISubroutineType(types: !291)
!291 = !{!107, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !294)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !295)
!295 = !{!296, !297, !298, !299, !305, !306}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !294, file: !260, line: 380, baseType: !118, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !294, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !294, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !294, file: !260, line: 386, baseType: !300, size: 32, offset: 96)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !302)
!302 = !{!303, !304}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !301, file: !260, line: 359, baseType: !195, size: 8)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !301, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !294, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !294, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !286, file: !251, line: 65, baseType: !292, size: 32, offset: 32)
!308 = !DIGlobalVariableExpression(var: !309, expr: !DIExpression())
!309 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !310, file: !317, line: 17, type: !464, isLocal: false, isDefinition: true)
!310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !311, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !312, globals: !313, splitDebugInlining: false, nameTableKind: None)
!311 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!312 = !{!185, !107, !152, !106}
!313 = !{!308, !314, !460}
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !316, file: !317, line: 198, type: !446, isLocal: true, isDefinition: true)
!316 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !317, file: !317, line: 175, type: !318, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !310, retainedNodes: !441)
!317 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!318 = !DISubroutineType(types: !319)
!319 = !{null, !320}
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 32)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !323)
!322 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !{!324, !390, !403, !404, !405, !409, !410, !416, !436}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !321, file: !322, line: 247, baseType: !325, size: 384)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !326)
!326 = !{!327, !355, !363, !364, !365, !376, !377, !378}
!327 = !DIDerivedType(tag: DW_TAG_member, scope: !325, file: !322, line: 60, baseType: !328, size: 64)
!328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !325, file: !322, line: 60, size: 64, elements: !329)
!329 = !{!330, !346}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !328, file: !322, line: 61, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !333)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !334)
!334 = !{!335, !341}
!335 = !DIDerivedType(tag: DW_TAG_member, scope: !333, file: !332, line: 38, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !333, file: !332, line: 38, size: 32, elements: !337)
!337 = !{!338, !340}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !336, file: !332, line: 39, baseType: !339, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !336, file: !332, line: 40, baseType: !339, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, scope: !333, file: !332, line: 42, baseType: !342, size: 32, offset: 32)
!342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !333, file: !332, line: 42, size: 32, elements: !343)
!343 = !{!344, !345}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !342, file: !332, line: 43, baseType: !339, size: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !342, file: !332, line: 44, baseType: !339, size: 32)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !328, file: !322, line: 62, baseType: !347, size: 64)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !347, file: !348, line: 50, baseType: !351, size: 64)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 64, elements: !353)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!353 = !{!354}
!354 = !DISubrange(count: 2)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !325, file: !322, line: 68, baseType: !356, size: 32, offset: 64)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !359)
!358 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !360)
!360 = !{!361}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !359, file: !358, line: 232, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !333)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !325, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !325, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!365 = !DIDerivedType(tag: DW_TAG_member, scope: !325, file: !322, line: 90, baseType: !366, size: 16, offset: 112)
!366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !325, file: !322, line: 90, size: 16, elements: !367)
!367 = !{!368, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, scope: !366, file: !322, line: 91, baseType: !369, size: 16)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !366, file: !322, line: 91, size: 16, elements: !370)
!370 = !{!371, !374}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !369, file: !322, line: 96, baseType: !372, size: 8)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !373)
!373 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !369, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !366, file: !322, line: 100, baseType: !197, size: 16)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !325, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !325, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !325, file: !322, line: 131, baseType: !379, size: 192, offset: 192)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !380)
!380 = !{!381, !382, !388}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !379, file: !358, line: 245, baseType: !331, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !379, file: !358, line: 246, baseType: !383, size: 32, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !384)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DISubroutineType(types: !386)
!386 = !{null, !387}
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !379, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !321, file: !322, line: 250, baseType: !391, size: 288, offset: 384)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !393)
!392 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!394, !395, !396, !397, !398, !399, !400, !401, !402}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !391, file: !392, line: 26, baseType: !152, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !391, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !391, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !391, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !391, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !391, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !391, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !391, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !391, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !321, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !321, file: !322, line: 256, baseType: !357, size: 64, offset: 704)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !321, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !407)
!407 = !{!408}
!408 = !DISubrange(count: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !321, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !321, file: !322, line: 300, baseType: !411, size: 96, offset: 1056)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !412)
!412 = !{!413, !414, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !411, file: !322, line: 153, baseType: !22, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !411, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !411, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !321, file: !322, line: 325, baseType: !417, size: 32, offset: 1152)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !420)
!419 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = !{!421, !430, !431}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !418, file: !419, line: 5074, baseType: !422, size: 96)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !424)
!423 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!424 = !{!425, !428, !429}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !422, file: !423, line: 57, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !423, line: 57, flags: DIFlagFwdDecl)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !422, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !422, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !418, file: !419, line: 5075, baseType: !357, size: 64, offset: 96)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !418, file: !419, line: 5076, baseType: !432, size: 32, offset: 160)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !434)
!433 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!434 = !{!435}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !432, file: !433, line: 52, baseType: !22, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !321, file: !322, line: 343, baseType: !437, size: 64, offset: 1184)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !438)
!438 = !{!439, !440}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !437, file: !392, line: 63, baseType: !152, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !437, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!441 = !{!442, !443, !444, !445}
!442 = !DILocalVariable(name: "thread", arg: 1, scope: !316, file: !317, line: 175, type: !320)
!443 = !DILocalVariable(name: "region_num", scope: !316, file: !317, line: 200, type: !195)
!444 = !DILocalVariable(name: "guard_start", scope: !316, file: !317, line: 265, type: !22)
!445 = !DILocalVariable(name: "guard_size", scope: !316, file: !317, line: 266, type: !185)
!446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 96, elements: !458)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !448, line: 52, size: 96, elements: !449)
!448 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = !{!450, !451, !452}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !447, file: !448, line: 53, baseType: !22, size: 32)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !447, file: !448, line: 54, baseType: !185, size: 32, offset: 32)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !447, file: !448, line: 55, baseType: !453, size: 32, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !454, line: 151, baseType: !455)
!454 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 149, size: 32, elements: !456)
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !455, file: !454, line: 150, baseType: !152, size: 32)
!458 = !{!459}
!459 = !DISubrange(count: 1)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "static_regions", scope: !310, file: !317, line: 62, type: !462, isLocal: true, isDefinition: true)
!462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 96, elements: !458)
!463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !447)
!464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !465, file: !203, line: 17, baseType: !118, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !465, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !471, file: !504, line: 39, type: !195, isLocal: true, isDefinition: true)
!471 = distinct !DICompileUnit(language: DW_LANG_C99, file: !472, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !473, globals: !503, splitDebugInlining: false, nameTableKind: None)
!472 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!473 = !{!474, !106, !107, !491, !195}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !476, line: 1168, baseType: !477)
!476 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 1155, size: 352, elements: !478)
!478 = !{!479, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !477, file: !476, line: 1157, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !477, file: !476, line: 1158, baseType: !227, size: 32, offset: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !477, file: !476, line: 1159, baseType: !227, size: 32, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !477, file: !476, line: 1160, baseType: !227, size: 32, offset: 96)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !477, file: !476, line: 1161, baseType: !227, size: 32, offset: 128)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !477, file: !476, line: 1162, baseType: !227, size: 32, offset: 160)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !477, file: !476, line: 1163, baseType: !227, size: 32, offset: 192)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !477, file: !476, line: 1164, baseType: !227, size: 32, offset: 224)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !477, file: !476, line: 1165, baseType: !227, size: 32, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !477, file: !476, line: 1166, baseType: !227, size: 32, offset: 288)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !477, file: !476, line: 1167, baseType: !227, size: 32, offset: 320)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !494, line: 27, size: 96, elements: !495)
!494 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !493, file: !494, line: 29, baseType: !152, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !493, file: !494, line: 31, baseType: !118, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !493, file: !494, line: 37, baseType: !499, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !454, line: 146, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !454, line: 141, size: 32, elements: !501)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !500, file: !454, line: 143, baseType: !152, size: 32)
!503 = !{!469}
!504 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !507, file: !514, line: 21, type: !213, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !509, globals: !513, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!509 = !{!510, !107, !106}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !512, line: 22, baseType: !107)
!512 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!513 = !{!505}
!514 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!515 = !DIGlobalVariableExpression(var: !516, expr: !DIExpression())
!516 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !517, file: !522, line: 13, type: !539, isLocal: true, isDefinition: true)
!517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !519, splitDebugInlining: false, nameTableKind: None)
!518 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!519 = !{!520, !515}
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "mpu_config", scope: !517, file: !522, line: 37, type: !523, isLocal: false, isDefinition: true)
!522 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !494, line: 41, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !524, file: !494, line: 43, baseType: !152, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !524, file: !494, line: 45, baseType: !528, size: 32, offset: 32)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !494, line: 27, size: 96, elements: !531)
!531 = !{!532, !533, !534}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !530, file: !494, line: 29, baseType: !152, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !530, file: !494, line: 31, baseType: !118, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !530, file: !494, line: 37, baseType: !535, size: 32, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !454, line: 146, baseType: !536)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !454, line: 141, size: 32, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !536, file: !454, line: 143, baseType: !152, size: 32)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 192, elements: !353)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !542, file: !639, line: 36, type: !640, isLocal: true, isDefinition: true, align: 32)
!542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !544, retainedTypes: !556, globals: !638, splitDebugInlining: false, nameTableKind: None)
!543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!544 = !{!545, !551}
!545 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !546, line: 506, baseType: !32, size: 32, elements: !547)
!546 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!547 = !{!548, !549, !550}
!548 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!549 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!550 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!551 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !546, line: 512, baseType: !32, size: 32, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!554 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!555 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!556 = !{!557, !627, !632, !592, !551, !545, !637, !106}
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !546, line: 523, size: 288, elements: !560)
!560 = !{!561, !582, !588, !593, !597, !598, !599, !603, !623}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !559, file: !546, line: 524, baseType: !562, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = !DISubroutineType(types: !564)
!564 = !{!107, !565, !580, !581}
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !568)
!568 = !{!569, !570, !571, !572, !578, !579}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !567, file: !260, line: 380, baseType: !118, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !567, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !567, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !567, file: !260, line: 386, baseType: !573, size: 32, offset: 96)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !575)
!575 = !{!576, !577}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !574, file: !260, line: 359, baseType: !195, size: 8)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !574, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !567, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !567, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !546, line: 237, baseType: !195)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !546, line: 257, baseType: !152)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !559, file: !546, line: 530, baseType: !583, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!584 = !DISubroutineType(types: !585)
!585 = !{!107, !565, !586}
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !546, line: 229, baseType: !152)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !559, file: !546, line: 532, baseType: !589, size: 32, offset: 64)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 32)
!590 = !DISubroutineType(types: !591)
!591 = !{!107, !565, !592, !587}
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !546, line: 216, baseType: !152)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !559, file: !546, line: 535, baseType: !594, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = !DISubroutineType(types: !596)
!596 = !{!107, !565, !592}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !559, file: !546, line: 537, baseType: !594, size: 32, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !559, file: !546, line: 539, baseType: !594, size: 32, offset: 160)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !559, file: !546, line: 541, baseType: !600, size: 32, offset: 192)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 32)
!601 = !DISubroutineType(types: !602)
!602 = !{!107, !565, !580, !545, !551}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !559, file: !546, line: 544, baseType: !604, size: 32, offset: 224)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 32)
!605 = !DISubroutineType(types: !606)
!606 = !{!107, !565, !607, !145}
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 32)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !546, line: 478, size: 96, elements: !609)
!609 = !{!610, !617, !622}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !608, file: !546, line: 482, baseType: !611, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !612, line: 33, baseType: !613)
!612 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !612, line: 29, size: 32, elements: !614)
!614 = !{!615}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !613, file: !612, line: 30, baseType: !616, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !608, file: !546, line: 485, baseType: !618, size: 32, offset: 32)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !546, line: 464, baseType: !619)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 32)
!620 = !DISubroutineType(types: !621)
!621 = !{null, !565, !607, !592}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !608, file: !546, line: 493, baseType: !592, size: 32, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !559, file: !546, line: 547, baseType: !624, size: 32, offset: 256)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 32)
!625 = !DISubroutineType(types: !626)
!626 = !{!152, !565}
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !546, line: 428, size: 32, elements: !630)
!630 = !{!631}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !629, file: !546, line: 434, baseType: !592, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !546, line: 441, size: 32, elements: !635)
!635 = !{!636}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !634, file: !546, line: 447, baseType: !592, size: 32)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 32)
!638 = !{!540}
!639 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !642)
!642 = !{!643, !647}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !641, file: !251, line: 60, baseType: !644, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = !DISubroutineType(types: !646)
!646 = !{!107, !565}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !641, file: !251, line: 65, baseType: !565, size: 32, offset: 32)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "phase", scope: !650, file: !654, line: 61, type: !653, isLocal: false, isDefinition: true)
!650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !652, retainedTypes: !679, globals: !689, splitDebugInlining: false, nameTableKind: None)
!651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!652 = !{!653, !662, !670, !30, !675}
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !654, line: 40, baseType: !32, size: 32, elements: !655)
!654 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!655 = !{!656, !657, !658, !659, !660, !661}
!656 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!657 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!658 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!659 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!660 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!661 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!662 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !654, line: 226, baseType: !32, size: 32, elements: !663)
!663 = !{!664, !665, !666, !667, !668, !669}
!664 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!665 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!666 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!667 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!668 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!669 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !654, line: 52, baseType: !32, size: 32, elements: !671)
!671 = !{!672, !673, !674}
!672 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!673 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!674 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!675 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !676)
!676 = !{!677, !678}
!677 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!678 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!679 = !{!106, !107, !185, !680, !685, !152, !687}
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !681, line: 46, baseType: !682)
!681 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!683 = !DISubroutineType(types: !684)
!684 = !{null, !106, !106, !106}
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !686, line: 46, baseType: !389)
!686 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !688)
!688 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!689 = !{!648, !690, !692, !694, !703, !705, !809, !812}
!690 = !DIGlobalVariableExpression(var: !691, expr: !DIExpression())
!691 = distinct !DIGlobalVariable(name: "test_result", scope: !650, file: !654, line: 234, type: !662, isLocal: true, isDefinition: true)
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !650, file: !654, line: 294, type: !145, isLocal: true, isDefinition: true)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !650, file: !654, line: 430, type: !696, isLocal: false, isDefinition: true, align: 512)
!696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 8704, elements: !701)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !698, line: 47, size: 8, elements: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !{!700}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !697, file: !698, line: 48, baseType: !120, size: 8)
!701 = !{!702}
!702 = !DISubrange(count: 1088)
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "test_status", scope: !650, file: !654, line: 63, type: !670, isLocal: true, isDefinition: true)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !650, file: !654, line: 17, type: !707, isLocal: true, isDefinition: true)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !708)
!708 = !{!709, !767, !779, !780, !781, !782, !783, !789, !804}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !707, file: !322, line: 247, baseType: !710, size: 384)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !711)
!711 = !{!712, !736, !743, !744, !745, !754, !755, !756}
!712 = !DIDerivedType(tag: DW_TAG_member, scope: !710, file: !322, line: 60, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !710, file: !322, line: 60, size: 64, elements: !714)
!714 = !{!715, !730}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !713, file: !322, line: 61, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !718)
!718 = !{!719, !725}
!719 = !DIDerivedType(tag: DW_TAG_member, scope: !717, file: !332, line: 38, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !332, line: 38, size: 32, elements: !721)
!721 = !{!722, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !720, file: !332, line: 39, baseType: !723, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !720, file: !332, line: 40, baseType: !723, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !717, file: !332, line: 42, baseType: !726, size: 32, offset: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !332, line: 42, size: 32, elements: !727)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !726, file: !332, line: 43, baseType: !723, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !726, file: !332, line: 44, baseType: !723, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !713, file: !322, line: 62, baseType: !731, size: 64)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !732)
!732 = !{!733}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !731, file: !348, line: 50, baseType: !734, size: 64)
!734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, size: 64, elements: !353)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !710, file: !322, line: 68, baseType: !737, size: 32, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !739, file: !358, line: 232, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !717)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !710, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !710, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!745 = !DIDerivedType(tag: DW_TAG_member, scope: !710, file: !322, line: 90, baseType: !746, size: 16, offset: 112)
!746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !710, file: !322, line: 90, size: 16, elements: !747)
!747 = !{!748, !753}
!748 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !322, line: 91, baseType: !749, size: 16)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !322, line: 91, size: 16, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !749, file: !322, line: 96, baseType: !372, size: 8)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !749, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !746, file: !322, line: 100, baseType: !197, size: 16)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !710, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !710, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !710, file: !322, line: 131, baseType: !757, size: 192, offset: 192)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !758)
!758 = !{!759, !760, !766}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !757, file: !358, line: 245, baseType: !716, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !757, file: !358, line: 246, baseType: !761, size: 32, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 32)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !765}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !757, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !707, file: !322, line: 250, baseType: !768, size: 288, offset: 384)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !769)
!769 = !{!770, !771, !772, !773, !774, !775, !776, !777, !778}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !768, file: !392, line: 26, baseType: !152, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !768, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !768, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !768, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !768, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !768, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !768, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !768, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !768, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !707, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !707, file: !322, line: 256, baseType: !738, size: 64, offset: 704)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !707, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !707, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !707, file: !322, line: 300, baseType: !784, size: 96, offset: 1056)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !785)
!785 = !{!786, !787, !788}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !784, file: !322, line: 153, baseType: !22, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !784, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !784, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !707, file: !322, line: 325, baseType: !790, size: 32, offset: 1152)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !792)
!792 = !{!793, !799, !800}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !791, file: !419, line: 5074, baseType: !794, size: 96)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !795)
!795 = !{!796, !797, !798}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !794, file: !423, line: 57, baseType: !426, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !794, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !794, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !791, file: !419, line: 5075, baseType: !738, size: 64, offset: 96)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !791, file: !419, line: 5076, baseType: !801, size: 32, offset: 160)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !802)
!802 = !{!803}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !801, file: !433, line: 52, baseType: !22, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !707, file: !322, line: 343, baseType: !805, size: 64, offset: 1184)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !805, file: !392, line: 63, baseType: !152, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !805, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !650, file: !811, line: 95, type: !152, isLocal: true, isDefinition: true)
!811 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !650, file: !811, line: 96, type: !152, isLocal: true, isDefinition: true)
!814 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "ztest_api", scope: !817, file: !820, line: 70, type: !821, isLocal: false, isDefinition: true)
!817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !818, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !819, splitDebugInlining: false, nameTableKind: None)
!818 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!819 = !{!815}
!820 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !823)
!823 = !{!824, !825, !846}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !822, file: !114, line: 500, baseType: !16, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !822, file: !114, line: 501, baseType: !826, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!827 = !DISubroutineType(types: !828)
!828 = !{!145, !13, !829}
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 32)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !831)
!831 = !{!832, !833, !834, !835, !836, !837, !838}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !830, file: !114, line: 179, baseType: !117, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !830, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !830, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !830, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !830, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !830, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !830, file: !114, line: 197, baseType: !839, size: 32, offset: 192)
!839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !840)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !842)
!842 = !{!843, !844, !845}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !841, file: !114, line: 116, baseType: !152, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !841, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !841, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !822, file: !114, line: 502, baseType: !847, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DISubroutineType(types: !849)
!849 = !{!145, !118, !118}
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !852, file: !924, line: 48, type: !1000, isLocal: true, isDefinition: true)
!852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !853, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !854, retainedTypes: !910, globals: !921, splitDebugInlining: false, nameTableKind: None)
!853 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!854 = !{!30, !855}
!855 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 69, baseType: !107, size: 32, elements: !856)
!856 = !{!857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!857 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!858 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!859 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!860 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!861 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!862 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!863 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!864 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!865 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!866 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!867 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!868 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!869 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!870 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!871 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!872 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!873 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!874 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!875 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!876 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!877 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!878 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!879 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!880 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!881 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!882 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!883 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!884 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!885 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!886 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!887 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!888 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!889 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!890 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!891 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!892 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!893 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!894 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!895 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!896 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!897 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!898 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!899 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!900 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!901 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!902 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!903 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!904 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!905 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!906 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!907 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!908 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!909 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!910 = !{!185, !107, !106, !911}
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 270, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 262, size: 192, elements: !914)
!914 = !{!915, !916, !917, !918, !919, !920}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !913, file: !223, line: 264, baseType: !227, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !913, file: !223, line: 265, baseType: !227, size: 32, offset: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !913, file: !223, line: 266, baseType: !227, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !913, file: !223, line: 267, baseType: !227, size: 32, offset: 96)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !913, file: !223, line: 268, baseType: !227, size: 32, offset: 128)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !913, file: !223, line: 269, baseType: !227, size: 32, offset: 160)
!921 = !{!922, !928, !944, !955, !972, !850, !974, !988, !990, !992, !994, !996, !998}
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !852, file: !924, line: 424, type: !925, isLocal: false, isDefinition: true, align: 16)
!924 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 64, elements: !926)
!926 = !{!927}
!927 = !DISubrange(count: 4)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !852, file: !924, line: 424, type: !930, isLocal: false, isDefinition: true, align: 32)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !932)
!932 = !{!933, !934, !935, !936, !942, !943}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !931, file: !260, line: 380, baseType: !118, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !931, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !931, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !931, file: !260, line: 386, baseType: !937, size: 32, offset: 96)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !939)
!939 = !{!940, !941}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !938, file: !260, line: 359, baseType: !195, size: 8)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !938, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !931, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !931, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !852, file: !924, line: 424, type: !946, isLocal: true, isDefinition: true, align: 32)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !948)
!948 = !{!949, !954}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !947, file: !251, line: 60, baseType: !950, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{!107, !953}
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !947, file: !251, line: 65, baseType: !953, size: 32, offset: 32)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "exti_data", scope: !852, file: !924, line: 423, type: !957, isLocal: true, isDefinition: true)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !924, line: 107, size: 1024, elements: !958)
!958 = !{!959}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !957, file: !924, line: 109, baseType: !960, size: 1024)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 1024, elements: !970)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !924, line: 101, size: 64, elements: !962)
!962 = !{!963, !969}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !961, file: !924, line: 102, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !965, line: 63, baseType: !966)
!965 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !107, !106}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !961, file: !924, line: 103, baseType: !106, size: 32, offset: 32)
!970 = !{!971}
!971 = !DISubrange(count: 16)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !852, file: !924, line: 424, type: !938, isLocal: true, isDefinition: true, align: 8)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !976, file: !924, line: 493, type: !981, isLocal: true, isDefinition: true, align: 32)
!976 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !924, file: !924, line: 460, type: !977, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !979)
!977 = !DISubroutineType(types: !978)
!978 = !{null, !953}
!979 = !{!980}
!980 = !DILocalVariable(name: "dev", arg: 1, scope: !976, file: !924, line: 460, type: !953)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !982)
!982 = !{!983, !985, !986, !987}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !981, file: !10, line: 55, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !981, file: !10, line: 57, baseType: !984, size: 32, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !981, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !981, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !976, file: !924, line: 497, type: !981, isLocal: true, isDefinition: true, align: 32)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !976, file: !924, line: 507, type: !981, isLocal: true, isDefinition: true, align: 32)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !976, file: !924, line: 512, type: !981, isLocal: true, isDefinition: true, align: 32)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !976, file: !924, line: 516, type: !981, isLocal: true, isDefinition: true, align: 32)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !976, file: !924, line: 523, type: !981, isLocal: true, isDefinition: true, align: 32)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !976, file: !924, line: 527, type: !981, isLocal: true, isDefinition: true, align: 32)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 512, elements: !970)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 127, baseType: !855)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !1005, file: !1010, line: 21, type: !1030, isLocal: false, isDefinition: true, align: 16)
!1005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1007, splitDebugInlining: false, nameTableKind: None)
!1006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1007 = !{!1008, !1003, !1014, !1016, !1018, !1020, !1022, !1024, !1026, !1028}
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1005, file: !1010, line: 16, type: !1011, isLocal: false, isDefinition: true, align: 16)
!1010 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 176, elements: !1012)
!1012 = !{!1013}
!1013 = !DISubrange(count: 11)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1005, file: !1010, line: 28, type: !925, isLocal: false, isDefinition: true, align: 16)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1005, file: !1010, line: 35, type: !925, isLocal: false, isDefinition: true, align: 16)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1005, file: !1010, line: 42, type: !925, isLocal: false, isDefinition: true, align: 16)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1005, file: !1010, line: 49, type: !925, isLocal: false, isDefinition: true, align: 16)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1005, file: !1010, line: 56, type: !925, isLocal: false, isDefinition: true, align: 16)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1005, file: !1010, line: 63, type: !925, isLocal: false, isDefinition: true, align: 16)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1005, file: !1010, line: 70, type: !925, isLocal: false, isDefinition: true, align: 16)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1005, file: !1010, line: 77, type: !925, isLocal: false, isDefinition: true, align: 16)
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 48, elements: !1031)
!1031 = !{!1032}
!1032 = !DISubrange(count: 3)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1035, file: !1079, line: 398, type: !1110, isLocal: true, isDefinition: true)
!1035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1036, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1037, retainedTypes: !1050, globals: !1076, splitDebugInlining: false, nameTableKind: None)
!1036 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1037 = !{!1038, !30, !1043}
!1038 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1039, line: 190, baseType: !32, size: 32, elements: !1040)
!1039 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1040 = !{!1041, !1042}
!1041 = !DIEnumerator(name: "SUCCESS", value: 0)
!1042 = !DIEnumerator(name: "ERROR", value: 1)
!1043 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1044, line: 44, baseType: !32, size: 32, elements: !1045)
!1044 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1045 = !{!1046, !1047, !1048, !1049}
!1046 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1047 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1048 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1049 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1050 = !{!106, !107, !152, !1051, !1069, !1075}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1053, file: !223, line: 372, baseType: !227, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1053, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1053, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1053, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1053, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1053, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1053, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1053, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1053, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1053, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1053, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1053, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1053, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1053, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1071, line: 343, size: 64, elements: !1072)
!1071 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1070, file: !1071, line: 344, baseType: !152, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1070, file: !1071, line: 345, baseType: !152, size: 32, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1076 = !{!1077, !1081, !1097, !1108, !1033}
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1035, file: !1079, line: 752, type: !1080, isLocal: false, isDefinition: true, align: 16)
!1079 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 512, elements: !407)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1035, file: !1079, line: 752, type: !1083, isLocal: false, isDefinition: true, align: 32)
!1083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1095, !1096}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1084, file: !260, line: 380, baseType: !118, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1084, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1084, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1084, file: !260, line: 386, baseType: !1090, size: 32, offset: 96)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1092)
!1092 = !{!1093, !1094}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1091, file: !260, line: 359, baseType: !195, size: 8)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1091, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1084, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1084, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1035, file: !1079, line: 752, type: !1099, isLocal: true, isDefinition: true, align: 32)
!1099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1101)
!1101 = !{!1102, !1107}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1100, file: !251, line: 60, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!107, !1106}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1100, file: !251, line: 65, baseType: !1106, size: 32, offset: 32)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1035, file: !1079, line: 752, type: !1091, isLocal: true, isDefinition: true, align: 8)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1044, line: 100, size: 224, elements: !1111)
!1111 = !{!1112, !1118, !1119, !1128, !1133, !1138, !1144}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1110, file: !1044, line: 101, baseType: !1113, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1044, line: 76, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!107, !1106, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1044, line: 56, baseType: !106)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1110, file: !1044, line: 102, baseType: !1113, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1110, file: !1044, line: 103, baseType: !1120, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1044, line: 83, baseType: !1121)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!107, !1106, !1117, !1124, !106}
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1044, line: 72, baseType: !1125)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{null, !1106, !1117, !106}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1110, file: !1044, line: 104, baseType: !1129, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1044, line: 79, baseType: !1130)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!107, !1106, !1117, !1075}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1110, file: !1044, line: 105, baseType: !1134, size: 32, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1044, line: 88, baseType: !1135)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!1043, !1106, !1117}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1110, file: !1044, line: 106, baseType: !1139, size: 32, offset: 160)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1044, line: 92, baseType: !1140)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!107, !1106, !1117, !1143}
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1044, line: 64, baseType: !106)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1110, file: !1044, line: 107, baseType: !1145, size: 32, offset: 192)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1044, line: 96, baseType: !1146)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!107, !1106, !1117, !106}
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1151, file: !1208, line: 603, type: !1210, isLocal: true, isDefinition: true, align: 32)
!1151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1152, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1153, globals: !1205, splitDebugInlining: false, nameTableKind: None)
!1152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1153 = !{!106, !107, !1154}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1157, line: 336, size: 160, elements: !1158)
!1157 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1158 = !{!1159, !1179, !1183, !1187, !1200}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1156, file: !1157, line: 365, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!107, !1163, !1178}
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1176, !1177}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1165, file: !260, line: 380, baseType: !118, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1165, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1165, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1165, file: !260, line: 386, baseType: !1171, size: 32, offset: 96)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1173)
!1173 = !{!1174, !1175}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1172, file: !260, line: 359, baseType: !195, size: 8)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1172, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1165, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1165, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1156, file: !1157, line: 366, baseType: !1180, size: 32, offset: 32)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !1163, !196}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1156, file: !1157, line: 374, baseType: !1184, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!107, !1163}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1156, file: !1157, line: 377, baseType: !1188, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!107, !1163, !1191}
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1157, line: 122, size: 64, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1193, file: !1157, line: 123, baseType: !152, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1193, file: !1157, line: 124, baseType: !195, size: 8, offset: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1193, file: !1157, line: 125, baseType: !195, size: 8, offset: 40)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1193, file: !1157, line: 126, baseType: !195, size: 8, offset: 48)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1193, file: !1157, line: 127, baseType: !195, size: 8, offset: 56)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1156, file: !1157, line: 379, baseType: !1201, size: 32, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!107, !1163, !1204}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1205 = !{!1149, !1206}
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1151, file: !1208, line: 38, type: !1209, isLocal: true, isDefinition: true)
!1208 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1212)
!1212 = !{!1213, !1214}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1211, file: !251, line: 60, baseType: !1184, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1211, file: !251, line: 65, baseType: !1163, size: 32, offset: 32)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1217, file: !1367, line: 762, type: !1465, isLocal: true, isDefinition: true)
!1217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1219, retainedTypes: !1226, globals: !1364, splitDebugInlining: false, nameTableKind: None)
!1218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1219 = !{!30, !545, !551, !1220, !1043}
!1220 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !965, line: 43, baseType: !32, size: 32, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1225}
!1222 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1223 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1224 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1225 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1226 = !{!106, !107, !1227, !1291, !1296, !592, !551, !545, !1301, !1302, !152, !1316, !1272, !193, !1324, !1325}
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !546, line: 523, size: 288, elements: !1230)
!1230 = !{!1231, !1250, !1254, !1258, !1262, !1263, !1264, !1268, !1287}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1229, file: !546, line: 524, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!107, !1235, !580, !581}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1248, !1249}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1237, file: !260, line: 380, baseType: !118, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1237, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1237, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1237, file: !260, line: 386, baseType: !1243, size: 32, offset: 96)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1245)
!1245 = !{!1246, !1247}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1244, file: !260, line: 359, baseType: !195, size: 8)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1244, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1237, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1237, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1229, file: !546, line: 530, baseType: !1251, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!107, !1235, !586}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1229, file: !546, line: 532, baseType: !1255, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!107, !1235, !592, !587}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1229, file: !546, line: 535, baseType: !1259, size: 32, offset: 96)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!107, !1235, !592}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1229, file: !546, line: 537, baseType: !1259, size: 32, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1229, file: !546, line: 539, baseType: !1259, size: 32, offset: 160)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1229, file: !546, line: 541, baseType: !1265, size: 32, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!107, !1235, !580, !545, !551}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1229, file: !546, line: 544, baseType: !1269, size: 32, offset: 224)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!107, !1235, !1272, !145}
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !546, line: 478, size: 96, elements: !1274)
!1274 = !{!1275, !1281, !1286}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1273, file: !546, line: 482, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !612, line: 33, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !612, line: 29, size: 32, elements: !1278)
!1278 = !{!1279}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1277, file: !612, line: 30, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1273, file: !546, line: 485, baseType: !1282, size: 32, offset: 32)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !546, line: 464, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !1235, !1272, !592}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1273, file: !546, line: 493, baseType: !592, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1229, file: !546, line: 547, baseType: !1288, size: 32, offset: 256)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!152, !1235}
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !546, line: 428, size: 32, elements: !1294)
!1294 = !{!1295}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1293, file: !546, line: 434, baseType: !592, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !546, line: 441, size: 32, elements: !1299)
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1298, file: !546, line: 447, baseType: !592, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 314, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 303, size: 320, elements: !1305)
!1305 = !{!1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1304, file: !223, line: 305, baseType: !227, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1304, file: !223, line: 306, baseType: !227, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1304, file: !223, line: 307, baseType: !227, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1304, file: !223, line: 308, baseType: !227, size: 32, offset: 96)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1304, file: !223, line: 309, baseType: !227, size: 32, offset: 128)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1304, file: !223, line: 310, baseType: !227, size: 32, offset: 160)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1304, file: !223, line: 311, baseType: !227, size: 32, offset: 192)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1304, file: !223, line: 312, baseType: !227, size: 32, offset: 224)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1304, file: !223, line: 313, baseType: !1315, size: 64, offset: 256)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !353)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 325, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 320, size: 192, elements: !1319)
!1319 = !{!1320, !1321, !1322}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1318, file: !223, line: 322, baseType: !227, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1318, file: !223, line: 323, baseType: !227, size: 32, offset: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1318, file: !223, line: 324, baseType: !1323, size: 128, offset: 64)
!1323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !926)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1044, line: 100, size: 224, elements: !1328)
!1328 = !{!1329, !1334, !1335, !1344, !1349, !1354, !1359}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1327, file: !1044, line: 101, baseType: !1330, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1044, line: 76, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!107, !1235, !1117}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1327, file: !1044, line: 102, baseType: !1330, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1327, file: !1044, line: 103, baseType: !1336, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1044, line: 83, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!107, !1235, !1117, !1340, !106}
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1044, line: 72, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{null, !1235, !1117, !106}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1327, file: !1044, line: 104, baseType: !1345, size: 32, offset: 96)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1044, line: 79, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!107, !1235, !1117, !1075}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1327, file: !1044, line: 105, baseType: !1350, size: 32, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1044, line: 88, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 32)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!1043, !1235, !1117}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1327, file: !1044, line: 106, baseType: !1355, size: 32, offset: 160)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1044, line: 92, baseType: !1356)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 32)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!107, !1235, !1117, !1143}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1327, file: !1044, line: 107, baseType: !1360, size: 32, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1044, line: 96, baseType: !1361)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!107, !1235, !1117, !106}
!1364 = !{!1365, !1371, !1373, !1383, !1388, !1390, !1392, !1397, !1399, !1401, !1406, !1408, !1410, !1412, !1414, !1416, !1421, !1423, !1425, !1439, !1441, !1443, !1445, !1447, !1449, !1451, !1453, !1455, !1457, !1459, !1215, !1461, !1463, !1476, !1478, !1480, !1482}
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1217, file: !1367, line: 762, type: !1368, isLocal: false, isDefinition: true, align: 16)
!1367 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 128, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 8)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1217, file: !1367, line: 762, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1217, file: !1367, line: 762, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1377)
!1377 = !{!1378, !1382}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1376, file: !251, line: 60, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!107, !1235}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1376, file: !251, line: 65, baseType: !1235, size: 32, offset: 32)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1217, file: !1367, line: 766, type: !1385, isLocal: false, isDefinition: true, align: 16)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 144, elements: !1386)
!1386 = !{!1387}
!1387 = !DISubrange(count: 9)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1217, file: !1367, line: 766, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1217, file: !1367, line: 766, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1217, file: !1367, line: 770, type: !1394, isLocal: false, isDefinition: true, align: 16)
!1394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 96, elements: !1395)
!1395 = !{!1396}
!1396 = !DISubrange(count: 6)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1217, file: !1367, line: 770, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1217, file: !1367, line: 770, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1217, file: !1367, line: 774, type: !1403, isLocal: false, isDefinition: true, align: 16)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 80, elements: !1404)
!1404 = !{!1405}
!1405 = !DISubrange(count: 5)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1217, file: !1367, line: 774, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1217, file: !1367, line: 774, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1217, file: !1367, line: 778, type: !1403, isLocal: false, isDefinition: true, align: 16)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1217, file: !1367, line: 778, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1217, file: !1367, line: 778, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1217, file: !1367, line: 790, type: !1418, isLocal: false, isDefinition: true, align: 16)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 112, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 7)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1217, file: !1367, line: 790, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1217, file: !1367, line: 790, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1217, file: !1367, line: 762, type: !1427, isLocal: true, isDefinition: true)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1428, line: 237, size: 128, elements: !1429)
!1428 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1427, file: !1428, line: 239, baseType: !1298, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1427, file: !1428, line: 241, baseType: !1235, size: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1427, file: !1428, line: 243, baseType: !1433, size: 64, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !612, line: 40, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !612, line: 35, size: 64, elements: !1435)
!1435 = !{!1436, !1438}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1434, file: !612, line: 36, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1434, file: !612, line: 37, baseType: !1437, size: 32, offset: 32)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1217, file: !1367, line: 762, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1217, file: !1367, line: 766, type: !1427, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1217, file: !1367, line: 766, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1217, file: !1367, line: 770, type: !1427, isLocal: true, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1217, file: !1367, line: 770, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1217, file: !1367, line: 774, type: !1427, isLocal: true, isDefinition: true)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1217, file: !1367, line: 774, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1217, file: !1367, line: 778, type: !1427, isLocal: true, isDefinition: true)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1217, file: !1367, line: 778, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1217, file: !1367, line: 790, type: !1427, isLocal: true, isDefinition: true)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1217, file: !1367, line: 790, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1217, file: !1367, line: 656, type: !1228, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1217, file: !1367, line: 766, type: !1465, isLocal: true, isDefinition: true)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1428, line: 224, size: 160, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1466, file: !1428, line: 226, baseType: !1293, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1466, file: !1428, line: 228, baseType: !1075, size: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1466, file: !1428, line: 230, baseType: !107, size: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1466, file: !1428, line: 231, baseType: !1472, size: 64, offset: 96)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1071, line: 343, size: 64, elements: !1473)
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1472, file: !1071, line: 344, baseType: !152, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1472, file: !1071, line: 345, baseType: !152, size: 32, offset: 32)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1217, file: !1367, line: 770, type: !1465, isLocal: true, isDefinition: true)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1217, file: !1367, line: 774, type: !1465, isLocal: true, isDefinition: true)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1217, file: !1367, line: 778, type: !1465, isLocal: true, isDefinition: true)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1217, file: !1367, line: 790, type: !1465, isLocal: true, isDefinition: true)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1486, file: !1624, line: 44, type: !1719, isLocal: false, isDefinition: true)
!1486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1488, retainedTypes: !1521, globals: !1621, splitDebugInlining: false, nameTableKind: None)
!1487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1488 = !{!30, !1489, !1496, !1503, !1510, !1516, !1043}
!1489 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1157, line: 47, baseType: !32, size: 32, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494, !1495}
!1491 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1492 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1493 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1494 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1495 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1496 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1157, line: 75, baseType: !32, size: 32, elements: !1497)
!1497 = !{!1498, !1499, !1500, !1501, !1502}
!1498 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1499 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1500 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1501 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1502 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1503 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1157, line: 92, baseType: !32, size: 32, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509}
!1505 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1506 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1507 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1508 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1509 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1510 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1157, line: 84, baseType: !32, size: 32, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515}
!1512 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1513 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1514 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1515 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1157, line: 107, baseType: !32, size: 32, elements: !1517)
!1517 = !{!1518, !1519, !1520}
!1518 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1519 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1520 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1521 = !{!106, !107, !1522, !196, !195, !1571, !152, !1117, !1582, !197}
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1157, line: 336, size: 160, elements: !1525)
!1525 = !{!1526, !1545, !1549, !1553, !1566}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1524, file: !1157, line: 365, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!107, !1530, !1178}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1537, !1543, !1544}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1532, file: !260, line: 380, baseType: !118, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1532, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1532, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1532, file: !260, line: 386, baseType: !1538, size: 32, offset: 96)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1539, file: !260, line: 359, baseType: !195, size: 8)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1539, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1532, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1532, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1524, file: !1157, line: 366, baseType: !1546, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{null, !1530, !196}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1524, file: !1157, line: 374, baseType: !1550, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!107, !1530}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1524, file: !1157, line: 377, baseType: !1554, size: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!107, !1530, !1557}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1157, line: 122, size: 64, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1565}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1559, file: !1157, line: 123, baseType: !152, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1559, file: !1157, line: 124, baseType: !195, size: 8, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1559, file: !1157, line: 125, baseType: !195, size: 8, offset: 40)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1559, file: !1157, line: 126, baseType: !195, size: 8, offset: 48)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1559, file: !1157, line: 127, baseType: !195, size: 8, offset: 56)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1524, file: !1157, line: 379, baseType: !1567, size: 32, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!107, !1530, !1570}
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 505, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 496, size: 224, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1573, file: !223, line: 498, baseType: !227, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1573, file: !223, line: 499, baseType: !227, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1573, file: !223, line: 500, baseType: !227, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1573, file: !223, line: 501, baseType: !227, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1573, file: !223, line: 502, baseType: !227, size: 32, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1573, file: !223, line: 503, baseType: !227, size: 32, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1573, file: !223, line: 504, baseType: !227, size: 32, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1044, line: 100, size: 224, elements: !1585)
!1585 = !{!1586, !1591, !1592, !1601, !1606, !1611, !1616}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1584, file: !1044, line: 101, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1044, line: 76, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!107, !1530, !1117}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1584, file: !1044, line: 102, baseType: !1587, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1584, file: !1044, line: 103, baseType: !1593, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1044, line: 83, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!107, !1530, !1117, !1597, !106}
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1044, line: 72, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1530, !1117, !106}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1584, file: !1044, line: 104, baseType: !1602, size: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1044, line: 79, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!107, !1530, !1117, !1075}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1584, file: !1044, line: 105, baseType: !1607, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1044, line: 88, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!1043, !1530, !1117}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1584, file: !1044, line: 106, baseType: !1612, size: 32, offset: 160)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1044, line: 92, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!107, !1530, !1117, !1143}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1584, file: !1044, line: 107, baseType: !1617, size: 32, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1044, line: 96, baseType: !1618)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!107, !1530, !1117, !106}
!1621 = !{!1484, !1622, !1625, !1627, !1634, !1636, !1638, !1640, !1642, !1644, !1688, !1691, !1693, !1696, !1699, !1701, !1707, !1709, !1711, !1713, !1715, !1717}
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1368, isLocal: false, isDefinition: true, align: 16)
!1624 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1629, isLocal: true, isDefinition: true, align: 32)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1630, file: !251, line: 60, baseType: !1550, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1630, file: !251, line: 65, baseType: !1530, size: 32, offset: 32)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1368, isLocal: false, isDefinition: true, align: 16)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 32)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1629, isLocal: true, isDefinition: true, align: 32)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1539, isLocal: true, isDefinition: true, align: 8)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1539, isLocal: true, isDefinition: true, align: 8)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1486, file: !1624, line: 1914, type: !1646, isLocal: true, isDefinition: true)
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1648, line: 22, size: 224, elements: !1649)
!1648 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1649 = !{!1650, !1651, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1647, file: !1648, line: 24, baseType: !1571, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1647, file: !1648, line: 26, baseType: !1652, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1071, line: 343, size: 64, elements: !1655)
!1655 = !{!1656, !1657}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1654, file: !1071, line: 344, baseType: !152, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1654, file: !1071, line: 345, baseType: !152, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1647, file: !1648, line: 28, baseType: !185, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1647, file: !1648, line: 30, baseType: !145, size: 8, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1647, file: !1648, line: 32, baseType: !107, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1647, file: !1648, line: 34, baseType: !145, size: 8, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1647, file: !1648, line: 36, baseType: !145, size: 8, offset: 168)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1647, file: !1648, line: 38, baseType: !145, size: 8, offset: 176)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1647, file: !1648, line: 40, baseType: !145, size: 8, offset: 184)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1647, file: !1648, line: 41, baseType: !1666, size: 32, offset: 192)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1669, line: 60, size: 64, elements: !1670)
!1669 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1670 = !{!1671, !1687}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1668, file: !1669, line: 69, baseType: !1672, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1669, line: 50, size: 64, elements: !1675)
!1675 = !{!1676, !1685, !1686}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1674, file: !1669, line: 52, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1680, line: 37, baseType: !1681)
!1680 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1680, line: 32, size: 64, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1681, file: !1680, line: 34, baseType: !152, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1681, file: !1680, line: 36, baseType: !152, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1674, file: !1669, line: 54, baseType: !195, size: 8, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1674, file: !1669, line: 56, baseType: !195, size: 8, offset: 40)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1668, file: !1669, line: 71, baseType: !195, size: 8, offset: 32)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1486, file: !1624, line: 1914, type: !1690, isLocal: true, isDefinition: true)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1653, size: 64, elements: !458)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1695, isLocal: true, isDefinition: true)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1673, size: 64, elements: !458)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1698, isLocal: true, isDefinition: true)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1678, size: 128, elements: !353)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1486, file: !1624, line: 1539, type: !1523, isLocal: true, isDefinition: true)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1486, file: !1624, line: 1914, type: !1703, isLocal: true, isDefinition: true)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1648, line: 74, size: 64, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1703, file: !1648, line: 76, baseType: !152, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1703, file: !1648, line: 78, baseType: !1530, size: 32, offset: 32)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1486, file: !1624, line: 1914, type: !1646, isLocal: true, isDefinition: true)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1486, file: !1624, line: 1914, type: !1690, isLocal: true, isDefinition: true)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1695, isLocal: true, isDefinition: true)
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression())
!1716 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1698, isLocal: true, isDefinition: true)
!1717 = !DIGlobalVariableExpression(var: !1718, expr: !DIExpression())
!1718 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1486, file: !1624, line: 1914, type: !1703, isLocal: true, isDefinition: true)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1721)
!1721 = !{!1722, !1723}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1720, file: !203, line: 17, baseType: !118, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1720, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1726, file: !1804, line: 65, type: !227, isLocal: true, isDefinition: true)
!1726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1728, retainedTypes: !1729, globals: !1801, splitDebugInlining: false, nameTableKind: None)
!1727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1728 = !{!855}
!1729 = !{!685, !1730, !984, !195, !152, !1738, !1769}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !476, line: 712, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 706, size: 128, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1732, file: !476, line: 708, baseType: !227, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1732, file: !476, line: 709, baseType: !227, size: 32, offset: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1732, file: !476, line: 710, baseType: !227, size: 32, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1732, file: !476, line: 711, baseType: !480, size: 32, offset: 96)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 360, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 345, size: 28704, elements: !1741)
!1741 = !{!1742, !1744, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1759, !1764, !1768}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1740, file: !476, line: 347, baseType: !1743, size: 256)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1369)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1740, file: !476, line: 348, baseType: !1745, size: 768, offset: 256)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1746)
!1746 = !{!1747}
!1747 = !DISubrange(count: 24)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1740, file: !476, line: 349, baseType: !1743, size: 256, offset: 1024)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1740, file: !476, line: 350, baseType: !1745, size: 768, offset: 1280)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1740, file: !476, line: 351, baseType: !1743, size: 256, offset: 2048)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1740, file: !476, line: 352, baseType: !1745, size: 768, offset: 2304)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1740, file: !476, line: 353, baseType: !1743, size: 256, offset: 3072)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1740, file: !476, line: 354, baseType: !1745, size: 768, offset: 3328)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1740, file: !476, line: 355, baseType: !1743, size: 256, offset: 4096)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1740, file: !476, line: 356, baseType: !1756, size: 1792, offset: 4352)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1757)
!1757 = !{!1758}
!1758 = !DISubrange(count: 56)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1740, file: !476, line: 357, baseType: !1760, size: 1920, offset: 6144)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1761, size: 1920, elements: !1762)
!1761 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1762 = !{!1763}
!1763 = !DISubrange(count: 240)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1740, file: !476, line: 358, baseType: !1765, size: 20608, offset: 8064)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1766)
!1766 = !{!1767}
!1767 = !DISubrange(count: 644)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1740, file: !476, line: 359, baseType: !227, size: 32, offset: 28672)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1792, !1793, !1794, !1796, !1798, !1800}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1771, file: !476, line: 381, baseType: !480, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1771, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1771, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1771, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1771, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1771, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1771, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1761, size: 96, elements: !1781)
!1781 = !{!1782}
!1782 = !DISubrange(count: 12)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1771, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1771, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1771, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1771, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1771, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1771, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1771, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1771, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 64, elements: !353)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1771, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1771, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1771, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 128, elements: !926)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1771, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!1797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 160, elements: !1404)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1771, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1404)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1771, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!1801 = !{!1802, !1828, !1833, !1835, !1837, !1724}
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1726, file: !1804, line: 285, type: !1805, isLocal: true, isDefinition: true, align: 32)
!1804 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1807)
!1807 = !{!1808, !1827}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1806, file: !251, line: 60, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!107, !1812}
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1819, !1825, !1826}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1814, file: !260, line: 380, baseType: !118, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1814, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1814, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1814, file: !260, line: 386, baseType: !1820, size: 32, offset: 96)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1822)
!1822 = !{!1823, !1824}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1821, file: !260, line: 359, baseType: !195, size: 8)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1821, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1814, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1814, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1806, file: !251, line: 65, baseType: !1812, size: 32, offset: 32)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "lock", scope: !1726, file: !1804, line: 34, type: !1830, isLocal: true, isDefinition: true)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !1831)
!1831 = !{!1832}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1830, file: !433, line: 52, baseType: !22, size: 32)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "last_load", scope: !1726, file: !1804, line: 36, type: !152, isLocal: true, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1726, file: !1804, line: 48, type: !152, isLocal: true, isDefinition: true)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1726, file: !1804, line: 54, type: !152, isLocal: true, isDefinition: true)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1841, file: !1922, line: 22, type: !1924, isLocal: true, isDefinition: true)
!1841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !544, retainedTypes: !1843, globals: !1919, splitDebugInlining: false, nameTableKind: None)
!1842 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1843 = !{!1844, !1908, !1913, !592, !551, !545, !1918, !106}
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !546, line: 523, size: 288, elements: !1847)
!1847 = !{!1848, !1867, !1871, !1875, !1879, !1880, !1881, !1885, !1904}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1846, file: !546, line: 524, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!107, !1852, !580, !581}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1865, !1866}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1854, file: !260, line: 380, baseType: !118, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1854, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1854, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1854, file: !260, line: 386, baseType: !1860, size: 32, offset: 96)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1862)
!1862 = !{!1863, !1864}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1861, file: !260, line: 359, baseType: !195, size: 8)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1861, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1854, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1854, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1846, file: !546, line: 530, baseType: !1868, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!107, !1852, !586}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1846, file: !546, line: 532, baseType: !1872, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!107, !1852, !592, !587}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1846, file: !546, line: 535, baseType: !1876, size: 32, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!107, !1852, !592}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1846, file: !546, line: 537, baseType: !1876, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1846, file: !546, line: 539, baseType: !1876, size: 32, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1846, file: !546, line: 541, baseType: !1882, size: 32, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!107, !1852, !580, !545, !551}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1846, file: !546, line: 544, baseType: !1886, size: 32, offset: 224)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!107, !1852, !1889, !145}
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !546, line: 478, size: 96, elements: !1891)
!1891 = !{!1892, !1898, !1903}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1890, file: !546, line: 482, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !612, line: 33, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !612, line: 29, size: 32, elements: !1895)
!1895 = !{!1896}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1894, file: !612, line: 30, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1890, file: !546, line: 485, baseType: !1899, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !546, line: 464, baseType: !1900)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !1852, !1889, !592}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1890, file: !546, line: 493, baseType: !592, size: 32, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1846, file: !546, line: 547, baseType: !1905, size: 32, offset: 256)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!152, !1852}
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !546, line: 428, size: 32, elements: !1911)
!1911 = !{!1912}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1910, file: !546, line: 434, baseType: !592, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !546, line: 441, size: 32, elements: !1916)
!1916 = !{!1917}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1915, file: !546, line: 447, baseType: !592, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1919 = !{!1920, !1839}
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1921 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1841, file: !1922, line: 37, type: !1923, isLocal: true, isDefinition: true)
!1922 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1925, size: 352, elements: !1012)
!1925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1928, file: !1952, line: 129, type: !1960, isLocal: false, isDefinition: true)
!1928 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1929, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1930, globals: !1949, splitDebugInlining: false, nameTableKind: None)
!1929 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1930 = !{!1931}
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !1933)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !1934)
!1934 = !{!1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1933, file: !223, line: 372, baseType: !227, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1933, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1933, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1933, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1933, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1933, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1933, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1933, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1933, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1933, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1933, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1933, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1933, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1933, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!1949 = !{!1950, !1953, !1957, !1926}
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1928, file: !1952, line: 126, type: !152, isLocal: false, isDefinition: true)
!1952 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1928, file: !1952, line: 127, type: !1955, isLocal: false, isDefinition: true)
!1955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 72, elements: !1386)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1957 = !DIGlobalVariableExpression(var: !1958, expr: !DIExpression())
!1958 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1928, file: !1952, line: 128, type: !1959, isLocal: false, isDefinition: true)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 128, elements: !970)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 64, elements: !1369)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1963, file: !1966, line: 23, type: !1967, isLocal: false, isDefinition: true)
!1963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1964, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1965, splitDebugInlining: false, nameTableKind: None)
!1964 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1965 = !{!1961}
!1966 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1970, file: !1974, line: 37, type: !2227, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1972, retainedTypes: !1981, globals: !2054, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!1972 = !{!1973, !30, !855}
!1973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1974, line: 63, baseType: !32, size: 32, elements: !1975)
!1974 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1975 = !{!1976, !1977, !1978, !1979, !1980}
!1976 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1977 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1978 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1979 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1980 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1981 = !{!185, !106, !107, !1982, !193, !152, !2012, !984, !195, !2037}
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1985, line: 51, size: 64, elements: !1986)
!1985 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1986 = !{!1987, !2007}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1984, file: !1985, line: 52, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1985, line: 38, baseType: !1989)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!107, !1992, !194, !197}
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1995)
!1995 = !{!1996, !1997, !1998, !1999, !2005, !2006}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1994, file: !260, line: 380, baseType: !118, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1994, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1994, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1994, file: !260, line: 386, baseType: !2000, size: 32, offset: 96)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !2002)
!2002 = !{!2003, !2004}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2001, file: !260, line: 359, baseType: !195, size: 8)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2001, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1994, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1994, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1984, file: !1985, line: 53, baseType: !2008, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1985, line: 47, baseType: !2009)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!107, !1992, !194, !197, !152}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2014, file: !476, line: 381, baseType: !480, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2014, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2014, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2014, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2014, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2014, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2014, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2014, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2014, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2014, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2014, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2014, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2014, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2014, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2014, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2014, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2014, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2014, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2014, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2014, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2014, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 360, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 345, size: 28704, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2039, file: !476, line: 347, baseType: !1743, size: 256)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2039, file: !476, line: 348, baseType: !1745, size: 768, offset: 256)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2039, file: !476, line: 349, baseType: !1743, size: 256, offset: 1024)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2039, file: !476, line: 350, baseType: !1745, size: 768, offset: 1280)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2039, file: !476, line: 351, baseType: !1743, size: 256, offset: 2048)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2039, file: !476, line: 352, baseType: !1745, size: 768, offset: 2304)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2039, file: !476, line: 353, baseType: !1743, size: 256, offset: 3072)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2039, file: !476, line: 354, baseType: !1745, size: 768, offset: 3328)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2039, file: !476, line: 355, baseType: !1743, size: 256, offset: 4096)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2039, file: !476, line: 356, baseType: !1756, size: 1792, offset: 4352)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2039, file: !476, line: 357, baseType: !1760, size: 1920, offset: 6144)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2039, file: !476, line: 358, baseType: !1765, size: 20608, offset: 8064)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2039, file: !476, line: 359, baseType: !227, size: 32, offset: 28672)
!2054 = !{!1968, !2055, !2181, !2187, !2189, !2192, !2197, !2199, !2204}
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "_kernel", scope: !1970, file: !1974, line: 40, type: !2057, isLocal: false, isDefinition: true)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !358, line: 158, size: 288, elements: !2058)
!2058 = !{!2059, !2176}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2057, file: !358, line: 159, baseType: !2060, size: 192)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 192, elements: !458)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !358, line: 100, size: 192, elements: !2062)
!2062 = !{!2063, !2064, !2065, !2169, !2170, !2171, !2172}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2061, file: !358, line: 102, baseType: !152, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2061, file: !358, line: 105, baseType: !193, size: 32, offset: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2061, file: !358, line: 108, baseType: !2066, size: 32, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !2068)
!2068 = !{!2069, !2127, !2139, !2140, !2141, !2142, !2143, !2149, !2164}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2067, file: !322, line: 247, baseType: !2070, size: 384)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !2071)
!2071 = !{!2072, !2096, !2103, !2104, !2105, !2114, !2115, !2116}
!2072 = !DIDerivedType(tag: DW_TAG_member, scope: !2070, file: !322, line: 60, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2070, file: !322, line: 60, size: 64, elements: !2074)
!2074 = !{!2075, !2090}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2073, file: !322, line: 61, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !2078)
!2078 = !{!2079, !2085}
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !332, line: 38, baseType: !2080, size: 32)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !332, line: 38, size: 32, elements: !2081)
!2081 = !{!2082, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2080, file: !332, line: 39, baseType: !2083, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2080, file: !332, line: 40, baseType: !2083, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !332, line: 42, baseType: !2086, size: 32, offset: 32)
!2086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !332, line: 42, size: 32, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2086, file: !332, line: 43, baseType: !2083, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2086, file: !332, line: 44, baseType: !2083, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2073, file: !322, line: 62, baseType: !2091, size: 64)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !2092)
!2092 = !{!2093}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2091, file: !348, line: 50, baseType: !2094, size: 64)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2095, size: 64, elements: !353)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2070, file: !322, line: 68, baseType: !2097, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !2100)
!2100 = !{!2101}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2099, file: !358, line: 232, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !2077)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2070, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2070, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !2070, file: !322, line: 90, baseType: !2106, size: 16, offset: 112)
!2106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2070, file: !322, line: 90, size: 16, elements: !2107)
!2107 = !{!2108, !2113}
!2108 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !322, line: 91, baseType: !2109, size: 16)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2106, file: !322, line: 91, size: 16, elements: !2110)
!2110 = !{!2111, !2112}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2109, file: !322, line: 96, baseType: !372, size: 8)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2109, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2106, file: !322, line: 100, baseType: !197, size: 16)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2070, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2070, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2070, file: !322, line: 131, baseType: !2117, size: 192, offset: 192)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !2118)
!2118 = !{!2119, !2120, !2126}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2117, file: !358, line: 245, baseType: !2076, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2117, file: !358, line: 246, baseType: !2121, size: 32, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !2122)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{null, !2125}
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2117, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2067, file: !322, line: 250, baseType: !2128, size: 288, offset: 384)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2128, file: !392, line: 26, baseType: !152, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2128, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2128, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2128, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2128, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2128, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2128, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2128, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2128, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2067, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2067, file: !322, line: 256, baseType: !2098, size: 64, offset: 704)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2067, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2067, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2067, file: !322, line: 300, baseType: !2144, size: 96, offset: 1056)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2144, file: !322, line: 153, baseType: !22, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2144, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2144, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2067, file: !322, line: 325, baseType: !2150, size: 32, offset: 1152)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !2152)
!2152 = !{!2153, !2159, !2160}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2151, file: !419, line: 5074, baseType: !2154, size: 96)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !2155)
!2155 = !{!2156, !2157, !2158}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2154, file: !423, line: 57, baseType: !426, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2154, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2154, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2151, file: !419, line: 5075, baseType: !2098, size: 64, offset: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2151, file: !419, line: 5076, baseType: !2161, size: 32, offset: 160)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !2162)
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2161, file: !433, line: 52, baseType: !22, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2067, file: !322, line: 343, baseType: !2165, size: 64, offset: 1184)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !2166)
!2166 = !{!2167, !2168}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2165, file: !392, line: 63, baseType: !152, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2165, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2061, file: !358, line: 111, baseType: !2066, size: 32, offset: 96)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2061, file: !358, line: 124, baseType: !107, size: 32, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2061, file: !358, line: 127, baseType: !195, size: 8, offset: 160)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2061, file: !358, line: 153, baseType: !2173, offset: 168)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2174, line: 33, elements: !2175)
!2174 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2175 = !{}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2057, file: !358, line: 170, baseType: !2177, size: 96, offset: 192)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !358, line: 83, size: 96, elements: !2178)
!2178 = !{!2179, !2180}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2177, file: !358, line: 86, baseType: !2066, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2177, file: !358, line: 90, baseType: !2102, size: 64, offset: 32)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1970, file: !1974, line: 43, type: !2183, isLocal: false, isDefinition: true, align: 512)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 8704, elements: !701)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !698, line: 47, size: 8, elements: !2185)
!2185 = !{!2186}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2184, file: !698, line: 48, baseType: !120, size: 8)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1970, file: !1974, line: 44, type: !2067, isLocal: false, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1970, file: !1974, line: 48, type: !2191, isLocal: false, isDefinition: true)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 1280, elements: !458)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1970, file: !1974, line: 86, type: !2194, isLocal: false, isDefinition: true, align: 512)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 16896, elements: !2195)
!2195 = !{!459, !2196}
!2196 = !DISubrange(count: 2112)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1970, file: !1974, line: 217, type: !145, isLocal: false, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1970, file: !1974, line: 50, type: !2201, isLocal: true, isDefinition: true, align: 512)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 2560, elements: !2202)
!2202 = !{!459, !2203}
!2203 = !DISubrange(count: 320)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "levels", scope: !2206, file: !1974, line: 232, type: !2226, isLocal: true, isDefinition: true)
!2206 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1974, file: !1974, line: 230, type: !2207, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2209)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !1973}
!2209 = !{!2210, !2211, !2221, !2225}
!2210 = !DILocalVariable(name: "level", arg: 1, scope: !2206, file: !1974, line: 230, type: !1973)
!2211 = !DILocalVariable(name: "entry", scope: !2206, file: !1974, line: 244, type: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !2215)
!2215 = !{!2216, !2220}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2214, file: !251, line: 60, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!107, !1992}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2214, file: !251, line: 65, baseType: !1992, size: 32, offset: 32)
!2221 = !DILocalVariable(name: "dev", scope: !2222, file: !1974, line: 247, type: !1992)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !1974, line: 246, column: 64)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !1974, line: 246, column: 2)
!2224 = distinct !DILexicalBlock(scope: !2206, file: !1974, line: 246, column: 2)
!2225 = !DILocalVariable(name: "rc", scope: !2222, file: !1974, line: 248, type: !107)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 192, elements: !1395)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2229)
!2229 = !{!2230, !2231}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2228, file: !203, line: 17, baseType: !118, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2228, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(name: "states_str", scope: !2234, file: !2235, line: 276, type: !2359, isLocal: true, isDefinition: true)
!2234 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2235, file: !2235, line: 271, type: !2236, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2350)
!2235 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!118, !2238, !193, !185}
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !2241)
!2241 = !{!2242, !2300, !2312, !2313, !2314, !2315, !2316, !2322, !2337}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2240, file: !322, line: 247, baseType: !2243, size: 384)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !2244)
!2244 = !{!2245, !2269, !2276, !2277, !2278, !2287, !2288, !2289}
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !322, line: 60, baseType: !2246, size: 64)
!2246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !322, line: 60, size: 64, elements: !2247)
!2247 = !{!2248, !2263}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2246, file: !322, line: 61, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !2250)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !2251)
!2251 = !{!2252, !2258}
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !332, line: 38, baseType: !2253, size: 32)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !332, line: 38, size: 32, elements: !2254)
!2254 = !{!2255, !2257}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2253, file: !332, line: 39, baseType: !2256, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2253, file: !332, line: 40, baseType: !2256, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !332, line: 42, baseType: !2259, size: 32, offset: 32)
!2259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !332, line: 42, size: 32, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2259, file: !332, line: 43, baseType: !2256, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2259, file: !332, line: 44, baseType: !2256, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2246, file: !322, line: 62, baseType: !2264, size: 64)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2264, file: !348, line: 50, baseType: !2267, size: 64)
!2267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2268, size: 64, elements: !353)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2243, file: !322, line: 68, baseType: !2270, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2272, file: !358, line: 232, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !2250)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2243, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2243, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!2278 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !322, line: 90, baseType: !2279, size: 16, offset: 112)
!2279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !322, line: 90, size: 16, elements: !2280)
!2280 = !{!2281, !2286}
!2281 = !DIDerivedType(tag: DW_TAG_member, scope: !2279, file: !322, line: 91, baseType: !2282, size: 16)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2279, file: !322, line: 91, size: 16, elements: !2283)
!2283 = !{!2284, !2285}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2282, file: !322, line: 96, baseType: !372, size: 8)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2282, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2279, file: !322, line: 100, baseType: !197, size: 16)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2243, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2243, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2243, file: !322, line: 131, baseType: !2290, size: 192, offset: 192)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !2291)
!2291 = !{!2292, !2293, !2299}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2290, file: !358, line: 245, baseType: !2249, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2290, file: !358, line: 246, baseType: !2294, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !2298}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2290, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2240, file: !322, line: 250, baseType: !2301, size: 288, offset: 384)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !2302)
!2302 = !{!2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2301, file: !392, line: 26, baseType: !152, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2301, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2301, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2301, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2301, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2301, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2301, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2301, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2301, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2240, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2240, file: !322, line: 256, baseType: !2271, size: 64, offset: 704)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2240, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2240, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2240, file: !322, line: 300, baseType: !2317, size: 96, offset: 1056)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !2318)
!2318 = !{!2319, !2320, !2321}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2317, file: !322, line: 153, baseType: !22, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2317, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2317, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2240, file: !322, line: 325, baseType: !2323, size: 32, offset: 1152)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !2325)
!2325 = !{!2326, !2332, !2333}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2324, file: !419, line: 5074, baseType: !2327, size: 96)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !2328)
!2328 = !{!2329, !2330, !2331}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2327, file: !423, line: 57, baseType: !426, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2327, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2327, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2324, file: !419, line: 5075, baseType: !2271, size: 64, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2324, file: !419, line: 5076, baseType: !2334, size: 32, offset: 160)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !2335)
!2335 = !{!2336}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2334, file: !433, line: 52, baseType: !22, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2240, file: !322, line: 343, baseType: !2338, size: 64, offset: 1184)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !2339)
!2339 = !{!2340, !2341}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2338, file: !392, line: 63, baseType: !152, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2338, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!2342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2344, globals: !2346, splitDebugInlining: false, nameTableKind: None)
!2343 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2344 = !{!106, !118, !685, !195, !22, !107, !2345, !24, !185, !193, !152, !687}
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2346 = !{!2232, !2347}
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "states_sz", scope: !2234, file: !2235, line: 279, type: !2349, isLocal: true, isDefinition: true)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1923, size: 256, elements: !1369)
!2350 = !{!2351, !2352, !2353, !2354, !2355, !2356, !2357}
!2351 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2234, file: !2235, line: 271, type: !2238)
!2352 = !DILocalVariable(name: "buf", arg: 2, scope: !2234, file: !2235, line: 271, type: !193)
!2353 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2234, file: !2235, line: 271, type: !185)
!2354 = !DILocalVariable(name: "off", scope: !2234, file: !2235, line: 273, type: !185)
!2355 = !DILocalVariable(name: "bit", scope: !2234, file: !2235, line: 274, type: !195)
!2356 = !DILocalVariable(name: "thread_state", scope: !2234, file: !2235, line: 275, type: !195)
!2357 = !DILocalVariable(name: "index", scope: !2358, file: !2235, line: 293, type: !195)
!2358 = distinct !DILexicalBlock(scope: !2234, file: !2235, line: 293, column: 2)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1369)
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2362, file: !2473, line: 56, type: !2460, isLocal: false, isDefinition: true)
!2362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2363, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2364, globals: !2470, splitDebugInlining: false, nameTableKind: None)
!2363 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2364 = !{!2365, !193, !106, !2468, !194, !685, !984, !107, !152, !687, !2469}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !2367)
!2367 = !{!2368, !2426, !2438, !2439, !2440, !2441, !2442, !2448, !2463}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2366, file: !322, line: 247, baseType: !2369, size: 384)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !2370)
!2370 = !{!2371, !2395, !2402, !2403, !2404, !2413, !2414, !2415}
!2371 = !DIDerivedType(tag: DW_TAG_member, scope: !2369, file: !322, line: 60, baseType: !2372, size: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2369, file: !322, line: 60, size: 64, elements: !2373)
!2373 = !{!2374, !2389}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2372, file: !322, line: 61, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !2377)
!2377 = !{!2378, !2384}
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !332, line: 38, baseType: !2379, size: 32)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !332, line: 38, size: 32, elements: !2380)
!2380 = !{!2381, !2383}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2379, file: !332, line: 39, baseType: !2382, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2379, file: !332, line: 40, baseType: !2382, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !332, line: 42, baseType: !2385, size: 32, offset: 32)
!2385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !332, line: 42, size: 32, elements: !2386)
!2386 = !{!2387, !2388}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2385, file: !332, line: 43, baseType: !2382, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2385, file: !332, line: 44, baseType: !2382, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2372, file: !322, line: 62, baseType: !2390, size: 64)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !2391)
!2391 = !{!2392}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2390, file: !348, line: 50, baseType: !2393, size: 64)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2394, size: 64, elements: !353)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2369, file: !322, line: 68, baseType: !2396, size: 32, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !2399)
!2399 = !{!2400}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2398, file: !358, line: 232, baseType: !2401, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !2376)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2369, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2369, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!2404 = !DIDerivedType(tag: DW_TAG_member, scope: !2369, file: !322, line: 90, baseType: !2405, size: 16, offset: 112)
!2405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2369, file: !322, line: 90, size: 16, elements: !2406)
!2406 = !{!2407, !2412}
!2407 = !DIDerivedType(tag: DW_TAG_member, scope: !2405, file: !322, line: 91, baseType: !2408, size: 16)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2405, file: !322, line: 91, size: 16, elements: !2409)
!2409 = !{!2410, !2411}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2408, file: !322, line: 96, baseType: !372, size: 8)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2408, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2405, file: !322, line: 100, baseType: !197, size: 16)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2369, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2369, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2369, file: !322, line: 131, baseType: !2416, size: 192, offset: 192)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !2417)
!2417 = !{!2418, !2419, !2425}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2416, file: !358, line: 245, baseType: !2375, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2416, file: !358, line: 246, baseType: !2420, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !2421)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{null, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2416, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2366, file: !322, line: 250, baseType: !2427, size: 288, offset: 384)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2427, file: !392, line: 26, baseType: !152, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2427, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2427, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2427, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2427, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2427, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2427, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2427, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2427, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2366, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2366, file: !322, line: 256, baseType: !2397, size: 64, offset: 704)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2366, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2366, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2366, file: !322, line: 300, baseType: !2443, size: 96, offset: 1056)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !2444)
!2444 = !{!2445, !2446, !2447}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2443, file: !322, line: 153, baseType: !22, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2443, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2443, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2366, file: !322, line: 325, baseType: !2449, size: 32, offset: 1152)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !2451)
!2451 = !{!2452, !2458, !2459}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2450, file: !419, line: 5074, baseType: !2453, size: 96)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !2454)
!2454 = !{!2455, !2456, !2457}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2453, file: !423, line: 57, baseType: !426, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2453, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2453, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2450, file: !419, line: 5075, baseType: !2397, size: 64, offset: 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2450, file: !419, line: 5076, baseType: !2460, size: 32, offset: 160)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !2461)
!2461 = !{!2462}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2460, file: !433, line: 52, baseType: !22, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2366, file: !322, line: 343, baseType: !2464, size: 64, offset: 1184)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !2465)
!2465 = !{!2466, !2467}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2464, file: !392, line: 63, baseType: !152, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2464, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2470 = !{!2360, !2471, !2474, !2476}
!2471 = !DIGlobalVariableExpression(var: !2472, expr: !DIExpression())
!2472 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2362, file: !2473, line: 404, type: !107, isLocal: true, isDefinition: true)
!2473 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2362, file: !2473, line: 405, type: !107, isLocal: true, isDefinition: true)
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "pending_current", scope: !2362, file: !2473, line: 425, type: !2365, isLocal: true, isDefinition: true)
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2480, file: !2510, line: 19, type: !2516, isLocal: true, isDefinition: true)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2482, globals: !2507, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2482 = !{!685, !106, !984, !152, !687, !107, !2483, !193, !389}
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !2485)
!2485 = !{!2486, !2501, !2506}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2484, file: !358, line: 245, baseType: !2487, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !2489)
!2489 = !{!2490, !2496}
!2490 = !DIDerivedType(tag: DW_TAG_member, scope: !2488, file: !332, line: 38, baseType: !2491, size: 32)
!2491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2488, file: !332, line: 38, size: 32, elements: !2492)
!2492 = !{!2493, !2495}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2491, file: !332, line: 39, baseType: !2494, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2491, file: !332, line: 40, baseType: !2494, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, scope: !2488, file: !332, line: 42, baseType: !2497, size: 32, offset: 32)
!2497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2488, file: !332, line: 42, size: 32, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2497, file: !332, line: 43, baseType: !2494, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2497, file: !332, line: 44, baseType: !2494, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2484, file: !358, line: 246, baseType: !2502, size: 32, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !2503)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{null, !2483}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2484, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!2507 = !{!2508, !2478, !2511, !2513}
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2480, file: !2510, line: 15, type: !687, isLocal: true, isDefinition: true)
!2510 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2511 = !DIGlobalVariableExpression(var: !2512, expr: !DIExpression())
!2512 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2480, file: !2510, line: 25, type: !107, isLocal: true, isDefinition: true)
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2480, file: !2510, line: 17, type: !2515, isLocal: true, isDefinition: true)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !2488)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !2517)
!2517 = !{!2518}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2516, file: !433, line: 52, baseType: !22, size: 32)
!2519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2522, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2522 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2525, retainedTypes: !2545, splitDebugInlining: false, nameTableKind: None)
!2524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2525 = !{!2526, !2534}
!2526 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2527, line: 69, baseType: !32, size: 32, elements: !2528)
!2527 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2528 = !{!2529, !2530, !2531, !2532, !2533}
!2529 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2530 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2531 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2532 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2533 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2534 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2527, line: 56, baseType: !32, size: 32, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544}
!2536 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2537 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2538 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2539 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2540 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2541 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2542 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2543 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2544 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2545 = !{!107, !2526, !2534, !2546, !373, !277, !2548, !2549, !196, !198, !118, !185, !106, !22, !32, !187, !2551, !2552, !189, !188, !191, !190, !2547, !2553, !2554, !2555, !2556}
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2527, line: 31, baseType: !2547)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2527, line: 32, baseType: !2550)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !688)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2563, splitDebugInlining: false, nameTableKind: None)
!2562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2563 = !{!118, !196, !107, !32}
!2564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2566, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2566 = !{!2567, !30}
!2567 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2568, line: 27, baseType: !32, size: 32, elements: !2569)
!2568 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2569 = !{!2570, !2571, !2572, !2573, !2574}
!2570 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2571 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2572 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2573 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2574 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2577, retainedTypes: !2578, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2577 = !{!855, !2567, !30}
!2578 = !{!1002, !2579, !106, !107, !984, !152, !195, !2596}
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 360, baseType: !2581)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 345, size: 28704, elements: !2582)
!2582 = !{!2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2581, file: !476, line: 347, baseType: !1743, size: 256)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2581, file: !476, line: 348, baseType: !1745, size: 768, offset: 256)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2581, file: !476, line: 349, baseType: !1743, size: 256, offset: 1024)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2581, file: !476, line: 350, baseType: !1745, size: 768, offset: 1280)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2581, file: !476, line: 351, baseType: !1743, size: 256, offset: 2048)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2581, file: !476, line: 352, baseType: !1745, size: 768, offset: 2304)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2581, file: !476, line: 353, baseType: !1743, size: 256, offset: 3072)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2581, file: !476, line: 354, baseType: !1745, size: 768, offset: 3328)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2581, file: !476, line: 355, baseType: !1743, size: 256, offset: 4096)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2581, file: !476, line: 356, baseType: !1756, size: 1792, offset: 4352)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2581, file: !476, line: 357, baseType: !1760, size: 1920, offset: 6144)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2581, file: !476, line: 358, baseType: !1765, size: 20608, offset: 8064)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2581, file: !476, line: 359, baseType: !227, size: 32, offset: 28672)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2598)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2599)
!2599 = !{!2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2598, file: !476, line: 381, baseType: !480, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2598, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2598, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2598, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2598, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2598, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2598, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2598, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2598, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2598, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2598, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2598, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2598, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2598, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2598, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2598, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2598, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2598, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2598, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2598, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2598, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2622 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2625, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2625 = !{!106, !107, !22, !2626}
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2628)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2629)
!2629 = !{!2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2628, file: !476, line: 381, baseType: !480, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2628, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2628, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2628, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2628, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2628, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2628, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2628, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2628, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2628, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2628, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2628, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2628, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2628, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2628, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2628, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2628, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2628, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2628, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2628, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2628, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2653, splitDebugInlining: false, nameTableKind: None)
!2652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2653 = !{!2654, !106, !107}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2657)
!2657 = !{!2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2656, file: !476, line: 381, baseType: !480, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2656, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2656, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2656, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2656, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2656, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2656, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2656, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2656, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2656, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2656, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2656, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2656, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2656, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2656, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2656, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2656, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2656, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2656, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2656, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2656, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2679 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2680, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2681, splitDebugInlining: false, nameTableKind: None)
!2680 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2681 = !{!2682, !152, !106, !107}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 32)
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2684, line: 98, size: 256, elements: !2685)
!2684 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2685 = !{!2686, !2691, !2696, !2701, !2706, !2711, !2716, !2721}
!2686 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 99, baseType: !2687, size: 32)
!2687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 99, size: 32, elements: !2688)
!2688 = !{!2689, !2690}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2687, file: !2684, line: 99, baseType: !152, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2687, file: !2684, line: 99, baseType: !152, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 100, baseType: !2692, size: 32, offset: 32)
!2692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 100, size: 32, elements: !2693)
!2693 = !{!2694, !2695}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2692, file: !2684, line: 100, baseType: !152, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2692, file: !2684, line: 100, baseType: !152, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 101, baseType: !2697, size: 32, offset: 64)
!2697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 101, size: 32, elements: !2698)
!2698 = !{!2699, !2700}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2697, file: !2684, line: 101, baseType: !152, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2697, file: !2684, line: 101, baseType: !152, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 102, baseType: !2702, size: 32, offset: 96)
!2702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 102, size: 32, elements: !2703)
!2703 = !{!2704, !2705}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2702, file: !2684, line: 102, baseType: !152, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2702, file: !2684, line: 102, baseType: !152, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 103, baseType: !2707, size: 32, offset: 128)
!2707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 103, size: 32, elements: !2708)
!2708 = !{!2709, !2710}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2707, file: !2684, line: 103, baseType: !152, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2707, file: !2684, line: 103, baseType: !152, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 104, baseType: !2712, size: 32, offset: 160)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 104, size: 32, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2712, file: !2684, line: 104, baseType: !152, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2712, file: !2684, line: 104, baseType: !152, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 105, baseType: !2717, size: 32, offset: 192)
!2717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 105, size: 32, elements: !2718)
!2718 = !{!2719, !2720}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2717, file: !2684, line: 105, baseType: !152, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2717, file: !2684, line: 105, baseType: !152, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2683, file: !2684, line: 106, baseType: !152, size: 32, offset: 224)
!2722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2566, retainedTypes: !2724, splitDebugInlining: false, nameTableKind: None)
!2723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2724 = !{!2725, !106, !107, !2750, !2793, !152}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2727, file: !476, line: 381, baseType: !480, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2727, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2727, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2727, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2727, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2727, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2727, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2727, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2727, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2727, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2727, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2727, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2727, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2727, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2727, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2727, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2727, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2727, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2727, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2727, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2727, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2684, line: 141, baseType: !2752)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2684, line: 97, size: 256, elements: !2753)
!2753 = !{!2754}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2752, file: !2684, line: 107, baseType: !2755, size: 256)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2684, line: 98, size: 256, elements: !2756)
!2756 = !{!2757, !2762, !2767, !2772, !2777, !2782, !2787, !2792}
!2757 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 99, baseType: !2758, size: 32)
!2758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 99, size: 32, elements: !2759)
!2759 = !{!2760, !2761}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2758, file: !2684, line: 99, baseType: !152, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2758, file: !2684, line: 99, baseType: !152, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 100, baseType: !2763, size: 32, offset: 32)
!2763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 100, size: 32, elements: !2764)
!2764 = !{!2765, !2766}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2763, file: !2684, line: 100, baseType: !152, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2763, file: !2684, line: 100, baseType: !152, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 101, baseType: !2768, size: 32, offset: 64)
!2768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 101, size: 32, elements: !2769)
!2769 = !{!2770, !2771}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2768, file: !2684, line: 101, baseType: !152, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2768, file: !2684, line: 101, baseType: !152, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 102, baseType: !2773, size: 32, offset: 96)
!2773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 102, size: 32, elements: !2774)
!2774 = !{!2775, !2776}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2773, file: !2684, line: 102, baseType: !152, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2773, file: !2684, line: 102, baseType: !152, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 103, baseType: !2778, size: 32, offset: 128)
!2778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 103, size: 32, elements: !2779)
!2779 = !{!2780, !2781}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2778, file: !2684, line: 103, baseType: !152, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2778, file: !2684, line: 103, baseType: !152, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 104, baseType: !2783, size: 32, offset: 160)
!2783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 104, size: 32, elements: !2784)
!2784 = !{!2785, !2786}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2783, file: !2684, line: 104, baseType: !152, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2783, file: !2684, line: 104, baseType: !152, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 105, baseType: !2788, size: 32, offset: 192)
!2788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 105, size: 32, elements: !2789)
!2789 = !{!2790, !2791}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2788, file: !2684, line: 105, baseType: !152, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2788, file: !2684, line: 105, baseType: !152, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2755, file: !2684, line: 106, baseType: !152, size: 32, offset: 224)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1728, retainedTypes: !2796, splitDebugInlining: false, nameTableKind: None)
!2795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2796 = !{!1002, !984, !195, !152, !2797, !2814}
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 360, baseType: !2799)
!2799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 345, size: 28704, elements: !2800)
!2800 = !{!2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2799, file: !476, line: 347, baseType: !1743, size: 256)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2799, file: !476, line: 348, baseType: !1745, size: 768, offset: 256)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2799, file: !476, line: 349, baseType: !1743, size: 256, offset: 1024)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2799, file: !476, line: 350, baseType: !1745, size: 768, offset: 1280)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2799, file: !476, line: 351, baseType: !1743, size: 256, offset: 2048)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2799, file: !476, line: 352, baseType: !1745, size: 768, offset: 2304)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2799, file: !476, line: 353, baseType: !1743, size: 256, offset: 3072)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2799, file: !476, line: 354, baseType: !1745, size: 768, offset: 3328)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2799, file: !476, line: 355, baseType: !1743, size: 256, offset: 4096)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2799, file: !476, line: 356, baseType: !1756, size: 1792, offset: 4352)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2799, file: !476, line: 357, baseType: !1760, size: 1920, offset: 6144)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2799, file: !476, line: 358, baseType: !1765, size: 20608, offset: 8064)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2799, file: !476, line: 359, baseType: !227, size: 32, offset: 28672)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2816)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2817)
!2817 = !{!2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2816, file: !476, line: 381, baseType: !480, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2816, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2816, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2816, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2816, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2816, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2816, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2816, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2816, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2816, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2816, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2816, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2816, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2816, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2816, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2816, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2816, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2816, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2816, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2816, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2816, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2839 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2840, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2841, splitDebugInlining: false, nameTableKind: None)
!2840 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2841 = !{!2842, !106, !107}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2845)
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2844, file: !476, line: 381, baseType: !480, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2844, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2844, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2844, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2844, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2844, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2844, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2844, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2844, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2844, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2844, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2844, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2844, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2844, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2844, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2844, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2844, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2844, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2844, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2844, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2844, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2869, splitDebugInlining: false, nameTableKind: None)
!2868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2869 = !{!120, !193, !185, !1178, !2870, !196, !106}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2874, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2874 = !{!2875}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2877, file: !223, line: 372, baseType: !227, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2877, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2877, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2877, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2877, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2877, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2877, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2877, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2877, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2877, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2877, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2877, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2877, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2877, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!2893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2897, retainedTypes: !2913, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2897 = !{!2898, !2905, !2909}
!2898 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2899, line: 39, baseType: !32, size: 32, elements: !2900)
!2899 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2900 = !{!2901, !2902, !2903, !2904}
!2901 = !DIEnumerator(name: "HAL_OK", value: 0)
!2902 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2903 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2904 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2905 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1039, line: 183, baseType: !32, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIEnumerator(name: "DISABLE", value: 0)
!2908 = !DIEnumerator(name: "ENABLE", value: 1)
!2909 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1039, line: 177, baseType: !32, size: 32, elements: !2910)
!2910 = !{!2911, !2912}
!2911 = !DIEnumerator(name: "RESET", value: 0)
!2912 = !DIEnumerator(name: "SET", value: 1)
!2913 = !{!2914, !106, !152, !195, !2932, !2933, !2939, !197, !2952, !687, !2965}
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !2916)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !2917)
!2917 = !{!2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2916, file: !223, line: 372, baseType: !227, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2916, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2916, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2916, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2916, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2916, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2916, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2916, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2916, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2916, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2916, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2916, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2916, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2916, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 364, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 64, elements: !2936)
!2936 = !{!2937, !2938}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2935, file: !223, line: 362, baseType: !227, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2935, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 286, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 275, size: 288, elements: !2942)
!2942 = !{!2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2941, file: !223, line: 277, baseType: !227, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2941, file: !223, line: 278, baseType: !227, size: 32, offset: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2941, file: !223, line: 279, baseType: !227, size: 32, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2941, file: !223, line: 280, baseType: !227, size: 32, offset: 96)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2941, file: !223, line: 281, baseType: !227, size: 32, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2941, file: !223, line: 282, baseType: !227, size: 32, offset: 160)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2941, file: !223, line: 283, baseType: !227, size: 32, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2941, file: !223, line: 284, baseType: !227, size: 32, offset: 224)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2941, file: !223, line: 285, baseType: !227, size: 32, offset: 256)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 314, baseType: !2954)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 303, size: 320, elements: !2955)
!2955 = !{!2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2954, file: !223, line: 305, baseType: !227, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2954, file: !223, line: 306, baseType: !227, size: 32, offset: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2954, file: !223, line: 307, baseType: !227, size: 32, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2954, file: !223, line: 308, baseType: !227, size: 32, offset: 96)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2954, file: !223, line: 309, baseType: !227, size: 32, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2954, file: !223, line: 310, baseType: !227, size: 32, offset: 160)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2954, file: !223, line: 311, baseType: !227, size: 32, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2954, file: !223, line: 312, baseType: !227, size: 32, offset: 224)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2954, file: !223, line: 313, baseType: !1315, size: 64, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2968, retainedTypes: !2969, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!2968 = !{!1038}
!2969 = !{!2970, !152, !2978, !2984, !2997}
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !476, line: 712, baseType: !2972)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 706, size: 128, elements: !2973)
!2973 = !{!2974, !2975, !2976, !2977}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2972, file: !476, line: 708, baseType: !227, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2972, file: !476, line: 709, baseType: !227, size: 32, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2972, file: !476, line: 710, baseType: !227, size: 32, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2972, file: !476, line: 711, baseType: !480, size: 32, offset: 96)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 364, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 64, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2980, file: !223, line: 362, baseType: !227, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2980, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 286, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 275, size: 288, elements: !2987)
!2987 = !{!2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2986, file: !223, line: 277, baseType: !227, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2986, file: !223, line: 278, baseType: !227, size: 32, offset: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2986, file: !223, line: 279, baseType: !227, size: 32, offset: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2986, file: !223, line: 280, baseType: !227, size: 32, offset: 96)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2986, file: !223, line: 281, baseType: !227, size: 32, offset: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2986, file: !223, line: 282, baseType: !227, size: 32, offset: 160)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2986, file: !223, line: 283, baseType: !227, size: 32, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2986, file: !223, line: 284, baseType: !227, size: 32, offset: 224)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2986, file: !223, line: 285, baseType: !227, size: 32, offset: 256)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2999, file: !223, line: 372, baseType: !227, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2999, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2999, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2999, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2999, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2999, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2999, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2999, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2999, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2999, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2999, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2999, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2999, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2999, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!3015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3016, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3017, splitDebugInlining: false, nameTableKind: None)
!3016 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!3017 = !{!106, !185}
!3018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3019, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3020, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3019 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!3020 = !{!3021, !3028, !2567, !30}
!3021 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3022, line: 14, baseType: !32, size: 32, elements: !3023)
!3022 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3023 = !{!3024, !3025, !3026, !3027}
!3024 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3025 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3026 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3027 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3028 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3022, line: 42, baseType: !32, size: 32, elements: !3029)
!3029 = !{!3030, !3031, !3032, !3033, !3034, !3035}
!3030 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3031 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3032 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3033 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3034 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3035 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3037, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3037 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!3038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3039, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3040, splitDebugInlining: false, nameTableKind: None)
!3039 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!3040 = !{!22, !106, !107}
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!3043 = !{!"Ubuntu clang version 14.0.6"}
!3044 = !{i32 7, !"Dwarf Version", i32 4}
!3045 = !{i32 2, !"Debug Info Version", i32 3}
!3046 = !{i32 1, !"wchar_size", i32 4}
!3047 = !{i32 1, !"min_enum_size", i32 4}
!3048 = !{i32 1, !"branch-target-enforcement", i32 0}
!3049 = !{i32 1, !"sign-return-address", i32 0}
!3050 = !{i32 1, !"sign-return-address-all", i32 0}
!3051 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3052 = !{i32 7, !"frame-pointer", i32 2}
!3053 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3054, file: !3054, line: 26, type: !3055, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !2175)
!3054 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3055 = !DISubroutineType(types: !3056)
!3056 = !{null}
!3057 = !DILocation(line: 28, column: 1, scope: !3053)
!3058 = !{i64 2152499325, i64 2152499345, i64 2152499408}
!3059 = !DILocation(line: 29, column: 1, scope: !3053)
!3060 = !{i64 2152499740, i64 2152499760, i64 2152499823}
!3061 = !DILocation(line: 30, column: 1, scope: !3053)
!3062 = !{i64 2152500159, i64 2152500179, i64 2152500242}
!3063 = !DILocation(line: 31, column: 1, scope: !3053)
!3064 = !{i64 2152500578, i64 2152500598, i64 2152500661}
!3065 = !DILocation(line: 33, column: 1, scope: !3053)
!3066 = !{i64 2152500870, i64 2152500890, i64 2152500953}
!3067 = !DILocation(line: 35, column: 1, scope: !3053)
!3068 = !{i64 2152501195, i64 2152501215, i64 2152501278}
!3069 = !DILocation(line: 50, column: 1, scope: !3053)
!3070 = !{i64 2152501622, i64 2152501642, i64 2152501705}
!3071 = !DILocation(line: 54, column: 1, scope: !3053)
!3072 = !{i64 2152502061, i64 2152502081, i64 2152502144}
!3073 = !DILocation(line: 61, column: 1, scope: !3053)
!3074 = !{i64 2152502378, i64 2152502398, i64 2152502461}
!3075 = !DILocation(line: 63, column: 1, scope: !3053)
!3076 = !{i64 2152502758, i64 2152502778, i64 2152502841}
!3077 = !DILocation(line: 64, column: 1, scope: !3053)
!3078 = !{i64 2152503280, i64 2152503300, i64 2152503363}
!3079 = !DILocation(line: 65, column: 1, scope: !3053)
!3080 = !{i64 2152503778, i64 2152503798, i64 2152503861}
!3081 = !DILocation(line: 66, column: 1, scope: !3053)
!3082 = !{i64 2152504260, i64 2152504280, i64 2152504343}
!3083 = !DILocation(line: 67, column: 1, scope: !3053)
!3084 = !{i64 2152504767, i64 2152504787, i64 2152504850}
!3085 = !DILocation(line: 68, column: 1, scope: !3053)
!3086 = !{i64 2152505255, i64 2152505275, i64 2152505338}
!3087 = !DILocation(line: 70, column: 1, scope: !3053)
!3088 = !{i64 2152505723, i64 2152505743, i64 2152505806}
!3089 = !DILocation(line: 71, column: 1, scope: !3053)
!3090 = !{i64 2152506165, i64 2152506185, i64 2152506248}
!3091 = !DILocation(line: 72, column: 1, scope: !3053)
!3092 = !{i64 2152506623, i64 2152506643, i64 2152506706}
!3093 = !DILocation(line: 79, column: 1, scope: !3053)
!3094 = !{i64 2152511138, i64 2152511158, i64 2152511221}
!3095 = !DILocation(line: 80, column: 1, scope: !3053)
!3096 = !{i64 2152511649, i64 2152511669, i64 2152511732}
!3097 = !DILocation(line: 82, column: 1, scope: !3053)
!3098 = !{i64 2152512140, i64 2152512160, i64 2152512223}
!3099 = !DILocation(line: 97, column: 1, scope: !3053)
!3100 = !{i64 2152512477, i64 2152512497, i64 2152512560}
!3101 = !DILocation(line: 99, column: 1, scope: !3053)
!3102 = !{i64 2152512695, i64 2152512715, i64 2152512778}
!3103 = !DILocation(line: 102, column: 1, scope: !3053)
!3104 = !{i64 2152512952, i64 2152512972, i64 2152513035}
!3105 = !DILocation(line: 105, column: 1, scope: !3053)
!3106 = !{i64 2152513192, i64 2152513212, i64 2152513275}
!3107 = !DILocation(line: 115, column: 1, scope: !3053)
!3108 = !{i64 2152513531, i64 2152513551, i64 2152513614}
!3109 = !DILocation(line: 118, column: 1, scope: !3053)
!3110 = !{i64 2152513875, i64 2152513895, i64 2152513958}
!3111 = !DILocation(line: 32, column: 1, scope: !3112)
!3112 = !DILexicalBlockFile(scope: !3053, file: !3113, discriminator: 0)
!3113 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3114 = !{i64 2152514231, i64 2152514251, i64 2152514314}
!3115 = !DILocation(line: 33, column: 1, scope: !3112)
!3116 = !{i64 2152514743, i64 2152514763, i64 2152514826}
!3117 = !DILocation(line: 53, column: 1, scope: !3112)
!3118 = !{i64 2152515251, i64 2152515271, i64 2152515334}
!3119 = !DILocation(line: 54, column: 1, scope: !3112)
!3120 = !{i64 2152515669, i64 2152515689, i64 2152515752}
!3121 = !DILocation(line: 55, column: 1, scope: !3112)
!3122 = !{i64 2152516087, i64 2152516107, i64 2152516170}
!3123 = !DILocation(line: 56, column: 1, scope: !3112)
!3124 = !{i64 2152516505, i64 2152516525, i64 2152516588}
!3125 = !DILocation(line: 57, column: 1, scope: !3112)
!3126 = !{i64 2152516923, i64 2152516943, i64 2152517006}
!3127 = !DILocation(line: 58, column: 1, scope: !3112)
!3128 = !{i64 2152517341, i64 2152517361, i64 2152517424}
!3129 = !DILocation(line: 59, column: 1, scope: !3112)
!3130 = !{i64 2152517759, i64 2152517779, i64 2152517842}
!3131 = !DILocation(line: 60, column: 1, scope: !3112)
!3132 = !{i64 2152518183, i64 2152518203, i64 2152518266}
!3133 = !DILocation(line: 61, column: 1, scope: !3112)
!3134 = !{i64 2152518500, i64 2152518520, i64 2152518583}
!3135 = !DILocation(line: 70, column: 1, scope: !3112)
!3136 = !{i64 2152518729, i64 2152518749, i64 2152518812}
!3137 = !DILocation(line: 72, column: 1, scope: !3112)
!3138 = !{i64 2152519061, i64 2152519081, i64 2152519144}
!3139 = !DILocation(line: 73, column: 1, scope: !3112)
!3140 = !{i64 2152519511, i64 2152519531, i64 2152519594}
!3141 = !DILocation(line: 74, column: 1, scope: !3112)
!3142 = !{i64 2152519961, i64 2152519981, i64 2152520044}
!3143 = !DILocation(line: 75, column: 1, scope: !3112)
!3144 = !{i64 2152520411, i64 2152520431, i64 2152520494}
!3145 = !DILocation(line: 76, column: 1, scope: !3112)
!3146 = !{i64 2152524922, i64 2152524942, i64 2152525005}
!3147 = !DILocation(line: 77, column: 1, scope: !3112)
!3148 = !{i64 2152525372, i64 2152525392, i64 2152525455}
!3149 = !DILocation(line: 78, column: 1, scope: !3112)
!3150 = !{i64 2152525822, i64 2152525842, i64 2152525905}
!3151 = !DILocation(line: 79, column: 1, scope: !3112)
!3152 = !{i64 2152526272, i64 2152526292, i64 2152526355}
!3153 = !DILocation(line: 80, column: 1, scope: !3112)
!3154 = !{i64 2152526725, i64 2152526745, i64 2152526808}
!3155 = !DILocation(line: 84, column: 1, scope: !3112)
!3156 = !{i64 2152527057, i64 2152527077, i64 2152527140}
!3157 = !DILocation(line: 91, column: 1, scope: !3112)
!3158 = !{i64 2152527454, i64 2152527474, i64 2152527537}
!3159 = !DILocation(line: 93, column: 1, scope: !3112)
!3160 = !{i64 2152527821, i64 2152527841, i64 2152527904}
!3161 = !DILocation(line: 106, column: 1, scope: !3112)
!3162 = !{i64 2152528091, i64 2152528111, i64 2152528174}
!3163 = !DILocation(line: 11, column: 1, scope: !3164)
!3164 = !DILexicalBlockFile(scope: !3053, file: !3165, discriminator: 0)
!3165 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3166 = distinct !DISubprogram(name: "_framework_tests_test_assert_wrapper", scope: !111, file: !111, line: 18, type: !131, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3167)
!3167 = !{!3168}
!3168 = !DILocalVariable(name: "data", arg: 1, scope: !3166, file: !111, line: 18, type: !106)
!3169 = !DILocation(line: 0, scope: !3166)
!3170 = !DILocation(line: 18, column: 1, scope: !3166)
!3171 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3172, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3181)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{!107, !106, !185, !152, !118, !3174}
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3175, line: 99, baseType: !3176)
!3175 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3175, line: 40, baseType: !3177)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3178)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3179)
!3179 = !{!3180}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3178, file: !200, line: 18, baseType: !106, size: 32)
!3181 = !{!3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3217, !3226, !3229, !3230, !3233, !3236, !3239, !3242, !3248}
!3182 = !DILocalVariable(name: "packaged", arg: 1, scope: !3171, file: !200, line: 233, type: !106)
!3183 = !DILocalVariable(name: "len", arg: 2, scope: !3171, file: !200, line: 233, type: !185)
!3184 = !DILocalVariable(name: "flags", arg: 3, scope: !3171, file: !200, line: 233, type: !152)
!3185 = !DILocalVariable(name: "fmt", arg: 4, scope: !3171, file: !200, line: 234, type: !118)
!3186 = !DILocalVariable(name: "ap", arg: 5, scope: !3171, file: !200, line: 234, type: !3174)
!3187 = !DILocalVariable(name: "buf0", scope: !3171, file: !200, line: 247, type: !194)
!3188 = !DILocalVariable(name: "buf", scope: !3171, file: !200, line: 248, type: !194)
!3189 = !DILocalVariable(name: "size", scope: !3171, file: !200, line: 249, type: !32)
!3190 = !DILocalVariable(name: "align", scope: !3171, file: !200, line: 250, type: !32)
!3191 = !DILocalVariable(name: "str_ptr_pos", scope: !3171, file: !200, line: 251, type: !3192)
!3192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !970)
!3193 = !DILocalVariable(name: "str_ptr_arg", scope: !3171, file: !200, line: 252, type: !3192)
!3194 = !DILocalVariable(name: "s_idx", scope: !3171, file: !200, line: 253, type: !32)
!3195 = !DILocalVariable(name: "s_rw_cnt", scope: !3171, file: !200, line: 254, type: !32)
!3196 = !DILocalVariable(name: "s_ro_cnt", scope: !3171, file: !200, line: 255, type: !32)
!3197 = !DILocalVariable(name: "arg_idx", scope: !3171, file: !200, line: 256, type: !107)
!3198 = !DILocalVariable(name: "i", scope: !3171, file: !200, line: 257, type: !32)
!3199 = !DILocalVariable(name: "s", scope: !3171, file: !200, line: 258, type: !118)
!3200 = !DILocalVariable(name: "parsing", scope: !3171, file: !200, line: 259, type: !145)
!3201 = !DILocalVariable(name: "rws_pos_en", scope: !3171, file: !200, line: 263, type: !145)
!3202 = !DILocalVariable(name: "fros_cnt", scope: !3171, file: !200, line: 268, type: !107)
!3203 = !DILocalVariable(name: "is_str_arg", scope: !3171, file: !200, line: 269, type: !145)
!3204 = !DILocalVariable(name: "pkg_hdr", scope: !3171, file: !200, line: 270, type: !3205)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3206 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3207, line: 78, size: 32, elements: !3208)
!3207 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3208 = !{!3209, !3216}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3206, file: !3207, line: 80, baseType: !3210, size: 32)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3207, line: 45, size: 32, elements: !3211)
!3211 = !{!3212, !3213, !3214, !3215}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3210, file: !3207, line: 47, baseType: !195, size: 8)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3210, file: !3207, line: 50, baseType: !195, size: 8, offset: 8)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3210, file: !3207, line: 53, baseType: !195, size: 8, offset: 16)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3210, file: !3207, line: 56, baseType: !195, size: 8, offset: 24)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3206, file: !3207, line: 82, baseType: !106, size: 32)
!3217 = !DILocalVariable(name: "v", scope: !3218, file: !200, line: 567, type: !3222)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !200, line: 562, column: 14)
!3219 = distinct !DILexicalBlock(scope: !3220, file: !200, line: 481, column: 18)
!3220 = distinct !DILexicalBlock(scope: !3221, file: !200, line: 466, column: 3)
!3221 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 343, column: 15)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3171, file: !200, line: 567, size: 64, elements: !3223)
!3223 = !{!3224, !3225}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3222, file: !200, line: 567, baseType: !183, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3222, file: !200, line: 567, baseType: !181, size: 64)
!3226 = !DILocalVariable(name: "is_ro", scope: !3227, file: !200, line: 620, type: !145)
!3227 = distinct !DILexicalBlock(scope: !3228, file: !200, line: 613, column: 19)
!3228 = distinct !DILexicalBlock(scope: !3221, file: !200, line: 613, column: 7)
!3229 = !DILocalVariable(name: "do_ro", scope: !3227, file: !200, line: 621, type: !145)
!3230 = !DILocalVariable(name: "s_ptr_idx", scope: !3231, file: !200, line: 626, type: !152)
!3231 = distinct !DILexicalBlock(scope: !3232, file: !200, line: 625, column: 11)
!3232 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 623, column: 8)
!3233 = !DILocalVariable(name: "v", scope: !3234, file: !200, line: 684, type: !107)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !200, line: 683, column: 35)
!3235 = distinct !DILexicalBlock(scope: !3228, file: !200, line: 683, column: 14)
!3236 = !DILocalVariable(name: "v", scope: !3237, file: !200, line: 691, type: !189)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !200, line: 690, column: 36)
!3238 = distinct !DILexicalBlock(scope: !3235, file: !200, line: 690, column: 14)
!3239 = !DILocalVariable(name: "v", scope: !3240, file: !200, line: 698, type: !191)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 697, column: 41)
!3241 = distinct !DILexicalBlock(scope: !3238, file: !200, line: 697, column: 14)
!3242 = !DILocalVariable(name: "pos", scope: !3243, file: !200, line: 762, type: !195)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !200, line: 757, column: 31)
!3244 = distinct !DILexicalBlock(scope: !3245, file: !200, line: 757, column: 3)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !200, line: 757, column: 3)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !200, line: 756, column: 16)
!3247 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 756, column: 6)
!3248 = !DILabel(scope: !3227, name: "process_string", file: !200, line: 615)
!3249 = !DILocation(line: 0, scope: !3171)
!3250 = !DILocation(line: 251, column: 2, scope: !3171)
!3251 = !DILocation(line: 251, column: 10, scope: !3171)
!3252 = !DILocation(line: 252, column: 2, scope: !3171)
!3253 = !DILocation(line: 252, column: 10, scope: !3171)
!3254 = !DILocation(line: 263, column: 29, scope: !3171)
!3255 = !DILocation(line: 263, column: 21, scope: !3171)
!3256 = !DILocation(line: 268, column: 21, scope: !3171)
!3257 = !DILocation(line: 268, column: 19, scope: !3171)
!3258 = !DILocation(line: 273, column: 6, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 273, column: 6)
!3260 = !DILocation(line: 273, column: 26, scope: !3259)
!3261 = !DILocation(line: 273, column: 6, scope: !3171)
!3262 = !DILocation(line: 297, column: 6, scope: !3171)
!3263 = !DILocation(line: 305, column: 11, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 305, column: 6)
!3265 = !DILocation(line: 305, column: 6, scope: !3171)
!3266 = !DILocation(line: 327, column: 19, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 327, column: 6)
!3268 = !DILocation(line: 327, column: 22, scope: !3267)
!3269 = !DILocation(line: 327, column: 33, scope: !3267)
!3270 = !DILocation(line: 327, column: 50, scope: !3267)
!3271 = !DILocation(line: 327, column: 6, scope: !3171)
!3272 = !DILocation(line: 338, column: 9, scope: !3171)
!3273 = !DILocation(line: 341, column: 2, scope: !3171)
!3274 = !DILocation(line: 472, column: 8, scope: !3220)
!3275 = !DILocation(line: 473, column: 14, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 473, column: 9)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !200, line: 472, column: 18)
!3278 = distinct !DILexicalBlock(scope: !3220, file: !200, line: 472, column: 8)
!3279 = !DILocation(line: 473, column: 9, scope: !3277)
!3280 = !DILocation(line: 479, column: 5, scope: !3277)
!3281 = !DILocation(line: 468, column: 9, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3220, file: !200, line: 468, column: 8)
!3283 = !DILocation(line: 468, column: 8, scope: !3282)
!3284 = !DILocation(line: 468, column: 15, scope: !3282)
!3285 = !DILocation(line: 468, column: 8, scope: !3220)
!3286 = distinct !{!3286, !3287, !3288}
!3287 = !DILocation(line: 343, column: 2, scope: !3171)
!3288 = !DILocation(line: 712, column: 2, scope: !3171)
!3289 = !DILocation(line: 481, column: 4, scope: !3220)
!3290 = !DILocation(line: 484, column: 12, scope: !3219)
!3291 = !DILocation(line: 485, column: 5, scope: !3219)
!3292 = !DILocation(line: 505, column: 5, scope: !3219)
!3293 = !DILocation(line: 518, column: 5, scope: !3219)
!3294 = !DILocation(line: 523, column: 5, scope: !3219)
!3295 = !DILocation(line: 532, column: 9, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3219, file: !200, line: 532, column: 9)
!3297 = !DILocation(line: 532, column: 17, scope: !3296)
!3298 = !DILocation(line: 532, column: 9, scope: !3219)
!3299 = !DILocation(line: 533, column: 10, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !200, line: 533, column: 10)
!3301 = distinct !DILexicalBlock(scope: !3296, file: !200, line: 532, column: 25)
!3302 = !DILocation(line: 533, column: 18, scope: !3300)
!3303 = !DILocation(line: 0, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3218, file: !200, line: 569, column: 9)
!3305 = !DILocation(line: 0, scope: !3218)
!3306 = !DILocation(line: 579, column: 20, scope: !3218)
!3307 = !DILocation(line: 579, column: 11, scope: !3218)
!3308 = !DILocation(line: 580, column: 9, scope: !3218)
!3309 = !DILocation(line: 582, column: 21, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !200, line: 582, column: 10)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !200, line: 580, column: 23)
!3312 = distinct !DILexicalBlock(scope: !3218, file: !200, line: 580, column: 9)
!3313 = !DILocation(line: 582, column: 28, scope: !3310)
!3314 = !DILocation(line: 582, column: 10, scope: !3311)
!3315 = !DILocation(line: 0, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3317, file: !200, line: 587, column: 17)
!3317 = distinct !DILexicalBlock(scope: !3311, file: !200, line: 585, column: 10)
!3318 = !DILocation(line: 593, column: 9, scope: !3218)
!3319 = !DILocation(line: 600, column: 5, scope: !3219)
!3320 = !DILocation(line: 605, column: 18, scope: !3221)
!3321 = !DILocation(line: 605, column: 9, scope: !3221)
!3322 = !DILocation(line: 608, column: 20, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3221, file: !200, line: 608, column: 7)
!3324 = !DILocation(line: 608, column: 23, scope: !3323)
!3325 = !DILocation(line: 608, column: 34, scope: !3323)
!3326 = !DILocation(line: 608, column: 41, scope: !3323)
!3327 = !DILocation(line: 608, column: 7, scope: !3221)
!3328 = !DILocation(line: 613, column: 7, scope: !3221)
!3329 = !DILocation(line: 614, column: 8, scope: !3227)
!3330 = !DILocation(line: 614, column: 4, scope: !3227)
!3331 = !DILocation(line: 256, column: 6, scope: !3171)
!3332 = !DILocation(line: 254, column: 15, scope: !3171)
!3333 = !DILocation(line: 320, column: 7, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 305, column: 20)
!3335 = !DILocation(line: 615, column: 1, scope: !3227)
!3336 = !DILocation(line: 616, column: 8, scope: !3227)
!3337 = !DILocation(line: 617, column: 5, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !200, line: 616, column: 22)
!3339 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 616, column: 8)
!3340 = !DILocation(line: 617, column: 25, scope: !3338)
!3341 = !DILocation(line: 618, column: 4, scope: !3338)
!3342 = !DILocation(line: 620, column: 26, scope: !3227)
!3343 = !DILocation(line: 620, column: 29, scope: !3227)
!3344 = !DILocation(line: 620, column: 17, scope: !3227)
!3345 = !DILocation(line: 620, column: 43, scope: !3227)
!3346 = !DILocation(line: 0, scope: !3227)
!3347 = !DILocation(line: 623, column: 14, scope: !3232)
!3348 = !DILocation(line: 626, column: 26, scope: !3231)
!3349 = !DILocation(line: 626, column: 37, scope: !3231)
!3350 = !DILocation(line: 0, scope: !3231)
!3351 = !DILocation(line: 634, column: 15, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 634, column: 9)
!3353 = !DILocation(line: 635, column: 6, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !200, line: 635, column: 6)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !200, line: 635, column: 6)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !200, line: 635, column: 6)
!3357 = distinct !DILexicalBlock(scope: !3352, file: !200, line: 634, column: 44)
!3358 = !DILocation(line: 639, column: 15, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 639, column: 9)
!3360 = !DILocation(line: 639, column: 9, scope: !3231)
!3361 = !DILocation(line: 640, column: 6, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !200, line: 640, column: 6)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !200, line: 640, column: 6)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !200, line: 640, column: 6)
!3365 = distinct !DILexicalBlock(scope: !3359, file: !200, line: 639, column: 43)
!3366 = !DILocation(line: 644, column: 9, scope: !3231)
!3367 = !DILocation(line: 649, column: 27, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !200, line: 644, column: 23)
!3369 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 644, column: 9)
!3370 = !DILocation(line: 649, column: 6, scope: !3368)
!3371 = !DILocation(line: 649, column: 25, scope: !3368)
!3372 = !DILocation(line: 650, column: 27, scope: !3368)
!3373 = !DILocation(line: 650, column: 6, scope: !3368)
!3374 = !DILocation(line: 650, column: 25, scope: !3368)
!3375 = !DILocation(line: 651, column: 10, scope: !3368)
!3376 = !DILocation(line: 653, column: 26, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !200, line: 651, column: 17)
!3378 = distinct !DILexicalBlock(scope: !3368, file: !200, line: 651, column: 10)
!3379 = !DILocation(line: 654, column: 15, scope: !3377)
!3380 = !DILocation(line: 655, column: 6, scope: !3377)
!3381 = !DILocation(line: 656, column: 15, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3378, file: !200, line: 655, column: 13)
!3383 = !DILocation(line: 658, column: 16, scope: !3369)
!3384 = !DILocation(line: 663, column: 10, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !200, line: 658, column: 23)
!3386 = distinct !DILexicalBlock(scope: !3369, file: !200, line: 658, column: 16)
!3387 = !DILocation(line: 664, column: 5, scope: !3385)
!3388 = !DILocation(line: 664, column: 16, scope: !3386)
!3389 = !DILocation(line: 669, column: 10, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !200, line: 664, column: 28)
!3391 = distinct !DILexicalBlock(scope: !3386, file: !200, line: 664, column: 16)
!3392 = !DILocation(line: 670, column: 5, scope: !3390)
!3393 = !DILocation(line: 675, column: 13, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3391, file: !200, line: 670, column: 12)
!3395 = !DILocation(line: 675, column: 27, scope: !3394)
!3396 = !DILocation(line: 675, column: 10, scope: !3394)
!3397 = !DILocation(line: 678, column: 10, scope: !3231)
!3398 = !DILocation(line: 680, column: 8, scope: !3227)
!3399 = !DILocation(line: 683, column: 14, scope: !3228)
!3400 = !DILocation(line: 684, column: 12, scope: !3234)
!3401 = !DILocation(line: 0, scope: !3234)
!3402 = !DILocation(line: 686, column: 8, scope: !3234)
!3403 = !DILocation(line: 687, column: 5, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !200, line: 686, column: 22)
!3405 = distinct !DILexicalBlock(scope: !3234, file: !200, line: 686, column: 8)
!3406 = !DILocation(line: 687, column: 17, scope: !3404)
!3407 = !DILocation(line: 688, column: 4, scope: !3404)
!3408 = !DILocation(line: 698, column: 18, scope: !3240)
!3409 = !DILocation(line: 0, scope: !3240)
!3410 = !DILocation(line: 700, column: 8, scope: !3240)
!3411 = !DILocation(line: 704, column: 6, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !200, line: 703, column: 12)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !200, line: 701, column: 9)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !200, line: 700, column: 22)
!3415 = distinct !DILexicalBlock(scope: !3240, file: !200, line: 700, column: 8)
!3416 = !DILocation(line: 704, column: 24, scope: !3412)
!3417 = !DILocation(line: 706, column: 4, scope: !3414)
!3418 = !DILocation(line: 709, column: 4, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !200, line: 709, column: 4)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !200, line: 709, column: 4)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !200, line: 709, column: 4)
!3422 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 708, column: 10)
!3423 = !DILocation(line: 0, scope: !3235)
!3424 = !DILocation(line: 0, scope: !3221)
!3425 = !DILocation(line: 720, column: 6, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 720, column: 6)
!3427 = !DILocation(line: 720, column: 17, scope: !3426)
!3428 = !DILocation(line: 720, column: 31, scope: !3426)
!3429 = !DILocation(line: 720, column: 6, scope: !3171)
!3430 = !DILocation(line: 721, column: 3, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !200, line: 721, column: 3)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !200, line: 721, column: 3)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !200, line: 721, column: 3)
!3434 = distinct !DILexicalBlock(scope: !3426, file: !200, line: 720, column: 38)
!3435 = !DILocation(line: 729, column: 6, scope: !3171)
!3436 = !DILocation(line: 730, column: 21, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !200, line: 729, column: 20)
!3438 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 729, column: 6)
!3439 = !DILocation(line: 730, column: 27, scope: !3437)
!3440 = !DILocation(line: 730, column: 3, scope: !3437)
!3441 = !DILocation(line: 737, column: 22, scope: !3171)
!3442 = !DILocation(line: 737, column: 20, scope: !3171)
!3443 = !DILocation(line: 0, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 739, column: 6)
!3445 = !DILocation(line: 745, column: 17, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3444, file: !200, line: 743, column: 9)
!3447 = !DILocation(line: 745, column: 25, scope: !3446)
!3448 = !DILocation(line: 746, column: 17, scope: !3446)
!3449 = !DILocation(line: 746, column: 28, scope: !3446)
!3450 = !DILocation(line: 749, column: 29, scope: !3171)
!3451 = !DILocation(line: 749, column: 16, scope: !3171)
!3452 = !DILocation(line: 749, column: 27, scope: !3171)
!3453 = !DILocation(line: 756, column: 6, scope: !3247)
!3454 = !DILocation(line: 756, column: 6, scope: !3171)
!3455 = !DILocation(line: 757, column: 3, scope: !3245)
!3456 = !DILocation(line: 758, column: 10, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3243, file: !200, line: 758, column: 8)
!3458 = !DILocation(line: 758, column: 25, scope: !3457)
!3459 = !DILocation(line: 758, column: 8, scope: !3243)
!3460 = !DILocation(line: 0, scope: !3243)
!3461 = !DILocation(line: 765, column: 8, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3243, file: !200, line: 765, column: 8)
!3463 = !DILocation(line: 765, column: 19, scope: !3462)
!3464 = !DILocation(line: 765, column: 23, scope: !3462)
!3465 = !DILocation(line: 765, column: 8, scope: !3243)
!3466 = !DILocation(line: 762, column: 33, scope: !3243)
!3467 = !DILocation(line: 769, column: 8, scope: !3243)
!3468 = !DILocation(line: 769, column: 11, scope: !3243)
!3469 = !DILocation(line: 757, column: 27, scope: !3244)
!3470 = !DILocation(line: 757, column: 17, scope: !3244)
!3471 = distinct !{!3471, !3455, !3472}
!3472 = !DILocation(line: 770, column: 3, scope: !3245)
!3473 = !DILocation(line: 774, column: 16, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !200, line: 774, column: 2)
!3475 = distinct !DILexicalBlock(scope: !3171, file: !200, line: 774, column: 2)
!3476 = !DILocation(line: 774, column: 2, scope: !3475)
!3477 = !DILocation(line: 776, column: 16, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !200, line: 776, column: 7)
!3479 = distinct !DILexicalBlock(scope: !3474, file: !200, line: 774, column: 30)
!3480 = !DILocation(line: 776, column: 19, scope: !3478)
!3481 = !DILocation(line: 776, column: 34, scope: !3478)
!3482 = !DILocation(line: 776, column: 7, scope: !3479)
!3483 = !DILocation(line: 780, column: 7, scope: !3479)
!3484 = !DILocation(line: 782, column: 13, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !200, line: 780, column: 19)
!3486 = distinct !DILexicalBlock(scope: !3479, file: !200, line: 780, column: 7)
!3487 = !DILocation(line: 782, column: 8, scope: !3485)
!3488 = !DILocation(line: 782, column: 11, scope: !3485)
!3489 = !DILocation(line: 783, column: 3, scope: !3485)
!3490 = !DILocation(line: 785, column: 26, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3486, file: !200, line: 783, column: 10)
!3492 = !DILocation(line: 785, column: 41, scope: !3491)
!3493 = !DILocation(line: 785, column: 24, scope: !3491)
!3494 = !DILocation(line: 785, column: 8, scope: !3491)
!3495 = !DILocation(line: 787, column: 52, scope: !3491)
!3496 = !DILocation(line: 789, column: 11, scope: !3491)
!3497 = !DILocation(line: 789, column: 21, scope: !3491)
!3498 = !DILocation(line: 0, scope: !3486)
!3499 = !DILocation(line: 793, column: 7, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3479, file: !200, line: 793, column: 7)
!3501 = !DILocation(line: 793, column: 18, scope: !3500)
!3502 = !DILocation(line: 793, column: 22, scope: !3500)
!3503 = !DILocation(line: 793, column: 29, scope: !3500)
!3504 = !DILocation(line: 793, column: 7, scope: !3479)
!3505 = !DILocation(line: 797, column: 12, scope: !3479)
!3506 = !DILocation(line: 797, column: 7, scope: !3479)
!3507 = !DILocation(line: 797, column: 10, scope: !3479)
!3508 = !DILocation(line: 799, column: 3, scope: !3479)
!3509 = !DILocation(line: 800, column: 7, scope: !3479)
!3510 = !DILocation(line: 801, column: 2, scope: !3479)
!3511 = !DILocation(line: 338, column: 4, scope: !3171)
!3512 = !DILocation(line: 774, column: 26, scope: !3474)
!3513 = distinct !{!3513, !3476, !3514}
!3514 = !DILocation(line: 801, column: 2, scope: !3475)
!3515 = !DILocation(line: 808, column: 9, scope: !3171)
!3516 = !DILocation(line: 808, column: 2, scope: !3171)
!3517 = !DILocation(line: 813, column: 1, scope: !3171)
!3518 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3519, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3521)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!145, !118}
!3521 = !{!3522}
!3522 = !DILocalVariable(name: "addr", arg: 1, scope: !3518, file: !200, line: 33, type: !118)
!3523 = !DILocation(line: 0, scope: !3518)
!3524 = !DILocation(line: 41, column: 9, scope: !3518)
!3525 = !DILocation(line: 41, column: 2, scope: !3518)
!3526 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3527, file: !3527, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3528)
!3527 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3528 = !{!3529}
!3529 = !DILocalVariable(name: "addr", arg: 1, scope: !3526, file: !3527, line: 24, type: !13)
!3530 = !DILocation(line: 0, scope: !3526)
!3531 = !DILocation(line: 49, column: 30, scope: !3526)
!3532 = !DILocation(line: 49, column: 57, scope: !3526)
!3533 = !DILocation(line: 49, column: 2, scope: !3526)
!3534 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3535, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3537)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!107, !106, !185, !152, !118, null}
!3537 = !{!3538, !3539, !3540, !3541, !3542, !3543}
!3538 = !DILocalVariable(name: "packaged", arg: 1, scope: !3534, file: !200, line: 815, type: !106)
!3539 = !DILocalVariable(name: "len", arg: 2, scope: !3534, file: !200, line: 815, type: !185)
!3540 = !DILocalVariable(name: "flags", arg: 3, scope: !3534, file: !200, line: 815, type: !152)
!3541 = !DILocalVariable(name: "format", arg: 4, scope: !3534, file: !200, line: 816, type: !118)
!3542 = !DILocalVariable(name: "ap", scope: !3534, file: !200, line: 818, type: !3174)
!3543 = !DILocalVariable(name: "ret", scope: !3534, file: !200, line: 819, type: !107)
!3544 = !DILocation(line: 0, scope: !3534)
!3545 = !DILocation(line: 818, column: 2, scope: !3534)
!3546 = !DILocation(line: 818, column: 10, scope: !3534)
!3547 = !DILocation(line: 821, column: 2, scope: !3534)
!3548 = !DILocation(line: 822, column: 8, scope: !3534)
!3549 = !DILocation(line: 823, column: 2, scope: !3534)
!3550 = !DILocation(line: 825, column: 1, scope: !3534)
!3551 = !DILocation(line: 824, column: 2, scope: !3534)
!3552 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3553, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3563)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!107, !3555, !3559, !106, !106}
!3555 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3207, line: 297, baseType: !3556)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 32)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!107, null}
!3559 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3207, line: 328, baseType: !3560)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 32)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!107, !3555, !106, !118, !3174}
!3563 = !{!3564, !3565, !3566, !3567, !3568, !3569, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582}
!3564 = !DILocalVariable(name: "out", arg: 1, scope: !3552, file: !200, line: 827, type: !3555)
!3565 = !DILocalVariable(name: "formatter", arg: 2, scope: !3552, file: !200, line: 828, type: !3559)
!3566 = !DILocalVariable(name: "ctx", arg: 3, scope: !3552, file: !200, line: 829, type: !106)
!3567 = !DILocalVariable(name: "packaged", arg: 4, scope: !3552, file: !200, line: 829, type: !106)
!3568 = !DILocalVariable(name: "buf", scope: !3552, file: !200, line: 831, type: !194)
!3569 = !DILocalVariable(name: "hdr", scope: !3552, file: !200, line: 832, type: !3570)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 32)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3207, line: 96, size: 64, elements: !3572)
!3572 = !{!3573, !3574}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3571, file: !3207, line: 98, baseType: !3206, size: 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3571, file: !3207, line: 101, baseType: !193, size: 32, offset: 32)
!3575 = !DILocalVariable(name: "s", scope: !3552, file: !200, line: 833, type: !193)
!3576 = !DILocalVariable(name: "ps", scope: !3552, file: !200, line: 833, type: !192)
!3577 = !DILocalVariable(name: "i", scope: !3552, file: !200, line: 834, type: !32)
!3578 = !DILocalVariable(name: "args_size", scope: !3552, file: !200, line: 834, type: !32)
!3579 = !DILocalVariable(name: "s_nbr", scope: !3552, file: !200, line: 834, type: !32)
!3580 = !DILocalVariable(name: "ros_nbr", scope: !3552, file: !200, line: 834, type: !32)
!3581 = !DILocalVariable(name: "rws_nbr", scope: !3552, file: !200, line: 834, type: !32)
!3582 = !DILocalVariable(name: "s_idx", scope: !3552, file: !200, line: 834, type: !32)
!3583 = !DILocation(line: 0, scope: !3552)
!3584 = !DILocation(line: 836, column: 10, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3552, file: !200, line: 836, column: 6)
!3586 = !DILocation(line: 836, column: 6, scope: !3552)
!3587 = !DILocation(line: 842, column: 28, scope: !3552)
!3588 = !DILocation(line: 842, column: 14, scope: !3552)
!3589 = !DILocation(line: 852, column: 16, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !200, line: 852, column: 2)
!3591 = distinct !DILexicalBlock(scope: !3552, file: !200, line: 852, column: 2)
!3592 = !DILocation(line: 852, column: 2, scope: !3591)
!3593 = !DILocation(line: 841, column: 28, scope: !3552)
!3594 = !DILocation(line: 841, column: 14, scope: !3552)
!3595 = !DILocation(line: 841, column: 32, scope: !3552)
!3596 = !DILocation(line: 847, column: 19, scope: !3552)
!3597 = !DILocation(line: 843, column: 28, scope: !3552)
!3598 = !DILocation(line: 843, column: 14, scope: !3552)
!3599 = !DILocation(line: 847, column: 31, scope: !3552)
!3600 = !DILocation(line: 844, column: 28, scope: !3552)
!3601 = !DILocation(line: 844, column: 14, scope: !3552)
!3602 = !DILocation(line: 847, column: 45, scope: !3552)
!3603 = !DILocation(line: 847, column: 41, scope: !3552)
!3604 = !DILocation(line: 854, column: 24, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3590, file: !200, line: 852, column: 30)
!3606 = !DILocation(line: 854, column: 11, scope: !3605)
!3607 = !DILocation(line: 855, column: 30, scope: !3605)
!3608 = !DILocation(line: 855, column: 22, scope: !3605)
!3609 = !DILocation(line: 855, column: 8, scope: !3605)
!3610 = !DILocation(line: 857, column: 7, scope: !3605)
!3611 = !DILocation(line: 859, column: 8, scope: !3605)
!3612 = !DILocation(line: 859, column: 18, scope: !3605)
!3613 = !DILocation(line: 859, column: 5, scope: !3605)
!3614 = !DILocation(line: 852, column: 26, scope: !3590)
!3615 = distinct !{!3615, !3592, !3616}
!3616 = !DILocation(line: 860, column: 2, scope: !3591)
!3617 = !DILocation(line: 863, column: 6, scope: !3552)
!3618 = !DILocation(line: 866, column: 56, scope: !3552)
!3619 = !DILocation(line: 866, column: 9, scope: !3552)
!3620 = !DILocation(line: 866, column: 2, scope: !3552)
!3621 = !DILocation(line: 867, column: 1, scope: !3552)
!3622 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3623, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3625)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{!107, !3555, !3559, !106, !118, !106}
!3625 = !{!3626, !3627, !3628, !3629, !3630, !3631}
!3626 = !DILocalVariable(name: "out", arg: 1, scope: !3622, file: !200, line: 179, type: !3555)
!3627 = !DILocalVariable(name: "formatter", arg: 2, scope: !3622, file: !200, line: 180, type: !3559)
!3628 = !DILocalVariable(name: "ctx", arg: 3, scope: !3622, file: !200, line: 181, type: !106)
!3629 = !DILocalVariable(name: "fmt", arg: 4, scope: !3622, file: !200, line: 182, type: !118)
!3630 = !DILocalVariable(name: "buf", arg: 5, scope: !3622, file: !200, line: 182, type: !106)
!3631 = !DILocalVariable(name: "u", scope: !3622, file: !200, line: 187, type: !3632)
!3632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3622, file: !200, line: 184, size: 32, elements: !3633)
!3633 = !{!3634, !3635}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3632, file: !200, line: 185, baseType: !3174, size: 32)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3632, file: !200, line: 186, baseType: !106, size: 32)
!3636 = !DILocation(line: 0, scope: !3622)
!3637 = !DILocation(line: 191, column: 9, scope: !3622)
!3638 = !DILocation(line: 191, column: 2, scope: !3622)
!3639 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3640, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3642)
!3640 = !DISubroutineType(types: !3641)
!3641 = !{!145, !118, !107}
!3642 = !{!3643, !3644, !3645, !3646, !3647}
!3643 = !DILocalVariable(name: "fmt", arg: 1, scope: !3639, file: !200, line: 881, type: !118)
!3644 = !DILocalVariable(name: "n", arg: 2, scope: !3639, file: !200, line: 881, type: !107)
!3645 = !DILocalVariable(name: "c", scope: !3639, file: !200, line: 883, type: !120)
!3646 = !DILocalVariable(name: "mod", scope: !3639, file: !200, line: 884, type: !145)
!3647 = !DILocalVariable(name: "cnt", scope: !3639, file: !200, line: 885, type: !107)
!3648 = !DILocation(line: 0, scope: !3639)
!3649 = !DILocation(line: 887, column: 14, scope: !3639)
!3650 = !DILocation(line: 887, column: 22, scope: !3639)
!3651 = !DILocation(line: 887, column: 2, scope: !3639)
!3652 = !DILocation(line: 887, column: 18, scope: !3639)
!3653 = !DILocation(line: 888, column: 7, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3639, file: !200, line: 887, column: 31)
!3655 = !DILocation(line: 889, column: 12, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !200, line: 889, column: 8)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !200, line: 888, column: 12)
!3658 = distinct !DILexicalBlock(scope: !3654, file: !200, line: 888, column: 7)
!3659 = !DILocation(line: 889, column: 8, scope: !3657)
!3660 = !DILocation(line: 890, column: 11, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !200, line: 890, column: 9)
!3662 = distinct !DILexicalBlock(scope: !3656, file: !200, line: 889, column: 18)
!3663 = !DILocation(line: 890, column: 9, scope: !3662)
!3664 = !DILocation(line: 892, column: 16, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3661, file: !200, line: 892, column: 16)
!3666 = !DILocation(line: 892, column: 16, scope: !3661)
!3667 = !DILocation(line: 895, column: 15, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3656, file: !200, line: 895, column: 15)
!3669 = !DILocation(line: 895, column: 15, scope: !3656)
!3670 = !DILocation(line: 900, column: 9, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3654, file: !200, line: 900, column: 7)
!3672 = !DILocation(line: 900, column: 7, scope: !3654)
!3673 = distinct !{!3673, !3651, !3674}
!3674 = !DILocation(line: 903, column: 2, scope: !3639)
!3675 = !DILocation(line: 906, column: 1, scope: !3639)
!3676 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3677, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3679)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!145, !120}
!3679 = !{!3680}
!3680 = !DILocalVariable(name: "c", arg: 1, scope: !3676, file: !200, line: 873, type: !120)
!3681 = !DILocation(line: 0, scope: !3676)
!3682 = !DILocation(line: 875, column: 19, scope: !3676)
!3683 = !DILocation(line: 875, column: 2, scope: !3676)
!3684 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3685, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3691)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{!107, !106, !185, !3687, !106, !152, !2793, !185}
!3687 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3207, line: 308, baseType: !3688)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 32)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!107, !13, !185, !106}
!3691 = !{!3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3709, !3710, !3711, !3712, !3713, !3719, !3722, !3723, !3724, !3726, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3742, !3745, !3746, !3747, !3748, !3749, !3750, !3752, !3755, !3756, !3757}
!3692 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3684, file: !200, line: 908, type: !106)
!3693 = !DILocalVariable(name: "in_len", arg: 2, scope: !3684, file: !200, line: 909, type: !185)
!3694 = !DILocalVariable(name: "cb", arg: 3, scope: !3684, file: !200, line: 910, type: !3687)
!3695 = !DILocalVariable(name: "ctx", arg: 4, scope: !3684, file: !200, line: 911, type: !106)
!3696 = !DILocalVariable(name: "flags", arg: 5, scope: !3684, file: !200, line: 912, type: !152)
!3697 = !DILocalVariable(name: "strl", arg: 6, scope: !3684, file: !200, line: 913, type: !2793)
!3698 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3684, file: !200, line: 914, type: !185)
!3699 = !DILocalVariable(name: "buf", scope: !3684, file: !200, line: 918, type: !194)
!3700 = !DILocalVariable(name: "buf32", scope: !3684, file: !200, line: 919, type: !1075)
!3701 = !DILocalVariable(name: "args_size", scope: !3684, file: !200, line: 920, type: !32)
!3702 = !DILocalVariable(name: "ros_nbr", scope: !3684, file: !200, line: 920, type: !32)
!3703 = !DILocalVariable(name: "rws_nbr", scope: !3684, file: !200, line: 920, type: !32)
!3704 = !DILocalVariable(name: "fmt_present", scope: !3684, file: !200, line: 921, type: !145)
!3705 = !DILocalVariable(name: "rw_cpy", scope: !3684, file: !200, line: 922, type: !145)
!3706 = !DILocalVariable(name: "ro_cpy", scope: !3684, file: !200, line: 923, type: !145)
!3707 = !DILocalVariable(name: "in_desc", scope: !3684, file: !200, line: 924, type: !3708)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3709 = !DILocalVariable(name: "out_len", scope: !3684, file: !200, line: 960, type: !107)
!3710 = !DILocalVariable(name: "fmt", scope: !3684, file: !200, line: 965, type: !118)
!3711 = !DILocalVariable(name: "str_pos", scope: !3684, file: !200, line: 966, type: !194)
!3712 = !DILocalVariable(name: "strl_cnt", scope: !3684, file: !200, line: 967, type: !185)
!3713 = !DILocalVariable(name: "i", scope: !3714, file: !200, line: 973, type: !107)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !200, line: 973, column: 4)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !200, line: 972, column: 15)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !200, line: 972, column: 7)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 970, column: 18)
!3718 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 970, column: 6)
!3719 = !DILocalVariable(name: "str", scope: !3720, file: !200, line: 974, type: !118)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 973, column: 38)
!3721 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 973, column: 4)
!3722 = !DILocalVariable(name: "len", scope: !3720, file: !200, line: 975, type: !107)
!3723 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3717, file: !200, line: 990, type: !145)
!3724 = !DILocalVariable(name: "i", scope: !3725, file: !200, line: 995, type: !107)
!3725 = distinct !DILexicalBlock(scope: !3717, file: !200, line: 995, column: 3)
!3726 = !DILocalVariable(name: "arg_idx", scope: !3727, file: !200, line: 996, type: !195)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !200, line: 995, column: 37)
!3728 = distinct !DILexicalBlock(scope: !3725, file: !200, line: 995, column: 3)
!3729 = !DILocalVariable(name: "arg_pos", scope: !3727, file: !200, line: 997, type: !195)
!3730 = !DILocalVariable(name: "str", scope: !3727, file: !200, line: 998, type: !118)
!3731 = !DILocalVariable(name: "is_ro", scope: !3727, file: !200, line: 999, type: !145)
!3732 = !DILocalVariable(name: "len", scope: !3727, file: !200, line: 1000, type: !107)
!3733 = !DILocalVariable(name: "out_desc", scope: !3684, file: !200, line: 1038, type: !3210)
!3734 = !DILocalVariable(name: "cpy_str_pos", scope: !3684, file: !200, line: 1040, type: !3192)
!3735 = !DILocalVariable(name: "keep_str_pos", scope: !3684, file: !200, line: 1042, type: !3192)
!3736 = !DILocalVariable(name: "scpy_cnt", scope: !3684, file: !200, line: 1043, type: !195)
!3737 = !DILocalVariable(name: "keep_cnt", scope: !3684, file: !200, line: 1044, type: !195)
!3738 = !DILocalVariable(name: "dst", scope: !3684, file: !200, line: 1045, type: !194)
!3739 = !DILocalVariable(name: "rv", scope: !3684, file: !200, line: 1046, type: !107)
!3740 = !DILocalVariable(name: "i", scope: !3741, file: !200, line: 1074, type: !107)
!3741 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 1074, column: 2)
!3742 = !DILocalVariable(name: "arg_idx", scope: !3743, file: !200, line: 1075, type: !195)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !200, line: 1074, column: 36)
!3744 = distinct !DILexicalBlock(scope: !3741, file: !200, line: 1074, column: 2)
!3745 = !DILocalVariable(name: "arg_pos", scope: !3743, file: !200, line: 1076, type: !195)
!3746 = !DILocalVariable(name: "str", scope: !3743, file: !200, line: 1077, type: !118)
!3747 = !DILocalVariable(name: "is_ro", scope: !3743, file: !200, line: 1078, type: !145)
!3748 = !DILocalVariable(name: "in_desc_backup", scope: !3684, file: !200, line: 1114, type: !3210)
!3749 = !DILocalVariable(name: "strs_len", scope: !3684, file: !200, line: 1134, type: !185)
!3750 = !DILocalVariable(name: "i", scope: !3751, file: !200, line: 1143, type: !107)
!3751 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 1143, column: 2)
!3752 = !DILocalVariable(name: "loc", scope: !3753, file: !200, line: 1144, type: !195)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 1143, column: 37)
!3754 = distinct !DILexicalBlock(scope: !3751, file: !200, line: 1143, column: 2)
!3755 = !DILocalVariable(name: "str", scope: !3753, file: !200, line: 1145, type: !118)
!3756 = !DILocalVariable(name: "str_len", scope: !3753, file: !200, line: 1146, type: !197)
!3757 = !DILabel(scope: !3758, name: "calculate_string_length", file: !200, line: 1021)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !200, line: 1020, column: 56)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !200, line: 1020, column: 15)
!3760 = distinct !DILexicalBlock(scope: !3727, file: !200, line: 1014, column: 8)
!3761 = !DILocation(line: 0, scope: !3684)
!3762 = !DILocation(line: 916, column: 2, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !200, line: 916, column: 2)
!3764 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 916, column: 2)
!3765 = !DILocation(line: 916, column: 2, scope: !3764)
!3766 = !DILocation(line: 916, column: 2, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3763, file: !200, line: 916, column: 2)
!3768 = !DILocation(line: 919, column: 20, scope: !3684)
!3769 = !DILocation(line: 921, column: 27, scope: !3684)
!3770 = !DILocation(line: 921, column: 21, scope: !3684)
!3771 = !DILocation(line: 926, column: 18, scope: !3684)
!3772 = !DILocation(line: 926, column: 11, scope: !3684)
!3773 = !DILocation(line: 926, column: 34, scope: !3684)
!3774 = !DILocation(line: 931, column: 21, scope: !3684)
!3775 = !DILocation(line: 931, column: 12, scope: !3684)
!3776 = !DILocation(line: 932, column: 11, scope: !3684)
!3777 = !DILocation(line: 932, column: 19, scope: !3684)
!3778 = !DILocation(line: 938, column: 21, scope: !3684)
!3779 = !DILocation(line: 938, column: 12, scope: !3684)
!3780 = !DILocation(line: 939, column: 19, scope: !3684)
!3781 = !DILocation(line: 939, column: 23, scope: !3684)
!3782 = !DILocation(line: 946, column: 14, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 946, column: 6)
!3784 = !DILocation(line: 947, column: 7, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !200, line: 947, column: 7)
!3786 = distinct !DILexicalBlock(scope: !3783, file: !200, line: 946, column: 26)
!3787 = !DILocation(line: 947, column: 7, scope: !3786)
!3788 = !DILocation(line: 948, column: 4, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3785, file: !200, line: 947, column: 11)
!3790 = !DILocation(line: 949, column: 3, scope: !3789)
!3791 = !DILocation(line: 958, column: 23, scope: !3684)
!3792 = !DILocation(line: 958, column: 14, scope: !3684)
!3793 = !DILocation(line: 958, column: 27, scope: !3684)
!3794 = !DILocation(line: 965, column: 41, scope: !3684)
!3795 = !DILocation(line: 965, column: 20, scope: !3684)
!3796 = !DILocation(line: 966, column: 22, scope: !3684)
!3797 = !DILocation(line: 970, column: 9, scope: !3718)
!3798 = !DILocation(line: 970, column: 6, scope: !3684)
!3799 = !DILocation(line: 972, column: 7, scope: !3717)
!3800 = !DILocation(line: 0, scope: !3714)
!3801 = !DILocation(line: 973, column: 4, scope: !3714)
!3802 = !DILocation(line: 974, column: 46, scope: !3720)
!3803 = !DILocation(line: 974, column: 40, scope: !3720)
!3804 = !DILocation(line: 974, column: 23, scope: !3720)
!3805 = !DILocation(line: 0, scope: !3720)
!3806 = !DILocation(line: 975, column: 15, scope: !3720)
!3807 = !DILocation(line: 978, column: 14, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3720, file: !200, line: 978, column: 9)
!3809 = !DILocation(line: 979, column: 25, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3808, file: !200, line: 978, column: 38)
!3811 = !DILocation(line: 979, column: 19, scope: !3810)
!3812 = !DILocation(line: 979, column: 6, scope: !3810)
!3813 = !DILocation(line: 979, column: 23, scope: !3810)
!3814 = !DILocation(line: 980, column: 5, scope: !3810)
!3815 = !DILocation(line: 981, column: 13, scope: !3720)
!3816 = !DILocation(line: 982, column: 12, scope: !3720)
!3817 = !DILocation(line: 973, column: 34, scope: !3721)
!3818 = !DILocation(line: 973, column: 22, scope: !3721)
!3819 = distinct !{!3819, !3801, !3820}
!3820 = !DILocation(line: 983, column: 4, scope: !3714)
!3821 = !DILocation(line: 985, column: 16, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !200, line: 985, column: 8)
!3823 = distinct !DILexicalBlock(scope: !3716, file: !200, line: 984, column: 10)
!3824 = !DILocation(line: 967, column: 9, scope: !3684)
!3825 = !DILocation(line: 971, column: 11, scope: !3717)
!3826 = !DILocation(line: 0, scope: !3717)
!3827 = !DILocation(line: 0, scope: !3725)
!3828 = !DILocation(line: 995, column: 21, scope: !3728)
!3829 = !DILocation(line: 995, column: 3, scope: !3725)
!3830 = !DILocation(line: 990, column: 34, scope: !3717)
!3831 = !DILocation(line: 990, column: 26, scope: !3717)
!3832 = !DILocation(line: 996, column: 30, scope: !3727)
!3833 = !DILocation(line: 0, scope: !3727)
!3834 = !DILocation(line: 997, column: 30, scope: !3727)
!3835 = !DILocation(line: 997, column: 22, scope: !3727)
!3836 = !DILocation(line: 998, column: 39, scope: !3727)
!3837 = !DILocation(line: 998, column: 22, scope: !3727)
!3838 = !DILocation(line: 999, column: 17, scope: !3727)
!3839 = !DILocation(line: 1002, column: 20, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3727, file: !200, line: 1002, column: 8)
!3841 = !DILocation(line: 996, column: 22, scope: !3727)
!3842 = !DILocation(line: 1002, column: 35, scope: !3840)
!3843 = !DILocation(line: 1002, column: 23, scope: !3840)
!3844 = !DILocation(line: 1002, column: 8, scope: !3727)
!3845 = !DILocation(line: 1003, column: 5, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !200, line: 1003, column: 5)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !200, line: 1003, column: 5)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !200, line: 1003, column: 5)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !200, line: 1003, column: 5)
!3850 = distinct !DILexicalBlock(scope: !3840, file: !200, line: 1002, column: 45)
!3851 = !DILocation(line: 1010, column: 13, scope: !3850)
!3852 = !DILocation(line: 1011, column: 5, scope: !3850)
!3853 = !DILocation(line: 1014, column: 8, scope: !3727)
!3854 = !DILocation(line: 1015, column: 9, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3760, file: !200, line: 1014, column: 15)
!3856 = !DILocation(line: 1018, column: 14, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !200, line: 1017, column: 12)
!3858 = distinct !DILexicalBlock(scope: !3855, file: !200, line: 1015, column: 9)
!3859 = !DILocation(line: 1020, column: 4, scope: !3855)
!3860 = !DILocation(line: 1020, column: 15, scope: !3760)
!3861 = !DILocation(line: 1021, column: 1, scope: !3758)
!3862 = !DILocation(line: 1022, column: 11, scope: !3758)
!3863 = !DILocation(line: 1025, column: 14, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3758, file: !200, line: 1025, column: 9)
!3865 = !DILocation(line: 1026, column: 25, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3864, file: !200, line: 1025, column: 38)
!3867 = !DILocation(line: 1026, column: 19, scope: !3866)
!3868 = !DILocation(line: 1026, column: 6, scope: !3866)
!3869 = !DILocation(line: 1026, column: 23, scope: !3866)
!3870 = !DILocation(line: 1027, column: 5, scope: !3866)
!3871 = !DILocation(line: 1031, column: 21, scope: !3758)
!3872 = !DILocation(line: 1031, column: 13, scope: !3758)
!3873 = !DILocation(line: 1032, column: 4, scope: !3758)
!3874 = !DILocation(line: 995, column: 33, scope: !3728)
!3875 = distinct !{!3875, !3829, !3876}
!3876 = !DILocation(line: 1033, column: 3, scope: !3725)
!3877 = !DILocation(line: 1040, column: 10, scope: !3684)
!3878 = !DILocation(line: 1042, column: 10, scope: !3684)
!3879 = !DILocation(line: 1052, column: 6, scope: !3684)
!3880 = !DILocation(line: 1055, column: 9, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !200, line: 1052, column: 14)
!3882 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 1052, column: 6)
!3883 = !DILocation(line: 1056, column: 2, scope: !3881)
!3884 = !DILocation(line: 1056, column: 21, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3882, file: !200, line: 1056, column: 13)
!3886 = !DILocation(line: 1066, column: 3, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !200, line: 1065, column: 11)
!3888 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 1065, column: 6)
!3889 = !DILocation(line: 1067, column: 2, scope: !3887)
!3890 = !DILocation(line: 1068, column: 10, scope: !3684)
!3891 = !DILocation(line: 0, scope: !3741)
!3892 = !DILocation(line: 1074, column: 20, scope: !3744)
!3893 = !DILocation(line: 1074, column: 2, scope: !3741)
!3894 = !DILocation(line: 1110, column: 24, scope: !3684)
!3895 = !DILocation(line: 1053, column: 12, scope: !3881)
!3896 = !DILocation(line: 1054, column: 12, scope: !3881)
!3897 = !DILocation(line: 1108, column: 30, scope: !3684)
!3898 = !DILocation(line: 1108, column: 40, scope: !3684)
!3899 = !DILocation(line: 1108, column: 38, scope: !3684)
!3900 = !DILocation(line: 1109, column: 31, scope: !3684)
!3901 = !DILocation(line: 1109, column: 24, scope: !3684)
!3902 = !DILocation(line: 1110, column: 31, scope: !3684)
!3903 = !DILocation(line: 1114, column: 31, scope: !3684)
!3904 = !DILocation(line: 1114, column: 48, scope: !3684)
!3905 = !DILocation(line: 1115, column: 13, scope: !3684)
!3906 = !DILocation(line: 1118, column: 7, scope: !3684)
!3907 = !DILocation(line: 1119, column: 9, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 1119, column: 6)
!3909 = !DILocation(line: 1119, column: 6, scope: !3684)
!3910 = !DILocation(line: 1075, column: 29, scope: !3743)
!3911 = !DILocation(line: 1075, column: 21, scope: !3743)
!3912 = !DILocation(line: 0, scope: !3743)
!3913 = !DILocation(line: 1076, column: 29, scope: !3743)
!3914 = !DILocation(line: 1076, column: 21, scope: !3743)
!3915 = !DILocation(line: 1077, column: 38, scope: !3743)
!3916 = !DILocation(line: 1077, column: 21, scope: !3743)
!3917 = !DILocation(line: 1078, column: 16, scope: !3743)
!3918 = !DILocation(line: 1080, column: 19, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1080, column: 7)
!3920 = !DILocation(line: 1080, column: 34, scope: !3919)
!3921 = !DILocation(line: 1080, column: 22, scope: !3919)
!3922 = !DILocation(line: 1080, column: 7, scope: !3743)
!3923 = !DILocation(line: 1084, column: 7, scope: !3743)
!3924 = !DILocation(line: 1085, column: 8, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !200, line: 1084, column: 14)
!3926 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1084, column: 7)
!3927 = !DILocation(line: 1086, column: 5, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !200, line: 1086, column: 5)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !200, line: 1086, column: 5)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !200, line: 1085, column: 49)
!3931 = distinct !DILexicalBlock(scope: !3925, file: !200, line: 1085, column: 8)
!3932 = !DILocation(line: 1086, column: 5, scope: !3929)
!3933 = !DILocation(line: 1086, column: 5, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3928, file: !200, line: 1086, column: 5)
!3935 = !DILocation(line: 1087, column: 25, scope: !3930)
!3936 = !DILocation(line: 1087, column: 5, scope: !3930)
!3937 = !DILocation(line: 1088, column: 4, scope: !3930)
!3938 = !DILocation(line: 1088, column: 15, scope: !3931)
!3939 = !DILocation(line: 1089, column: 5, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !200, line: 1089, column: 5)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !200, line: 1089, column: 5)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !200, line: 1088, column: 61)
!3943 = distinct !DILexicalBlock(scope: !3931, file: !200, line: 1088, column: 15)
!3944 = !DILocation(line: 1089, column: 5, scope: !3941)
!3945 = !DILocation(line: 1089, column: 5, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3940, file: !200, line: 1089, column: 5)
!3947 = !DILocation(line: 1090, column: 26, scope: !3942)
!3948 = !DILocation(line: 1090, column: 5, scope: !3942)
!3949 = !DILocation(line: 1091, column: 4, scope: !3942)
!3950 = !DILocation(line: 1095, column: 8, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3926, file: !200, line: 1094, column: 10)
!3952 = !DILocation(line: 1096, column: 5, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !200, line: 1096, column: 5)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !200, line: 1096, column: 5)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !200, line: 1095, column: 49)
!3956 = distinct !DILexicalBlock(scope: !3951, file: !200, line: 1095, column: 8)
!3957 = !DILocation(line: 1096, column: 5, scope: !3954)
!3958 = !DILocation(line: 1096, column: 5, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3953, file: !200, line: 1096, column: 5)
!3960 = !DILocation(line: 1097, column: 25, scope: !3955)
!3961 = !DILocation(line: 1097, column: 5, scope: !3955)
!3962 = !DILocation(line: 1098, column: 4, scope: !3955)
!3963 = !DILocation(line: 1099, column: 5, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !200, line: 1099, column: 5)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !200, line: 1099, column: 5)
!3966 = distinct !DILexicalBlock(scope: !3956, file: !200, line: 1098, column: 11)
!3967 = !DILocation(line: 1099, column: 5, scope: !3965)
!3968 = !DILocation(line: 1099, column: 5, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3964, file: !200, line: 1099, column: 5)
!3970 = !DILocation(line: 1100, column: 26, scope: !3966)
!3971 = !DILocation(line: 1100, column: 5, scope: !3966)
!3972 = !DILocation(line: 1100, column: 30, scope: !3966)
!3973 = !DILocation(line: 1101, column: 26, scope: !3966)
!3974 = !DILocation(line: 1101, column: 5, scope: !3966)
!3975 = !DILocation(line: 0, scope: !3926)
!3976 = !DILocation(line: 1074, column: 32, scope: !3744)
!3977 = distinct !{!3977, !3893, !3978}
!3978 = !DILocation(line: 1104, column: 2, scope: !3741)
!3979 = !DILocation(line: 1124, column: 13, scope: !3684)
!3980 = !DILocation(line: 1127, column: 10, scope: !3684)
!3981 = !DILocation(line: 1127, column: 7, scope: !3684)
!3982 = !DILocation(line: 1128, column: 9, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 1128, column: 6)
!3984 = !DILocation(line: 1128, column: 6, scope: !3684)
!3985 = !DILocation(line: 1134, column: 27, scope: !3684)
!3986 = !DILocation(line: 1136, column: 7, scope: !3684)
!3987 = !DILocation(line: 1137, column: 9, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 1137, column: 6)
!3989 = !DILocation(line: 1137, column: 6, scope: !3684)
!3990 = !DILocation(line: 1131, column: 10, scope: !3684)
!3991 = !DILocation(line: 1140, column: 10, scope: !3684)
!3992 = !DILocation(line: 0, scope: !3751)
!3993 = !DILocation(line: 1143, column: 20, scope: !3754)
!3994 = !DILocation(line: 1143, column: 2, scope: !3751)
!3995 = !DILocation(line: 1144, column: 3, scope: !3753)
!3996 = !DILocation(line: 1144, column: 17, scope: !3753)
!3997 = !DILocation(line: 0, scope: !3753)
!3998 = !DILocation(line: 1144, column: 11, scope: !3753)
!3999 = !DILocation(line: 1145, column: 38, scope: !3753)
!4000 = !DILocation(line: 1145, column: 21, scope: !3753)
!4001 = !DILocation(line: 1146, column: 22, scope: !3753)
!4002 = !DILocation(line: 1146, column: 29, scope: !3753)
!4003 = !DILocation(line: 1148, column: 8, scope: !3753)
!4004 = !DILocation(line: 1149, column: 10, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3753, file: !200, line: 1149, column: 7)
!4006 = !DILocation(line: 1149, column: 7, scope: !3753)
!4007 = !DILocation(line: 1154, column: 8, scope: !3753)
!4008 = !DILocation(line: 1155, column: 10, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3753, file: !200, line: 1155, column: 7)
!4010 = !DILocation(line: 1155, column: 7, scope: !3753)
!4011 = !DILocation(line: 1159, column: 2, scope: !3754)
!4012 = !DILocation(line: 1152, column: 11, scope: !3753)
!4013 = !DILocation(line: 1158, column: 11, scope: !3753)
!4014 = !DILocation(line: 1143, column: 33, scope: !3754)
!4015 = distinct !{!4015, !3994, !4016}
!4016 = !DILocation(line: 1159, column: 2, scope: !3751)
!4017 = !DILocation(line: 1162, column: 8, scope: !3684)
!4018 = !DILocation(line: 1164, column: 2, scope: !3684)
!4019 = !DILocation(line: 1165, column: 1, scope: !3684)
!4020 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4021, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4023)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!185, !106}
!4023 = !{!4024, !4025, !4026, !4027, !4028, !4029, !4030}
!4024 = !DILocalVariable(name: "packaged", arg: 1, scope: !4020, file: !200, line: 196, type: !106)
!4025 = !DILocalVariable(name: "buf", scope: !4020, file: !200, line: 200, type: !194)
!4026 = !DILocalVariable(name: "start", scope: !4020, file: !200, line: 201, type: !194)
!4027 = !DILocalVariable(name: "args_size", scope: !4020, file: !200, line: 202, type: !32)
!4028 = !DILocalVariable(name: "s_nbr", scope: !4020, file: !200, line: 202, type: !32)
!4029 = !DILocalVariable(name: "ros_nbr", scope: !4020, file: !200, line: 202, type: !32)
!4030 = !DILocalVariable(name: "i", scope: !4031, file: !200, line: 215, type: !107)
!4031 = distinct !DILexicalBlock(scope: !4020, file: !200, line: 215, column: 2)
!4032 = !DILocation(line: 0, scope: !4020)
!4033 = !DILocation(line: 198, column: 2, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !200, line: 198, column: 2)
!4035 = distinct !DILexicalBlock(scope: !4020, file: !200, line: 198, column: 2)
!4036 = !DILocation(line: 198, column: 2, scope: !4035)
!4037 = !DILocation(line: 198, column: 2, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4034, file: !200, line: 198, column: 2)
!4039 = !DILocation(line: 204, column: 14, scope: !4020)
!4040 = !DILocation(line: 204, column: 21, scope: !4020)
!4041 = !DILocation(line: 205, column: 14, scope: !4020)
!4042 = !DILocation(line: 206, column: 14, scope: !4020)
!4043 = !DILocation(line: 209, column: 6, scope: !4020)
!4044 = !DILocation(line: 212, column: 6, scope: !4020)
!4045 = !DILocation(line: 0, scope: !4031)
!4046 = !DILocation(line: 215, column: 20, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4031, file: !200, line: 215, column: 2)
!4048 = !DILocation(line: 215, column: 2, scope: !4031)
!4049 = !DILocation(line: 220, column: 33, scope: !4020)
!4050 = !DILocation(line: 220, column: 2, scope: !4020)
!4051 = !DILocation(line: 216, column: 6, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4047, file: !200, line: 215, column: 34)
!4053 = !DILocation(line: 217, column: 10, scope: !4052)
!4054 = !DILocation(line: 217, column: 36, scope: !4052)
!4055 = !DILocation(line: 217, column: 7, scope: !4052)
!4056 = !DILocation(line: 215, column: 30, scope: !4047)
!4057 = distinct !{!4057, !4048, !4058}
!4058 = !DILocation(line: 218, column: 2, scope: !4031)
!4059 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4060, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4062)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!107, !3687, !106, !118, !197}
!4062 = !{!4063, !4064, !4065, !4066}
!4063 = !DILocalVariable(name: "cb", arg: 1, scope: !4059, file: !200, line: 223, type: !3687)
!4064 = !DILocalVariable(name: "ctx", arg: 2, scope: !4059, file: !200, line: 223, type: !106)
!4065 = !DILocalVariable(name: "str", arg: 3, scope: !4059, file: !200, line: 223, type: !118)
!4066 = !DILocalVariable(name: "strl", arg: 4, scope: !4059, file: !200, line: 223, type: !197)
!4067 = !DILocation(line: 0, scope: !4059)
!4068 = !DILocation(line: 225, column: 9, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4059, file: !200, line: 225, column: 6)
!4070 = !DILocation(line: 225, column: 6, scope: !4059)
!4071 = !DILocation(line: 226, column: 14, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4069, file: !200, line: 225, column: 18)
!4073 = !DILocation(line: 226, column: 12, scope: !4072)
!4074 = !DILocation(line: 226, column: 3, scope: !4072)
!4075 = !DILocation(line: 229, column: 14, scope: !4059)
!4076 = !DILocation(line: 229, column: 9, scope: !4059)
!4077 = !DILocation(line: 229, column: 27, scope: !4059)
!4078 = !DILocation(line: 229, column: 39, scope: !4059)
!4079 = !DILocation(line: 230, column: 17, scope: !4059)
!4080 = !DILocation(line: 230, column: 9, scope: !4059)
!4081 = !DILocation(line: 230, column: 2, scope: !4059)
!4082 = !DILocation(line: 231, column: 1, scope: !4059)
!4083 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4084)
!4084 = !{!4085}
!4085 = !DILocalVariable(name: "c", arg: 1, scope: !4083, file: !212, line: 45, type: !107)
!4086 = !DILocation(line: 0, scope: !4083)
!4087 = !DILocation(line: 50, column: 2, scope: !4083)
!4088 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4089, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4091)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{null, !213}
!4091 = !{!4092}
!4092 = !DILocalVariable(name: "fn", arg: 1, scope: !4088, file: !212, line: 63, type: !213)
!4093 = !DILocation(line: 0, scope: !4088)
!4094 = !DILocation(line: 65, column: 12, scope: !4088)
!4095 = !DILocation(line: 66, column: 1, scope: !4088)
!4096 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2175)
!4097 = !DILocation(line: 78, column: 9, scope: !4096)
!4098 = !DILocation(line: 78, column: 2, scope: !4096)
!4099 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4100, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4108)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{null, !118, !4102}
!4102 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3175, line: 99, baseType: !4103)
!4103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3175, line: 40, baseType: !4104)
!4104 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4105)
!4105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4106)
!4106 = !{!4107}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4105, file: !212, line: 79, baseType: !106, size: 32)
!4108 = !{!4109, !4110, !4111}
!4109 = !DILocalVariable(name: "fmt", arg: 1, scope: !4099, file: !212, line: 113, type: !118)
!4110 = !DILocalVariable(name: "ap", arg: 2, scope: !4099, file: !212, line: 113, type: !4102)
!4111 = !DILocalVariable(name: "ctx", scope: !4112, file: !212, line: 121, type: !4114)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !212, line: 120, column: 27)
!4113 = distinct !DILexicalBlock(scope: !4099, file: !212, line: 120, column: 6)
!4114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4115)
!4115 = !{!4116, !4117}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4114, file: !212, line: 85, baseType: !32, size: 32)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4114, file: !212, line: 86, baseType: !4118, offset: 32)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4119)
!4119 = !{!4120}
!4120 = !DISubrange(count: 0)
!4121 = !DILocation(line: 0, scope: !4099)
!4122 = !DILocation(line: 148, column: 3, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4113, file: !212, line: 138, column: 9)
!4124 = !DILocation(line: 155, column: 1, scope: !4099)
!4125 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4126, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4128)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!107, !107, !106}
!4128 = !{!4129, !4130}
!4129 = !DILocalVariable(name: "c", arg: 1, scope: !4125, file: !212, line: 107, type: !107)
!4130 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4125, file: !212, line: 107, type: !106)
!4131 = !DILocation(line: 0, scope: !4125)
!4132 = !DILocation(line: 110, column: 9, scope: !4125)
!4133 = !DILocation(line: 110, column: 2, scope: !4125)
!4134 = distinct !DISubprogram(name: "cbvprintf", scope: !3207, file: !3207, line: 739, type: !4135, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4137)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!107, !3555, !106, !118, !4102}
!4137 = !{!4138, !4139, !4140, !4141}
!4138 = !DILocalVariable(name: "out", arg: 1, scope: !4134, file: !3207, line: 739, type: !3555)
!4139 = !DILocalVariable(name: "ctx", arg: 2, scope: !4134, file: !3207, line: 739, type: !106)
!4140 = !DILocalVariable(name: "format", arg: 3, scope: !4134, file: !3207, line: 739, type: !118)
!4141 = !DILocalVariable(name: "ap", arg: 4, scope: !4134, file: !3207, line: 739, type: !4102)
!4142 = !DILocation(line: 0, scope: !4134)
!4143 = !DILocation(line: 741, column: 9, scope: !4134)
!4144 = !DILocation(line: 741, column: 2, scope: !4134)
!4145 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4146, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4148)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{null, !193, !185}
!4148 = !{!4149, !4150, !4151}
!4149 = !DILocalVariable(name: "c", arg: 1, scope: !4145, file: !212, line: 157, type: !193)
!4150 = !DILocalVariable(name: "n", arg: 2, scope: !4145, file: !212, line: 157, type: !185)
!4151 = !DILocalVariable(name: "i", scope: !4145, file: !212, line: 159, type: !185)
!4152 = !DILocation(line: 0, scope: !4145)
!4153 = !DILocation(line: 164, column: 16, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !212, line: 164, column: 2)
!4155 = distinct !DILexicalBlock(scope: !4145, file: !212, line: 164, column: 2)
!4156 = !DILocation(line: 164, column: 2, scope: !4155)
!4157 = !DILocation(line: 165, column: 3, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4154, file: !212, line: 164, column: 26)
!4159 = !DILocation(line: 165, column: 13, scope: !4158)
!4160 = !DILocation(line: 164, column: 22, scope: !4154)
!4161 = distinct !{!4161, !4156, !4162}
!4162 = !DILocation(line: 166, column: 2, scope: !4155)
!4163 = !DILocation(line: 171, column: 1, scope: !4145)
!4164 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4165, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4167)
!4165 = !DISubroutineType(types: !4166)
!4166 = !{null, !118, null}
!4167 = !{!4168, !4169}
!4168 = !DILocalVariable(name: "fmt", arg: 1, scope: !4164, file: !212, line: 203, type: !118)
!4169 = !DILocalVariable(name: "ap", scope: !4164, file: !212, line: 205, type: !4102)
!4170 = !DILocation(line: 0, scope: !4164)
!4171 = !DILocation(line: 205, column: 2, scope: !4164)
!4172 = !DILocation(line: 205, column: 10, scope: !4164)
!4173 = !DILocation(line: 207, column: 2, scope: !4164)
!4174 = !DILocation(line: 209, column: 2, scope: !4164)
!4175 = !DILocation(line: 211, column: 2, scope: !4164)
!4176 = !DILocation(line: 212, column: 1, scope: !4164)
!4177 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4178, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4180)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{!107, !193, !185, !118, null}
!4180 = !{!4181, !4182, !4183, !4184, !4185}
!4181 = !DILocalVariable(name: "str", arg: 1, scope: !4177, file: !212, line: 239, type: !193)
!4182 = !DILocalVariable(name: "size", arg: 2, scope: !4177, file: !212, line: 239, type: !185)
!4183 = !DILocalVariable(name: "fmt", arg: 3, scope: !4177, file: !212, line: 239, type: !118)
!4184 = !DILocalVariable(name: "ap", scope: !4177, file: !212, line: 241, type: !4102)
!4185 = !DILocalVariable(name: "ret", scope: !4177, file: !212, line: 242, type: !107)
!4186 = !DILocation(line: 0, scope: !4177)
!4187 = !DILocation(line: 241, column: 2, scope: !4177)
!4188 = !DILocation(line: 241, column: 10, scope: !4177)
!4189 = !DILocation(line: 244, column: 2, scope: !4177)
!4190 = !DILocation(line: 245, column: 8, scope: !4177)
!4191 = !DILocation(line: 246, column: 2, scope: !4177)
!4192 = !DILocation(line: 249, column: 1, scope: !4177)
!4193 = !DILocation(line: 248, column: 2, scope: !4177)
!4194 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4195, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4197)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!107, !193, !185, !118, !4102}
!4197 = !{!4198, !4199, !4200, !4201, !4202}
!4198 = !DILocalVariable(name: "str", arg: 1, scope: !4194, file: !212, line: 251, type: !193)
!4199 = !DILocalVariable(name: "size", arg: 2, scope: !4194, file: !212, line: 251, type: !185)
!4200 = !DILocalVariable(name: "fmt", arg: 3, scope: !4194, file: !212, line: 251, type: !118)
!4201 = !DILocalVariable(name: "ap", arg: 4, scope: !4194, file: !212, line: 251, type: !4102)
!4202 = !DILocalVariable(name: "ctx", scope: !4194, file: !212, line: 253, type: !4203)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4204)
!4204 = !{!4205, !4206, !4207}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4203, file: !212, line: 218, baseType: !193, size: 32)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4203, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4203, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4208 = !DILocation(line: 0, scope: !4194)
!4209 = !DILocation(line: 253, column: 2, scope: !4194)
!4210 = !DILocation(line: 253, column: 21, scope: !4194)
!4211 = !DILocation(line: 253, column: 27, scope: !4194)
!4212 = !DILocation(line: 255, column: 2, scope: !4194)
!4213 = !DILocation(line: 257, column: 10, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4194, file: !212, line: 257, column: 6)
!4215 = !DILocation(line: 257, column: 22, scope: !4214)
!4216 = !DILocation(line: 257, column: 16, scope: !4214)
!4217 = !DILocation(line: 257, column: 6, scope: !4194)
!4218 = !DILocation(line: 258, column: 3, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4214, file: !212, line: 257, column: 27)
!4220 = !DILocation(line: 258, column: 18, scope: !4219)
!4221 = !DILocation(line: 259, column: 2, scope: !4219)
!4222 = !DILocation(line: 262, column: 1, scope: !4194)
!4223 = !DILocation(line: 261, column: 2, scope: !4194)
!4224 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4225, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4228)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{!107, !107, !4227}
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 32)
!4228 = !{!4229, !4230}
!4229 = !DILocalVariable(name: "c", arg: 1, scope: !4224, file: !212, line: 223, type: !107)
!4230 = !DILocalVariable(name: "ctx", arg: 2, scope: !4224, file: !212, line: 223, type: !4227)
!4231 = !DILocation(line: 0, scope: !4224)
!4232 = !DILocation(line: 225, column: 11, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4224, file: !212, line: 225, column: 6)
!4234 = !DILocation(line: 225, column: 15, scope: !4233)
!4235 = !DILocation(line: 0, scope: !4233)
!4236 = !DILocation(line: 225, column: 23, scope: !4233)
!4237 = !DILocation(line: 225, column: 45, scope: !4233)
!4238 = !DILocation(line: 225, column: 37, scope: !4233)
!4239 = !DILocation(line: 225, column: 6, scope: !4224)
!4240 = !DILocation(line: 226, column: 8, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4233, file: !212, line: 225, column: 50)
!4242 = !DILocation(line: 226, column: 13, scope: !4241)
!4243 = !DILocation(line: 227, column: 3, scope: !4241)
!4244 = !DILocation(line: 230, column: 29, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4224, file: !212, line: 230, column: 6)
!4246 = !DILocation(line: 230, column: 17, scope: !4245)
!4247 = !DILocation(line: 230, column: 6, scope: !4224)
!4248 = !DILocation(line: 231, column: 22, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4245, file: !212, line: 230, column: 34)
!4250 = !DILocation(line: 231, column: 3, scope: !4249)
!4251 = !DILocation(line: 231, column: 26, scope: !4249)
!4252 = !DILocation(line: 232, column: 2, scope: !4249)
!4253 = !DILocation(line: 233, column: 28, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4245, file: !212, line: 232, column: 9)
!4255 = !DILocation(line: 233, column: 22, scope: !4254)
!4256 = !DILocation(line: 233, column: 3, scope: !4254)
!4257 = !DILocation(line: 233, column: 26, scope: !4254)
!4258 = !DILocation(line: 237, column: 1, scope: !4224)
!4259 = distinct !DISubprogram(name: "z_thread_entry", scope: !4260, file: !4260, line: 30, type: !4261, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !4263)
!4260 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4261 = !DISubroutineType(types: !4262)
!4262 = !{null, !680, !106, !106, !106}
!4263 = !{!4264, !4265, !4266, !4267}
!4264 = !DILocalVariable(name: "entry", arg: 1, scope: !4259, file: !4260, line: 30, type: !680)
!4265 = !DILocalVariable(name: "p1", arg: 2, scope: !4259, file: !4260, line: 31, type: !106)
!4266 = !DILocalVariable(name: "p2", arg: 3, scope: !4259, file: !4260, line: 31, type: !106)
!4267 = !DILocalVariable(name: "p3", arg: 4, scope: !4259, file: !4260, line: 31, type: !106)
!4268 = !DILocation(line: 0, scope: !4259)
!4269 = !DILocation(line: 36, column: 2, scope: !4259)
!4270 = !DILocation(line: 38, column: 17, scope: !4259)
!4271 = !DILocation(line: 38, column: 2, scope: !4259)
!4272 = !DILocation(line: 45, column: 2, scope: !4259)
!4273 = distinct !DISubprogram(name: "k_current_get", scope: !419, file: !419, line: 530, type: !4274, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !2175)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!4276}
!4276 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !4277)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 32)
!4278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !4279)
!4279 = !{!4280, !4338, !4350, !4351, !4352, !4353, !4354, !4360, !4375}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4278, file: !322, line: 247, baseType: !4281, size: 384)
!4281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !4282)
!4282 = !{!4283, !4307, !4314, !4315, !4316, !4325, !4326, !4327}
!4283 = !DIDerivedType(tag: DW_TAG_member, scope: !4281, file: !322, line: 60, baseType: !4284, size: 64)
!4284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4281, file: !322, line: 60, size: 64, elements: !4285)
!4285 = !{!4286, !4301}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4284, file: !322, line: 61, baseType: !4287, size: 64)
!4287 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !4288)
!4288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !4289)
!4289 = !{!4290, !4296}
!4290 = !DIDerivedType(tag: DW_TAG_member, scope: !4288, file: !332, line: 38, baseType: !4291, size: 32)
!4291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4288, file: !332, line: 38, size: 32, elements: !4292)
!4292 = !{!4293, !4295}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4291, file: !332, line: 39, baseType: !4294, size: 32)
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 32)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4291, file: !332, line: 40, baseType: !4294, size: 32)
!4296 = !DIDerivedType(tag: DW_TAG_member, scope: !4288, file: !332, line: 42, baseType: !4297, size: 32, offset: 32)
!4297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4288, file: !332, line: 42, size: 32, elements: !4298)
!4298 = !{!4299, !4300}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4297, file: !332, line: 43, baseType: !4294, size: 32)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4297, file: !332, line: 44, baseType: !4294, size: 32)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4284, file: !322, line: 62, baseType: !4302, size: 64)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !4303)
!4303 = !{!4304}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4302, file: !348, line: 50, baseType: !4305, size: 64)
!4305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4306, size: 64, elements: !353)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 32)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4281, file: !322, line: 68, baseType: !4308, size: 32, offset: 64)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 32)
!4309 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !4310)
!4310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !4311)
!4311 = !{!4312}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4310, file: !358, line: 232, baseType: !4313, size: 64)
!4313 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !4288)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4281, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4281, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!4316 = !DIDerivedType(tag: DW_TAG_member, scope: !4281, file: !322, line: 90, baseType: !4317, size: 16, offset: 112)
!4317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4281, file: !322, line: 90, size: 16, elements: !4318)
!4318 = !{!4319, !4324}
!4319 = !DIDerivedType(tag: DW_TAG_member, scope: !4317, file: !322, line: 91, baseType: !4320, size: 16)
!4320 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4317, file: !322, line: 91, size: 16, elements: !4321)
!4321 = !{!4322, !4323}
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4320, file: !322, line: 96, baseType: !372, size: 8)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4320, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4317, file: !322, line: 100, baseType: !197, size: 16)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4281, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4281, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4281, file: !322, line: 131, baseType: !4328, size: 192, offset: 192)
!4328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !4329)
!4329 = !{!4330, !4331, !4337}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4328, file: !358, line: 245, baseType: !4287, size: 64)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4328, file: !358, line: 246, baseType: !4332, size: 32, offset: 64)
!4332 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !4333)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 32)
!4334 = !DISubroutineType(types: !4335)
!4335 = !{null, !4336}
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4328, size: 32)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4328, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4278, file: !322, line: 250, baseType: !4339, size: 288, offset: 384)
!4339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !4340)
!4340 = !{!4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4339, file: !392, line: 26, baseType: !152, size: 32)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4339, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4339, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4339, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4339, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4339, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4339, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4339, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4339, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4278, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4278, file: !322, line: 256, baseType: !4309, size: 64, offset: 704)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4278, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4278, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4278, file: !322, line: 300, baseType: !4355, size: 96, offset: 1056)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !4356)
!4356 = !{!4357, !4358, !4359}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4355, file: !322, line: 153, baseType: !22, size: 32)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4355, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4355, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4278, file: !322, line: 325, baseType: !4361, size: 32, offset: 1152)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 32)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !4363)
!4363 = !{!4364, !4370, !4371}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4362, file: !419, line: 5074, baseType: !4365, size: 96)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !4366)
!4366 = !{!4367, !4368, !4369}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4365, file: !423, line: 57, baseType: !426, size: 32)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4365, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4365, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4362, file: !419, line: 5075, baseType: !4309, size: 64, offset: 96)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4362, file: !419, line: 5076, baseType: !4372, size: 32, offset: 160)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !4373)
!4373 = !{!4374}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4372, file: !433, line: 52, baseType: !22, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4278, file: !322, line: 343, baseType: !4376, size: 64, offset: 1184)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !4377)
!4377 = !{!4378, !4379}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4376, file: !392, line: 63, baseType: !152, size: 32)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4376, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!4380 = !DILocation(line: 535, column: 9, scope: !4273)
!4381 = !DILocation(line: 535, column: 2, scope: !4273)
!4382 = distinct !DISubprogram(name: "k_thread_abort", scope: !4383, file: !4383, line: 188, type: !4384, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !4386)
!4383 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!4384 = !DISubroutineType(types: !4385)
!4385 = !{null, !4276}
!4386 = !{!4387}
!4387 = !DILocalVariable(name: "thread", arg: 1, scope: !4382, file: !4383, line: 188, type: !4276)
!4388 = !DILocation(line: 0, scope: !4382)
!4389 = !DILocation(line: 197, column: 2, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4382, file: !4383, line: 197, column: 2)
!4391 = !{i64 2152221604}
!4392 = !DILocation(line: 198, column: 2, scope: !4382)
!4393 = !DILocation(line: 199, column: 1, scope: !4382)
!4394 = distinct !DISubprogram(name: "z_current_get", scope: !4383, file: !4383, line: 173, type: !4274, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !2175)
!4395 = !DILocation(line: 180, column: 2, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4394, file: !4383, line: 180, column: 2)
!4397 = !{i64 2152221536}
!4398 = !DILocation(line: 181, column: 9, scope: !4394)
!4399 = !DILocation(line: 181, column: 2, scope: !4394)
!4400 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2527, file: !2527, line: 1338, type: !4401, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4409)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!107, !3555, !106, !118, !4403, !152}
!4403 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3175, line: 99, baseType: !4404)
!4404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3175, line: 40, baseType: !4405)
!4405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2527, baseType: !4406)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4407)
!4407 = !{!4408}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4406, file: !2527, baseType: !106, size: 32)
!4409 = !{!4410, !4411, !4412, !4413, !4414, !4415, !4419, !4420, !4421, !4423, !4428, !4471, !4474, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4486, !4487, !4488, !4492, !4495, !4497, !4500, !4501, !4502, !4507, !4513, !4516, !4520, !4526, !4530, !4533, !4535, !4538}
!4410 = !DILocalVariable(name: "out", arg: 1, scope: !4400, file: !2527, line: 1338, type: !3555)
!4411 = !DILocalVariable(name: "ctx", arg: 2, scope: !4400, file: !2527, line: 1338, type: !106)
!4412 = !DILocalVariable(name: "fp", arg: 3, scope: !4400, file: !2527, line: 1338, type: !118)
!4413 = !DILocalVariable(name: "ap", arg: 4, scope: !4400, file: !2527, line: 1339, type: !4403)
!4414 = !DILocalVariable(name: "flags", arg: 5, scope: !4400, file: !2527, line: 1339, type: !152)
!4415 = !DILocalVariable(name: "buf", scope: !4400, file: !2527, line: 1341, type: !4416)
!4416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4417)
!4417 = !{!4418}
!4418 = !DISubrange(count: 22)
!4419 = !DILocalVariable(name: "count", scope: !4400, file: !2527, line: 1342, type: !185)
!4420 = !DILocalVariable(name: "sint", scope: !4400, file: !2527, line: 1343, type: !2546)
!4421 = !DILocalVariable(name: "tagged_ap", scope: !4400, file: !2527, line: 1345, type: !4422)
!4422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4423 = !DILocalVariable(name: "rc", scope: !4424, file: !2527, line: 1377, type: !107)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !2527, line: 1377, column: 4)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !2527, line: 1376, column: 19)
!4426 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1376, column: 7)
!4427 = distinct !DILexicalBlock(scope: !4400, file: !2527, line: 1375, column: 19)
!4428 = !DILocalVariable(name: "state", scope: !4427, file: !2527, line: 1395, type: !4429)
!4429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4400, file: !2527, line: 1392, size: 192, elements: !4430)
!4430 = !{!4431, !4439}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4429, file: !2527, line: 1393, baseType: !4432, size: 64)
!4432 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2527, line: 166, size: 64, elements: !4433)
!4433 = !{!4434, !4435, !4436, !4437, !4438}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4432, file: !2527, line: 168, baseType: !2546, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4432, file: !2527, line: 171, baseType: !2549, size: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4432, file: !2527, line: 174, baseType: !183, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4432, file: !2527, line: 177, baseType: !181, size: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4432, file: !2527, line: 180, baseType: !106, size: 32)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4429, file: !2527, line: 1394, baseType: !4440, size: 96, offset: 64)
!4440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2527, line: 189, size: 96, elements: !4441)
!4441 = !{!4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4466}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4440, file: !2527, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4440, file: !2527, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4440, file: !2527, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4440, file: !2527, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4440, file: !2527, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4440, file: !2527, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4440, file: !2527, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4440, file: !2527, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4440, file: !2527, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4440, file: !2527, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4440, file: !2527, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4440, file: !2527, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4440, file: !2527, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4440, file: !2527, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4440, file: !2527, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4440, file: !2527, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4440, file: !2527, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4440, file: !2527, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4440, file: !2527, line: 260, baseType: !196, size: 8, offset: 24)
!4461 = !DIDerivedType(tag: DW_TAG_member, scope: !4440, file: !2527, line: 262, baseType: !4462, size: 32, offset: 32)
!4462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4440, file: !2527, line: 262, size: 32, elements: !4463)
!4463 = !{!4464, !4465}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4462, file: !2527, line: 267, baseType: !107, size: 32)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4462, file: !2527, line: 289, baseType: !107, size: 32)
!4466 = !DIDerivedType(tag: DW_TAG_member, scope: !4440, file: !2527, line: 292, baseType: !4467, size: 32, offset: 64)
!4467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4440, file: !2527, line: 292, size: 32, elements: !4468)
!4468 = !{!4469, !4470}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4467, file: !2527, line: 297, baseType: !107, size: 32)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4467, file: !2527, line: 306, baseType: !107, size: 32)
!4471 = !DILocalVariable(name: "conv", scope: !4427, file: !2527, line: 1400, type: !4472)
!4472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4473)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 32)
!4474 = !DILocalVariable(name: "value", scope: !4427, file: !2527, line: 1401, type: !4475)
!4475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4476)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 32)
!4477 = !DILocalVariable(name: "sp", scope: !4427, file: !2527, line: 1402, type: !118)
!4478 = !DILocalVariable(name: "width", scope: !4427, file: !2527, line: 1403, type: !107)
!4479 = !DILocalVariable(name: "precision", scope: !4427, file: !2527, line: 1404, type: !107)
!4480 = !DILocalVariable(name: "bps", scope: !4427, file: !2527, line: 1405, type: !118)
!4481 = !DILocalVariable(name: "bpe", scope: !4427, file: !2527, line: 1406, type: !118)
!4482 = !DILocalVariable(name: "sign", scope: !4427, file: !2527, line: 1407, type: !120)
!4483 = !DILocalVariable(name: "arg", scope: !4484, file: !2527, line: 1432, type: !107)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !2527, line: 1431, column: 24)
!4485 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1431, column: 7)
!4486 = !DILocalVariable(name: "specifier_cat", scope: !4427, file: !2527, line: 1468, type: !2526)
!4487 = !DILocalVariable(name: "length_mod", scope: !4427, file: !2527, line: 1470, type: !2534)
!4488 = !DILocalVariable(name: "rc", scope: !4489, file: !2527, line: 1575, type: !107)
!4489 = distinct !DILexicalBlock(scope: !4490, file: !2527, line: 1575, column: 4)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !2527, line: 1574, column: 43)
!4491 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1574, column: 7)
!4492 = !DILocalVariable(name: "rc", scope: !4493, file: !2527, line: 1584, type: !107)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !2527, line: 1584, column: 4)
!4494 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1582, column: 28)
!4495 = !DILocalVariable(name: "len", scope: !4496, file: !2527, line: 1589, type: !185)
!4496 = distinct !DILexicalBlock(scope: !4494, file: !2527, line: 1586, column: 13)
!4497 = !DILocalVariable(name: "len", scope: !4498, file: !2527, line: 1641, type: !185)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !2527, line: 1640, column: 24)
!4499 = distinct !DILexicalBlock(scope: !4494, file: !2527, line: 1640, column: 8)
!4500 = !DILocalVariable(name: "nj_len", scope: !4427, file: !2527, line: 1722, type: !185)
!4501 = !DILocalVariable(name: "pad_len", scope: !4427, file: !2527, line: 1723, type: !107)
!4502 = !DILocalVariable(name: "pad", scope: !4503, file: !2527, line: 1751, type: !120)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !2527, line: 1750, column: 26)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !2527, line: 1750, column: 8)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !2527, line: 1747, column: 18)
!4506 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1747, column: 7)
!4507 = !DILocalVariable(name: "rc", scope: !4508, file: !2527, line: 1758, type: !107)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !2527, line: 1758, column: 7)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !2527, line: 1757, column: 21)
!4510 = distinct !DILexicalBlock(scope: !4511, file: !2527, line: 1757, column: 10)
!4511 = distinct !DILexicalBlock(scope: !4512, file: !2527, line: 1756, column: 26)
!4512 = distinct !DILexicalBlock(scope: !4503, file: !2527, line: 1756, column: 9)
!4513 = !DILocalVariable(name: "rc", scope: !4514, file: !2527, line: 1765, type: !107)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !2527, line: 1765, column: 6)
!4515 = distinct !DILexicalBlock(scope: !4503, file: !2527, line: 1764, column: 25)
!4516 = !DILocalVariable(name: "rc", scope: !4517, file: !2527, line: 1774, type: !107)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !2527, line: 1774, column: 4)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2527, line: 1773, column: 18)
!4519 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1773, column: 7)
!4520 = !DILocalVariable(name: "rc", scope: !4521, file: !2527, line: 1819, type: !107)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2527, line: 1819, column: 5)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !2527, line: 1818, column: 44)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2527, line: 1818, column: 8)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2527, line: 1817, column: 10)
!4525 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1777, column: 7)
!4526 = !DILocalVariable(name: "rc", scope: !4527, file: !2527, line: 1823, type: !107)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !2527, line: 1823, column: 5)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !2527, line: 1822, column: 26)
!4529 = distinct !DILexicalBlock(scope: !4524, file: !2527, line: 1822, column: 8)
!4530 = !DILocalVariable(name: "rc", scope: !4531, file: !2527, line: 1828, type: !107)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2527, line: 1828, column: 5)
!4532 = distinct !DILexicalBlock(scope: !4524, file: !2527, line: 1827, column: 26)
!4533 = !DILocalVariable(name: "rc", scope: !4534, file: !2527, line: 1831, type: !107)
!4534 = distinct !DILexicalBlock(scope: !4524, file: !2527, line: 1831, column: 4)
!4535 = !DILocalVariable(name: "rc", scope: !4536, file: !2527, line: 1836, type: !107)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2527, line: 1836, column: 4)
!4537 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1835, column: 21)
!4538 = !DILabel(scope: !4494, name: "prec_int_pad0", file: !2527, line: 1634)
!4539 = !DILocation(line: 0, scope: !4400)
!4540 = !DILocation(line: 1341, column: 2, scope: !4400)
!4541 = !DILocation(line: 1341, column: 7, scope: !4400)
!4542 = !DILocation(line: 1375, column: 2, scope: !4400)
!4543 = !DILocation(line: 1342, column: 9, scope: !4400)
!4544 = !DILocation(line: 1375, column: 9, scope: !4400)
!4545 = !DILocation(line: 1377, column: 4, scope: !4424)
!4546 = !DILocation(line: 0, scope: !4424)
!4547 = !DILocation(line: 1377, column: 4, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4424, file: !2527, line: 1377, column: 4)
!4549 = distinct !{!4549, !4542, !4550}
!4550 = !DILocation(line: 1839, column: 2, scope: !4400)
!4551 = !DILocation(line: 1392, column: 3, scope: !4427)
!4552 = !DILocation(line: 1395, column: 5, scope: !4427)
!4553 = !DILocation(line: 0, scope: !4427)
!4554 = !DILocation(line: 1409, column: 8, scope: !4427)
!4555 = !DILocation(line: 1414, column: 13, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1414, column: 7)
!4557 = !DILocation(line: 1414, column: 7, scope: !4427)
!4558 = !DILocation(line: 1415, column: 12, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !2527, line: 1414, column: 25)
!4560 = !DILocation(line: 1417, column: 14, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4559, file: !2527, line: 1417, column: 8)
!4562 = !DILocation(line: 1417, column: 8, scope: !4559)
!4563 = !DILocation(line: 1418, column: 21, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4561, file: !2527, line: 1417, column: 19)
!4565 = !DILocation(line: 1419, column: 13, scope: !4564)
!4566 = !DILocation(line: 1420, column: 4, scope: !4564)
!4567 = !DILocation(line: 1421, column: 20, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4556, file: !2527, line: 1421, column: 14)
!4569 = !DILocation(line: 1421, column: 14, scope: !4556)
!4570 = !DILocation(line: 1431, column: 13, scope: !4485)
!4571 = !DILocation(line: 1431, column: 7, scope: !4427)
!4572 = !DILocation(line: 1432, column: 14, scope: !4484)
!4573 = !DILocation(line: 0, scope: !4484)
!4574 = !DILocation(line: 1434, column: 12, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4484, file: !2527, line: 1434, column: 8)
!4576 = !DILocation(line: 1434, column: 8, scope: !4484)
!4577 = !DILocation(line: 1435, column: 24, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4575, file: !2527, line: 1434, column: 17)
!4579 = !DILocation(line: 1436, column: 4, scope: !4578)
!4580 = !DILocation(line: 1439, column: 20, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4485, file: !2527, line: 1439, column: 14)
!4582 = !DILocation(line: 1439, column: 14, scope: !4485)
!4583 = !DILocation(line: 1469, column: 37, scope: !4427)
!4584 = !DILocation(line: 1448, column: 20, scope: !4427)
!4585 = !DILocation(line: 1449, column: 22, scope: !4427)
!4586 = !DILocation(line: 1471, column: 34, scope: !4427)
!4587 = !DILocation(line: 1478, column: 7, scope: !4427)
!4588 = !DILocation(line: 1479, column: 4, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !2527, line: 1478, column: 40)
!4590 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1478, column: 7)
!4591 = !DILocation(line: 1484, column: 19, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4589, file: !2527, line: 1479, column: 24)
!4593 = !DILocation(line: 1484, column: 17, scope: !4592)
!4594 = !DILocation(line: 1485, column: 5, scope: !4592)
!4595 = !DILocation(line: 1492, column: 20, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !2527, line: 1491, column: 12)
!4597 = distinct !DILexicalBlock(scope: !4592, file: !2527, line: 1487, column: 9)
!4598 = !DILocation(line: 1492, column: 18, scope: !4596)
!4599 = !DILocation(line: 1494, column: 5, scope: !4592)
!4600 = !DILocation(line: 1497, column: 23, scope: !4592)
!4601 = !DILocation(line: 1496, column: 17, scope: !4592)
!4602 = !DILocation(line: 1498, column: 5, scope: !4592)
!4603 = !DILocation(line: 1501, column: 23, scope: !4592)
!4604 = !DILocation(line: 1500, column: 17, scope: !4592)
!4605 = !DILocation(line: 1502, column: 5, scope: !4592)
!4606 = !DILocation(line: 1513, column: 23, scope: !4592)
!4607 = !DILocation(line: 1513, column: 6, scope: !4592)
!4608 = !DILocation(line: 1512, column: 17, scope: !4592)
!4609 = !DILocation(line: 1514, column: 5, scope: !4592)
!4610 = !DILocation(line: 0, scope: !4592)
!4611 = !DILocation(line: 1516, column: 8, scope: !4589)
!4612 = !DILocation(line: 1517, column: 19, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !2527, line: 1516, column: 33)
!4614 = distinct !DILexicalBlock(scope: !4589, file: !2527, line: 1516, column: 8)
!4615 = !DILocation(line: 1517, column: 17, scope: !4613)
!4616 = !DILocation(line: 1518, column: 4, scope: !4613)
!4617 = !DILocation(line: 1519, column: 19, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !2527, line: 1518, column: 39)
!4619 = distinct !DILexicalBlock(scope: !4614, file: !2527, line: 1518, column: 15)
!4620 = !DILocation(line: 1519, column: 17, scope: !4618)
!4621 = !DILocation(line: 1520, column: 4, scope: !4618)
!4622 = !DILocation(line: 1522, column: 4, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2527, line: 1521, column: 47)
!4624 = distinct !DILexicalBlock(scope: !4590, file: !2527, line: 1521, column: 14)
!4625 = !DILocation(line: 1527, column: 19, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4623, file: !2527, line: 1522, column: 24)
!4627 = !DILocation(line: 1527, column: 17, scope: !4626)
!4628 = !DILocation(line: 1528, column: 5, scope: !4626)
!4629 = !DILocation(line: 0, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4626, file: !2527, line: 1530, column: 9)
!4631 = !DILocation(line: 1540, column: 23, scope: !4626)
!4632 = !DILocation(line: 1539, column: 17, scope: !4626)
!4633 = !DILocation(line: 1542, column: 5, scope: !4626)
!4634 = !DILocation(line: 1545, column: 23, scope: !4626)
!4635 = !DILocation(line: 1544, column: 17, scope: !4626)
!4636 = !DILocation(line: 1547, column: 5, scope: !4626)
!4637 = !DILocation(line: 1551, column: 23, scope: !4626)
!4638 = !DILocation(line: 1551, column: 6, scope: !4626)
!4639 = !DILocation(line: 1550, column: 17, scope: !4626)
!4640 = !DILocation(line: 1552, column: 5, scope: !4626)
!4641 = !DILocation(line: 0, scope: !4626)
!4642 = !DILocation(line: 1554, column: 8, scope: !4623)
!4643 = !DILocation(line: 1555, column: 19, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !2527, line: 1554, column: 33)
!4645 = distinct !DILexicalBlock(scope: !4623, file: !2527, line: 1554, column: 8)
!4646 = !DILocation(line: 1555, column: 17, scope: !4644)
!4647 = !DILocation(line: 1556, column: 4, scope: !4644)
!4648 = !DILocation(line: 1557, column: 19, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !2527, line: 1556, column: 39)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !2527, line: 1556, column: 15)
!4651 = !DILocation(line: 1557, column: 17, scope: !4649)
!4652 = !DILocation(line: 1558, column: 4, scope: !4649)
!4653 = !DILocation(line: 0, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !2527, line: 1560, column: 8)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !2527, line: 1559, column: 45)
!4656 = distinct !DILexicalBlock(scope: !4624, file: !2527, line: 1559, column: 14)
!4657 = !DILocation(line: 1566, column: 17, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !2527, line: 1565, column: 46)
!4659 = distinct !DILexicalBlock(scope: !4656, file: !2527, line: 1565, column: 14)
!4660 = !DILocation(line: 1566, column: 15, scope: !4658)
!4661 = !DILocation(line: 1567, column: 3, scope: !4658)
!4662 = !DILocation(line: 1574, column: 21, scope: !4491)
!4663 = !DILocation(line: 1575, column: 4, scope: !4489)
!4664 = !DILocation(line: 0, scope: !4489)
!4665 = !DILocation(line: 1575, column: 4, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4489, file: !2527, line: 1575, column: 4)
!4667 = !DILocation(line: 1582, column: 17, scope: !4427)
!4668 = !DILocation(line: 1582, column: 3, scope: !4427)
!4669 = !DILocation(line: 1584, column: 4, scope: !4493)
!4670 = !DILocation(line: 0, scope: !4493)
!4671 = !DILocation(line: 1584, column: 4, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4493, file: !2527, line: 1584, column: 4)
!4673 = !DILocation(line: 1587, column: 31, scope: !4496)
!4674 = !DILocation(line: 1591, column: 18, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4496, file: !2527, line: 1591, column: 8)
!4676 = !DILocation(line: 1591, column: 8, scope: !4496)
!4677 = !DILocation(line: 1592, column: 11, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4675, file: !2527, line: 1591, column: 24)
!4679 = !DILocation(line: 0, scope: !4496)
!4680 = !DILocation(line: 1593, column: 4, scope: !4678)
!4681 = !DILocation(line: 1594, column: 11, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4675, file: !2527, line: 1593, column: 11)
!4683 = !DILocation(line: 1604, column: 51, scope: !4494)
!4684 = !DILocation(line: 1604, column: 13, scope: !4494)
!4685 = !DILocation(line: 1604, column: 11, scope: !4494)
!4686 = !DILocation(line: 1606, column: 4, scope: !4494)
!4687 = !DILocation(line: 1609, column: 14, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4494, file: !2527, line: 1609, column: 8)
!4689 = !DILocation(line: 1609, column: 8, scope: !4494)
!4690 = !DILocation(line: 1619, column: 18, scope: !4494)
!4691 = !DILocation(line: 1620, column: 13, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4494, file: !2527, line: 1620, column: 8)
!4693 = !DILocation(line: 1620, column: 8, scope: !4494)
!4694 = !DILocation(line: 1622, column: 36, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4692, file: !2527, line: 1620, column: 18)
!4696 = !DILocation(line: 1622, column: 17, scope: !4695)
!4697 = !DILocation(line: 1623, column: 4, scope: !4695)
!4698 = !DILocation(line: 1632, column: 29, scope: !4494)
!4699 = !DILocation(line: 1632, column: 10, scope: !4494)
!4700 = !DILocation(line: 1632, column: 4, scope: !4494)
!4701 = !DILocation(line: 1407, column: 8, scope: !4427)
!4702 = !DILocation(line: 0, scope: !4494)
!4703 = !DILocation(line: 1634, column: 3, scope: !4494)
!4704 = !DILocation(line: 1640, column: 18, scope: !4499)
!4705 = !DILocation(line: 1640, column: 8, scope: !4494)
!4706 = !DILocation(line: 1729, column: 13, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1729, column: 7)
!4708 = !DILocation(line: 1641, column: 22, scope: !4498)
!4709 = !DILocation(line: 0, scope: !4498)
!4710 = !DILocation(line: 1646, column: 21, scope: !4498)
!4711 = !DILocation(line: 1649, column: 13, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4498, file: !2527, line: 1649, column: 9)
!4713 = !DILocation(line: 1649, column: 9, scope: !4498)
!4714 = !DILocation(line: 1650, column: 35, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4712, file: !2527, line: 1649, column: 34)
!4716 = !DILocation(line: 1650, column: 23, scope: !4715)
!4717 = !DILocation(line: 1651, column: 5, scope: !4715)
!4718 = !DILocation(line: 1660, column: 15, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4494, file: !2527, line: 1660, column: 8)
!4720 = !DILocation(line: 1660, column: 19, scope: !4719)
!4721 = !DILocation(line: 1660, column: 8, scope: !4494)
!4722 = !DILocation(line: 1661, column: 23, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4719, file: !2527, line: 1660, column: 28)
!4724 = !DILocation(line: 1661, column: 11, scope: !4723)
!4725 = !DILocation(line: 1665, column: 22, scope: !4723)
!4726 = !DILocation(line: 1666, column: 21, scope: !4723)
!4727 = !DILocation(line: 1668, column: 5, scope: !4723)
!4728 = !DILocation(line: 1677, column: 30, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !2527, line: 1676, column: 49)
!4730 = distinct !DILexicalBlock(scope: !4494, file: !2527, line: 1676, column: 8)
!4731 = !DILocation(line: 1677, column: 5, scope: !4729)
!4732 = !DILocation(line: 1680, column: 4, scope: !4494)
!4733 = !DILocation(line: 0, scope: !4675)
!4734 = !DILocation(line: 1597, column: 14, scope: !4496)
!4735 = !DILocation(line: 1699, column: 11, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1699, column: 7)
!4737 = !DILocation(line: 1699, column: 7, scope: !4427)
!4738 = !DILocation(line: 1725, column: 7, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1725, column: 7)
!4740 = !DILocation(line: 1725, column: 12, scope: !4739)
!4741 = !DILocation(line: 1747, column: 13, scope: !4506)
!4742 = !DILocation(line: 1747, column: 7, scope: !4427)
!4743 = !DILocation(line: 1722, column: 24, scope: !4427)
!4744 = !DILocation(line: 1725, column: 7, scope: !4427)
!4745 = !DILocation(line: 1729, column: 7, scope: !4427)
!4746 = !DILocation(line: 1736, column: 13, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1736, column: 7)
!4748 = !DILocation(line: 1735, column: 19, scope: !4427)
!4749 = !DILocation(line: 1736, column: 7, scope: !4427)
!4750 = !DILocation(line: 1748, column: 10, scope: !4505)
!4751 = !DILocation(line: 1750, column: 15, scope: !4504)
!4752 = !DILocation(line: 1750, column: 8, scope: !4505)
!4753 = !DILocation(line: 0, scope: !4503)
!4754 = !DILocation(line: 1756, column: 15, scope: !4512)
!4755 = !DILocation(line: 1756, column: 9, scope: !4503)
!4756 = !DILocation(line: 1758, column: 7, scope: !4508)
!4757 = !DILocation(line: 0, scope: !4508)
!4758 = !DILocation(line: 1758, column: 7, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4508, file: !2527, line: 1758, column: 7)
!4760 = !DILocation(line: 1764, column: 5, scope: !4503)
!4761 = !DILocation(line: 0, scope: !4505)
!4762 = !DILocation(line: 1764, column: 20, scope: !4503)
!4763 = !DILocation(line: 1764, column: 17, scope: !4503)
!4764 = !DILocation(line: 1765, column: 6, scope: !4514)
!4765 = !DILocation(line: 0, scope: !4514)
!4766 = !DILocation(line: 1765, column: 6, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4514, file: !2527, line: 1765, column: 6)
!4768 = distinct !{!4768, !4760, !4769}
!4769 = !DILocation(line: 1766, column: 5, scope: !4503)
!4770 = !DILocation(line: 1773, column: 12, scope: !4519)
!4771 = !DILocation(line: 1773, column: 7, scope: !4427)
!4772 = !DILocation(line: 1773, column: 7, scope: !4519)
!4773 = !DILocation(line: 1774, column: 4, scope: !4517)
!4774 = !DILocation(line: 0, scope: !4517)
!4775 = !DILocation(line: 1774, column: 4, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4517, file: !2527, line: 1774, column: 4)
!4777 = !DILocation(line: 1818, column: 8, scope: !4523)
!4778 = !DILocation(line: 1818, column: 27, scope: !4523)
!4779 = !DILocation(line: 1818, column: 25, scope: !4523)
!4780 = !DILocation(line: 1818, column: 8, scope: !4524)
!4781 = !DILocation(line: 1819, column: 5, scope: !4521)
!4782 = !DILocation(line: 0, scope: !4521)
!4783 = !DILocation(line: 1819, column: 5, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4521, file: !2527, line: 1819, column: 5)
!4785 = !DILocation(line: 1822, column: 14, scope: !4529)
!4786 = !DILocation(line: 1822, column: 8, scope: !4524)
!4787 = !DILocation(line: 1823, column: 5, scope: !4527)
!4788 = !DILocation(line: 0, scope: !4527)
!4789 = !DILocation(line: 1823, column: 5, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4527, file: !2527, line: 1823, column: 5)
!4791 = !DILocation(line: 1826, column: 20, scope: !4524)
!4792 = !DILocation(line: 1827, column: 4, scope: !4524)
!4793 = !DILocation(line: 0, scope: !4524)
!4794 = !DILocation(line: 1827, column: 21, scope: !4524)
!4795 = !DILocation(line: 1827, column: 18, scope: !4524)
!4796 = !DILocation(line: 1828, column: 5, scope: !4531)
!4797 = !DILocation(line: 0, scope: !4531)
!4798 = !DILocation(line: 1828, column: 5, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4531, file: !2527, line: 1828, column: 5)
!4800 = distinct !{!4800, !4792, !4801}
!4801 = !DILocation(line: 1829, column: 4, scope: !4524)
!4802 = !DILocation(line: 1831, column: 4, scope: !4534)
!4803 = !DILocation(line: 0, scope: !4534)
!4804 = !DILocation(line: 1831, column: 4, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4534, file: !2527, line: 1831, column: 4)
!4806 = !DILocation(line: 1835, column: 16, scope: !4427)
!4807 = !DILocation(line: 1835, column: 3, scope: !4427)
!4808 = !DILocation(line: 1836, column: 4, scope: !4536)
!4809 = !DILocation(line: 0, scope: !4536)
!4810 = !DILocation(line: 1836, column: 4, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4536, file: !2527, line: 1836, column: 4)
!4812 = !DILocation(line: 1837, column: 4, scope: !4537)
!4813 = distinct !{!4813, !4807, !4814}
!4814 = !DILocation(line: 1838, column: 3, scope: !4427)
!4815 = !DILocation(line: 1844, column: 1, scope: !4400)
!4816 = distinct !DISubprogram(name: "extract_conversion", scope: !2527, file: !2527, line: 642, type: !4817, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4819)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!118, !4473, !118}
!4819 = !{!4820, !4821}
!4820 = !DILocalVariable(name: "conv", arg: 1, scope: !4816, file: !2527, line: 642, type: !4473)
!4821 = !DILocalVariable(name: "sp", arg: 2, scope: !4816, file: !2527, line: 643, type: !118)
!4822 = !DILocation(line: 0, scope: !4816)
!4823 = !DILocation(line: 645, column: 10, scope: !4816)
!4824 = !DILocation(line: 653, column: 2, scope: !4816)
!4825 = !DILocation(line: 654, column: 6, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4816, file: !2527, line: 654, column: 6)
!4827 = !DILocation(line: 654, column: 10, scope: !4826)
!4828 = !DILocation(line: 654, column: 6, scope: !4816)
!4829 = !DILocation(line: 655, column: 24, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4826, file: !2527, line: 654, column: 18)
!4831 = !DILocation(line: 655, column: 19, scope: !4830)
!4832 = !DILocation(line: 656, column: 3, scope: !4830)
!4833 = !DILocation(line: 659, column: 7, scope: !4816)
!4834 = !DILocation(line: 660, column: 7, scope: !4816)
!4835 = !DILocation(line: 661, column: 7, scope: !4816)
!4836 = !DILocation(line: 662, column: 7, scope: !4816)
!4837 = !DILocation(line: 663, column: 7, scope: !4816)
!4838 = !DILocation(line: 665, column: 2, scope: !4816)
!4839 = !DILocation(line: 666, column: 1, scope: !4816)
!4840 = distinct !DISubprogram(name: "outs", scope: !2527, file: !2527, line: 1319, type: !4841, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4843)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!107, !3555, !106, !118, !118}
!4843 = !{!4844, !4845, !4846, !4847, !4848, !4849}
!4844 = !DILocalVariable(name: "out", arg: 1, scope: !4840, file: !2527, line: 1319, type: !3555)
!4845 = !DILocalVariable(name: "ctx", arg: 2, scope: !4840, file: !2527, line: 1320, type: !106)
!4846 = !DILocalVariable(name: "sp", arg: 3, scope: !4840, file: !2527, line: 1321, type: !118)
!4847 = !DILocalVariable(name: "ep", arg: 4, scope: !4840, file: !2527, line: 1322, type: !118)
!4848 = !DILocalVariable(name: "count", scope: !4840, file: !2527, line: 1324, type: !185)
!4849 = !DILocalVariable(name: "rc", scope: !4850, file: !2527, line: 1327, type: !107)
!4850 = distinct !DILexicalBlock(scope: !4840, file: !2527, line: 1326, column: 45)
!4851 = !DILocation(line: 0, scope: !4840)
!4852 = !DILocation(line: 1326, column: 2, scope: !4840)
!4853 = !DILocation(line: 1324, column: 9, scope: !4840)
!4854 = !DILocation(line: 1326, column: 13, scope: !4840)
!4855 = !DILocation(line: 1326, column: 19, scope: !4840)
!4856 = !DILocation(line: 1327, column: 21, scope: !4850)
!4857 = !DILocation(line: 1326, column: 36, scope: !4840)
!4858 = !DILocation(line: 1326, column: 39, scope: !4840)
!4859 = !DILocation(line: 1327, column: 24, scope: !4850)
!4860 = !DILocation(line: 1327, column: 16, scope: !4850)
!4861 = !DILocation(line: 1327, column: 12, scope: !4850)
!4862 = !DILocation(line: 0, scope: !4850)
!4863 = !DILocation(line: 1329, column: 10, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4850, file: !2527, line: 1329, column: 7)
!4865 = !DILocation(line: 1329, column: 7, scope: !4850)
!4866 = distinct !{!4866, !4852, !4867}
!4867 = !DILocation(line: 1333, column: 2, scope: !4840)
!4868 = !DILocation(line: 1336, column: 1, scope: !4840)
!4869 = distinct !DISubprogram(name: "encode_uint", scope: !2527, file: !2527, line: 788, type: !4870, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4872)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{!193, !2549, !4473, !193, !118}
!4872 = !{!4873, !4874, !4875, !4876, !4877, !4878, !4880, !4881}
!4873 = !DILocalVariable(name: "value", arg: 1, scope: !4869, file: !2527, line: 788, type: !2549)
!4874 = !DILocalVariable(name: "conv", arg: 2, scope: !4869, file: !2527, line: 789, type: !4473)
!4875 = !DILocalVariable(name: "bps", arg: 3, scope: !4869, file: !2527, line: 790, type: !193)
!4876 = !DILocalVariable(name: "bpe", arg: 4, scope: !4869, file: !2527, line: 791, type: !118)
!4877 = !DILocalVariable(name: "upcase", scope: !4869, file: !2527, line: 793, type: !145)
!4878 = !DILocalVariable(name: "radix", scope: !4869, file: !2527, line: 794, type: !4879)
!4879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4880 = !DILocalVariable(name: "bp", scope: !4869, file: !2527, line: 795, type: !193)
!4881 = !DILocalVariable(name: "lsv", scope: !4882, file: !2527, line: 798, type: !32)
!4882 = distinct !DILexicalBlock(scope: !4869, file: !2527, line: 797, column: 5)
!4883 = !DILocation(line: 0, scope: !4869)
!4884 = !DILocation(line: 793, column: 35, scope: !4869)
!4885 = !DILocation(line: 793, column: 24, scope: !4869)
!4886 = !DILocation(line: 793, column: 16, scope: !4869)
!4887 = !DILocation(line: 794, column: 29, scope: !4869)
!4888 = !DILocation(line: 795, column: 24, scope: !4869)
!4889 = !DILocation(line: 795, column: 17, scope: !4869)
!4890 = !DILocation(line: 797, column: 2, scope: !4869)
!4891 = !DILocation(line: 802, column: 9, scope: !4882)
!4892 = !DILocation(line: 798, column: 22, scope: !4882)
!4893 = !DILocation(line: 0, scope: !4882)
!4894 = !DILocation(line: 800, column: 16, scope: !4882)
!4895 = !DILocation(line: 800, column: 11, scope: !4882)
!4896 = !DILocation(line: 800, column: 4, scope: !4882)
!4897 = !DILocation(line: 800, column: 9, scope: !4882)
!4898 = !DILocation(line: 803, column: 18, scope: !4869)
!4899 = !DILocation(line: 803, column: 24, scope: !4869)
!4900 = !DILocation(line: 803, column: 2, scope: !4882)
!4901 = distinct !{!4901, !4890, !4902}
!4902 = !DILocation(line: 803, column: 37, scope: !4869)
!4903 = !DILocation(line: 808, column: 12, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4869, file: !2527, line: 808, column: 6)
!4905 = !DILocation(line: 808, column: 6, scope: !4869)
!4906 = !DILocation(line: 809, column: 7, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4904, file: !2527, line: 808, column: 23)
!4908 = !DILocation(line: 813, column: 3, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !2527, line: 811, column: 27)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !2527, line: 811, column: 14)
!4911 = distinct !DILexicalBlock(scope: !4907, file: !2527, line: 809, column: 7)
!4912 = !DILocation(line: 0, scope: !4911)
!4913 = !DILocation(line: 818, column: 2, scope: !4869)
!4914 = distinct !DISubprogram(name: "store_count", scope: !2527, file: !2527, line: 1280, type: !4915, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4919)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{null, !4917, !106, !107}
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 32)
!4918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4440)
!4919 = !{!4920, !4921, !4922}
!4920 = !DILocalVariable(name: "conv", arg: 1, scope: !4914, file: !2527, line: 1280, type: !4917)
!4921 = !DILocalVariable(name: "dp", arg: 2, scope: !4914, file: !2527, line: 1281, type: !106)
!4922 = !DILocalVariable(name: "count", arg: 3, scope: !4914, file: !2527, line: 1282, type: !107)
!4923 = !DILocation(line: 0, scope: !4914)
!4924 = !DILocation(line: 1284, column: 38, scope: !4914)
!4925 = !DILocation(line: 1284, column: 2, scope: !4914)
!4926 = !DILocation(line: 1286, column: 4, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4914, file: !2527, line: 1284, column: 50)
!4928 = !DILocation(line: 1286, column: 14, scope: !4927)
!4929 = !DILocation(line: 1287, column: 3, scope: !4927)
!4930 = !DILocation(line: 1289, column: 24, scope: !4927)
!4931 = !DILocation(line: 1289, column: 22, scope: !4927)
!4932 = !DILocation(line: 1290, column: 3, scope: !4927)
!4933 = !DILocation(line: 1292, column: 18, scope: !4927)
!4934 = !DILocation(line: 1292, column: 4, scope: !4927)
!4935 = !DILocation(line: 1292, column: 16, scope: !4927)
!4936 = !DILocation(line: 1293, column: 3, scope: !4927)
!4937 = !DILocation(line: 1295, column: 4, scope: !4927)
!4938 = !DILocation(line: 1295, column: 15, scope: !4927)
!4939 = !DILocation(line: 1296, column: 3, scope: !4927)
!4940 = !DILocation(line: 1298, column: 22, scope: !4927)
!4941 = !DILocation(line: 1298, column: 4, scope: !4927)
!4942 = !DILocation(line: 1298, column: 20, scope: !4927)
!4943 = !DILocation(line: 1299, column: 3, scope: !4927)
!4944 = !DILocation(line: 1301, column: 21, scope: !4927)
!4945 = !DILocation(line: 1301, column: 4, scope: !4927)
!4946 = !DILocation(line: 1301, column: 19, scope: !4927)
!4947 = !DILocation(line: 1302, column: 3, scope: !4927)
!4948 = !DILocation(line: 1304, column: 4, scope: !4927)
!4949 = !DILocation(line: 1304, column: 17, scope: !4927)
!4950 = !DILocation(line: 1305, column: 3, scope: !4927)
!4951 = !DILocation(line: 1307, column: 4, scope: !4927)
!4952 = !DILocation(line: 1307, column: 20, scope: !4927)
!4953 = !DILocation(line: 1308, column: 3, scope: !4927)
!4954 = !DILocation(line: 1316, column: 1, scope: !4914)
!4955 = distinct !DISubprogram(name: "isupper", scope: !4956, file: !4956, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4957)
!4956 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4957 = !{!4958}
!4958 = !DILocalVariable(name: "a", arg: 1, scope: !4955, file: !4956, line: 16, type: !107)
!4959 = !DILocation(line: 0, scope: !4955)
!4960 = !DILocation(line: 18, column: 29, scope: !4955)
!4961 = !DILocation(line: 18, column: 45, scope: !4955)
!4962 = !DILocation(line: 18, column: 2, scope: !4955)
!4963 = distinct !DISubprogram(name: "conversion_radix", scope: !2527, file: !2527, line: 761, type: !4964, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4966)
!4964 = !DISubroutineType(types: !4965)
!4965 = !{!185, !120}
!4966 = !{!4967}
!4967 = !DILocalVariable(name: "specifier", arg: 1, scope: !4963, file: !2527, line: 761, type: !120)
!4968 = !DILocation(line: 0, scope: !4963)
!4969 = !DILocation(line: 763, column: 2, scope: !4963)
!4970 = !DILocation(line: 770, column: 3, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4963, file: !2527, line: 763, column: 21)
!4972 = !DILocation(line: 774, column: 3, scope: !4971)
!4973 = !DILocation(line: 0, scope: !4971)
!4974 = !DILocation(line: 776, column: 1, scope: !4963)
!4975 = distinct !DISubprogram(name: "extract_flags", scope: !2527, file: !2527, line: 339, type: !4817, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4976)
!4976 = !{!4977, !4978, !4979}
!4977 = !DILocalVariable(name: "conv", arg: 1, scope: !4975, file: !2527, line: 339, type: !4473)
!4978 = !DILocalVariable(name: "sp", arg: 2, scope: !4975, file: !2527, line: 340, type: !118)
!4979 = !DILocalVariable(name: "loop", scope: !4975, file: !2527, line: 342, type: !145)
!4980 = !DILocation(line: 0, scope: !4975)
!4981 = !DILocation(line: 344, column: 2, scope: !4975)
!4982 = !DILocation(line: 345, column: 11, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4975, file: !2527, line: 344, column: 5)
!4984 = !DILocation(line: 345, column: 3, scope: !4983)
!4985 = !DILocation(line: 351, column: 4, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4983, file: !2527, line: 345, column: 16)
!4987 = !DILocation(line: 354, column: 4, scope: !4986)
!4988 = !DILocation(line: 357, column: 4, scope: !4986)
!4989 = !DILocation(line: 360, column: 4, scope: !4986)
!4990 = !DILocation(line: 0, scope: !4986)
!4991 = !DILocation(line: 370, column: 12, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4975, file: !2527, line: 370, column: 6)
!4993 = !DILocation(line: 370, column: 22, scope: !4992)
!4994 = !DILocation(line: 371, column: 19, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4992, file: !2527, line: 370, column: 42)
!4996 = !DILocation(line: 372, column: 2, scope: !4995)
!4997 = !DILocation(line: 376, column: 2, scope: !4975)
!4998 = distinct !DISubprogram(name: "extract_width", scope: !2527, file: !2527, line: 388, type: !4817, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4999)
!4999 = !{!5000, !5001, !5002, !5003}
!5000 = !DILocalVariable(name: "conv", arg: 1, scope: !4998, file: !2527, line: 388, type: !4473)
!5001 = !DILocalVariable(name: "sp", arg: 2, scope: !4998, file: !2527, line: 389, type: !118)
!5002 = !DILocalVariable(name: "wp", scope: !4998, file: !2527, line: 398, type: !118)
!5003 = !DILocalVariable(name: "width", scope: !4998, file: !2527, line: 399, type: !185)
!5004 = !DILocation(line: 0, scope: !4998)
!5005 = !DILocation(line: 391, column: 8, scope: !4998)
!5006 = !DILocation(line: 391, column: 22, scope: !4998)
!5007 = !DILocation(line: 393, column: 6, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4998, file: !2527, line: 393, column: 6)
!5009 = !DILocation(line: 393, column: 10, scope: !5008)
!5010 = !DILocation(line: 393, column: 6, scope: !4998)
!5011 = !DILocation(line: 394, column: 20, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5008, file: !2527, line: 393, column: 18)
!5013 = !DILocation(line: 395, column: 10, scope: !5012)
!5014 = !DILocation(line: 395, column: 3, scope: !5012)
!5015 = !DILocation(line: 399, column: 17, scope: !4998)
!5016 = !DILocation(line: 401, column: 6, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4998, file: !2527, line: 401, column: 6)
!5018 = !DILocation(line: 401, column: 9, scope: !5017)
!5019 = !DILocation(line: 401, column: 6, scope: !4998)
!5020 = !DILocation(line: 402, column: 23, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5017, file: !2527, line: 401, column: 16)
!5022 = !DILocation(line: 403, column: 9, scope: !5021)
!5023 = !DILocation(line: 403, column: 21, scope: !5021)
!5024 = !DILocation(line: 405, column: 11, scope: !5021)
!5025 = !DILocation(line: 404, column: 21, scope: !5021)
!5026 = !DILocation(line: 406, column: 2, scope: !5021)
!5027 = !DILocation(line: 409, column: 1, scope: !4998)
!5028 = distinct !DISubprogram(name: "extract_prec", scope: !2527, file: !2527, line: 420, type: !4817, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5029)
!5029 = !{!5030, !5031, !5032}
!5030 = !DILocalVariable(name: "conv", arg: 1, scope: !5028, file: !2527, line: 420, type: !4473)
!5031 = !DILocalVariable(name: "sp", arg: 2, scope: !5028, file: !2527, line: 421, type: !118)
!5032 = !DILocalVariable(name: "prec", scope: !5028, file: !2527, line: 435, type: !185)
!5033 = !DILocation(line: 0, scope: !5028)
!5034 = !DILocation(line: 423, column: 24, scope: !5028)
!5035 = !DILocation(line: 423, column: 28, scope: !5028)
!5036 = !DILocation(line: 423, column: 8, scope: !5028)
!5037 = !DILocation(line: 423, column: 21, scope: !5028)
!5038 = !DILocation(line: 425, column: 6, scope: !5028)
!5039 = !DILocation(line: 428, column: 2, scope: !5028)
!5040 = !DILocation(line: 430, column: 6, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5028, file: !2527, line: 430, column: 6)
!5042 = !DILocation(line: 430, column: 10, scope: !5041)
!5043 = !DILocation(line: 430, column: 6, scope: !5028)
!5044 = !DILocation(line: 431, column: 19, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !2527, line: 430, column: 18)
!5046 = !DILocation(line: 432, column: 10, scope: !5045)
!5047 = !DILocation(line: 432, column: 3, scope: !5045)
!5048 = !DILocation(line: 435, column: 16, scope: !5028)
!5049 = !DILocation(line: 437, column: 8, scope: !5028)
!5050 = !DILocation(line: 437, column: 19, scope: !5028)
!5051 = !DILocation(line: 439, column: 10, scope: !5028)
!5052 = !DILocation(line: 438, column: 20, scope: !5028)
!5053 = !DILocation(line: 441, column: 9, scope: !5028)
!5054 = !DILocation(line: 442, column: 1, scope: !5028)
!5055 = distinct !DISubprogram(name: "extract_length", scope: !2527, file: !2527, line: 453, type: !4817, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5056)
!5056 = !{!5057, !5058}
!5057 = !DILocalVariable(name: "conv", arg: 1, scope: !5055, file: !2527, line: 453, type: !4473)
!5058 = !DILocalVariable(name: "sp", arg: 2, scope: !5055, file: !2527, line: 454, type: !118)
!5059 = !DILocation(line: 0, scope: !5055)
!5060 = !DILocation(line: 456, column: 10, scope: !5055)
!5061 = !DILocation(line: 456, column: 2, scope: !5055)
!5062 = !DILocation(line: 458, column: 8, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !2527, line: 458, column: 7)
!5064 = distinct !DILexicalBlock(scope: !5055, file: !2527, line: 456, column: 15)
!5065 = !DILocation(line: 458, column: 7, scope: !5063)
!5066 = !DILocation(line: 458, column: 13, scope: !5063)
!5067 = !DILocation(line: 0, scope: !5063)
!5068 = !DILocation(line: 458, column: 7, scope: !5064)
!5069 = !DILocation(line: 459, column: 21, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5063, file: !2527, line: 458, column: 21)
!5071 = !DILocation(line: 460, column: 4, scope: !5070)
!5072 = !DILocation(line: 461, column: 3, scope: !5070)
!5073 = !DILocation(line: 462, column: 21, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5063, file: !2527, line: 461, column: 10)
!5075 = !DILocation(line: 466, column: 8, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5064, file: !2527, line: 466, column: 7)
!5077 = !DILocation(line: 466, column: 7, scope: !5076)
!5078 = !DILocation(line: 466, column: 13, scope: !5076)
!5079 = !DILocation(line: 0, scope: !5076)
!5080 = !DILocation(line: 466, column: 7, scope: !5064)
!5081 = !DILocation(line: 467, column: 21, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5076, file: !2527, line: 466, column: 21)
!5083 = !DILocation(line: 468, column: 4, scope: !5082)
!5084 = !DILocation(line: 469, column: 3, scope: !5082)
!5085 = !DILocation(line: 470, column: 21, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5076, file: !2527, line: 469, column: 10)
!5087 = !DILocation(line: 474, column: 9, scope: !5064)
!5088 = !DILocation(line: 474, column: 20, scope: !5064)
!5089 = !DILocation(line: 475, column: 3, scope: !5064)
!5090 = !DILocation(line: 476, column: 3, scope: !5064)
!5091 = !DILocation(line: 478, column: 9, scope: !5064)
!5092 = !DILocation(line: 478, column: 20, scope: !5064)
!5093 = !DILocation(line: 479, column: 3, scope: !5064)
!5094 = !DILocation(line: 480, column: 3, scope: !5064)
!5095 = !DILocation(line: 482, column: 9, scope: !5064)
!5096 = !DILocation(line: 482, column: 20, scope: !5064)
!5097 = !DILocation(line: 483, column: 3, scope: !5064)
!5098 = !DILocation(line: 484, column: 3, scope: !5064)
!5099 = !DILocation(line: 486, column: 9, scope: !5064)
!5100 = !DILocation(line: 486, column: 20, scope: !5064)
!5101 = !DILocation(line: 487, column: 3, scope: !5064)
!5102 = !DILocation(line: 492, column: 21, scope: !5064)
!5103 = !DILocation(line: 493, column: 3, scope: !5064)
!5104 = !DILocation(line: 495, column: 9, scope: !5064)
!5105 = !DILocation(line: 495, column: 20, scope: !5064)
!5106 = !DILocation(line: 496, column: 3, scope: !5064)
!5107 = !DILocation(line: 498, column: 2, scope: !5055)
!5108 = distinct !DISubprogram(name: "extract_specifier", scope: !2527, file: !2527, line: 513, type: !4817, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5109)
!5109 = !{!5110, !5111, !5112, !5113}
!5110 = !DILocalVariable(name: "conv", arg: 1, scope: !5108, file: !2527, line: 513, type: !4473)
!5111 = !DILocalVariable(name: "sp", arg: 2, scope: !5108, file: !2527, line: 514, type: !118)
!5112 = !DILocalVariable(name: "unsupported", scope: !5108, file: !2527, line: 516, type: !145)
!5113 = !DILabel(scope: !5114, name: "int_conv", file: !2527, line: 526)
!5114 = distinct !DILexicalBlock(scope: !5108, file: !2527, line: 520, column: 27)
!5115 = !DILocation(line: 0, scope: !5108)
!5116 = !DILocation(line: 518, column: 20, scope: !5108)
!5117 = !DILocation(line: 518, column: 8, scope: !5108)
!5118 = !DILocation(line: 518, column: 18, scope: !5108)
!5119 = !DILocation(line: 520, column: 2, scope: !5108)
!5120 = !DILocation(line: 525, column: 3, scope: !5114)
!5121 = !DILocation(line: 0, scope: !5114)
!5122 = !DILocation(line: 526, column: 1, scope: !5114)
!5123 = !DILocation(line: 528, column: 24, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5114, file: !2527, line: 528, column: 7)
!5125 = !DILocation(line: 528, column: 7, scope: !5114)
!5126 = !DILocation(line: 535, column: 23, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5114, file: !2527, line: 535, column: 7)
!5128 = !DILocation(line: 535, column: 7, scope: !5114)
!5129 = !DILocation(line: 536, column: 36, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5127, file: !2527, line: 535, column: 31)
!5131 = !DILocation(line: 537, column: 3, scope: !5130)
!5132 = !DILocation(line: 570, column: 9, scope: !5114)
!5133 = !DILocation(line: 570, column: 23, scope: !5114)
!5134 = !DILocation(line: 575, column: 4, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !2527, line: 573, column: 48)
!5136 = distinct !DILexicalBlock(scope: !5114, file: !2527, line: 573, column: 7)
!5137 = !DILocation(line: 603, column: 9, scope: !5114)
!5138 = !DILocation(line: 603, column: 23, scope: !5114)
!5139 = !DILocation(line: 605, column: 24, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5114, file: !2527, line: 605, column: 7)
!5141 = !DILocation(line: 605, column: 7, scope: !5114)
!5142 = !DILocation(line: 612, column: 9, scope: !5114)
!5143 = !DILocation(line: 612, column: 23, scope: !5114)
!5144 = !DILocation(line: 619, column: 24, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5114, file: !2527, line: 619, column: 7)
!5146 = !DILocation(line: 619, column: 7, scope: !5114)
!5147 = !DILocation(line: 625, column: 9, scope: !5114)
!5148 = !DILocation(line: 625, column: 17, scope: !5114)
!5149 = !DILocation(line: 626, column: 3, scope: !5114)
!5150 = !DILocation(line: 629, column: 20, scope: !5108)
!5151 = !DILocation(line: 629, column: 8, scope: !5108)
!5152 = !DILocation(line: 518, column: 23, scope: !5108)
!5153 = !DILocation(line: 631, column: 2, scope: !5108)
!5154 = distinct !DISubprogram(name: "extract_decimal", scope: !2527, file: !2527, line: 318, type: !5155, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5157)
!5155 = !DISubroutineType(types: !5156)
!5156 = !{!185, !184}
!5157 = !{!5158, !5159, !5160}
!5158 = !DILocalVariable(name: "str", arg: 1, scope: !5154, file: !2527, line: 318, type: !184)
!5159 = !DILocalVariable(name: "sp", scope: !5154, file: !2527, line: 320, type: !118)
!5160 = !DILocalVariable(name: "val", scope: !5154, file: !2527, line: 321, type: !185)
!5161 = !DILocation(line: 0, scope: !5154)
!5162 = !DILocation(line: 320, column: 19, scope: !5154)
!5163 = !DILocation(line: 323, column: 37, scope: !5154)
!5164 = !DILocation(line: 323, column: 17, scope: !5154)
!5165 = !DILocation(line: 323, column: 9, scope: !5154)
!5166 = !DILocation(line: 323, column: 2, scope: !5154)
!5167 = !DILocation(line: 324, column: 13, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5154, file: !2527, line: 323, column: 43)
!5169 = !DILocation(line: 324, column: 24, scope: !5168)
!5170 = !DILocation(line: 324, column: 19, scope: !5168)
!5171 = !DILocation(line: 324, column: 27, scope: !5168)
!5172 = distinct !{!5172, !5166, !5173}
!5173 = !DILocation(line: 325, column: 2, scope: !5154)
!5174 = !DILocation(line: 326, column: 7, scope: !5154)
!5175 = !DILocation(line: 327, column: 2, scope: !5154)
!5176 = distinct !DISubprogram(name: "isdigit", scope: !4956, file: !4956, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5177)
!5177 = !{!5178}
!5178 = !DILocalVariable(name: "a", arg: 1, scope: !5176, file: !4956, line: 43, type: !107)
!5179 = !DILocation(line: 0, scope: !5176)
!5180 = !DILocation(line: 45, column: 29, scope: !5176)
!5181 = !DILocation(line: 45, column: 45, scope: !5176)
!5182 = !DILocation(line: 45, column: 2, scope: !5176)
!5183 = distinct !DISubprogram(name: "assert_post_action", scope: !5184, file: !5184, line: 26, type: !5185, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !5187)
!5184 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5185 = !DISubroutineType(types: !5186)
!5186 = !{null, !118, !32}
!5187 = !{!5188, !5189}
!5188 = !DILocalVariable(name: "file", arg: 1, scope: !5183, file: !5184, line: 26, type: !118)
!5189 = !DILocalVariable(name: "line", arg: 2, scope: !5183, file: !5184, line: 26, type: !32)
!5190 = !DILocation(line: 0, scope: !5183)
!5191 = !DILocation(line: 43, column: 2, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5183, file: !5184, line: 43, column: 2)
!5193 = !{i64 2152226948, i64 2152226964, i64 2152226990, i64 2152227018, i64 2152227038}
!5194 = !DILocation(line: 44, column: 1, scope: !5183)
!5195 = distinct !DISubprogram(name: "assert_print", scope: !5184, file: !5184, line: 46, type: !4165, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !5196)
!5196 = !{!5197, !5198}
!5197 = !DILocalVariable(name: "fmt", arg: 1, scope: !5195, file: !5184, line: 46, type: !118)
!5198 = !DILocalVariable(name: "ap", scope: !5195, file: !5184, line: 48, type: !5199)
!5199 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3175, line: 99, baseType: !5200)
!5200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3175, line: 40, baseType: !5201)
!5201 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5184, baseType: !5202)
!5202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5203)
!5203 = !{!5204}
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5202, file: !5184, line: 48, baseType: !106, size: 32)
!5205 = !DILocation(line: 0, scope: !5195)
!5206 = !DILocation(line: 48, column: 2, scope: !5195)
!5207 = !DILocation(line: 48, column: 10, scope: !5195)
!5208 = !DILocation(line: 50, column: 2, scope: !5195)
!5209 = !DILocation(line: 52, column: 2, scope: !5195)
!5210 = !DILocation(line: 54, column: 2, scope: !5195)
!5211 = !DILocation(line: 55, column: 1, scope: !5195)
!5212 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5213, file: !5213, line: 9, type: !3055, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !2175)
!5213 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!5214 = !DILocation(line: 11, column: 1, scope: !5212)
!5215 = !{i64 2147565909, i64 2147565952, i64 2147565992}
!5216 = !DILocation(line: 12, column: 1, scope: !5212)
!5217 = !{i64 2147570136, i64 2147570179, i64 2147570219}
!5218 = !DILocation(line: 13, column: 1, scope: !5212)
!5219 = !{i64 2147570345, i64 2147570388, i64 2147570428}
!5220 = !DILocation(line: 14, column: 1, scope: !5212)
!5221 = !{i64 2147570514, i64 2147570557, i64 2147570597}
!5222 = !DILocation(line: 15, column: 1, scope: !5212)
!5223 = !{i64 2147570677, i64 2147570720, i64 2147570760}
!5224 = !DILocation(line: 16, column: 1, scope: !5212)
!5225 = !{i64 2147570861, i64 2147570904, i64 2147570944}
!5226 = !DILocation(line: 17, column: 1, scope: !5212)
!5227 = !{i64 2147571040, i64 2147571083, i64 2147571123}
!5228 = !DILocation(line: 18, column: 1, scope: !5212)
!5229 = !{i64 2147571282, i64 2147571325, i64 2147571365}
!5230 = !DILocation(line: 19, column: 1, scope: !5212)
!5231 = !{i64 2147571517, i64 2147571560, i64 2147571600}
!5232 = !DILocation(line: 20, column: 1, scope: !5212)
!5233 = !{i64 2147571703, i64 2147571746, i64 2147571786}
!5234 = !DILocation(line: 21, column: 1, scope: !5212)
!5235 = !{i64 2147571919, i64 2147571962, i64 2147572002}
!5236 = !DILocation(line: 22, column: 1, scope: !5212)
!5237 = !{i64 2147572122, i64 2147572165, i64 2147572205}
!5238 = !DILocation(line: 23, column: 1, scope: !5212)
!5239 = !{i64 2147572325, i64 2147572368, i64 2147572408}
!5240 = !DILocation(line: 24, column: 1, scope: !5212)
!5241 = !{i64 2147572500, i64 2147572543, i64 2147572583}
!5242 = !DILocation(line: 25, column: 1, scope: !5212)
!5243 = !{i64 2147572708, i64 2147572751, i64 2147572791}
!5244 = !DILocation(line: 26, column: 1, scope: !5212)
!5245 = !{i64 2147572912, i64 2147572955, i64 2147572995}
!5246 = !DILocation(line: 27, column: 1, scope: !5212)
!5247 = !{i64 2147573105, i64 2147573148, i64 2147573188}
!5248 = !DILocation(line: 28, column: 1, scope: !5212)
!5249 = !{i64 2147573307, i64 2147573350, i64 2147573390}
!5250 = !DILocation(line: 29, column: 1, scope: !5212)
!5251 = !{i64 2147573506, i64 2147573549, i64 2147573589}
!5252 = !DILocation(line: 30, column: 1, scope: !5212)
!5253 = !{i64 2147573733, i64 2147573776, i64 2147573816}
!5254 = !DILocation(line: 31, column: 1, scope: !5212)
!5255 = !{i64 2147573935, i64 2147573978, i64 2147574018}
!5256 = !DILocation(line: 32, column: 1, scope: !5212)
!5257 = !{i64 2147574150, i64 2147574193, i64 2147574233}
!5258 = !DILocation(line: 33, column: 1, scope: !5212)
!5259 = !{i64 2147574367, i64 2147574410, i64 2147574450}
!5260 = !DILocation(line: 34, column: 1, scope: !5212)
!5261 = !{i64 2147574539, i64 2147574582, i64 2147574622}
!5262 = !DILocation(line: 35, column: 1, scope: !5212)
!5263 = !{i64 2147574741, i64 2147574784, i64 2147574824}
!5264 = !DILocation(line: 36, column: 1, scope: !5212)
!5265 = !{i64 2147574967, i64 2147575010, i64 2147575050}
!5266 = !DILocation(line: 37, column: 1, scope: !5212)
!5267 = !{i64 2147575166, i64 2147575209, i64 2147575249}
!5268 = !DILocation(line: 38, column: 1, scope: !5212)
!5269 = !{i64 2147575341, i64 2147575384, i64 2147575424}
!5270 = !DILocation(line: 39, column: 1, scope: !5212)
!5271 = !{i64 2147575594, i64 2147575637, i64 2147575677}
!5272 = !DILocation(line: 40, column: 1, scope: !5212)
!5273 = !{i64 2147575832, i64 2147575875, i64 2147575915}
!5274 = !DILocation(line: 41, column: 1, scope: !5212)
!5275 = !{i64 2147576067, i64 2147576110, i64 2147576150}
!5276 = !DILocation(line: 42, column: 1, scope: !5212)
!5277 = !{i64 2147576299, i64 2147576342, i64 2147576382}
!5278 = !DILocation(line: 43, column: 1, scope: !5212)
!5279 = !{i64 2147576525, i64 2147576568, i64 2147576608}
!5280 = !DILocation(line: 44, column: 1, scope: !5212)
!5281 = !{i64 2147576784, i64 2147576827, i64 2147576867}
!5282 = !DILocation(line: 45, column: 1, scope: !5212)
!5283 = !{i64 2147577010, i64 2147577053, i64 2147577093}
!5284 = !DILocation(line: 46, column: 1, scope: !5212)
!5285 = !{i64 2147577251, i64 2147577294, i64 2147577334}
!5286 = !DILocation(line: 47, column: 1, scope: !5212)
!5287 = !{i64 2147577495, i64 2147577538, i64 2147577578}
!5288 = !DILocation(line: 48, column: 1, scope: !5212)
!5289 = !{i64 2147577736, i64 2147577779, i64 2147577819}
!5290 = !DILocation(line: 49, column: 1, scope: !5212)
!5291 = !{i64 2147577971, i64 2147578014, i64 2147578054}
!5292 = !DILocation(line: 50, column: 1, scope: !5212)
!5293 = !{i64 2147578197, i64 2147578240, i64 2147578280}
!5294 = !DILocation(line: 51, column: 1, scope: !5212)
!5295 = !{i64 2147578423, i64 2147578466, i64 2147578506}
!5296 = !DILocation(line: 52, column: 1, scope: !5212)
!5297 = !{i64 2147578667, i64 2147578710, i64 2147578750}
!5298 = !DILocation(line: 53, column: 1, scope: !5212)
!5299 = !{i64 2147582966, i64 2147583009, i64 2147583049}
!5300 = !DILocation(line: 54, column: 1, scope: !5212)
!5301 = !{i64 2147583240, i64 2147583283, i64 2147583323}
!5302 = !DILocation(line: 55, column: 1, scope: !5212)
!5303 = !{i64 2147583478, i64 2147583521, i64 2147583561}
!5304 = !DILocation(line: 56, column: 1, scope: !5212)
!5305 = !{i64 2147583722, i64 2147583765, i64 2147583805}
!5306 = !DILocation(line: 57, column: 1, scope: !5212)
!5307 = !{i64 2147583972, i64 2147584015, i64 2147584055}
!5308 = !DILocation(line: 58, column: 1, scope: !5212)
!5309 = !{i64 2147584219, i64 2147584262, i64 2147584302}
!5310 = !DILocation(line: 59, column: 1, scope: !5212)
!5311 = !{i64 2147584454, i64 2147584497, i64 2147584537}
!5312 = !DILocation(line: 60, column: 1, scope: !5212)
!5313 = !{i64 2147584689, i64 2147584732, i64 2147584772}
!5314 = !DILocation(line: 61, column: 1, scope: !5212)
!5315 = !{i64 2147584924, i64 2147584967, i64 2147585007}
!5316 = !DILocation(line: 62, column: 1, scope: !5212)
!5317 = !{i64 2147585162, i64 2147585205, i64 2147585245}
!5318 = !DILocation(line: 63, column: 1, scope: !5212)
!5319 = !{i64 2147585403, i64 2147585446, i64 2147585486}
!5320 = !DILocation(line: 64, column: 1, scope: !5212)
!5321 = !{i64 2147585662, i64 2147585705, i64 2147585745}
!5322 = !DILocation(line: 65, column: 1, scope: !5212)
!5323 = !{i64 2147585942, i64 2147585985, i64 2147586025}
!5324 = !DILocation(line: 66, column: 1, scope: !5212)
!5325 = !{i64 2147586171, i64 2147586214, i64 2147586254}
!5326 = !DILocation(line: 67, column: 1, scope: !5212)
!5327 = !{i64 2147586379, i64 2147586422, i64 2147586462}
!5328 = !DILocation(line: 68, column: 1, scope: !5212)
!5329 = !{i64 2147586590, i64 2147586633, i64 2147586673}
!5330 = !DILocation(line: 69, column: 1, scope: !5212)
!5331 = !{i64 2147586825, i64 2147586868, i64 2147586908}
!5332 = !DILocation(line: 70, column: 1, scope: !5212)
!5333 = !{i64 2147587054, i64 2147587097, i64 2147587137}
!5334 = !DILocation(line: 71, column: 1, scope: !5212)
!5335 = !{i64 2147587271, i64 2147587314, i64 2147587354}
!5336 = !DILocation(line: 72, column: 1, scope: !5212)
!5337 = !{i64 2147587500, i64 2147587543, i64 2147587583}
!5338 = !DILocation(line: 73, column: 1, scope: !5212)
!5339 = !{i64 2147587738, i64 2147587781, i64 2147587821}
!5340 = !DILocation(line: 74, column: 1, scope: !5212)
!5341 = !{i64 2147587970, i64 2147588013, i64 2147588053}
!5342 = !DILocation(line: 75, column: 1, scope: !5212)
!5343 = !{i64 2147588196, i64 2147588239, i64 2147588279}
!5344 = !DILocation(line: 76, column: 1, scope: !5212)
!5345 = !{i64 2147588413, i64 2147588456, i64 2147588496}
!5346 = !DILocation(line: 77, column: 1, scope: !5212)
!5347 = !{i64 2147588645, i64 2147588688, i64 2147588728}
!5348 = !DILocation(line: 78, column: 1, scope: !5212)
!5349 = !{i64 2147588871, i64 2147588914, i64 2147588954}
!5350 = !DILocation(line: 79, column: 1, scope: !5212)
!5351 = !{i64 2147589085, i64 2147589128, i64 2147589168}
!5352 = !DILocation(line: 80, column: 1, scope: !5212)
!5353 = !{i64 2147589305, i64 2147589348, i64 2147589388}
!5354 = !DILocation(line: 81, column: 1, scope: !5212)
!5355 = !{i64 2147589537, i64 2147589580, i64 2147589620}
!5356 = !DILocation(line: 82, column: 1, scope: !5212)
!5357 = !{i64 2147589745, i64 2147589788, i64 2147589828}
!5358 = !DILocation(line: 83, column: 1, scope: !5212)
!5359 = !{i64 2147589950, i64 2147589993, i64 2147590033}
!5360 = !DILocation(line: 84, column: 1, scope: !5212)
!5361 = !{i64 2147590167, i64 2147590210, i64 2147590250}
!5362 = !DILocation(line: 85, column: 1, scope: !5212)
!5363 = !{i64 2147590381, i64 2147590424, i64 2147590464}
!5364 = !DILocation(line: 86, column: 1, scope: !5212)
!5365 = !{i64 2147590607, i64 2147590650, i64 2147590690}
!5366 = !DILocation(line: 87, column: 1, scope: !5212)
!5367 = !{i64 2147590827, i64 2147590870, i64 2147590910}
!5368 = !DILocation(line: 88, column: 1, scope: !5212)
!5369 = !{i64 2147591032, i64 2147591075, i64 2147591115}
!5370 = !DILocation(line: 89, column: 1, scope: !5212)
!5371 = !{i64 2147595325, i64 2147595368, i64 2147595408}
!5372 = !DILocation(line: 90, column: 1, scope: !5212)
!5373 = !{i64 2147595560, i64 2147595603, i64 2147595643}
!5374 = !DILocation(line: 91, column: 1, scope: !5212)
!5375 = !{i64 2147595810, i64 2147595853, i64 2147595893}
!5376 = !DILocation(line: 92, column: 1, scope: !5212)
!5377 = !{i64 2147596060, i64 2147596103, i64 2147596143}
!5378 = !DILocation(line: 93, column: 1, scope: !5212)
!5379 = !{i64 2147596298, i64 2147596341, i64 2147596381}
!5380 = !DILocation(line: 94, column: 1, scope: !5212)
!5381 = !{i64 2147596509, i64 2147596552, i64 2147596592}
!5382 = !DILocation(line: 95, column: 1, scope: !5212)
!5383 = !{i64 2147596726, i64 2147596769, i64 2147596809}
!5384 = !DILocation(line: 96, column: 1, scope: !5212)
!5385 = !{i64 2147596922, i64 2147596965, i64 2147597005}
!5386 = !DILocation(line: 97, column: 1, scope: !5212)
!5387 = !{i64 2147597124, i64 2147597167, i64 2147597207}
!5388 = !DILocation(line: 98, column: 1, scope: !5212)
!5389 = !{i64 2147597317, i64 2147597360, i64 2147597400}
!5390 = !DILocation(line: 99, column: 1, scope: !5212)
!5391 = !{i64 2147597525, i64 2147597568, i64 2147597608}
!5392 = !DILocation(line: 100, column: 1, scope: !5212)
!5393 = !{i64 2147597721, i64 2147597764, i64 2147597804}
!5394 = !DILocation(line: 101, column: 1, scope: !5212)
!5395 = !{i64 2147597926, i64 2147597969, i64 2147598009}
!5396 = !DILocation(line: 102, column: 1, scope: !5212)
!5397 = !{i64 2147598137, i64 2147598180, i64 2147598220}
!5398 = !DILocation(line: 103, column: 1, scope: !5212)
!5399 = !{i64 2147598336, i64 2147598379, i64 2147598419}
!5400 = !DILocation(line: 104, column: 1, scope: !5212)
!5401 = !{i64 2147598511, i64 2147598554, i64 2147598594}
!5402 = !DILocation(line: 105, column: 1, scope: !5212)
!5403 = !{i64 2147598695, i64 2147598738, i64 2147598778}
!5404 = !DILocation(line: 106, column: 1, scope: !5212)
!5405 = !{i64 2147598897, i64 2147598940, i64 2147598980}
!5406 = !DILocation(line: 107, column: 1, scope: !5212)
!5407 = !{i64 2147599099, i64 2147599142, i64 2147599182}
!5408 = !DILocation(line: 108, column: 1, scope: !5212)
!5409 = !{i64 2147599304, i64 2147599347, i64 2147599387}
!5410 = !DILocation(line: 109, column: 1, scope: !5212)
!5411 = !{i64 2147599497, i64 2147599540, i64 2147599580}
!5412 = !DILocation(line: 110, column: 1, scope: !5212)
!5413 = !{i64 2147599663, i64 2147599706, i64 2147599746}
!5414 = !DILocation(line: 111, column: 1, scope: !5212)
!5415 = !{i64 2147599847, i64 2147599890, i64 2147599930}
!5416 = !DILocation(line: 112, column: 1, scope: !5212)
!5417 = !{i64 2147600037, i64 2147600080, i64 2147600120}
!5418 = !DILocation(line: 113, column: 1, scope: !5212)
!5419 = !{i64 2147600221, i64 2147600264, i64 2147600304}
!5420 = !DILocation(line: 114, column: 1, scope: !5212)
!5421 = !{i64 2147600435, i64 2147600478, i64 2147600518}
!5422 = !DILocation(line: 115, column: 1, scope: !5212)
!5423 = !{i64 2147600646, i64 2147600689, i64 2147600729}
!5424 = !DILocation(line: 116, column: 1, scope: !5212)
!5425 = !{i64 2147600869, i64 2147600912, i64 2147600952}
!5426 = !DILocation(line: 117, column: 1, scope: !5212)
!5427 = !{i64 2147601053, i64 2147601096, i64 2147601136}
!5428 = !DILocation(line: 118, column: 1, scope: !5212)
!5429 = !{i64 2147601267, i64 2147601310, i64 2147601350}
!5430 = !DILocation(line: 119, column: 1, scope: !5212)
!5431 = !{i64 2147601433, i64 2147601476, i64 2147601516}
!5432 = !DILocation(line: 120, column: 1, scope: !5212)
!5433 = !{i64 2147601614, i64 2147601657, i64 2147601697}
!5434 = !DILocation(line: 121, column: 1, scope: !5212)
!5435 = !{i64 2147601807, i64 2147601850, i64 2147601890}
!5436 = !DILocation(line: 122, column: 1, scope: !5212)
!5437 = !{i64 2147602033, i64 2147602076, i64 2147602116}
!5438 = !DILocation(line: 123, column: 1, scope: !5212)
!5439 = !{i64 2147602247, i64 2147602290, i64 2147602330}
!5440 = !DILocation(line: 124, column: 1, scope: !5212)
!5441 = !{i64 2147602473, i64 2147602516, i64 2147602556}
!5442 = !DILocation(line: 125, column: 1, scope: !5212)
!5443 = !{i64 2147602690, i64 2147602733, i64 2147602773}
!5444 = !DILocation(line: 126, column: 1, scope: !5212)
!5445 = !{i64 2147602967, i64 2147603010, i64 2147603050}
!5446 = !DILocation(line: 127, column: 1, scope: !5212)
!5447 = !{i64 2147603193, i64 2147603236, i64 2147603276}
!5448 = !DILocation(line: 128, column: 1, scope: !5212)
!5449 = !{i64 2147603389, i64 2147603432, i64 2147603472}
!5450 = !DILocation(line: 129, column: 1, scope: !5212)
!5451 = !{i64 2147603654, i64 2147603697, i64 2147603737}
!5452 = !DILocation(line: 130, column: 1, scope: !5212)
!5453 = !{i64 2147603868, i64 2147603911, i64 2147603951}
!5454 = !DILocation(line: 131, column: 1, scope: !5212)
!5455 = !{i64 2147604043, i64 2147604086, i64 2147604126}
!5456 = !DILocation(line: 132, column: 1, scope: !5212)
!5457 = !{i64 2147608358, i64 2147608401, i64 2147608441}
!5458 = !DILocation(line: 133, column: 1, scope: !5212)
!5459 = !{i64 2147608557, i64 2147608600, i64 2147608640}
!5460 = !DILocation(line: 134, column: 1, scope: !5212)
!5461 = !{i64 2147608799, i64 2147608842, i64 2147608882}
!5462 = !DILocation(line: 135, column: 1, scope: !5212)
!5463 = !{i64 2147608962, i64 2147609005, i64 2147609045}
!5464 = !DILocation(line: 136, column: 1, scope: !5212)
!5465 = !{i64 2147609149, i64 2147609192, i64 2147609232}
!5466 = !DILocation(line: 137, column: 1, scope: !5212)
!5467 = !{i64 2147609357, i64 2147609400, i64 2147609440}
!5468 = !DILocation(line: 138, column: 1, scope: !5212)
!5469 = !{i64 2147609553, i64 2147609596, i64 2147609636}
!5470 = !DILocation(line: 139, column: 1, scope: !5212)
!5471 = !{i64 2147609746, i64 2147609789, i64 2147609829}
!5472 = !DILocation(line: 140, column: 1, scope: !5212)
!5473 = !{i64 2147609928, i64 2147609971, i64 2147610011}
!5474 = !DILocation(line: 141, column: 1, scope: !5212)
!5475 = !{i64 2147610142, i64 2147610185, i64 2147610225}
!5476 = !DILocation(line: 142, column: 1, scope: !5212)
!5477 = !{i64 2147610353, i64 2147610396, i64 2147610436}
!5478 = !DILocation(line: 143, column: 1, scope: !5212)
!5479 = !{i64 2147610573, i64 2147610616, i64 2147610656}
!5480 = !DILocation(line: 144, column: 1, scope: !5212)
!5481 = !{i64 2147610780, i64 2147610823, i64 2147610863}
!5482 = !DILocation(line: 145, column: 1, scope: !5212)
!5483 = !{i64 2147611053, i64 2147611096, i64 2147611136}
!5484 = !DILocation(line: 146, column: 1, scope: !5212)
!5485 = !{i64 2147611301, i64 2147611344, i64 2147611384}
!5486 = !DILocation(line: 147, column: 1, scope: !5212)
!5487 = !{i64 2147611500, i64 2147611543, i64 2147611583}
!5488 = !DILocation(line: 148, column: 1, scope: !5212)
!5489 = !{i64 2147611735, i64 2147611778, i64 2147611818}
!5490 = !DILocation(line: 149, column: 1, scope: !5212)
!5491 = !{i64 2147611985, i64 2147612028, i64 2147612068}
!5492 = !DILocation(line: 150, column: 1, scope: !5212)
!5493 = !{i64 2147612187, i64 2147612230, i64 2147612270}
!5494 = !DILocation(line: 151, column: 1, scope: !5212)
!5495 = !{i64 2147612410, i64 2147612453, i64 2147612493}
!5496 = !DILocation(line: 152, column: 1, scope: !5212)
!5497 = !{i64 2147612624, i64 2147612667, i64 2147612707}
!5498 = !DILocation(line: 153, column: 1, scope: !5212)
!5499 = !{i64 2147612868, i64 2147612911, i64 2147612951}
!5500 = !DILocation(line: 154, column: 1, scope: !5212)
!5501 = !{i64 2147613097, i64 2147613140, i64 2147613180}
!5502 = !DILocation(line: 155, column: 1, scope: !5212)
!5503 = !{i64 2147613326, i64 2147613369, i64 2147613409}
!5504 = !DILocation(line: 156, column: 1, scope: !5212)
!5505 = !{i64 2147613534, i64 2147613577, i64 2147613617}
!5506 = !DILocation(line: 157, column: 1, scope: !5212)
!5507 = !{i64 2147613772, i64 2147613815, i64 2147613855}
!5508 = !DILocation(line: 158, column: 1, scope: !5212)
!5509 = !{i64 2147613998, i64 2147614041, i64 2147614081}
!5510 = !DILocation(line: 159, column: 1, scope: !5212)
!5511 = !{i64 2147614257, i64 2147614300, i64 2147614340}
!5512 = !DILocation(line: 160, column: 1, scope: !5212)
!5513 = !{i64 2147614477, i64 2147614520, i64 2147614560}
!5514 = !DILocation(line: 161, column: 1, scope: !5212)
!5515 = !{i64 2147614709, i64 2147614752, i64 2147614792}
!5516 = !DILocation(line: 162, column: 1, scope: !5212)
!5517 = !{i64 2147614950, i64 2147614993, i64 2147615033}
!5518 = !DILocation(line: 163, column: 1, scope: !5212)
!5519 = !{i64 2147615191, i64 2147615234, i64 2147615274}
!5520 = !DILocation(line: 164, column: 1, scope: !5212)
!5521 = !{i64 2147615414, i64 2147615457, i64 2147615497}
!5522 = !DILocation(line: 165, column: 1, scope: !5212)
!5523 = !{i64 2147615631, i64 2147615674, i64 2147615714}
!5524 = !DILocation(line: 166, column: 1, scope: !5212)
!5525 = !{i64 2147615872, i64 2147615915, i64 2147615955}
!5526 = !DILocation(line: 167, column: 1, scope: !5212)
!5527 = !{i64 2147616059, i64 2147616102, i64 2147616142}
!5528 = !DILocation(line: 168, column: 1, scope: !5212)
!5529 = !{i64 2147616222, i64 2147616265, i64 2147616305}
!5530 = !DILocation(line: 169, column: 1, scope: !5212)
!5531 = !{i64 2147616427, i64 2147616470, i64 2147616510}
!5532 = !DILocation(line: 170, column: 1, scope: !5212)
!5533 = !{i64 2147616620, i64 2147616663, i64 2147616703}
!5534 = !DILocation(line: 171, column: 1, scope: !5212)
!5535 = !{i64 2147616879, i64 2147616922, i64 2147616962}
!5536 = !DILocation(line: 172, column: 1, scope: !5212)
!5537 = !{i64 2147621163, i64 2147621206, i64 2147621246}
!5538 = !DILocation(line: 173, column: 1, scope: !5212)
!5539 = !{i64 2147621392, i64 2147621435, i64 2147621475}
!5540 = !DILocation(line: 174, column: 1, scope: !5212)
!5541 = !{i64 2147621606, i64 2147621649, i64 2147621689}
!5542 = !DILocation(line: 175, column: 1, scope: !5212)
!5543 = !{i64 2147621808, i64 2147621851, i64 2147621891}
!5544 = !DILocation(line: 176, column: 1, scope: !5212)
!5545 = !{i64 2147622004, i64 2147622047, i64 2147622087}
!5546 = !DILocation(line: 177, column: 1, scope: !5212)
!5547 = !{i64 2147622216, i64 2147622259, i64 2147622299}
!5548 = !DILocation(line: 178, column: 1, scope: !5212)
!5549 = !{i64 2147622437, i64 2147622480, i64 2147622520}
!5550 = !DILocation(line: 179, column: 1, scope: !5212)
!5551 = !{i64 2147622651, i64 2147622694, i64 2147622734}
!5552 = !DILocation(line: 180, column: 1, scope: !5212)
!5553 = !{i64 2147622841, i64 2147622884, i64 2147622924}
!5554 = !DILocation(line: 181, column: 1, scope: !5212)
!5555 = !{i64 2147623040, i64 2147623083, i64 2147623123}
!5556 = !DILocation(line: 182, column: 1, scope: !5212)
!5557 = !{i64 2147623245, i64 2147623288, i64 2147623328}
!5558 = !DILocation(line: 183, column: 1, scope: !5212)
!5559 = !{i64 2147623465, i64 2147623508, i64 2147623548}
!5560 = !DILocation(line: 184, column: 1, scope: !5212)
!5561 = !{i64 2147623666, i64 2147623709, i64 2147623749}
!5562 = !DILocation(line: 185, column: 1, scope: !5212)
!5563 = !{i64 2147623865, i64 2147623908, i64 2147623948}
!5564 = !DILocation(line: 186, column: 1, scope: !5212)
!5565 = !{i64 2147624070, i64 2147624113, i64 2147624153}
!5566 = !DILocation(line: 187, column: 1, scope: !5212)
!5567 = !{i64 2147624239, i64 2147624282, i64 2147624322}
!5568 = !DILocation(line: 188, column: 1, scope: !5212)
!5569 = !{i64 2147624423, i64 2147624466, i64 2147624506}
!5570 = !DILocation(line: 189, column: 1, scope: !5212)
!5571 = !{i64 2147624607, i64 2147624650, i64 2147624690}
!5572 = !DILocation(line: 190, column: 1, scope: !5212)
!5573 = !{i64 2147624794, i64 2147624837, i64 2147624877}
!5574 = !DILocation(line: 191, column: 1, scope: !5212)
!5575 = !{i64 2147624978, i64 2147625021, i64 2147625061}
!5576 = !DILocation(line: 192, column: 1, scope: !5212)
!5577 = !{i64 2147625165, i64 2147625208, i64 2147625248}
!5578 = !DILocation(line: 193, column: 1, scope: !5212)
!5579 = !{i64 2147625377, i64 2147625420, i64 2147625460}
!5580 = !DILocation(line: 194, column: 1, scope: !5212)
!5581 = !{i64 2147625615, i64 2147625658, i64 2147625698}
!5582 = !DILocation(line: 195, column: 1, scope: !5212)
!5583 = !{i64 2147625845, i64 2147625888, i64 2147625928}
!5584 = !DILocation(line: 196, column: 1, scope: !5212)
!5585 = !{i64 2147626074, i64 2147626117, i64 2147626157}
!5586 = !DILocation(line: 197, column: 1, scope: !5212)
!5587 = !{i64 2147626261, i64 2147626304, i64 2147626344}
!5588 = !DILocation(line: 198, column: 1, scope: !5212)
!5589 = !{i64 2147626457, i64 2147626500, i64 2147626540}
!5590 = !DILocation(line: 199, column: 1, scope: !5212)
!5591 = !{i64 2147626665, i64 2147626708, i64 2147626748}
!5592 = !DILocation(line: 200, column: 1, scope: !5212)
!5593 = !{i64 2147626877, i64 2147626920, i64 2147626960}
!5594 = !DILocation(line: 201, column: 1, scope: !5212)
!5595 = !{i64 2147627076, i64 2147627119, i64 2147627159}
!5596 = !DILocation(line: 202, column: 1, scope: !5212)
!5597 = !{i64 2147627314, i64 2147627357, i64 2147627397}
!5598 = !DILocation(line: 203, column: 1, scope: !5212)
!5599 = !{i64 2147627510, i64 2147627553, i64 2147627593}
!5600 = !DILocation(line: 204, column: 1, scope: !5212)
!5601 = !{i64 2147627712, i64 2147627755, i64 2147627795}
!5602 = !DILocation(line: 205, column: 1, scope: !5212)
!5603 = !{i64 2147627905, i64 2147627948, i64 2147627988}
!5604 = !DILocation(line: 206, column: 1, scope: !5212)
!5605 = !{i64 2147628139, i64 2147628182, i64 2147628222}
!5606 = !DILocation(line: 207, column: 1, scope: !5212)
!5607 = !{i64 2147628302, i64 2147628345, i64 2147628385}
!5608 = !DILocation(line: 208, column: 1, scope: !5212)
!5609 = !{i64 2147628541, i64 2147628584, i64 2147628624}
!5610 = !DILocation(line: 209, column: 1, scope: !5212)
!5611 = !{i64 2147628780, i64 2147628823, i64 2147628863}
!5612 = !DILocation(line: 210, column: 1, scope: !5212)
!5613 = !{i64 2147629016, i64 2147629059, i64 2147629099}
!5614 = !DILocation(line: 211, column: 1, scope: !5212)
!5615 = !{i64 2147629246, i64 2147629289, i64 2147629329}
!5616 = !DILocation(line: 212, column: 1, scope: !5212)
!5617 = !{i64 2147629433, i64 2147629476, i64 2147629516}
!5618 = !DILocation(line: 213, column: 1, scope: !5212)
!5619 = !{i64 2147629632, i64 2147629675, i64 2147629715}
!5620 = !DILocation(line: 214, column: 1, scope: !5212)
!5621 = !{i64 2147629903, i64 2147629946, i64 2147629986}
!5622 = !DILocation(line: 215, column: 1, scope: !5212)
!5623 = !{i64 2147630078, i64 2147630121, i64 2147630161}
!5624 = !DILocation(line: 216, column: 1, scope: !5212)
!5625 = !{i64 2147634373, i64 2147634416, i64 2147634456}
!5626 = !DILocation(line: 217, column: 1, scope: !5212)
!5627 = !{i64 2147634581, i64 2147634624, i64 2147634664}
!5628 = !DILocation(line: 218, column: 1, scope: !5212)
!5629 = !{i64 2147634799, i64 2147634842, i64 2147634882}
!5630 = !DILocation(line: 219, column: 1, scope: !5212)
!5631 = !{i64 2147634989, i64 2147635032, i64 2147635072}
!5632 = !DILocation(line: 220, column: 1, scope: !5212)
!5633 = !{i64 2147635221, i64 2147635264, i64 2147635304}
!5634 = !DILocation(line: 221, column: 1, scope: !5212)
!5635 = !{i64 2147635441, i64 2147635484, i64 2147635524}
!5636 = !DILocation(line: 222, column: 1, scope: !5212)
!5637 = !{i64 2147635637, i64 2147635680, i64 2147635720}
!5638 = !DILocation(line: 223, column: 1, scope: !5212)
!5639 = !{i64 2147635843, i64 2147635886, i64 2147635926}
!5640 = !DILocation(line: 224, column: 1, scope: !5212)
!5641 = !{i64 2147636048, i64 2147636091, i64 2147636131}
!5642 = !DILocation(line: 225, column: 1, scope: !5212)
!5643 = !{i64 2147636274, i64 2147636317, i64 2147636357}
!5644 = !DILocation(line: 226, column: 1, scope: !5212)
!5645 = !{i64 2147636482, i64 2147636525, i64 2147636565}
!5646 = !DILocation(line: 227, column: 1, scope: !5212)
!5647 = !{i64 2147636678, i64 2147636721, i64 2147636761}
!5648 = !DILocation(line: 228, column: 1, scope: !5212)
!5649 = !{i64 2147636910, i64 2147636953, i64 2147636993}
!5650 = !DILocation(line: 229, column: 1, scope: !5212)
!5651 = !{i64 2147637094, i64 2147637137, i64 2147637177}
!5652 = !DILocation(line: 230, column: 1, scope: !5212)
!5653 = !{i64 2147637303, i64 2147637346, i64 2147637386}
!5654 = !DILocation(line: 231, column: 1, scope: !5212)
!5655 = !{i64 2147637511, i64 2147637554, i64 2147637594}
!5656 = !DILocation(line: 232, column: 1, scope: !5212)
!5657 = !{i64 2147637707, i64 2147637750, i64 2147637790}
!5658 = !DILocation(line: 233, column: 1, scope: !5212)
!5659 = !{i64 2147637891, i64 2147637934, i64 2147637974}
!5660 = !DILocation(line: 234, column: 1, scope: !5212)
!5661 = !{i64 2147638117, i64 2147638160, i64 2147638200}
!5662 = !DILocation(line: 235, column: 1, scope: !5212)
!5663 = !{i64 2147638343, i64 2147638386, i64 2147638426}
!5664 = !DILocation(line: 236, column: 1, scope: !5212)
!5665 = !{i64 2147638569, i64 2147638612, i64 2147638652}
!5666 = !DILocation(line: 237, column: 1, scope: !5212)
!5667 = !{i64 2147638795, i64 2147638838, i64 2147638878}
!5668 = !DILocation(line: 238, column: 1, scope: !5212)
!5669 = !{i64 2147639021, i64 2147639064, i64 2147639104}
!5670 = !DILocation(line: 239, column: 1, scope: !5212)
!5671 = !{i64 2147639253, i64 2147639296, i64 2147639336}
!5672 = !DILocation(line: 240, column: 1, scope: !5212)
!5673 = !{i64 2147639491, i64 2147639534, i64 2147639574}
!5674 = !DILocation(line: 241, column: 1, scope: !5212)
!5675 = !{i64 2147639723, i64 2147639766, i64 2147639806}
!5676 = !DILocation(line: 242, column: 1, scope: !5212)
!5677 = !{i64 2147639925, i64 2147639968, i64 2147640008}
!5678 = !DILocation(line: 243, column: 1, scope: !5212)
!5679 = !{i64 2147640175, i64 2147640218, i64 2147640258}
!5680 = !DILocation(line: 244, column: 1, scope: !5212)
!5681 = !{i64 2147640413, i64 2147640456, i64 2147640496}
!5682 = !DILocation(line: 245, column: 1, scope: !5212)
!5683 = !{i64 2147640621, i64 2147640664, i64 2147640704}
!5684 = !DILocation(line: 246, column: 1, scope: !5212)
!5685 = !{i64 2147640817, i64 2147640860, i64 2147640900}
!5686 = !DILocation(line: 247, column: 1, scope: !5212)
!5687 = !{i64 2147641001, i64 2147641044, i64 2147641084}
!5688 = !DILocation(line: 248, column: 1, scope: !5212)
!5689 = !{i64 2147641218, i64 2147641261, i64 2147641301}
!5690 = !DILocation(line: 249, column: 1, scope: !5212)
!5691 = !{i64 2147641423, i64 2147641466, i64 2147641506}
!5692 = !DILocation(line: 250, column: 1, scope: !5212)
!5693 = !{i64 2147641658, i64 2147641701, i64 2147641741}
!5694 = !DILocation(line: 251, column: 1, scope: !5212)
!5695 = !{i64 2147641881, i64 2147641924, i64 2147641964}
!5696 = !DILocation(line: 252, column: 1, scope: !5212)
!5697 = !{i64 2147642104, i64 2147642147, i64 2147642187}
!5698 = !DILocation(line: 253, column: 1, scope: !5212)
!5699 = !{i64 2147642342, i64 2147642385, i64 2147642425}
!5700 = !DILocation(line: 254, column: 1, scope: !5212)
!5701 = !{i64 2147642580, i64 2147642623, i64 2147642663}
!5702 = !DILocation(line: 255, column: 1, scope: !5212)
!5703 = !{i64 2147642797, i64 2147642840, i64 2147642880}
!5704 = !DILocation(line: 256, column: 1, scope: !5212)
!5705 = !{i64 2147647063, i64 2147647106, i64 2147647146}
!5706 = !DILocation(line: 257, column: 1, scope: !5212)
!5707 = !{i64 2147647256, i64 2147647299, i64 2147647339}
!5708 = !DILocation(line: 258, column: 1, scope: !5212)
!5709 = !{i64 2147647509, i64 2147647552, i64 2147647592}
!5710 = !DILocation(line: 259, column: 1, scope: !5212)
!5711 = !{i64 2147647717, i64 2147647760, i64 2147647800}
!5712 = !DILocation(line: 260, column: 1, scope: !5212)
!5713 = !{i64 2147647913, i64 2147647956, i64 2147647996}
!5714 = !DILocation(line: 261, column: 1, scope: !5212)
!5715 = !{i64 2147648127, i64 2147648170, i64 2147648210}
!5716 = !DILocation(line: 262, column: 1, scope: !5212)
!5717 = !{i64 2147648335, i64 2147648378, i64 2147648418}
!5718 = !DILocation(line: 263, column: 1, scope: !5212)
!5719 = !{i64 2147648525, i64 2147648568, i64 2147648608}
!5720 = !DILocation(line: 264, column: 1, scope: !5212)
!5721 = !{i64 2147648739, i64 2147648782, i64 2147648822}
!5722 = !DILocation(line: 265, column: 1, scope: !5212)
!5723 = !{i64 2147649001, i64 2147649044, i64 2147649084}
!5724 = !DILocation(line: 266, column: 1, scope: !5212)
!5725 = !{i64 2147649212, i64 2147649255, i64 2147649295}
!5726 = !DILocation(line: 267, column: 1, scope: !5212)
!5727 = !{i64 2147649456, i64 2147649499, i64 2147649539}
!5728 = !DILocation(line: 268, column: 1, scope: !5212)
!5729 = !{i64 2147649667, i64 2147649710, i64 2147649750}
!5730 = !DILocation(line: 269, column: 1, scope: !5212)
!5731 = !{i64 2147649896, i64 2147649939, i64 2147649979}
!5732 = !DILocation(line: 270, column: 1, scope: !5212)
!5733 = !{i64 2147650161, i64 2147650204, i64 2147650244}
!5734 = !DILocation(line: 271, column: 1, scope: !5212)
!5735 = !{i64 2147650366, i64 2147650409, i64 2147650449}
!5736 = !DILocation(line: 272, column: 1, scope: !5212)
!5737 = !{i64 2147650562, i64 2147650605, i64 2147650645}
!5738 = !DILocation(line: 273, column: 1, scope: !5212)
!5739 = !{i64 2147650785, i64 2147650828, i64 2147650868}
!5740 = !DILocation(line: 274, column: 1, scope: !5212)
!5741 = !{i64 2147650948, i64 2147650991, i64 2147651031}
!5742 = !DILocation(line: 275, column: 1, scope: !5212)
!5743 = !{i64 2147651153, i64 2147651196, i64 2147651236}
!5744 = !DILocation(line: 276, column: 1, scope: !5212)
!5745 = !{i64 2147651373, i64 2147651416, i64 2147651456}
!5746 = !DILocation(line: 277, column: 1, scope: !5212)
!5747 = !{i64 2147651587, i64 2147651630, i64 2147651670}
!5748 = !DILocation(line: 278, column: 1, scope: !5212)
!5749 = !{i64 2147651831, i64 2147651874, i64 2147651914}
!5750 = !DILocation(line: 279, column: 1, scope: !5212)
!5751 = !{i64 2147652063, i64 2147652106, i64 2147652146}
!5752 = !DILocation(line: 280, column: 1, scope: !5212)
!5753 = !{i64 2147652277, i64 2147652320, i64 2147652360}
!5754 = !DILocation(line: 281, column: 1, scope: !5212)
!5755 = !{i64 2147652488, i64 2147652531, i64 2147652571}
!5756 = !DILocation(line: 282, column: 1, scope: !5212)
!5757 = !{i64 2147652681, i64 2147652724, i64 2147652764}
!5758 = !DILocation(line: 283, column: 1, scope: !5212)
!5759 = !{i64 2147652880, i64 2147652923, i64 2147652963}
!5760 = !DILocation(line: 284, column: 1, scope: !5212)
!5761 = !{i64 2147653052, i64 2147653095, i64 2147653135}
!5762 = !DILocation(line: 285, column: 1, scope: !5212)
!5763 = !{i64 2147653245, i64 2147653288, i64 2147653328}
!5764 = !DILocation(line: 286, column: 1, scope: !5212)
!5765 = !{i64 2147653417, i64 2147653460, i64 2147653500}
!5766 = !DILocation(line: 287, column: 1, scope: !5212)
!5767 = !{i64 2147653607, i64 2147653650, i64 2147653690}
!5768 = !DILocation(line: 288, column: 1, scope: !5212)
!5769 = !{i64 2147653800, i64 2147653843, i64 2147653883}
!5770 = !DILocation(line: 289, column: 1, scope: !5212)
!5771 = !{i64 2147653996, i64 2147654039, i64 2147654079}
!5772 = !DILocation(line: 290, column: 1, scope: !5212)
!5773 = !{i64 2147654159, i64 2147654202, i64 2147654242}
!5774 = !DILocation(line: 291, column: 1, scope: !5212)
!5775 = !{i64 2147654361, i64 2147654404, i64 2147654444}
!5776 = !DILocation(line: 292, column: 1, scope: !5212)
!5777 = !{i64 2147654572, i64 2147654615, i64 2147654655}
!5778 = !DILocation(line: 293, column: 1, scope: !5212)
!5779 = !{i64 2147654777, i64 2147654820, i64 2147654860}
!5780 = !DILocation(line: 294, column: 1, scope: !5212)
!5781 = !{i64 2147654985, i64 2147655028, i64 2147655068}
!5782 = !DILocation(line: 295, column: 1, scope: !5212)
!5783 = !{i64 2147655178, i64 2147655221, i64 2147655261}
!5784 = !DILocation(line: 296, column: 1, scope: !5212)
!5785 = !{i64 2147655416, i64 2147655459, i64 2147655499}
!5786 = !DILocation(line: 297, column: 1, scope: !5212)
!5787 = !{i64 2147655603, i64 2147655646, i64 2147655686}
!5788 = !DILocation(line: 298, column: 1, scope: !5212)
!5789 = !{i64 2147655772, i64 2147655815, i64 2147655855}
!5790 = !DILocation(line: 299, column: 1, scope: !5212)
!5791 = !{i64 2147655965, i64 2147656008, i64 2147656048}
!5792 = !DILocation(line: 300, column: 1, scope: !5212)
!5793 = !{i64 2147660231, i64 2147660274, i64 2147660314}
!5794 = !DILocation(line: 301, column: 1, scope: !5212)
!5795 = !{i64 2147660442, i64 2147660485, i64 2147660525}
!5796 = !DILocation(line: 302, column: 1, scope: !5212)
!5797 = !{i64 2147660665, i64 2147660708, i64 2147660748}
!5798 = !DILocation(line: 303, column: 1, scope: !5212)
!5799 = !{i64 2147660879, i64 2147660922, i64 2147660962}
!5800 = !DILocation(line: 304, column: 1, scope: !5212)
!5801 = !{i64 2147661097, i64 2147661140, i64 2147661180}
!5802 = !DILocation(line: 305, column: 1, scope: !5212)
!5803 = !{i64 2147661311, i64 2147661354, i64 2147661394}
!5804 = !DILocation(line: 306, column: 1, scope: !5212)
!5805 = !{i64 2147661525, i64 2147661568, i64 2147661608}
!5806 = !DILocation(line: 307, column: 1, scope: !5212)
!5807 = !{i64 2147661742, i64 2147661785, i64 2147661825}
!5808 = !DILocation(line: 308, column: 1, scope: !5212)
!5809 = !{i64 2147661956, i64 2147661999, i64 2147662039}
!5810 = !DILocation(line: 309, column: 1, scope: !5212)
!5811 = !{i64 2147662197, i64 2147662240, i64 2147662280}
!5812 = !DILocation(line: 310, column: 1, scope: !5212)
!5813 = !{i64 2147662363, i64 2147662406, i64 2147662446}
!5814 = !DILocation(line: 311, column: 1, scope: !5212)
!5815 = !{i64 2147662590, i64 2147662633, i64 2147662673}
!5816 = !DILocation(line: 312, column: 1, scope: !5212)
!5817 = !{i64 2147662807, i64 2147662850, i64 2147662890}
!5818 = !DILocation(line: 313, column: 1, scope: !5212)
!5819 = !{i64 2147663033, i64 2147663076, i64 2147663116}
!5820 = !DILocation(line: 314, column: 1, scope: !5212)
!5821 = !{i64 2147663238, i64 2147663281, i64 2147663321}
!5822 = !DILocation(line: 315, column: 1, scope: !5212)
!5823 = !{i64 2147663455, i64 2147663498, i64 2147663538}
!5824 = !DILocation(line: 316, column: 1, scope: !5212)
!5825 = !{i64 2147663747, i64 2147663790, i64 2147663830}
!5826 = !DILocation(line: 317, column: 1, scope: !5212)
!5827 = !{i64 2147663979, i64 2147664022, i64 2147664062}
!5828 = !DILocation(line: 318, column: 1, scope: !5212)
!5829 = !{i64 2147664196, i64 2147664239, i64 2147664279}
!5830 = !DILocation(line: 319, column: 1, scope: !5212)
!5831 = !{i64 2147664403, i64 2147664446, i64 2147664486}
!5832 = !DILocation(line: 320, column: 1, scope: !5212)
!5833 = !{i64 2147664604, i64 2147664647, i64 2147664687}
!5834 = !DILocation(line: 321, column: 1, scope: !5212)
!5835 = !{i64 2147664836, i64 2147664879, i64 2147664919}
!5836 = !DILocation(line: 322, column: 1, scope: !5212)
!5837 = !{i64 2147665044, i64 2147665087, i64 2147665127}
!5838 = !DILocation(line: 323, column: 1, scope: !5212)
!5839 = !{i64 2147665234, i64 2147665277, i64 2147665317}
!5840 = !DILocation(line: 324, column: 1, scope: !5212)
!5841 = !{i64 2147665460, i64 2147665503, i64 2147665543}
!5842 = !DILocation(line: 325, column: 1, scope: !5212)
!5843 = !{i64 2147665649, i64 2147665692, i64 2147665732}
!5844 = !DILocation(line: 326, column: 1, scope: !5212)
!5845 = !{i64 2147665920, i64 2147665963, i64 2147666003}
!5846 = !DILocation(line: 327, column: 1, scope: !5212)
!5847 = !{i64 2147666140, i64 2147666183, i64 2147666223}
!5848 = !DILocation(line: 328, column: 1, scope: !5212)
!5849 = !{i64 2147666393, i64 2147666436, i64 2147666476}
!5850 = !DILocation(line: 329, column: 1, scope: !5212)
!5851 = !{i64 2147666601, i64 2147666644, i64 2147666684}
!5852 = !DILocation(line: 330, column: 1, scope: !5212)
!5853 = !{i64 2147666833, i64 2147666876, i64 2147666916}
!5854 = !DILocation(line: 331, column: 1, scope: !5212)
!5855 = !{i64 2147667044, i64 2147667087, i64 2147667127}
!5856 = !DILocation(line: 332, column: 1, scope: !5212)
!5857 = !{i64 2147667234, i64 2147667277, i64 2147667317}
!5858 = !DILocation(line: 333, column: 1, scope: !5212)
!5859 = !{i64 2147667448, i64 2147667491, i64 2147667531}
!5860 = !DILocation(line: 334, column: 1, scope: !5212)
!5861 = !{i64 2147667647, i64 2147667690, i64 2147667730}
!5862 = !DILocation(line: 335, column: 1, scope: !5212)
!5863 = !{i64 2147667834, i64 2147667877, i64 2147667917}
!5864 = !DILocation(line: 336, column: 1, scope: !5212)
!5865 = !{i64 2147668030, i64 2147668073, i64 2147668113}
!5866 = !DILocation(line: 337, column: 1, scope: !5212)
!5867 = !{i64 2147668238, i64 2147668281, i64 2147668321}
!5868 = !DILocation(line: 338, column: 1, scope: !5212)
!5869 = !{i64 2147668467, i64 2147668510, i64 2147668550}
!5870 = !DILocation(line: 339, column: 1, scope: !5212)
!5871 = !{i64 2147668669, i64 2147668712, i64 2147668752}
!5872 = !DILocation(line: 340, column: 1, scope: !5212)
!5873 = !{i64 2147668868, i64 2147668911, i64 2147668951}
!5874 = !DILocation(line: 341, column: 1, scope: !5212)
!5875 = !{i64 2147673146, i64 2147673189, i64 2147673229}
!5876 = !DILocation(line: 343, column: 1, scope: !5212)
!5877 = distinct !DISubprogram(name: "stm32l1_init", scope: !248, file: !248, line: 31, type: !255, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5878)
!5878 = !{!5879, !5880}
!5879 = !DILocalVariable(name: "arg", arg: 1, scope: !5877, file: !248, line: 31, type: !257)
!5880 = !DILocalVariable(name: "key", scope: !5877, file: !248, line: 33, type: !152)
!5881 = !DILocation(line: 0, scope: !5877)
!5882 = !DILocation(line: 55, column: 2, scope: !5883, inlinedAt: !5890)
!5883 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5887)
!5884 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!32}
!5887 = !{!5888, !5889}
!5888 = !DILocalVariable(name: "key", scope: !5883, file: !5884, line: 44, type: !32)
!5889 = !DILocalVariable(name: "tmp", scope: !5883, file: !5884, line: 53, type: !32)
!5890 = distinct !DILocation(line: 37, column: 8, scope: !5877)
!5891 = !{i64 1528661}
!5892 = !DILocation(line: 0, scope: !5883, inlinedAt: !5890)
!5893 = !DILocalVariable(name: "key", arg: 1, scope: !5894, file: !5884, line: 84, type: !32)
!5894 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5897)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{null, !32}
!5897 = !{!5893}
!5898 = !DILocation(line: 0, scope: !5894, inlinedAt: !5899)
!5899 = distinct !DILocation(line: 44, column: 2, scope: !5877)
!5900 = !DILocation(line: 95, column: 2, scope: !5894, inlinedAt: !5899)
!5901 = !{i64 1529478}
!5902 = !DILocation(line: 48, column: 18, scope: !5877)
!5903 = !DILocation(line: 54, column: 2, scope: !5877)
!5904 = !DILocation(line: 55, column: 2, scope: !5877)
!5905 = !DILocation(line: 57, column: 2, scope: !5877)
!5906 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !5907, file: !5907, line: 531, type: !5908, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5910)
!5907 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5908 = !DISubroutineType(types: !5909)
!5909 = !{null, !152}
!5910 = !{!5911, !5912}
!5911 = !DILocalVariable(name: "Periphs", arg: 1, scope: !5906, file: !5907, line: 531, type: !152)
!5912 = !DILocalVariable(name: "tmpreg", scope: !5906, file: !5907, line: 533, type: !227)
!5913 = !DILocation(line: 0, scope: !5906)
!5914 = !DILocation(line: 533, column: 3, scope: !5906)
!5915 = !DILocation(line: 533, column: 17, scope: !5906)
!5916 = !DILocation(line: 534, column: 3, scope: !5906)
!5917 = !DILocation(line: 536, column: 12, scope: !5906)
!5918 = !DILocation(line: 536, column: 10, scope: !5906)
!5919 = !DILocation(line: 537, column: 9, scope: !5906)
!5920 = !DILocation(line: 538, column: 1, scope: !5906)
!5921 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !5922, file: !5922, line: 272, type: !5908, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5923)
!5922 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5923 = !{!5924}
!5924 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !5921, file: !5922, line: 272, type: !152)
!5925 = !DILocation(line: 0, scope: !5921)
!5926 = !DILocation(line: 274, column: 3, scope: !5921)
!5927 = !DILocation(line: 275, column: 1, scope: !5921)
!5928 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !284, file: !284, line: 26, type: !290, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !281, retainedNodes: !5929)
!5929 = !{!5930}
!5930 = !DILocalVariable(name: "dev", arg: 1, scope: !5928, file: !284, line: 26, type: !292)
!5931 = !DILocation(line: 0, scope: !5928)
!5932 = !DILocation(line: 68, column: 2, scope: !5928)
!5933 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5934, file: !5934, line: 14, type: !4165, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5935)
!5934 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5935 = !{!5936, !5937}
!5936 = !DILocalVariable(name: "fmt", arg: 1, scope: !5933, file: !5934, line: 14, type: !118)
!5937 = !DILocalVariable(name: "ap", scope: !5933, file: !5934, line: 16, type: !5938)
!5938 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3175, line: 99, baseType: !5939)
!5939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3175, line: 40, baseType: !5940)
!5940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5934, baseType: !5941)
!5941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5942)
!5942 = !{!5943}
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5941, file: !5934, line: 16, baseType: !106, size: 32)
!5944 = !DILocation(line: 0, scope: !5933)
!5945 = !DILocation(line: 16, column: 2, scope: !5933)
!5946 = !DILocation(line: 16, column: 10, scope: !5933)
!5947 = !DILocation(line: 18, column: 2, scope: !5933)
!5948 = !DILocation(line: 19, column: 2, scope: !5933)
!5949 = !DILocation(line: 20, column: 2, scope: !5933)
!5950 = !DILocation(line: 21, column: 1, scope: !5933)
!5951 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5934, file: !5934, line: 23, type: !5952, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5954)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{null, !118, !5938}
!5954 = !{!5955, !5956}
!5955 = !DILocalVariable(name: "fmt", arg: 1, scope: !5951, file: !5934, line: 23, type: !118)
!5956 = !DILocalVariable(name: "ap", arg: 2, scope: !5951, file: !5934, line: 23, type: !5938)
!5957 = !DILocation(line: 0, scope: !5951)
!5958 = !DILocation(line: 25, column: 2, scope: !5951)
!5959 = !DILocation(line: 26, column: 1, scope: !5951)
!5960 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5934, file: !5934, line: 52, type: !5961, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5963)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{null, !107, !13, !185}
!5963 = !{!5964, !5965, !5966, !5967}
!5964 = !DILocalVariable(name: "level", arg: 1, scope: !5960, file: !5934, line: 52, type: !107)
!5965 = !DILocalVariable(name: "data", arg: 2, scope: !5960, file: !5934, line: 52, type: !13)
!5966 = !DILocalVariable(name: "size", arg: 3, scope: !5960, file: !5934, line: 52, type: !185)
!5967 = !DILocalVariable(name: "data_buffer", scope: !5960, file: !5934, line: 54, type: !118)
!5968 = !DILocation(line: 0, scope: !5960)
!5969 = !DILocation(line: 55, column: 14, scope: !5960)
!5970 = !DILocation(line: 55, column: 2, scope: !5960)
!5971 = !DILocation(line: 56, column: 3, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5960, file: !5934, line: 55, column: 20)
!5973 = !DILocation(line: 57, column: 3, scope: !5972)
!5974 = !DILocation(line: 59, column: 7, scope: !5972)
!5975 = distinct !{!5975, !5970, !5976}
!5976 = !DILocation(line: 65, column: 2, scope: !5960)
!5977 = !DILocation(line: 66, column: 1, scope: !5960)
!5978 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5979, file: !5979, line: 175, type: !5980, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5982)
!5979 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5980 = !DISubroutineType(types: !5981)
!5981 = !{!120, !107}
!5982 = !{!5983}
!5983 = !DILocalVariable(name: "level", arg: 1, scope: !5978, file: !5979, line: 175, type: !107)
!5984 = !DILocation(line: 0, scope: !5978)
!5985 = !DILocation(line: 177, column: 2, scope: !5978)
!5986 = !DILocation(line: 189, column: 1, scope: !5978)
!5987 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5934, file: !5934, line: 28, type: !5988, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5990)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{null, !118, !185}
!5990 = !{!5991, !5992, !5993, !5995, !5997}
!5991 = !DILocalVariable(name: "data", arg: 1, scope: !5987, file: !5934, line: 28, type: !118)
!5992 = !DILocalVariable(name: "length", arg: 2, scope: !5987, file: !5934, line: 28, type: !185)
!5993 = !DILocalVariable(name: "i", scope: !5994, file: !5934, line: 30, type: !185)
!5994 = distinct !DILexicalBlock(scope: !5987, file: !5934, line: 30, column: 2)
!5995 = !DILocalVariable(name: "i", scope: !5996, file: !5934, line: 40, type: !185)
!5996 = distinct !DILexicalBlock(scope: !5987, file: !5934, line: 40, column: 2)
!5997 = !DILocalVariable(name: "c", scope: !5998, file: !5934, line: 42, type: !196)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !5934, line: 41, column: 19)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !5934, line: 41, column: 7)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !5934, line: 40, column: 54)
!6001 = distinct !DILexicalBlock(scope: !5996, file: !5934, line: 40, column: 2)
!6002 = !DILocation(line: 0, scope: !5987)
!6003 = !DILocation(line: 0, scope: !5994)
!6004 = !DILocation(line: 30, column: 2, scope: !5994)
!6005 = !DILocation(line: 38, column: 2, scope: !5987)
!6006 = !DILocation(line: 0, scope: !5996)
!6007 = !DILocation(line: 40, column: 2, scope: !5996)
!6008 = !DILocation(line: 31, column: 9, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6010, file: !5934, line: 31, column: 7)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !5934, line: 30, column: 54)
!6011 = distinct !DILexicalBlock(scope: !5994, file: !5934, line: 30, column: 2)
!6012 = !DILocation(line: 31, column: 7, scope: !6010)
!6013 = !DILocation(line: 32, column: 35, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6009, file: !5934, line: 31, column: 19)
!6015 = !DILocation(line: 32, column: 20, scope: !6014)
!6016 = !DILocation(line: 32, column: 4, scope: !6014)
!6017 = !DILocation(line: 33, column: 3, scope: !6014)
!6018 = !DILocation(line: 34, column: 4, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6009, file: !5934, line: 33, column: 10)
!6020 = !DILocation(line: 30, column: 50, scope: !6011)
!6021 = !DILocation(line: 30, column: 24, scope: !6011)
!6022 = distinct !{!6022, !6004, !6023}
!6023 = !DILocation(line: 36, column: 2, scope: !5994)
!6024 = !DILocation(line: 49, column: 2, scope: !5987)
!6025 = !DILocation(line: 50, column: 1, scope: !5987)
!6026 = !DILocation(line: 41, column: 9, scope: !5999)
!6027 = !DILocation(line: 41, column: 7, scope: !6000)
!6028 = !DILocation(line: 42, column: 22, scope: !5998)
!6029 = !DILocation(line: 0, scope: !5998)
!6030 = !DILocation(line: 44, column: 25, scope: !5998)
!6031 = !DILocation(line: 44, column: 17, scope: !5998)
!6032 = !DILocation(line: 44, column: 33, scope: !5998)
!6033 = !DILocation(line: 44, column: 4, scope: !5998)
!6034 = !DILocation(line: 45, column: 3, scope: !5998)
!6035 = !DILocation(line: 46, column: 4, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !5999, file: !5934, line: 45, column: 10)
!6037 = !DILocation(line: 40, column: 50, scope: !6001)
!6038 = !DILocation(line: 40, column: 24, scope: !6001)
!6039 = distinct !{!6039, !6007, !6040}
!6040 = !DILocation(line: 48, column: 2, scope: !5996)
!6041 = distinct !DISubprogram(name: "isprint", scope: !4956, file: !4956, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6042)
!6042 = !{!6043}
!6043 = !DILocalVariable(name: "c", arg: 1, scope: !6041, file: !4956, line: 37, type: !107)
!6044 = !DILocation(line: 0, scope: !6041)
!6045 = !DILocation(line: 39, column: 38, scope: !6041)
!6046 = !DILocation(line: 39, column: 2, scope: !6041)
!6047 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6048, file: !6048, line: 57, type: !6049, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !6095)
!6048 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6049 = !DISubroutineType(types: !6050)
!6050 = !{null, !32, !6051}
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6052, size: 32)
!6052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6053)
!6053 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2684, line: 141, baseType: !6054)
!6054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2684, line: 97, size: 256, elements: !6055)
!6055 = !{!6056}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6054, file: !2684, line: 107, baseType: !6057, size: 256)
!6057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2684, line: 98, size: 256, elements: !6058)
!6058 = !{!6059, !6064, !6069, !6074, !6079, !6084, !6089, !6094}
!6059 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !2684, line: 99, baseType: !6060, size: 32)
!6060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !2684, line: 99, size: 32, elements: !6061)
!6061 = !{!6062, !6063}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6060, file: !2684, line: 99, baseType: !152, size: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6060, file: !2684, line: 99, baseType: !152, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !2684, line: 100, baseType: !6065, size: 32, offset: 32)
!6065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !2684, line: 100, size: 32, elements: !6066)
!6066 = !{!6067, !6068}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6065, file: !2684, line: 100, baseType: !152, size: 32)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6065, file: !2684, line: 100, baseType: !152, size: 32)
!6069 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !2684, line: 101, baseType: !6070, size: 32, offset: 64)
!6070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !2684, line: 101, size: 32, elements: !6071)
!6071 = !{!6072, !6073}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6070, file: !2684, line: 101, baseType: !152, size: 32)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6070, file: !2684, line: 101, baseType: !152, size: 32)
!6074 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !2684, line: 102, baseType: !6075, size: 32, offset: 96)
!6075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !2684, line: 102, size: 32, elements: !6076)
!6076 = !{!6077, !6078}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6075, file: !2684, line: 102, baseType: !152, size: 32)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6075, file: !2684, line: 102, baseType: !152, size: 32)
!6079 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !2684, line: 103, baseType: !6080, size: 32, offset: 128)
!6080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !2684, line: 103, size: 32, elements: !6081)
!6081 = !{!6082, !6083}
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6080, file: !2684, line: 103, baseType: !152, size: 32)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6080, file: !2684, line: 103, baseType: !152, size: 32)
!6084 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !2684, line: 104, baseType: !6085, size: 32, offset: 160)
!6085 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !2684, line: 104, size: 32, elements: !6086)
!6086 = !{!6087, !6088}
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6085, file: !2684, line: 104, baseType: !152, size: 32)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6085, file: !2684, line: 104, baseType: !152, size: 32)
!6089 = !DIDerivedType(tag: DW_TAG_member, scope: !6057, file: !2684, line: 105, baseType: !6090, size: 32, offset: 192)
!6090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6057, file: !2684, line: 105, size: 32, elements: !6091)
!6091 = !{!6092, !6093}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6090, file: !2684, line: 105, baseType: !152, size: 32)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6090, file: !2684, line: 105, baseType: !152, size: 32)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6057, file: !2684, line: 106, baseType: !152, size: 32, offset: 224)
!6095 = !{!6096, !6097}
!6096 = !DILocalVariable(name: "reason", arg: 1, scope: !6047, file: !6048, line: 57, type: !32)
!6097 = !DILocalVariable(name: "esf", arg: 2, scope: !6047, file: !6048, line: 57, type: !6051)
!6098 = !DILocation(line: 0, scope: !6047)
!6099 = !DILocation(line: 60, column: 10, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6047, file: !6048, line: 60, column: 6)
!6101 = !DILocation(line: 60, column: 6, scope: !6047)
!6102 = !DILocation(line: 61, column: 3, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6100, file: !6048, line: 60, column: 19)
!6104 = !DILocation(line: 62, column: 2, scope: !6103)
!6105 = !DILocation(line: 63, column: 2, scope: !6047)
!6106 = !DILocation(line: 64, column: 1, scope: !6047)
!6107 = distinct !DISubprogram(name: "esf_dump", scope: !6048, file: !6048, line: 20, type: !6108, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !6110)
!6108 = !DISubroutineType(types: !6109)
!6109 = !{null, !6051}
!6110 = !{!6111}
!6111 = !DILocalVariable(name: "esf", arg: 1, scope: !6107, file: !6048, line: 20, type: !6051)
!6112 = !DILocation(line: 0, scope: !6107)
!6113 = !DILocation(line: 22, column: 2, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !6048, line: 22, column: 2)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !6048, line: 22, column: 2)
!6116 = distinct !DILexicalBlock(scope: !6117, file: !6048, line: 22, column: 2)
!6117 = distinct !DILexicalBlock(scope: !6107, file: !6048, line: 22, column: 2)
!6118 = !DILocation(line: 24, column: 2, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !6048, line: 24, column: 2)
!6120 = distinct !DILexicalBlock(scope: !6121, file: !6048, line: 24, column: 2)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !6048, line: 24, column: 2)
!6122 = distinct !DILexicalBlock(scope: !6107, file: !6048, line: 24, column: 2)
!6123 = !DILocation(line: 26, column: 2, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !6048, line: 26, column: 2)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !6048, line: 26, column: 2)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !6048, line: 26, column: 2)
!6127 = distinct !DILexicalBlock(scope: !6107, file: !6048, line: 26, column: 2)
!6128 = !DILocation(line: 53, column: 2, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !6048, line: 53, column: 2)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !6048, line: 53, column: 2)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !6048, line: 53, column: 2)
!6132 = distinct !DILexicalBlock(scope: !6107, file: !6048, line: 53, column: 2)
!6133 = !DILocation(line: 55, column: 1, scope: !6107)
!6134 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6048, file: !6048, line: 82, type: !6135, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !6150)
!6135 = !DISubroutineType(types: !6136)
!6136 = !{null, !6051, !6137}
!6137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6138, size: 32)
!6138 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !392, line: 37, baseType: !6139)
!6139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !6140)
!6140 = !{!6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148, !6149}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6139, file: !392, line: 26, baseType: !152, size: 32)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6139, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6139, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6139, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6139, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6139, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6139, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6139, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6139, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!6150 = !{!6151, !6152, !6153}
!6151 = !DILocalVariable(name: "esf", arg: 1, scope: !6134, file: !6048, line: 82, type: !6051)
!6152 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6134, file: !6048, line: 82, type: !6137)
!6153 = !DILocalVariable(name: "reason", scope: !6134, file: !6048, line: 88, type: !32)
!6154 = !DILocation(line: 0, scope: !6134)
!6155 = !DILocation(line: 88, column: 35, scope: !6134)
!6156 = !DILocation(line: 108, column: 2, scope: !6134)
!6157 = !DILocation(line: 131, column: 1, scope: !6134)
!6158 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6048, file: !6048, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !6159)
!6159 = !{!6160, !6161, !6162}
!6160 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6158, file: !6048, line: 133, type: !106)
!6161 = !DILocalVariable(name: "ssf_contents", scope: !6158, file: !6048, line: 135, type: !1075)
!6162 = !DILocalVariable(name: "oops_esf", scope: !6158, file: !6048, line: 136, type: !6053)
!6163 = !DILocation(line: 0, scope: !6158)
!6164 = !DILocation(line: 136, column: 2, scope: !6158)
!6165 = !DILocation(line: 136, column: 15, scope: !6158)
!6166 = !DILocation(line: 139, column: 22, scope: !6158)
!6167 = !DILocation(line: 139, column: 17, scope: !6158)
!6168 = !DILocation(line: 139, column: 20, scope: !6158)
!6169 = !DILocation(line: 141, column: 2, scope: !6158)
!6170 = !DILocation(line: 142, column: 2, scope: !6158)
!6171 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6172, file: !6172, line: 40, type: !5895, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6173)
!6172 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6173 = !{!6174}
!6174 = !DILocalVariable(name: "irq", arg: 1, scope: !6171, file: !6172, line: 40, type: !32)
!6175 = !DILocation(line: 0, scope: !6171)
!6176 = !DILocation(line: 42, column: 2, scope: !6171)
!6177 = !DILocation(line: 43, column: 1, scope: !6171)
!6178 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !476, file: !476, line: 1508, type: !6179, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6181)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{null, !1002}
!6181 = !{!6182}
!6182 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6178, file: !476, line: 1508, type: !1002)
!6183 = !DILocation(line: 0, scope: !6178)
!6184 = !DILocation(line: 1510, column: 23, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6178, file: !476, line: 1510, column: 7)
!6186 = !DILocation(line: 1510, column: 7, scope: !6178)
!6187 = !DILocation(line: 1512, column: 5, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6185, file: !476, line: 1511, column: 3)
!6189 = !{i64 2149973724}
!6190 = !DILocation(line: 1513, column: 81, scope: !6188)
!6191 = !DILocation(line: 1513, column: 60, scope: !6188)
!6192 = !DILocation(line: 1513, column: 34, scope: !6188)
!6193 = !DILocation(line: 1513, column: 5, scope: !6188)
!6194 = !DILocation(line: 1513, column: 43, scope: !6188)
!6195 = !DILocation(line: 1514, column: 5, scope: !6188)
!6196 = !{i64 2149973838}
!6197 = !DILocation(line: 1515, column: 3, scope: !6188)
!6198 = !DILocation(line: 1516, column: 1, scope: !6178)
!6199 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6172, file: !6172, line: 45, type: !5895, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6200)
!6200 = !{!6201}
!6201 = !DILocalVariable(name: "irq", arg: 1, scope: !6199, file: !6172, line: 45, type: !32)
!6202 = !DILocation(line: 0, scope: !6199)
!6203 = !DILocation(line: 47, column: 2, scope: !6199)
!6204 = !DILocation(line: 48, column: 1, scope: !6199)
!6205 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !476, file: !476, line: 1546, type: !6179, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6206)
!6206 = !{!6207}
!6207 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6205, file: !476, line: 1546, type: !1002)
!6208 = !DILocation(line: 0, scope: !6205)
!6209 = !DILocation(line: 1548, column: 23, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6205, file: !476, line: 1548, column: 7)
!6211 = !DILocation(line: 1548, column: 7, scope: !6205)
!6212 = !DILocation(line: 1550, column: 81, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6210, file: !476, line: 1549, column: 3)
!6214 = !DILocation(line: 1550, column: 60, scope: !6213)
!6215 = !DILocation(line: 1550, column: 34, scope: !6213)
!6216 = !DILocation(line: 1550, column: 5, scope: !6213)
!6217 = !DILocation(line: 1550, column: 43, scope: !6213)
!6218 = !DILocation(line: 271, column: 3, scope: !6219, inlinedAt: !6221)
!6219 = distinct !DISubprogram(name: "__DSB", scope: !6220, file: !6220, line: 269, type: !3055, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !2175)
!6220 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6221 = distinct !DILocation(line: 1551, column: 5, scope: !6213)
!6222 = !{i64 2431226}
!6223 = !DILocation(line: 260, column: 3, scope: !6224, inlinedAt: !6225)
!6224 = distinct !DISubprogram(name: "__ISB", scope: !6220, file: !6220, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !2175)
!6225 = distinct !DILocation(line: 1552, column: 5, scope: !6213)
!6226 = !{i64 2430943}
!6227 = !DILocation(line: 1553, column: 3, scope: !6213)
!6228 = !DILocation(line: 1554, column: 1, scope: !6205)
!6229 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6172, file: !6172, line: 50, type: !6230, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6232)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{!107, !32}
!6232 = !{!6233}
!6233 = !DILocalVariable(name: "irq", arg: 1, scope: !6229, file: !6172, line: 50, type: !32)
!6234 = !DILocation(line: 0, scope: !6229)
!6235 = !DILocation(line: 52, column: 20, scope: !6229)
!6236 = !DILocation(line: 52, column: 9, scope: !6229)
!6237 = !DILocation(line: 52, column: 41, scope: !6229)
!6238 = !DILocation(line: 52, column: 39, scope: !6229)
!6239 = !DILocation(line: 52, column: 2, scope: !6229)
!6240 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6172, file: !6172, line: 64, type: !6241, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6243)
!6241 = !DISubroutineType(types: !6242)
!6242 = !{null, !32, !32, !152}
!6243 = !{!6244, !6245, !6246}
!6244 = !DILocalVariable(name: "irq", arg: 1, scope: !6240, file: !6172, line: 64, type: !32)
!6245 = !DILocalVariable(name: "prio", arg: 2, scope: !6240, file: !6172, line: 64, type: !32)
!6246 = !DILocalVariable(name: "flags", arg: 3, scope: !6240, file: !6172, line: 64, type: !152)
!6247 = !DILocation(line: 0, scope: !6240)
!6248 = !DILocation(line: 83, column: 8, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !6172, line: 82, column: 9)
!6250 = distinct !DILexicalBlock(scope: !6240, file: !6172, line: 76, column: 6)
!6251 = !DILocation(line: 91, column: 2, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !6172, line: 91, column: 2)
!6253 = distinct !DILexicalBlock(scope: !6240, file: !6172, line: 91, column: 2)
!6254 = !DILocation(line: 91, column: 2, scope: !6253)
!6255 = !DILocation(line: 91, column: 2, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6252, file: !6172, line: 91, column: 2)
!6257 = !DILocation(line: 95, column: 2, scope: !6240)
!6258 = !DILocation(line: 96, column: 1, scope: !6240)
!6259 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1638, type: !6260, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6262)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{null, !1002, !152}
!6262 = !{!6263, !6264}
!6263 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6259, file: !476, line: 1638, type: !1002)
!6264 = !DILocalVariable(name: "priority", arg: 2, scope: !6259, file: !476, line: 1638, type: !152)
!6265 = !DILocation(line: 0, scope: !6259)
!6266 = !DILocation(line: 0, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6259, file: !476, line: 1640, column: 7)
!6268 = !DILocation(line: 1640, column: 7, scope: !6259)
!6269 = !DILocation(line: 1648, column: 1, scope: !6259)
!6270 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6172, file: !6172, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6271)
!6271 = !{!6272}
!6272 = !DILocalVariable(name: "unused", arg: 1, scope: !6270, file: !6172, line: 155, type: !13)
!6273 = !DILocation(line: 0, scope: !6270)
!6274 = !DILocation(line: 159, column: 2, scope: !6270)
!6275 = !DILocation(line: 160, column: 1, scope: !6270)
!6276 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6277, file: !6277, line: 87, type: !3055, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !2175)
!6277 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6278 = !DILocation(line: 89, column: 2, scope: !6276)
!6279 = !DILocation(line: 90, column: 2, scope: !6276)
!6280 = !DILocation(line: 91, column: 1, scope: !6276)
!6281 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6277, file: !6277, line: 23, type: !3055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!6282 = !DISubprogram(name: "z_arm_int_exit", scope: !6283, file: !6283, line: 153, type: !3055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!6283 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6284 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6285, file: !6285, line: 256, type: !3055, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2175)
!6285 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6286 = !DILocation(line: 258, column: 2, scope: !6284)
!6287 = !DILocation(line: 262, column: 2, scope: !6284)
!6288 = !DILocation(line: 263, column: 2, scope: !6284)
!6289 = !DILocation(line: 267, column: 2, scope: !6284)
!6290 = !DILocation(line: 268, column: 2, scope: !6284)
!6291 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6285, file: !6285, line: 53, type: !3055, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2175)
!6292 = !DILocation(line: 55, column: 12, scope: !6291)
!6293 = !DILocation(line: 271, column: 3, scope: !6294, inlinedAt: !6295)
!6294 = distinct !DISubprogram(name: "__DSB", scope: !6220, file: !6220, line: 269, type: !3055, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2175)
!6295 = distinct !DILocation(line: 56, column: 2, scope: !6291)
!6296 = !{i64 2429897}
!6297 = !DILocation(line: 260, column: 3, scope: !6298, inlinedAt: !6299)
!6298 = distinct !DISubprogram(name: "__ISB", scope: !6220, file: !6220, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2175)
!6299 = distinct !DILocation(line: 57, column: 2, scope: !6291)
!6300 = !{i64 2429614}
!6301 = !DILocation(line: 58, column: 1, scope: !6291)
!6302 = distinct !DISubprogram(name: "arch_swap", scope: !6303, file: !6303, line: 33, type: !6230, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !6304)
!6303 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6304 = !{!6305}
!6305 = !DILocalVariable(name: "key", arg: 1, scope: !6302, file: !6303, line: 33, type: !32)
!6306 = !DILocation(line: 0, scope: !6302)
!6307 = !DILocation(line: 36, column: 2, scope: !6302)
!6308 = !DILocation(line: 36, column: 17, scope: !6302)
!6309 = !DILocation(line: 36, column: 25, scope: !6302)
!6310 = !DILocation(line: 37, column: 37, scope: !6302)
!6311 = !DILocation(line: 37, column: 17, scope: !6302)
!6312 = !DILocation(line: 37, column: 35, scope: !6302)
!6313 = !DILocation(line: 41, column: 12, scope: !6302)
!6314 = !DILocalVariable(name: "key", arg: 1, scope: !6315, file: !5884, line: 84, type: !32)
!6315 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !6316)
!6316 = !{!6314}
!6317 = !DILocation(line: 0, scope: !6315, inlinedAt: !6318)
!6318 = distinct !DILocation(line: 44, column: 2, scope: !6302)
!6319 = !DILocation(line: 95, column: 2, scope: !6315, inlinedAt: !6318)
!6320 = !{i64 1652897}
!6321 = !DILocation(line: 53, column: 9, scope: !6302)
!6322 = !DILocation(line: 53, column: 24, scope: !6302)
!6323 = !DILocation(line: 53, column: 2, scope: !6302)
!6324 = distinct !DISubprogram(name: "arch_new_thread", scope: !6325, file: !6325, line: 56, type: !6326, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2679, retainedNodes: !6436)
!6325 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6326 = !DISubroutineType(types: !6327)
!6327 = !{null, !6328, !6431, !193, !680, !106, !106, !106}
!6328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6329, size: 32)
!6329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !6330)
!6330 = !{!6331, !6389, !6401, !6402, !6403, !6404, !6405, !6411, !6426}
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6329, file: !322, line: 247, baseType: !6332, size: 384)
!6332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !6333)
!6333 = !{!6334, !6358, !6365, !6366, !6367, !6376, !6377, !6378}
!6334 = !DIDerivedType(tag: DW_TAG_member, scope: !6332, file: !322, line: 60, baseType: !6335, size: 64)
!6335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6332, file: !322, line: 60, size: 64, elements: !6336)
!6336 = !{!6337, !6352}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6335, file: !322, line: 61, baseType: !6338, size: 64)
!6338 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !6339)
!6339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !6340)
!6340 = !{!6341, !6347}
!6341 = !DIDerivedType(tag: DW_TAG_member, scope: !6339, file: !332, line: 38, baseType: !6342, size: 32)
!6342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6339, file: !332, line: 38, size: 32, elements: !6343)
!6343 = !{!6344, !6346}
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6342, file: !332, line: 39, baseType: !6345, size: 32)
!6345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 32)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6342, file: !332, line: 40, baseType: !6345, size: 32)
!6347 = !DIDerivedType(tag: DW_TAG_member, scope: !6339, file: !332, line: 42, baseType: !6348, size: 32, offset: 32)
!6348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6339, file: !332, line: 42, size: 32, elements: !6349)
!6349 = !{!6350, !6351}
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6348, file: !332, line: 43, baseType: !6345, size: 32)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6348, file: !332, line: 44, baseType: !6345, size: 32)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6335, file: !322, line: 62, baseType: !6353, size: 64)
!6353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !6354)
!6354 = !{!6355}
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6353, file: !348, line: 50, baseType: !6356, size: 64)
!6356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6357, size: 64, elements: !353)
!6357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 32)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6332, file: !322, line: 68, baseType: !6359, size: 32, offset: 64)
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 32)
!6360 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !6361)
!6361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !6362)
!6362 = !{!6363}
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6361, file: !358, line: 232, baseType: !6364, size: 64)
!6364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !6339)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6332, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6332, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!6367 = !DIDerivedType(tag: DW_TAG_member, scope: !6332, file: !322, line: 90, baseType: !6368, size: 16, offset: 112)
!6368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6332, file: !322, line: 90, size: 16, elements: !6369)
!6369 = !{!6370, !6375}
!6370 = !DIDerivedType(tag: DW_TAG_member, scope: !6368, file: !322, line: 91, baseType: !6371, size: 16)
!6371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6368, file: !322, line: 91, size: 16, elements: !6372)
!6372 = !{!6373, !6374}
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6371, file: !322, line: 96, baseType: !372, size: 8)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6371, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6368, file: !322, line: 100, baseType: !197, size: 16)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6332, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6332, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6332, file: !322, line: 131, baseType: !6379, size: 192, offset: 192)
!6379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !6380)
!6380 = !{!6381, !6382, !6388}
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6379, file: !358, line: 245, baseType: !6338, size: 64)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6379, file: !358, line: 246, baseType: !6383, size: 32, offset: 64)
!6383 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !6384)
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6385, size: 32)
!6385 = !DISubroutineType(types: !6386)
!6386 = !{null, !6387}
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6379, size: 32)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6379, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6329, file: !322, line: 250, baseType: !6390, size: 288, offset: 384)
!6390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !6391)
!6391 = !{!6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400}
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6390, file: !392, line: 26, baseType: !152, size: 32)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6390, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6390, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6390, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6390, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6390, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6390, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6390, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6390, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6329, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6329, file: !322, line: 256, baseType: !6360, size: 64, offset: 704)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6329, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6329, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6329, file: !322, line: 300, baseType: !6406, size: 96, offset: 1056)
!6406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !6407)
!6407 = !{!6408, !6409, !6410}
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6406, file: !322, line: 153, baseType: !22, size: 32)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6406, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6406, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6329, file: !322, line: 325, baseType: !6412, size: 32, offset: 1152)
!6412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 32)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !6414)
!6414 = !{!6415, !6421, !6422}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6413, file: !419, line: 5074, baseType: !6416, size: 96)
!6416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !6417)
!6417 = !{!6418, !6419, !6420}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6416, file: !423, line: 57, baseType: !426, size: 32)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6416, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6416, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6413, file: !419, line: 5075, baseType: !6360, size: 64, offset: 96)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6413, file: !419, line: 5076, baseType: !6423, size: 32, offset: 160)
!6423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !6424)
!6424 = !{!6425}
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6423, file: !433, line: 52, baseType: !22, size: 32)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6329, file: !322, line: 343, baseType: !6427, size: 64, offset: 1184)
!6427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !6428)
!6428 = !{!6429, !6430}
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6427, file: !392, line: 63, baseType: !152, size: 32)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6427, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!6431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6432, size: 32)
!6432 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !681, line: 44, baseType: !6433)
!6433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !698, line: 47, size: 8, elements: !6434)
!6434 = !{!6435}
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6433, file: !698, line: 48, baseType: !120, size: 8)
!6436 = !{!6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444}
!6437 = !DILocalVariable(name: "thread", arg: 1, scope: !6324, file: !6325, line: 56, type: !6328)
!6438 = !DILocalVariable(name: "stack", arg: 2, scope: !6324, file: !6325, line: 56, type: !6431)
!6439 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6324, file: !6325, line: 57, type: !193)
!6440 = !DILocalVariable(name: "entry", arg: 4, scope: !6324, file: !6325, line: 57, type: !680)
!6441 = !DILocalVariable(name: "p1", arg: 5, scope: !6324, file: !6325, line: 58, type: !106)
!6442 = !DILocalVariable(name: "p2", arg: 6, scope: !6324, file: !6325, line: 58, type: !106)
!6443 = !DILocalVariable(name: "p3", arg: 7, scope: !6324, file: !6325, line: 58, type: !106)
!6444 = !DILocalVariable(name: "iframe", scope: !6324, file: !6325, line: 60, type: !2682)
!6445 = !DILocation(line: 0, scope: !6324)
!6446 = !DILocation(line: 85, column: 11, scope: !6324)
!6447 = !DILocation(line: 93, column: 10, scope: !6324)
!6448 = !DILocation(line: 98, column: 13, scope: !6324)
!6449 = !DILocation(line: 100, column: 15, scope: !6324)
!6450 = !DILocation(line: 100, column: 10, scope: !6324)
!6451 = !DILocation(line: 100, column: 13, scope: !6324)
!6452 = !DILocation(line: 101, column: 15, scope: !6324)
!6453 = !DILocation(line: 101, column: 10, scope: !6324)
!6454 = !DILocation(line: 101, column: 13, scope: !6324)
!6455 = !DILocation(line: 102, column: 15, scope: !6324)
!6456 = !DILocation(line: 102, column: 10, scope: !6324)
!6457 = !DILocation(line: 102, column: 13, scope: !6324)
!6458 = !DILocation(line: 103, column: 15, scope: !6324)
!6459 = !DILocation(line: 103, column: 10, scope: !6324)
!6460 = !DILocation(line: 103, column: 13, scope: !6324)
!6461 = !DILocation(line: 106, column: 10, scope: !6324)
!6462 = !DILocation(line: 106, column: 15, scope: !6324)
!6463 = !DILocation(line: 122, column: 29, scope: !6324)
!6464 = !DILocation(line: 122, column: 23, scope: !6324)
!6465 = !DILocation(line: 122, column: 27, scope: !6324)
!6466 = !DILocation(line: 123, column: 15, scope: !6324)
!6467 = !DILocation(line: 123, column: 23, scope: !6324)
!6468 = !DILocation(line: 143, column: 1, scope: !6324)
!6469 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6325, file: !6325, line: 385, type: !6470, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2679, retainedNodes: !6473)
!6470 = !DISubroutineType(types: !6471)
!6471 = !{!152, !6472, !6472}
!6472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6473 = !{!6474, !6475, !6476, !6479}
!6474 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6469, file: !6325, line: 385, type: !6472)
!6475 = !DILocalVariable(name: "psp", arg: 2, scope: !6469, file: !6325, line: 385, type: !6472)
!6476 = !DILocalVariable(name: "thread", scope: !6469, file: !6325, line: 388, type: !6477)
!6477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6478, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6329)
!6479 = !DILocalVariable(name: "guard_len", scope: !6469, file: !6325, line: 405, type: !152)
!6480 = !DILocation(line: 0, scope: !6469)
!6481 = !DILocation(line: 388, column: 34, scope: !6469)
!6482 = !DILocation(line: 390, column: 13, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6469, file: !6325, line: 390, column: 6)
!6484 = !DILocation(line: 390, column: 6, scope: !6469)
!6485 = !DILocation(line: 438, column: 6, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6469, file: !6325, line: 438, column: 6)
!6487 = !DILocation(line: 438, column: 6, scope: !6469)
!6488 = !DILocation(line: 442, column: 3, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6486, file: !6325, line: 440, column: 22)
!6490 = !DILocation(line: 455, column: 1, scope: !6469)
!6491 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6325, file: !6325, line: 530, type: !6492, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2679, retainedNodes: !6494)
!6492 = !DISubroutineType(types: !6493)
!6493 = !{null, !6328, !193, !680}
!6494 = !{!6495, !6496, !6497}
!6495 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6491, file: !6325, line: 530, type: !6328)
!6496 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6491, file: !6325, line: 530, type: !193)
!6497 = !DILocalVariable(name: "_main", arg: 3, scope: !6491, file: !6325, line: 531, type: !680)
!6498 = !DILocation(line: 0, scope: !6491)
!6499 = !DILocation(line: 535, column: 11, scope: !6491)
!6500 = !DILocation(line: 560, column: 2, scope: !6491)
!6501 = !DILocation(line: 576, column: 2, scope: !6491)
!6502 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6503 = !DILocation(line: 603, column: 2, scope: !6491)
!6504 = distinct !DISubprogram(name: "z_arm_fault", scope: !6505, file: !6505, line: 1036, type: !6506, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6521)
!6505 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6506 = !DISubroutineType(types: !6507)
!6507 = !{null, !152, !152, !152, !6508}
!6508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6509, size: 32)
!6509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !392, line: 37, baseType: !6510)
!6510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !6511)
!6511 = !{!6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519, !6520}
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6510, file: !392, line: 26, baseType: !152, size: 32)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6510, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6510, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6510, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6510, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6510, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6510, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6510, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6510, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!6521 = !{!6522, !6523, !6524, !6525, !6526, !6527, !6528, !6529, !6530, !6531}
!6522 = !DILocalVariable(name: "msp", arg: 1, scope: !6504, file: !6505, line: 1036, type: !152)
!6523 = !DILocalVariable(name: "psp", arg: 2, scope: !6504, file: !6505, line: 1036, type: !152)
!6524 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6504, file: !6505, line: 1036, type: !152)
!6525 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6504, file: !6505, line: 1037, type: !6508)
!6526 = !DILocalVariable(name: "reason", scope: !6504, file: !6505, line: 1039, type: !152)
!6527 = !DILocalVariable(name: "fault", scope: !6504, file: !6505, line: 1040, type: !107)
!6528 = !DILocalVariable(name: "recoverable", scope: !6504, file: !6505, line: 1041, type: !145)
!6529 = !DILocalVariable(name: "nested_exc", scope: !6504, file: !6505, line: 1041, type: !145)
!6530 = !DILocalVariable(name: "esf", scope: !6504, file: !6505, line: 1042, type: !2750)
!6531 = !DILocalVariable(name: "esf_copy", scope: !6504, file: !6505, line: 1047, type: !2751)
!6532 = !DILocation(line: 0, scope: !6504)
!6533 = !DILocation(line: 1040, column: 19, scope: !6504)
!6534 = !DILocation(line: 1041, column: 2, scope: !6504)
!6535 = !DILocation(line: 1047, column: 2, scope: !6504)
!6536 = !DILocation(line: 1047, column: 15, scope: !6504)
!6537 = !DILocalVariable(name: "key", arg: 1, scope: !6538, file: !5884, line: 84, type: !32)
!6538 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6539)
!6539 = !{!6537}
!6540 = !DILocation(line: 0, scope: !6538, inlinedAt: !6541)
!6541 = distinct !DILocation(line: 1050, column: 2, scope: !6504)
!6542 = !DILocation(line: 95, column: 2, scope: !6538, inlinedAt: !6541)
!6543 = !{i64 1686141}
!6544 = !DILocation(line: 1055, column: 9, scope: !6504)
!6545 = !DILocation(line: 1056, column: 2, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !6505, line: 1056, column: 2)
!6547 = distinct !DILexicalBlock(scope: !6504, file: !6505, line: 1056, column: 2)
!6548 = !DILocation(line: 1056, column: 2, scope: !6547)
!6549 = !DILocation(line: 1056, column: 2, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !6505, line: 1056, column: 2)
!6551 = !DILocation(line: 1040, column: 24, scope: !6504)
!6552 = !DILocation(line: 1063, column: 11, scope: !6504)
!6553 = !DILocation(line: 1064, column: 6, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6504, file: !6505, line: 1064, column: 6)
!6555 = !{i8 0, i8 2}
!6556 = !DILocation(line: 1064, column: 6, scope: !6504)
!6557 = !DILocation(line: 1070, column: 20, scope: !6504)
!6558 = !DILocation(line: 1070, column: 2, scope: !6504)
!6559 = !DILocation(line: 1089, column: 6, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6504, file: !6505, line: 1089, column: 6)
!6561 = !DILocation(line: 0, scope: !6560)
!6562 = !DILocation(line: 1089, column: 6, scope: !6504)
!6563 = !DILocation(line: 1090, column: 28, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !6505, line: 1090, column: 7)
!6565 = distinct !DILexicalBlock(scope: !6560, file: !6505, line: 1089, column: 18)
!6566 = !DILocation(line: 1090, column: 44, scope: !6564)
!6567 = !DILocation(line: 1090, column: 7, scope: !6565)
!6568 = !DILocation(line: 1091, column: 24, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6564, file: !6505, line: 1090, column: 50)
!6570 = !DILocation(line: 1092, column: 3, scope: !6569)
!6571 = !DILocation(line: 1094, column: 23, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6560, file: !6505, line: 1093, column: 9)
!6573 = !DILocation(line: 1097, column: 2, scope: !6504)
!6574 = !DILocation(line: 1098, column: 1, scope: !6504)
!6575 = distinct !DISubprogram(name: "get_esf", scope: !6505, file: !6505, line: 894, type: !6576, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6579)
!6576 = !DISubroutineType(types: !6577)
!6577 = !{!2750, !152, !152, !152, !6578}
!6578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6579 = !{!6580, !6581, !6582, !6583, !6584, !6585}
!6580 = !DILocalVariable(name: "msp", arg: 1, scope: !6575, file: !6505, line: 894, type: !152)
!6581 = !DILocalVariable(name: "psp", arg: 2, scope: !6575, file: !6505, line: 894, type: !152)
!6582 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6575, file: !6505, line: 894, type: !152)
!6583 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6575, file: !6505, line: 895, type: !6578)
!6584 = !DILocalVariable(name: "alternative_state_exc", scope: !6575, file: !6505, line: 897, type: !145)
!6585 = !DILocalVariable(name: "ptr_esf", scope: !6575, file: !6505, line: 898, type: !2750)
!6586 = !DILocation(line: 0, scope: !6575)
!6587 = !DILocation(line: 900, column: 14, scope: !6575)
!6588 = !DILocation(line: 902, column: 49, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6575, file: !6505, line: 902, column: 6)
!6590 = !DILocation(line: 902, column: 6, scope: !6575)
!6591 = !DILocation(line: 983, column: 44, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6575, file: !6505, line: 983, column: 6)
!6593 = !DILocation(line: 985, column: 3, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !6505, line: 985, column: 3)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !6505, line: 985, column: 3)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !6505, line: 985, column: 3)
!6597 = distinct !DILexicalBlock(scope: !6598, file: !6505, line: 985, column: 3)
!6598 = distinct !DILexicalBlock(scope: !6592, file: !6505, line: 984, column: 47)
!6599 = !DILocation(line: 986, column: 3, scope: !6598)
!6600 = !DILocation(line: 983, column: 18, scope: !6592)
!6601 = !DILocation(line: 991, column: 7, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6603, file: !6505, line: 990, column: 30)
!6603 = distinct !DILexicalBlock(scope: !6575, file: !6505, line: 990, column: 6)
!6604 = !DILocation(line: 998, column: 16, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !6505, line: 995, column: 10)
!6606 = distinct !DILexicalBlock(scope: !6602, file: !6505, line: 991, column: 7)
!6607 = !DILocation(line: 1002, column: 2, scope: !6575)
!6608 = !DILocation(line: 1003, column: 1, scope: !6575)
!6609 = distinct !DISubprogram(name: "fault_handle", scope: !6505, file: !6505, line: 786, type: !6610, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6612)
!6610 = !DISubroutineType(types: !6611)
!6611 = !{!152, !2750, !107, !6578}
!6612 = !{!6613, !6614, !6615, !6616}
!6613 = !DILocalVariable(name: "esf", arg: 1, scope: !6609, file: !6505, line: 786, type: !2750)
!6614 = !DILocalVariable(name: "fault", arg: 2, scope: !6609, file: !6505, line: 786, type: !107)
!6615 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6609, file: !6505, line: 786, type: !6578)
!6616 = !DILocalVariable(name: "reason", scope: !6609, file: !6505, line: 788, type: !152)
!6617 = !DILocation(line: 0, scope: !6609)
!6618 = !DILocation(line: 790, column: 15, scope: !6609)
!6619 = !DILocation(line: 792, column: 2, scope: !6609)
!6620 = !DILocation(line: 794, column: 12, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6609, file: !6505, line: 792, column: 17)
!6622 = !DILocation(line: 795, column: 3, scope: !6621)
!6623 = !DILocation(line: 800, column: 12, scope: !6621)
!6624 = !DILocation(line: 801, column: 3, scope: !6621)
!6625 = !DILocation(line: 803, column: 12, scope: !6621)
!6626 = !DILocation(line: 804, column: 3, scope: !6621)
!6627 = !DILocation(line: 806, column: 12, scope: !6621)
!6628 = !DILocation(line: 807, column: 3, scope: !6621)
!6629 = !DILocation(line: 814, column: 3, scope: !6621)
!6630 = !DILocation(line: 815, column: 3, scope: !6621)
!6631 = !DILocation(line: 820, column: 3, scope: !6621)
!6632 = !DILocation(line: 821, column: 3, scope: !6621)
!6633 = !DILocation(line: 829, column: 2, scope: !6609)
!6634 = distinct !DISubprogram(name: "hard_fault", scope: !6505, file: !6505, line: 709, type: !6635, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6637)
!6635 = !DISubroutineType(types: !6636)
!6636 = !{!152, !2750, !6578}
!6637 = !{!6638, !6639, !6640}
!6638 = !DILocalVariable(name: "esf", arg: 1, scope: !6634, file: !6505, line: 709, type: !2750)
!6639 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6634, file: !6505, line: 709, type: !6578)
!6640 = !DILocalVariable(name: "reason", scope: !6634, file: !6505, line: 711, type: !152)
!6641 = !DILocation(line: 0, scope: !6634)
!6642 = !DILocation(line: 713, column: 2, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !6505, line: 713, column: 2)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !6505, line: 713, column: 2)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !6505, line: 713, column: 2)
!6646 = distinct !DILexicalBlock(scope: !6634, file: !6505, line: 713, column: 2)
!6647 = !DILocation(line: 732, column: 15, scope: !6634)
!6648 = !DILocation(line: 734, column: 12, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6634, file: !6505, line: 734, column: 6)
!6650 = !DILocation(line: 734, column: 17, scope: !6649)
!6651 = !DILocation(line: 734, column: 41, scope: !6649)
!6652 = !DILocation(line: 734, column: 6, scope: !6634)
!6653 = !DILocation(line: 735, column: 3, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !6505, line: 735, column: 3)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !6505, line: 735, column: 3)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !6505, line: 735, column: 3)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !6505, line: 735, column: 3)
!6658 = distinct !DILexicalBlock(scope: !6649, file: !6505, line: 734, column: 47)
!6659 = !DILocation(line: 736, column: 2, scope: !6658)
!6660 = !DILocation(line: 736, column: 19, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6649, file: !6505, line: 736, column: 13)
!6662 = !DILocation(line: 736, column: 49, scope: !6661)
!6663 = !DILocation(line: 736, column: 13, scope: !6649)
!6664 = !DILocation(line: 737, column: 3, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !6505, line: 737, column: 3)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !6505, line: 737, column: 3)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !6505, line: 737, column: 3)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !6505, line: 737, column: 3)
!6669 = distinct !DILexicalBlock(scope: !6661, file: !6505, line: 736, column: 55)
!6670 = !DILocation(line: 738, column: 2, scope: !6669)
!6671 = !DILocation(line: 738, column: 19, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6661, file: !6505, line: 738, column: 13)
!6673 = !DILocation(line: 738, column: 24, scope: !6672)
!6674 = !DILocation(line: 738, column: 47, scope: !6672)
!6675 = !DILocation(line: 738, column: 13, scope: !6661)
!6676 = !DILocation(line: 739, column: 3, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !6505, line: 739, column: 3)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !6505, line: 739, column: 3)
!6679 = distinct !DILexicalBlock(scope: !6680, file: !6505, line: 739, column: 3)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !6505, line: 739, column: 3)
!6681 = distinct !DILexicalBlock(scope: !6672, file: !6505, line: 738, column: 53)
!6682 = !DILocation(line: 740, column: 7, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6681, file: !6505, line: 740, column: 7)
!6684 = !DILocation(line: 740, column: 7, scope: !6681)
!6685 = !DILocation(line: 741, column: 4, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !6505, line: 741, column: 4)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !6505, line: 741, column: 4)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !6505, line: 741, column: 4)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !6505, line: 741, column: 4)
!6690 = distinct !DILexicalBlock(scope: !6683, file: !6505, line: 740, column: 38)
!6691 = !DILocation(line: 742, column: 24, scope: !6690)
!6692 = !DILocation(line: 743, column: 3, scope: !6690)
!6693 = !DILocation(line: 743, column: 20, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6683, file: !6505, line: 743, column: 14)
!6695 = !DILocation(line: 743, column: 25, scope: !6694)
!6696 = !DILocation(line: 743, column: 52, scope: !6694)
!6697 = !DILocation(line: 743, column: 14, scope: !6683)
!6698 = !DILocation(line: 744, column: 13, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6694, file: !6505, line: 743, column: 58)
!6700 = !DILocation(line: 745, column: 3, scope: !6699)
!6701 = !DILocation(line: 745, column: 20, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6694, file: !6505, line: 745, column: 14)
!6703 = !DILocation(line: 745, column: 25, scope: !6702)
!6704 = !DILocation(line: 745, column: 52, scope: !6702)
!6705 = !DILocation(line: 745, column: 14, scope: !6694)
!6706 = !DILocation(line: 746, column: 13, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6702, file: !6505, line: 745, column: 58)
!6708 = !DILocation(line: 747, column: 3, scope: !6707)
!6709 = !DILocation(line: 747, column: 20, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6702, file: !6505, line: 747, column: 14)
!6711 = !DILocation(line: 747, column: 52, scope: !6710)
!6712 = !DILocation(line: 747, column: 14, scope: !6702)
!6713 = !DILocation(line: 748, column: 13, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6710, file: !6505, line: 747, column: 58)
!6715 = !DILocation(line: 754, column: 4, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !6505, line: 754, column: 4)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !6505, line: 754, column: 4)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !6505, line: 754, column: 4)
!6719 = distinct !DILexicalBlock(scope: !6710, file: !6505, line: 753, column: 10)
!6720 = !DILocation(line: 758, column: 3, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !6505, line: 758, column: 3)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !6505, line: 758, column: 3)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !6505, line: 758, column: 3)
!6724 = distinct !DILexicalBlock(scope: !6672, file: !6505, line: 757, column: 9)
!6725 = !DILocation(line: 766, column: 2, scope: !6634)
!6726 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6505, file: !6505, line: 229, type: !6610, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6727)
!6727 = !{!6728, !6729, !6730, !6731, !6732, !6733, !6736}
!6728 = !DILocalVariable(name: "esf", arg: 1, scope: !6726, file: !6505, line: 229, type: !2750)
!6729 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6726, file: !6505, line: 229, type: !107)
!6730 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6726, file: !6505, line: 230, type: !6578)
!6731 = !DILocalVariable(name: "reason", scope: !6726, file: !6505, line: 232, type: !152)
!6732 = !DILocalVariable(name: "mmfar", scope: !6726, file: !6505, line: 233, type: !152)
!6733 = !DILocalVariable(name: "temp", scope: !6734, file: !6505, line: 254, type: !152)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !6505, line: 244, column: 48)
!6735 = distinct !DILexicalBlock(scope: !6726, file: !6505, line: 244, column: 6)
!6736 = !DILocalVariable(name: "min_stack_ptr", scope: !6737, file: !6505, line: 309, type: !152)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !6505, line: 308, column: 43)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6505, line: 308, column: 7)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6505, line: 289, column: 40)
!6740 = distinct !DILexicalBlock(scope: !6726, file: !6505, line: 288, column: 6)
!6741 = !DILocation(line: 0, scope: !6726)
!6742 = !DILocation(line: 235, column: 2, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !6505, line: 235, column: 2)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !6505, line: 235, column: 2)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6505, line: 235, column: 2)
!6746 = distinct !DILexicalBlock(scope: !6726, file: !6505, line: 235, column: 2)
!6747 = !DILocation(line: 237, column: 12, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6726, file: !6505, line: 237, column: 6)
!6749 = !DILocation(line: 237, column: 17, scope: !6748)
!6750 = !DILocation(line: 237, column: 41, scope: !6748)
!6751 = !DILocation(line: 237, column: 6, scope: !6726)
!6752 = !DILocation(line: 238, column: 3, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !6505, line: 238, column: 3)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !6505, line: 238, column: 3)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !6505, line: 238, column: 3)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !6505, line: 238, column: 3)
!6757 = distinct !DILexicalBlock(scope: !6748, file: !6505, line: 237, column: 47)
!6758 = !DILocation(line: 240, column: 2, scope: !6757)
!6759 = !DILocation(line: 241, column: 12, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6726, file: !6505, line: 241, column: 6)
!6761 = !DILocation(line: 241, column: 17, scope: !6760)
!6762 = !DILocation(line: 241, column: 43, scope: !6760)
!6763 = !DILocation(line: 241, column: 6, scope: !6726)
!6764 = !DILocation(line: 242, column: 3, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !6505, line: 242, column: 3)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6505, line: 242, column: 3)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !6505, line: 242, column: 3)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !6505, line: 242, column: 3)
!6769 = distinct !DILexicalBlock(scope: !6760, file: !6505, line: 241, column: 49)
!6770 = !DILocation(line: 243, column: 2, scope: !6769)
!6771 = !DILocation(line: 244, column: 12, scope: !6735)
!6772 = !DILocation(line: 244, column: 17, scope: !6735)
!6773 = !DILocation(line: 244, column: 42, scope: !6735)
!6774 = !DILocation(line: 244, column: 6, scope: !6726)
!6775 = !DILocation(line: 245, column: 3, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !6505, line: 245, column: 3)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !6505, line: 245, column: 3)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !6505, line: 245, column: 3)
!6779 = distinct !DILexicalBlock(scope: !6734, file: !6505, line: 245, column: 3)
!6780 = !DILocation(line: 254, column: 24, scope: !6734)
!6781 = !DILocation(line: 0, scope: !6734)
!6782 = !DILocation(line: 256, column: 13, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6734, file: !6505, line: 256, column: 7)
!6784 = !DILocation(line: 256, column: 18, scope: !6783)
!6785 = !DILocation(line: 256, column: 44, scope: !6783)
!6786 = !DILocation(line: 256, column: 7, scope: !6734)
!6787 = !DILocation(line: 258, column: 4, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !6505, line: 258, column: 4)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !6505, line: 258, column: 4)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !6505, line: 258, column: 4)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6505, line: 258, column: 4)
!6792 = distinct !DILexicalBlock(scope: !6783, file: !6505, line: 256, column: 50)
!6793 = !DILocation(line: 259, column: 24, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6792, file: !6505, line: 259, column: 8)
!6795 = !DILocation(line: 259, column: 8, scope: !6792)
!6796 = !DILocation(line: 261, column: 15, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6794, file: !6505, line: 259, column: 30)
!6798 = !DILocation(line: 262, column: 4, scope: !6797)
!6799 = !DILocation(line: 265, column: 12, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6726, file: !6505, line: 265, column: 6)
!6801 = !DILocation(line: 265, column: 17, scope: !6800)
!6802 = !DILocation(line: 265, column: 42, scope: !6800)
!6803 = !DILocation(line: 265, column: 6, scope: !6726)
!6804 = !DILocation(line: 266, column: 3, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6505, line: 266, column: 3)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6505, line: 266, column: 3)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6505, line: 266, column: 3)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6505, line: 266, column: 3)
!6809 = distinct !DILexicalBlock(scope: !6800, file: !6505, line: 265, column: 48)
!6810 = !DILocation(line: 267, column: 2, scope: !6809)
!6811 = !DILocation(line: 288, column: 12, scope: !6740)
!6812 = !DILocation(line: 288, column: 17, scope: !6740)
!6813 = !DILocation(line: 288, column: 41, scope: !6740)
!6814 = !DILocation(line: 289, column: 9, scope: !6740)
!6815 = !DILocation(line: 289, column: 14, scope: !6740)
!6816 = !DILocation(line: 288, column: 6, scope: !6726)
!6817 = !DILocation(line: 308, column: 12, scope: !6738)
!6818 = !DILocation(line: 308, column: 17, scope: !6738)
!6819 = !DILocation(line: 308, column: 7, scope: !6739)
!6820 = !DILocation(line: 310, column: 6, scope: !6737)
!6821 = !DILocation(line: 309, column: 29, scope: !6737)
!6822 = !DILocation(line: 0, scope: !6737)
!6823 = !DILocation(line: 312, column: 8, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6737, file: !6505, line: 312, column: 8)
!6825 = !DILocation(line: 312, column: 8, scope: !6737)
!6826 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6827, file: !6220, line: 1099, type: !152)
!6827 = distinct !DISubprogram(name: "__set_PSP", scope: !6220, file: !6220, line: 1099, type: !5908, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6828)
!6828 = !{!6826}
!6829 = !DILocation(line: 0, scope: !6827, inlinedAt: !6830)
!6830 = distinct !DILocation(line: 338, column: 5, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6824, file: !6505, line: 312, column: 23)
!6832 = !DILocation(line: 1101, column: 3, scope: !6827, inlinedAt: !6830)
!6833 = !{i64 2480866}
!6834 = !DILocation(line: 341, column: 4, scope: !6831)
!6835 = !DILocation(line: 342, column: 5, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6505, line: 342, column: 5)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6505, line: 342, column: 5)
!6838 = distinct !DILexicalBlock(scope: !6824, file: !6505, line: 341, column: 11)
!6839 = !DILocation(line: 342, column: 5, scope: !6837)
!6840 = !DILocation(line: 342, column: 5, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6836, file: !6505, line: 342, column: 5)
!6842 = !DILocation(line: 366, column: 12, scope: !6726)
!6843 = !DILocation(line: 369, column: 15, scope: !6726)
!6844 = !DILocation(line: 371, column: 2, scope: !6726)
!6845 = distinct !DISubprogram(name: "bus_fault", scope: !6505, file: !6505, line: 383, type: !6846, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6848)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{!107, !2750, !107, !6578}
!6848 = !{!6849, !6850, !6851, !6852, !6853}
!6849 = !DILocalVariable(name: "esf", arg: 1, scope: !6845, file: !6505, line: 383, type: !2750)
!6850 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6845, file: !6505, line: 383, type: !107)
!6851 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6845, file: !6505, line: 383, type: !6578)
!6852 = !DILocalVariable(name: "reason", scope: !6845, file: !6505, line: 385, type: !152)
!6853 = !DILocalVariable(name: "bfar", scope: !6854, file: !6505, line: 405, type: !152)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6505, line: 395, column: 42)
!6855 = distinct !DILexicalBlock(scope: !6845, file: !6505, line: 395, column: 6)
!6856 = !DILocation(line: 0, scope: !6845)
!6857 = !DILocation(line: 387, column: 2, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !6505, line: 387, column: 2)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !6505, line: 387, column: 2)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6505, line: 387, column: 2)
!6861 = distinct !DILexicalBlock(scope: !6845, file: !6505, line: 387, column: 2)
!6862 = !DILocation(line: 389, column: 11, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6845, file: !6505, line: 389, column: 6)
!6864 = !DILocation(line: 389, column: 16, scope: !6863)
!6865 = !DILocation(line: 389, column: 6, scope: !6845)
!6866 = !DILocation(line: 390, column: 3, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6505, line: 390, column: 3)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6505, line: 390, column: 3)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6505, line: 390, column: 3)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6505, line: 390, column: 3)
!6871 = distinct !DILexicalBlock(scope: !6863, file: !6505, line: 389, column: 39)
!6872 = !DILocation(line: 391, column: 2, scope: !6871)
!6873 = !DILocation(line: 392, column: 11, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6845, file: !6505, line: 392, column: 6)
!6875 = !DILocation(line: 392, column: 16, scope: !6874)
!6876 = !DILocation(line: 392, column: 6, scope: !6845)
!6877 = !DILocation(line: 393, column: 3, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6505, line: 393, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6505, line: 393, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6505, line: 393, column: 3)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6505, line: 393, column: 3)
!6882 = distinct !DILexicalBlock(scope: !6874, file: !6505, line: 392, column: 41)
!6883 = !DILocation(line: 394, column: 2, scope: !6882)
!6884 = !DILocation(line: 395, column: 11, scope: !6855)
!6885 = !DILocation(line: 395, column: 16, scope: !6855)
!6886 = !DILocation(line: 395, column: 6, scope: !6845)
!6887 = !DILocation(line: 396, column: 3, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6505, line: 396, column: 3)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !6505, line: 396, column: 3)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !6505, line: 396, column: 3)
!6891 = distinct !DILexicalBlock(scope: !6854, file: !6505, line: 396, column: 3)
!6892 = !DILocation(line: 405, column: 3, scope: !6854)
!6893 = !DILocation(line: 0, scope: !6854)
!6894 = !DILocation(line: 407, column: 13, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6854, file: !6505, line: 407, column: 7)
!6896 = !DILocation(line: 407, column: 18, scope: !6895)
!6897 = !DILocation(line: 407, column: 44, scope: !6895)
!6898 = !DILocation(line: 407, column: 7, scope: !6854)
!6899 = !DILocation(line: 408, column: 4, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6505, line: 408, column: 4)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6505, line: 408, column: 4)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6505, line: 408, column: 4)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6505, line: 408, column: 4)
!6904 = distinct !DILexicalBlock(scope: !6895, file: !6505, line: 407, column: 50)
!6905 = !DILocation(line: 409, column: 24, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6904, file: !6505, line: 409, column: 8)
!6907 = !DILocation(line: 409, column: 8, scope: !6904)
!6908 = !DILocation(line: 411, column: 15, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6906, file: !6505, line: 409, column: 30)
!6910 = !DILocation(line: 412, column: 4, scope: !6909)
!6911 = !DILocation(line: 415, column: 11, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6845, file: !6505, line: 415, column: 6)
!6913 = !DILocation(line: 415, column: 16, scope: !6912)
!6914 = !DILocation(line: 415, column: 6, scope: !6845)
!6915 = !DILocation(line: 416, column: 3, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !6505, line: 416, column: 3)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !6505, line: 416, column: 3)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !6505, line: 416, column: 3)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6505, line: 416, column: 3)
!6920 = distinct !DILexicalBlock(scope: !6912, file: !6505, line: 415, column: 44)
!6921 = !DILocation(line: 417, column: 2, scope: !6920)
!6922 = !DILocation(line: 418, column: 12, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6845, file: !6505, line: 418, column: 6)
!6924 = !DILocation(line: 418, column: 17, scope: !6923)
!6925 = !DILocation(line: 418, column: 41, scope: !6923)
!6926 = !DILocation(line: 418, column: 6, scope: !6845)
!6927 = !DILocation(line: 419, column: 3, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6929, file: !6505, line: 419, column: 3)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !6505, line: 419, column: 3)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6505, line: 419, column: 3)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6505, line: 419, column: 3)
!6932 = distinct !DILexicalBlock(scope: !6923, file: !6505, line: 418, column: 47)
!6933 = !DILocation(line: 421, column: 2, scope: !6932)
!6934 = !DILocation(line: 524, column: 12, scope: !6845)
!6935 = !DILocation(line: 526, column: 15, scope: !6845)
!6936 = !DILocation(line: 528, column: 2, scope: !6845)
!6937 = distinct !DISubprogram(name: "usage_fault", scope: !6505, file: !6505, line: 539, type: !6938, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6942)
!6938 = !DISubroutineType(types: !6939)
!6939 = !{!152, !6940}
!6940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6941, size: 32)
!6941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2751)
!6942 = !{!6943, !6944}
!6943 = !DILocalVariable(name: "esf", arg: 1, scope: !6937, file: !6505, line: 539, type: !6940)
!6944 = !DILocalVariable(name: "reason", scope: !6937, file: !6505, line: 541, type: !152)
!6945 = !DILocation(line: 0, scope: !6937)
!6946 = !DILocation(line: 543, column: 2, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6505, line: 543, column: 2)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6505, line: 543, column: 2)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6505, line: 543, column: 2)
!6950 = distinct !DILexicalBlock(scope: !6937, file: !6505, line: 543, column: 2)
!6951 = !DILocation(line: 546, column: 12, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6937, file: !6505, line: 546, column: 6)
!6953 = !DILocation(line: 546, column: 17, scope: !6952)
!6954 = !DILocation(line: 546, column: 43, scope: !6952)
!6955 = !DILocation(line: 546, column: 6, scope: !6937)
!6956 = !DILocation(line: 547, column: 3, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6505, line: 547, column: 3)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6505, line: 547, column: 3)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6505, line: 547, column: 3)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6505, line: 547, column: 3)
!6961 = distinct !DILexicalBlock(scope: !6952, file: !6505, line: 546, column: 49)
!6962 = !DILocation(line: 548, column: 2, scope: !6961)
!6963 = !DILocation(line: 549, column: 12, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6937, file: !6505, line: 549, column: 6)
!6965 = !DILocation(line: 549, column: 17, scope: !6964)
!6966 = !DILocation(line: 549, column: 43, scope: !6964)
!6967 = !DILocation(line: 549, column: 6, scope: !6937)
!6968 = !DILocation(line: 550, column: 3, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6505, line: 550, column: 3)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6505, line: 550, column: 3)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6505, line: 550, column: 3)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6505, line: 550, column: 3)
!6973 = distinct !DILexicalBlock(scope: !6964, file: !6505, line: 549, column: 49)
!6974 = !DILocation(line: 551, column: 2, scope: !6973)
!6975 = !DILocation(line: 567, column: 12, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6937, file: !6505, line: 567, column: 6)
!6977 = !DILocation(line: 567, column: 17, scope: !6976)
!6978 = !DILocation(line: 567, column: 38, scope: !6976)
!6979 = !DILocation(line: 567, column: 6, scope: !6937)
!6980 = !DILocation(line: 568, column: 3, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6505, line: 568, column: 3)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6505, line: 568, column: 3)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !6505, line: 568, column: 3)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !6505, line: 568, column: 3)
!6985 = distinct !DILexicalBlock(scope: !6976, file: !6505, line: 567, column: 44)
!6986 = !DILocation(line: 569, column: 2, scope: !6985)
!6987 = !DILocation(line: 570, column: 12, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6937, file: !6505, line: 570, column: 6)
!6989 = !DILocation(line: 570, column: 17, scope: !6988)
!6990 = !DILocation(line: 570, column: 39, scope: !6988)
!6991 = !DILocation(line: 570, column: 6, scope: !6937)
!6992 = !DILocation(line: 571, column: 3, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !6505, line: 571, column: 3)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !6505, line: 571, column: 3)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !6505, line: 571, column: 3)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6505, line: 571, column: 3)
!6997 = distinct !DILexicalBlock(scope: !6988, file: !6505, line: 570, column: 45)
!6998 = !DILocation(line: 572, column: 2, scope: !6997)
!6999 = !DILocation(line: 573, column: 12, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6937, file: !6505, line: 573, column: 6)
!7001 = !DILocation(line: 573, column: 17, scope: !7000)
!7002 = !DILocation(line: 573, column: 42, scope: !7000)
!7003 = !DILocation(line: 573, column: 6, scope: !6937)
!7004 = !DILocation(line: 574, column: 3, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6505, line: 574, column: 3)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6505, line: 574, column: 3)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !6505, line: 574, column: 3)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !6505, line: 574, column: 3)
!7009 = distinct !DILexicalBlock(scope: !7000, file: !6505, line: 573, column: 48)
!7010 = !DILocation(line: 575, column: 2, scope: !7009)
!7011 = !DILocation(line: 576, column: 12, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6937, file: !6505, line: 576, column: 6)
!7013 = !DILocation(line: 576, column: 17, scope: !7012)
!7014 = !DILocation(line: 576, column: 44, scope: !7012)
!7015 = !DILocation(line: 576, column: 6, scope: !6937)
!7016 = !DILocation(line: 577, column: 3, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6505, line: 577, column: 3)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !6505, line: 577, column: 3)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !6505, line: 577, column: 3)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !6505, line: 577, column: 3)
!7021 = distinct !DILexicalBlock(scope: !7012, file: !6505, line: 576, column: 50)
!7022 = !DILocation(line: 578, column: 2, scope: !7021)
!7023 = !DILocation(line: 581, column: 12, scope: !6937)
!7024 = !DILocation(line: 583, column: 2, scope: !6937)
!7025 = distinct !DISubprogram(name: "debug_monitor", scope: !6505, file: !6505, line: 632, type: !7026, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7028)
!7026 = !DISubroutineType(types: !7027)
!7027 = !{null, !2750, !6578}
!7028 = !{!7029, !7030}
!7029 = !DILocalVariable(name: "esf", arg: 1, scope: !7025, file: !6505, line: 632, type: !2750)
!7030 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7025, file: !6505, line: 632, type: !6578)
!7031 = !DILocation(line: 0, scope: !7025)
!7032 = !DILocation(line: 634, column: 15, scope: !7025)
!7033 = !DILocation(line: 636, column: 2, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6505, line: 636, column: 2)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6505, line: 636, column: 2)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6505, line: 636, column: 2)
!7037 = distinct !DILexicalBlock(scope: !7025, file: !6505, line: 636, column: 2)
!7038 = !DILocation(line: 652, column: 1, scope: !7025)
!7039 = distinct !DISubprogram(name: "reserved_exception", scope: !6505, file: !6505, line: 776, type: !7040, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7042)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{null, !6940, !107}
!7042 = !{!7043, !7044}
!7043 = !DILocalVariable(name: "esf", arg: 1, scope: !7039, file: !6505, line: 776, type: !6940)
!7044 = !DILocalVariable(name: "fault", arg: 2, scope: !7039, file: !6505, line: 776, type: !107)
!7045 = !DILocation(line: 0, scope: !7039)
!7046 = !DILocation(line: 780, column: 2, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6505, line: 780, column: 2)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6505, line: 780, column: 2)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6505, line: 780, column: 2)
!7050 = distinct !DILexicalBlock(scope: !7039, file: !6505, line: 780, column: 2)
!7051 = !DILocation(line: 783, column: 1, scope: !7039)
!7052 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6505, file: !6505, line: 658, type: !7053, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7055)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{!145, !2750}
!7055 = !{!7056, !7057, !7058}
!7056 = !DILocalVariable(name: "esf", arg: 1, scope: !7052, file: !6505, line: 658, type: !2750)
!7057 = !DILocalVariable(name: "ret_addr", scope: !7052, file: !6505, line: 660, type: !2793)
!7058 = !DILocalVariable(name: "fault_insn", scope: !7052, file: !6505, line: 686, type: !197)
!7059 = !DILocation(line: 0, scope: !7052)
!7060 = !DILocation(line: 660, column: 46, scope: !7052)
!7061 = !DILocation(line: 660, column: 23, scope: !7052)
!7062 = !DILocation(line: 682, column: 11, scope: !7052)
!7063 = !DILocation(line: 271, column: 3, scope: !7064, inlinedAt: !7065)
!7064 = distinct !DISubprogram(name: "__DSB", scope: !6220, file: !6220, line: 269, type: !3055, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !2175)
!7065 = distinct !DILocation(line: 683, column: 2, scope: !7052)
!7066 = !{i64 2457001}
!7067 = !DILocation(line: 260, column: 3, scope: !7068, inlinedAt: !7069)
!7068 = distinct !DISubprogram(name: "__ISB", scope: !6220, file: !6220, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !2175)
!7069 = distinct !DILocation(line: 684, column: 2, scope: !7052)
!7070 = !{i64 2456718}
!7071 = !DILocation(line: 686, column: 35, scope: !7052)
!7072 = !DILocation(line: 686, column: 24, scope: !7052)
!7073 = !DILocation(line: 688, column: 11, scope: !7052)
!7074 = !DILocation(line: 271, column: 3, scope: !7064, inlinedAt: !7075)
!7075 = distinct !DILocation(line: 689, column: 2, scope: !7052)
!7076 = !DILocation(line: 260, column: 3, scope: !7068, inlinedAt: !7077)
!7077 = distinct !DILocation(line: 690, column: 2, scope: !7052)
!7078 = !DILocation(line: 693, column: 45, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7052, file: !6505, line: 693, column: 6)
!7080 = !DILocation(line: 699, column: 1, scope: !7052)
!7081 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6505, file: !6505, line: 1107, type: !3055, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !2175)
!7082 = !DILocation(line: 1111, column: 11, scope: !7081)
!7083 = !DILocation(line: 1136, column: 1, scope: !7081)
!7084 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7085, file: !7085, line: 26, type: !3055, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !7086)
!7085 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7086 = !{!7087}
!7087 = !DILocalVariable(name: "irq", scope: !7084, file: !7085, line: 28, type: !107)
!7088 = !DILocation(line: 0, scope: !7084)
!7089 = !DILocation(line: 30, column: 2, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7084, file: !7085, line: 30, column: 2)
!7091 = !DILocation(line: 31, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !7085, line: 30, column: 39)
!7093 = distinct !DILexicalBlock(scope: !7090, file: !7085, line: 30, column: 2)
!7094 = !DILocation(line: 30, column: 35, scope: !7093)
!7095 = !DILocation(line: 30, column: 13, scope: !7093)
!7096 = distinct !{!7096, !7089, !7097}
!7097 = !DILocation(line: 32, column: 2, scope: !7090)
!7098 = !DILocation(line: 33, column: 1, scope: !7084)
!7099 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1638, type: !6260, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !7100)
!7100 = !{!7101, !7102}
!7101 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7099, file: !476, line: 1638, type: !1002)
!7102 = !DILocalVariable(name: "priority", arg: 2, scope: !7099, file: !476, line: 1638, type: !152)
!7103 = !DILocation(line: 0, scope: !7099)
!7104 = !DILocation(line: 1640, column: 7, scope: !7099)
!7105 = !DILocation(line: 0, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7099, file: !476, line: 1640, column: 7)
!7107 = !DILocation(line: 1648, column: 1, scope: !7099)
!7108 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7109, file: !7109, line: 27, type: !7110, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7216)
!7109 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7110 = !DISubroutineType(types: !7111)
!7111 = !{null, !7112}
!7112 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !7113)
!7113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7114, size: 32)
!7114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !7115)
!7115 = !{!7116, !7174, !7186, !7187, !7188, !7189, !7190, !7196, !7211}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7114, file: !322, line: 247, baseType: !7117, size: 384)
!7117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !7118)
!7118 = !{!7119, !7143, !7150, !7151, !7152, !7161, !7162, !7163}
!7119 = !DIDerivedType(tag: DW_TAG_member, scope: !7117, file: !322, line: 60, baseType: !7120, size: 64)
!7120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7117, file: !322, line: 60, size: 64, elements: !7121)
!7121 = !{!7122, !7137}
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7120, file: !322, line: 61, baseType: !7123, size: 64)
!7123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !7124)
!7124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !7125)
!7125 = !{!7126, !7132}
!7126 = !DIDerivedType(tag: DW_TAG_member, scope: !7124, file: !332, line: 38, baseType: !7127, size: 32)
!7127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7124, file: !332, line: 38, size: 32, elements: !7128)
!7128 = !{!7129, !7131}
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7127, file: !332, line: 39, baseType: !7130, size: 32)
!7130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7124, size: 32)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7127, file: !332, line: 40, baseType: !7130, size: 32)
!7132 = !DIDerivedType(tag: DW_TAG_member, scope: !7124, file: !332, line: 42, baseType: !7133, size: 32, offset: 32)
!7133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7124, file: !332, line: 42, size: 32, elements: !7134)
!7134 = !{!7135, !7136}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7133, file: !332, line: 43, baseType: !7130, size: 32)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7133, file: !332, line: 44, baseType: !7130, size: 32)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7120, file: !322, line: 62, baseType: !7138, size: 64)
!7138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !7139)
!7139 = !{!7140}
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7138, file: !348, line: 50, baseType: !7141, size: 64)
!7141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7142, size: 64, elements: !353)
!7142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7138, size: 32)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7117, file: !322, line: 68, baseType: !7144, size: 32, offset: 64)
!7144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7145, size: 32)
!7145 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !7146)
!7146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !7147)
!7147 = !{!7148}
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7146, file: !358, line: 232, baseType: !7149, size: 64)
!7149 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !7124)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7117, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7117, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!7152 = !DIDerivedType(tag: DW_TAG_member, scope: !7117, file: !322, line: 90, baseType: !7153, size: 16, offset: 112)
!7153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7117, file: !322, line: 90, size: 16, elements: !7154)
!7154 = !{!7155, !7160}
!7155 = !DIDerivedType(tag: DW_TAG_member, scope: !7153, file: !322, line: 91, baseType: !7156, size: 16)
!7156 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7153, file: !322, line: 91, size: 16, elements: !7157)
!7157 = !{!7158, !7159}
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7156, file: !322, line: 96, baseType: !372, size: 8)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7156, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7153, file: !322, line: 100, baseType: !197, size: 16)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7117, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7117, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7117, file: !322, line: 131, baseType: !7164, size: 192, offset: 192)
!7164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !7165)
!7165 = !{!7166, !7167, !7173}
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7164, file: !358, line: 245, baseType: !7123, size: 64)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7164, file: !358, line: 246, baseType: !7168, size: 32, offset: 64)
!7168 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !7169)
!7169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7170, size: 32)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{null, !7172}
!7172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7164, size: 32)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7164, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7114, file: !322, line: 250, baseType: !7175, size: 288, offset: 384)
!7175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !7176)
!7176 = !{!7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185}
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7175, file: !392, line: 26, baseType: !152, size: 32)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7175, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7175, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7175, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7175, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7175, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7175, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7175, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7175, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7114, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7114, file: !322, line: 256, baseType: !7145, size: 64, offset: 704)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7114, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7114, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7114, file: !322, line: 300, baseType: !7191, size: 96, offset: 1056)
!7191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !7192)
!7192 = !{!7193, !7194, !7195}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7191, file: !322, line: 153, baseType: !22, size: 32)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7191, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7191, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7114, file: !322, line: 325, baseType: !7197, size: 32, offset: 1152)
!7197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7198, size: 32)
!7198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !7199)
!7199 = !{!7200, !7206, !7207}
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7198, file: !419, line: 5074, baseType: !7201, size: 96)
!7201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !7202)
!7202 = !{!7203, !7204, !7205}
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7201, file: !423, line: 57, baseType: !426, size: 32)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7201, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7201, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7198, file: !419, line: 5075, baseType: !7145, size: 64, offset: 96)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7198, file: !419, line: 5076, baseType: !7208, size: 32, offset: 160)
!7208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !7209)
!7209 = !{!7210}
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7208, file: !433, line: 52, baseType: !22, size: 32)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7114, file: !322, line: 343, baseType: !7212, size: 64, offset: 1184)
!7212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !7213)
!7213 = !{!7214, !7215}
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7212, file: !392, line: 63, baseType: !152, size: 32)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7212, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!7216 = !{!7217}
!7217 = !DILocalVariable(name: "thread", arg: 1, scope: !7108, file: !7109, line: 27, type: !7112)
!7218 = !DILocation(line: 0, scope: !7108)
!7219 = !DILocation(line: 29, column: 6, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7108, file: !7109, line: 29, column: 6)
!7221 = !DILocation(line: 29, column: 15, scope: !7220)
!7222 = !DILocation(line: 29, column: 6, scope: !7108)
!7223 = !DILocation(line: 1031, column: 3, scope: !7224, inlinedAt: !7229)
!7224 = distinct !DISubprogram(name: "__get_IPSR", scope: !6220, file: !6220, line: 1027, type: !7225, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7227)
!7225 = !DISubroutineType(types: !7226)
!7226 = !{!152}
!7227 = !{!7228}
!7228 = !DILocalVariable(name: "result", scope: !7224, file: !6220, line: 1029, type: !152)
!7229 = distinct !DILocation(line: 48, column: 10, scope: !7230, inlinedAt: !7234)
!7230 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7231, file: !7231, line: 46, type: !7232, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !2175)
!7231 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7232 = !DISubroutineType(types: !7233)
!7233 = !{!145}
!7234 = distinct !DILocation(line: 30, column: 7, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !7109, line: 30, column: 7)
!7236 = distinct !DILexicalBlock(scope: !7220, file: !7109, line: 29, column: 26)
!7237 = !{i64 2445849}
!7238 = !DILocation(line: 0, scope: !7224, inlinedAt: !7229)
!7239 = !DILocation(line: 48, column: 9, scope: !7230, inlinedAt: !7234)
!7240 = !DILocation(line: 30, column: 7, scope: !7236)
!7241 = !DILocation(line: 42, column: 14, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7235, file: !7109, line: 30, column: 25)
!7243 = !DILocation(line: 48, column: 15, scope: !7242)
!7244 = !DILocation(line: 49, column: 3, scope: !7242)
!7245 = !DILocation(line: 52, column: 2, scope: !7108)
!7246 = !DILocation(line: 53, column: 1, scope: !7108)
!7247 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !317, file: !317, line: 127, type: !3055, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !310, retainedNodes: !2175)
!7248 = !DILocation(line: 134, column: 2, scope: !7247)
!7249 = !DILocation(line: 156, column: 1, scope: !7247)
!7250 = !DILocation(line: 0, scope: !316)
!7251 = !DILocation(line: 289, column: 36, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !316, file: !317, line: 285, column: 2)
!7253 = !DILocation(line: 289, column: 42, scope: !7252)
!7254 = !DILocation(line: 300, column: 36, scope: !316)
!7255 = !DILocation(line: 301, column: 35, scope: !316)
!7256 = !DILocation(line: 302, column: 37, scope: !316)
!7257 = !DILocation(line: 311, column: 2, scope: !316)
!7258 = !DILocation(line: 316, column: 1, scope: !316)
!7259 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !504, file: !504, line: 180, type: !3055, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7260 = !DILocation(line: 188, column: 12, scope: !7259)
!7261 = !DILocation(line: 271, column: 3, scope: !7262, inlinedAt: !7263)
!7262 = distinct !DISubprogram(name: "__DSB", scope: !6220, file: !6220, line: 269, type: !3055, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7263 = distinct !DILocation(line: 192, column: 2, scope: !7259)
!7264 = !{i64 2604676}
!7265 = !DILocation(line: 260, column: 3, scope: !7266, inlinedAt: !7267)
!7266 = distinct !DISubprogram(name: "__ISB", scope: !6220, file: !6220, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7267 = distinct !DILocation(line: 193, column: 2, scope: !7259)
!7268 = !{i64 2604393}
!7269 = !DILocation(line: 194, column: 1, scope: !7259)
!7270 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !504, file: !504, line: 199, type: !3055, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7271 = !DILocation(line: 282, column: 3, scope: !7272, inlinedAt: !7273)
!7272 = distinct !DISubprogram(name: "__DMB", scope: !6220, file: !6220, line: 280, type: !3055, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7273 = distinct !DILocation(line: 202, column: 2, scope: !7270)
!7274 = !{i64 2604952}
!7275 = !DILocation(line: 205, column: 12, scope: !7270)
!7276 = !DILocation(line: 206, column: 1, scope: !7270)
!7277 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !504, file: !504, line: 275, type: !7278, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7291)
!7278 = !DISubroutineType(types: !7279)
!7279 = !{null, !7280, !1956, !6472, !6472}
!7280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7281, size: 32)
!7281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7282)
!7282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !448, line: 52, size: 96, elements: !7283)
!7283 = !{!7284, !7285, !7286}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7282, file: !448, line: 53, baseType: !22, size: 32)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7282, file: !448, line: 54, baseType: !185, size: 32, offset: 32)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7282, file: !448, line: 55, baseType: !7287, size: 32, offset: 64)
!7287 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !454, line: 151, baseType: !7288)
!7288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 149, size: 32, elements: !7289)
!7289 = !{!7290}
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7288, file: !454, line: 150, baseType: !152, size: 32)
!7291 = !{!7292, !7293, !7294, !7295}
!7292 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7277, file: !504, line: 276, type: !7280)
!7293 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7277, file: !504, line: 276, type: !1956)
!7294 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7277, file: !504, line: 277, type: !6472)
!7295 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7277, file: !504, line: 277, type: !6472)
!7296 = !DILocation(line: 0, scope: !7277)
!7297 = !DILocation(line: 279, column: 6, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7277, file: !504, line: 279, column: 6)
!7299 = !DILocation(line: 280, column: 57, scope: !7298)
!7300 = !DILocation(line: 279, column: 6, scope: !7277)
!7301 = !DILocation(line: 282, column: 3, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !504, line: 282, column: 3)
!7303 = distinct !DILexicalBlock(scope: !7304, file: !504, line: 282, column: 3)
!7304 = distinct !DILexicalBlock(scope: !7305, file: !504, line: 282, column: 3)
!7305 = distinct !DILexicalBlock(scope: !7298, file: !504, line: 280, column: 69)
!7306 = !DILocation(line: 285, column: 1, scope: !7277)
!7307 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7308, file: !7308, line: 220, type: !7309, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7311)
!7308 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7309 = !DISubroutineType(types: !7310)
!7310 = !{!107, !7280, !1956, !6472, !6472}
!7311 = !{!7312, !7313, !7314, !7315, !7316}
!7312 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7307, file: !7308, line: 221, type: !7280)
!7313 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7307, file: !7308, line: 221, type: !1956)
!7314 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7307, file: !7308, line: 222, type: !6472)
!7315 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7307, file: !7308, line: 223, type: !6472)
!7316 = !DILocalVariable(name: "mpu_reg_index", scope: !7307, file: !7308, line: 225, type: !107)
!7317 = !DILocation(line: 0, scope: !7307)
!7318 = !DILocation(line: 225, column: 22, scope: !7307)
!7319 = !DILocation(line: 233, column: 18, scope: !7307)
!7320 = !DILocation(line: 236, column: 23, scope: !7307)
!7321 = !DILocation(line: 236, column: 21, scope: !7307)
!7322 = !DILocation(line: 238, column: 2, scope: !7307)
!7323 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !504, file: !504, line: 105, type: !7324, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7326)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{!107, !7280, !195, !195, !145}
!7326 = !{!7327, !7328, !7329, !7330, !7331, !7332}
!7327 = !DILocalVariable(name: "regions", arg: 1, scope: !7323, file: !504, line: 106, type: !7280)
!7328 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7323, file: !504, line: 106, type: !195)
!7329 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7323, file: !504, line: 106, type: !195)
!7330 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7323, file: !504, line: 107, type: !145)
!7331 = !DILocalVariable(name: "i", scope: !7323, file: !504, line: 109, type: !107)
!7332 = !DILocalVariable(name: "reg_index", scope: !7323, file: !504, line: 110, type: !107)
!7333 = !DILocation(line: 0, scope: !7323)
!7334 = !DILocation(line: 110, column: 18, scope: !7323)
!7335 = !DILocation(line: 112, column: 16, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !504, line: 112, column: 2)
!7337 = distinct !DILexicalBlock(scope: !7323, file: !504, line: 112, column: 2)
!7338 = !DILocation(line: 112, column: 2, scope: !7337)
!7339 = !DILocation(line: 113, column: 7, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !504, line: 113, column: 7)
!7341 = distinct !DILexicalBlock(scope: !7336, file: !504, line: 112, column: 36)
!7342 = !DILocation(line: 113, column: 18, scope: !7340)
!7343 = !DILocation(line: 113, column: 23, scope: !7340)
!7344 = !DILocation(line: 113, column: 7, scope: !7341)
!7345 = !DILocation(line: 118, column: 23, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7341, file: !504, line: 118, column: 7)
!7347 = !DILocation(line: 119, column: 7, scope: !7346)
!7348 = !DILocation(line: 118, column: 7, scope: !7341)
!7349 = !DILocation(line: 120, column: 4, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7351, file: !504, line: 120, column: 4)
!7351 = distinct !DILexicalBlock(scope: !7352, file: !504, line: 120, column: 4)
!7352 = distinct !DILexicalBlock(scope: !7353, file: !504, line: 120, column: 4)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !504, line: 120, column: 4)
!7354 = distinct !DILexicalBlock(scope: !7346, file: !504, line: 119, column: 45)
!7355 = !DILocation(line: 121, column: 4, scope: !7354)
!7356 = !DILocation(line: 124, column: 36, scope: !7341)
!7357 = !DILocation(line: 124, column: 15, scope: !7341)
!7358 = !DILocation(line: 126, column: 17, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7341, file: !504, line: 126, column: 7)
!7360 = !DILocation(line: 126, column: 7, scope: !7341)
!7361 = !DILocation(line: 131, column: 12, scope: !7341)
!7362 = !DILocation(line: 132, column: 2, scope: !7341)
!7363 = !DILocation(line: 112, column: 32, scope: !7336)
!7364 = distinct !{!7364, !7338, !7365}
!7365 = !DILocation(line: 132, column: 2, scope: !7337)
!7366 = !DILocation(line: 135, column: 1, scope: !7323)
!7367 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7308, file: !7308, line: 63, type: !7368, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7370)
!7368 = !DISubroutineType(types: !7369)
!7369 = !{!107, !7280}
!7370 = !{!7371, !7372}
!7371 = !DILocalVariable(name: "part", arg: 1, scope: !7367, file: !7308, line: 63, type: !7280)
!7372 = !DILocalVariable(name: "partition_is_valid", scope: !7367, file: !7308, line: 70, type: !107)
!7373 = !DILocation(line: 0, scope: !7367)
!7374 = !DILocation(line: 71, column: 11, scope: !7367)
!7375 = !DILocation(line: 71, column: 37, scope: !7367)
!7376 = !{i32 0, i32 33}
!7377 = !DILocation(line: 72, column: 3, scope: !7367)
!7378 = !DILocation(line: 71, column: 30, scope: !7367)
!7379 = !DILocation(line: 75, column: 11, scope: !7367)
!7380 = !DILocation(line: 75, column: 17, scope: !7367)
!7381 = !DILocation(line: 75, column: 38, scope: !7367)
!7382 = !DILocation(line: 77, column: 2, scope: !7367)
!7383 = distinct !DISubprogram(name: "mpu_configure_region", scope: !504, file: !504, line: 79, type: !7384, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7386)
!7384 = !DISubroutineType(types: !7385)
!7385 = !{!107, !1956, !7280}
!7386 = !{!7387, !7388, !7389}
!7387 = !DILocalVariable(name: "index", arg: 1, scope: !7383, file: !504, line: 79, type: !1956)
!7388 = !DILocalVariable(name: "new_region", arg: 2, scope: !7383, file: !504, line: 80, type: !7280)
!7389 = !DILocalVariable(name: "region_conf", scope: !7383, file: !504, line: 82, type: !493)
!7390 = !DILocation(line: 0, scope: !7383)
!7391 = !DILocation(line: 82, column: 2, scope: !7383)
!7392 = !DILocation(line: 82, column: 24, scope: !7383)
!7393 = !DILocation(line: 87, column: 33, scope: !7383)
!7394 = !DILocation(line: 87, column: 14, scope: !7383)
!7395 = !DILocation(line: 87, column: 19, scope: !7383)
!7396 = !DILocation(line: 91, column: 55, scope: !7383)
!7397 = !DILocation(line: 92, column: 16, scope: !7383)
!7398 = !DILocation(line: 92, column: 53, scope: !7383)
!7399 = !DILocation(line: 91, column: 2, scope: !7383)
!7400 = !DILocation(line: 95, column: 9, scope: !7383)
!7401 = !DILocation(line: 97, column: 1, scope: !7383)
!7402 = !DILocation(line: 95, column: 2, scope: !7383)
!7403 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7308, file: !7308, line: 113, type: !7404, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7409)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{null, !7406, !7407, !152, !152}
!7406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!7407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 32)
!7408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7287)
!7409 = !{!7410, !7411, !7412, !7413}
!7410 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7403, file: !7308, line: 114, type: !7406)
!7411 = !DILocalVariable(name: "attr", arg: 2, scope: !7403, file: !7308, line: 115, type: !7407)
!7412 = !DILocalVariable(name: "base", arg: 3, scope: !7403, file: !7308, line: 115, type: !152)
!7413 = !DILocalVariable(name: "size", arg: 4, scope: !7403, file: !7308, line: 115, type: !152)
!7414 = !DILocation(line: 0, scope: !7403)
!7415 = !DILocation(line: 127, column: 23, scope: !7403)
!7416 = !DILocation(line: 127, column: 35, scope: !7403)
!7417 = !DILocation(line: 127, column: 33, scope: !7403)
!7418 = !DILocation(line: 127, column: 10, scope: !7403)
!7419 = !DILocation(line: 127, column: 15, scope: !7403)
!7420 = !DILocation(line: 129, column: 1, scope: !7403)
!7421 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !504, file: !504, line: 57, type: !7422, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7424)
!7422 = !DISubroutineType(types: !7423)
!7423 = !{!107, !1956, !491}
!7424 = !{!7425, !7426}
!7425 = !DILocalVariable(name: "index", arg: 1, scope: !7421, file: !504, line: 57, type: !1956)
!7426 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7421, file: !504, line: 58, type: !491)
!7427 = !DILocation(line: 0, scope: !7421)
!7428 = !DILocation(line: 61, column: 6, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7421, file: !504, line: 61, column: 6)
!7430 = !DILocation(line: 61, column: 12, scope: !7429)
!7431 = !DILocation(line: 61, column: 6, scope: !7421)
!7432 = !DILocation(line: 64, column: 3, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !504, line: 64, column: 3)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !504, line: 64, column: 3)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !504, line: 64, column: 3)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !504, line: 64, column: 3)
!7437 = distinct !DILexicalBlock(scope: !7429, file: !504, line: 61, column: 40)
!7438 = !DILocation(line: 65, column: 3, scope: !7437)
!7439 = !DILocation(line: 71, column: 2, scope: !7421)
!7440 = !DILocation(line: 73, column: 2, scope: !7421)
!7441 = !DILocation(line: 74, column: 1, scope: !7421)
!7442 = distinct !DISubprogram(name: "region_init", scope: !7308, file: !7308, line: 29, type: !7443, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7445)
!7443 = !DISubroutineType(types: !7444)
!7444 = !{null, !6472, !491}
!7445 = !{!7446, !7447}
!7446 = !DILocalVariable(name: "index", arg: 1, scope: !7442, file: !7308, line: 29, type: !6472)
!7447 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7442, file: !7308, line: 30, type: !491)
!7448 = !DILocation(line: 0, scope: !7442)
!7449 = !DILocation(line: 33, column: 2, scope: !7442)
!7450 = !DILocation(line: 47, column: 28, scope: !7442)
!7451 = !DILocation(line: 47, column: 33, scope: !7442)
!7452 = !DILocation(line: 48, column: 26, scope: !7442)
!7453 = !DILocation(line: 47, column: 12, scope: !7442)
!7454 = !DILocation(line: 49, column: 32, scope: !7442)
!7455 = !DILocation(line: 49, column: 37, scope: !7442)
!7456 = !DILocation(line: 49, column: 12, scope: !7442)
!7457 = !DILocation(line: 53, column: 1, scope: !7442)
!7458 = distinct !DISubprogram(name: "set_region_number", scope: !7459, file: !7459, line: 32, type: !5908, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7460)
!7459 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7460 = !{!7461}
!7461 = !DILocalVariable(name: "index", arg: 1, scope: !7458, file: !7459, line: 32, type: !152)
!7462 = !DILocation(line: 0, scope: !7458)
!7463 = !DILocation(line: 34, column: 11, scope: !7458)
!7464 = !DILocation(line: 35, column: 1, scope: !7458)
!7465 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7308, file: !7308, line: 88, type: !7466, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7468)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{!152, !152}
!7468 = !{!7469}
!7469 = !DILocalVariable(name: "size", arg: 1, scope: !7465, file: !7308, line: 88, type: !152)
!7470 = !DILocation(line: 0, scope: !7465)
!7471 = !DILocation(line: 91, column: 11, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7465, file: !7308, line: 91, column: 6)
!7473 = !DILocation(line: 91, column: 6, scope: !7465)
!7474 = !DILocation(line: 100, column: 11, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7465, file: !7308, line: 100, column: 6)
!7476 = !DILocation(line: 100, column: 6, scope: !7465)
!7477 = !DILocation(line: 104, column: 35, scope: !7465)
!7478 = !DILocation(line: 104, column: 16, scope: !7465)
!7479 = !DILocation(line: 104, column: 50, scope: !7465)
!7480 = !DILocation(line: 104, column: 72, scope: !7465)
!7481 = !DILocation(line: 104, column: 2, scope: !7465)
!7482 = !DILocation(line: 106, column: 1, scope: !7465)
!7483 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !504, file: !504, line: 307, type: !7484, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7486)
!7484 = !DISubroutineType(types: !7485)
!7485 = !{null, !7280, !195}
!7486 = !{!7487, !7488}
!7487 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7483, file: !504, line: 308, type: !7280)
!7488 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7483, file: !504, line: 308, type: !195)
!7489 = !DILocation(line: 0, scope: !7483)
!7490 = !DILocation(line: 310, column: 6, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7483, file: !504, line: 310, column: 6)
!7492 = !DILocation(line: 311, column: 3, scope: !7491)
!7493 = !DILocation(line: 310, column: 6, scope: !7483)
!7494 = !DILocation(line: 313, column: 3, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7496, file: !504, line: 313, column: 3)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !504, line: 313, column: 3)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !504, line: 313, column: 3)
!7498 = distinct !DILexicalBlock(scope: !7491, file: !504, line: 311, column: 15)
!7499 = !DILocation(line: 316, column: 1, scope: !7483)
!7500 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7308, file: !7308, line: 249, type: !7501, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7503)
!7501 = !DISubroutineType(types: !7502)
!7502 = !{!107, !7280, !195}
!7503 = !{!7504, !7505, !7506, !7507}
!7504 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7500, file: !7308, line: 250, type: !7280)
!7505 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7500, file: !7308, line: 250, type: !195)
!7506 = !DILocalVariable(name: "mpu_reg_index", scope: !7500, file: !7308, line: 252, type: !107)
!7507 = !DILocalVariable(name: "i", scope: !7508, file: !7308, line: 264, type: !107)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !7308, line: 264, column: 3)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !7308, line: 261, column: 32)
!7510 = distinct !DILexicalBlock(scope: !7500, file: !7308, line: 261, column: 6)
!7511 = !DILocation(line: 0, scope: !7500)
!7512 = !DILocation(line: 252, column: 22, scope: !7500)
!7513 = !DILocation(line: 258, column: 18, scope: !7500)
!7514 = !DILocation(line: 261, column: 20, scope: !7510)
!7515 = !DILocation(line: 261, column: 6, scope: !7500)
!7516 = !DILocation(line: 0, scope: !7508)
!7517 = !DILocation(line: 265, column: 4, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !7308, line: 264, column: 59)
!7519 = distinct !DILexicalBlock(scope: !7508, file: !7308, line: 264, column: 3)
!7520 = !DILocation(line: 264, column: 55, scope: !7519)
!7521 = !DILocation(line: 264, column: 33, scope: !7519)
!7522 = !DILocation(line: 264, column: 3, scope: !7508)
!7523 = distinct !{!7523, !7522, !7524}
!7524 = !DILocation(line: 266, column: 3, scope: !7508)
!7525 = !DILocation(line: 269, column: 2, scope: !7500)
!7526 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7527, file: !7527, line: 218, type: !5908, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7528)
!7527 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7528 = !{!7529}
!7529 = !DILocalVariable(name: "rnr", arg: 1, scope: !7526, file: !7527, line: 218, type: !152)
!7530 = !DILocation(line: 0, scope: !7526)
!7531 = !DILocation(line: 220, column: 12, scope: !7526)
!7532 = !DILocation(line: 221, column: 13, scope: !7526)
!7533 = !DILocation(line: 222, column: 1, scope: !7526)
!7534 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !504, file: !504, line: 326, type: !7535, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7537)
!7535 = !DISubroutineType(types: !7536)
!7536 = !{!107}
!7537 = !{!7538}
!7538 = !DILocalVariable(name: "r_index", scope: !7534, file: !504, line: 328, type: !152)
!7539 = !DILocation(line: 330, column: 17, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7534, file: !504, line: 330, column: 6)
!7541 = !DILocation(line: 330, column: 29, scope: !7540)
!7542 = !DILocation(line: 330, column: 6, scope: !7534)
!7543 = !DILocation(line: 337, column: 3, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !504, line: 337, column: 3)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !504, line: 337, column: 3)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !504, line: 337, column: 3)
!7547 = distinct !DILexicalBlock(scope: !7540, file: !504, line: 330, column: 50)
!7548 = !DILocation(line: 347, column: 2, scope: !7534)
!7549 = !DILocation(line: 0, scope: !7534)
!7550 = !DILocation(line: 364, column: 29, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !504, line: 364, column: 2)
!7552 = distinct !DILexicalBlock(scope: !7534, file: !504, line: 364, column: 2)
!7553 = !DILocation(line: 364, column: 2, scope: !7552)
!7554 = !DILocation(line: 365, column: 25, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7551, file: !504, line: 364, column: 66)
!7556 = !DILocation(line: 365, column: 3, scope: !7555)
!7557 = !DILocation(line: 364, column: 62, scope: !7551)
!7558 = distinct !{!7558, !7553, !7559}
!7559 = !DILocation(line: 366, column: 2, scope: !7552)
!7560 = !DILocation(line: 369, column: 23, scope: !7534)
!7561 = !DILocation(line: 369, column: 21, scope: !7534)
!7562 = !DILocation(line: 372, column: 2, scope: !7534)
!7563 = !DILocation(line: 433, column: 2, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !504, line: 433, column: 2)
!7565 = distinct !DILexicalBlock(scope: !7534, file: !504, line: 433, column: 2)
!7566 = !DILocation(line: 433, column: 2, scope: !7565)
!7567 = !DILocation(line: 433, column: 2, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !504, line: 433, column: 2)
!7569 = !DILocation(line: 444, column: 1, scope: !7534)
!7570 = distinct !DISubprogram(name: "strcpy", scope: !7571, file: !7571, line: 20, type: !7572, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7576)
!7571 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!193, !7574, !7575}
!7574 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7575 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7576 = !{!7577, !7578, !7579}
!7577 = !DILocalVariable(name: "d", arg: 1, scope: !7570, file: !7571, line: 20, type: !7574)
!7578 = !DILocalVariable(name: "s", arg: 2, scope: !7570, file: !7571, line: 20, type: !7575)
!7579 = !DILocalVariable(name: "dest", scope: !7570, file: !7571, line: 22, type: !193)
!7580 = !DILocation(line: 0, scope: !7570)
!7581 = !DILocation(line: 24, column: 9, scope: !7570)
!7582 = !DILocation(line: 24, column: 12, scope: !7570)
!7583 = !DILocation(line: 24, column: 2, scope: !7570)
!7584 = !DILocation(line: 25, column: 6, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7570, file: !7571, line: 24, column: 21)
!7586 = !DILocation(line: 26, column: 4, scope: !7585)
!7587 = !DILocation(line: 27, column: 4, scope: !7585)
!7588 = distinct !{!7588, !7583, !7589}
!7589 = !DILocation(line: 28, column: 2, scope: !7570)
!7590 = !DILocation(line: 30, column: 5, scope: !7570)
!7591 = !DILocation(line: 32, column: 2, scope: !7570)
!7592 = distinct !DISubprogram(name: "strncpy", scope: !7571, file: !7571, line: 42, type: !7593, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7595)
!7593 = !DISubroutineType(types: !7594)
!7594 = !{!193, !7574, !7575, !185}
!7595 = !{!7596, !7597, !7598, !7599}
!7596 = !DILocalVariable(name: "d", arg: 1, scope: !7592, file: !7571, line: 42, type: !7574)
!7597 = !DILocalVariable(name: "s", arg: 2, scope: !7592, file: !7571, line: 42, type: !7575)
!7598 = !DILocalVariable(name: "n", arg: 3, scope: !7592, file: !7571, line: 42, type: !185)
!7599 = !DILocalVariable(name: "dest", scope: !7592, file: !7571, line: 44, type: !193)
!7600 = !DILocation(line: 0, scope: !7592)
!7601 = !DILocation(line: 46, column: 12, scope: !7592)
!7602 = !DILocation(line: 46, column: 17, scope: !7592)
!7603 = !DILocation(line: 46, column: 20, scope: !7592)
!7604 = !DILocation(line: 46, column: 23, scope: !7592)
!7605 = !DILocation(line: 46, column: 2, scope: !7592)
!7606 = !DILocation(line: 47, column: 6, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7592, file: !7571, line: 46, column: 32)
!7608 = !DILocation(line: 48, column: 4, scope: !7607)
!7609 = !DILocation(line: 49, column: 4, scope: !7607)
!7610 = !DILocation(line: 50, column: 4, scope: !7607)
!7611 = distinct !{!7611, !7605, !7612}
!7612 = !DILocation(line: 51, column: 2, scope: !7592)
!7613 = !DILocation(line: 54, column: 6, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7592, file: !7571, line: 53, column: 16)
!7615 = !DILocation(line: 55, column: 4, scope: !7614)
!7616 = !DILocation(line: 56, column: 4, scope: !7614)
!7617 = !DILocation(line: 53, column: 11, scope: !7592)
!7618 = !DILocation(line: 53, column: 2, scope: !7592)
!7619 = distinct !{!7619, !7618, !7620}
!7620 = !DILocation(line: 57, column: 2, scope: !7592)
!7621 = !DILocation(line: 59, column: 2, scope: !7592)
!7622 = distinct !DISubprogram(name: "strchr", scope: !7571, file: !7571, line: 69, type: !7623, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7625)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{!193, !118, !107}
!7625 = !{!7626, !7627, !7628}
!7626 = !DILocalVariable(name: "s", arg: 1, scope: !7622, file: !7571, line: 69, type: !118)
!7627 = !DILocalVariable(name: "c", arg: 2, scope: !7622, file: !7571, line: 69, type: !107)
!7628 = !DILocalVariable(name: "tmp", scope: !7622, file: !7571, line: 71, type: !120)
!7629 = !DILocation(line: 0, scope: !7622)
!7630 = !DILocation(line: 73, column: 2, scope: !7622)
!7631 = !DILocation(line: 73, column: 10, scope: !7622)
!7632 = !DILocation(line: 73, column: 13, scope: !7622)
!7633 = !DILocation(line: 73, column: 21, scope: !7622)
!7634 = !DILocation(line: 74, column: 4, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7622, file: !7571, line: 73, column: 38)
!7636 = distinct !{!7636, !7630, !7637}
!7637 = !DILocation(line: 75, column: 2, scope: !7622)
!7638 = !DILocation(line: 77, column: 9, scope: !7622)
!7639 = !DILocation(line: 77, column: 2, scope: !7622)
!7640 = distinct !DISubprogram(name: "strrchr", scope: !7571, file: !7571, line: 87, type: !7623, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7641)
!7641 = !{!7642, !7643, !7644}
!7642 = !DILocalVariable(name: "s", arg: 1, scope: !7640, file: !7571, line: 87, type: !118)
!7643 = !DILocalVariable(name: "c", arg: 2, scope: !7640, file: !7571, line: 87, type: !107)
!7644 = !DILocalVariable(name: "match", scope: !7640, file: !7571, line: 89, type: !193)
!7645 = !DILocation(line: 0, scope: !7640)
!7646 = !DILocation(line: 91, column: 2, scope: !7640)
!7647 = !DILocation(line: 92, column: 7, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7571, line: 92, column: 7)
!7649 = distinct !DILexicalBlock(scope: !7640, file: !7571, line: 91, column: 5)
!7650 = !DILocation(line: 92, column: 10, scope: !7648)
!7651 = !DILocation(line: 92, column: 7, scope: !7649)
!7652 = !DILocation(line: 95, column: 13, scope: !7640)
!7653 = !DILocation(line: 95, column: 2, scope: !7649)
!7654 = distinct !{!7654, !7646, !7655}
!7655 = !DILocation(line: 95, column: 15, scope: !7640)
!7656 = !DILocation(line: 97, column: 2, scope: !7640)
!7657 = distinct !DISubprogram(name: "strlen", scope: !7571, file: !7571, line: 107, type: !7658, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7660)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{!185, !118}
!7660 = !{!7661, !7662}
!7661 = !DILocalVariable(name: "s", arg: 1, scope: !7657, file: !7571, line: 107, type: !118)
!7662 = !DILocalVariable(name: "n", scope: !7657, file: !7571, line: 109, type: !185)
!7663 = !DILocation(line: 0, scope: !7657)
!7664 = !DILocation(line: 111, column: 9, scope: !7657)
!7665 = !DILocation(line: 111, column: 12, scope: !7657)
!7666 = !DILocation(line: 111, column: 2, scope: !7657)
!7667 = !DILocation(line: 112, column: 4, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7657, file: !7571, line: 111, column: 21)
!7669 = !DILocation(line: 113, column: 4, scope: !7668)
!7670 = distinct !{!7670, !7666, !7671}
!7671 = !DILocation(line: 114, column: 2, scope: !7657)
!7672 = !DILocation(line: 116, column: 2, scope: !7657)
!7673 = distinct !DISubprogram(name: "strnlen", scope: !7571, file: !7571, line: 126, type: !7674, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7676)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!185, !118, !185}
!7676 = !{!7677, !7678, !7679}
!7677 = !DILocalVariable(name: "s", arg: 1, scope: !7673, file: !7571, line: 126, type: !118)
!7678 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7673, file: !7571, line: 126, type: !185)
!7679 = !DILocalVariable(name: "n", scope: !7673, file: !7571, line: 128, type: !185)
!7680 = !DILocation(line: 0, scope: !7673)
!7681 = !DILocation(line: 130, column: 9, scope: !7673)
!7682 = !DILocation(line: 130, column: 12, scope: !7673)
!7683 = !DILocation(line: 130, column: 20, scope: !7673)
!7684 = !DILocation(line: 130, column: 2, scope: !7673)
!7685 = !DILocation(line: 131, column: 4, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7673, file: !7571, line: 130, column: 35)
!7687 = !DILocation(line: 132, column: 4, scope: !7686)
!7688 = distinct !{!7688, !7684, !7689}
!7689 = !DILocation(line: 133, column: 2, scope: !7673)
!7690 = !DILocation(line: 135, column: 2, scope: !7673)
!7691 = distinct !DISubprogram(name: "strcmp", scope: !7571, file: !7571, line: 145, type: !7692, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7694)
!7692 = !DISubroutineType(types: !7693)
!7693 = !{!107, !118, !118}
!7694 = !{!7695, !7696}
!7695 = !DILocalVariable(name: "s1", arg: 1, scope: !7691, file: !7571, line: 145, type: !118)
!7696 = !DILocalVariable(name: "s2", arg: 2, scope: !7691, file: !7571, line: 145, type: !118)
!7697 = !DILocation(line: 0, scope: !7691)
!7698 = !DILocation(line: 147, column: 10, scope: !7691)
!7699 = !DILocation(line: 147, column: 17, scope: !7691)
!7700 = !DILocation(line: 147, column: 14, scope: !7691)
!7701 = !DILocation(line: 147, column: 22, scope: !7691)
!7702 = !DILocation(line: 148, column: 5, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7691, file: !7571, line: 147, column: 40)
!7704 = !DILocation(line: 149, column: 5, scope: !7703)
!7705 = distinct !{!7705, !7706, !7707}
!7706 = !DILocation(line: 147, column: 2, scope: !7691)
!7707 = !DILocation(line: 150, column: 2, scope: !7691)
!7708 = !DILocation(line: 152, column: 9, scope: !7691)
!7709 = !DILocation(line: 152, column: 15, scope: !7691)
!7710 = !DILocation(line: 152, column: 13, scope: !7691)
!7711 = !DILocation(line: 152, column: 2, scope: !7691)
!7712 = distinct !DISubprogram(name: "strncmp", scope: !7571, file: !7571, line: 162, type: !7713, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7715)
!7713 = !DISubroutineType(types: !7714)
!7714 = !{!107, !118, !118, !185}
!7715 = !{!7716, !7717, !7718}
!7716 = !DILocalVariable(name: "s1", arg: 1, scope: !7712, file: !7571, line: 162, type: !118)
!7717 = !DILocalVariable(name: "s2", arg: 2, scope: !7712, file: !7571, line: 162, type: !118)
!7718 = !DILocalVariable(name: "n", arg: 3, scope: !7712, file: !7571, line: 162, type: !185)
!7719 = !DILocation(line: 0, scope: !7712)
!7720 = !DILocation(line: 164, column: 17, scope: !7712)
!7721 = !DILocation(line: 164, column: 21, scope: !7712)
!7722 = !DILocation(line: 164, column: 28, scope: !7712)
!7723 = !DILocation(line: 164, column: 25, scope: !7712)
!7724 = !DILocation(line: 164, column: 33, scope: !7712)
!7725 = !DILocation(line: 165, column: 5, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7712, file: !7571, line: 164, column: 51)
!7727 = !DILocation(line: 166, column: 5, scope: !7726)
!7728 = !DILocation(line: 167, column: 4, scope: !7726)
!7729 = distinct !{!7729, !7730, !7731}
!7730 = !DILocation(line: 164, column: 2, scope: !7712)
!7731 = !DILocation(line: 168, column: 2, scope: !7712)
!7732 = !DILocation(line: 170, column: 25, scope: !7712)
!7733 = !DILocation(line: 170, column: 31, scope: !7712)
!7734 = !DILocation(line: 170, column: 29, scope: !7712)
!7735 = !DILocation(line: 170, column: 9, scope: !7712)
!7736 = !DILocation(line: 170, column: 2, scope: !7712)
!7737 = distinct !DISubprogram(name: "strtok_r", scope: !7571, file: !7571, line: 180, type: !7738, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7740)
!7738 = !DISubroutineType(types: !7739)
!7739 = !{!193, !193, !118, !192}
!7740 = !{!7741, !7742, !7743, !7744, !7745}
!7741 = !DILocalVariable(name: "str", arg: 1, scope: !7737, file: !7571, line: 180, type: !193)
!7742 = !DILocalVariable(name: "sep", arg: 2, scope: !7737, file: !7571, line: 180, type: !118)
!7743 = !DILocalVariable(name: "state", arg: 3, scope: !7737, file: !7571, line: 180, type: !192)
!7744 = !DILocalVariable(name: "start", scope: !7737, file: !7571, line: 182, type: !193)
!7745 = !DILocalVariable(name: "end", scope: !7737, file: !7571, line: 182, type: !193)
!7746 = !DILocation(line: 0, scope: !7737)
!7747 = !DILocation(line: 184, column: 10, scope: !7737)
!7748 = !DILocation(line: 184, column: 22, scope: !7737)
!7749 = !DILocation(line: 187, column: 9, scope: !7737)
!7750 = !DILocation(line: 187, column: 16, scope: !7737)
!7751 = !DILocation(line: 187, column: 19, scope: !7737)
!7752 = !DILocation(line: 187, column: 2, scope: !7737)
!7753 = !DILocation(line: 188, column: 8, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7737, file: !7571, line: 187, column: 40)
!7755 = distinct !{!7755, !7752, !7756}
!7756 = !DILocation(line: 189, column: 2, scope: !7737)
!7757 = !DILocation(line: 198, column: 9, scope: !7737)
!7758 = !DILocation(line: 198, column: 18, scope: !7737)
!7759 = !DILocation(line: 198, column: 17, scope: !7737)
!7760 = !DILocation(line: 198, column: 2, scope: !7737)
!7761 = !DILocation(line: 199, column: 6, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7737, file: !7571, line: 198, column: 37)
!7763 = !DILocation(line: 198, column: 14, scope: !7737)
!7764 = distinct !{!7764, !7760, !7765}
!7765 = !DILocation(line: 200, column: 2, scope: !7737)
!7766 = !DILocation(line: 203, column: 8, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7571, line: 202, column: 20)
!7768 = distinct !DILexicalBlock(scope: !7737, file: !7571, line: 202, column: 6)
!7769 = !DILocation(line: 204, column: 16, scope: !7767)
!7770 = !DILocation(line: 205, column: 2, scope: !7767)
!7771 = !DILocation(line: 210, column: 1, scope: !7737)
!7772 = distinct !DISubprogram(name: "strcat", scope: !7571, file: !7571, line: 212, type: !7572, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7773)
!7773 = !{!7774, !7775}
!7774 = !DILocalVariable(name: "dest", arg: 1, scope: !7772, file: !7571, line: 212, type: !7574)
!7775 = !DILocalVariable(name: "src", arg: 2, scope: !7772, file: !7571, line: 212, type: !7575)
!7776 = !DILocation(line: 0, scope: !7772)
!7777 = !DILocation(line: 214, column: 16, scope: !7772)
!7778 = !DILocation(line: 214, column: 14, scope: !7772)
!7779 = !DILocation(line: 214, column: 2, scope: !7772)
!7780 = !DILocation(line: 215, column: 2, scope: !7772)
!7781 = distinct !DISubprogram(name: "strncat", scope: !7571, file: !7571, line: 218, type: !7593, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7782)
!7782 = !{!7783, !7784, !7785, !7786, !7787}
!7783 = !DILocalVariable(name: "dest", arg: 1, scope: !7781, file: !7571, line: 218, type: !7574)
!7784 = !DILocalVariable(name: "src", arg: 2, scope: !7781, file: !7571, line: 218, type: !7575)
!7785 = !DILocalVariable(name: "n", arg: 3, scope: !7781, file: !7571, line: 219, type: !185)
!7786 = !DILocalVariable(name: "orig_dest", scope: !7781, file: !7571, line: 221, type: !193)
!7787 = !DILocalVariable(name: "len", scope: !7781, file: !7571, line: 222, type: !185)
!7788 = !DILocation(line: 0, scope: !7781)
!7789 = !DILocation(line: 222, column: 15, scope: !7781)
!7790 = !DILocation(line: 224, column: 7, scope: !7781)
!7791 = !DILocation(line: 225, column: 14, scope: !7781)
!7792 = !DILocation(line: 225, column: 19, scope: !7781)
!7793 = !DILocation(line: 225, column: 11, scope: !7781)
!7794 = !DILocation(line: 225, column: 23, scope: !7781)
!7795 = !DILocation(line: 225, column: 28, scope: !7781)
!7796 = !DILocation(line: 225, column: 2, scope: !7781)
!7797 = !DILocation(line: 226, column: 17, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7781, file: !7571, line: 225, column: 38)
!7799 = !DILocation(line: 226, column: 8, scope: !7798)
!7800 = !DILocation(line: 226, column: 11, scope: !7798)
!7801 = distinct !{!7801, !7796, !7802}
!7802 = !DILocation(line: 227, column: 2, scope: !7781)
!7803 = !DILocation(line: 228, column: 8, scope: !7781)
!7804 = !DILocation(line: 230, column: 2, scope: !7781)
!7805 = distinct !DISubprogram(name: "memcmp", scope: !7571, file: !7571, line: 239, type: !7806, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7808)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{!107, !13, !13, !185}
!7808 = !{!7809, !7810, !7811, !7812, !7813}
!7809 = !DILocalVariable(name: "m1", arg: 1, scope: !7805, file: !7571, line: 239, type: !13)
!7810 = !DILocalVariable(name: "m2", arg: 2, scope: !7805, file: !7571, line: 239, type: !13)
!7811 = !DILocalVariable(name: "n", arg: 3, scope: !7805, file: !7571, line: 239, type: !185)
!7812 = !DILocalVariable(name: "c1", scope: !7805, file: !7571, line: 241, type: !118)
!7813 = !DILocalVariable(name: "c2", scope: !7805, file: !7571, line: 242, type: !118)
!7814 = !DILocation(line: 0, scope: !7805)
!7815 = !DILocation(line: 244, column: 7, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7805, file: !7571, line: 244, column: 6)
!7817 = !DILocation(line: 244, column: 6, scope: !7805)
!7818 = !DILocation(line: 248, column: 10, scope: !7805)
!7819 = !DILocation(line: 248, column: 14, scope: !7805)
!7820 = !DILocation(line: 248, column: 19, scope: !7805)
!7821 = !DILocation(line: 248, column: 2, scope: !7805)
!7822 = !DILocation(line: 248, column: 23, scope: !7805)
!7823 = !DILocation(line: 248, column: 30, scope: !7805)
!7824 = !DILocation(line: 248, column: 27, scope: !7805)
!7825 = !DILocation(line: 249, column: 5, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7805, file: !7571, line: 248, column: 36)
!7827 = !DILocation(line: 250, column: 5, scope: !7826)
!7828 = distinct !{!7828, !7821, !7829}
!7829 = !DILocation(line: 251, column: 2, scope: !7805)
!7830 = !DILocation(line: 253, column: 9, scope: !7805)
!7831 = !DILocation(line: 253, column: 15, scope: !7805)
!7832 = !DILocation(line: 253, column: 13, scope: !7805)
!7833 = !DILocation(line: 253, column: 2, scope: !7805)
!7834 = !DILocation(line: 254, column: 1, scope: !7805)
!7835 = distinct !DISubprogram(name: "memmove", scope: !7571, file: !7571, line: 263, type: !7836, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7838)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{!106, !106, !13, !185}
!7838 = !{!7839, !7840, !7841, !7842, !7843}
!7839 = !DILocalVariable(name: "d", arg: 1, scope: !7835, file: !7571, line: 263, type: !106)
!7840 = !DILocalVariable(name: "s", arg: 2, scope: !7835, file: !7571, line: 263, type: !13)
!7841 = !DILocalVariable(name: "n", arg: 3, scope: !7835, file: !7571, line: 263, type: !185)
!7842 = !DILocalVariable(name: "dest", scope: !7835, file: !7571, line: 265, type: !193)
!7843 = !DILocalVariable(name: "src", scope: !7835, file: !7571, line: 266, type: !118)
!7844 = !DILocation(line: 0, scope: !7835)
!7845 = !DILocation(line: 268, column: 21, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7835, file: !7571, line: 268, column: 6)
!7847 = !DILocation(line: 268, column: 28, scope: !7846)
!7848 = !DILocation(line: 268, column: 6, scope: !7835)
!7849 = !DILocation(line: 280, column: 12, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7846, file: !7571, line: 278, column: 9)
!7851 = !DILocation(line: 280, column: 3, scope: !7850)
!7852 = !DILocation(line: 275, column: 5, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !7571, line: 274, column: 17)
!7854 = distinct !DILexicalBlock(scope: !7846, file: !7571, line: 268, column: 33)
!7855 = !DILocation(line: 276, column: 14, scope: !7853)
!7856 = !DILocation(line: 276, column: 4, scope: !7853)
!7857 = !DILocation(line: 276, column: 12, scope: !7853)
!7858 = !DILocation(line: 274, column: 12, scope: !7854)
!7859 = !DILocation(line: 274, column: 3, scope: !7854)
!7860 = distinct !{!7860, !7859, !7861}
!7861 = !DILocation(line: 277, column: 3, scope: !7854)
!7862 = !DILocation(line: 281, column: 12, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7850, file: !7571, line: 280, column: 17)
!7864 = !DILocation(line: 281, column: 10, scope: !7863)
!7865 = !DILocation(line: 282, column: 8, scope: !7863)
!7866 = !DILocation(line: 283, column: 7, scope: !7863)
!7867 = !DILocation(line: 284, column: 5, scope: !7863)
!7868 = distinct !{!7868, !7851, !7869}
!7869 = !DILocation(line: 285, column: 3, scope: !7850)
!7870 = !DILocation(line: 288, column: 2, scope: !7835)
!7871 = distinct !DISubprogram(name: "memcpy", scope: !7571, file: !7571, line: 298, type: !7872, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7876)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{!106, !7874, !7875, !185}
!7874 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7875 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7876 = !{!7877, !7878, !7879, !7880, !7881}
!7877 = !DILocalVariable(name: "d", arg: 1, scope: !7871, file: !7571, line: 298, type: !7874)
!7878 = !DILocalVariable(name: "s", arg: 2, scope: !7871, file: !7571, line: 298, type: !7875)
!7879 = !DILocalVariable(name: "n", arg: 3, scope: !7871, file: !7571, line: 298, type: !185)
!7880 = !DILocalVariable(name: "d_byte", scope: !7871, file: !7571, line: 302, type: !1178)
!7881 = !DILocalVariable(name: "s_byte", scope: !7871, file: !7571, line: 303, type: !2870)
!7882 = !DILocation(line: 0, scope: !7871)
!7883 = !DILocation(line: 337, column: 11, scope: !7871)
!7884 = !DILocation(line: 337, column: 2, scope: !7871)
!7885 = !DILocation(line: 338, column: 25, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7871, file: !7571, line: 337, column: 16)
!7887 = !DILocation(line: 338, column: 17, scope: !7886)
!7888 = !DILocation(line: 338, column: 11, scope: !7886)
!7889 = !DILocation(line: 338, column: 15, scope: !7886)
!7890 = !DILocation(line: 339, column: 4, scope: !7886)
!7891 = distinct !{!7891, !7884, !7892}
!7892 = !DILocation(line: 340, column: 2, scope: !7871)
!7893 = !DILocation(line: 342, column: 2, scope: !7871)
!7894 = distinct !DISubprogram(name: "memset", scope: !7571, file: !7571, line: 352, type: !7895, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7897)
!7895 = !DISubroutineType(types: !7896)
!7896 = !{!106, !106, !107, !185}
!7897 = !{!7898, !7899, !7900, !7901, !7902}
!7898 = !DILocalVariable(name: "buf", arg: 1, scope: !7894, file: !7571, line: 352, type: !106)
!7899 = !DILocalVariable(name: "c", arg: 2, scope: !7894, file: !7571, line: 352, type: !107)
!7900 = !DILocalVariable(name: "n", arg: 3, scope: !7894, file: !7571, line: 352, type: !185)
!7901 = !DILocalVariable(name: "d_byte", scope: !7894, file: !7571, line: 356, type: !1178)
!7902 = !DILocalVariable(name: "c_byte", scope: !7894, file: !7571, line: 357, type: !196)
!7903 = !DILocation(line: 0, scope: !7894)
!7904 = !DILocation(line: 357, column: 25, scope: !7894)
!7905 = !DILocation(line: 389, column: 11, scope: !7894)
!7906 = !DILocation(line: 389, column: 2, scope: !7894)
!7907 = !DILocation(line: 390, column: 11, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7894, file: !7571, line: 389, column: 16)
!7909 = !DILocation(line: 390, column: 15, scope: !7908)
!7910 = !DILocation(line: 391, column: 4, scope: !7908)
!7911 = distinct !{!7911, !7906, !7912}
!7912 = !DILocation(line: 392, column: 2, scope: !7894)
!7913 = !DILocation(line: 394, column: 2, scope: !7894)
!7914 = distinct !DISubprogram(name: "memchr", scope: !7571, file: !7571, line: 404, type: !7915, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7917)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!106, !13, !107, !185}
!7917 = !{!7918, !7919, !7920, !7921}
!7918 = !DILocalVariable(name: "s", arg: 1, scope: !7914, file: !7571, line: 404, type: !13)
!7919 = !DILocalVariable(name: "c", arg: 2, scope: !7914, file: !7571, line: 404, type: !107)
!7920 = !DILocalVariable(name: "n", arg: 3, scope: !7914, file: !7571, line: 404, type: !185)
!7921 = !DILocalVariable(name: "p", scope: !7922, file: !7571, line: 407, type: !2870)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !7571, line: 406, column: 14)
!7923 = distinct !DILexicalBlock(scope: !7914, file: !7571, line: 406, column: 6)
!7924 = !DILocation(line: 0, scope: !7914)
!7925 = !DILocation(line: 406, column: 8, scope: !7923)
!7926 = !DILocation(line: 406, column: 6, scope: !7914)
!7927 = !DILocation(line: 409, column: 3, scope: !7922)
!7928 = !DILocation(line: 0, scope: !7922)
!7929 = !DILocation(line: 410, column: 8, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7931, file: !7571, line: 410, column: 8)
!7931 = distinct !DILexicalBlock(scope: !7922, file: !7571, line: 409, column: 6)
!7932 = !DILocation(line: 410, column: 13, scope: !7930)
!7933 = !DILocation(line: 410, column: 8, scope: !7931)
!7934 = distinct !{!7934, !7927, !7935}
!7935 = !DILocation(line: 414, column: 20, scope: !7922)
!7936 = !DILocation(line: 417, column: 2, scope: !7914)
!7937 = !DILocation(line: 418, column: 1, scope: !7914)
!7938 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !514, file: !514, line: 23, type: !4089, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7939)
!7939 = !{!7940}
!7940 = !DILocalVariable(name: "hook", arg: 1, scope: !7938, file: !514, line: 23, type: !213)
!7941 = !DILocation(line: 0, scope: !7938)
!7942 = !DILocation(line: 25, column: 15, scope: !7938)
!7943 = !DILocation(line: 26, column: 1, scope: !7938)
!7944 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !514, file: !514, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7945)
!7945 = !{!7946}
!7946 = !DILocalVariable(name: "c", arg: 1, scope: !7944, file: !514, line: 14, type: !107)
!7947 = !DILocation(line: 0, scope: !7944)
!7948 = !DILocation(line: 18, column: 2, scope: !7944)
!7949 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !514, file: !514, line: 28, type: !7950, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7952)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!107, !107, !510}
!7952 = !{!7953, !7954}
!7953 = !DILocalVariable(name: "c", arg: 1, scope: !7949, file: !514, line: 28, type: !107)
!7954 = !DILocalVariable(name: "stream", arg: 2, scope: !7949, file: !514, line: 28, type: !510)
!7955 = !DILocation(line: 0, scope: !7949)
!7956 = !DILocation(line: 30, column: 27, scope: !7949)
!7957 = !DILocation(line: 30, column: 50, scope: !7949)
!7958 = !DILocation(line: 30, column: 9, scope: !7949)
!7959 = !DILocation(line: 30, column: 2, scope: !7949)
!7960 = distinct !DISubprogram(name: "fputc", scope: !514, file: !514, line: 41, type: !7950, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7961)
!7961 = !{!7962, !7963}
!7962 = !DILocalVariable(name: "c", arg: 1, scope: !7960, file: !514, line: 41, type: !107)
!7963 = !DILocalVariable(name: "stream", arg: 2, scope: !7960, file: !514, line: 41, type: !510)
!7964 = !DILocation(line: 0, scope: !7960)
!7965 = !DILocation(line: 43, column: 9, scope: !7960)
!7966 = !DILocation(line: 43, column: 2, scope: !7960)
!7967 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7968, file: !7968, line: 72, type: !7950, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7969)
!7968 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!7969 = !{!7970, !7971}
!7970 = !DILocalVariable(name: "c", arg: 1, scope: !7967, file: !7968, line: 72, type: !107)
!7971 = !DILocalVariable(name: "stream", arg: 2, scope: !7967, file: !7968, line: 72, type: !510)
!7972 = !DILocation(line: 0, scope: !7967)
!7973 = !DILocation(line: 81, column: 2, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7967, file: !7968, line: 81, column: 2)
!7975 = !{i64 2152287153}
!7976 = !DILocation(line: 82, column: 9, scope: !7967)
!7977 = !DILocation(line: 82, column: 2, scope: !7967)
!7978 = distinct !DISubprogram(name: "fputs", scope: !514, file: !514, line: 46, type: !7979, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7982)
!7979 = !DISubroutineType(types: !7980)
!7980 = !{!107, !7575, !7981}
!7981 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !510)
!7982 = !{!7983, !7984, !7985, !7986}
!7983 = !DILocalVariable(name: "s", arg: 1, scope: !7978, file: !514, line: 46, type: !7575)
!7984 = !DILocalVariable(name: "stream", arg: 2, scope: !7978, file: !514, line: 46, type: !7981)
!7985 = !DILocalVariable(name: "len", scope: !7978, file: !514, line: 48, type: !107)
!7986 = !DILocalVariable(name: "ret", scope: !7978, file: !514, line: 49, type: !107)
!7987 = !DILocation(line: 0, scope: !7978)
!7988 = !DILocation(line: 48, column: 12, scope: !7978)
!7989 = !DILocation(line: 51, column: 8, scope: !7978)
!7990 = !DILocation(line: 53, column: 13, scope: !7978)
!7991 = !DILocation(line: 53, column: 9, scope: !7978)
!7992 = !DILocation(line: 53, column: 2, scope: !7978)
!7993 = distinct !DISubprogram(name: "fwrite", scope: !514, file: !514, line: 99, type: !7994, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7996)
!7994 = !DISubroutineType(types: !7995)
!7995 = !{!185, !7875, !185, !185, !7981}
!7996 = !{!7997, !7998, !7999, !8000}
!7997 = !DILocalVariable(name: "ptr", arg: 1, scope: !7993, file: !514, line: 99, type: !7875)
!7998 = !DILocalVariable(name: "size", arg: 2, scope: !7993, file: !514, line: 99, type: !185)
!7999 = !DILocalVariable(name: "nitems", arg: 3, scope: !7993, file: !514, line: 99, type: !185)
!8000 = !DILocalVariable(name: "stream", arg: 4, scope: !7993, file: !514, line: 100, type: !7981)
!8001 = !DILocation(line: 0, scope: !7993)
!8002 = !DILocation(line: 102, column: 9, scope: !7993)
!8003 = !DILocation(line: 102, column: 2, scope: !7993)
!8004 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7968, file: !7968, line: 96, type: !7994, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !8005)
!8005 = !{!8006, !8007, !8008, !8009}
!8006 = !DILocalVariable(name: "ptr", arg: 1, scope: !8004, file: !7968, line: 96, type: !7875)
!8007 = !DILocalVariable(name: "size", arg: 2, scope: !8004, file: !7968, line: 96, type: !185)
!8008 = !DILocalVariable(name: "nitems", arg: 3, scope: !8004, file: !7968, line: 96, type: !185)
!8009 = !DILocalVariable(name: "stream", arg: 4, scope: !8004, file: !7968, line: 96, type: !7981)
!8010 = !DILocation(line: 0, scope: !8004)
!8011 = !DILocation(line: 107, column: 2, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8004, file: !7968, line: 107, column: 2)
!8013 = !{i64 2152287257}
!8014 = !DILocation(line: 108, column: 9, scope: !8004)
!8015 = !DILocation(line: 108, column: 2, scope: !8004)
!8016 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !514, file: !514, line: 56, type: !7994, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !8017)
!8017 = !{!8018, !8019, !8020, !8021, !8022, !8023, !8024, !8025}
!8018 = !DILocalVariable(name: "ptr", arg: 1, scope: !8016, file: !514, line: 56, type: !7875)
!8019 = !DILocalVariable(name: "size", arg: 2, scope: !8016, file: !514, line: 56, type: !185)
!8020 = !DILocalVariable(name: "nitems", arg: 3, scope: !8016, file: !514, line: 57, type: !185)
!8021 = !DILocalVariable(name: "stream", arg: 4, scope: !8016, file: !514, line: 57, type: !7981)
!8022 = !DILocalVariable(name: "i", scope: !8016, file: !514, line: 59, type: !185)
!8023 = !DILocalVariable(name: "j", scope: !8016, file: !514, line: 60, type: !185)
!8024 = !DILocalVariable(name: "p", scope: !8016, file: !514, line: 61, type: !2870)
!8025 = !DILabel(scope: !8016, name: "done", file: !514, line: 82)
!8026 = !DILocation(line: 0, scope: !8016)
!8027 = !DILocation(line: 63, column: 14, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8016, file: !514, line: 63, column: 6)
!8029 = !DILocation(line: 63, column: 24, scope: !8028)
!8030 = !DILocation(line: 72, column: 3, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8016, file: !514, line: 70, column: 5)
!8032 = !DILocation(line: 0, scope: !8031)
!8033 = !DILocation(line: 73, column: 8, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !514, line: 73, column: 8)
!8035 = distinct !DILexicalBlock(scope: !8031, file: !514, line: 72, column: 6)
!8036 = !DILocation(line: 73, column: 29, scope: !8034)
!8037 = !DILocation(line: 73, column: 27, scope: !8034)
!8038 = !DILocation(line: 73, column: 21, scope: !8034)
!8039 = !DILocation(line: 73, column: 33, scope: !8034)
!8040 = !DILocation(line: 73, column: 8, scope: !8035)
!8041 = !DILocation(line: 76, column: 5, scope: !8035)
!8042 = !DILocation(line: 77, column: 14, scope: !8031)
!8043 = !DILocation(line: 77, column: 3, scope: !8035)
!8044 = distinct !{!8044, !8030, !8045}
!8045 = !DILocation(line: 77, column: 17, scope: !8031)
!8046 = !DILocation(line: 79, column: 4, scope: !8031)
!8047 = !DILocation(line: 80, column: 13, scope: !8016)
!8048 = !DILocation(line: 80, column: 2, scope: !8031)
!8049 = distinct !{!8049, !8050, !8051}
!8050 = !DILocation(line: 70, column: 2, scope: !8016)
!8051 = !DILocation(line: 80, column: 16, scope: !8016)
!8052 = !DILocation(line: 82, column: 1, scope: !8016)
!8053 = !DILocation(line: 83, column: 17, scope: !8016)
!8054 = !DILocation(line: 83, column: 2, scope: !8016)
!8055 = !DILocation(line: 84, column: 1, scope: !8016)
!8056 = distinct !DISubprogram(name: "puts", scope: !514, file: !514, line: 106, type: !8057, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !8059)
!8057 = !DISubroutineType(types: !8058)
!8058 = !{!107, !118}
!8059 = !{!8060}
!8060 = !DILocalVariable(name: "s", arg: 1, scope: !8056, file: !514, line: 106, type: !118)
!8061 = !DILocation(line: 0, scope: !8056)
!8062 = !DILocation(line: 108, column: 6, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8056, file: !514, line: 108, column: 6)
!8064 = !DILocation(line: 108, column: 23, scope: !8063)
!8065 = !DILocation(line: 108, column: 6, scope: !8056)
!8066 = !DILocation(line: 112, column: 9, scope: !8056)
!8067 = !DILocation(line: 112, column: 29, scope: !8056)
!8068 = !DILocation(line: 112, column: 2, scope: !8056)
!8069 = !DILocation(line: 113, column: 1, scope: !8056)
!8070 = distinct !DISubprogram(name: "rf_init", scope: !639, file: !639, line: 10, type: !645, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8071)
!8071 = !{!8072, !8073, !8081, !8082}
!8072 = !DILocalVariable(name: "dev", arg: 1, scope: !8070, file: !639, line: 10, type: !565)
!8073 = !DILocalVariable(name: "rf1", scope: !8070, file: !639, line: 12, type: !8074)
!8074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8075)
!8075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !546, line: 271, size: 64, elements: !8076)
!8076 = !{!8077, !8078, !8079}
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8075, file: !546, line: 273, baseType: !565, size: 32)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8075, file: !546, line: 275, baseType: !580, size: 8, offset: 32)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !8075, file: !546, line: 277, baseType: !8080, size: 16, offset: 48)
!8080 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !546, line: 249, baseType: !197)
!8081 = !DILocalVariable(name: "rf2", scope: !8070, file: !639, line: 14, type: !8074)
!8082 = !DILocalVariable(name: "rf3", scope: !8070, file: !639, line: 16, type: !8074)
!8083 = !DILocation(line: 0, scope: !8070)
!8084 = !DILocation(line: 12, column: 2, scope: !8070)
!8085 = !DILocation(line: 12, column: 28, scope: !8070)
!8086 = !DILocation(line: 14, column: 2, scope: !8070)
!8087 = !DILocation(line: 14, column: 28, scope: !8070)
!8088 = !DILocation(line: 16, column: 2, scope: !8070)
!8089 = !DILocation(line: 16, column: 28, scope: !8070)
!8090 = !DILocation(line: 22, column: 27, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8070, file: !639, line: 22, column: 6)
!8092 = !DILocation(line: 22, column: 7, scope: !8091)
!8093 = !DILocation(line: 22, column: 33, scope: !8091)
!8094 = !DILocation(line: 23, column: 7, scope: !8091)
!8095 = !DILocation(line: 23, column: 33, scope: !8091)
!8096 = !DILocation(line: 24, column: 7, scope: !8091)
!8097 = !DILocation(line: 22, column: 6, scope: !8070)
!8098 = !DILocation(line: 28, column: 8, scope: !8070)
!8099 = !DILocation(line: 29, column: 8, scope: !8070)
!8100 = !DILocation(line: 30, column: 8, scope: !8070)
!8101 = !DILocation(line: 32, column: 2, scope: !8070)
!8102 = !DILocation(line: 33, column: 1, scope: !8070)
!8103 = distinct !DISubprogram(name: "device_is_ready", scope: !8104, file: !8104, line: 47, type: !8105, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8107)
!8104 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!8105 = !DISubroutineType(types: !8106)
!8106 = !{!145, !565}
!8107 = !{!8108}
!8108 = !DILocalVariable(name: "dev", arg: 1, scope: !8103, file: !8104, line: 47, type: !565)
!8109 = !DILocation(line: 0, scope: !8103)
!8110 = !DILocation(line: 55, column: 2, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8103, file: !8104, line: 55, column: 2)
!8112 = !{i64 2148931071}
!8113 = !DILocation(line: 56, column: 9, scope: !8103)
!8114 = !DILocation(line: 56, column: 2, scope: !8103)
!8115 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !546, file: !546, line: 731, type: !8116, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8119)
!8116 = !DISubroutineType(types: !8117)
!8117 = !{!107, !8118, !581}
!8118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 32)
!8119 = !{!8120, !8121}
!8120 = !DILocalVariable(name: "spec", arg: 1, scope: !8115, file: !546, line: 731, type: !8118)
!8121 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !8115, file: !546, line: 732, type: !581)
!8122 = !DILocation(line: 0, scope: !8115)
!8123 = !DILocation(line: 734, column: 34, scope: !8115)
!8124 = !DILocation(line: 735, column: 13, scope: !8115)
!8125 = !DILocation(line: 736, column: 13, scope: !8115)
!8126 = !DILocation(line: 736, column: 7, scope: !8115)
!8127 = !DILocation(line: 736, column: 22, scope: !8115)
!8128 = !DILocation(line: 734, column: 9, scope: !8115)
!8129 = !DILocation(line: 734, column: 2, scope: !8115)
!8130 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !8131, file: !8131, line: 49, type: !563, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8132)
!8131 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!8132 = !{!8133, !8134, !8135}
!8133 = !DILocalVariable(name: "port", arg: 1, scope: !8130, file: !8131, line: 49, type: !565)
!8134 = !DILocalVariable(name: "pin", arg: 2, scope: !8130, file: !8131, line: 49, type: !580)
!8135 = !DILocalVariable(name: "flags", arg: 3, scope: !8130, file: !8131, line: 49, type: !581)
!8136 = !DILocation(line: 0, scope: !8130)
!8137 = !DILocation(line: 59, column: 2, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8130, file: !8131, line: 59, column: 2)
!8139 = !{i64 2148981165}
!8140 = !DILocation(line: 60, column: 9, scope: !8130)
!8141 = !DILocation(line: 60, column: 2, scope: !8130)
!8142 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !546, file: !546, line: 667, type: !563, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8143)
!8143 = !{!8144, !8145, !8146, !8147, !8148, !8150}
!8144 = !DILocalVariable(name: "port", arg: 1, scope: !8142, file: !546, line: 667, type: !565)
!8145 = !DILocalVariable(name: "pin", arg: 2, scope: !8142, file: !546, line: 668, type: !580)
!8146 = !DILocalVariable(name: "flags", arg: 3, scope: !8142, file: !546, line: 669, type: !581)
!8147 = !DILocalVariable(name: "api", scope: !8142, file: !546, line: 671, type: !557)
!8148 = !DILocalVariable(name: "cfg", scope: !8142, file: !546, line: 673, type: !8149)
!8149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !627)
!8150 = !DILocalVariable(name: "data", scope: !8142, file: !546, line: 675, type: !637)
!8151 = !DILocation(line: 0, scope: !8142)
!8152 = !DILocation(line: 672, column: 41, scope: !8142)
!8153 = !DILocation(line: 674, column: 44, scope: !8142)
!8154 = !DILocation(line: 676, column: 36, scope: !8142)
!8155 = !DILocation(line: 678, column: 2, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !546, line: 678, column: 2)
!8157 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 678, column: 2)
!8158 = !DILocation(line: 678, column: 2, scope: !8157)
!8159 = !DILocation(line: 678, column: 2, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !546, line: 678, column: 2)
!8161 = !DILocation(line: 681, column: 2, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !546, line: 681, column: 2)
!8163 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 681, column: 2)
!8164 = !DILocation(line: 681, column: 2, scope: !8163)
!8165 = !DILocation(line: 681, column: 2, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8162, file: !546, line: 681, column: 2)
!8167 = !DILocation(line: 685, column: 2, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !546, line: 685, column: 2)
!8169 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 685, column: 2)
!8170 = !DILocation(line: 685, column: 2, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8168, file: !546, line: 685, column: 2)
!8172 = !DILocation(line: 689, column: 2, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !546, line: 689, column: 2)
!8174 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 689, column: 2)
!8175 = !DILocation(line: 689, column: 2, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8173, file: !546, line: 689, column: 2)
!8177 = !DILocation(line: 692, column: 2, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !546, line: 692, column: 2)
!8179 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 692, column: 2)
!8180 = !DILocation(line: 692, column: 2, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8178, file: !546, line: 692, column: 2)
!8182 = !DILocation(line: 696, column: 2, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !546, line: 696, column: 2)
!8184 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 696, column: 2)
!8185 = !DILocation(line: 696, column: 2, scope: !8184)
!8186 = !DILocation(line: 696, column: 2, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8183, file: !546, line: 696, column: 2)
!8188 = !DILocation(line: 701, column: 6, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 700, column: 6)
!8190 = !DILocation(line: 708, column: 2, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !546, line: 708, column: 2)
!8192 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 708, column: 2)
!8193 = !DILocation(line: 708, column: 2, scope: !8192)
!8194 = !DILocation(line: 708, column: 2, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8191, file: !546, line: 708, column: 2)
!8196 = !DILocation(line: 711, column: 13, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8142, file: !546, line: 711, column: 6)
!8198 = !DILocation(line: 711, column: 32, scope: !8197)
!8199 = !DILocation(line: 711, column: 6, scope: !8142)
!8200 = !DILocation(line: 712, column: 9, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8197, file: !546, line: 711, column: 38)
!8202 = !DILocation(line: 712, column: 16, scope: !8201)
!8203 = !DILocation(line: 713, column: 2, scope: !8201)
!8204 = !DILocation(line: 714, column: 19, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8197, file: !546, line: 713, column: 9)
!8206 = !DILocation(line: 714, column: 9, scope: !8205)
!8207 = !DILocation(line: 714, column: 16, scope: !8205)
!8208 = !DILocation(line: 706, column: 8, scope: !8142)
!8209 = !DILocation(line: 717, column: 14, scope: !8142)
!8210 = !DILocation(line: 717, column: 9, scope: !8142)
!8211 = !DILocation(line: 717, column: 2, scope: !8142)
!8212 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !8105, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8213)
!8213 = !{!8214}
!8214 = !DILocalVariable(name: "dev", arg: 1, scope: !8212, file: !260, line: 730, type: !565)
!8215 = !DILocation(line: 0, scope: !8212)
!8216 = !DILocation(line: 732, column: 9, scope: !8212)
!8217 = !DILocation(line: 732, column: 2, scope: !8212)
!8218 = distinct !DISubprogram(name: "end_report", scope: !654, file: !654, line: 67, type: !3055, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8219 = !DILocation(line: 69, column: 6, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8218, file: !654, line: 69, column: 6)
!8221 = !DILocation(line: 0, scope: !8220)
!8222 = !DILocation(line: 74, column: 1, scope: !8218)
!8223 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !654, file: !654, line: 159, type: !3055, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8224 = !DILocation(line: 183, column: 1, scope: !8223)
!8225 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !654, file: !654, line: 185, type: !3055, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8226 = !DILocation(line: 196, column: 1, scope: !8225)
!8227 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !654, file: !654, line: 295, type: !3055, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8228 = !DILocation(line: 298, column: 34, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !654, line: 297, column: 47)
!8230 = distinct !DILexicalBlock(scope: !8227, file: !654, line: 297, column: 6)
!8231 = !DILocation(line: 300, column: 2, scope: !8227)
!8232 = !DILocation(line: 301, column: 1, scope: !8227)
!8233 = distinct !DISubprogram(name: "ztest_test_skip", scope: !654, file: !654, line: 476, type: !3055, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8234 = !DILocation(line: 478, column: 10, scope: !8233)
!8235 = !DILocation(line: 478, column: 2, scope: !8233)
!8236 = !DILocation(line: 480, column: 15, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8233, file: !654, line: 478, column: 17)
!8238 = !DILocation(line: 481, column: 3, scope: !8237)
!8239 = !DILocation(line: 484, column: 15, scope: !8237)
!8240 = !DILocation(line: 485, column: 3, scope: !8237)
!8241 = !DILocation(line: 486, column: 3, scope: !8237)
!8242 = !DILocation(line: 489, column: 9, scope: !8237)
!8243 = !DILocation(line: 488, column: 3, scope: !8237)
!8244 = !DILocation(line: 490, column: 15, scope: !8237)
!8245 = !DILocation(line: 491, column: 3, scope: !8237)
!8246 = !DILocation(line: 493, column: 1, scope: !8233)
!8247 = distinct !DISubprogram(name: "test_finalize", scope: !654, file: !654, line: 432, type: !3055, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8248 = !DILocation(line: 435, column: 3, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !654, line: 434, column: 41)
!8250 = distinct !DILexicalBlock(scope: !8247, file: !654, line: 434, column: 6)
!8251 = !DILocation(line: 436, column: 18, scope: !8249)
!8252 = !DILocation(line: 436, column: 3, scope: !8249)
!8253 = !DILocation(line: 438, column: 1, scope: !8247)
!8254 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !654, file: !654, line: 274, type: !8255, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8257)
!8255 = !DISubroutineType(types: !8256)
!8256 = !{!118, !653}
!8257 = !{!8258}
!8258 = !DILocalVariable(name: "phase", arg: 1, scope: !8254, file: !654, line: 274, type: !653)
!8259 = !DILocation(line: 0, scope: !8254)
!8260 = !DILocation(line: 276, column: 2, scope: !8254)
!8261 = !DILocation(line: 0, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8254, file: !654, line: 276, column: 17)
!8263 = !DILocation(line: 292, column: 1, scope: !8254)
!8264 = distinct !DISubprogram(name: "k_thread_abort", scope: !4383, file: !4383, line: 188, type: !8265, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8269)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{null, !8267}
!8267 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !8268)
!8268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 32)
!8269 = !{!8270}
!8270 = !DILocalVariable(name: "thread", arg: 1, scope: !8264, file: !4383, line: 188, type: !8267)
!8271 = !DILocation(line: 0, scope: !8264)
!8272 = !DILocation(line: 197, column: 2, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8264, file: !4383, line: 197, column: 2)
!8274 = !{i64 2152248956}
!8275 = !DILocation(line: 198, column: 2, scope: !8264)
!8276 = !DILocation(line: 199, column: 1, scope: !8264)
!8277 = distinct !DISubprogram(name: "k_current_get", scope: !419, file: !419, line: 530, type: !8278, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8278 = !DISubroutineType(types: !8279)
!8279 = !{!8267}
!8280 = !DILocation(line: 535, column: 9, scope: !8277)
!8281 = !DILocation(line: 535, column: 2, scope: !8277)
!8282 = distinct !DISubprogram(name: "z_current_get", scope: !4383, file: !4383, line: 173, type: !8278, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8283 = !DILocation(line: 180, column: 2, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8282, file: !4383, line: 180, column: 2)
!8285 = !{i64 2152248888}
!8286 = !DILocation(line: 181, column: 9, scope: !8282)
!8287 = !DILocation(line: 181, column: 2, scope: !8282)
!8288 = distinct !DISubprogram(name: "ztest_test_fail", scope: !654, file: !654, line: 440, type: !3055, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8289 = !DILocation(line: 442, column: 10, scope: !8288)
!8290 = !DILocation(line: 442, column: 2, scope: !8288)
!8291 = !DILocation(line: 444, column: 15, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8288, file: !654, line: 442, column: 17)
!8293 = !DILocation(line: 445, column: 3, scope: !8292)
!8294 = !DILocation(line: 448, column: 15, scope: !8292)
!8295 = !DILocation(line: 449, column: 3, scope: !8292)
!8296 = !DILocation(line: 450, column: 3, scope: !8292)
!8297 = !DILocation(line: 453, column: 9, scope: !8292)
!8298 = !DILocation(line: 452, column: 3, scope: !8292)
!8299 = !DILocation(line: 454, column: 15, scope: !8292)
!8300 = !DILocation(line: 455, column: 3, scope: !8292)
!8301 = !DILocation(line: 457, column: 1, scope: !8288)
!8302 = distinct !DISubprogram(name: "ztest_test_pass", scope: !654, file: !654, line: 459, type: !3055, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8303 = !DILocation(line: 461, column: 10, scope: !8302)
!8304 = !DILocation(line: 461, column: 2, scope: !8302)
!8305 = !DILocation(line: 463, column: 15, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8302, file: !654, line: 461, column: 17)
!8307 = !DILocation(line: 465, column: 3, scope: !8306)
!8308 = !DILocation(line: 468, column: 9, scope: !8306)
!8309 = !DILocation(line: 467, column: 3, scope: !8306)
!8310 = !DILocation(line: 469, column: 15, scope: !8306)
!8311 = !DILocation(line: 470, column: 7, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8306, file: !654, line: 470, column: 7)
!8313 = !DILocation(line: 470, column: 13, scope: !8312)
!8314 = !DILocation(line: 470, column: 7, scope: !8306)
!8315 = !DILocation(line: 0, scope: !8306)
!8316 = !DILocation(line: 474, column: 1, scope: !8302)
!8317 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !654, file: !654, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8318)
!8318 = !{!8319}
!8319 = !DILocalVariable(name: "data", arg: 1, scope: !8317, file: !654, line: 495, type: !106)
!8320 = !DILocation(line: 0, scope: !8317)
!8321 = !DILocation(line: 498, column: 2, scope: !8317)
!8322 = !DILocation(line: 499, column: 1, scope: !8317)
!8323 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8324, file: !8324, line: 24, type: !3055, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8324 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!8325 = !DILocation(line: 32, column: 2, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8323, file: !8324, line: 32, column: 2)
!8327 = !{i64 2152371343}
!8328 = !DILocation(line: 34, column: 1, scope: !8323)
!8329 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !654, file: !654, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8330)
!8330 = !{!8331}
!8331 = !DILocalVariable(name: "data", arg: 1, scope: !8329, file: !654, line: 501, type: !106)
!8332 = !DILocation(line: 0, scope: !8329)
!8333 = !DILocation(line: 504, column: 2, scope: !8329)
!8334 = !DILocation(line: 505, column: 1, scope: !8329)
!8335 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8324, file: !8324, line: 47, type: !3055, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8336 = !DILocation(line: 55, column: 2, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8335, file: !8324, line: 55, column: 2)
!8338 = !{i64 2152371411}
!8339 = !DILocation(line: 57, column: 1, scope: !8335)
!8340 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !654, file: !654, line: 617, type: !8341, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8360)
!8341 = !DISubroutineType(types: !8342)
!8342 = !{!8343, !118, !8343}
!8343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8344, size: 32)
!8344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8345)
!8345 = !{!8346, !8347, !8348, !8349, !8350}
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8344, file: !114, line: 98, baseType: !118, size: 32)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8344, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8344, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8344, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8344, file: !114, line: 104, baseType: !8351, size: 32, offset: 128)
!8351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8352)
!8352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8353, size: 32)
!8353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8354)
!8354 = !{!8355, !8356, !8357, !8358, !8359}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8353, file: !114, line: 125, baseType: !152, size: 32)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8353, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8353, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8353, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8353, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8360 = !{!8361, !8362, !8363}
!8361 = !DILocalVariable(name: "suite", arg: 1, scope: !8340, file: !654, line: 617, type: !118)
!8362 = !DILocalVariable(name: "prev", arg: 2, scope: !8340, file: !654, line: 617, type: !8343)
!8363 = !DILocalVariable(name: "test", scope: !8340, file: !654, line: 619, type: !8343)
!8364 = !DILocation(line: 0, scope: !8340)
!8365 = !DILocation(line: 619, column: 39, scope: !8340)
!8366 = !DILocation(line: 619, column: 33, scope: !8340)
!8367 = !DILocation(line: 621, column: 14, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !654, line: 621, column: 2)
!8369 = distinct !DILexicalBlock(scope: !8340, file: !654, line: 621, column: 2)
!8370 = !DILocation(line: 621, column: 2, scope: !8369)
!8371 = !DILocation(line: 622, column: 27, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !654, line: 622, column: 7)
!8373 = distinct !DILexicalBlock(scope: !8368, file: !654, line: 621, column: 51)
!8374 = !DILocation(line: 622, column: 7, scope: !8372)
!8375 = !DILocation(line: 622, column: 44, scope: !8372)
!8376 = !DILocation(line: 622, column: 7, scope: !8373)
!8377 = !DILocation(line: 621, column: 43, scope: !8368)
!8378 = distinct !{!8378, !8370, !8379}
!8379 = !DILocation(line: 625, column: 2, scope: !8369)
!8380 = !DILocation(line: 627, column: 1, scope: !8340)
!8381 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !654, file: !654, line: 764, type: !8057, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8382)
!8382 = !{!8383}
!8383 = !DILocalVariable(name: "name", arg: 1, scope: !8381, file: !654, line: 764, type: !118)
!8384 = !DILocation(line: 0, scope: !8381)
!8385 = !DILocation(line: 766, column: 36, scope: !8381)
!8386 = !DILocation(line: 766, column: 9, scope: !8381)
!8387 = !DILocation(line: 766, column: 2, scope: !8381)
!8388 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !654, file: !654, line: 604, type: !8389, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8408)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{!8391, !118}
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 32)
!8392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8393)
!8393 = !{!8394, !8395, !8396, !8397, !8398, !8399, !8400}
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8392, file: !114, line: 179, baseType: !117, size: 32)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8392, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8392, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8392, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8392, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8392, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8392, file: !114, line: 197, baseType: !8401, size: 32, offset: 192)
!8401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8402)
!8402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8403, size: 32)
!8403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8404)
!8404 = !{!8405, !8406, !8407}
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8403, file: !114, line: 116, baseType: !152, size: 32)
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8403, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8403, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8408 = !{!8409, !8410}
!8409 = !DILocalVariable(name: "name", arg: 1, scope: !8388, file: !654, line: 604, type: !118)
!8410 = !DILocalVariable(name: "node", scope: !8388, file: !654, line: 606, type: !8391)
!8411 = !DILocation(line: 0, scope: !8388)
!8412 = !DILocation(line: 608, column: 2, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8388, file: !654, line: 608, column: 2)
!8414 = !DILocation(line: 609, column: 26, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8416, file: !654, line: 609, column: 7)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !654, line: 608, column: 87)
!8417 = distinct !DILexicalBlock(scope: !8413, file: !654, line: 608, column: 2)
!8418 = !DILocation(line: 609, column: 7, scope: !8415)
!8419 = !DILocation(line: 609, column: 32, scope: !8415)
!8420 = !DILocation(line: 609, column: 7, scope: !8416)
!8421 = !DILocation(line: 608, column: 79, scope: !8417)
!8422 = !DILocation(line: 608, column: 49, scope: !8417)
!8423 = distinct !{!8423, !8412, !8424}
!8424 = !DILocation(line: 612, column: 2, scope: !8413)
!8425 = !DILocation(line: 615, column: 1, scope: !8388)
!8426 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !654, file: !654, line: 652, type: !8427, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8429)
!8427 = !DISubroutineType(types: !8428)
!8428 = !{!107, !8391}
!8429 = !{!8430, !8431, !8432, !8433, !8434, !8435}
!8430 = !DILocalVariable(name: "suite", arg: 1, scope: !8426, file: !654, line: 652, type: !8391)
!8431 = !DILocalVariable(name: "test", scope: !8426, file: !654, line: 654, type: !8343)
!8432 = !DILocalVariable(name: "data", scope: !8426, file: !654, line: 655, type: !106)
!8433 = !DILocalVariable(name: "fail", scope: !8426, file: !654, line: 656, type: !107)
!8434 = !DILocalVariable(name: "tc_result", scope: !8426, file: !654, line: 657, type: !107)
!8435 = !DILocalVariable(name: "i", scope: !8436, file: !654, line: 692, type: !107)
!8436 = distinct !DILexicalBlock(scope: !8426, file: !654, line: 692, column: 2)
!8437 = !DILocation(line: 0, scope: !8426)
!8438 = !DILocation(line: 663, column: 12, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8426, file: !654, line: 663, column: 6)
!8440 = !DILocation(line: 663, column: 6, scope: !8426)
!8441 = !DILocation(line: 664, column: 15, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8439, file: !654, line: 663, column: 21)
!8443 = !DILocation(line: 665, column: 3, scope: !8442)
!8444 = !DILocation(line: 679, column: 2, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8426, file: !654, line: 679, column: 2)
!8446 = !DILocation(line: 680, column: 33, scope: !8426)
!8447 = !DILocation(line: 681, column: 14, scope: !8426)
!8448 = !DILocation(line: 682, column: 8, scope: !8426)
!8449 = !DILocation(line: 688, column: 55, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8426, file: !654, line: 688, column: 6)
!8451 = !DILocation(line: 688, column: 61, scope: !8450)
!8452 = !DILocation(line: 688, column: 6, scope: !8426)
!8453 = !DILocation(line: 689, column: 10, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8450, file: !654, line: 688, column: 70)
!8455 = !DILocation(line: 690, column: 2, scope: !8454)
!8456 = !DILocation(line: 0, scope: !8436)
!8457 = !DILocation(line: 727, column: 3, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !654, line: 692, column: 46)
!8459 = distinct !DILexicalBlock(scope: !8436, file: !654, line: 692, column: 2)
!8460 = !DILocation(line: 0, scope: !8458)
!8461 = !DILocation(line: 727, column: 48, scope: !8458)
!8462 = !DILocation(line: 727, column: 19, scope: !8458)
!8463 = !DILocation(line: 727, column: 61, scope: !8458)
!8464 = !DILocation(line: 728, column: 41, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !654, line: 728, column: 8)
!8466 = distinct !DILexicalBlock(scope: !8458, file: !654, line: 727, column: 71)
!8467 = !DILocation(line: 728, column: 53, scope: !8465)
!8468 = !DILocation(line: 728, column: 8, scope: !8465)
!8469 = !DILocation(line: 728, column: 8, scope: !8466)
!8470 = !DILocation(line: 729, column: 11, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8465, file: !654, line: 728, column: 60)
!8472 = !DILocation(line: 729, column: 18, scope: !8471)
!8473 = !DILocation(line: 729, column: 27, scope: !8471)
!8474 = !DILocation(line: 730, column: 17, scope: !8471)
!8475 = !DILocation(line: 731, column: 9, scope: !8471)
!8476 = !DILocation(line: 732, column: 12, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !654, line: 731, column: 31)
!8478 = distinct !DILexicalBlock(scope: !8471, file: !654, line: 731, column: 9)
!8479 = !DILocation(line: 732, column: 19, scope: !8477)
!8480 = !DILocation(line: 733, column: 5, scope: !8477)
!8481 = !DILocation(line: 734, column: 12, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !654, line: 733, column: 38)
!8483 = distinct !DILexicalBlock(scope: !8478, file: !654, line: 733, column: 16)
!8484 = !DILocation(line: 734, column: 19, scope: !8482)
!8485 = !DILocation(line: 735, column: 5, scope: !8482)
!8486 = !DILocation(line: 736, column: 12, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !654, line: 735, column: 38)
!8488 = distinct !DILexicalBlock(scope: !8483, file: !654, line: 735, column: 16)
!8489 = !DILocation(line: 736, column: 19, scope: !8487)
!8490 = !DILocation(line: 737, column: 5, scope: !8487)
!8491 = !DILocation(line: 0, scope: !8478)
!8492 = !DILocation(line: 739, column: 19, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8471, file: !654, line: 739, column: 9)
!8494 = !DILocation(line: 739, column: 9, scope: !8471)
!8495 = !DILocation(line: 744, column: 31, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8466, file: !654, line: 744, column: 8)
!8497 = !DILocation(line: 744, column: 43, scope: !8496)
!8498 = !DILocation(line: 744, column: 8, scope: !8466)
!8499 = distinct !{!8499, !8457, !8500}
!8500 = !DILocation(line: 747, column: 3, scope: !8458)
!8501 = !DILocation(line: 750, column: 7, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8458, file: !654, line: 750, column: 7)
!8503 = !DILocation(line: 750, column: 38, scope: !8502)
!8504 = !DILocation(line: 751, column: 16, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8502, file: !654, line: 750, column: 52)
!8506 = !DILocation(line: 752, column: 3, scope: !8505)
!8507 = !DILocation(line: 755, column: 2, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !654, line: 755, column: 2)
!8509 = distinct !DILexicalBlock(scope: !8426, file: !654, line: 755, column: 2)
!8510 = !DILocation(line: 0, scope: !8508)
!8511 = !DILocation(line: 756, column: 8, scope: !8426)
!8512 = !DILocation(line: 757, column: 13, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8426, file: !654, line: 757, column: 6)
!8514 = !DILocation(line: 757, column: 22, scope: !8513)
!8515 = !DILocation(line: 757, column: 6, scope: !8426)
!8516 = !DILocation(line: 758, column: 3, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8513, file: !654, line: 757, column: 31)
!8518 = !DILocation(line: 759, column: 2, scope: !8517)
!8519 = !DILocation(line: 762, column: 1, scope: !8426)
!8520 = distinct !DISubprogram(name: "run_test", scope: !654, file: !654, line: 521, type: !8521, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8523)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{!107, !8391, !8343, !106}
!8523 = !{!8524, !8525, !8526, !8527}
!8524 = !DILocalVariable(name: "suite", arg: 1, scope: !8520, file: !654, line: 521, type: !8391)
!8525 = !DILocalVariable(name: "test", arg: 2, scope: !8520, file: !654, line: 521, type: !8343)
!8526 = !DILocalVariable(name: "data", arg: 3, scope: !8520, file: !654, line: 521, type: !106)
!8527 = !DILocalVariable(name: "ret", scope: !8520, file: !654, line: 523, type: !107)
!8528 = !DILocation(line: 0, scope: !8520)
!8529 = !DILocation(line: 528, column: 2, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8520, file: !654, line: 528, column: 2)
!8531 = !DILocation(line: 530, column: 8, scope: !8520)
!8532 = !DILocation(line: 536, column: 3, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !654, line: 535, column: 41)
!8534 = distinct !DILexicalBlock(scope: !8520, file: !654, line: 535, column: 6)
!8535 = !DILocation(line: 539, column: 32, scope: !8533)
!8536 = !DILocation(line: 539, column: 39, scope: !8533)
!8537 = !DILocation(line: 541, column: 11, scope: !8533)
!8538 = !DILocation(line: 541, column: 26, scope: !8533)
!8539 = !DILocation(line: 537, column: 3, scope: !8533)
!8540 = !DILocation(line: 543, column: 3, scope: !8533)
!8541 = !DILocation(line: 544, column: 13, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8533, file: !654, line: 544, column: 7)
!8543 = !DILocation(line: 544, column: 18, scope: !8542)
!8544 = !DILocation(line: 544, column: 7, scope: !8533)
!8545 = !DILocation(line: 545, column: 4, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8542, file: !654, line: 544, column: 27)
!8547 = !DILocation(line: 546, column: 3, scope: !8546)
!8548 = !DILocation(line: 548, column: 7, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8533, file: !654, line: 548, column: 7)
!8550 = !DILocation(line: 548, column: 46, scope: !8549)
!8551 = !DILocation(line: 550, column: 4, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8549, file: !654, line: 549, column: 47)
!8553 = !DILocation(line: 551, column: 4, scope: !8552)
!8554 = !DILocation(line: 552, column: 3, scope: !8552)
!8555 = !DILocation(line: 564, column: 8, scope: !8520)
!8556 = !DILocation(line: 565, column: 13, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8520, file: !654, line: 565, column: 6)
!8558 = !DILocation(line: 565, column: 19, scope: !8557)
!8559 = !DILocation(line: 565, column: 6, scope: !8520)
!8560 = !DILocation(line: 566, column: 3, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8557, file: !654, line: 565, column: 28)
!8562 = !DILocation(line: 567, column: 2, scope: !8561)
!8563 = !DILocation(line: 568, column: 2, scope: !8520)
!8564 = !DILocation(line: 570, column: 2, scope: !8520)
!8565 = !DILocation(line: 571, column: 6, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8520, file: !654, line: 571, column: 6)
!8567 = !DILocation(line: 571, column: 28, scope: !8566)
!8568 = !DILocation(line: 571, column: 35, scope: !8566)
!8569 = !DILocation(line: 571, column: 20, scope: !8566)
!8570 = !DILocation(line: 571, column: 6, scope: !8520)
!8571 = !DILocation(line: 572, column: 34, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8566, file: !654, line: 571, column: 54)
!8573 = !DILocation(line: 573, column: 2, scope: !8572)
!8574 = !DILocation(line: 575, column: 8, scope: !8520)
!8575 = !DILocation(line: 583, column: 6, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8520, file: !654, line: 583, column: 6)
!8577 = !DILocation(line: 583, column: 39, scope: !8576)
!8578 = !DILocation(line: 585, column: 46, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8576, file: !654, line: 585, column: 13)
!8580 = !DILocation(line: 590, column: 10, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !654, line: 589, column: 54)
!8582 = distinct !DILexicalBlock(scope: !8520, file: !654, line: 589, column: 6)
!8583 = !DILocation(line: 593, column: 8, scope: !8520)
!8584 = !DILocation(line: 594, column: 2, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8520, file: !654, line: 594, column: 2)
!8586 = !DILocation(line: 595, column: 10, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8520, file: !654, line: 595, column: 6)
!8588 = !DILocation(line: 595, column: 21, scope: !8587)
!8589 = !DILocation(line: 595, column: 24, scope: !8587)
!8590 = !DILocation(line: 595, column: 6, scope: !8520)
!8591 = !DILocation(line: 596, column: 15, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8587, file: !654, line: 595, column: 56)
!8593 = !DILocation(line: 597, column: 2, scope: !8592)
!8594 = !DILocation(line: 599, column: 2, scope: !8520)
!8595 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !811, file: !811, line: 98, type: !3055, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8596 = !DILocation(line: 100, column: 18, scope: !8595)
!8597 = !DILocation(line: 100, column: 16, scope: !8595)
!8598 = !DILocation(line: 101, column: 1, scope: !8595)
!8599 = distinct !DISubprogram(name: "k_thread_create", scope: !4383, file: !4383, line: 24, type: !8600, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8608)
!8600 = !DISubroutineType(types: !8601)
!8601 = !{!8267, !8268, !8602, !185, !680, !106, !106, !106, !107, !152, !8604}
!8602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8603, size: 32)
!8603 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !681, line: 44, baseType: !697)
!8604 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !686, line: 67, baseType: !8605)
!8605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 65, size: 64, elements: !8606)
!8606 = !{!8607}
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8605, file: !686, line: 66, baseType: !685, size: 64)
!8608 = !{!8609, !8610, !8611, !8612, !8613, !8614, !8615, !8616, !8617, !8618}
!8609 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8599, file: !4383, line: 24, type: !8268)
!8610 = !DILocalVariable(name: "stack", arg: 2, scope: !8599, file: !4383, line: 24, type: !8602)
!8611 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8599, file: !4383, line: 24, type: !185)
!8612 = !DILocalVariable(name: "entry", arg: 4, scope: !8599, file: !4383, line: 24, type: !680)
!8613 = !DILocalVariable(name: "p1", arg: 5, scope: !8599, file: !4383, line: 24, type: !106)
!8614 = !DILocalVariable(name: "p2", arg: 6, scope: !8599, file: !4383, line: 24, type: !106)
!8615 = !DILocalVariable(name: "p3", arg: 7, scope: !8599, file: !4383, line: 24, type: !106)
!8616 = !DILocalVariable(name: "prio", arg: 8, scope: !8599, file: !4383, line: 24, type: !107)
!8617 = !DILocalVariable(name: "options", arg: 9, scope: !8599, file: !4383, line: 24, type: !152)
!8618 = !DILocalVariable(name: "delay", arg: 10, scope: !8599, file: !4383, line: 24, type: !8604)
!8619 = !DILocation(line: 0, scope: !8599)
!8620 = !DILocation(line: 49, column: 2, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8599, file: !4383, line: 49, column: 2)
!8622 = !{i64 2152248344}
!8623 = !DILocation(line: 50, column: 9, scope: !8599)
!8624 = !DILocation(line: 50, column: 2, scope: !8599)
!8625 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8626, file: !8626, line: 24, type: !8627, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8629)
!8626 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!8627 = !DISubroutineType(types: !8628)
!8628 = !{null, !13, !8268}
!8629 = !{!8630, !8631}
!8630 = !DILocalVariable(name: "object", arg: 1, scope: !8625, file: !8626, line: 24, type: !13)
!8631 = !DILocalVariable(name: "thread", arg: 2, scope: !8625, file: !8626, line: 24, type: !8268)
!8632 = !DILocation(line: 0, scope: !8625)
!8633 = !DILocation(line: 34, column: 2, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8625, file: !8626, line: 34, column: 2)
!8635 = !{i64 2151764764}
!8636 = !DILocation(line: 36, column: 1, scope: !8625)
!8637 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4383, file: !4383, line: 391, type: !8638, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8640)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{!107, !8267, !118}
!8640 = !{!8641, !8642}
!8641 = !DILocalVariable(name: "thread", arg: 1, scope: !8637, file: !4383, line: 391, type: !8267)
!8642 = !DILocalVariable(name: "str", arg: 2, scope: !8637, file: !4383, line: 391, type: !118)
!8643 = !DILocation(line: 0, scope: !8637)
!8644 = !DILocation(line: 400, column: 2, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8637, file: !4383, line: 400, column: 2)
!8646 = !{i64 2152249772}
!8647 = !DILocation(line: 401, column: 9, scope: !8637)
!8648 = !DILocation(line: 401, column: 2, scope: !8637)
!8649 = distinct !DISubprogram(name: "k_thread_start", scope: !4383, file: !4383, line: 205, type: !8265, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8650)
!8650 = !{!8651}
!8651 = !DILocalVariable(name: "thread", arg: 1, scope: !8649, file: !4383, line: 205, type: !8267)
!8652 = !DILocation(line: 0, scope: !8649)
!8653 = !DILocation(line: 214, column: 2, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8649, file: !4383, line: 214, column: 2)
!8655 = !{i64 2152249024}
!8656 = !DILocation(line: 215, column: 2, scope: !8649)
!8657 = !DILocation(line: 216, column: 1, scope: !8649)
!8658 = distinct !DISubprogram(name: "k_thread_join", scope: !4383, file: !4383, line: 74, type: !8659, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8661)
!8659 = !DISubroutineType(types: !8660)
!8660 = !{!107, !8268, !8604}
!8661 = !{!8662, !8663}
!8662 = !DILocalVariable(name: "thread", arg: 1, scope: !8658, file: !4383, line: 74, type: !8268)
!8663 = !DILocalVariable(name: "timeout", arg: 2, scope: !8658, file: !4383, line: 74, type: !8604)
!8664 = !DILocation(line: 0, scope: !8658)
!8665 = !DILocation(line: 83, column: 2, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8658, file: !4383, line: 83, column: 2)
!8667 = !{i64 2152248480}
!8668 = !DILocation(line: 84, column: 9, scope: !8658)
!8669 = !DILocation(line: 84, column: 2, scope: !8658)
!8670 = distinct !DISubprogram(name: "run_test_rules", scope: !654, file: !654, line: 207, type: !8671, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8673)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{null, !145, !8343, !106}
!8673 = !{!8674, !8675, !8676, !8677}
!8674 = !DILocalVariable(name: "is_before", arg: 1, scope: !8670, file: !654, line: 207, type: !145)
!8675 = !DILocalVariable(name: "test", arg: 2, scope: !8670, file: !654, line: 207, type: !8343)
!8676 = !DILocalVariable(name: "data", arg: 3, scope: !8670, file: !654, line: 207, type: !106)
!8677 = !DILocalVariable(name: "rule", scope: !8678, file: !654, line: 209, type: !8679)
!8678 = distinct !DILexicalBlock(scope: !8670, file: !654, line: 209, column: 2)
!8679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8680, size: 32)
!8680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8681)
!8681 = !{!8682, !8689}
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8680, file: !114, line: 438, baseType: !8683, size: 32)
!8683 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8684)
!8684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8685, size: 32)
!8685 = !DISubroutineType(types: !8686)
!8686 = !{null, !8687, !106}
!8687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8688, size: 32)
!8688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8344)
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8680, file: !114, line: 439, baseType: !8683, size: 32, offset: 32)
!8690 = !DILocation(line: 0, scope: !8670)
!8691 = !DILocation(line: 0, scope: !8678)
!8692 = !DILocation(line: 209, column: 2, scope: !8678)
!8693 = !DILocation(line: 217, column: 1, scope: !8670)
!8694 = !DILocation(line: 211, column: 17, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !654, line: 211, column: 7)
!8696 = distinct !DILexicalBlock(scope: !8697, file: !654, line: 210, column: 49)
!8697 = distinct !DILexicalBlock(scope: !8678, file: !654, line: 209, column: 2)
!8698 = !DILocation(line: 211, column: 26, scope: !8695)
!8699 = !DILocation(line: 211, column: 20, scope: !8695)
!8700 = !DILocation(line: 211, column: 7, scope: !8696)
!8701 = !DILocation(line: 213, column: 34, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8695, file: !654, line: 213, column: 14)
!8703 = !DILocation(line: 213, column: 28, scope: !8702)
!8704 = !DILocation(line: 213, column: 14, scope: !8695)
!8705 = !DILocation(line: 0, scope: !8695)
!8706 = !DILocation(line: 210, column: 41, scope: !8697)
!8707 = !DILocation(line: 210, column: 12, scope: !8697)
!8708 = distinct !{!8708, !8692, !8709}
!8709 = !DILocation(line: 216, column: 2, scope: !8678)
!8710 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !811, file: !811, line: 103, type: !3055, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8711)
!8711 = !{!8712}
!8712 = !DILocalVariable(name: "spend_cycle", scope: !8710, file: !811, line: 105, type: !152)
!8713 = !DILocation(line: 105, column: 25, scope: !8710)
!8714 = !DILocation(line: 105, column: 44, scope: !8710)
!8715 = !DILocation(line: 105, column: 42, scope: !8710)
!8716 = !DILocation(line: 0, scope: !8710)
!8717 = !DILocation(line: 107, column: 18, scope: !8710)
!8718 = !DILocation(line: 107, column: 16, scope: !8710)
!8719 = !DILocation(line: 108, column: 1, scope: !8710)
!8720 = distinct !DISubprogram(name: "cleanup_test", scope: !654, file: !654, line: 76, type: !8721, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8723)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!107, !8343}
!8723 = !{!8724, !8725, !8726}
!8724 = !DILocalVariable(name: "test", arg: 1, scope: !8720, file: !654, line: 76, type: !8343)
!8725 = !DILocalVariable(name: "ret", scope: !8720, file: !654, line: 78, type: !107)
!8726 = !DILocalVariable(name: "mock_status", scope: !8720, file: !654, line: 79, type: !107)
!8727 = !DILocation(line: 0, scope: !8720)
!8728 = !DILocation(line: 89, column: 3, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8730, file: !654, line: 88, column: 41)
!8730 = distinct !DILexicalBlock(scope: !8720, file: !654, line: 88, column: 6)
!8731 = !DILocation(line: 103, column: 2, scope: !8720)
!8732 = distinct !DISubprogram(name: "get_final_test_result", scope: !654, file: !654, line: 236, type: !8733, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8735)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{!107, !8687, !107}
!8735 = !{!8736, !8737, !8738, !8739}
!8736 = !DILocalVariable(name: "test", arg: 1, scope: !8732, file: !654, line: 236, type: !8687)
!8737 = !DILocalVariable(name: "ret", arg: 2, scope: !8732, file: !654, line: 236, type: !107)
!8738 = !DILocalVariable(name: "expected_result", scope: !8732, file: !654, line: 238, type: !675)
!8739 = !DILocalVariable(name: "expectation", scope: !8740, file: !654, line: 240, type: !8741)
!8740 = distinct !DILexicalBlock(scope: !8732, file: !654, line: 240, column: 2)
!8741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8742, size: 32)
!8742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8743)
!8743 = !{!8744, !8745, !8746}
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8742, file: !114, line: 48, baseType: !118, size: 32)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8742, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8742, file: !114, line: 50, baseType: !675, size: 32, offset: 64)
!8747 = !DILocation(line: 0, scope: !8732)
!8748 = !DILocation(line: 0, scope: !8740)
!8749 = !DILocation(line: 240, column: 2, scope: !8740)
!8750 = !DILocation(line: 243, column: 27, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8752, file: !654, line: 243, column: 7)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !654, line: 242, column: 75)
!8753 = distinct !DILexicalBlock(scope: !8740, file: !654, line: 240, column: 2)
!8754 = !DILocation(line: 243, column: 44, scope: !8751)
!8755 = !DILocation(line: 243, column: 7, scope: !8751)
!8756 = !DILocation(line: 243, column: 50, scope: !8751)
!8757 = !DILocation(line: 243, column: 55, scope: !8751)
!8758 = !DILocation(line: 244, column: 27, scope: !8751)
!8759 = !DILocation(line: 244, column: 50, scope: !8751)
!8760 = !DILocation(line: 244, column: 7, scope: !8751)
!8761 = !DILocation(line: 244, column: 67, scope: !8751)
!8762 = !DILocation(line: 243, column: 7, scope: !8752)
!8763 = !DILocation(line: 242, column: 60, scope: !8753)
!8764 = !DILocation(line: 242, column: 19, scope: !8753)
!8765 = distinct !{!8765, !8749, !8766}
!8766 = !DILocation(line: 248, column: 2, scope: !8740)
!8767 = !DILocation(line: 245, column: 35, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8751, file: !654, line: 244, column: 73)
!8769 = !DILocation(line: 250, column: 6, scope: !8732)
!8770 = !DILocation(line: 255, column: 15, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !654, line: 250, column: 53)
!8772 = distinct !DILexicalBlock(scope: !8732, file: !654, line: 250, column: 6)
!8773 = !DILocation(line: 255, column: 10, scope: !8771)
!8774 = !DILocation(line: 255, column: 3, scope: !8771)
!8775 = !DILocation(line: 262, column: 15, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !654, line: 257, column: 53)
!8777 = distinct !DILexicalBlock(scope: !8732, file: !654, line: 257, column: 6)
!8778 = !DILocation(line: 262, column: 10, scope: !8776)
!8779 = !DILocation(line: 262, column: 3, scope: !8776)
!8780 = !DILocation(line: 266, column: 1, scope: !8732)
!8781 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !811, file: !811, line: 81, type: !8782, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8784)
!8782 = !DISubroutineType(types: !8783)
!8783 = !{!118, !107}
!8784 = !{!8785}
!8785 = !DILocalVariable(name: "result", arg: 1, scope: !8781, file: !811, line: 81, type: !107)
!8786 = !DILocation(line: 0, scope: !8781)
!8787 = !DILocation(line: 83, column: 2, scope: !8781)
!8788 = !DILocation(line: 0, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8781, file: !811, line: 83, column: 18)
!8790 = !DILocation(line: 93, column: 1, scope: !8781)
!8791 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !419, file: !419, line: 1675, type: !7225, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8792 = !DILocation(line: 1677, column: 9, scope: !8791)
!8793 = !DILocation(line: 1677, column: 2, scope: !8791)
!8794 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8795, file: !8795, line: 809, type: !7466, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8796)
!8795 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8796 = !{!8797}
!8797 = !DILocalVariable(name: "t", arg: 1, scope: !8794, file: !8795, line: 809, type: !152)
!8798 = !DILocation(line: 0, scope: !8794)
!8799 = !DILocation(line: 812, column: 17, scope: !8794)
!8800 = !DILocalVariable(name: "t", arg: 1, scope: !8801, file: !8795, line: 102, type: !687)
!8801 = distinct !DISubprogram(name: "z_tmcvt", scope: !8795, file: !8795, line: 102, type: !8802, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8804)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!687, !687, !152, !152, !145, !145, !145, !145}
!8804 = !{!8800, !8805, !8806, !8807, !8808, !8809, !8810, !8811, !8812, !8813, !8814}
!8805 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8801, file: !8795, line: 102, type: !152)
!8806 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8801, file: !8795, line: 103, type: !152)
!8807 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8801, file: !8795, line: 103, type: !145)
!8808 = !DILocalVariable(name: "result32", arg: 5, scope: !8801, file: !8795, line: 104, type: !145)
!8809 = !DILocalVariable(name: "round_up", arg: 6, scope: !8801, file: !8795, line: 104, type: !145)
!8810 = !DILocalVariable(name: "round_off", arg: 7, scope: !8801, file: !8795, line: 105, type: !145)
!8811 = !DILocalVariable(name: "mul_ratio", scope: !8801, file: !8795, line: 107, type: !145)
!8812 = !DILocalVariable(name: "div_ratio", scope: !8801, file: !8795, line: 109, type: !145)
!8813 = !DILocalVariable(name: "off", scope: !8801, file: !8795, line: 116, type: !687)
!8814 = !DILocalVariable(name: "rdivisor", scope: !8815, file: !8795, line: 119, type: !152)
!8815 = distinct !DILexicalBlock(scope: !8816, file: !8795, line: 118, column: 18)
!8816 = distinct !DILexicalBlock(scope: !8801, file: !8795, line: 118, column: 6)
!8817 = !DILocation(line: 0, scope: !8801, inlinedAt: !8818)
!8818 = distinct !DILocation(line: 812, column: 9, scope: !8794)
!8819 = !DILocation(line: 135, column: 5, scope: !8820, inlinedAt: !8818)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !8795, line: 134, column: 17)
!8821 = distinct !DILexicalBlock(scope: !8801, file: !8795, line: 134, column: 6)
!8822 = !DILocation(line: 136, column: 16, scope: !8823, inlinedAt: !8818)
!8823 = distinct !DILexicalBlock(scope: !8820, file: !8795, line: 136, column: 7)
!8824 = !DILocation(line: 812, column: 9, scope: !8794)
!8825 = !DILocation(line: 812, column: 2, scope: !8794)
!8826 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8827, file: !8827, line: 24, type: !7225, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8827 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8828 = !DILocation(line: 26, column: 9, scope: !8826)
!8829 = !DILocation(line: 26, column: 2, scope: !8826)
!8830 = distinct !DISubprogram(name: "test_cb", scope: !654, file: !654, line: 507, type: !683, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8831)
!8831 = !{!8832, !8833, !8834, !8835, !8836}
!8832 = !DILocalVariable(name: "a", arg: 1, scope: !8830, file: !654, line: 507, type: !106)
!8833 = !DILocalVariable(name: "b", arg: 2, scope: !8830, file: !654, line: 507, type: !106)
!8834 = !DILocalVariable(name: "c", arg: 3, scope: !8830, file: !654, line: 507, type: !106)
!8835 = !DILocalVariable(name: "suite", scope: !8830, file: !654, line: 509, type: !8391)
!8836 = !DILocalVariable(name: "test", scope: !8830, file: !654, line: 510, type: !8343)
!8837 = !DILocation(line: 0, scope: !8830)
!8838 = !DILocation(line: 510, column: 33, scope: !8830)
!8839 = !DILocation(line: 512, column: 14, scope: !8830)
!8840 = !DILocation(line: 513, column: 2, scope: !8830)
!8841 = !DILocation(line: 514, column: 13, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8830, file: !654, line: 514, column: 6)
!8843 = !DILocation(line: 514, column: 6, scope: !8842)
!8844 = !DILocation(line: 514, column: 6, scope: !8830)
!8845 = !DILocation(line: 515, column: 3, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8842, file: !654, line: 514, column: 21)
!8847 = !DILocation(line: 516, column: 2, scope: !8846)
!8848 = !DILocation(line: 517, column: 2, scope: !8830)
!8849 = !DILocation(line: 518, column: 14, scope: !8830)
!8850 = !DILocation(line: 519, column: 1, scope: !8830)
!8851 = distinct !DISubprogram(name: "run_test_functions", scope: !654, file: !654, line: 219, type: !8852, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8854)
!8852 = !DISubroutineType(types: !8853)
!8853 = !{null, !8391, !8343, !106}
!8854 = !{!8855, !8856, !8857}
!8855 = !DILocalVariable(name: "suite", arg: 1, scope: !8851, file: !654, line: 219, type: !8391)
!8856 = !DILocalVariable(name: "test", arg: 2, scope: !8851, file: !654, line: 219, type: !8343)
!8857 = !DILocalVariable(name: "data", arg: 3, scope: !8851, file: !654, line: 220, type: !106)
!8858 = !DILocation(line: 0, scope: !8851)
!8859 = !DILocation(line: 222, column: 8, scope: !8851)
!8860 = !DILocation(line: 223, column: 8, scope: !8851)
!8861 = !DILocation(line: 223, column: 2, scope: !8851)
!8862 = !DILocation(line: 224, column: 1, scope: !8851)
!8863 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !654, file: !654, line: 929, type: !8864, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8866)
!8864 = !DISubroutineType(types: !8865)
!8865 = !{!107, !13}
!8866 = !{!8867, !8868, !8869}
!8867 = !DILocalVariable(name: "state", arg: 1, scope: !8863, file: !654, line: 929, type: !13)
!8868 = !DILocalVariable(name: "count", scope: !8863, file: !654, line: 931, type: !107)
!8869 = !DILocalVariable(name: "ptr", scope: !8870, file: !654, line: 954, type: !8391)
!8870 = distinct !DILexicalBlock(scope: !8863, file: !654, line: 954, column: 2)
!8871 = !DILocation(line: 0, scope: !8863)
!8872 = !DILocation(line: 933, column: 6, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8863, file: !654, line: 933, column: 6)
!8874 = !DILocation(line: 933, column: 18, scope: !8873)
!8875 = !DILocation(line: 933, column: 6, scope: !8863)
!8876 = !DILocation(line: 0, scope: !8870)
!8877 = !DILocation(line: 954, column: 2, scope: !8870)
!8878 = !DILocation(line: 956, column: 12, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !654, line: 955, column: 48)
!8880 = distinct !DILexicalBlock(scope: !8870, file: !654, line: 954, column: 2)
!8881 = !DILocation(line: 956, column: 9, scope: !8879)
!8882 = !DILocation(line: 960, column: 7, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8879, file: !654, line: 960, column: 7)
!8884 = !DILocation(line: 960, column: 19, scope: !8883)
!8885 = !DILocation(line: 955, column: 41, scope: !8880)
!8886 = !DILocation(line: 960, column: 50, scope: !8883)
!8887 = distinct !{!8887, !8877, !8888}
!8888 = !DILocation(line: 964, column: 2, scope: !8870)
!8889 = !DILocation(line: 967, column: 2, scope: !8863)
!8890 = !DILocation(line: 969, column: 2, scope: !8863)
!8891 = !DILocation(line: 970, column: 1, scope: !8863)
!8892 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !654, file: !654, line: 907, type: !8893, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8895)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{!107, !8391, !13}
!8895 = !{!8896, !8897, !8898, !8899, !8900, !8902}
!8896 = !DILocalVariable(name: "ptr", arg: 1, scope: !8892, file: !654, line: 907, type: !8391)
!8897 = !DILocalVariable(name: "state", arg: 2, scope: !8892, file: !654, line: 907, type: !13)
!8898 = !DILocalVariable(name: "stats", scope: !8892, file: !654, line: 909, type: !8402)
!8899 = !DILocalVariable(name: "count", scope: !8892, file: !654, line: 910, type: !107)
!8900 = !DILocalVariable(name: "i", scope: !8901, file: !654, line: 914, type: !107)
!8901 = distinct !DILexicalBlock(scope: !8892, file: !654, line: 914, column: 2)
!8902 = !DILocalVariable(name: "fail", scope: !8903, file: !654, line: 916, type: !107)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !654, line: 915, column: 47)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !654, line: 915, column: 7)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !654, line: 914, column: 47)
!8906 = distinct !DILexicalBlock(scope: !8901, file: !654, line: 914, column: 2)
!8907 = !DILocation(line: 0, scope: !8892)
!8908 = !DILocation(line: 909, column: 41, scope: !8892)
!8909 = !DILocation(line: 912, column: 2, scope: !8892)
!8910 = !DILocation(line: 0, scope: !8901)
!8911 = !DILocation(line: 915, column: 7, scope: !8904)
!8912 = !DILocation(line: 915, column: 7, scope: !8905)
!8913 = !DILocation(line: 916, column: 15, scope: !8903)
!8914 = !DILocation(line: 0, scope: !8903)
!8915 = !DILocation(line: 919, column: 20, scope: !8903)
!8916 = !DILocation(line: 920, column: 31, scope: !8903)
!8917 = !DILocation(line: 920, column: 25, scope: !8903)
!8918 = !DILocation(line: 921, column: 3, scope: !8903)
!8919 = !DILocation(line: 0, scope: !8904)
!8920 = !DILocation(line: 926, column: 2, scope: !8892)
!8921 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !654, file: !654, line: 886, type: !3055, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8922)
!8922 = !{!8923}
!8923 = !DILocalVariable(name: "ptr", scope: !8924, file: !654, line: 894, type: !8391)
!8924 = distinct !DILexicalBlock(scope: !8921, file: !654, line: 894, column: 2)
!8925 = !DILocation(line: 892, column: 2, scope: !8921)
!8926 = !DILocation(line: 0, scope: !8924)
!8927 = !DILocation(line: 894, column: 2, scope: !8924)
!8928 = !DILocation(line: 903, column: 2, scope: !8921)
!8929 = !DILocation(line: 905, column: 1, scope: !8921)
!8930 = !DILocation(line: 898, column: 3, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !654, line: 895, column: 48)
!8932 = distinct !DILexicalBlock(scope: !8924, file: !654, line: 894, column: 2)
!8933 = !DILocation(line: 895, column: 41, scope: !8932)
!8934 = !DILocation(line: 895, column: 11, scope: !8932)
!8935 = distinct !{!8935, !8927, !8936}
!8936 = !DILocation(line: 902, column: 2, scope: !8924)
!8937 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !654, file: !654, line: 852, type: !8938, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8940)
!8938 = !DISubroutineType(types: !8939)
!8939 = !{null, !8391}
!8940 = !{!8941, !8942, !8943, !8944}
!8941 = !DILocalVariable(name: "suite", arg: 1, scope: !8937, file: !654, line: 852, type: !8391)
!8942 = !DILocalVariable(name: "test", scope: !8937, file: !654, line: 854, type: !8343)
!8943 = !DILocalVariable(name: "tc_result", scope: !8937, file: !654, line: 855, type: !107)
!8944 = !DILocalVariable(name: "flush_frequency", scope: !8937, file: !654, line: 856, type: !107)
!8945 = !DILocation(line: 0, scope: !8937)
!8946 = !DILocation(line: 858, column: 2, scope: !8937)
!8947 = !DILocation(line: 860, column: 47, scope: !8937)
!8948 = !DILocation(line: 860, column: 18, scope: !8937)
!8949 = !DILocation(line: 860, column: 60, scope: !8937)
!8950 = !DILocation(line: 860, column: 2, scope: !8937)
!8951 = !DILocation(line: 861, column: 13, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8953, file: !654, line: 861, column: 7)
!8953 = distinct !DILexicalBlock(scope: !8937, file: !654, line: 860, column: 70)
!8954 = !DILocation(line: 861, column: 20, scope: !8952)
!8955 = !DILocation(line: 861, column: 47, scope: !8952)
!8956 = !DILocation(line: 861, column: 31, scope: !8952)
!8957 = !DILocation(line: 861, column: 7, scope: !8953)
!8958 = !DILocation(line: 863, column: 27, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8952, file: !654, line: 863, column: 14)
!8960 = !DILocation(line: 863, column: 38, scope: !8959)
!8961 = !DILocation(line: 0, scope: !8952)
!8962 = !DILocation(line: 869, column: 3, scope: !8953)
!8963 = distinct !{!8963, !8950, !8964}
!8964 = !DILocation(line: 880, column: 2, scope: !8937)
!8965 = !DILocation(line: 881, column: 2, scope: !8937)
!8966 = !DILocation(line: 883, column: 1, scope: !8937)
!8967 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !654, file: !654, line: 801, type: !8938, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8968)
!8968 = !{!8969, !8970, !8971, !8972, !8973, !8974, !8975, !8976, !8977, !8978, !8979, !8980, !8981, !8982}
!8969 = !DILocalVariable(name: "suite", arg: 1, scope: !8967, file: !654, line: 801, type: !8391)
!8970 = !DILocalVariable(name: "distinct_pass", scope: !8967, file: !654, line: 803, type: !107)
!8971 = !DILocalVariable(name: "distinct_fail", scope: !8967, file: !654, line: 803, type: !107)
!8972 = !DILocalVariable(name: "distinct_skip", scope: !8967, file: !654, line: 803, type: !107)
!8973 = !DILocalVariable(name: "distinct_total", scope: !8967, file: !654, line: 803, type: !107)
!8974 = !DILocalVariable(name: "effective_total", scope: !8967, file: !654, line: 804, type: !107)
!8975 = !DILocalVariable(name: "expanded_pass", scope: !8967, file: !654, line: 805, type: !107)
!8976 = !DILocalVariable(name: "expanded_passrate", scope: !8967, file: !654, line: 805, type: !107)
!8977 = !DILocalVariable(name: "passrate_major", scope: !8967, file: !654, line: 806, type: !107)
!8978 = !DILocalVariable(name: "passrate_minor", scope: !8967, file: !654, line: 806, type: !107)
!8979 = !DILocalVariable(name: "passrate_tail", scope: !8967, file: !654, line: 806, type: !107)
!8980 = !DILocalVariable(name: "suite_result", scope: !8967, file: !654, line: 807, type: !107)
!8981 = !DILocalVariable(name: "test", scope: !8967, file: !654, line: 809, type: !8343)
!8982 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8967, file: !654, line: 810, type: !32)
!8983 = !DILocation(line: 0, scope: !8967)
!8984 = !DILocation(line: 813, column: 47, scope: !8967)
!8985 = !DILocation(line: 813, column: 18, scope: !8967)
!8986 = !DILocation(line: 813, column: 60, scope: !8967)
!8987 = !DILocation(line: 813, column: 2, scope: !8967)
!8988 = !DILocation(line: 814, column: 17, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8967, file: !654, line: 813, column: 70)
!8990 = !DILocation(line: 815, column: 36, scope: !8989)
!8991 = !DILocation(line: 815, column: 43, scope: !8989)
!8992 = !DILocation(line: 815, column: 27, scope: !8989)
!8993 = !DILocation(line: 816, column: 20, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8989, file: !654, line: 816, column: 7)
!8995 = !DILocation(line: 816, column: 47, scope: !8994)
!8996 = !DILocation(line: 816, column: 31, scope: !8994)
!8997 = !DILocation(line: 816, column: 7, scope: !8989)
!8998 = !DILocation(line: 817, column: 17, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8994, file: !654, line: 816, column: 58)
!9000 = !DILocation(line: 818, column: 3, scope: !8999)
!9001 = !DILocation(line: 818, column: 27, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8994, file: !654, line: 818, column: 14)
!9003 = !DILocation(line: 818, column: 38, scope: !9002)
!9004 = !DILocation(line: 818, column: 14, scope: !8994)
!9005 = !DILocation(line: 819, column: 17, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9002, file: !654, line: 818, column: 65)
!9007 = !DILocation(line: 820, column: 3, scope: !9006)
!9008 = !DILocation(line: 821, column: 17, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9002, file: !654, line: 820, column: 10)
!9010 = distinct !{!9010, !8987, !9011}
!9011 = !DILocation(line: 823, column: 2, scope: !8967)
!9012 = !DILocation(line: 825, column: 20, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8967, file: !654, line: 825, column: 6)
!9014 = !DILocation(line: 825, column: 6, scope: !8967)
!9015 = !DILocation(line: 829, column: 33, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9013, file: !654, line: 828, column: 9)
!9017 = !DILocation(line: 829, column: 18, scope: !9016)
!9018 = !DILocation(line: 830, column: 36, scope: !9016)
!9019 = !DILocation(line: 831, column: 33, scope: !9016)
!9020 = !DILocation(line: 832, column: 37, scope: !9016)
!9021 = !DILocation(line: 833, column: 38, scope: !9016)
!9022 = !DILocation(line: 834, column: 56, scope: !9016)
!9023 = !DILocation(line: 834, column: 39, scope: !9016)
!9024 = !DILocation(line: 834, column: 64, scope: !9016)
!9025 = !DILocation(line: 835, column: 78, scope: !9016)
!9026 = !DILocation(line: 835, column: 61, scope: !9016)
!9027 = !DILocation(line: 836, column: 21, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9016, file: !654, line: 836, column: 7)
!9029 = !DILocation(line: 836, column: 7, scope: !9016)
!9030 = !DILocation(line: 0, scope: !9013)
!9031 = !DILocation(line: 841, column: 2, scope: !8967)
!9032 = !DILocation(line: 849, column: 1, scope: !8967)
!9033 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !654, file: !654, line: 773, type: !8938, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !9034)
!9034 = !{!9035, !9036}
!9035 = !DILocalVariable(name: "suite", arg: 1, scope: !9033, file: !654, line: 773, type: !8391)
!9036 = !DILocalVariable(name: "test", scope: !9033, file: !654, line: 775, type: !8343)
!9037 = !DILocation(line: 0, scope: !9033)
!9038 = !DILocation(line: 777, column: 47, scope: !9033)
!9039 = !DILocation(line: 777, column: 18, scope: !9033)
!9040 = !DILocation(line: 777, column: 60, scope: !9033)
!9041 = !DILocation(line: 777, column: 2, scope: !9033)
!9042 = !DILocation(line: 778, column: 9, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9033, file: !654, line: 777, column: 70)
!9044 = !DILocation(line: 778, column: 16, scope: !9043)
!9045 = !DILocation(line: 778, column: 26, scope: !9043)
!9046 = !DILocation(line: 779, column: 9, scope: !9043)
!9047 = !DILocation(line: 779, column: 16, scope: !9043)
!9048 = !DILocation(line: 779, column: 27, scope: !9043)
!9049 = !DILocation(line: 780, column: 9, scope: !9043)
!9050 = !DILocation(line: 780, column: 16, scope: !9043)
!9051 = !DILocation(line: 780, column: 27, scope: !9043)
!9052 = !DILocation(line: 781, column: 9, scope: !9043)
!9053 = !DILocation(line: 781, column: 16, scope: !9043)
!9054 = !DILocation(line: 781, column: 27, scope: !9043)
!9055 = !DILocation(line: 782, column: 9, scope: !9043)
!9056 = !DILocation(line: 782, column: 16, scope: !9043)
!9057 = !DILocation(line: 782, column: 34, scope: !9043)
!9058 = distinct !{!9058, !9041, !9059}
!9059 = !DILocation(line: 783, column: 2, scope: !9033)
!9060 = !DILocation(line: 784, column: 1, scope: !9033)
!9061 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !654, file: !654, line: 972, type: !3055, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !9062)
!9062 = !{!9063, !9064, !9065}
!9063 = !DILocalVariable(name: "all_tests_run", scope: !9061, file: !654, line: 974, type: !145)
!9064 = !DILocalVariable(name: "suite", scope: !9061, file: !654, line: 975, type: !8391)
!9065 = !DILocalVariable(name: "test", scope: !9061, file: !654, line: 976, type: !8343)
!9066 = !DILocation(line: 0, scope: !9061)
!9067 = !DILocation(line: 979, column: 3, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !654, line: 979, column: 3)
!9069 = distinct !DILexicalBlock(scope: !9070, file: !654, line: 978, column: 47)
!9070 = distinct !DILexicalBlock(scope: !9061, file: !654, line: 978, column: 6)
!9071 = !DILocation(line: 987, column: 3, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9069, file: !654, line: 987, column: 3)
!9073 = !DILocation(line: 981, column: 15, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !654, line: 981, column: 8)
!9075 = distinct !DILexicalBlock(scope: !9076, file: !654, line: 980, column: 17)
!9076 = distinct !DILexicalBlock(scope: !9068, file: !654, line: 979, column: 3)
!9077 = !DILocation(line: 981, column: 22, scope: !9074)
!9078 = !DILocation(line: 981, column: 32, scope: !9074)
!9079 = !DILocation(line: 981, column: 8, scope: !9075)
!9080 = !DILocation(line: 982, column: 59, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9074, file: !654, line: 981, column: 37)
!9082 = !DILocation(line: 982, column: 5, scope: !9081)
!9083 = !DILocation(line: 984, column: 4, scope: !9081)
!9084 = !DILocation(line: 980, column: 8, scope: !9076)
!9085 = !DILocation(line: 979, column: 52, scope: !9076)
!9086 = distinct !{!9086, !9067, !9087}
!9087 = !DILocation(line: 985, column: 3, scope: !9068)
!9088 = !DILocation(line: 988, column: 40, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9090, file: !654, line: 987, column: 86)
!9090 = distinct !DILexicalBlock(scope: !9072, file: !654, line: 987, column: 3)
!9091 = !DILocation(line: 988, column: 12, scope: !9089)
!9092 = !DILocation(line: 989, column: 14, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9089, file: !654, line: 989, column: 8)
!9094 = !DILocation(line: 989, column: 8, scope: !9089)
!9095 = !DILocation(line: 992, column: 17, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9093, file: !654, line: 989, column: 23)
!9097 = !DILocation(line: 992, column: 29, scope: !9096)
!9098 = !DILocation(line: 990, column: 5, scope: !9096)
!9099 = !DILocation(line: 994, column: 4, scope: !9096)
!9100 = !DILocation(line: 987, column: 78, scope: !9090)
!9101 = !DILocation(line: 987, column: 49, scope: !9090)
!9102 = distinct !{!9102, !9071, !9103}
!9103 = !DILocation(line: 995, column: 3, scope: !9072)
!9104 = !DILocation(line: 997, column: 7, scope: !9069)
!9105 = !DILocation(line: 998, column: 16, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !654, line: 997, column: 23)
!9107 = distinct !DILexicalBlock(scope: !9069, file: !654, line: 997, column: 7)
!9108 = !DILocation(line: 999, column: 3, scope: !9106)
!9109 = !DILocation(line: 1002, column: 2, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9061, file: !654, line: 1002, column: 2)
!9111 = !DILocation(line: 1003, column: 13, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !654, line: 1003, column: 7)
!9113 = distinct !DILexicalBlock(scope: !9114, file: !654, line: 1002, column: 85)
!9114 = distinct !DILexicalBlock(scope: !9110, file: !654, line: 1002, column: 2)
!9115 = !DILocation(line: 1003, column: 20, scope: !9112)
!9116 = !DILocation(line: 1003, column: 46, scope: !9112)
!9117 = !DILocation(line: 1003, column: 31, scope: !9112)
!9118 = !DILocation(line: 1003, column: 72, scope: !9112)
!9119 = !DILocation(line: 1003, column: 57, scope: !9112)
!9120 = !DILocation(line: 1004, column: 20, scope: !9112)
!9121 = !DILocation(line: 1003, column: 83, scope: !9112)
!9122 = !DILocation(line: 1003, column: 7, scope: !9113)
!9123 = !DILocation(line: 1005, column: 41, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9112, file: !654, line: 1004, column: 31)
!9125 = !DILocation(line: 1005, column: 64, scope: !9124)
!9126 = !DILocation(line: 1005, column: 4, scope: !9124)
!9127 = !DILocation(line: 1006, column: 16, scope: !9124)
!9128 = !DILocation(line: 1007, column: 3, scope: !9124)
!9129 = !DILocation(line: 1002, column: 77, scope: !9114)
!9130 = !DILocation(line: 1002, column: 48, scope: !9114)
!9131 = distinct !{!9131, !9109, !9132}
!9132 = !DILocation(line: 1008, column: 2, scope: !9110)
!9133 = !DILocation(line: 1009, column: 1, scope: !9061)
!9134 = distinct !DISubprogram(name: "ztest_run_all", scope: !654, file: !654, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !9135)
!9135 = !{!9136}
!9136 = !DILocalVariable(name: "state", arg: 1, scope: !9134, file: !654, line: 1011, type: !13)
!9137 = !DILocation(line: 0, scope: !9134)
!9138 = !DILocation(line: 1011, column: 51, scope: !9134)
!9139 = !DILocation(line: 1011, column: 41, scope: !9134)
!9140 = !DILocation(line: 1011, column: 67, scope: !9134)
!9141 = distinct !DISubprogram(name: "test_main", scope: !654, file: !654, line: 1013, type: !3055, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!9142 = !DILocation(line: 1015, column: 2, scope: !9141)
!9143 = !DILocation(line: 1017, column: 2, scope: !9141)
!9144 = !DILocation(line: 1018, column: 1, scope: !9141)
!9145 = distinct !DISubprogram(name: "main", scope: !654, file: !654, line: 1030, type: !3055, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!9146 = !DILocation(line: 1046, column: 2, scope: !9145)
!9147 = !DILocation(line: 1047, column: 2, scope: !9145)
!9148 = !DILocation(line: 1071, column: 1, scope: !9145)
!9149 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !820, file: !820, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9150)
!9150 = !{!9151}
!9151 = !DILocalVariable(name: "state", arg: 1, scope: !9149, file: !820, line: 30, type: !13)
!9152 = !DILocation(line: 0, scope: !9149)
!9153 = !DILocation(line: 32, column: 2, scope: !9149)
!9154 = !DILocation(line: 33, column: 1, scope: !9149)
!9155 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !820, file: !820, line: 45, type: !827, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9156)
!9156 = !{!9157, !9158, !9159}
!9157 = !DILocalVariable(name: "state", arg: 1, scope: !9155, file: !820, line: 45, type: !13)
!9158 = !DILocalVariable(name: "suite", arg: 2, scope: !9155, file: !820, line: 45, type: !829)
!9159 = !DILocalVariable(name: "run_suite", scope: !9155, file: !820, line: 47, type: !145)
!9160 = !DILocation(line: 0, scope: !9155)
!9161 = !DILocation(line: 49, column: 13, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9155, file: !820, line: 49, column: 6)
!9163 = !DILocation(line: 49, column: 23, scope: !9162)
!9164 = !DILocation(line: 49, column: 6, scope: !9155)
!9165 = !DILocation(line: 50, column: 15, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9162, file: !820, line: 49, column: 32)
!9167 = !DILocation(line: 51, column: 2, scope: !9166)
!9168 = !DILocation(line: 53, column: 2, scope: !9155)
!9169 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !820, file: !820, line: 65, type: !848, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9170)
!9170 = !{!9171, !9172}
!9171 = !DILocalVariable(name: "suite", arg: 1, scope: !9169, file: !820, line: 65, type: !118)
!9172 = !DILocalVariable(name: "test", arg: 2, scope: !9169, file: !820, line: 65, type: !118)
!9173 = !DILocation(line: 0, scope: !9169)
!9174 = !DILocation(line: 67, column: 2, scope: !9169)
!9175 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9176, file: !9176, line: 24, type: !8864, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9177)
!9176 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!9177 = !{!9178}
!9178 = !DILocalVariable(name: "state", arg: 1, scope: !9175, file: !9176, line: 24, type: !13)
!9179 = !DILocation(line: 0, scope: !9175)
!9180 = !DILocation(line: 32, column: 2, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 32, column: 2)
!9182 = !{i64 2152344095}
!9183 = !DILocation(line: 33, column: 9, scope: !9175)
!9184 = !DILocation(line: 33, column: 2, scope: !9175)
!9185 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !820, file: !820, line: 20, type: !9186, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9188)
!9186 = !DISubroutineType(types: !9187)
!9187 = !{!118, !118}
!9188 = !{!9189}
!9189 = !DILocalVariable(name: "file", arg: 1, scope: !9185, file: !820, line: 20, type: !118)
!9190 = !DILocation(line: 0, scope: !9185)
!9191 = !DILocation(line: 22, column: 2, scope: !9185)
!9192 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !924, file: !924, line: 368, type: !977, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9193)
!9193 = !{!9194}
!9194 = !DILocalVariable(name: "dev", arg: 1, scope: !9192, file: !924, line: 368, type: !953)
!9195 = !DILocation(line: 0, scope: !9192)
!9196 = !DILocation(line: 370, column: 2, scope: !9192)
!9197 = !DILocation(line: 371, column: 1, scope: !9192)
!9198 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !924, file: !924, line: 243, type: !9199, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9201)
!9199 = !DISubroutineType(types: !9200)
!9200 = !{null, !107, !107, !953}
!9201 = !{!9202, !9203, !9204, !9205, !9207}
!9202 = !DILocalVariable(name: "min", arg: 1, scope: !9198, file: !924, line: 243, type: !107)
!9203 = !DILocalVariable(name: "max", arg: 2, scope: !9198, file: !924, line: 243, type: !107)
!9204 = !DILocalVariable(name: "dev", arg: 3, scope: !9198, file: !924, line: 243, type: !953)
!9205 = !DILocalVariable(name: "data", scope: !9198, file: !924, line: 245, type: !9206)
!9206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!9207 = !DILocalVariable(name: "line", scope: !9198, file: !924, line: 246, type: !107)
!9208 = !DILocation(line: 0, scope: !9198)
!9209 = !DILocation(line: 245, column: 38, scope: !9198)
!9210 = !DILocation(line: 249, column: 24, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !924, line: 249, column: 2)
!9212 = distinct !DILexicalBlock(scope: !9198, file: !924, line: 249, column: 2)
!9213 = !DILocation(line: 249, column: 2, scope: !9212)
!9214 = !DILocation(line: 251, column: 7, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !924, line: 251, column: 7)
!9216 = distinct !DILexicalBlock(scope: !9211, file: !924, line: 249, column: 39)
!9217 = !DILocation(line: 251, column: 7, scope: !9216)
!9218 = !DILocation(line: 253, column: 4, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9215, file: !924, line: 251, column: 36)
!9220 = !DILocation(line: 256, column: 24, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9219, file: !924, line: 256, column: 8)
!9222 = !DILocation(line: 256, column: 9, scope: !9221)
!9223 = !DILocation(line: 256, column: 8, scope: !9219)
!9224 = !DILocation(line: 260, column: 43, scope: !9219)
!9225 = !DILocation(line: 260, column: 4, scope: !9219)
!9226 = !DILocation(line: 261, column: 3, scope: !9219)
!9227 = !DILocation(line: 249, column: 35, scope: !9211)
!9228 = distinct !{!9228, !9213, !9229}
!9229 = !DILocation(line: 262, column: 2, scope: !9212)
!9230 = !DILocation(line: 263, column: 1, scope: !9198)
!9231 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !924, file: !924, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9232)
!9232 = !{!9233}
!9233 = !DILocalVariable(name: "line", arg: 1, scope: !9231, file: !924, line: 158, type: !107)
!9234 = !DILocation(line: 0, scope: !9231)
!9235 = !DILocation(line: 170, column: 38, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9237, file: !924, line: 160, column: 17)
!9237 = distinct !DILexicalBlock(scope: !9231, file: !924, line: 160, column: 6)
!9238 = !DILocation(line: 170, column: 10, scope: !9236)
!9239 = !DILocation(line: 176, column: 1, scope: !9231)
!9240 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !924, file: !924, line: 183, type: !9241, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9243)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{null, !107}
!9243 = !{!9244}
!9244 = !DILocalVariable(name: "line", arg: 1, scope: !9240, file: !924, line: 183, type: !107)
!9245 = !DILocation(line: 0, scope: !9240)
!9246 = !DILocation(line: 195, column: 28, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9248, file: !924, line: 185, column: 17)
!9248 = distinct !DILexicalBlock(scope: !9240, file: !924, line: 185, column: 6)
!9249 = !DILocation(line: 195, column: 3, scope: !9247)
!9250 = !DILocation(line: 200, column: 1, scope: !9240)
!9251 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9252, file: !9252, line: 971, type: !5908, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9253)
!9252 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9253 = !{!9254}
!9254 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9251, file: !9252, line: 971, type: !152)
!9255 = !DILocation(line: 0, scope: !9251)
!9256 = !DILocation(line: 973, column: 3, scope: !9251)
!9257 = !DILocation(line: 974, column: 1, scope: !9251)
!9258 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9252, file: !9252, line: 891, type: !7466, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9259)
!9259 = !{!9260}
!9260 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9258, file: !9252, line: 891, type: !152)
!9261 = !DILocation(line: 0, scope: !9258)
!9262 = !DILocation(line: 893, column: 11, scope: !9258)
!9263 = !DILocation(line: 893, column: 40, scope: !9258)
!9264 = !DILocation(line: 893, column: 3, scope: !9258)
!9265 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !924, file: !924, line: 304, type: !977, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9266)
!9266 = !{!9267}
!9267 = !DILocalVariable(name: "dev", arg: 1, scope: !9265, file: !924, line: 304, type: !953)
!9268 = !DILocation(line: 0, scope: !9265)
!9269 = !DILocation(line: 306, column: 2, scope: !9265)
!9270 = !DILocation(line: 307, column: 1, scope: !9265)
!9271 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !924, file: !924, line: 299, type: !977, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9272)
!9272 = !{!9273}
!9273 = !DILocalVariable(name: "dev", arg: 1, scope: !9271, file: !924, line: 299, type: !953)
!9274 = !DILocation(line: 0, scope: !9271)
!9275 = !DILocation(line: 301, column: 2, scope: !9271)
!9276 = !DILocation(line: 302, column: 1, scope: !9271)
!9277 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !924, file: !924, line: 294, type: !977, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9278)
!9278 = !{!9279}
!9279 = !DILocalVariable(name: "dev", arg: 1, scope: !9277, file: !924, line: 294, type: !953)
!9280 = !DILocation(line: 0, scope: !9277)
!9281 = !DILocation(line: 296, column: 2, scope: !9277)
!9282 = !DILocation(line: 297, column: 1, scope: !9277)
!9283 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !924, file: !924, line: 289, type: !977, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9284)
!9284 = !{!9285}
!9285 = !DILocalVariable(name: "dev", arg: 1, scope: !9283, file: !924, line: 289, type: !953)
!9286 = !DILocation(line: 0, scope: !9283)
!9287 = !DILocation(line: 291, column: 2, scope: !9283)
!9288 = !DILocation(line: 292, column: 1, scope: !9283)
!9289 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !924, file: !924, line: 373, type: !977, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9290)
!9290 = !{!9291}
!9291 = !DILocalVariable(name: "dev", arg: 1, scope: !9289, file: !924, line: 373, type: !953)
!9292 = !DILocation(line: 0, scope: !9289)
!9293 = !DILocation(line: 375, column: 2, scope: !9289)
!9294 = !DILocation(line: 376, column: 1, scope: !9289)
!9295 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !924, file: !924, line: 284, type: !977, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9296)
!9296 = !{!9297}
!9297 = !DILocalVariable(name: "dev", arg: 1, scope: !9295, file: !924, line: 284, type: !953)
!9298 = !DILocation(line: 0, scope: !9295)
!9299 = !DILocation(line: 286, column: 2, scope: !9295)
!9300 = !DILocation(line: 287, column: 1, scope: !9295)
!9301 = distinct !DISubprogram(name: "stm32_exti_init", scope: !924, file: !924, line: 416, type: !951, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9302)
!9302 = !{!9303}
!9303 = !DILocalVariable(name: "dev", arg: 1, scope: !9301, file: !924, line: 416, type: !953)
!9304 = !DILocation(line: 0, scope: !9301)
!9305 = !DILocation(line: 418, column: 2, scope: !9301)
!9306 = !DILocation(line: 420, column: 2, scope: !9301)
!9307 = !DILocation(line: 0, scope: !976)
!9308 = !DILocation(line: 493, column: 2, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !976, file: !924, line: 493, column: 2)
!9310 = !DILocation(line: 497, column: 2, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !976, file: !924, line: 497, column: 2)
!9312 = !DILocation(line: 507, column: 2, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !976, file: !924, line: 507, column: 2)
!9314 = !DILocation(line: 512, column: 2, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !976, file: !924, line: 512, column: 2)
!9316 = !DILocation(line: 516, column: 2, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !976, file: !924, line: 516, column: 2)
!9318 = !DILocation(line: 523, column: 2, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !976, file: !924, line: 523, column: 2)
!9320 = !DILocation(line: 527, column: 2, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !976, file: !924, line: 527, column: 2)
!9322 = !DILocation(line: 607, column: 1, scope: !976)
!9323 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !924, file: !924, line: 112, type: !9241, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9324)
!9324 = !{!9325, !9326}
!9325 = !DILocalVariable(name: "line", arg: 1, scope: !9323, file: !924, line: 112, type: !107)
!9326 = !DILocalVariable(name: "irqnum", scope: !9323, file: !924, line: 114, type: !107)
!9327 = !DILocation(line: 0, scope: !9323)
!9328 = !DILocation(line: 121, column: 11, scope: !9323)
!9329 = !DILocation(line: 130, column: 26, scope: !9323)
!9330 = !DILocation(line: 130, column: 2, scope: !9323)
!9331 = !DILocation(line: 134, column: 2, scope: !9323)
!9332 = !DILocation(line: 135, column: 1, scope: !9323)
!9333 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9252, file: !9252, line: 274, type: !5908, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9334)
!9334 = !{!9335}
!9335 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9333, file: !9252, line: 274, type: !152)
!9336 = !DILocation(line: 0, scope: !9333)
!9337 = !DILocation(line: 276, column: 3, scope: !9333)
!9338 = !DILocation(line: 277, column: 1, scope: !9333)
!9339 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !924, file: !924, line: 137, type: !9241, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9340)
!9340 = !{!9341}
!9341 = !DILocalVariable(name: "line", arg: 1, scope: !9339, file: !924, line: 137, type: !107)
!9342 = !DILocation(line: 0, scope: !9339)
!9343 = !DILocation(line: 141, column: 11, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9339, file: !924, line: 141, column: 6)
!9345 = !DILocation(line: 141, column: 6, scope: !9339)
!9346 = !DILocation(line: 145, column: 28, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9344, file: !924, line: 141, column: 17)
!9348 = !DILocation(line: 145, column: 3, scope: !9347)
!9349 = !DILocation(line: 147, column: 2, scope: !9347)
!9350 = !DILocation(line: 151, column: 1, scope: !9339)
!9351 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9252, file: !9252, line: 322, type: !5908, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9352)
!9352 = !{!9353}
!9353 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9351, file: !9252, line: 322, type: !152)
!9354 = !DILocation(line: 0, scope: !9351)
!9355 = !DILocation(line: 324, column: 3, scope: !9351)
!9356 = !DILocation(line: 325, column: 1, scope: !9351)
!9357 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !924, file: !924, line: 202, type: !9358, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9360)
!9358 = !DISubroutineType(types: !9359)
!9359 = !{null, !107, !107}
!9360 = !{!9361, !9362}
!9361 = !DILocalVariable(name: "line", arg: 1, scope: !9357, file: !924, line: 202, type: !107)
!9362 = !DILocalVariable(name: "trigger", arg: 2, scope: !9357, file: !924, line: 202, type: !107)
!9363 = !DILocation(line: 0, scope: !9357)
!9364 = !DILocation(line: 211, column: 2, scope: !9357)
!9365 = !DILocation(line: 213, column: 36, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9357, file: !924, line: 211, column: 19)
!9367 = !DILocation(line: 213, column: 3, scope: !9366)
!9368 = !DILocation(line: 214, column: 3, scope: !9366)
!9369 = !DILocation(line: 215, column: 3, scope: !9366)
!9370 = !DILocation(line: 217, column: 35, scope: !9366)
!9371 = !DILocation(line: 217, column: 3, scope: !9366)
!9372 = !DILocation(line: 218, column: 3, scope: !9366)
!9373 = !DILocation(line: 219, column: 3, scope: !9366)
!9374 = !DILocation(line: 221, column: 36, scope: !9366)
!9375 = !DILocation(line: 221, column: 3, scope: !9366)
!9376 = !DILocation(line: 222, column: 3, scope: !9366)
!9377 = !DILocation(line: 223, column: 3, scope: !9366)
!9378 = !DILocation(line: 225, column: 35, scope: !9366)
!9379 = !DILocation(line: 225, column: 3, scope: !9366)
!9380 = !DILocation(line: 226, column: 3, scope: !9366)
!9381 = !DILocation(line: 227, column: 3, scope: !9366)
!9382 = !DILocation(line: 232, column: 1, scope: !9357)
!9383 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9252, file: !9252, line: 618, type: !5908, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9384)
!9384 = !{!9385}
!9385 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9383, file: !9252, line: 618, type: !152)
!9386 = !DILocation(line: 0, scope: !9383)
!9387 = !DILocation(line: 620, column: 3, scope: !9383)
!9388 = !DILocation(line: 622, column: 1, scope: !9383)
!9389 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9252, file: !9252, line: 754, type: !5908, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9390)
!9390 = !{!9391}
!9391 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9389, file: !9252, line: 754, type: !152)
!9392 = !DILocation(line: 0, scope: !9389)
!9393 = !DILocation(line: 756, column: 3, scope: !9389)
!9394 = !DILocation(line: 757, column: 1, scope: !9389)
!9395 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9252, file: !9252, line: 572, type: !5908, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9396)
!9396 = !{!9397}
!9397 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9395, file: !9252, line: 572, type: !152)
!9398 = !DILocation(line: 0, scope: !9395)
!9399 = !DILocation(line: 574, column: 3, scope: !9395)
!9400 = !DILocation(line: 576, column: 1, scope: !9395)
!9401 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9252, file: !9252, line: 710, type: !5908, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9402)
!9402 = !{!9403}
!9403 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9401, file: !9252, line: 710, type: !152)
!9404 = !DILocation(line: 0, scope: !9401)
!9405 = !DILocation(line: 712, column: 3, scope: !9401)
!9406 = !DILocation(line: 713, column: 1, scope: !9401)
!9407 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !924, file: !924, line: 433, type: !9408, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9410)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{!107, !107, !964, !106}
!9410 = !{!9411, !9412, !9413, !9414, !9416}
!9411 = !DILocalVariable(name: "line", arg: 1, scope: !9407, file: !924, line: 433, type: !107)
!9412 = !DILocalVariable(name: "cb", arg: 2, scope: !9407, file: !924, line: 433, type: !964)
!9413 = !DILocalVariable(name: "arg", arg: 3, scope: !9407, file: !924, line: 433, type: !106)
!9414 = !DILocalVariable(name: "dev", scope: !9407, file: !924, line: 435, type: !9415)
!9415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!9416 = !DILocalVariable(name: "data", scope: !9407, file: !924, line: 436, type: !9206)
!9417 = !DILocation(line: 0, scope: !9407)
!9418 = !DILocation(line: 438, column: 21, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9407, file: !924, line: 438, column: 6)
!9420 = !DILocation(line: 438, column: 6, scope: !9419)
!9421 = !DILocation(line: 438, column: 6, scope: !9407)
!9422 = !DILocation(line: 442, column: 20, scope: !9407)
!9423 = !DILocation(line: 443, column: 17, scope: !9407)
!9424 = !DILocation(line: 443, column: 22, scope: !9407)
!9425 = !DILocation(line: 445, column: 2, scope: !9407)
!9426 = !DILocation(line: 446, column: 1, scope: !9407)
!9427 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !924, file: !924, line: 448, type: !9241, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9428)
!9428 = !{!9429, !9430, !9431}
!9429 = !DILocalVariable(name: "line", arg: 1, scope: !9427, file: !924, line: 448, type: !107)
!9430 = !DILocalVariable(name: "dev", scope: !9427, file: !924, line: 450, type: !9415)
!9431 = !DILocalVariable(name: "data", scope: !9427, file: !924, line: 451, type: !9206)
!9432 = !DILocation(line: 0, scope: !9427)
!9433 = !DILocation(line: 453, column: 17, scope: !9427)
!9434 = !DILocation(line: 453, column: 20, scope: !9427)
!9435 = !DILocation(line: 454, column: 17, scope: !9427)
!9436 = !DILocation(line: 454, column: 22, scope: !9427)
!9437 = !DILocation(line: 455, column: 1, scope: !9427)
!9438 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1079, file: !1079, line: 183, type: !1115, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9439)
!9439 = !{!9440, !9441, !9442, !9443, !9444}
!9440 = !DILocalVariable(name: "dev", arg: 1, scope: !9438, file: !1079, line: 183, type: !1106)
!9441 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9438, file: !1079, line: 184, type: !1117)
!9442 = !DILocalVariable(name: "pclken", scope: !9438, file: !1079, line: 186, type: !1069)
!9443 = !DILocalVariable(name: "reg", scope: !9438, file: !1079, line: 187, type: !2932)
!9444 = !DILocalVariable(name: "reg_val", scope: !9438, file: !1079, line: 188, type: !152)
!9445 = !DILocation(line: 0, scope: !9438)
!9446 = !DILocation(line: 192, column: 6, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9438, file: !1079, line: 192, column: 6)
!9448 = !DILocation(line: 192, column: 6, scope: !9438)
!9449 = !DILocation(line: 197, column: 52, scope: !9438)
!9450 = !DILocation(line: 197, column: 8, scope: !9438)
!9451 = !DILocation(line: 198, column: 12, scope: !9438)
!9452 = !DILocation(line: 199, column: 21, scope: !9438)
!9453 = !DILocation(line: 199, column: 10, scope: !9438)
!9454 = !DILocation(line: 200, column: 7, scope: !9438)
!9455 = !DILocation(line: 202, column: 2, scope: !9438)
!9456 = !DILocation(line: 203, column: 1, scope: !9438)
!9457 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1079, file: !1079, line: 205, type: !1115, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9458)
!9458 = !{!9459, !9460, !9461, !9462, !9463}
!9459 = !DILocalVariable(name: "dev", arg: 1, scope: !9457, file: !1079, line: 205, type: !1106)
!9460 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9457, file: !1079, line: 206, type: !1117)
!9461 = !DILocalVariable(name: "pclken", scope: !9457, file: !1079, line: 208, type: !1069)
!9462 = !DILocalVariable(name: "reg", scope: !9457, file: !1079, line: 209, type: !2932)
!9463 = !DILocalVariable(name: "reg_val", scope: !9457, file: !1079, line: 210, type: !152)
!9464 = !DILocation(line: 0, scope: !9457)
!9465 = !DILocation(line: 214, column: 6, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9457, file: !1079, line: 214, column: 6)
!9467 = !DILocation(line: 214, column: 6, scope: !9457)
!9468 = !DILocation(line: 219, column: 52, scope: !9457)
!9469 = !DILocation(line: 219, column: 8, scope: !9457)
!9470 = !DILocation(line: 220, column: 12, scope: !9457)
!9471 = !DILocation(line: 221, column: 22, scope: !9457)
!9472 = !DILocation(line: 221, column: 13, scope: !9457)
!9473 = !DILocation(line: 221, column: 10, scope: !9457)
!9474 = !DILocation(line: 222, column: 7, scope: !9457)
!9475 = !DILocation(line: 224, column: 2, scope: !9457)
!9476 = !DILocation(line: 225, column: 1, scope: !9457)
!9477 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1079, file: !1079, line: 262, type: !1131, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9478)
!9478 = !{!9479, !9480, !9481, !9482, !9483, !9484, !9485}
!9479 = !DILocalVariable(name: "clock", arg: 1, scope: !9477, file: !1079, line: 262, type: !1106)
!9480 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9477, file: !1079, line: 263, type: !1117)
!9481 = !DILocalVariable(name: "rate", arg: 3, scope: !9477, file: !1079, line: 264, type: !1075)
!9482 = !DILocalVariable(name: "pclken", scope: !9477, file: !1079, line: 266, type: !1069)
!9483 = !DILocalVariable(name: "ahb_clock", scope: !9477, file: !1079, line: 273, type: !152)
!9484 = !DILocalVariable(name: "apb1_clock", scope: !9477, file: !1079, line: 274, type: !152)
!9485 = !DILocalVariable(name: "apb2_clock", scope: !9477, file: !1079, line: 276, type: !152)
!9486 = !DILocation(line: 0, scope: !9477)
!9487 = !DILocation(line: 273, column: 23, scope: !9477)
!9488 = !DILocation(line: 299, column: 18, scope: !9477)
!9489 = !DILocation(line: 299, column: 2, scope: !9477)
!9490 = !DILocation(line: 374, column: 3, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9477, file: !1079, line: 299, column: 23)
!9492 = !DILocation(line: 379, column: 3, scope: !9491)
!9493 = !DILocation(line: 389, column: 3, scope: !9491)
!9494 = !DILocation(line: 0, scope: !9491)
!9495 = !DILocation(line: 396, column: 1, scope: !9477)
!9496 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1079, file: !1079, line: 227, type: !1147, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9497)
!9497 = !{!9498, !9499, !9500, !9501, !9502, !9503, !9504, !9505}
!9498 = !DILocalVariable(name: "dev", arg: 1, scope: !9496, file: !1079, line: 227, type: !1106)
!9499 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9496, file: !1079, line: 228, type: !1117)
!9500 = !DILocalVariable(name: "data", arg: 3, scope: !9496, file: !1079, line: 229, type: !106)
!9501 = !DILocalVariable(name: "pclken", scope: !9496, file: !1079, line: 233, type: !1069)
!9502 = !DILocalVariable(name: "reg", scope: !9496, file: !1079, line: 234, type: !2932)
!9503 = !DILocalVariable(name: "reg_val", scope: !9496, file: !1079, line: 235, type: !152)
!9504 = !DILocalVariable(name: "dt_val", scope: !9496, file: !1079, line: 235, type: !152)
!9505 = !DILocalVariable(name: "err", scope: !9496, file: !1079, line: 236, type: !107)
!9506 = !DILocation(line: 0, scope: !9496)
!9507 = !DILocation(line: 241, column: 30, scope: !9496)
!9508 = !DILocation(line: 241, column: 8, scope: !9496)
!9509 = !DILocation(line: 242, column: 10, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9496, file: !1079, line: 242, column: 6)
!9511 = !DILocation(line: 242, column: 6, scope: !9496)
!9512 = !DILocation(line: 247, column: 11, scope: !9496)
!9513 = !DILocation(line: 248, column: 6, scope: !9496)
!9514 = !DILocation(line: 247, column: 44, scope: !9496)
!9515 = !DILocation(line: 250, column: 6, scope: !9496)
!9516 = !DILocation(line: 249, column: 52, scope: !9496)
!9517 = !DILocation(line: 249, column: 8, scope: !9496)
!9518 = !DILocation(line: 251, column: 12, scope: !9496)
!9519 = !DILocation(line: 252, column: 10, scope: !9496)
!9520 = !DILocation(line: 253, column: 7, scope: !9496)
!9521 = !DILocation(line: 255, column: 2, scope: !9496)
!9522 = !DILocation(line: 260, column: 1, scope: !9496)
!9523 = distinct !DISubprogram(name: "enabled_clock", scope: !1079, file: !1079, line: 100, type: !9524, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9526)
!9524 = !DISubroutineType(types: !9525)
!9525 = !{!107, !152}
!9526 = !{!9527, !9528}
!9527 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9523, file: !1079, line: 100, type: !152)
!9528 = !DILocalVariable(name: "r", scope: !9523, file: !1079, line: 102, type: !107)
!9529 = !DILocation(line: 0, scope: !9523)
!9530 = !DILocation(line: 104, column: 2, scope: !9523)
!9531 = !DILocation(line: 180, column: 2, scope: !9523)
!9532 = !DILocation(line: 181, column: 1, scope: !9523)
!9533 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1079, file: !1079, line: 641, type: !1104, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9534)
!9534 = !{!9535, !9536, !9537}
!9535 = !DILocalVariable(name: "dev", arg: 1, scope: !9533, file: !1079, line: 641, type: !1106)
!9536 = !DILocalVariable(name: "old_flash_freq", scope: !9533, file: !1079, line: 664, type: !152)
!9537 = !DILocalVariable(name: "new_flash_freq", scope: !9533, file: !1079, line: 665, type: !152)
!9538 = !DILocation(line: 0, scope: !9533)
!9539 = !DILocation(line: 646, column: 2, scope: !9533)
!9540 = !DILocation(line: 667, column: 19, scope: !9533)
!9541 = !DILocation(line: 674, column: 21, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9533, file: !1079, line: 674, column: 6)
!9543 = !DILocation(line: 674, column: 6, scope: !9533)
!9544 = !DILocation(line: 675, column: 3, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9542, file: !1079, line: 674, column: 59)
!9546 = !DILocation(line: 676, column: 2, scope: !9545)
!9547 = !DILocation(line: 680, column: 2, scope: !9533)
!9548 = !DILocation(line: 683, column: 2, scope: !9533)
!9549 = !DILocation(line: 690, column: 3, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !1079, line: 689, column: 9)
!9551 = distinct !DILexicalBlock(scope: !9533, file: !1079, line: 685, column: 6)
!9552 = !DILocation(line: 695, column: 2, scope: !9533)
!9553 = !DILocation(line: 696, column: 2, scope: !9533)
!9554 = !DILocation(line: 696, column: 9, scope: !9533)
!9555 = !DILocation(line: 696, column: 34, scope: !9533)
!9556 = distinct !{!9556, !9553, !9557}
!9557 = !DILocation(line: 697, column: 2, scope: !9533)
!9558 = !DILocation(line: 720, column: 21, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9533, file: !1079, line: 720, column: 6)
!9560 = !DILocation(line: 720, column: 6, scope: !9533)
!9561 = !DILocation(line: 721, column: 3, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9559, file: !1079, line: 720, column: 60)
!9563 = !DILocation(line: 722, column: 2, scope: !9562)
!9564 = !DILocation(line: 725, column: 18, scope: !9533)
!9565 = !DILocation(line: 728, column: 2, scope: !9533)
!9566 = !DILocation(line: 730, column: 2, scope: !9533)
!9567 = !DILocation(line: 745, column: 2, scope: !9533)
!9568 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9569, file: !9569, line: 995, type: !7225, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9569 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9570 = !DILocation(line: 997, column: 21, scope: !9568)
!9571 = !DILocation(line: 997, column: 3, scope: !9568)
!9572 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1079, file: !1079, line: 507, type: !3055, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9573 = !DILocation(line: 534, column: 7, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !1079, line: 534, column: 7)
!9575 = distinct !DILexicalBlock(scope: !9576, file: !1079, line: 532, column: 37)
!9576 = distinct !DILexicalBlock(scope: !9572, file: !1079, line: 532, column: 6)
!9577 = !DILocation(line: 534, column: 28, scope: !9574)
!9578 = !DILocation(line: 534, column: 7, scope: !9575)
!9579 = !DILocation(line: 536, column: 4, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9574, file: !1079, line: 534, column: 34)
!9581 = !DILocation(line: 537, column: 4, scope: !9580)
!9582 = !DILocation(line: 537, column: 11, scope: !9580)
!9583 = !DILocation(line: 537, column: 32, scope: !9580)
!9584 = distinct !{!9584, !9581, !9585}
!9585 = !DILocation(line: 539, column: 4, scope: !9580)
!9586 = !DILocation(line: 583, column: 3, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !1079, line: 577, column: 37)
!9588 = distinct !DILexicalBlock(scope: !9572, file: !1079, line: 577, column: 6)
!9589 = !DILocation(line: 584, column: 3, scope: !9587)
!9590 = !DILocation(line: 584, column: 10, scope: !9587)
!9591 = !DILocation(line: 584, column: 31, scope: !9587)
!9592 = distinct !{!9592, !9589, !9593}
!9593 = !DILocation(line: 585, column: 3, scope: !9587)
!9594 = !DILocation(line: 627, column: 1, scope: !9572)
!9595 = distinct !DISubprogram(name: "set_up_plls", scope: !1079, file: !1079, line: 448, type: !3055, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9596 = !DILocation(line: 460, column: 6, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9595, file: !1079, line: 460, column: 6)
!9598 = !DILocation(line: 460, column: 31, scope: !9597)
!9599 = !DILocation(line: 460, column: 6, scope: !9595)
!9600 = !DILocation(line: 461, column: 3, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9597, file: !1079, line: 460, column: 67)
!9602 = !DILocation(line: 462, column: 3, scope: !9601)
!9603 = !DILocation(line: 463, column: 2, scope: !9601)
!9604 = !DILocation(line: 464, column: 2, scope: !9595)
!9605 = !DILocation(line: 496, column: 2, scope: !9595)
!9606 = !DILocation(line: 499, column: 2, scope: !9595)
!9607 = !DILocation(line: 500, column: 2, scope: !9595)
!9608 = !DILocation(line: 500, column: 9, scope: !9595)
!9609 = !DILocation(line: 500, column: 30, scope: !9595)
!9610 = distinct !{!9610, !9607, !9611}
!9611 = !DILocation(line: 502, column: 2, scope: !9595)
!9612 = !DILocation(line: 505, column: 1, scope: !9595)
!9613 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9569, file: !9569, line: 944, type: !5908, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9614)
!9614 = !{!9615}
!9615 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9613, file: !9569, line: 944, type: !152)
!9616 = !DILocation(line: 0, scope: !9613)
!9617 = !DILocation(line: 946, column: 3, scope: !9613)
!9618 = !DILocation(line: 947, column: 1, scope: !9613)
!9619 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9569, file: !9569, line: 910, type: !5908, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9620)
!9620 = !{!9621}
!9621 = !DILocalVariable(name: "Source", arg: 1, scope: !9619, file: !9569, line: 910, type: !152)
!9622 = !DILocation(line: 0, scope: !9619)
!9623 = !DILocation(line: 912, column: 3, scope: !9619)
!9624 = !DILocation(line: 913, column: 1, scope: !9619)
!9625 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9569, file: !9569, line: 924, type: !7225, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9626 = !DILocation(line: 926, column: 21, scope: !9625)
!9627 = !DILocation(line: 926, column: 3, scope: !9625)
!9628 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9569, file: !9569, line: 960, type: !5908, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9629)
!9629 = !{!9630}
!9630 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9628, file: !9569, line: 960, type: !152)
!9631 = !DILocation(line: 0, scope: !9628)
!9632 = !DILocation(line: 962, column: 3, scope: !9628)
!9633 = !DILocation(line: 963, column: 1, scope: !9628)
!9634 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9569, file: !9569, line: 976, type: !5908, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9635)
!9635 = !{!9636}
!9636 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9634, file: !9569, line: 976, type: !152)
!9637 = !DILocation(line: 0, scope: !9634)
!9638 = !DILocation(line: 978, column: 3, scope: !9634)
!9639 = !DILocation(line: 979, column: 1, scope: !9634)
!9640 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1079, file: !1079, line: 409, type: !3055, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9641 = !DILocation(line: 412, column: 6, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9640, file: !1079, line: 412, column: 6)
!9643 = !DILocation(line: 412, column: 27, scope: !9642)
!9644 = !DILocation(line: 412, column: 6, scope: !9640)
!9645 = !DILocation(line: 414, column: 3, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9642, file: !1079, line: 412, column: 33)
!9647 = !DILocation(line: 415, column: 3, scope: !9646)
!9648 = !DILocation(line: 415, column: 10, scope: !9646)
!9649 = !DILocation(line: 415, column: 31, scope: !9646)
!9650 = distinct !{!9650, !9647, !9651}
!9651 = !DILocation(line: 417, column: 3, scope: !9646)
!9652 = !DILocation(line: 421, column: 2, scope: !9640)
!9653 = !DILocation(line: 422, column: 2, scope: !9640)
!9654 = !DILocation(line: 422, column: 9, scope: !9640)
!9655 = !DILocation(line: 422, column: 34, scope: !9640)
!9656 = distinct !{!9656, !9653, !9657}
!9657 = !DILocation(line: 423, column: 2, scope: !9640)
!9658 = !DILocation(line: 424, column: 1, scope: !9640)
!9659 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9569, file: !9569, line: 1180, type: !3055, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9660 = !DILocation(line: 1182, column: 3, scope: !9659)
!9661 = !DILocation(line: 1183, column: 1, scope: !9659)
!9662 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9569, file: !9569, line: 1169, type: !3055, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9663 = !DILocation(line: 1171, column: 3, scope: !9662)
!9664 = !DILocation(line: 1172, column: 1, scope: !9662)
!9665 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9569, file: !9569, line: 1190, type: !7225, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9666 = !DILocation(line: 1192, column: 12, scope: !9665)
!9667 = !DILocation(line: 1192, column: 11, scope: !9665)
!9668 = !DILocation(line: 1192, column: 3, scope: !9665)
!9669 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9569, file: !9569, line: 612, type: !7225, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9670 = !DILocation(line: 614, column: 12, scope: !9669)
!9671 = !DILocation(line: 614, column: 11, scope: !9669)
!9672 = !DILocation(line: 614, column: 3, scope: !9669)
!9673 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9569, file: !9569, line: 592, type: !3055, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9674 = !DILocation(line: 594, column: 3, scope: !9673)
!9675 = !DILocation(line: 595, column: 1, scope: !9673)
!9676 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9569, file: !9569, line: 760, type: !3055, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9677 = !DILocation(line: 762, column: 3, scope: !9676)
!9678 = !DILocation(line: 763, column: 1, scope: !9676)
!9679 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9569, file: !9569, line: 780, type: !7225, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9680 = !DILocation(line: 782, column: 12, scope: !9679)
!9681 = !DILocation(line: 782, column: 11, scope: !9679)
!9682 = !DILocation(line: 782, column: 3, scope: !9679)
!9683 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9684, file: !9684, line: 48, type: !7225, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !2175)
!9684 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9685 = !DILocation(line: 51, column: 3, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9687, file: !9684, line: 50, column: 37)
!9687 = distinct !DILexicalBlock(scope: !9683, file: !9684, line: 50, column: 6)
!9688 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9684, file: !9684, line: 64, type: !3055, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !2175)
!9689 = !DILocation(line: 66, column: 2, scope: !9688)
!9690 = !DILocation(line: 69, column: 1, scope: !9688)
!9691 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9569, file: !9569, line: 1219, type: !9692, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !9694)
!9692 = !DISubroutineType(types: !9693)
!9693 = !{null, !152, !152, !152}
!9694 = !{!9695, !9696, !9697}
!9695 = !DILocalVariable(name: "Source", arg: 1, scope: !9691, file: !9569, line: 1219, type: !152)
!9696 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !9691, file: !9569, line: 1219, type: !152)
!9697 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !9691, file: !9569, line: 1219, type: !152)
!9698 = !DILocation(line: 0, scope: !9691)
!9699 = !DILocation(line: 1221, column: 3, scope: !9691)
!9700 = !DILocation(line: 1222, column: 1, scope: !9691)
!9701 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !9684, file: !9684, line: 75, type: !7225, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !2175)
!9702 = !DILocation(line: 77, column: 9, scope: !9701)
!9703 = !DILocation(line: 77, column: 2, scope: !9701)
!9704 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9684, file: !9684, line: 87, type: !3055, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !2175)
!9705 = !DILocation(line: 93, column: 2, scope: !9704)
!9706 = !DILocation(line: 95, column: 1, scope: !9704)
!9707 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !5907, file: !5907, line: 895, type: !5908, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !9708)
!9708 = !{!9709, !9710}
!9709 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9707, file: !5907, line: 895, type: !152)
!9710 = !DILocalVariable(name: "tmpreg", scope: !9707, file: !5907, line: 897, type: !227)
!9711 = !DILocation(line: 0, scope: !9707)
!9712 = !DILocation(line: 897, column: 3, scope: !9707)
!9713 = !DILocation(line: 897, column: 17, scope: !9707)
!9714 = !DILocation(line: 898, column: 3, scope: !9707)
!9715 = !DILocation(line: 900, column: 12, scope: !9707)
!9716 = !DILocation(line: 900, column: 10, scope: !9707)
!9717 = !DILocation(line: 901, column: 9, scope: !9707)
!9718 = !DILocation(line: 902, column: 1, scope: !9707)
!9719 = distinct !DISubprogram(name: "uart_console_init", scope: !1208, file: !1208, line: 588, type: !1185, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9720)
!9720 = !{!9721}
!9721 = !DILocalVariable(name: "arg", arg: 1, scope: !9719, file: !1208, line: 588, type: !1163)
!9722 = !DILocation(line: 0, scope: !9719)
!9723 = !DILocation(line: 593, column: 7, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9719, file: !1208, line: 593, column: 6)
!9725 = !DILocation(line: 593, column: 6, scope: !9719)
!9726 = !DILocation(line: 597, column: 2, scope: !9719)
!9727 = !DILocation(line: 599, column: 2, scope: !9719)
!9728 = !DILocation(line: 600, column: 1, scope: !9719)
!9729 = distinct !DISubprogram(name: "device_is_ready", scope: !8104, file: !8104, line: 47, type: !9730, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9732)
!9730 = !DISubroutineType(types: !9731)
!9731 = !{!145, !1163}
!9732 = !{!9733}
!9733 = !DILocalVariable(name: "dev", arg: 1, scope: !9729, file: !8104, line: 47, type: !1163)
!9734 = !DILocation(line: 0, scope: !9729)
!9735 = !DILocation(line: 55, column: 2, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9729, file: !8104, line: 55, column: 2)
!9737 = !{i64 2152425232}
!9738 = !DILocation(line: 56, column: 9, scope: !9729)
!9739 = !DILocation(line: 56, column: 2, scope: !9729)
!9740 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1208, file: !1208, line: 573, type: !3055, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !2175)
!9741 = !DILocation(line: 576, column: 2, scope: !9740)
!9742 = !DILocation(line: 579, column: 2, scope: !9740)
!9743 = !DILocation(line: 581, column: 1, scope: !9740)
!9744 = distinct !DISubprogram(name: "console_out", scope: !1208, file: !1208, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9745)
!9745 = !{!9746}
!9746 = !DILocalVariable(name: "c", arg: 1, scope: !9744, file: !1208, line: 77, type: !107)
!9747 = !DILocation(line: 0, scope: !9744)
!9748 = !DILocation(line: 89, column: 11, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9744, file: !1208, line: 89, column: 6)
!9750 = !DILocation(line: 89, column: 6, scope: !9744)
!9751 = !DILocation(line: 90, column: 3, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9749, file: !1208, line: 89, column: 17)
!9753 = !DILocation(line: 91, column: 2, scope: !9752)
!9754 = !DILocation(line: 92, column: 34, scope: !9744)
!9755 = !DILocation(line: 92, column: 2, scope: !9744)
!9756 = !DILocation(line: 94, column: 2, scope: !9744)
!9757 = distinct !DISubprogram(name: "uart_poll_out", scope: !9758, file: !9758, line: 95, type: !1181, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9759)
!9758 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/integration")
!9759 = !{!9760, !9761}
!9760 = !DILocalVariable(name: "dev", arg: 1, scope: !9757, file: !9758, line: 95, type: !1163)
!9761 = !DILocalVariable(name: "out_char", arg: 2, scope: !9757, file: !9758, line: 95, type: !196)
!9762 = !DILocation(line: 0, scope: !9757)
!9763 = !DILocation(line: 105, column: 2, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9757, file: !9758, line: 105, column: 2)
!9765 = !{i64 2152508623}
!9766 = !DILocation(line: 106, column: 2, scope: !9757)
!9767 = !DILocation(line: 107, column: 1, scope: !9757)
!9768 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1157, file: !1157, line: 574, type: !1181, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9769)
!9769 = !{!9770, !9771, !9772}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9768, file: !1157, line: 574, type: !1163)
!9771 = !DILocalVariable(name: "out_char", arg: 2, scope: !9768, file: !1157, line: 575, type: !196)
!9772 = !DILocalVariable(name: "api", scope: !9768, file: !1157, line: 577, type: !1154)
!9773 = !DILocation(line: 0, scope: !9768)
!9774 = !DILocation(line: 578, column: 40, scope: !9768)
!9775 = !DILocation(line: 580, column: 7, scope: !9768)
!9776 = !DILocation(line: 580, column: 2, scope: !9768)
!9777 = !DILocation(line: 581, column: 1, scope: !9768)
!9778 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !9730, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9779)
!9779 = !{!9780}
!9780 = !DILocalVariable(name: "dev", arg: 1, scope: !9778, file: !260, line: 730, type: !1163)
!9781 = !DILocation(line: 0, scope: !9778)
!9782 = !DILocation(line: 732, column: 9, scope: !9778)
!9783 = !DILocation(line: 732, column: 2, scope: !9778)
!9784 = distinct !DISubprogram(name: "uart_register_input", scope: !1208, file: !1208, line: 560, type: !9785, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9832)
!9785 = !DISubroutineType(types: !9786)
!9786 = !{null, !9787, !9787, !9829}
!9787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9788, size: 32)
!9788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !419, line: 2208, size: 160, elements: !9789)
!9789 = !{!9790}
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9788, file: !419, line: 2209, baseType: !9791, size: 160)
!9791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !419, line: 1709, size: 160, elements: !9792)
!9792 = !{!9793, !9806, !9810}
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9791, file: !419, line: 1710, baseType: !9794, size: 64)
!9794 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9795, line: 46, baseType: !9796)
!9795 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9795, line: 41, size: 64, elements: !9797)
!9797 = !{!9798, !9805}
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9796, file: !9795, line: 42, baseType: !9799, size: 32)
!9799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9800, size: 32)
!9800 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9795, line: 39, baseType: !9801)
!9801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9795, line: 35, size: 32, elements: !9802)
!9802 = !{!9803}
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9801, file: !9795, line: 36, baseType: !9804, size: 32)
!9804 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9795, line: 32, baseType: !152)
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9796, file: !9795, line: 43, baseType: !9799, size: 32, offset: 32)
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9791, file: !419, line: 1711, baseType: !9807, size: 32, offset: 64)
!9807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !9808)
!9808 = !{!9809}
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9807, file: !433, line: 52, baseType: !22, size: 32)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9791, file: !419, line: 1712, baseType: !9811, size: 64, offset: 96)
!9811 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !9812)
!9812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !9813)
!9813 = !{!9814}
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9812, file: !358, line: 232, baseType: !9815, size: 64)
!9815 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !9816)
!9816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !9817)
!9817 = !{!9818, !9824}
!9818 = !DIDerivedType(tag: DW_TAG_member, scope: !9816, file: !332, line: 38, baseType: !9819, size: 32)
!9819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9816, file: !332, line: 38, size: 32, elements: !9820)
!9820 = !{!9821, !9823}
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9819, file: !332, line: 39, baseType: !9822, size: 32)
!9822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9816, size: 32)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9819, file: !332, line: 40, baseType: !9822, size: 32)
!9824 = !DIDerivedType(tag: DW_TAG_member, scope: !9816, file: !332, line: 42, baseType: !9825, size: 32, offset: 32)
!9825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9816, file: !332, line: 42, size: 32, elements: !9826)
!9826 = !{!9827, !9828}
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9825, file: !332, line: 43, baseType: !9822, size: 32)
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9825, file: !332, line: 44, baseType: !9822, size: 32)
!9829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9830, size: 32)
!9830 = !DISubroutineType(types: !9831)
!9831 = !{!195, !193, !195}
!9832 = !{!9833, !9834, !9835}
!9833 = !DILocalVariable(name: "avail", arg: 1, scope: !9784, file: !1208, line: 560, type: !9787)
!9834 = !DILocalVariable(name: "lines", arg: 2, scope: !9784, file: !1208, line: 560, type: !9787)
!9835 = !DILocalVariable(name: "completion", arg: 3, scope: !9784, file: !1208, line: 561, type: !9829)
!9836 = !DILocation(line: 0, scope: !9784)
!9837 = !DILocation(line: 566, column: 1, scope: !9784)
!9838 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1367, file: !1367, line: 523, type: !1233, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9839)
!9839 = !{!9840, !9841, !9842, !9843, !9844}
!9840 = !DILocalVariable(name: "dev", arg: 1, scope: !9838, file: !1367, line: 523, type: !1235)
!9841 = !DILocalVariable(name: "pin", arg: 2, scope: !9838, file: !1367, line: 524, type: !580)
!9842 = !DILocalVariable(name: "flags", arg: 3, scope: !9838, file: !1367, line: 524, type: !581)
!9843 = !DILocalVariable(name: "err", scope: !9838, file: !1367, line: 526, type: !107)
!9844 = !DILocalVariable(name: "pincfg", scope: !9838, file: !1367, line: 527, type: !107)
!9845 = !DILocation(line: 0, scope: !9838)
!9846 = !DILocation(line: 527, column: 2, scope: !9838)
!9847 = !DILocation(line: 532, column: 8, scope: !9838)
!9848 = !DILocation(line: 533, column: 10, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9838, file: !1367, line: 533, column: 6)
!9850 = !DILocation(line: 533, column: 6, scope: !9838)
!9851 = !DILocation(line: 543, column: 13, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9838, file: !1367, line: 543, column: 6)
!9853 = !DILocation(line: 543, column: 28, scope: !9852)
!9854 = !DILocation(line: 543, column: 6, scope: !9838)
!9855 = !DILocation(line: 544, column: 14, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9857, file: !1367, line: 544, column: 7)
!9857 = distinct !DILexicalBlock(scope: !9852, file: !1367, line: 543, column: 34)
!9858 = !DILocation(line: 544, column: 39, scope: !9856)
!9859 = !DILocation(line: 544, column: 7, scope: !9857)
!9860 = !DILocation(line: 545, column: 38, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9856, file: !1367, line: 544, column: 45)
!9862 = !DILocation(line: 545, column: 4, scope: !9861)
!9863 = !DILocation(line: 546, column: 3, scope: !9861)
!9864 = !DILocation(line: 546, column: 21, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9856, file: !1367, line: 546, column: 14)
!9866 = !DILocation(line: 546, column: 45, scope: !9865)
!9867 = !DILocation(line: 546, column: 14, scope: !9856)
!9868 = !DILocation(line: 547, column: 40, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9865, file: !1367, line: 546, column: 51)
!9870 = !DILocation(line: 547, column: 4, scope: !9869)
!9871 = !DILocation(line: 548, column: 3, scope: !9869)
!9872 = !DILocation(line: 551, column: 32, scope: !9838)
!9873 = !DILocation(line: 551, column: 37, scope: !9838)
!9874 = !DILocation(line: 551, column: 2, scope: !9838)
!9875 = !DILocation(line: 554, column: 6, scope: !9838)
!9876 = !DILocation(line: 562, column: 1, scope: !9838)
!9877 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1367, file: !1367, line: 410, type: !9878, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9880)
!9878 = !DISubroutineType(types: !9879)
!9879 = !{!107, !1235, !1075}
!9880 = !{!9881, !9882, !9883, !9885}
!9881 = !DILocalVariable(name: "dev", arg: 1, scope: !9877, file: !1367, line: 410, type: !1235)
!9882 = !DILocalVariable(name: "value", arg: 2, scope: !9877, file: !1367, line: 410, type: !1075)
!9883 = !DILocalVariable(name: "cfg", scope: !9877, file: !1367, line: 412, type: !9884)
!9884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!9885 = !DILocalVariable(name: "gpio", scope: !9877, file: !1367, line: 413, type: !1302)
!9886 = !DILocation(line: 0, scope: !9877)
!9887 = !DILocation(line: 412, column: 45, scope: !9877)
!9888 = !DILocation(line: 413, column: 44, scope: !9877)
!9889 = !DILocation(line: 415, column: 11, scope: !9877)
!9890 = !DILocation(line: 415, column: 9, scope: !9877)
!9891 = !DILocation(line: 417, column: 2, scope: !9877)
!9892 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1367, file: !1367, line: 420, type: !1256, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9893)
!9893 = !{!9894, !9895, !9896, !9897, !9898, !9899}
!9894 = !DILocalVariable(name: "dev", arg: 1, scope: !9892, file: !1367, line: 420, type: !1235)
!9895 = !DILocalVariable(name: "mask", arg: 2, scope: !9892, file: !1367, line: 421, type: !592)
!9896 = !DILocalVariable(name: "value", arg: 3, scope: !9892, file: !1367, line: 422, type: !587)
!9897 = !DILocalVariable(name: "cfg", scope: !9892, file: !1367, line: 424, type: !9884)
!9898 = !DILocalVariable(name: "gpio", scope: !9892, file: !1367, line: 425, type: !1302)
!9899 = !DILocalVariable(name: "port_value", scope: !9892, file: !1367, line: 426, type: !152)
!9900 = !DILocation(line: 0, scope: !9892)
!9901 = !DILocation(line: 424, column: 45, scope: !9892)
!9902 = !DILocation(line: 425, column: 44, scope: !9892)
!9903 = !DILocation(line: 430, column: 15, scope: !9892)
!9904 = !DILocation(line: 431, column: 46, scope: !9892)
!9905 = !DILocation(line: 431, column: 44, scope: !9892)
!9906 = !DILocation(line: 431, column: 61, scope: !9892)
!9907 = !DILocation(line: 431, column: 53, scope: !9892)
!9908 = !DILocation(line: 431, column: 2, scope: !9892)
!9909 = !DILocation(line: 435, column: 2, scope: !9892)
!9910 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1367, file: !1367, line: 438, type: !1260, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9911)
!9911 = !{!9912, !9913, !9914, !9915}
!9912 = !DILocalVariable(name: "dev", arg: 1, scope: !9910, file: !1367, line: 438, type: !1235)
!9913 = !DILocalVariable(name: "pins", arg: 2, scope: !9910, file: !1367, line: 439, type: !592)
!9914 = !DILocalVariable(name: "cfg", scope: !9910, file: !1367, line: 441, type: !9884)
!9915 = !DILocalVariable(name: "gpio", scope: !9910, file: !1367, line: 442, type: !1302)
!9916 = !DILocation(line: 0, scope: !9910)
!9917 = !DILocation(line: 441, column: 45, scope: !9910)
!9918 = !DILocation(line: 442, column: 44, scope: !9910)
!9919 = !DILocation(line: 448, column: 2, scope: !9910)
!9920 = !DILocation(line: 450, column: 2, scope: !9910)
!9921 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1367, file: !1367, line: 453, type: !1260, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9922)
!9922 = !{!9923, !9924, !9925, !9926}
!9923 = !DILocalVariable(name: "dev", arg: 1, scope: !9921, file: !1367, line: 453, type: !1235)
!9924 = !DILocalVariable(name: "pins", arg: 2, scope: !9921, file: !1367, line: 454, type: !592)
!9925 = !DILocalVariable(name: "cfg", scope: !9921, file: !1367, line: 456, type: !9884)
!9926 = !DILocalVariable(name: "gpio", scope: !9921, file: !1367, line: 457, type: !1302)
!9927 = !DILocation(line: 0, scope: !9921)
!9928 = !DILocation(line: 456, column: 45, scope: !9921)
!9929 = !DILocation(line: 457, column: 44, scope: !9921)
!9930 = !DILocation(line: 467, column: 2, scope: !9921)
!9931 = !DILocation(line: 470, column: 2, scope: !9921)
!9932 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1367, file: !1367, line: 473, type: !1260, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9933)
!9933 = !{!9934, !9935, !9936, !9937}
!9934 = !DILocalVariable(name: "dev", arg: 1, scope: !9932, file: !1367, line: 473, type: !1235)
!9935 = !DILocalVariable(name: "pins", arg: 2, scope: !9932, file: !1367, line: 474, type: !592)
!9936 = !DILocalVariable(name: "cfg", scope: !9932, file: !1367, line: 476, type: !9884)
!9937 = !DILocalVariable(name: "gpio", scope: !9932, file: !1367, line: 477, type: !1302)
!9938 = !DILocation(line: 0, scope: !9932)
!9939 = !DILocation(line: 476, column: 45, scope: !9932)
!9940 = !DILocation(line: 477, column: 44, scope: !9932)
!9941 = !DILocation(line: 484, column: 2, scope: !9932)
!9942 = !DILocation(line: 487, column: 2, scope: !9932)
!9943 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1367, file: !1367, line: 594, type: !1266, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9944)
!9944 = !{!9945, !9946, !9947, !9948, !9949, !9950, !9952, !9953, !9954}
!9945 = !DILocalVariable(name: "dev", arg: 1, scope: !9943, file: !1367, line: 594, type: !1235)
!9946 = !DILocalVariable(name: "pin", arg: 2, scope: !9943, file: !1367, line: 595, type: !580)
!9947 = !DILocalVariable(name: "mode", arg: 3, scope: !9943, file: !1367, line: 596, type: !545)
!9948 = !DILocalVariable(name: "trig", arg: 4, scope: !9943, file: !1367, line: 597, type: !551)
!9949 = !DILocalVariable(name: "cfg", scope: !9943, file: !1367, line: 599, type: !9884)
!9950 = !DILocalVariable(name: "data", scope: !9943, file: !1367, line: 600, type: !9951)
!9951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!9952 = !DILocalVariable(name: "edge", scope: !9943, file: !1367, line: 601, type: !107)
!9953 = !DILocalVariable(name: "err", scope: !9943, file: !1367, line: 602, type: !107)
!9954 = !DILabel(scope: !9943, name: "exit", file: !1367, line: 643)
!9955 = !DILocation(line: 0, scope: !9943)
!9956 = !DILocation(line: 599, column: 45, scope: !9943)
!9957 = !DILocation(line: 604, column: 6, scope: !9943)
!9958 = !DILocation(line: 605, column: 34, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9960, file: !1367, line: 605, column: 7)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !1367, line: 604, column: 38)
!9961 = distinct !DILexicalBlock(scope: !9943, file: !1367, line: 604, column: 6)
!9962 = !DILocation(line: 605, column: 7, scope: !9959)
!9963 = !DILocation(line: 605, column: 47, scope: !9959)
!9964 = !DILocation(line: 605, column: 39, scope: !9959)
!9965 = !DILocation(line: 605, column: 7, scope: !9960)
!9966 = !DILocation(line: 606, column: 4, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9959, file: !1367, line: 605, column: 53)
!9968 = !DILocation(line: 607, column: 4, scope: !9967)
!9969 = !DILocation(line: 608, column: 4, scope: !9967)
!9970 = !DILocation(line: 609, column: 3, scope: !9967)
!9971 = !DILocation(line: 600, column: 38, scope: !9943)
!9972 = !DILocation(line: 620, column: 30, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9943, file: !1367, line: 620, column: 6)
!9974 = !DILocation(line: 620, column: 6, scope: !9973)
!9975 = !DILocation(line: 620, column: 57, scope: !9973)
!9976 = !DILocation(line: 620, column: 6, scope: !9943)
!9977 = !DILocation(line: 625, column: 29, scope: !9943)
!9978 = !DILocation(line: 625, column: 2, scope: !9943)
!9979 = !DILocation(line: 627, column: 2, scope: !9943)
!9980 = !DILocation(line: 630, column: 3, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9943, file: !1367, line: 627, column: 16)
!9982 = !DILocation(line: 633, column: 3, scope: !9981)
!9983 = !DILocation(line: 636, column: 3, scope: !9981)
!9984 = !DILocation(line: 639, column: 2, scope: !9943)
!9985 = !DILocation(line: 641, column: 2, scope: !9943)
!9986 = !DILocation(line: 643, column: 1, scope: !9943)
!9987 = !DILocation(line: 644, column: 2, scope: !9943)
!9988 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1367, file: !1367, line: 647, type: !1270, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9989)
!9989 = !{!9990, !9991, !9992, !9993}
!9990 = !DILocalVariable(name: "dev", arg: 1, scope: !9988, file: !1367, line: 647, type: !1235)
!9991 = !DILocalVariable(name: "callback", arg: 2, scope: !9988, file: !1367, line: 648, type: !1272)
!9992 = !DILocalVariable(name: "set", arg: 3, scope: !9988, file: !1367, line: 649, type: !145)
!9993 = !DILocalVariable(name: "data", scope: !9988, file: !1367, line: 651, type: !9951)
!9994 = !DILocation(line: 0, scope: !9988)
!9995 = !DILocation(line: 651, column: 38, scope: !9988)
!9996 = !DILocation(line: 653, column: 37, scope: !9988)
!9997 = !DILocation(line: 653, column: 9, scope: !9988)
!9998 = !DILocation(line: 653, column: 2, scope: !9988)
!9999 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10000, file: !10000, line: 38, type: !10001, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10004)
!10000 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10001 = !DISubroutineType(types: !10002)
!10002 = !{!107, !10003, !1272, !145}
!10003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!10004 = !{!10005, !10006, !10007}
!10005 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9999, file: !10000, line: 38, type: !10003)
!10006 = !DILocalVariable(name: "callback", arg: 2, scope: !9999, file: !10000, line: 39, type: !1272)
!10007 = !DILocalVariable(name: "set", arg: 3, scope: !9999, file: !10000, line: 40, type: !145)
!10008 = !DILocation(line: 0, scope: !9999)
!10009 = !DILocation(line: 42, column: 2, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10011, file: !10000, line: 42, column: 2)
!10011 = distinct !DILexicalBlock(scope: !9999, file: !10000, line: 42, column: 2)
!10012 = !DILocation(line: 42, column: 2, scope: !10011)
!10013 = !DILocation(line: 42, column: 2, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10010, file: !10000, line: 42, column: 2)
!10015 = !DILocation(line: 43, column: 2, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !10000, line: 43, column: 2)
!10017 = distinct !DILexicalBlock(scope: !9999, file: !10000, line: 43, column: 2)
!10018 = !DILocation(line: 43, column: 2, scope: !10017)
!10019 = !DILocation(line: 43, column: 2, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !10000, line: 43, column: 2)
!10021 = !DILocation(line: 45, column: 7, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9999, file: !10000, line: 45, column: 6)
!10023 = !DILocation(line: 45, column: 6, scope: !9999)
!10024 = !DILocation(line: 46, column: 56, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10026, file: !10000, line: 46, column: 7)
!10026 = distinct !DILexicalBlock(scope: !10022, file: !10000, line: 45, column: 38)
!10027 = !DILocation(line: 46, column: 8, scope: !10025)
!10028 = !DILocation(line: 46, column: 7, scope: !10026)
!10029 = !DILocation(line: 51, column: 13, scope: !10022)
!10030 = !DILocation(line: 56, column: 43, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !10000, line: 55, column: 11)
!10032 = distinct !DILexicalBlock(scope: !9999, file: !10000, line: 55, column: 6)
!10033 = !DILocation(line: 56, column: 3, scope: !10031)
!10034 = !DILocation(line: 57, column: 2, scope: !10031)
!10035 = !DILocation(line: 60, column: 1, scope: !9999)
!10036 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !612, file: !612, line: 261, type: !10037, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10039)
!10037 = !DISubroutineType(types: !10038)
!10038 = !{!145, !10003}
!10039 = !{!10040}
!10040 = !DILocalVariable(name: "list", arg: 1, scope: !10036, file: !612, line: 261, type: !10003)
!10041 = !DILocation(line: 0, scope: !10036)
!10042 = !DILocation(line: 261, column: 1, scope: !10036)
!10043 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !612, file: !612, line: 417, type: !10044, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10046)
!10044 = !DISubroutineType(types: !10045)
!10045 = !{!145, !10003, !1437}
!10046 = !{!10047, !10048, !10049, !10050}
!10047 = !DILocalVariable(name: "list", arg: 1, scope: !10043, file: !612, line: 417, type: !10003)
!10048 = !DILocalVariable(name: "node", arg: 2, scope: !10043, file: !612, line: 417, type: !1437)
!10049 = !DILocalVariable(name: "prev", scope: !10043, file: !612, line: 417, type: !1437)
!10050 = !DILocalVariable(name: "test", scope: !10043, file: !612, line: 417, type: !1437)
!10051 = !DILocation(line: 0, scope: !10043)
!10052 = !DILocation(line: 417, column: 1, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10043, file: !612, line: 417, column: 1)
!10054 = !DILocation(line: 417, column: 1, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10053, file: !612, line: 417, column: 1)
!10056 = !DILocation(line: 417, column: 1, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !612, line: 417, column: 1)
!10058 = distinct !DILexicalBlock(scope: !10055, file: !612, line: 417, column: 1)
!10059 = !DILocation(line: 417, column: 1, scope: !10058)
!10060 = distinct !{!10060, !10052, !10052}
!10061 = !DILocation(line: 417, column: 1, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10057, file: !612, line: 417, column: 1)
!10063 = !DILocation(line: 417, column: 1, scope: !10043)
!10064 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !612, file: !612, line: 298, type: !10065, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10067)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{null, !10003, !1437}
!10067 = !{!10068, !10069}
!10068 = !DILocalVariable(name: "list", arg: 1, scope: !10064, file: !612, line: 298, type: !10003)
!10069 = !DILocalVariable(name: "node", arg: 2, scope: !10064, file: !612, line: 298, type: !1437)
!10070 = !DILocation(line: 0, scope: !10064)
!10071 = !DILocation(line: 298, column: 1, scope: !10064)
!10072 = !DILocation(line: 298, column: 1, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10064, file: !612, line: 298, column: 1)
!10074 = !DILocation(line: 298, column: 1, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10073, file: !612, line: 298, column: 1)
!10076 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !612, file: !612, line: 231, type: !10077, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10079)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{!1437, !10003}
!10079 = !{!10080}
!10080 = !DILocalVariable(name: "list", arg: 1, scope: !10076, file: !612, line: 231, type: !10003)
!10081 = !DILocation(line: 0, scope: !10076)
!10082 = !DILocation(line: 233, column: 15, scope: !10076)
!10083 = !DILocation(line: 233, column: 2, scope: !10076)
!10084 = distinct !DISubprogram(name: "z_snode_next_set", scope: !612, file: !612, line: 209, type: !10085, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10087)
!10085 = !DISubroutineType(types: !10086)
!10086 = !{null, !1437, !1437}
!10087 = !{!10088, !10089}
!10088 = !DILocalVariable(name: "parent", arg: 1, scope: !10084, file: !612, line: 209, type: !1437)
!10089 = !DILocalVariable(name: "child", arg: 2, scope: !10084, file: !612, line: 209, type: !1437)
!10090 = !DILocation(line: 0, scope: !10084)
!10091 = !DILocation(line: 211, column: 10, scope: !10084)
!10092 = !DILocation(line: 211, column: 15, scope: !10084)
!10093 = !DILocation(line: 212, column: 1, scope: !10084)
!10094 = distinct !DISubprogram(name: "z_slist_head_set", scope: !612, file: !612, line: 214, type: !10065, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10095)
!10095 = !{!10096, !10097}
!10096 = !DILocalVariable(name: "list", arg: 1, scope: !10094, file: !612, line: 214, type: !10003)
!10097 = !DILocalVariable(name: "node", arg: 2, scope: !10094, file: !612, line: 214, type: !1437)
!10098 = !DILocation(line: 0, scope: !10094)
!10099 = !DILocation(line: 216, column: 8, scope: !10094)
!10100 = !DILocation(line: 216, column: 13, scope: !10094)
!10101 = !DILocation(line: 217, column: 1, scope: !10094)
!10102 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !612, file: !612, line: 243, type: !10077, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10103)
!10103 = !{!10104}
!10104 = !DILocalVariable(name: "list", arg: 1, scope: !10102, file: !612, line: 243, type: !10003)
!10105 = !DILocation(line: 0, scope: !10102)
!10106 = !DILocation(line: 245, column: 15, scope: !10102)
!10107 = !DILocation(line: 245, column: 2, scope: !10102)
!10108 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !612, file: !612, line: 219, type: !10065, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10109)
!10109 = !{!10110, !10111}
!10110 = !DILocalVariable(name: "list", arg: 1, scope: !10108, file: !612, line: 219, type: !10003)
!10111 = !DILocalVariable(name: "node", arg: 2, scope: !10108, file: !612, line: 219, type: !1437)
!10112 = !DILocation(line: 0, scope: !10108)
!10113 = !DILocation(line: 221, column: 8, scope: !10108)
!10114 = !DILocation(line: 221, column: 13, scope: !10108)
!10115 = !DILocation(line: 222, column: 1, scope: !10108)
!10116 = distinct !DISubprogram(name: "sys_slist_remove", scope: !612, file: !612, line: 401, type: !10117, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10119)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{null, !10003, !1437, !1437}
!10119 = !{!10120, !10121, !10122}
!10120 = !DILocalVariable(name: "list", arg: 1, scope: !10116, file: !612, line: 401, type: !10003)
!10121 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10116, file: !612, line: 401, type: !1437)
!10122 = !DILocalVariable(name: "node", arg: 3, scope: !10116, file: !612, line: 401, type: !1437)
!10123 = !DILocation(line: 0, scope: !10116)
!10124 = !DILocation(line: 401, column: 1, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10116, file: !612, line: 401, column: 1)
!10126 = !DILocation(line: 0, scope: !10125)
!10127 = !DILocation(line: 401, column: 1, scope: !10116)
!10128 = !DILocation(line: 401, column: 1, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10125, file: !612, line: 401, column: 1)
!10130 = !DILocation(line: 401, column: 1, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10129, file: !612, line: 401, column: 1)
!10132 = !DILocation(line: 401, column: 1, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10131, file: !612, line: 401, column: 1)
!10134 = !DILocation(line: 401, column: 1, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10125, file: !612, line: 401, column: 1)
!10136 = !DILocation(line: 401, column: 1, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10135, file: !612, line: 401, column: 1)
!10138 = !DILocation(line: 401, column: 1, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10137, file: !612, line: 401, column: 1)
!10140 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !612, file: !612, line: 285, type: !10141, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10143)
!10141 = !DISubroutineType(types: !10142)
!10142 = !{!1437, !1437}
!10143 = !{!10144}
!10144 = !DILocalVariable(name: "node", arg: 1, scope: !10140, file: !612, line: 285, type: !1437)
!10145 = !DILocation(line: 0, scope: !10140)
!10146 = !DILocation(line: 285, column: 1, scope: !10140)
!10147 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !612, file: !612, line: 274, type: !10141, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10148)
!10148 = !{!10149}
!10149 = !DILocalVariable(name: "node", arg: 1, scope: !10147, file: !612, line: 274, type: !1437)
!10150 = !DILocation(line: 0, scope: !10147)
!10151 = !DILocation(line: 274, column: 1, scope: !10147)
!10152 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !612, file: !612, line: 204, type: !10141, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10153)
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "node", arg: 1, scope: !10152, file: !612, line: 204, type: !1437)
!10155 = !DILocation(line: 0, scope: !10152)
!10156 = !DILocation(line: 206, column: 15, scope: !10152)
!10157 = !DILocation(line: 206, column: 2, scope: !10152)
!10158 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1367, file: !1367, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10159)
!10159 = !{!10160, !10161, !10162}
!10160 = !DILocalVariable(name: "pin", arg: 1, scope: !10158, file: !1367, line: 342, type: !107)
!10161 = !DILocalVariable(name: "line", scope: !10158, file: !1367, line: 344, type: !152)
!10162 = !DILocalVariable(name: "port", scope: !10158, file: !1367, line: 345, type: !107)
!10163 = !DILocation(line: 0, scope: !10158)
!10164 = !DILocation(line: 344, column: 18, scope: !10158)
!10165 = !{i32 983040, i32 0}
!10166 = !DILocation(line: 356, column: 9, scope: !10158)
!10167 = !DILocation(line: 370, column: 2, scope: !10158)
!10168 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1367, file: !1367, line: 37, type: !967, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10169)
!10169 = !{!10170, !10171, !10172}
!10170 = !DILocalVariable(name: "line", arg: 1, scope: !10168, file: !1367, line: 37, type: !107)
!10171 = !DILocalVariable(name: "arg", arg: 2, scope: !10168, file: !1367, line: 37, type: !106)
!10172 = !DILocalVariable(name: "data", scope: !10168, file: !1367, line: 39, type: !9951)
!10173 = !DILocation(line: 0, scope: !10168)
!10174 = !DILocation(line: 41, column: 29, scope: !10168)
!10175 = !DILocation(line: 41, column: 39, scope: !10168)
!10176 = !DILocation(line: 41, column: 44, scope: !10168)
!10177 = !DILocation(line: 41, column: 2, scope: !10168)
!10178 = !DILocation(line: 42, column: 1, scope: !10168)
!10179 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1367, file: !1367, line: 376, type: !10180, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10182)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{!107, !107, !107}
!10182 = !{!10183, !10184, !10185, !10187, !10188}
!10183 = !DILocalVariable(name: "port", arg: 1, scope: !10179, file: !1367, line: 376, type: !107)
!10184 = !DILocalVariable(name: "pin", arg: 2, scope: !10179, file: !1367, line: 376, type: !107)
!10185 = !DILocalVariable(name: "clk", scope: !10179, file: !1367, line: 386, type: !10186)
!10186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1235)
!10187 = !DILocalVariable(name: "pclken", scope: !10179, file: !1367, line: 387, type: !1472)
!10188 = !DILocalVariable(name: "ret", scope: !10179, file: !1367, line: 396, type: !107)
!10189 = !DILocation(line: 0, scope: !10179)
!10190 = !DILocation(line: 387, column: 2, scope: !10179)
!10191 = !DILocation(line: 387, column: 22, scope: !10179)
!10192 = !DILocation(line: 399, column: 8, scope: !10179)
!10193 = !DILocation(line: 400, column: 10, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10179, file: !1367, line: 400, column: 6)
!10195 = !DILocation(line: 400, column: 6, scope: !10179)
!10196 = !DILocation(line: 405, column: 2, scope: !10179)
!10197 = !DILocation(line: 407, column: 2, scope: !10179)
!10198 = !DILocation(line: 408, column: 1, scope: !10179)
!10199 = distinct !DISubprogram(name: "clock_control_on", scope: !1044, file: !1044, line: 123, type: !1332, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10200)
!10200 = !{!10201, !10202, !10203}
!10201 = !DILocalVariable(name: "dev", arg: 1, scope: !10199, file: !1044, line: 123, type: !1235)
!10202 = !DILocalVariable(name: "sys", arg: 2, scope: !10199, file: !1044, line: 124, type: !1117)
!10203 = !DILocalVariable(name: "api", scope: !10199, file: !1044, line: 126, type: !1325)
!10204 = !DILocation(line: 0, scope: !10199)
!10205 = !DILocation(line: 127, column: 49, scope: !10199)
!10206 = !DILocation(line: 129, column: 14, scope: !10199)
!10207 = !DILocation(line: 129, column: 9, scope: !10199)
!10208 = !DILocation(line: 129, column: 2, scope: !10199)
!10209 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1367, file: !1367, line: 311, type: !9358, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10210)
!10210 = !{!10211, !10212, !10213}
!10211 = !DILocalVariable(name: "port", arg: 1, scope: !10209, file: !1367, line: 311, type: !107)
!10212 = !DILocalVariable(name: "pin", arg: 2, scope: !10209, file: !1367, line: 311, type: !107)
!10213 = !DILocalVariable(name: "line", scope: !10209, file: !1367, line: 313, type: !152)
!10214 = !DILocation(line: 0, scope: !10209)
!10215 = !DILocation(line: 313, column: 18, scope: !10209)
!10216 = !DILocation(line: 337, column: 2, scope: !10209)
!10217 = !DILocation(line: 340, column: 1, scope: !10209)
!10218 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1367, file: !1367, line: 295, type: !10219, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10221)
!10219 = !DISubroutineType(types: !10220)
!10220 = !{!152, !107}
!10221 = !{!10222}
!10222 = !DILocalVariable(name: "pin", arg: 1, scope: !10218, file: !1367, line: 295, type: !107)
!10223 = !DILocation(line: 0, scope: !10218)
!10224 = !DILocation(line: 307, column: 46, scope: !10218)
!10225 = !DILocation(line: 307, column: 27, scope: !10218)
!10226 = !DILocation(line: 307, column: 32, scope: !10218)
!10227 = !DILocation(line: 307, column: 14, scope: !10218)
!10228 = !DILocation(line: 307, column: 39, scope: !10218)
!10229 = !DILocation(line: 307, column: 2, scope: !10218)
!10230 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !10231, file: !10231, line: 621, type: !10232, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10234)
!10231 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10232 = !DISubroutineType(types: !10233)
!10233 = !{null, !152, !152}
!10234 = !{!10235, !10236}
!10235 = !DILocalVariable(name: "Port", arg: 1, scope: !10230, file: !10231, line: 621, type: !152)
!10236 = !DILocalVariable(name: "Line", arg: 2, scope: !10230, file: !10231, line: 621, type: !152)
!10237 = !DILocation(line: 0, scope: !10230)
!10238 = !DILocation(line: 623, column: 3, scope: !10230)
!10239 = !DILocalVariable(name: "value", arg: 1, scope: !10240, file: !6220, line: 373, type: !152)
!10240 = distinct !DISubprogram(name: "__RBIT", scope: !6220, file: !6220, line: 373, type: !7466, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10241)
!10241 = !{!10239, !10242}
!10242 = !DILocalVariable(name: "result", scope: !10240, file: !6220, line: 375, type: !152)
!10243 = !DILocation(line: 0, scope: !10240, inlinedAt: !10244)
!10244 = distinct !DILocation(line: 623, column: 3, scope: !10230)
!10245 = !DILocation(line: 380, column: 4, scope: !10240, inlinedAt: !10244)
!10246 = !{i64 2453149}
!10247 = !DILocalVariable(name: "value", arg: 1, scope: !10248, file: !6220, line: 403, type: !152)
!10248 = distinct !DISubprogram(name: "__CLZ", scope: !6220, file: !6220, line: 403, type: !10249, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10251)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{!195, !152}
!10251 = !{!10247}
!10252 = !DILocation(line: 0, scope: !10248, inlinedAt: !10253)
!10253 = distinct !DILocation(line: 623, column: 3, scope: !10230)
!10254 = !DILocation(line: 414, column: 7, scope: !10248, inlinedAt: !10253)
!10255 = !DILocation(line: 624, column: 1, scope: !10230)
!10256 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10000, file: !10000, line: 69, type: !10257, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10259)
!10257 = !DISubroutineType(types: !10258)
!10258 = !{null, !10003, !1235, !152}
!10259 = !{!10260, !10261, !10262, !10263, !10264}
!10260 = !DILocalVariable(name: "list", arg: 1, scope: !10256, file: !10000, line: 69, type: !10003)
!10261 = !DILocalVariable(name: "port", arg: 2, scope: !10256, file: !10000, line: 70, type: !1235)
!10262 = !DILocalVariable(name: "pins", arg: 3, scope: !10256, file: !10000, line: 71, type: !152)
!10263 = !DILocalVariable(name: "cb", scope: !10256, file: !10000, line: 73, type: !1272)
!10264 = !DILocalVariable(name: "tmp", scope: !10256, file: !10000, line: 73, type: !1272)
!10265 = !DILocation(line: 0, scope: !10256)
!10266 = !DILocation(line: 75, column: 2, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10256, file: !10000, line: 75, column: 2)
!10268 = !DILocation(line: 0, scope: !10267)
!10269 = !DILocation(line: 76, column: 11, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10271, file: !10000, line: 76, column: 7)
!10271 = distinct !DILexicalBlock(scope: !10272, file: !10000, line: 75, column: 57)
!10272 = distinct !DILexicalBlock(scope: !10267, file: !10000, line: 75, column: 2)
!10273 = !DILocation(line: 76, column: 20, scope: !10270)
!10274 = !DILocation(line: 76, column: 7, scope: !10271)
!10275 = !DILocation(line: 77, column: 4, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10277, file: !10000, line: 77, column: 4)
!10277 = distinct !DILexicalBlock(scope: !10278, file: !10000, line: 77, column: 4)
!10278 = distinct !DILexicalBlock(scope: !10270, file: !10000, line: 76, column: 28)
!10279 = !DILocation(line: 77, column: 4, scope: !10277)
!10280 = !DILocation(line: 77, column: 4, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10276, file: !10000, line: 77, column: 4)
!10282 = !DILocation(line: 78, column: 4, scope: !10278)
!10283 = !DILocation(line: 79, column: 3, scope: !10278)
!10284 = !DILocation(line: 75, column: 2, scope: !10272)
!10285 = !DILocation(line: 81, column: 1, scope: !10256)
!10286 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !10231, file: !10231, line: 721, type: !7466, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10287)
!10287 = !{!10288}
!10288 = !DILocalVariable(name: "Line", arg: 1, scope: !10286, file: !10231, line: 721, type: !152)
!10289 = !DILocation(line: 0, scope: !10286)
!10290 = !DILocation(line: 723, column: 21, scope: !10286)
!10291 = !DILocation(line: 0, scope: !10240, inlinedAt: !10292)
!10292 = distinct !DILocation(line: 723, column: 76, scope: !10286)
!10293 = !DILocation(line: 380, column: 4, scope: !10240, inlinedAt: !10292)
!10294 = !DILocation(line: 0, scope: !10248, inlinedAt: !10295)
!10295 = distinct !DILocation(line: 723, column: 76, scope: !10286)
!10296 = !DILocation(line: 414, column: 7, scope: !10248, inlinedAt: !10295)
!10297 = !DILocation(line: 723, column: 73, scope: !10286)
!10298 = !DILocation(line: 723, column: 3, scope: !10286)
!10299 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10300, file: !10300, line: 913, type: !10301, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10303)
!10300 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10301 = !DISubroutineType(types: !10302)
!10302 = !{null, !1302, !152}
!10303 = !{!10304, !10305}
!10304 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10299, file: !10300, line: 913, type: !1302)
!10305 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10299, file: !10300, line: 913, type: !152)
!10306 = !DILocation(line: 0, scope: !10299)
!10307 = !DILocation(line: 918, column: 3, scope: !10299)
!10308 = !DILocation(line: 920, column: 1, scope: !10299)
!10309 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10300, file: !10300, line: 825, type: !10310, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10312)
!10310 = !DISubroutineType(types: !10311)
!10311 = !{!152, !1302}
!10312 = !{!10313}
!10313 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10309, file: !10300, line: 825, type: !1302)
!10314 = !DILocation(line: 0, scope: !10309)
!10315 = !DILocation(line: 827, column: 21, scope: !10309)
!10316 = !DILocation(line: 827, column: 3, scope: !10309)
!10317 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10300, file: !10300, line: 814, type: !10301, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10318)
!10318 = !{!10319, !10320}
!10319 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10317, file: !10300, line: 814, type: !1302)
!10320 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10317, file: !10300, line: 814, type: !152)
!10321 = !DILocation(line: 0, scope: !10317)
!10322 = !DILocation(line: 816, column: 3, scope: !10317)
!10323 = !DILocation(line: 817, column: 1, scope: !10317)
!10324 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10300, file: !10300, line: 773, type: !10310, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10325)
!10325 = !{!10326}
!10326 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10324, file: !10300, line: 773, type: !1302)
!10327 = !DILocation(line: 0, scope: !10324)
!10328 = !DILocation(line: 775, column: 21, scope: !10324)
!10329 = !DILocation(line: 775, column: 3, scope: !10324)
!10330 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1367, file: !1367, line: 47, type: !10331, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10333)
!10331 = !DISubroutineType(types: !10332)
!10332 = !{!107, !581, !187}
!10333 = !{!10334, !10335}
!10334 = !DILocalVariable(name: "flags", arg: 1, scope: !10330, file: !1367, line: 47, type: !581)
!10335 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10330, file: !1367, line: 47, type: !187)
!10336 = !DILocation(line: 0, scope: !10330)
!10337 = !DILocation(line: 50, column: 13, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10330, file: !1367, line: 50, column: 6)
!10339 = !DILocation(line: 50, column: 28, scope: !10338)
!10340 = !DILocation(line: 50, column: 6, scope: !10330)
!10341 = !DILocation(line: 53, column: 11, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10338, file: !1367, line: 50, column: 34)
!10343 = !DILocation(line: 55, column: 14, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10342, file: !1367, line: 55, column: 7)
!10345 = !DILocation(line: 55, column: 35, scope: !10344)
!10346 = !DILocation(line: 55, column: 7, scope: !10342)
!10347 = !DILocation(line: 56, column: 14, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !1367, line: 56, column: 8)
!10349 = distinct !DILexicalBlock(scope: !10344, file: !1367, line: 55, column: 41)
!10350 = !DILocation(line: 56, column: 8, scope: !10349)
!10351 = !DILocation(line: 0, scope: !10344)
!10352 = !DILocation(line: 66, column: 14, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10342, file: !1367, line: 66, column: 7)
!10354 = !DILocation(line: 66, column: 30, scope: !10353)
!10355 = !DILocation(line: 66, column: 7, scope: !10342)
!10356 = !DILocation(line: 67, column: 12, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10353, file: !1367, line: 66, column: 36)
!10358 = !DILocation(line: 68, column: 3, scope: !10357)
!10359 = !DILocation(line: 68, column: 21, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10353, file: !1367, line: 68, column: 14)
!10361 = !DILocation(line: 68, column: 39, scope: !10360)
!10362 = !DILocation(line: 68, column: 14, scope: !10353)
!10363 = !DILocation(line: 69, column: 12, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10360, file: !1367, line: 68, column: 45)
!10365 = !DILocation(line: 70, column: 3, scope: !10364)
!10366 = !DILocation(line: 72, column: 21, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10338, file: !1367, line: 72, column: 14)
!10368 = !DILocation(line: 72, column: 35, scope: !10367)
!10369 = !DILocation(line: 72, column: 14, scope: !10338)
!10370 = !DILocation(line: 77, column: 14, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !1367, line: 77, column: 7)
!10372 = distinct !DILexicalBlock(scope: !10367, file: !1367, line: 72, column: 41)
!10373 = !DILocation(line: 77, column: 30, scope: !10371)
!10374 = !DILocation(line: 77, column: 7, scope: !10372)
!10375 = !DILocation(line: 0, scope: !10338)
!10376 = !DILocation(line: 90, column: 1, scope: !10330)
!10377 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1367, file: !1367, line: 157, type: !10378, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10380)
!10378 = !DISubroutineType(types: !10379)
!10379 = !{null, !1235, !107, !107, !107}
!10380 = !{!10381, !10382, !10383, !10384, !10385, !10386, !10387, !10388, !10389, !10390, !10391}
!10381 = !DILocalVariable(name: "dev", arg: 1, scope: !10377, file: !1367, line: 157, type: !1235)
!10382 = !DILocalVariable(name: "pin", arg: 2, scope: !10377, file: !1367, line: 157, type: !107)
!10383 = !DILocalVariable(name: "conf", arg: 3, scope: !10377, file: !1367, line: 158, type: !107)
!10384 = !DILocalVariable(name: "func", arg: 4, scope: !10377, file: !1367, line: 158, type: !107)
!10385 = !DILocalVariable(name: "cfg", scope: !10377, file: !1367, line: 160, type: !9884)
!10386 = !DILocalVariable(name: "gpio", scope: !10377, file: !1367, line: 161, type: !1302)
!10387 = !DILocalVariable(name: "pin_ll", scope: !10377, file: !1367, line: 163, type: !107)
!10388 = !DILocalVariable(name: "mode", scope: !10377, file: !1367, line: 227, type: !32)
!10389 = !DILocalVariable(name: "otype", scope: !10377, file: !1367, line: 227, type: !32)
!10390 = !DILocalVariable(name: "ospeed", scope: !10377, file: !1367, line: 227, type: !32)
!10391 = !DILocalVariable(name: "pupd", scope: !10377, file: !1367, line: 227, type: !32)
!10392 = !DILocation(line: 0, scope: !10377)
!10393 = !DILocation(line: 160, column: 45, scope: !10377)
!10394 = !DILocation(line: 161, column: 44, scope: !10377)
!10395 = !DILocation(line: 163, column: 15, scope: !10377)
!10396 = !DILocation(line: 229, column: 14, scope: !10377)
!10397 = !DILocation(line: 246, column: 47, scope: !10377)
!10398 = !DILocation(line: 246, column: 2, scope: !10377)
!10399 = !DILocation(line: 248, column: 43, scope: !10377)
!10400 = !DILocation(line: 248, column: 2, scope: !10377)
!10401 = !DILocation(line: 250, column: 40, scope: !10377)
!10402 = !DILocation(line: 250, column: 2, scope: !10377)
!10403 = !DILocation(line: 252, column: 11, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10377, file: !1367, line: 252, column: 6)
!10405 = !DILocation(line: 252, column: 6, scope: !10377)
!10406 = !DILocation(line: 253, column: 11, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10408, file: !1367, line: 253, column: 7)
!10408 = distinct !DILexicalBlock(scope: !10404, file: !1367, line: 252, column: 36)
!10409 = !DILocation(line: 253, column: 7, scope: !10408)
!10410 = !DILocation(line: 254, column: 4, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10407, file: !1367, line: 253, column: 16)
!10412 = !DILocation(line: 255, column: 3, scope: !10411)
!10413 = !DILocation(line: 256, column: 4, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10407, file: !1367, line: 255, column: 10)
!10415 = !DILocation(line: 260, column: 40, scope: !10377)
!10416 = !DILocation(line: 260, column: 2, scope: !10377)
!10417 = !DILocation(line: 265, column: 1, scope: !10377)
!10418 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1367, file: !1367, line: 137, type: !10219, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10419)
!10419 = !{!10420, !10421}
!10420 = !DILocalVariable(name: "pin", arg: 1, scope: !10418, file: !1367, line: 137, type: !107)
!10421 = !DILocalVariable(name: "pinval", scope: !10418, file: !1367, line: 139, type: !152)
!10422 = !DILocation(line: 0, scope: !10418)
!10423 = !DILocation(line: 149, column: 13, scope: !10418)
!10424 = !DILocation(line: 151, column: 2, scope: !10418)
!10425 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10300, file: !10300, line: 343, type: !10426, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10428)
!10426 = !DISubroutineType(types: !10427)
!10427 = !{null, !1302, !152, !152}
!10428 = !{!10429, !10430, !10431}
!10429 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10425, file: !10300, line: 343, type: !1302)
!10430 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10425, file: !10300, line: 343, type: !152)
!10431 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10425, file: !10300, line: 343, type: !152)
!10432 = !DILocation(line: 0, scope: !10425)
!10433 = !DILocation(line: 345, column: 3, scope: !10425)
!10434 = !DILocation(line: 346, column: 1, scope: !10425)
!10435 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10300, file: !10300, line: 414, type: !10426, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10436)
!10436 = !{!10437, !10438, !10439}
!10437 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10435, file: !10300, line: 414, type: !1302)
!10438 = !DILocalVariable(name: "Pin", arg: 2, scope: !10435, file: !10300, line: 414, type: !152)
!10439 = !DILocalVariable(name: "Speed", arg: 3, scope: !10435, file: !10300, line: 414, type: !152)
!10440 = !DILocation(line: 0, scope: !10435)
!10441 = !DILocation(line: 416, column: 3, scope: !10435)
!10442 = !DILocation(line: 0, scope: !10240, inlinedAt: !10443)
!10443 = distinct !DILocation(line: 416, column: 3, scope: !10435)
!10444 = !DILocation(line: 380, column: 4, scope: !10240, inlinedAt: !10443)
!10445 = !DILocation(line: 0, scope: !10248, inlinedAt: !10446)
!10446 = distinct !DILocation(line: 416, column: 3, scope: !10435)
!10447 = !DILocation(line: 414, column: 7, scope: !10248, inlinedAt: !10446)
!10448 = !DILocation(line: 0, scope: !10240, inlinedAt: !10449)
!10449 = distinct !DILocation(line: 416, column: 3, scope: !10435)
!10450 = !DILocation(line: 0, scope: !10248, inlinedAt: !10451)
!10451 = distinct !DILocation(line: 416, column: 3, scope: !10435)
!10452 = !DILocation(line: 418, column: 1, scope: !10435)
!10453 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10300, file: !10300, line: 485, type: !10426, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10454)
!10454 = !{!10455, !10456, !10457}
!10455 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10453, file: !10300, line: 485, type: !1302)
!10456 = !DILocalVariable(name: "Pin", arg: 2, scope: !10453, file: !10300, line: 485, type: !152)
!10457 = !DILocalVariable(name: "Pull", arg: 3, scope: !10453, file: !10300, line: 485, type: !152)
!10458 = !DILocation(line: 0, scope: !10453)
!10459 = !DILocation(line: 487, column: 3, scope: !10453)
!10460 = !DILocation(line: 0, scope: !10240, inlinedAt: !10461)
!10461 = distinct !DILocation(line: 487, column: 3, scope: !10453)
!10462 = !DILocation(line: 380, column: 4, scope: !10240, inlinedAt: !10461)
!10463 = !DILocation(line: 0, scope: !10248, inlinedAt: !10464)
!10464 = distinct !DILocation(line: 487, column: 3, scope: !10453)
!10465 = !DILocation(line: 414, column: 7, scope: !10248, inlinedAt: !10464)
!10466 = !DILocation(line: 0, scope: !10240, inlinedAt: !10467)
!10467 = distinct !DILocation(line: 487, column: 3, scope: !10453)
!10468 = !DILocation(line: 0, scope: !10248, inlinedAt: !10469)
!10469 = distinct !DILocation(line: 487, column: 3, scope: !10453)
!10470 = !DILocation(line: 488, column: 1, scope: !10453)
!10471 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10300, file: !10300, line: 557, type: !10426, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10472)
!10472 = !{!10473, !10474, !10475}
!10473 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10471, file: !10300, line: 557, type: !1302)
!10474 = !DILocalVariable(name: "Pin", arg: 2, scope: !10471, file: !10300, line: 557, type: !152)
!10475 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10471, file: !10300, line: 557, type: !152)
!10476 = !DILocation(line: 0, scope: !10471)
!10477 = !DILocation(line: 559, column: 3, scope: !10471)
!10478 = !DILocation(line: 0, scope: !10240, inlinedAt: !10479)
!10479 = distinct !DILocation(line: 559, column: 3, scope: !10471)
!10480 = !DILocation(line: 380, column: 4, scope: !10240, inlinedAt: !10479)
!10481 = !DILocation(line: 0, scope: !10248, inlinedAt: !10482)
!10482 = distinct !DILocation(line: 559, column: 3, scope: !10471)
!10483 = !DILocation(line: 414, column: 7, scope: !10248, inlinedAt: !10482)
!10484 = !DILocation(line: 0, scope: !10240, inlinedAt: !10485)
!10485 = distinct !DILocation(line: 559, column: 3, scope: !10471)
!10486 = !DILocation(line: 0, scope: !10248, inlinedAt: !10487)
!10487 = distinct !DILocation(line: 559, column: 3, scope: !10471)
!10488 = !DILocation(line: 561, column: 1, scope: !10471)
!10489 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10300, file: !10300, line: 634, type: !10426, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10490)
!10490 = !{!10491, !10492, !10493}
!10491 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10489, file: !10300, line: 634, type: !1302)
!10492 = !DILocalVariable(name: "Pin", arg: 2, scope: !10489, file: !10300, line: 634, type: !152)
!10493 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10489, file: !10300, line: 634, type: !152)
!10494 = !DILocation(line: 0, scope: !10489)
!10495 = !DILocation(line: 636, column: 3, scope: !10489)
!10496 = !DILocation(line: 0, scope: !10240, inlinedAt: !10497)
!10497 = distinct !DILocation(line: 636, column: 3, scope: !10489)
!10498 = !DILocation(line: 380, column: 4, scope: !10240, inlinedAt: !10497)
!10499 = !DILocation(line: 0, scope: !10248, inlinedAt: !10500)
!10500 = distinct !DILocation(line: 636, column: 3, scope: !10489)
!10501 = !DILocation(line: 414, column: 7, scope: !10248, inlinedAt: !10500)
!10502 = !DILocation(line: 0, scope: !10240, inlinedAt: !10503)
!10503 = distinct !DILocation(line: 636, column: 3, scope: !10489)
!10504 = !DILocation(line: 0, scope: !10248, inlinedAt: !10505)
!10505 = distinct !DILocation(line: 636, column: 3, scope: !10489)
!10506 = !DILocation(line: 638, column: 1, scope: !10489)
!10507 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10300, file: !10300, line: 274, type: !10426, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10508)
!10508 = !{!10509, !10510, !10511}
!10509 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10507, file: !10300, line: 274, type: !1302)
!10510 = !DILocalVariable(name: "Pin", arg: 2, scope: !10507, file: !10300, line: 274, type: !152)
!10511 = !DILocalVariable(name: "Mode", arg: 3, scope: !10507, file: !10300, line: 274, type: !152)
!10512 = !DILocation(line: 0, scope: !10507)
!10513 = !DILocation(line: 276, column: 3, scope: !10507)
!10514 = !DILocation(line: 0, scope: !10240, inlinedAt: !10515)
!10515 = distinct !DILocation(line: 276, column: 3, scope: !10507)
!10516 = !DILocation(line: 380, column: 4, scope: !10240, inlinedAt: !10515)
!10517 = !DILocation(line: 0, scope: !10248, inlinedAt: !10518)
!10518 = distinct !DILocation(line: 276, column: 3, scope: !10507)
!10519 = !DILocation(line: 414, column: 7, scope: !10248, inlinedAt: !10518)
!10520 = !DILocation(line: 0, scope: !10240, inlinedAt: !10521)
!10521 = distinct !DILocation(line: 276, column: 3, scope: !10507)
!10522 = !DILocation(line: 0, scope: !10248, inlinedAt: !10523)
!10523 = distinct !DILocation(line: 276, column: 3, scope: !10507)
!10524 = !DILocation(line: 277, column: 1, scope: !10507)
!10525 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1367, file: !1367, line: 698, type: !1380, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10526)
!10526 = !{!10527, !10528, !10529}
!10527 = !DILocalVariable(name: "dev", arg: 1, scope: !10525, file: !1367, line: 698, type: !1235)
!10528 = !DILocalVariable(name: "data", scope: !10525, file: !1367, line: 700, type: !9951)
!10529 = !DILocalVariable(name: "ret", scope: !10525, file: !1367, line: 701, type: !107)
!10530 = !DILocation(line: 0, scope: !10525)
!10531 = !DILocation(line: 700, column: 38, scope: !10525)
!10532 = !DILocation(line: 703, column: 8, scope: !10525)
!10533 = !DILocation(line: 703, column: 12, scope: !10525)
!10534 = !DILocation(line: 705, column: 7, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10525, file: !1367, line: 705, column: 6)
!10536 = !DILocation(line: 705, column: 6, scope: !10525)
!10537 = !DILocation(line: 722, column: 8, scope: !10525)
!10538 = !DILocation(line: 723, column: 10, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10525, file: !1367, line: 723, column: 6)
!10540 = !DILocation(line: 723, column: 6, scope: !10525)
!10541 = !DILocation(line: 731, column: 1, scope: !10525)
!10542 = distinct !DISubprogram(name: "device_is_ready", scope: !8104, file: !8104, line: 47, type: !10543, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10545)
!10543 = !DISubroutineType(types: !10544)
!10544 = !{!145, !1235}
!10545 = !{!10546}
!10546 = !DILocalVariable(name: "dev", arg: 1, scope: !10542, file: !8104, line: 47, type: !1235)
!10547 = !DILocation(line: 0, scope: !10542)
!10548 = !DILocation(line: 55, column: 2, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10542, file: !8104, line: 55, column: 2)
!10550 = !{i64 2152416439}
!10551 = !DILocation(line: 56, column: 9, scope: !10542)
!10552 = !DILocation(line: 56, column: 2, scope: !10542)
!10553 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1367, file: !1367, line: 270, type: !10554, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10556)
!10554 = !DISubroutineType(types: !10555)
!10555 = !{!107, !1235, !145}
!10556 = !{!10557, !10558, !10559, !10560, !10561}
!10557 = !DILocalVariable(name: "dev", arg: 1, scope: !10553, file: !1367, line: 270, type: !1235)
!10558 = !DILocalVariable(name: "on", arg: 2, scope: !10553, file: !1367, line: 270, type: !145)
!10559 = !DILocalVariable(name: "cfg", scope: !10553, file: !1367, line: 272, type: !9884)
!10560 = !DILocalVariable(name: "ret", scope: !10553, file: !1367, line: 273, type: !107)
!10561 = !DILocalVariable(name: "clk", scope: !10553, file: !1367, line: 278, type: !10186)
!10562 = !DILocation(line: 0, scope: !10553)
!10563 = !DILocation(line: 272, column: 45, scope: !10553)
!10564 = !DILocation(line: 282, column: 38, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10566, file: !1367, line: 280, column: 10)
!10566 = distinct !DILexicalBlock(scope: !10553, file: !1367, line: 280, column: 6)
!10567 = !DILocation(line: 282, column: 6, scope: !10565)
!10568 = !DILocation(line: 281, column: 9, scope: !10565)
!10569 = !DILocation(line: 293, column: 1, scope: !10553)
!10570 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !10543, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10571)
!10571 = !{!10572}
!10572 = !DILocalVariable(name: "dev", arg: 1, scope: !10570, file: !260, line: 730, type: !1235)
!10573 = !DILocation(line: 0, scope: !10570)
!10574 = !DILocation(line: 732, column: 9, scope: !10570)
!10575 = !DILocation(line: 732, column: 2, scope: !10570)
!10576 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1367, file: !1367, line: 496, type: !10577, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10579)
!10577 = !DISubroutineType(types: !10578)
!10578 = !{!107, !1235, !107, !107, !107}
!10579 = !{!10580, !10581, !10582, !10583, !10584, !10585}
!10580 = !DILocalVariable(name: "dev", arg: 1, scope: !10576, file: !1367, line: 496, type: !1235)
!10581 = !DILocalVariable(name: "pin", arg: 2, scope: !10576, file: !1367, line: 496, type: !107)
!10582 = !DILocalVariable(name: "conf", arg: 3, scope: !10576, file: !1367, line: 496, type: !107)
!10583 = !DILocalVariable(name: "func", arg: 4, scope: !10576, file: !1367, line: 496, type: !107)
!10584 = !DILocalVariable(name: "ret", scope: !10576, file: !1367, line: 498, type: !107)
!10585 = !DILocalVariable(name: "gpio_out", scope: !10586, file: !1367, line: 508, type: !152)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !1367, line: 507, column: 27)
!10587 = distinct !DILexicalBlock(scope: !10576, file: !1367, line: 507, column: 6)
!10588 = !DILocation(line: 0, scope: !10576)
!10589 = !DILocation(line: 505, column: 2, scope: !10576)
!10590 = !DILocation(line: 507, column: 11, scope: !10587)
!10591 = !DILocation(line: 507, column: 6, scope: !10576)
!10592 = !DILocation(line: 508, column: 28, scope: !10586)
!10593 = !DILocation(line: 0, scope: !10586)
!10594 = !DILocation(line: 510, column: 16, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10586, file: !1367, line: 510, column: 7)
!10596 = !DILocation(line: 0, scope: !10595)
!10597 = !DILocation(line: 510, column: 7, scope: !10586)
!10598 = !DILocation(line: 511, column: 4, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10595, file: !1367, line: 510, column: 32)
!10600 = !DILocation(line: 512, column: 3, scope: !10599)
!10601 = !DILocation(line: 513, column: 4, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !1367, line: 512, column: 39)
!10603 = distinct !DILexicalBlock(scope: !10595, file: !1367, line: 512, column: 14)
!10604 = !DILocation(line: 514, column: 3, scope: !10602)
!10605 = !DILocation(line: 518, column: 1, scope: !10576)
!10606 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1624, file: !1624, line: 526, type: !1528, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10607)
!10607 = !{!10608, !10609, !10610}
!10608 = !DILocalVariable(name: "dev", arg: 1, scope: !10606, file: !1624, line: 526, type: !1530)
!10609 = !DILocalVariable(name: "c", arg: 2, scope: !10606, file: !1624, line: 526, type: !1178)
!10610 = !DILocalVariable(name: "config", scope: !10606, file: !1624, line: 528, type: !10611)
!10611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!10612 = !DILocation(line: 0, scope: !10606)
!10613 = !DILocation(line: 528, column: 48, scope: !10606)
!10614 = !DILocation(line: 531, column: 40, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10606, file: !1624, line: 531, column: 6)
!10616 = !DILocation(line: 531, column: 6, scope: !10615)
!10617 = !DILocation(line: 531, column: 6, scope: !10606)
!10618 = !DILocation(line: 532, column: 34, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10615, file: !1624, line: 531, column: 48)
!10620 = !DILocation(line: 532, column: 3, scope: !10619)
!10621 = !DILocation(line: 533, column: 2, scope: !10619)
!10622 = !DILocation(line: 539, column: 42, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10606, file: !1624, line: 539, column: 6)
!10624 = !DILocation(line: 539, column: 7, scope: !10623)
!10625 = !DILocation(line: 539, column: 6, scope: !10606)
!10626 = !DILocation(line: 543, column: 52, scope: !10606)
!10627 = !DILocation(line: 543, column: 22, scope: !10606)
!10628 = !DILocation(line: 543, column: 5, scope: !10606)
!10629 = !DILocation(line: 545, column: 2, scope: !10606)
!10630 = !DILocation(line: 546, column: 1, scope: !10606)
!10631 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1624, file: !1624, line: 548, type: !1547, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10632)
!10632 = !{!10633, !10634, !10635, !10636}
!10633 = !DILocalVariable(name: "dev", arg: 1, scope: !10631, file: !1624, line: 548, type: !1530)
!10634 = !DILocalVariable(name: "c", arg: 2, scope: !10631, file: !1624, line: 549, type: !196)
!10635 = !DILocalVariable(name: "config", scope: !10631, file: !1624, line: 551, type: !10611)
!10636 = !DILocalVariable(name: "key", scope: !10631, file: !1624, line: 555, type: !32)
!10637 = !DILocation(line: 0, scope: !10631)
!10638 = !DILocation(line: 551, column: 48, scope: !10631)
!10639 = !DILocation(line: 562, column: 2, scope: !10631)
!10640 = !DILocation(line: 563, column: 41, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10642, file: !1624, line: 563, column: 7)
!10642 = distinct !DILexicalBlock(scope: !10631, file: !1624, line: 562, column: 12)
!10643 = !DILocation(line: 563, column: 7, scope: !10641)
!10644 = !DILocation(line: 563, column: 7, scope: !10642)
!10645 = !DILocation(line: 55, column: 2, scope: !10646, inlinedAt: !10650)
!10646 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10647)
!10647 = !{!10648, !10649}
!10648 = !DILocalVariable(name: "key", scope: !10646, file: !5884, line: 44, type: !32)
!10649 = !DILocalVariable(name: "tmp", scope: !10646, file: !5884, line: 53, type: !32)
!10650 = distinct !DILocation(line: 564, column: 10, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10641, file: !1624, line: 563, column: 49)
!10652 = !{i64 1702498}
!10653 = !DILocation(line: 0, scope: !10646, inlinedAt: !10650)
!10654 = !DILocation(line: 565, column: 42, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10651, file: !1624, line: 565, column: 8)
!10656 = !DILocation(line: 565, column: 8, scope: !10655)
!10657 = !DILocation(line: 565, column: 8, scope: !10651)
!10658 = !DILocalVariable(name: "key", arg: 1, scope: !10659, file: !5884, line: 84, type: !32)
!10659 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10660)
!10660 = !{!10658}
!10661 = !DILocation(line: 0, scope: !10659, inlinedAt: !10662)
!10662 = distinct !DILocation(line: 568, column: 4, scope: !10651)
!10663 = !DILocation(line: 95, column: 2, scope: !10659, inlinedAt: !10662)
!10664 = !{i64 1703315}
!10665 = !DILocation(line: 569, column: 3, scope: !10651)
!10666 = distinct !{!10666, !10639, !10667}
!10667 = !DILocation(line: 570, column: 2, scope: !10631)
!10668 = !DILocation(line: 592, column: 33, scope: !10631)
!10669 = !DILocation(line: 592, column: 2, scope: !10631)
!10670 = !DILocation(line: 0, scope: !10659, inlinedAt: !10671)
!10671 = distinct !DILocation(line: 593, column: 2, scope: !10631)
!10672 = !DILocation(line: 95, column: 2, scope: !10659, inlinedAt: !10671)
!10673 = !DILocation(line: 594, column: 1, scope: !10631)
!10674 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1624, file: !1624, line: 596, type: !1551, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10675)
!10675 = !{!10676, !10677, !10678}
!10676 = !DILocalVariable(name: "dev", arg: 1, scope: !10674, file: !1624, line: 596, type: !1530)
!10677 = !DILocalVariable(name: "config", scope: !10674, file: !1624, line: 598, type: !10611)
!10678 = !DILocalVariable(name: "err", scope: !10674, file: !1624, line: 599, type: !152)
!10679 = !DILocation(line: 0, scope: !10674)
!10680 = !DILocation(line: 598, column: 48, scope: !10674)
!10681 = !DILocation(line: 606, column: 40, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10674, file: !1624, line: 606, column: 6)
!10683 = !DILocation(line: 606, column: 6, scope: !10682)
!10684 = !DILocation(line: 606, column: 6, scope: !10674)
!10685 = !DILocation(line: 610, column: 39, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10674, file: !1624, line: 610, column: 6)
!10687 = !DILocation(line: 610, column: 6, scope: !10686)
!10688 = !DILocation(line: 610, column: 6, scope: !10674)
!10689 = !DILocation(line: 614, column: 39, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10674, file: !1624, line: 614, column: 6)
!10691 = !DILocation(line: 614, column: 6, scope: !10690)
!10692 = !DILocation(line: 614, column: 6, scope: !10674)
!10693 = !DILocation(line: 619, column: 40, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10674, file: !1624, line: 619, column: 6)
!10695 = !DILocation(line: 619, column: 6, scope: !10694)
!10696 = !DILocation(line: 619, column: 6, scope: !10674)
!10697 = !DILocation(line: 623, column: 10, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10674, file: !1624, line: 623, column: 6)
!10699 = !DILocation(line: 623, column: 6, scope: !10674)
!10700 = !DILocation(line: 624, column: 34, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10698, file: !1624, line: 623, column: 24)
!10702 = !DILocation(line: 624, column: 3, scope: !10701)
!10703 = !DILocation(line: 625, column: 2, scope: !10701)
!10704 = !DILocation(line: 632, column: 10, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10674, file: !1624, line: 632, column: 6)
!10706 = !DILocation(line: 632, column: 6, scope: !10674)
!10707 = !DILocation(line: 633, column: 34, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10705, file: !1624, line: 632, column: 32)
!10709 = !DILocation(line: 633, column: 3, scope: !10708)
!10710 = !DILocation(line: 634, column: 2, scope: !10708)
!10711 = !DILocation(line: 636, column: 10, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10674, file: !1624, line: 636, column: 6)
!10713 = !DILocation(line: 636, column: 6, scope: !10674)
!10714 = !DILocation(line: 637, column: 33, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10712, file: !1624, line: 636, column: 31)
!10716 = !DILocation(line: 637, column: 3, scope: !10715)
!10717 = !DILocation(line: 638, column: 2, scope: !10715)
!10718 = !DILocation(line: 640, column: 10, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10674, file: !1624, line: 640, column: 6)
!10720 = !DILocation(line: 640, column: 6, scope: !10674)
!10721 = !DILocation(line: 641, column: 33, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10719, file: !1624, line: 640, column: 32)
!10723 = !DILocation(line: 641, column: 3, scope: !10722)
!10724 = !DILocation(line: 642, column: 2, scope: !10722)
!10725 = !DILocation(line: 646, column: 32, scope: !10674)
!10726 = !DILocation(line: 646, column: 2, scope: !10674)
!10727 = !DILocation(line: 648, column: 2, scope: !10674)
!10728 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1624, file: !1624, line: 419, type: !1555, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10729)
!10729 = !{!10730, !10731, !10732, !10733, !10735, !10736, !10737, !10738}
!10730 = !DILocalVariable(name: "dev", arg: 1, scope: !10728, file: !1624, line: 419, type: !1530)
!10731 = !DILocalVariable(name: "cfg", arg: 2, scope: !10728, file: !1624, line: 420, type: !1557)
!10732 = !DILocalVariable(name: "config", scope: !10728, file: !1624, line: 422, type: !10611)
!10733 = !DILocalVariable(name: "data", scope: !10728, file: !1624, line: 423, type: !10734)
!10734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!10735 = !DILocalVariable(name: "parity", scope: !10728, file: !1624, line: 424, type: !6472)
!10736 = !DILocalVariable(name: "stopbits", scope: !10728, file: !1624, line: 425, type: !6472)
!10737 = !DILocalVariable(name: "databits", scope: !10728, file: !1624, line: 426, type: !6472)
!10738 = !DILocalVariable(name: "flowctrl", scope: !10728, file: !1624, line: 428, type: !6472)
!10739 = !DILocation(line: 0, scope: !10728)
!10740 = !DILocation(line: 422, column: 48, scope: !10728)
!10741 = !DILocation(line: 423, column: 38, scope: !10728)
!10742 = !DILocation(line: 424, column: 56, scope: !10728)
!10743 = !DILocation(line: 424, column: 51, scope: !10728)
!10744 = !DILocation(line: 424, column: 26, scope: !10728)
!10745 = !DILocation(line: 425, column: 60, scope: !10728)
!10746 = !DILocation(line: 425, column: 55, scope: !10728)
!10747 = !DILocation(line: 425, column: 28, scope: !10728)
!10748 = !DILocation(line: 426, column: 60, scope: !10728)
!10749 = !DILocation(line: 426, column: 55, scope: !10728)
!10750 = !DILocation(line: 426, column: 28, scope: !10728)
!10751 = !DILocation(line: 428, column: 58, scope: !10728)
!10752 = !DILocation(line: 428, column: 53, scope: !10728)
!10753 = !DILocation(line: 428, column: 28, scope: !10728)
!10754 = !DILocation(line: 431, column: 44, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 431, column: 6)
!10756 = !DILocation(line: 438, column: 22, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 437, column: 6)
!10758 = !DILocation(line: 437, column: 6, scope: !10728)
!10759 = !DILocation(line: 448, column: 6, scope: !10728)
!10760 = !DILocation(line: 465, column: 47, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 465, column: 6)
!10762 = !DILocation(line: 475, column: 21, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 475, column: 6)
!10764 = !DILocation(line: 475, column: 6, scope: !10728)
!10765 = !DILocation(line: 476, column: 8, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !1624, line: 476, column: 7)
!10767 = distinct !DILexicalBlock(scope: !10763, file: !1624, line: 475, column: 49)
!10768 = !DILocation(line: 477, column: 34, scope: !10766)
!10769 = !DILocation(line: 476, column: 7, scope: !10767)
!10770 = !DILocation(line: 482, column: 27, scope: !10728)
!10771 = !DILocation(line: 482, column: 2, scope: !10728)
!10772 = !DILocation(line: 484, column: 16, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 484, column: 6)
!10774 = !DILocation(line: 484, column: 13, scope: !10773)
!10775 = !DILocation(line: 484, column: 6, scope: !10728)
!10776 = !DILocation(line: 485, column: 3, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10773, file: !1624, line: 484, column: 44)
!10778 = !DILocation(line: 486, column: 2, scope: !10777)
!10779 = !DILocation(line: 488, column: 18, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 488, column: 6)
!10781 = !DILocation(line: 488, column: 15, scope: !10780)
!10782 = !DILocation(line: 488, column: 6, scope: !10728)
!10783 = !DILocation(line: 489, column: 3, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10780, file: !1624, line: 488, column: 48)
!10785 = !DILocation(line: 490, column: 2, scope: !10784)
!10786 = !DILocation(line: 492, column: 18, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 492, column: 6)
!10788 = !DILocation(line: 492, column: 15, scope: !10787)
!10789 = !DILocation(line: 492, column: 6, scope: !10728)
!10790 = !DILocation(line: 493, column: 3, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10787, file: !1624, line: 492, column: 48)
!10792 = !DILocation(line: 494, column: 2, scope: !10791)
!10793 = !DILocation(line: 496, column: 18, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 496, column: 6)
!10795 = !DILocation(line: 496, column: 15, scope: !10794)
!10796 = !DILocation(line: 496, column: 6, scope: !10728)
!10797 = !DILocation(line: 497, column: 3, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10794, file: !1624, line: 496, column: 46)
!10799 = !DILocation(line: 498, column: 2, scope: !10798)
!10800 = !DILocation(line: 500, column: 11, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10728, file: !1624, line: 500, column: 6)
!10802 = !DILocation(line: 500, column: 29, scope: !10801)
!10803 = !DILocation(line: 500, column: 20, scope: !10801)
!10804 = !DILocation(line: 500, column: 6, scope: !10728)
!10805 = !DILocation(line: 501, column: 3, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10801, file: !1624, line: 500, column: 40)
!10807 = !DILocation(line: 502, column: 26, scope: !10806)
!10808 = !DILocation(line: 502, column: 19, scope: !10806)
!10809 = !DILocation(line: 503, column: 2, scope: !10806)
!10810 = !DILocation(line: 505, column: 26, scope: !10728)
!10811 = !DILocation(line: 505, column: 2, scope: !10728)
!10812 = !DILocation(line: 506, column: 2, scope: !10728)
!10813 = !DILocation(line: 507, column: 1, scope: !10728)
!10814 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1624, file: !1624, line: 509, type: !1568, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10815)
!10815 = !{!10816, !10817, !10818}
!10816 = !DILocalVariable(name: "dev", arg: 1, scope: !10814, file: !1624, line: 509, type: !1530)
!10817 = !DILocalVariable(name: "cfg", arg: 2, scope: !10814, file: !1624, line: 510, type: !1570)
!10818 = !DILocalVariable(name: "data", scope: !10814, file: !1624, line: 512, type: !10734)
!10819 = !DILocation(line: 0, scope: !10814)
!10820 = !DILocation(line: 512, column: 38, scope: !10814)
!10821 = !DILocation(line: 514, column: 24, scope: !10814)
!10822 = !DILocation(line: 514, column: 7, scope: !10814)
!10823 = !DILocation(line: 514, column: 16, scope: !10814)
!10824 = !DILocation(line: 515, column: 41, scope: !10814)
!10825 = !{i32 0, i32 1537}
!10826 = !DILocation(line: 515, column: 16, scope: !10814)
!10827 = !DILocation(line: 515, column: 7, scope: !10814)
!10828 = !DILocation(line: 515, column: 14, scope: !10814)
!10829 = !DILocation(line: 517, column: 3, scope: !10814)
!10830 = !{i32 0, i32 12289}
!10831 = !DILocation(line: 516, column: 19, scope: !10814)
!10832 = !DILocation(line: 516, column: 7, scope: !10814)
!10833 = !DILocation(line: 516, column: 17, scope: !10814)
!10834 = !DILocation(line: 519, column: 3, scope: !10814)
!10835 = !DILocation(line: 519, column: 33, scope: !10814)
!10836 = !DILocation(line: 518, column: 19, scope: !10814)
!10837 = !DILocation(line: 518, column: 7, scope: !10814)
!10838 = !DILocation(line: 518, column: 17, scope: !10814)
!10839 = !DILocation(line: 521, column: 3, scope: !10814)
!10840 = !{i32 0, i32 769}
!10841 = !DILocation(line: 520, column: 19, scope: !10814)
!10842 = !DILocation(line: 520, column: 7, scope: !10814)
!10843 = !DILocation(line: 520, column: 17, scope: !10814)
!10844 = !DILocation(line: 522, column: 2, scope: !10814)
!10845 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1624, file: !1624, line: 205, type: !10846, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10848)
!10846 = !DISubroutineType(types: !10847)
!10847 = !{!152, !1530}
!10848 = !{!10849, !10850}
!10849 = !DILocalVariable(name: "dev", arg: 1, scope: !10845, file: !1624, line: 205, type: !1530)
!10850 = !DILocalVariable(name: "config", scope: !10845, file: !1624, line: 207, type: !10611)
!10851 = !DILocation(line: 0, scope: !10845)
!10852 = !DILocation(line: 207, column: 48, scope: !10845)
!10853 = !DILocation(line: 209, column: 36, scope: !10845)
!10854 = !DILocation(line: 209, column: 9, scope: !10845)
!10855 = !DILocation(line: 209, column: 2, scope: !10845)
!10856 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1624, file: !1624, line: 270, type: !10857, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10859)
!10857 = !DISubroutineType(types: !10858)
!10858 = !{!1496, !152}
!10859 = !{!10860}
!10860 = !DILocalVariable(name: "parity", arg: 1, scope: !10856, file: !1624, line: 270, type: !152)
!10861 = !DILocation(line: 0, scope: !10856)
!10862 = !DILocation(line: 272, column: 2, scope: !10856)
!10863 = !DILocation(line: 281, column: 1, scope: !10856)
!10864 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1624, file: !1624, line: 220, type: !10846, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10865)
!10865 = !{!10866, !10867}
!10866 = !DILocalVariable(name: "dev", arg: 1, scope: !10864, file: !1624, line: 220, type: !1530)
!10867 = !DILocalVariable(name: "config", scope: !10864, file: !1624, line: 222, type: !10611)
!10868 = !DILocation(line: 0, scope: !10864)
!10869 = !DILocation(line: 222, column: 48, scope: !10864)
!10870 = !DILocation(line: 224, column: 44, scope: !10864)
!10871 = !DILocation(line: 224, column: 9, scope: !10864)
!10872 = !DILocation(line: 224, column: 2, scope: !10864)
!10873 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1624, file: !1624, line: 304, type: !10874, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10876)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{!1510, !152}
!10876 = !{!10877}
!10877 = !DILocalVariable(name: "sb", arg: 1, scope: !10873, file: !1624, line: 304, type: !152)
!10878 = !DILocation(line: 0, scope: !10873)
!10879 = !DILocation(line: 306, column: 2, scope: !10873)
!10880 = !DILocation(line: 0, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10873, file: !1624, line: 306, column: 14)
!10882 = !DILocation(line: 323, column: 1, scope: !10873)
!10883 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1624, file: !1624, line: 235, type: !10846, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10884)
!10884 = !{!10885, !10886}
!10885 = !DILocalVariable(name: "dev", arg: 1, scope: !10883, file: !1624, line: 235, type: !1530)
!10886 = !DILocalVariable(name: "config", scope: !10883, file: !1624, line: 237, type: !10611)
!10887 = !DILocation(line: 0, scope: !10883)
!10888 = !DILocation(line: 237, column: 48, scope: !10883)
!10889 = !DILocation(line: 239, column: 39, scope: !10883)
!10890 = !DILocation(line: 239, column: 9, scope: !10883)
!10891 = !DILocation(line: 239, column: 2, scope: !10883)
!10892 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1624, file: !1624, line: 355, type: !10893, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10895)
!10893 = !DISubroutineType(types: !10894)
!10894 = !{!1503, !152, !152}
!10895 = !{!10896, !10897}
!10896 = !DILocalVariable(name: "db", arg: 1, scope: !10892, file: !1624, line: 355, type: !152)
!10897 = !DILocalVariable(name: "p", arg: 2, scope: !10892, file: !1624, line: 356, type: !152)
!10898 = !DILocation(line: 0, scope: !10892)
!10899 = !DILocation(line: 358, column: 2, scope: !10892)
!10900 = !DILocation(line: 384, column: 1, scope: !10892)
!10901 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1624, file: !1624, line: 250, type: !10846, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10902)
!10902 = !{!10903, !10904}
!10903 = !DILocalVariable(name: "dev", arg: 1, scope: !10901, file: !1624, line: 250, type: !1530)
!10904 = !DILocalVariable(name: "config", scope: !10901, file: !1624, line: 252, type: !10611)
!10905 = !DILocation(line: 0, scope: !10901)
!10906 = !DILocation(line: 252, column: 48, scope: !10901)
!10907 = !DILocation(line: 254, column: 40, scope: !10901)
!10908 = !DILocation(line: 254, column: 9, scope: !10901)
!10909 = !DILocation(line: 254, column: 2, scope: !10901)
!10910 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1624, file: !1624, line: 409, type: !10911, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10913)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!1516, !152}
!10913 = !{!10914}
!10914 = !DILocalVariable(name: "fc", arg: 1, scope: !10910, file: !1624, line: 409, type: !152)
!10915 = !DILocation(line: 0, scope: !10910)
!10916 = !DILocation(line: 411, column: 9, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10910, file: !1624, line: 411, column: 6)
!10918 = !DILocation(line: 416, column: 1, scope: !10910)
!10919 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10920, file: !10920, line: 966, type: !10921, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10923)
!10920 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10921 = !DISubroutineType(types: !10922)
!10922 = !{!152, !1571}
!10923 = !{!10924}
!10924 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10919, file: !10920, line: 966, type: !1571)
!10925 = !DILocation(line: 0, scope: !10919)
!10926 = !DILocation(line: 968, column: 21, scope: !10919)
!10927 = !DILocation(line: 968, column: 3, scope: !10919)
!10928 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10920, file: !10920, line: 600, type: !10921, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10929)
!10929 = !{!10930}
!10930 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10928, file: !10920, line: 600, type: !1571)
!10931 = !DILocation(line: 0, scope: !10928)
!10932 = !DILocation(line: 602, column: 21, scope: !10928)
!10933 = !DILocation(line: 602, column: 3, scope: !10928)
!10934 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10920, file: !10920, line: 819, type: !10921, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10935)
!10935 = !{!10936}
!10936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10934, file: !10920, line: 819, type: !1571)
!10937 = !DILocation(line: 0, scope: !10934)
!10938 = !DILocation(line: 821, column: 21, scope: !10934)
!10939 = !DILocation(line: 821, column: 3, scope: !10934)
!10940 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10920, file: !10920, line: 546, type: !10921, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10941)
!10941 = !{!10942}
!10942 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10940, file: !10920, line: 546, type: !1571)
!10943 = !DILocation(line: 0, scope: !10940)
!10944 = !DILocation(line: 548, column: 21, scope: !10940)
!10945 = !DILocation(line: 548, column: 3, scope: !10940)
!10946 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1624, file: !1624, line: 257, type: !10947, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10949)
!10947 = !DISubroutineType(types: !10948)
!10948 = !{!152, !1496}
!10949 = !{!10950}
!10950 = !DILocalVariable(name: "parity", arg: 1, scope: !10946, file: !1624, line: 257, type: !1496)
!10951 = !DILocation(line: 0, scope: !10946)
!10952 = !DILocation(line: 259, column: 2, scope: !10946)
!10953 = !DILocation(line: 268, column: 1, scope: !10946)
!10954 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1624, file: !1624, line: 283, type: !10955, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10957)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{!152, !1510}
!10957 = !{!10958}
!10958 = !DILocalVariable(name: "sb", arg: 1, scope: !10954, file: !1624, line: 283, type: !1510)
!10959 = !DILocation(line: 0, scope: !10954)
!10960 = !DILocation(line: 285, column: 2, scope: !10954)
!10961 = !DILocation(line: 0, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10954, file: !1624, line: 285, column: 14)
!10963 = !DILocation(line: 302, column: 1, scope: !10954)
!10964 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1624, file: !1624, line: 325, type: !10965, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10967)
!10965 = !DISubroutineType(types: !10966)
!10966 = !{!152, !1503, !1496}
!10967 = !{!10968, !10969}
!10968 = !DILocalVariable(name: "db", arg: 1, scope: !10964, file: !1624, line: 325, type: !1503)
!10969 = !DILocalVariable(name: "p", arg: 2, scope: !10964, file: !1624, line: 326, type: !1496)
!10970 = !DILocation(line: 0, scope: !10964)
!10971 = !DILocation(line: 328, column: 2, scope: !10964)
!10972 = !DILocation(line: 353, column: 1, scope: !10964)
!10973 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1624, file: !1624, line: 393, type: !10974, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10976)
!10974 = !DISubroutineType(types: !10975)
!10975 = !{!152, !1516}
!10976 = !{!10977}
!10977 = !DILocalVariable(name: "fc", arg: 1, scope: !10973, file: !1624, line: 393, type: !1516)
!10978 = !DILocation(line: 0, scope: !10973)
!10979 = !DILocation(line: 395, column: 9, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10973, file: !1624, line: 395, column: 6)
!10981 = !DILocation(line: 400, column: 1, scope: !10973)
!10982 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10920, file: !10920, line: 423, type: !10983, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10985)
!10983 = !DISubroutineType(types: !10984)
!10984 = !{null, !1571}
!10985 = !{!10986}
!10986 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10982, file: !10920, line: 423, type: !1571)
!10987 = !DILocation(line: 0, scope: !10982)
!10988 = !DILocation(line: 425, column: 3, scope: !10982)
!10989 = !DILocation(line: 426, column: 1, scope: !10982)
!10990 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1624, file: !1624, line: 197, type: !10991, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10993)
!10991 = !DISubroutineType(types: !10992)
!10992 = !{null, !1530, !152}
!10993 = !{!10994, !10995, !10996}
!10994 = !DILocalVariable(name: "dev", arg: 1, scope: !10990, file: !1624, line: 197, type: !1530)
!10995 = !DILocalVariable(name: "parity", arg: 2, scope: !10990, file: !1624, line: 198, type: !152)
!10996 = !DILocalVariable(name: "config", scope: !10990, file: !1624, line: 200, type: !10611)
!10997 = !DILocation(line: 0, scope: !10990)
!10998 = !DILocation(line: 200, column: 48, scope: !10990)
!10999 = !DILocation(line: 202, column: 29, scope: !10990)
!11000 = !DILocation(line: 202, column: 2, scope: !10990)
!11001 = !DILocation(line: 203, column: 1, scope: !10990)
!11002 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1624, file: !1624, line: 212, type: !10991, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11003)
!11003 = !{!11004, !11005, !11006}
!11004 = !DILocalVariable(name: "dev", arg: 1, scope: !11002, file: !1624, line: 212, type: !1530)
!11005 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11002, file: !1624, line: 213, type: !152)
!11006 = !DILocalVariable(name: "config", scope: !11002, file: !1624, line: 215, type: !10611)
!11007 = !DILocation(line: 0, scope: !11002)
!11008 = !DILocation(line: 215, column: 48, scope: !11002)
!11009 = !DILocation(line: 217, column: 37, scope: !11002)
!11010 = !DILocation(line: 217, column: 2, scope: !11002)
!11011 = !DILocation(line: 218, column: 1, scope: !11002)
!11012 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1624, file: !1624, line: 227, type: !10991, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11013)
!11013 = !{!11014, !11015, !11016}
!11014 = !DILocalVariable(name: "dev", arg: 1, scope: !11012, file: !1624, line: 227, type: !1530)
!11015 = !DILocalVariable(name: "databits", arg: 2, scope: !11012, file: !1624, line: 228, type: !152)
!11016 = !DILocalVariable(name: "config", scope: !11012, file: !1624, line: 230, type: !10611)
!11017 = !DILocation(line: 0, scope: !11012)
!11018 = !DILocation(line: 230, column: 48, scope: !11012)
!11019 = !DILocation(line: 232, column: 32, scope: !11012)
!11020 = !DILocation(line: 232, column: 2, scope: !11012)
!11021 = !DILocation(line: 233, column: 1, scope: !11012)
!11022 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1624, file: !1624, line: 242, type: !10991, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11023)
!11023 = !{!11024, !11025, !11026}
!11024 = !DILocalVariable(name: "dev", arg: 1, scope: !11022, file: !1624, line: 242, type: !1530)
!11025 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11022, file: !1624, line: 243, type: !152)
!11026 = !DILocalVariable(name: "config", scope: !11022, file: !1624, line: 245, type: !10611)
!11027 = !DILocation(line: 0, scope: !11022)
!11028 = !DILocation(line: 245, column: 48, scope: !11022)
!11029 = !DILocation(line: 247, column: 33, scope: !11022)
!11030 = !DILocation(line: 247, column: 2, scope: !11022)
!11031 = !DILocation(line: 248, column: 1, scope: !11022)
!11032 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1624, file: !1624, line: 107, type: !10991, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11033)
!11033 = !{!11034, !11035, !11036, !11037, !11038}
!11034 = !DILocalVariable(name: "dev", arg: 1, scope: !11032, file: !1624, line: 107, type: !1530)
!11035 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11032, file: !1624, line: 107, type: !152)
!11036 = !DILocalVariable(name: "config", scope: !11032, file: !1624, line: 109, type: !10611)
!11037 = !DILocalVariable(name: "data", scope: !11032, file: !1624, line: 110, type: !10734)
!11038 = !DILocalVariable(name: "clock_rate", scope: !11032, file: !1624, line: 112, type: !152)
!11039 = !DILocation(line: 0, scope: !11032)
!11040 = !DILocation(line: 109, column: 48, scope: !11032)
!11041 = !DILocation(line: 110, column: 38, scope: !11032)
!11042 = !DILocation(line: 112, column: 2, scope: !11032)
!11043 = !DILocation(line: 123, column: 36, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !1624, line: 123, column: 7)
!11045 = distinct !DILexicalBlock(scope: !11046, file: !1624, line: 122, column: 9)
!11046 = distinct !DILexicalBlock(scope: !11032, file: !1624, line: 115, column: 6)
!11047 = !DILocation(line: 124, column: 42, scope: !11044)
!11048 = !DILocation(line: 123, column: 7, scope: !11044)
!11049 = !DILocation(line: 125, column: 22, scope: !11044)
!11050 = !DILocation(line: 123, column: 7, scope: !11045)
!11051 = !DILocation(line: 126, column: 4, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !1624, line: 126, column: 4)
!11053 = distinct !DILexicalBlock(scope: !11054, file: !1624, line: 126, column: 4)
!11054 = distinct !DILexicalBlock(scope: !11055, file: !1624, line: 126, column: 4)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !1624, line: 126, column: 4)
!11056 = distinct !DILexicalBlock(scope: !11044, file: !1624, line: 125, column: 27)
!11057 = !DILocation(line: 127, column: 4, scope: !11056)
!11058 = !DILocation(line: 176, column: 36, scope: !11032)
!11059 = !DILocation(line: 176, column: 3, scope: !11032)
!11060 = !DILocation(line: 179, column: 32, scope: !11032)
!11061 = !DILocation(line: 180, column: 10, scope: !11032)
!11062 = !DILocation(line: 179, column: 3, scope: !11032)
!11063 = !DILocation(line: 189, column: 3, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !1624, line: 189, column: 3)
!11065 = distinct !DILexicalBlock(scope: !11032, file: !1624, line: 189, column: 3)
!11066 = !DILocation(line: 189, column: 3, scope: !11065)
!11067 = !DILocation(line: 189, column: 3, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11064, file: !1624, line: 189, column: 3)
!11069 = !DILocation(line: 195, column: 1, scope: !11032)
!11070 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10920, file: !10920, line: 409, type: !10983, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11071)
!11071 = !{!11072}
!11072 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11070, file: !10920, line: 409, type: !1571)
!11073 = !DILocation(line: 0, scope: !11070)
!11074 = !DILocation(line: 411, column: 3, scope: !11070)
!11075 = !DILocation(line: 412, column: 1, scope: !11070)
!11076 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1044, file: !1044, line: 216, type: !1604, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11077)
!11077 = !{!11078, !11079, !11080, !11081}
!11078 = !DILocalVariable(name: "dev", arg: 1, scope: !11076, file: !1044, line: 216, type: !1530)
!11079 = !DILocalVariable(name: "sys", arg: 2, scope: !11076, file: !1044, line: 217, type: !1117)
!11080 = !DILocalVariable(name: "rate", arg: 3, scope: !11076, file: !1044, line: 218, type: !1075)
!11081 = !DILocalVariable(name: "api", scope: !11076, file: !1044, line: 220, type: !1582)
!11082 = !DILocation(line: 0, scope: !11076)
!11083 = !DILocation(line: 221, column: 49, scope: !11076)
!11084 = !DILocation(line: 223, column: 11, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11076, file: !1044, line: 223, column: 6)
!11086 = !DILocation(line: 223, column: 20, scope: !11085)
!11087 = !DILocation(line: 223, column: 6, scope: !11076)
!11088 = !DILocation(line: 227, column: 9, scope: !11076)
!11089 = !DILocation(line: 227, column: 2, scope: !11076)
!11090 = !DILocation(line: 228, column: 1, scope: !11076)
!11091 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5979, file: !5979, line: 175, type: !5980, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11092)
!11092 = !{!11093}
!11093 = !DILocalVariable(name: "level", arg: 1, scope: !11091, file: !5979, line: 175, type: !107)
!11094 = !DILocation(line: 0, scope: !11091)
!11095 = !DILocation(line: 177, column: 2, scope: !11091)
!11096 = !DILocation(line: 189, column: 1, scope: !11091)
!11097 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10920, file: !10920, line: 614, type: !11098, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11100)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{null, !1571, !152}
!11100 = !{!11101, !11102}
!11101 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11097, file: !10920, line: 614, type: !1571)
!11102 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11097, file: !10920, line: 614, type: !152)
!11103 = !DILocation(line: 0, scope: !11097)
!11104 = !DILocation(line: 616, column: 3, scope: !11097)
!11105 = !DILocation(line: 617, column: 1, scope: !11097)
!11106 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10920, file: !10920, line: 1019, type: !11107, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11109)
!11107 = !DISubroutineType(types: !11108)
!11108 = !{null, !1571, !152, !152, !152}
!11109 = !{!11110, !11111, !11112, !11113}
!11110 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11106, file: !10920, line: 1019, type: !1571)
!11111 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11106, file: !10920, line: 1019, type: !152)
!11112 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11106, file: !10920, line: 1019, type: !152)
!11113 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11106, file: !10920, line: 1020, type: !152)
!11114 = !DILocation(line: 0, scope: !11106)
!11115 = !DILocation(line: 1028, column: 30, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !10920, line: 1027, column: 3)
!11117 = distinct !DILexicalBlock(scope: !11106, file: !10920, line: 1022, column: 7)
!11118 = !DILocation(line: 1028, column: 19, scope: !11116)
!11119 = !DILocation(line: 1028, column: 13, scope: !11116)
!11120 = !DILocation(line: 1028, column: 17, scope: !11116)
!11121 = !DILocation(line: 1030, column: 1, scope: !11106)
!11122 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10920, file: !10920, line: 948, type: !11098, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11123)
!11123 = !{!11124, !11125}
!11124 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11122, file: !10920, line: 948, type: !1571)
!11125 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11122, file: !10920, line: 948, type: !152)
!11126 = !DILocation(line: 0, scope: !11122)
!11127 = !DILocation(line: 950, column: 3, scope: !11122)
!11128 = !DILocation(line: 951, column: 1, scope: !11122)
!11129 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10920, file: !10920, line: 587, type: !11098, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11130)
!11130 = !{!11131, !11132}
!11131 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11129, file: !10920, line: 587, type: !1571)
!11132 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11129, file: !10920, line: 587, type: !152)
!11133 = !DILocation(line: 0, scope: !11129)
!11134 = !DILocation(line: 589, column: 3, scope: !11129)
!11135 = !DILocation(line: 590, column: 1, scope: !11129)
!11136 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10920, file: !10920, line: 804, type: !11098, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11137)
!11137 = !{!11138, !11139}
!11138 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11136, file: !10920, line: 804, type: !1571)
!11139 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11136, file: !10920, line: 804, type: !152)
!11140 = !DILocation(line: 0, scope: !11136)
!11141 = !DILocation(line: 806, column: 3, scope: !11136)
!11142 = !DILocation(line: 807, column: 1, scope: !11136)
!11143 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10920, file: !10920, line: 531, type: !11098, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11144)
!11144 = !{!11145, !11146}
!11145 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11143, file: !10920, line: 531, type: !1571)
!11146 = !DILocalVariable(name: "Parity", arg: 2, scope: !11143, file: !10920, line: 531, type: !152)
!11147 = !DILocation(line: 0, scope: !11143)
!11148 = !DILocation(line: 533, column: 3, scope: !11143)
!11149 = !DILocation(line: 534, column: 1, scope: !11143)
!11150 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10920, file: !10920, line: 1769, type: !10921, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11151)
!11151 = !{!11152}
!11152 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11150, file: !10920, line: 1769, type: !1571)
!11153 = !DILocation(line: 0, scope: !11150)
!11154 = !DILocation(line: 1771, column: 11, scope: !11150)
!11155 = !DILocation(line: 1771, column: 46, scope: !11150)
!11156 = !DILocation(line: 1771, column: 3, scope: !11150)
!11157 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10920, file: !10920, line: 1736, type: !10921, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11158)
!11158 = !{!11159}
!11159 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11157, file: !10920, line: 1736, type: !1571)
!11160 = !DILocation(line: 0, scope: !11157)
!11161 = !DILocation(line: 1738, column: 11, scope: !11157)
!11162 = !DILocation(line: 1738, column: 3, scope: !11157)
!11163 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10920, file: !10920, line: 1747, type: !10921, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11164)
!11164 = !{!11165}
!11165 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11163, file: !10920, line: 1747, type: !1571)
!11166 = !DILocation(line: 0, scope: !11163)
!11167 = !DILocation(line: 1749, column: 11, scope: !11163)
!11168 = !DILocation(line: 1749, column: 45, scope: !11163)
!11169 = !DILocation(line: 1749, column: 3, scope: !11163)
!11170 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10920, file: !10920, line: 1826, type: !10921, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11171)
!11171 = !{!11172}
!11172 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11170, file: !10920, line: 1826, type: !1571)
!11173 = !DILocation(line: 0, scope: !11170)
!11174 = !DILocation(line: 1828, column: 11, scope: !11170)
!11175 = !DILocation(line: 1828, column: 46, scope: !11170)
!11176 = !DILocation(line: 1828, column: 3, scope: !11170)
!11177 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10920, file: !10920, line: 1991, type: !10983, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11178)
!11178 = !{!11179}
!11179 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11177, file: !10920, line: 1991, type: !1571)
!11180 = !DILocation(line: 0, scope: !11177)
!11181 = !DILocation(line: 1993, column: 3, scope: !11177)
!11182 = !DILocation(line: 1994, column: 1, scope: !11177)
!11183 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10920, file: !10920, line: 1933, type: !10983, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11184)
!11184 = !{!11185, !11186}
!11185 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11183, file: !10920, line: 1933, type: !1571)
!11186 = !DILocalVariable(name: "tmpreg", scope: !11183, file: !10920, line: 1935, type: !227)
!11187 = !DILocation(line: 0, scope: !11183)
!11188 = !DILocation(line: 1935, column: 3, scope: !11183)
!11189 = !DILocation(line: 1935, column: 17, scope: !11183)
!11190 = !DILocation(line: 1936, column: 20, scope: !11183)
!11191 = !DILocation(line: 1936, column: 10, scope: !11183)
!11192 = !DILocation(line: 1937, column: 10, scope: !11183)
!11193 = !DILocation(line: 1938, column: 20, scope: !11183)
!11194 = !DILocation(line: 1938, column: 10, scope: !11183)
!11195 = !DILocation(line: 1939, column: 10, scope: !11183)
!11196 = !DILocation(line: 1940, column: 1, scope: !11183)
!11197 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10920, file: !10920, line: 1876, type: !10983, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11198)
!11198 = !{!11199, !11200}
!11199 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11197, file: !10920, line: 1876, type: !1571)
!11200 = !DILocalVariable(name: "tmpreg", scope: !11197, file: !10920, line: 1878, type: !227)
!11201 = !DILocation(line: 0, scope: !11197)
!11202 = !DILocation(line: 1878, column: 3, scope: !11197)
!11203 = !DILocation(line: 1878, column: 17, scope: !11197)
!11204 = !DILocation(line: 1879, column: 20, scope: !11197)
!11205 = !DILocation(line: 1879, column: 10, scope: !11197)
!11206 = !DILocation(line: 1880, column: 10, scope: !11197)
!11207 = !DILocation(line: 1881, column: 20, scope: !11197)
!11208 = !DILocation(line: 1881, column: 10, scope: !11197)
!11209 = !DILocation(line: 1882, column: 10, scope: !11197)
!11210 = !DILocation(line: 1883, column: 1, scope: !11197)
!11211 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10920, file: !10920, line: 1895, type: !10983, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11212)
!11212 = !{!11213, !11214}
!11213 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11211, file: !10920, line: 1895, type: !1571)
!11214 = !DILocalVariable(name: "tmpreg", scope: !11211, file: !10920, line: 1897, type: !227)
!11215 = !DILocation(line: 0, scope: !11211)
!11216 = !DILocation(line: 1897, column: 3, scope: !11211)
!11217 = !DILocation(line: 1897, column: 17, scope: !11211)
!11218 = !DILocation(line: 1898, column: 20, scope: !11211)
!11219 = !DILocation(line: 1898, column: 10, scope: !11211)
!11220 = !DILocation(line: 1899, column: 10, scope: !11211)
!11221 = !DILocation(line: 1900, column: 20, scope: !11211)
!11222 = !DILocation(line: 1900, column: 10, scope: !11211)
!11223 = !DILocation(line: 1901, column: 10, scope: !11211)
!11224 = !DILocation(line: 1902, column: 1, scope: !11211)
!11225 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10920, file: !10920, line: 1914, type: !10983, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11226)
!11226 = !{!11227, !11228}
!11227 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11225, file: !10920, line: 1914, type: !1571)
!11228 = !DILocalVariable(name: "tmpreg", scope: !11225, file: !10920, line: 1916, type: !227)
!11229 = !DILocation(line: 0, scope: !11225)
!11230 = !DILocation(line: 1916, column: 3, scope: !11225)
!11231 = !DILocation(line: 1916, column: 17, scope: !11225)
!11232 = !DILocation(line: 1917, column: 20, scope: !11225)
!11233 = !DILocation(line: 1917, column: 10, scope: !11225)
!11234 = !DILocation(line: 1918, column: 10, scope: !11225)
!11235 = !DILocation(line: 1919, column: 20, scope: !11225)
!11236 = !DILocation(line: 1919, column: 10, scope: !11225)
!11237 = !DILocation(line: 1920, column: 10, scope: !11225)
!11238 = !DILocation(line: 1921, column: 1, scope: !11225)
!11239 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10920, file: !10920, line: 1813, type: !10921, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11240)
!11240 = !{!11241}
!11241 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11239, file: !10920, line: 1813, type: !1571)
!11242 = !DILocation(line: 0, scope: !11239)
!11243 = !DILocation(line: 1815, column: 11, scope: !11239)
!11244 = !DILocation(line: 1815, column: 46, scope: !11239)
!11245 = !DILocation(line: 1815, column: 3, scope: !11239)
!11246 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10920, file: !10920, line: 2425, type: !11247, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11249)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{null, !1571, !195}
!11249 = !{!11250, !11251}
!11250 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11246, file: !10920, line: 2425, type: !1571)
!11251 = !DILocalVariable(name: "Value", arg: 2, scope: !11246, file: !10920, line: 2425, type: !195)
!11252 = !DILocation(line: 0, scope: !11246)
!11253 = !DILocation(line: 2427, column: 16, scope: !11246)
!11254 = !DILocation(line: 2427, column: 11, scope: !11246)
!11255 = !DILocation(line: 2427, column: 14, scope: !11246)
!11256 = !DILocation(line: 2428, column: 1, scope: !11246)
!11257 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10920, file: !10920, line: 1791, type: !10921, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11258)
!11258 = !{!11259}
!11259 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11257, file: !10920, line: 1791, type: !1571)
!11260 = !DILocation(line: 0, scope: !11257)
!11261 = !DILocation(line: 1793, column: 11, scope: !11257)
!11262 = !DILocation(line: 1793, column: 47, scope: !11257)
!11263 = !DILocation(line: 1793, column: 3, scope: !11257)
!11264 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10920, file: !10920, line: 2402, type: !11265, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11267)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{!195, !1571}
!11267 = !{!11268}
!11268 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11264, file: !10920, line: 2402, type: !1571)
!11269 = !DILocation(line: 0, scope: !11264)
!11270 = !DILocation(line: 2404, column: 20, scope: !11264)
!11271 = !DILocation(line: 2404, column: 10, scope: !11264)
!11272 = !DILocation(line: 2404, column: 3, scope: !11264)
!11273 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1624, file: !1624, line: 1583, type: !1551, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11274)
!11274 = !{!11275, !11276, !11277, !11278, !11279, !11280}
!11275 = !DILocalVariable(name: "dev", arg: 1, scope: !11273, file: !1624, line: 1583, type: !1530)
!11276 = !DILocalVariable(name: "config", scope: !11273, file: !1624, line: 1585, type: !10611)
!11277 = !DILocalVariable(name: "data", scope: !11273, file: !1624, line: 1586, type: !10734)
!11278 = !DILocalVariable(name: "ll_parity", scope: !11273, file: !1624, line: 1587, type: !152)
!11279 = !DILocalVariable(name: "ll_datawidth", scope: !11273, file: !1624, line: 1588, type: !152)
!11280 = !DILocalVariable(name: "err", scope: !11273, file: !1624, line: 1589, type: !107)
!11281 = !DILocation(line: 0, scope: !11273)
!11282 = !DILocation(line: 1585, column: 48, scope: !11273)
!11283 = !DILocation(line: 1586, column: 38, scope: !11273)
!11284 = !DILocation(line: 1591, column: 2, scope: !11273)
!11285 = !DILocation(line: 1593, column: 29, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11273, file: !1624, line: 1593, column: 6)
!11287 = !DILocation(line: 1593, column: 7, scope: !11286)
!11288 = !DILocation(line: 1593, column: 6, scope: !11273)
!11289 = !DILocation(line: 1594, column: 3, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !1624, line: 1594, column: 3)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !1624, line: 1594, column: 3)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !1624, line: 1594, column: 3)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !1624, line: 1594, column: 3)
!11294 = distinct !DILexicalBlock(scope: !11286, file: !1624, line: 1593, column: 37)
!11295 = !DILocation(line: 1595, column: 3, scope: !11294)
!11296 = !DILocation(line: 1599, column: 31, scope: !11273)
!11297 = !DILocation(line: 1599, column: 71, scope: !11273)
!11298 = !DILocation(line: 1599, column: 8, scope: !11273)
!11299 = !DILocation(line: 1600, column: 10, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11273, file: !1624, line: 1600, column: 6)
!11301 = !DILocation(line: 1600, column: 6, scope: !11273)
!11302 = !DILocation(line: 1601, column: 3, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !1624, line: 1601, column: 3)
!11304 = distinct !DILexicalBlock(scope: !11305, file: !1624, line: 1601, column: 3)
!11305 = distinct !DILexicalBlock(scope: !11306, file: !1624, line: 1601, column: 3)
!11306 = distinct !DILexicalBlock(scope: !11307, file: !1624, line: 1601, column: 3)
!11307 = distinct !DILexicalBlock(scope: !11300, file: !1624, line: 1600, column: 16)
!11308 = !DILocation(line: 1602, column: 3, scope: !11307)
!11309 = !DILocation(line: 1616, column: 36, scope: !11273)
!11310 = !DILocation(line: 1616, column: 8, scope: !11273)
!11311 = !DILocation(line: 1617, column: 10, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11273, file: !1624, line: 1617, column: 6)
!11313 = !DILocation(line: 1617, column: 6, scope: !11273)
!11314 = !DILocation(line: 1621, column: 27, scope: !11273)
!11315 = !DILocation(line: 1621, column: 2, scope: !11273)
!11316 = !DILocation(line: 1624, column: 40, scope: !11273)
!11317 = !DILocation(line: 1624, column: 2, scope: !11273)
!11318 = !DILocation(line: 1630, column: 14, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11273, file: !1624, line: 1630, column: 6)
!11320 = !DILocation(line: 1630, column: 6, scope: !11273)
!11321 = !DILocation(line: 1640, column: 4, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11323, file: !1624, line: 1640, column: 4)
!11323 = distinct !DILexicalBlock(scope: !11324, file: !1624, line: 1640, column: 4)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !1624, line: 1640, column: 4)
!11325 = distinct !DILexicalBlock(scope: !11326, file: !1624, line: 1640, column: 4)
!11326 = distinct !DILexicalBlock(scope: !11327, file: !1624, line: 1639, column: 28)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !1624, line: 1639, column: 7)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !1624, line: 1638, column: 9)
!11329 = distinct !DILexicalBlock(scope: !11319, file: !1624, line: 1634, column: 13)
!11330 = !DILocation(line: 0, scope: !11319)
!11331 = !DILocation(line: 1649, column: 35, scope: !11273)
!11332 = !DILocation(line: 1649, column: 2, scope: !11273)
!11333 = !DILocation(line: 1654, column: 14, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11273, file: !1624, line: 1654, column: 6)
!11335 = !DILocation(line: 1654, column: 6, scope: !11273)
!11336 = !DILocation(line: 1655, column: 3, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11334, file: !1624, line: 1654, column: 31)
!11338 = !DILocation(line: 1656, column: 2, scope: !11337)
!11339 = !DILocation(line: 1659, column: 37, scope: !11273)
!11340 = !DILocation(line: 1659, column: 2, scope: !11273)
!11341 = !DILocation(line: 1662, column: 14, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11273, file: !1624, line: 1662, column: 6)
!11343 = !DILocation(line: 1662, column: 6, scope: !11273)
!11344 = !DILocation(line: 1663, column: 37, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11342, file: !1624, line: 1662, column: 27)
!11346 = !DILocation(line: 1663, column: 3, scope: !11345)
!11347 = !DILocation(line: 1664, column: 2, scope: !11345)
!11348 = !DILocation(line: 1684, column: 26, scope: !11273)
!11349 = !DILocation(line: 1684, column: 2, scope: !11273)
!11350 = !DILocation(line: 1722, column: 2, scope: !11273)
!11351 = !DILocation(line: 1724, column: 1, scope: !11273)
!11352 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1624, file: !1624, line: 651, type: !11353, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11355)
!11353 = !DISubroutineType(types: !11354)
!11354 = !{null, !1530}
!11355 = !{!11356, !11357, !11358}
!11356 = !DILocalVariable(name: "dev", arg: 1, scope: !11352, file: !1624, line: 651, type: !1530)
!11357 = !DILocalVariable(name: "data", scope: !11352, file: !1624, line: 653, type: !10734)
!11358 = !DILocalVariable(name: "clk", scope: !11352, file: !1624, line: 654, type: !11359)
!11359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1530)
!11360 = !DILocation(line: 0, scope: !11352)
!11361 = !DILocation(line: 653, column: 38, scope: !11352)
!11362 = !DILocation(line: 656, column: 8, scope: !11352)
!11363 = !DILocation(line: 656, column: 14, scope: !11352)
!11364 = !DILocation(line: 657, column: 1, scope: !11352)
!11365 = distinct !DISubprogram(name: "device_is_ready", scope: !8104, file: !8104, line: 47, type: !11366, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11368)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{!145, !1530}
!11368 = !{!11369}
!11369 = !DILocalVariable(name: "dev", arg: 1, scope: !11365, file: !8104, line: 47, type: !1530)
!11370 = !DILocation(line: 0, scope: !11365)
!11371 = !DILocation(line: 55, column: 2, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11365, file: !8104, line: 55, column: 2)
!11373 = !{i64 2152507602}
!11374 = !DILocation(line: 56, column: 9, scope: !11365)
!11375 = !DILocation(line: 56, column: 2, scope: !11365)
!11376 = distinct !DISubprogram(name: "clock_control_on", scope: !1044, file: !1044, line: 123, type: !1589, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11377)
!11377 = !{!11378, !11379, !11380}
!11378 = !DILocalVariable(name: "dev", arg: 1, scope: !11376, file: !1044, line: 123, type: !1530)
!11379 = !DILocalVariable(name: "sys", arg: 2, scope: !11376, file: !1044, line: 124, type: !1117)
!11380 = !DILocalVariable(name: "api", scope: !11376, file: !1044, line: 126, type: !1582)
!11381 = !DILocation(line: 0, scope: !11376)
!11382 = !DILocation(line: 127, column: 49, scope: !11376)
!11383 = !DILocation(line: 129, column: 14, scope: !11376)
!11384 = !DILocation(line: 129, column: 9, scope: !11376)
!11385 = !DILocation(line: 129, column: 2, scope: !11376)
!11386 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1669, file: !1669, line: 342, type: !11387, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11389)
!11387 = !DISubroutineType(types: !11388)
!11388 = !{!107, !1666, !195}
!11389 = !{!11390, !11391, !11392, !11393}
!11390 = !DILocalVariable(name: "config", arg: 1, scope: !11386, file: !1669, line: 342, type: !1666)
!11391 = !DILocalVariable(name: "id", arg: 2, scope: !11386, file: !1669, line: 343, type: !195)
!11392 = !DILocalVariable(name: "ret", scope: !11386, file: !1669, line: 345, type: !107)
!11393 = !DILocalVariable(name: "state", scope: !11386, file: !1669, line: 346, type: !1672)
!11394 = !DILocation(line: 0, scope: !11386)
!11395 = !DILocation(line: 346, column: 2, scope: !11386)
!11396 = !DILocation(line: 348, column: 8, scope: !11386)
!11397 = !DILocation(line: 349, column: 10, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11386, file: !1669, line: 349, column: 6)
!11399 = !DILocation(line: 349, column: 6, scope: !11386)
!11400 = !DILocation(line: 353, column: 44, scope: !11386)
!11401 = !DILocation(line: 353, column: 9, scope: !11386)
!11402 = !DILocation(line: 353, column: 2, scope: !11386)
!11403 = !DILocation(line: 354, column: 1, scope: !11386)
!11404 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10920, file: !10920, line: 496, type: !11098, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11405)
!11405 = !{!11406, !11407}
!11406 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11404, file: !10920, line: 496, type: !1571)
!11407 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11404, file: !10920, line: 496, type: !152)
!11408 = !DILocation(line: 0, scope: !11404)
!11409 = !DILocation(line: 498, column: 3, scope: !11404)
!11410 = !DILocation(line: 499, column: 1, scope: !11404)
!11411 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10920, file: !10920, line: 849, type: !11107, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11412)
!11412 = !{!11413, !11414, !11415, !11416}
!11413 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11411, file: !10920, line: 849, type: !1571)
!11414 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11411, file: !10920, line: 849, type: !152)
!11415 = !DILocalVariable(name: "Parity", arg: 3, scope: !11411, file: !10920, line: 849, type: !152)
!11416 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11411, file: !10920, line: 850, type: !152)
!11417 = !DILocation(line: 0, scope: !11411)
!11418 = !DILocation(line: 852, column: 3, scope: !11411)
!11419 = !DILocation(line: 853, column: 3, scope: !11411)
!11420 = !DILocation(line: 854, column: 1, scope: !11411)
!11421 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10920, file: !10920, line: 1336, type: !10983, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11422)
!11422 = !{!11423}
!11423 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11421, file: !10920, line: 1336, type: !1571)
!11424 = !DILocation(line: 0, scope: !11421)
!11425 = !DILocation(line: 1338, column: 3, scope: !11421)
!11426 = !DILocation(line: 1339, column: 1, scope: !11421)
!11427 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1669, file: !1669, line: 316, type: !11428, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11430)
!11428 = !DISubroutineType(types: !11429)
!11429 = !{!107, !1666, !1672}
!11430 = !{!11431, !11432, !11433}
!11431 = !DILocalVariable(name: "config", arg: 1, scope: !11427, file: !1669, line: 317, type: !1666)
!11432 = !DILocalVariable(name: "state", arg: 2, scope: !11427, file: !1669, line: 318, type: !1672)
!11433 = !DILocalVariable(name: "reg", scope: !11427, file: !1669, line: 320, type: !22)
!11434 = !DILocation(line: 0, scope: !11427)
!11435 = !DILocation(line: 329, column: 39, scope: !11427)
!11436 = !DILocation(line: 329, column: 52, scope: !11427)
!11437 = !DILocation(line: 329, column: 9, scope: !11427)
!11438 = !DILocation(line: 329, column: 2, scope: !11427)
!11439 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !11366, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11440)
!11440 = !{!11441}
!11441 = !DILocalVariable(name: "dev", arg: 1, scope: !11439, file: !260, line: 730, type: !1530)
!11442 = !DILocation(line: 0, scope: !11439)
!11443 = !DILocation(line: 732, column: 9, scope: !11439)
!11444 = !DILocation(line: 732, column: 2, scope: !11439)
!11445 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1804, file: !1804, line: 270, type: !1810, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11446)
!11446 = !{!11447}
!11447 = !DILocalVariable(name: "dev", arg: 1, scope: !11445, file: !1804, line: 270, type: !1812)
!11448 = !DILocation(line: 0, scope: !11445)
!11449 = !DILocation(line: 274, column: 2, scope: !11445)
!11450 = !DILocation(line: 275, column: 12, scope: !11445)
!11451 = !DILocation(line: 276, column: 15, scope: !11445)
!11452 = !DILocation(line: 277, column: 16, scope: !11445)
!11453 = !DILocation(line: 278, column: 15, scope: !11445)
!11454 = !DILocation(line: 279, column: 16, scope: !11445)
!11455 = !DILocation(line: 282, column: 2, scope: !11445)
!11456 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1638, type: !6260, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11457)
!11457 = !{!11458, !11459}
!11458 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11456, file: !476, line: 1638, type: !1002)
!11459 = !DILocalVariable(name: "priority", arg: 2, scope: !11456, file: !476, line: 1638, type: !152)
!11460 = !DILocation(line: 0, scope: !11456)
!11461 = !DILocation(line: 1646, column: 46, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !476, line: 1645, column: 3)
!11463 = distinct !DILexicalBlock(scope: !11456, file: !476, line: 1640, column: 7)
!11464 = !DILocation(line: 1648, column: 1, scope: !11456)
!11465 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1804, file: !1804, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11466)
!11466 = !{!11467, !11468}
!11467 = !DILocalVariable(name: "arg", arg: 1, scope: !11465, file: !1804, line: 118, type: !106)
!11468 = !DILocalVariable(name: "dticks", scope: !11465, file: !1804, line: 121, type: !152)
!11469 = !DILocation(line: 0, scope: !11465)
!11470 = !DILocation(line: 124, column: 2, scope: !11465)
!11471 = !DILocation(line: 129, column: 17, scope: !11465)
!11472 = !DILocation(line: 129, column: 14, scope: !11465)
!11473 = !DILocation(line: 130, column: 15, scope: !11465)
!11474 = !DILocation(line: 145, column: 27, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11476, file: !1804, line: 132, column: 16)
!11476 = distinct !DILexicalBlock(scope: !11465, file: !1804, line: 132, column: 6)
!11477 = !DILocation(line: 145, column: 25, scope: !11475)
!11478 = !DILocation(line: 145, column: 45, scope: !11475)
!11479 = !DILocation(line: 146, column: 30, scope: !11475)
!11480 = !DILocation(line: 146, column: 20, scope: !11475)
!11481 = !DILocation(line: 147, column: 3, scope: !11475)
!11482 = !DILocation(line: 151, column: 2, scope: !11465)
!11483 = !DILocation(line: 152, column: 1, scope: !11465)
!11484 = distinct !DISubprogram(name: "elapsed", scope: !1804, file: !1804, line: 85, type: !7225, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11485)
!11485 = !{!11486, !11487, !11488}
!11486 = !DILocalVariable(name: "val1", scope: !11484, file: !1804, line: 87, type: !152)
!11487 = !DILocalVariable(name: "ctrl", scope: !11484, file: !1804, line: 88, type: !152)
!11488 = !DILocalVariable(name: "val2", scope: !11484, file: !1804, line: 89, type: !152)
!11489 = !DILocation(line: 87, column: 27, scope: !11484)
!11490 = !DILocation(line: 0, scope: !11484)
!11491 = !DILocation(line: 88, column: 27, scope: !11484)
!11492 = !DILocation(line: 89, column: 27, scope: !11484)
!11493 = !DILocation(line: 105, column: 12, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11484, file: !1804, line: 105, column: 6)
!11495 = !DILocation(line: 106, column: 6, scope: !11494)
!11496 = !DILocation(line: 107, column: 16, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11494, file: !1804, line: 106, column: 24)
!11498 = !DILocation(line: 111, column: 18, scope: !11497)
!11499 = !DILocation(line: 112, column: 2, scope: !11497)
!11500 = !DILocation(line: 114, column: 20, scope: !11484)
!11501 = !DILocation(line: 114, column: 30, scope: !11484)
!11502 = !DILocation(line: 114, column: 28, scope: !11484)
!11503 = !DILocation(line: 114, column: 2, scope: !11484)
!11504 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1804, file: !1804, line: 154, type: !11505, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11507)
!11505 = !DISubroutineType(types: !11506)
!11506 = !{null, !984, !145}
!11507 = !{!11508, !11509, !11510, !11511, !11512, !11513, !11514, !11519, !11520}
!11508 = !DILocalVariable(name: "ticks", arg: 1, scope: !11504, file: !1804, line: 154, type: !984)
!11509 = !DILocalVariable(name: "idle", arg: 2, scope: !11504, file: !1804, line: 154, type: !145)
!11510 = !DILocalVariable(name: "delay", scope: !11504, file: !1804, line: 169, type: !152)
!11511 = !DILocalVariable(name: "val1", scope: !11504, file: !1804, line: 170, type: !152)
!11512 = !DILocalVariable(name: "val2", scope: !11504, file: !1804, line: 170, type: !152)
!11513 = !DILocalVariable(name: "last_load_", scope: !11504, file: !1804, line: 171, type: !152)
!11514 = !DILocalVariable(name: "key", scope: !11504, file: !1804, line: 176, type: !11515)
!11515 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !433, line: 106, baseType: !11516)
!11516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !433, line: 32, size: 32, elements: !11517)
!11517 = !{!11518}
!11518 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11516, file: !433, line: 33, baseType: !107, size: 32)
!11519 = !DILocalVariable(name: "pending", scope: !11504, file: !1804, line: 178, type: !152)
!11520 = !DILocalVariable(name: "unannounced", scope: !11504, file: !1804, line: 185, type: !152)
!11521 = !DILocation(line: 0, scope: !11504)
!11522 = !DILocation(line: 162, column: 49, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11504, file: !1804, line: 162, column: 6)
!11524 = !DILocation(line: 163, column: 17, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11523, file: !1804, line: 162, column: 78)
!11526 = !DILocation(line: 164, column: 13, scope: !11525)
!11527 = !DILocation(line: 165, column: 3, scope: !11525)
!11528 = !DILocation(line: 171, column: 24, scope: !11504)
!11529 = !DILocation(line: 173, column: 10, scope: !11504)
!11530 = !DILocation(line: 174, column: 10, scope: !11504)
!11531 = !DILocalVariable(name: "l", arg: 1, scope: !11532, file: !433, line: 136, type: !11535)
!11532 = distinct !DISubprogram(name: "k_spin_lock", scope: !433, file: !433, line: 136, type: !11533, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11536)
!11533 = !DISubroutineType(types: !11534)
!11534 = !{!11515, !11535}
!11535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!11536 = !{!11531, !11537}
!11537 = !DILocalVariable(name: "k", scope: !11532, file: !433, line: 139, type: !11515)
!11538 = !DILocation(line: 0, scope: !11532, inlinedAt: !11539)
!11539 = distinct !DILocation(line: 176, column: 25, scope: !11504)
!11540 = !DILocation(line: 55, column: 2, scope: !11541, inlinedAt: !11545)
!11541 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11542)
!11542 = !{!11543, !11544}
!11543 = !DILocalVariable(name: "key", scope: !11541, file: !5884, line: 44, type: !32)
!11544 = !DILocalVariable(name: "tmp", scope: !11541, file: !5884, line: 53, type: !32)
!11545 = distinct !DILocation(line: 145, column: 10, scope: !11532, inlinedAt: !11539)
!11546 = !{i64 1622790}
!11547 = !DILocation(line: 0, scope: !11541, inlinedAt: !11545)
!11548 = !DILocation(line: 148, column: 2, scope: !11549, inlinedAt: !11539)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !433, line: 148, column: 2)
!11550 = distinct !DILexicalBlock(scope: !11532, file: !433, line: 148, column: 2)
!11551 = !DILocation(line: 148, column: 2, scope: !11550, inlinedAt: !11539)
!11552 = !DILocation(line: 148, column: 2, scope: !11553, inlinedAt: !11539)
!11553 = distinct !DILexicalBlock(scope: !11549, file: !433, line: 148, column: 2)
!11554 = !DILocation(line: 160, column: 2, scope: !11532, inlinedAt: !11539)
!11555 = !DILocation(line: 178, column: 21, scope: !11504)
!11556 = !DILocation(line: 180, column: 18, scope: !11504)
!11557 = !DILocation(line: 182, column: 14, scope: !11504)
!11558 = !DILocation(line: 183, column: 15, scope: !11504)
!11559 = !DILocation(line: 185, column: 39, scope: !11504)
!11560 = !DILocation(line: 185, column: 37, scope: !11504)
!11561 = !DILocation(line: 187, column: 27, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11504, file: !1804, line: 187, column: 6)
!11563 = !DILocation(line: 187, column: 6, scope: !11504)
!11564 = !DILocation(line: 202, column: 27, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11562, file: !1804, line: 195, column: 9)
!11566 = !DILocation(line: 202, column: 48, scope: !11565)
!11567 = !DILocation(line: 203, column: 9, scope: !11565)
!11568 = !DILocation(line: 204, column: 11, scope: !11565)
!11569 = !DILocation(line: 205, column: 13, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11565, file: !1804, line: 205, column: 7)
!11571 = !DILocation(line: 205, column: 7, scope: !11565)
!11572 = !DILocation(line: 0, scope: !11562)
!11573 = !DILocation(line: 212, column: 18, scope: !11504)
!11574 = !DILocation(line: 214, column: 28, scope: !11504)
!11575 = !DILocation(line: 214, column: 16, scope: !11504)
!11576 = !DILocation(line: 215, column: 15, scope: !11504)
!11577 = !DILocation(line: 227, column: 11, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11504, file: !1804, line: 227, column: 6)
!11579 = !DILocation(line: 227, column: 6, scope: !11504)
!11580 = !DILocation(line: 228, column: 15, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !1804, line: 227, column: 19)
!11582 = !DILocation(line: 228, column: 38, scope: !11581)
!11583 = !DILocation(line: 228, column: 24, scope: !11581)
!11584 = !DILocation(line: 229, column: 2, scope: !11581)
!11585 = !DILocation(line: 230, column: 24, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11578, file: !1804, line: 229, column: 9)
!11587 = !DILocation(line: 230, column: 15, scope: !11586)
!11588 = !DILocation(line: 0, scope: !11578)
!11589 = !DILocalVariable(name: "key", arg: 2, scope: !11590, file: !433, line: 190, type: !11515)
!11590 = distinct !DISubprogram(name: "k_spin_unlock", scope: !433, file: !433, line: 189, type: !11591, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11593)
!11591 = !DISubroutineType(types: !11592)
!11592 = !{null, !11535, !11515}
!11593 = !{!11594, !11589}
!11594 = !DILocalVariable(name: "l", arg: 1, scope: !11590, file: !433, line: 189, type: !11535)
!11595 = !DILocation(line: 0, scope: !11590, inlinedAt: !11596)
!11596 = distinct !DILocation(line: 232, column: 2, scope: !11504)
!11597 = !DILocation(line: 194, column: 2, scope: !11598, inlinedAt: !11596)
!11598 = distinct !DILexicalBlock(scope: !11599, file: !433, line: 194, column: 2)
!11599 = distinct !DILexicalBlock(scope: !11590, file: !433, line: 194, column: 2)
!11600 = !DILocation(line: 194, column: 2, scope: !11599, inlinedAt: !11596)
!11601 = !DILocation(line: 194, column: 2, scope: !11602, inlinedAt: !11596)
!11602 = distinct !DILexicalBlock(scope: !11598, file: !433, line: 194, column: 2)
!11603 = !DILocalVariable(name: "key", arg: 1, scope: !11604, file: !5884, line: 84, type: !32)
!11604 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11605)
!11605 = !{!11603}
!11606 = !DILocation(line: 0, scope: !11604, inlinedAt: !11607)
!11607 = distinct !DILocation(line: 215, column: 2, scope: !11590, inlinedAt: !11596)
!11608 = !DILocation(line: 95, column: 2, scope: !11604, inlinedAt: !11607)
!11609 = !{i64 1623607}
!11610 = !DILocation(line: 234, column: 1, scope: !11504)
!11611 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1804, file: !1804, line: 236, type: !7225, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11612)
!11612 = !{!11613, !11614}
!11613 = !DILocalVariable(name: "key", scope: !11611, file: !1804, line: 242, type: !11515)
!11614 = !DILocalVariable(name: "cyc", scope: !11611, file: !1804, line: 243, type: !152)
!11615 = !DILocation(line: 0, scope: !11532, inlinedAt: !11616)
!11616 = distinct !DILocation(line: 242, column: 25, scope: !11611)
!11617 = !DILocation(line: 55, column: 2, scope: !11541, inlinedAt: !11618)
!11618 = distinct !DILocation(line: 145, column: 10, scope: !11532, inlinedAt: !11616)
!11619 = !DILocation(line: 0, scope: !11541, inlinedAt: !11618)
!11620 = !DILocation(line: 148, column: 2, scope: !11549, inlinedAt: !11616)
!11621 = !DILocation(line: 148, column: 2, scope: !11550, inlinedAt: !11616)
!11622 = !DILocation(line: 148, column: 2, scope: !11553, inlinedAt: !11616)
!11623 = !DILocation(line: 160, column: 2, scope: !11532, inlinedAt: !11616)
!11624 = !DILocation(line: 0, scope: !11611)
!11625 = !DILocation(line: 243, column: 17, scope: !11611)
!11626 = !DILocation(line: 243, column: 29, scope: !11611)
!11627 = !DILocation(line: 243, column: 43, scope: !11611)
!11628 = !DILocation(line: 0, scope: !11590, inlinedAt: !11629)
!11629 = distinct !DILocation(line: 245, column: 2, scope: !11611)
!11630 = !DILocation(line: 194, column: 2, scope: !11598, inlinedAt: !11629)
!11631 = !DILocation(line: 194, column: 2, scope: !11599, inlinedAt: !11629)
!11632 = !DILocation(line: 194, column: 2, scope: !11602, inlinedAt: !11629)
!11633 = !DILocation(line: 243, column: 27, scope: !11611)
!11634 = !DILocation(line: 243, column: 41, scope: !11611)
!11635 = !DILocation(line: 0, scope: !11604, inlinedAt: !11636)
!11636 = distinct !DILocation(line: 215, column: 2, scope: !11590, inlinedAt: !11629)
!11637 = !DILocation(line: 95, column: 2, scope: !11604, inlinedAt: !11636)
!11638 = !DILocation(line: 246, column: 13, scope: !11611)
!11639 = !DILocation(line: 246, column: 2, scope: !11611)
!11640 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1804, file: !1804, line: 249, type: !7225, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11641)
!11641 = !{!11642, !11643}
!11642 = !DILocalVariable(name: "key", scope: !11640, file: !1804, line: 251, type: !11515)
!11643 = !DILocalVariable(name: "ret", scope: !11640, file: !1804, line: 252, type: !152)
!11644 = !DILocation(line: 0, scope: !11532, inlinedAt: !11645)
!11645 = distinct !DILocation(line: 251, column: 25, scope: !11640)
!11646 = !DILocation(line: 55, column: 2, scope: !11541, inlinedAt: !11647)
!11647 = distinct !DILocation(line: 145, column: 10, scope: !11532, inlinedAt: !11645)
!11648 = !DILocation(line: 0, scope: !11541, inlinedAt: !11647)
!11649 = !DILocation(line: 148, column: 2, scope: !11549, inlinedAt: !11645)
!11650 = !DILocation(line: 148, column: 2, scope: !11550, inlinedAt: !11645)
!11651 = !DILocation(line: 148, column: 2, scope: !11553, inlinedAt: !11645)
!11652 = !DILocation(line: 160, column: 2, scope: !11532, inlinedAt: !11645)
!11653 = !DILocation(line: 0, scope: !11640)
!11654 = !DILocation(line: 252, column: 17, scope: !11640)
!11655 = !DILocation(line: 252, column: 29, scope: !11640)
!11656 = !DILocation(line: 0, scope: !11590, inlinedAt: !11657)
!11657 = distinct !DILocation(line: 254, column: 2, scope: !11640)
!11658 = !DILocation(line: 194, column: 2, scope: !11598, inlinedAt: !11657)
!11659 = !DILocation(line: 194, column: 2, scope: !11599, inlinedAt: !11657)
!11660 = !DILocation(line: 194, column: 2, scope: !11602, inlinedAt: !11657)
!11661 = !DILocation(line: 252, column: 27, scope: !11640)
!11662 = !DILocation(line: 0, scope: !11604, inlinedAt: !11663)
!11663 = distinct !DILocation(line: 215, column: 2, scope: !11590, inlinedAt: !11657)
!11664 = !DILocation(line: 95, column: 2, scope: !11604, inlinedAt: !11663)
!11665 = !DILocation(line: 255, column: 2, scope: !11640)
!11666 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1804, file: !1804, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !2175)
!11667 = !DILocation(line: 260, column: 6, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11666, file: !1804, line: 260, column: 6)
!11669 = !DILocation(line: 260, column: 16, scope: !11668)
!11670 = !DILocation(line: 260, column: 6, scope: !11666)
!11671 = !DILocation(line: 261, column: 17, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11668, file: !1804, line: 260, column: 34)
!11673 = !DILocation(line: 262, column: 2, scope: !11672)
!11674 = !DILocation(line: 263, column: 1, scope: !11666)
!11675 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1804, file: !1804, line: 265, type: !3055, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !2175)
!11676 = !DILocation(line: 267, column: 16, scope: !11675)
!11677 = !DILocation(line: 268, column: 1, scope: !11675)
!11678 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11679, file: !11679, line: 9, type: !11680, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !11703)
!11679 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11680 = !DISubroutineType(types: !11681)
!11681 = !{!107, !11682, !195, !11702}
!11682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11683, size: 32)
!11683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11684)
!11684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1669, line: 60, size: 64, elements: !11685)
!11685 = !{!11686, !11701}
!11686 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11684, file: !1669, line: 69, baseType: !11687, size: 32)
!11687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11688, size: 32)
!11688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11689)
!11689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1669, line: 50, size: 64, elements: !11690)
!11690 = !{!11691, !11699, !11700}
!11691 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11689, file: !1669, line: 52, baseType: !11692, size: 32)
!11692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11693, size: 32)
!11693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11694)
!11694 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1680, line: 37, baseType: !11695)
!11695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1680, line: 32, size: 64, elements: !11696)
!11696 = !{!11697, !11698}
!11697 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11695, file: !1680, line: 34, baseType: !152, size: 32)
!11698 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11695, file: !1680, line: 36, baseType: !152, size: 32, offset: 32)
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11689, file: !1669, line: 54, baseType: !195, size: 8, offset: 32)
!11700 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11689, file: !1669, line: 56, baseType: !195, size: 8, offset: 40)
!11701 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11684, file: !1669, line: 71, baseType: !195, size: 8, offset: 32)
!11702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11687, size: 32)
!11703 = !{!11704, !11705, !11706}
!11704 = !DILocalVariable(name: "config", arg: 1, scope: !11678, file: !11679, line: 9, type: !11682)
!11705 = !DILocalVariable(name: "id", arg: 2, scope: !11678, file: !11679, line: 9, type: !195)
!11706 = !DILocalVariable(name: "state", arg: 3, scope: !11678, file: !11679, line: 10, type: !11702)
!11707 = !DILocation(line: 0, scope: !11678)
!11708 = !DILocation(line: 12, column: 20, scope: !11678)
!11709 = !DILocation(line: 13, column: 27, scope: !11678)
!11710 = !DILocation(line: 13, column: 42, scope: !11678)
!11711 = !DILocation(line: 13, column: 19, scope: !11678)
!11712 = !DILocation(line: 13, column: 16, scope: !11678)
!11713 = !DILocation(line: 13, column: 2, scope: !11678)
!11714 = distinct !{!11714, !11713, !11715}
!11715 = !DILocation(line: 19, column: 2, scope: !11678)
!11716 = !DILocation(line: 14, column: 23, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11718, file: !11679, line: 14, column: 7)
!11718 = distinct !DILexicalBlock(scope: !11678, file: !11679, line: 13, column: 54)
!11719 = !DILocation(line: 14, column: 10, scope: !11717)
!11720 = !DILocation(line: 18, column: 11, scope: !11718)
!11721 = !DILocation(line: 14, column: 7, scope: !11718)
!11722 = !DILocation(line: 22, column: 1, scope: !11678)
!11723 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1922, file: !1922, line: 193, type: !11724, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !11733)
!11724 = !DISubroutineType(types: !11725)
!11725 = !{!107, !11726, !195, !22}
!11726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11727, size: 32)
!11727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11728)
!11728 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1680, line: 37, baseType: !11729)
!11729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1680, line: 32, size: 64, elements: !11730)
!11730 = !{!11731, !11732}
!11731 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11729, file: !1680, line: 34, baseType: !152, size: 32)
!11732 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11729, file: !1680, line: 36, baseType: !152, size: 32, offset: 32)
!11733 = !{!11734, !11735, !11736, !11737, !11738, !11739, !11740, !11741, !11743}
!11734 = !DILocalVariable(name: "pins", arg: 1, scope: !11723, file: !1922, line: 193, type: !11726)
!11735 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11723, file: !1922, line: 193, type: !195)
!11736 = !DILocalVariable(name: "reg", arg: 3, scope: !11723, file: !1922, line: 194, type: !22)
!11737 = !DILocalVariable(name: "pin", scope: !11723, file: !1922, line: 196, type: !152)
!11738 = !DILocalVariable(name: "mux", scope: !11723, file: !1922, line: 196, type: !152)
!11739 = !DILocalVariable(name: "pin_cgf", scope: !11723, file: !1922, line: 197, type: !152)
!11740 = !DILocalVariable(name: "ret", scope: !11723, file: !1922, line: 198, type: !107)
!11741 = !DILocalVariable(name: "i", scope: !11742, file: !1922, line: 209, type: !195)
!11742 = distinct !DILexicalBlock(scope: !11723, file: !1922, line: 209, column: 2)
!11743 = !DILocalVariable(name: "gpio_out", scope: !11744, file: !1922, line: 239, type: !152)
!11744 = distinct !DILexicalBlock(scope: !11745, file: !1922, line: 238, column: 55)
!11745 = distinct !DILexicalBlock(scope: !11746, file: !1922, line: 238, column: 14)
!11746 = distinct !DILexicalBlock(scope: !11747, file: !1922, line: 236, column: 14)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !1922, line: 234, column: 7)
!11748 = distinct !DILexicalBlock(scope: !11749, file: !1922, line: 209, column: 41)
!11749 = distinct !DILexicalBlock(scope: !11742, file: !1922, line: 209, column: 2)
!11750 = !DILocation(line: 0, scope: !11723)
!11751 = !DILocation(line: 0, scope: !11742)
!11752 = !DILocation(line: 209, column: 25, scope: !11749)
!11753 = !DILocation(line: 209, column: 2, scope: !11742)
!11754 = distinct !{!11754, !11753, !11755}
!11755 = !DILocation(line: 259, column: 2, scope: !11742)
!11756 = !DILocation(line: 210, column: 17, scope: !11748)
!11757 = !DILocation(line: 234, column: 7, scope: !11747)
!11758 = !DILocation(line: 234, column: 33, scope: !11747)
!11759 = !DILocation(line: 234, column: 7, scope: !11748)
!11760 = !DILocation(line: 235, column: 22, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11747, file: !1922, line: 234, column: 49)
!11762 = !DILocation(line: 235, column: 29, scope: !11761)
!11763 = !DILocation(line: 236, column: 3, scope: !11761)
!11764 = !DILocation(line: 236, column: 14, scope: !11747)
!11765 = !DILocation(line: 239, column: 32, scope: !11744)
!11766 = !DILocation(line: 0, scope: !11744)
!11767 = !DILocation(line: 241, column: 8, scope: !11744)
!11768 = !DILocation(line: 246, column: 3, scope: !11744)
!11769 = !DILocation(line: 252, column: 9, scope: !11748)
!11770 = !DILocation(line: 255, column: 9, scope: !11748)
!11771 = !DILocation(line: 256, column: 11, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11748, file: !1922, line: 256, column: 7)
!11773 = !DILocation(line: 209, column: 37, scope: !11749)
!11774 = !DILocation(line: 256, column: 7, scope: !11748)
!11775 = !DILocation(line: 262, column: 1, scope: !11723)
!11776 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1922, file: !1922, line: 176, type: !11777, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !11779)
!11777 = !DISubroutineType(types: !11778)
!11778 = !{!107, !152, !152, !152}
!11779 = !{!11780, !11781, !11782, !11783}
!11780 = !DILocalVariable(name: "pin", arg: 1, scope: !11776, file: !1922, line: 176, type: !152)
!11781 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11776, file: !1922, line: 176, type: !152)
!11782 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11776, file: !1922, line: 176, type: !152)
!11783 = !DILocalVariable(name: "port_device", scope: !11776, file: !1922, line: 178, type: !1852)
!11784 = !DILocation(line: 0, scope: !11776)
!11785 = !DILocation(line: 180, column: 22, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11776, file: !1922, line: 180, column: 6)
!11787 = !DILocation(line: 180, column: 6, scope: !11776)
!11788 = !DILocation(line: 180, column: 6, scope: !11786)
!11789 = !DILocation(line: 184, column: 16, scope: !11776)
!11790 = !DILocation(line: 186, column: 19, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11776, file: !1922, line: 186, column: 6)
!11792 = !DILocation(line: 186, column: 28, scope: !11791)
!11793 = !DILocation(line: 186, column: 33, scope: !11791)
!11794 = !DILocation(line: 186, column: 6, scope: !11776)
!11795 = !DILocation(line: 190, column: 43, scope: !11776)
!11796 = !DILocation(line: 190, column: 9, scope: !11776)
!11797 = !DILocation(line: 190, column: 2, scope: !11776)
!11798 = !DILocation(line: 191, column: 1, scope: !11776)
!11799 = distinct !DISubprogram(name: "device_is_ready", scope: !8104, file: !8104, line: 47, type: !11800, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !11802)
!11800 = !DISubroutineType(types: !11801)
!11801 = !{!145, !1852}
!11802 = !{!11803}
!11803 = !DILocalVariable(name: "dev", arg: 1, scope: !11799, file: !8104, line: 47, type: !1852)
!11804 = !DILocation(line: 0, scope: !11799)
!11805 = !DILocation(line: 55, column: 2, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11799, file: !8104, line: 55, column: 2)
!11807 = !{i64 2148856799}
!11808 = !DILocation(line: 56, column: 9, scope: !11799)
!11809 = !DILocation(line: 56, column: 2, scope: !11799)
!11810 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !11800, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !11811)
!11811 = !{!11812}
!11812 = !DILocalVariable(name: "dev", arg: 1, scope: !11810, file: !260, line: 730, type: !1852)
!11813 = !DILocation(line: 0, scope: !11810)
!11814 = !DILocation(line: 732, column: 9, scope: !11810)
!11815 = !DILocation(line: 732, column: 2, scope: !11810)
!11816 = distinct !DISubprogram(name: "SystemInit", scope: !1952, file: !1952, line: 160, type: !3055, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1928, retainedNodes: !2175)
!11817 = !DILocation(line: 170, column: 1, scope: !11816)
!11818 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1952, file: !1952, line: 210, type: !3055, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1928, retainedNodes: !11819)
!11819 = !{!11820, !11821, !11822, !11823, !11824}
!11820 = !DILocalVariable(name: "tmp", scope: !11818, file: !1952, line: 212, type: !152)
!11821 = !DILocalVariable(name: "pllmul", scope: !11818, file: !1952, line: 212, type: !152)
!11822 = !DILocalVariable(name: "plldiv", scope: !11818, file: !1952, line: 212, type: !152)
!11823 = !DILocalVariable(name: "pllsource", scope: !11818, file: !1952, line: 212, type: !152)
!11824 = !DILocalVariable(name: "msirange", scope: !11818, file: !1952, line: 212, type: !152)
!11825 = !DILocation(line: 0, scope: !11818)
!11826 = !DILocation(line: 215, column: 14, scope: !11818)
!11827 = !DILocation(line: 217, column: 3, scope: !11818)
!11828 = !DILocation(line: 220, column: 24, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11818, file: !1952, line: 218, column: 3)
!11830 = !DILocation(line: 220, column: 52, scope: !11829)
!11831 = !DILocation(line: 221, column: 32, scope: !11829)
!11832 = !DILocation(line: 222, column: 7, scope: !11829)
!11833 = !DILocation(line: 228, column: 7, scope: !11829)
!11834 = !DILocation(line: 231, column: 21, scope: !11829)
!11835 = !DILocation(line: 232, column: 21, scope: !11829)
!11836 = !DILocation(line: 233, column: 36, scope: !11829)
!11837 = !DILocation(line: 233, column: 16, scope: !11829)
!11838 = !DILocation(line: 234, column: 24, scope: !11829)
!11839 = !DILocation(line: 234, column: 31, scope: !11829)
!11840 = !DILocation(line: 236, column: 24, scope: !11829)
!11841 = !DILocation(line: 236, column: 29, scope: !11829)
!11842 = !DILocation(line: 238, column: 21, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11829, file: !1952, line: 238, column: 11)
!11844 = !DILocation(line: 238, column: 11, scope: !11829)
!11845 = !DILocation(line: 241, column: 41, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11843, file: !1952, line: 239, column: 7)
!11847 = !DILocation(line: 241, column: 51, scope: !11846)
!11848 = !DILocation(line: 242, column: 7, scope: !11846)
!11849 = !DILocation(line: 246, column: 41, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11843, file: !1952, line: 244, column: 7)
!11851 = !DILocation(line: 246, column: 51, scope: !11850)
!11852 = !DILocation(line: 0, scope: !11829)
!11853 = !DILocation(line: 256, column: 30, scope: !11818)
!11854 = !DILocation(line: 256, column: 52, scope: !11818)
!11855 = !DILocation(line: 256, column: 9, scope: !11818)
!11856 = !DILocation(line: 258, column: 19, scope: !11818)
!11857 = !DILocation(line: 259, column: 1, scope: !11818)
!11858 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11859, file: !11859, line: 228, type: !11860, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !11863)
!11859 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11860 = !DISubroutineType(types: !11861)
!11861 = !{!11862}
!11862 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2899, line: 45, baseType: !2898)
!11863 = !{!11864, !11865}
!11864 = !DILocalVariable(name: "tickstart", scope: !11858, file: !11859, line: 230, type: !152)
!11865 = !DILocalVariable(name: "status", scope: !11858, file: !11859, line: 231, type: !11862)
!11866 = !DILocation(line: 234, column: 3, scope: !11858)
!11867 = !DILocation(line: 238, column: 3, scope: !11858)
!11868 = !DILocation(line: 241, column: 15, scope: !11858)
!11869 = !DILocation(line: 0, scope: !11858)
!11870 = !DILocation(line: 244, column: 3, scope: !11858)
!11871 = !DILocation(line: 244, column: 10, scope: !11858)
!11872 = !DILocation(line: 244, column: 43, scope: !11858)
!11873 = !DILocation(line: 246, column: 10, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !11859, line: 246, column: 9)
!11875 = distinct !DILexicalBlock(scope: !11858, file: !11859, line: 245, column: 3)
!11876 = !DILocation(line: 246, column: 24, scope: !11874)
!11877 = !DILocation(line: 246, column: 37, scope: !11874)
!11878 = !DILocation(line: 246, column: 9, scope: !11875)
!11879 = distinct !{!11879, !11870, !11880}
!11880 = !DILocation(line: 250, column: 3, scope: !11858)
!11881 = !DILocation(line: 253, column: 3, scope: !11858)
!11882 = !DILocation(line: 256, column: 3, scope: !11858)
!11883 = !DILocation(line: 256, column: 10, scope: !11858)
!11884 = !DILocation(line: 256, column: 44, scope: !11858)
!11885 = !DILocation(line: 258, column: 10, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11887, file: !11859, line: 258, column: 9)
!11887 = distinct !DILexicalBlock(scope: !11858, file: !11859, line: 257, column: 3)
!11888 = !DILocation(line: 258, column: 24, scope: !11886)
!11889 = !DILocation(line: 258, column: 37, scope: !11886)
!11890 = !DILocation(line: 258, column: 9, scope: !11887)
!11891 = distinct !{!11891, !11882, !11892}
!11892 = !DILocation(line: 262, column: 3, scope: !11858)
!11893 = !DILocation(line: 265, column: 19, scope: !11858)
!11894 = !DILocation(line: 268, column: 25, scope: !11858)
!11895 = !DILocation(line: 268, column: 12, scope: !11858)
!11896 = !DILocation(line: 269, column: 13, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11858, file: !11859, line: 269, column: 6)
!11898 = !DILocation(line: 269, column: 6, scope: !11858)
!11899 = !DILocation(line: 275, column: 3, scope: !11858)
!11900 = !DILocation(line: 277, column: 3, scope: !11858)
!11901 = !DILocation(line: 280, column: 15, scope: !11858)
!11902 = !DILocation(line: 283, column: 3, scope: !11858)
!11903 = !DILocation(line: 283, column: 10, scope: !11858)
!11904 = !DILocation(line: 283, column: 43, scope: !11858)
!11905 = !DILocation(line: 285, column: 10, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !11859, line: 285, column: 9)
!11907 = distinct !DILexicalBlock(scope: !11858, file: !11859, line: 284, column: 3)
!11908 = !DILocation(line: 285, column: 24, scope: !11906)
!11909 = !DILocation(line: 285, column: 37, scope: !11906)
!11910 = !DILocation(line: 285, column: 9, scope: !11907)
!11911 = distinct !{!11911, !11902, !11912}
!11912 = !DILocation(line: 289, column: 3, scope: !11858)
!11913 = !DILocation(line: 292, column: 3, scope: !11858)
!11914 = !DILocation(line: 295, column: 3, scope: !11858)
!11915 = !DILocation(line: 299, column: 3, scope: !11858)
!11916 = !DILocation(line: 305, column: 3, scope: !11858)
!11917 = !DILocation(line: 307, column: 3, scope: !11858)
!11918 = !DILocation(line: 308, column: 1, scope: !11858)
!11919 = !DISubprogram(name: "HAL_GetTick", scope: !11920, file: !11920, line: 945, type: !7225, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!11920 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11921 = !DISubprogram(name: "HAL_InitTick", scope: !11920, file: !11920, line: 932, type: !11922, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!11862, !152}
!11924 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11859, file: !11859, line: 324, type: !11925, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !11949)
!11925 = !DISubroutineType(types: !11926)
!11926 = !{!11862, !11927}
!11927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11928, size: 32)
!11928 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11929, line: 283, baseType: !11930)
!11929 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11929, line: 252, size: 416, elements: !11931)
!11931 = !{!11932, !11933, !11934, !11935, !11936, !11937, !11938, !11939, !11940, !11941}
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11930, file: !11929, line: 254, baseType: !152, size: 32)
!11933 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11930, file: !11929, line: 257, baseType: !152, size: 32, offset: 32)
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11930, file: !11929, line: 260, baseType: !152, size: 32, offset: 64)
!11935 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11930, file: !11929, line: 263, baseType: !152, size: 32, offset: 96)
!11936 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11930, file: !11929, line: 266, baseType: !152, size: 32, offset: 128)
!11937 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11930, file: !11929, line: 269, baseType: !152, size: 32, offset: 160)
!11938 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !11930, file: !11929, line: 272, baseType: !152, size: 32, offset: 192)
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !11930, file: !11929, line: 275, baseType: !152, size: 32, offset: 224)
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !11930, file: !11929, line: 278, baseType: !152, size: 32, offset: 256)
!11941 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11930, file: !11929, line: 281, baseType: !11942, size: 128, offset: 288)
!11942 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11929, line: 247, baseType: !11943)
!11943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11929, line: 234, size: 128, elements: !11944)
!11944 = !{!11945, !11946, !11947, !11948}
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11943, file: !11929, line: 236, baseType: !152, size: 32)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11943, file: !11929, line: 239, baseType: !152, size: 32, offset: 32)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !11943, file: !11929, line: 242, baseType: !152, size: 32, offset: 64)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !11943, file: !11929, line: 245, baseType: !152, size: 32, offset: 96)
!11949 = !{!11950, !11951, !11952, !11953, !11954, !11955, !11959}
!11950 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11924, file: !11859, line: 324, type: !11927)
!11951 = !DILocalVariable(name: "tickstart", scope: !11924, file: !11859, line: 326, type: !152)
!11952 = !DILocalVariable(name: "status", scope: !11924, file: !11859, line: 327, type: !11862)
!11953 = !DILocalVariable(name: "sysclk_source", scope: !11924, file: !11859, line: 328, type: !152)
!11954 = !DILocalVariable(name: "pll_config", scope: !11924, file: !11859, line: 328, type: !152)
!11955 = !DILocalVariable(name: "pwrclkchanged", scope: !11956, file: !11859, line: 613, type: !11958)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !11859, line: 612, column: 3)
!11957 = distinct !DILexicalBlock(scope: !11924, file: !11859, line: 611, column: 6)
!11958 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1039, line: 181, baseType: !2909)
!11959 = !DILocalVariable(name: "tmpreg", scope: !11960, file: !11859, line: 622, type: !227)
!11960 = distinct !DILexicalBlock(scope: !11961, file: !11859, line: 622, column: 7)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !11859, line: 621, column: 5)
!11962 = distinct !DILexicalBlock(scope: !11956, file: !11859, line: 620, column: 8)
!11963 = !DILocation(line: 0, scope: !11924)
!11964 = !DILocation(line: 331, column: 24, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11924, file: !11859, line: 331, column: 6)
!11966 = !DILocation(line: 331, column: 6, scope: !11924)
!11967 = !DILocation(line: 338, column: 19, scope: !11924)
!11968 = !DILocation(line: 339, column: 16, scope: !11924)
!11969 = !DILocation(line: 342, column: 27, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11924, file: !11859, line: 342, column: 6)
!11971 = !DILocation(line: 342, column: 43, scope: !11970)
!11972 = !DILocation(line: 342, column: 69, scope: !11970)
!11973 = !DILocation(line: 342, column: 6, scope: !11924)
!11974 = !DILocation(line: 348, column: 23, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11976, file: !11859, line: 348, column: 8)
!11976 = distinct !DILexicalBlock(scope: !11970, file: !11859, line: 343, column: 3)
!11977 = !DILocation(line: 349, column: 8, scope: !11975)
!11978 = !DILocation(line: 349, column: 27, scope: !11975)
!11979 = !DILocation(line: 349, column: 62, scope: !11975)
!11980 = !DILocation(line: 351, column: 11, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11982, file: !11859, line: 351, column: 10)
!11982 = distinct !DILexicalBlock(scope: !11975, file: !11859, line: 350, column: 5)
!11983 = !DILocation(line: 351, column: 47, scope: !11981)
!11984 = !DILocation(line: 351, column: 54, scope: !11981)
!11985 = !DILocation(line: 351, column: 77, scope: !11981)
!11986 = !DILocation(line: 351, column: 86, scope: !11981)
!11987 = !DILocation(line: 351, column: 10, scope: !11982)
!11988 = !DILocation(line: 359, column: 7, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11990, file: !11859, line: 359, column: 7)
!11990 = distinct !DILexicalBlock(scope: !11991, file: !11859, line: 359, column: 7)
!11991 = distinct !DILexicalBlock(scope: !11975, file: !11859, line: 357, column: 5)
!11992 = !DILocation(line: 359, column: 7, scope: !11990)
!11993 = !DILocation(line: 359, column: 7, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11989, file: !11859, line: 359, column: 7)
!11995 = !DILocation(line: 359, column: 7, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !11859, line: 359, column: 7)
!11997 = distinct !DILexicalBlock(scope: !11989, file: !11859, line: 359, column: 7)
!11998 = !DILocation(line: 359, column: 7, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !11859, line: 359, column: 7)
!12000 = distinct !DILexicalBlock(scope: !11997, file: !11859, line: 359, column: 7)
!12001 = !DILocation(line: 359, column: 7, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !12000, file: !11859, line: 359, column: 7)
!12003 = !DILocation(line: 0, scope: !11989)
!12004 = !DILocation(line: 362, column: 29, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11991, file: !11859, line: 362, column: 10)
!12006 = !DILocation(line: 362, column: 38, scope: !12005)
!12007 = !DILocation(line: 0, scope: !12005)
!12008 = !DILocation(line: 362, column: 10, scope: !11991)
!12009 = !DILocation(line: 368, column: 15, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12005, file: !11859, line: 363, column: 7)
!12011 = !DILocation(line: 368, column: 51, scope: !12010)
!12012 = !DILocation(line: 368, column: 9, scope: !12010)
!12013 = !DILocation(line: 370, column: 15, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12015, file: !11859, line: 370, column: 14)
!12015 = distinct !DILexicalBlock(scope: !12010, file: !11859, line: 369, column: 9)
!12016 = !DILocation(line: 370, column: 29, scope: !12014)
!12017 = !DILocation(line: 370, column: 43, scope: !12014)
!12018 = !DILocation(line: 370, column: 14, scope: !12015)
!12019 = distinct !{!12019, !12012, !12020}
!12020 = !DILocation(line: 374, column: 9, scope: !12010)
!12021 = !DILocation(line: 382, column: 15, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12005, file: !11859, line: 377, column: 7)
!12023 = !DILocation(line: 382, column: 51, scope: !12022)
!12024 = !DILocation(line: 382, column: 9, scope: !12022)
!12025 = !DILocation(line: 384, column: 16, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12027, file: !11859, line: 384, column: 15)
!12027 = distinct !DILexicalBlock(scope: !12022, file: !11859, line: 383, column: 9)
!12028 = !DILocation(line: 384, column: 30, scope: !12026)
!12029 = !DILocation(line: 384, column: 44, scope: !12026)
!12030 = !DILocation(line: 384, column: 15, scope: !12027)
!12031 = distinct !{!12031, !12024, !12032}
!12032 = !DILocation(line: 388, column: 9, scope: !12022)
!12033 = !DILocation(line: 393, column: 27, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !11924, file: !11859, line: 393, column: 6)
!12035 = !DILocation(line: 393, column: 43, scope: !12034)
!12036 = !DILocation(line: 393, column: 69, scope: !12034)
!12037 = !DILocation(line: 393, column: 6, scope: !11924)
!12038 = !DILocation(line: 400, column: 23, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12040, file: !11859, line: 400, column: 8)
!12040 = distinct !DILexicalBlock(scope: !12034, file: !11859, line: 394, column: 3)
!12041 = !DILocation(line: 401, column: 8, scope: !12039)
!12042 = !DILocation(line: 401, column: 27, scope: !12039)
!12043 = !DILocation(line: 401, column: 62, scope: !12039)
!12044 = !DILocation(line: 404, column: 11, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12046, file: !11859, line: 404, column: 10)
!12046 = distinct !DILexicalBlock(scope: !12039, file: !11859, line: 402, column: 5)
!12047 = !DILocation(line: 404, column: 47, scope: !12045)
!12048 = !DILocation(line: 404, column: 54, scope: !12045)
!12049 = !DILocation(line: 404, column: 77, scope: !12045)
!12050 = !DILocation(line: 404, column: 86, scope: !12045)
!12051 = !DILocation(line: 404, column: 10, scope: !12046)
!12052 = !DILocation(line: 418, column: 29, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !11859, line: 418, column: 10)
!12054 = distinct !DILexicalBlock(scope: !12039, file: !11859, line: 416, column: 5)
!12055 = !DILocation(line: 418, column: 38, scope: !12053)
!12056 = !DILocation(line: 418, column: 10, scope: !12054)
!12057 = !DILocation(line: 421, column: 9, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12053, file: !11859, line: 419, column: 7)
!12059 = !DILocation(line: 424, column: 21, scope: !12058)
!12060 = !DILocation(line: 427, column: 9, scope: !12058)
!12061 = !DILocation(line: 427, column: 15, scope: !12058)
!12062 = !DILocation(line: 427, column: 51, scope: !12058)
!12063 = !DILocation(line: 429, column: 15, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !11859, line: 429, column: 14)
!12065 = distinct !DILexicalBlock(scope: !12058, file: !11859, line: 428, column: 9)
!12066 = !DILocation(line: 429, column: 29, scope: !12064)
!12067 = !DILocation(line: 429, column: 43, scope: !12064)
!12068 = !DILocation(line: 429, column: 14, scope: !12065)
!12069 = distinct !{!12069, !12060, !12070}
!12070 = !DILocation(line: 433, column: 9, scope: !12058)
!12071 = !DILocation(line: 441, column: 9, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12053, file: !11859, line: 439, column: 7)
!12073 = !DILocation(line: 444, column: 21, scope: !12072)
!12074 = !DILocation(line: 447, column: 9, scope: !12072)
!12075 = !DILocation(line: 447, column: 15, scope: !12072)
!12076 = !DILocation(line: 447, column: 51, scope: !12072)
!12077 = !DILocation(line: 449, column: 15, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12079, file: !11859, line: 449, column: 14)
!12079 = distinct !DILexicalBlock(scope: !12072, file: !11859, line: 448, column: 9)
!12080 = !DILocation(line: 449, column: 29, scope: !12078)
!12081 = !DILocation(line: 449, column: 43, scope: !12078)
!12082 = !DILocation(line: 449, column: 14, scope: !12079)
!12083 = distinct !{!12083, !12074, !12084}
!12084 = !DILocation(line: 453, column: 9, scope: !12072)
!12085 = !DILocation(line: 0, scope: !12039)
!12086 = !DILocation(line: 458, column: 27, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !11924, file: !11859, line: 458, column: 6)
!12088 = !DILocation(line: 458, column: 43, scope: !12087)
!12089 = !DILocation(line: 458, column: 69, scope: !12087)
!12090 = !DILocation(line: 458, column: 6, scope: !11924)
!12091 = !DILocation(line: 461, column: 22, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !11859, line: 461, column: 8)
!12093 = distinct !DILexicalBlock(scope: !12087, file: !11859, line: 459, column: 3)
!12094 = !DILocation(line: 461, column: 8, scope: !12093)
!12095 = !DILocation(line: 463, column: 11, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12097, file: !11859, line: 463, column: 10)
!12097 = distinct !DILexicalBlock(scope: !12092, file: !11859, line: 462, column: 5)
!12098 = !DILocation(line: 463, column: 47, scope: !12096)
!12099 = !DILocation(line: 463, column: 54, scope: !12096)
!12100 = !DILocation(line: 463, column: 77, scope: !12096)
!12101 = !DILocation(line: 463, column: 86, scope: !12096)
!12102 = !DILocation(line: 463, column: 10, scope: !12097)
!12103 = !DILocation(line: 477, column: 31, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !11859, line: 477, column: 12)
!12105 = distinct !DILexicalBlock(scope: !12096, file: !11859, line: 469, column: 7)
!12106 = !DILocation(line: 477, column: 47, scope: !12104)
!12107 = !DILocation(line: 477, column: 45, scope: !12104)
!12108 = !DILocation(line: 477, column: 12, scope: !12105)
!12109 = !DILocation(line: 480, column: 14, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !11859, line: 480, column: 14)
!12111 = distinct !DILexicalBlock(scope: !12104, file: !11859, line: 478, column: 9)
!12112 = !DILocation(line: 480, column: 80, scope: !12110)
!12113 = !DILocation(line: 480, column: 14, scope: !12111)
!12114 = !DILocation(line: 486, column: 11, scope: !12111)
!12115 = !DILocation(line: 488, column: 11, scope: !12111)
!12116 = !DILocation(line: 489, column: 9, scope: !12111)
!12117 = !DILocation(line: 494, column: 11, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12104, file: !11859, line: 491, column: 9)
!12119 = !DILocation(line: 496, column: 11, scope: !12118)
!12120 = !DILocation(line: 499, column: 65, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12118, file: !11859, line: 499, column: 14)
!12122 = !DILocation(line: 499, column: 14, scope: !12121)
!12123 = !DILocation(line: 499, column: 80, scope: !12121)
!12124 = !DILocation(line: 499, column: 14, scope: !12118)
!12125 = !DILocation(line: 506, column: 67, scope: !12105)
!12126 = !DILocation(line: 506, column: 81, scope: !12105)
!12127 = !DILocation(line: 506, column: 36, scope: !12105)
!12128 = !DILocation(line: 507, column: 52, scope: !12105)
!12129 = !DILocation(line: 507, column: 74, scope: !12105)
!12130 = !DILocation(line: 507, column: 31, scope: !12105)
!12131 = !DILocation(line: 507, column: 28, scope: !12105)
!12132 = !DILocation(line: 506, column: 25, scope: !12105)
!12133 = !DILocation(line: 510, column: 31, scope: !12105)
!12134 = !DILocation(line: 510, column: 18, scope: !12105)
!12135 = !DILocation(line: 511, column: 19, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12105, file: !11859, line: 511, column: 12)
!12137 = !DILocation(line: 511, column: 12, scope: !12105)
!12138 = !DILocation(line: 523, column: 29, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12140, file: !11859, line: 523, column: 10)
!12140 = distinct !DILexicalBlock(scope: !12092, file: !11859, line: 518, column: 5)
!12141 = !DILocation(line: 523, column: 38, scope: !12139)
!12142 = !DILocation(line: 523, column: 10, scope: !12140)
!12143 = !DILocation(line: 526, column: 9, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12139, file: !11859, line: 524, column: 7)
!12145 = !DILocation(line: 529, column: 21, scope: !12144)
!12146 = !DILocation(line: 532, column: 9, scope: !12144)
!12147 = !DILocation(line: 532, column: 15, scope: !12144)
!12148 = !DILocation(line: 532, column: 51, scope: !12144)
!12149 = !DILocation(line: 534, column: 15, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !11859, line: 534, column: 14)
!12151 = distinct !DILexicalBlock(scope: !12144, file: !11859, line: 533, column: 9)
!12152 = !DILocation(line: 534, column: 29, scope: !12150)
!12153 = !DILocation(line: 534, column: 42, scope: !12150)
!12154 = !DILocation(line: 534, column: 14, scope: !12151)
!12155 = distinct !{!12155, !12146, !12156}
!12156 = !DILocation(line: 538, column: 9, scope: !12144)
!12157 = !DILocation(line: 544, column: 9, scope: !12144)
!12158 = !DILocation(line: 546, column: 9, scope: !12144)
!12159 = !DILocation(line: 548, column: 7, scope: !12144)
!12160 = !DILocation(line: 552, column: 9, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12139, file: !11859, line: 550, column: 7)
!12162 = !DILocation(line: 555, column: 21, scope: !12161)
!12163 = !DILocation(line: 558, column: 9, scope: !12161)
!12164 = !DILocation(line: 558, column: 15, scope: !12161)
!12165 = !DILocation(line: 558, column: 51, scope: !12161)
!12166 = !DILocation(line: 560, column: 15, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12168, file: !11859, line: 560, column: 14)
!12168 = distinct !DILexicalBlock(scope: !12161, file: !11859, line: 559, column: 9)
!12169 = !DILocation(line: 560, column: 29, scope: !12167)
!12170 = !DILocation(line: 560, column: 42, scope: !12167)
!12171 = !DILocation(line: 560, column: 14, scope: !12168)
!12172 = distinct !{!12172, !12163, !12173}
!12173 = !DILocation(line: 564, column: 9, scope: !12161)
!12174 = !DILocation(line: 569, column: 27, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !11924, file: !11859, line: 569, column: 6)
!12176 = !DILocation(line: 569, column: 43, scope: !12175)
!12177 = !DILocation(line: 569, column: 69, scope: !12175)
!12178 = !DILocation(line: 569, column: 6, scope: !11924)
!12179 = !DILocation(line: 575, column: 27, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12181, file: !11859, line: 575, column: 8)
!12181 = distinct !DILexicalBlock(scope: !12175, file: !11859, line: 570, column: 3)
!12182 = !DILocation(line: 575, column: 36, scope: !12180)
!12183 = !DILocation(line: 575, column: 8, scope: !12181)
!12184 = !DILocation(line: 578, column: 7, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12180, file: !11859, line: 576, column: 5)
!12186 = !DILocation(line: 581, column: 19, scope: !12185)
!12187 = !DILocation(line: 584, column: 7, scope: !12185)
!12188 = !DILocation(line: 584, column: 13, scope: !12185)
!12189 = !DILocation(line: 584, column: 49, scope: !12185)
!12190 = !DILocation(line: 586, column: 13, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !11859, line: 586, column: 12)
!12192 = distinct !DILexicalBlock(scope: !12185, file: !11859, line: 585, column: 7)
!12193 = !DILocation(line: 586, column: 27, scope: !12191)
!12194 = !DILocation(line: 586, column: 41, scope: !12191)
!12195 = !DILocation(line: 586, column: 12, scope: !12192)
!12196 = distinct !{!12196, !12187, !12197}
!12197 = !DILocation(line: 590, column: 7, scope: !12185)
!12198 = !DILocation(line: 595, column: 7, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12180, file: !11859, line: 593, column: 5)
!12200 = !DILocation(line: 598, column: 19, scope: !12199)
!12201 = !DILocation(line: 601, column: 7, scope: !12199)
!12202 = !DILocation(line: 601, column: 13, scope: !12199)
!12203 = !DILocation(line: 601, column: 49, scope: !12199)
!12204 = !DILocation(line: 603, column: 13, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !11859, line: 603, column: 12)
!12206 = distinct !DILexicalBlock(scope: !12199, file: !11859, line: 602, column: 7)
!12207 = !DILocation(line: 603, column: 27, scope: !12205)
!12208 = !DILocation(line: 603, column: 41, scope: !12205)
!12209 = !DILocation(line: 603, column: 12, scope: !12206)
!12210 = distinct !{!12210, !12201, !12211}
!12211 = !DILocation(line: 607, column: 7, scope: !12199)
!12212 = !DILocation(line: 611, column: 27, scope: !11957)
!12213 = !DILocation(line: 611, column: 43, scope: !11957)
!12214 = !DILocation(line: 611, column: 69, scope: !11957)
!12215 = !DILocation(line: 611, column: 6, scope: !11924)
!12216 = !DILocation(line: 0, scope: !11956)
!12217 = !DILocation(line: 620, column: 8, scope: !11962)
!12218 = !DILocation(line: 620, column: 8, scope: !11956)
!12219 = !DILocation(line: 622, column: 7, scope: !11960)
!12220 = !DILocation(line: 622, column: 7, scope: !11961)
!12221 = !DILocation(line: 624, column: 5, scope: !11961)
!12222 = !DILocation(line: 626, column: 8, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !11956, file: !11859, line: 626, column: 8)
!12224 = !DILocation(line: 626, column: 8, scope: !11956)
!12225 = !DILocation(line: 629, column: 7, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12223, file: !11859, line: 627, column: 5)
!12227 = !DILocation(line: 632, column: 19, scope: !12226)
!12228 = !DILocation(line: 634, column: 7, scope: !12226)
!12229 = !DILocation(line: 634, column: 13, scope: !12226)
!12230 = !DILocation(line: 636, column: 13, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12232, file: !11859, line: 636, column: 12)
!12232 = distinct !DILexicalBlock(scope: !12226, file: !11859, line: 635, column: 7)
!12233 = !DILocation(line: 636, column: 27, scope: !12231)
!12234 = !DILocation(line: 636, column: 40, scope: !12231)
!12235 = !DILocation(line: 636, column: 12, scope: !12232)
!12236 = distinct !{!12236, !12228, !12237}
!12237 = !DILocation(line: 640, column: 7, scope: !12226)
!12238 = !DILocation(line: 644, column: 5, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12240, file: !11859, line: 644, column: 5)
!12240 = distinct !DILexicalBlock(scope: !11956, file: !11859, line: 644, column: 5)
!12241 = !DILocation(line: 644, column: 5, scope: !12240)
!12242 = !DILocation(line: 644, column: 5, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12239, file: !11859, line: 644, column: 5)
!12244 = !DILocation(line: 644, column: 5, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12246, file: !11859, line: 644, column: 5)
!12246 = distinct !DILexicalBlock(scope: !12239, file: !11859, line: 644, column: 5)
!12247 = !DILocation(line: 644, column: 5, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12249, file: !11859, line: 644, column: 5)
!12249 = distinct !DILexicalBlock(scope: !12246, file: !11859, line: 644, column: 5)
!12250 = !DILocation(line: 644, column: 5, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12249, file: !11859, line: 644, column: 5)
!12252 = !DILocation(line: 0, scope: !12239)
!12253 = !DILocation(line: 646, column: 27, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !11956, file: !11859, line: 646, column: 8)
!12255 = !DILocation(line: 646, column: 36, scope: !12254)
!12256 = !DILocation(line: 0, scope: !12254)
!12257 = !DILocation(line: 646, column: 8, scope: !11956)
!12258 = !DILocation(line: 652, column: 13, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12254, file: !11859, line: 647, column: 5)
!12260 = !DILocation(line: 652, column: 49, scope: !12259)
!12261 = !DILocation(line: 652, column: 7, scope: !12259)
!12262 = !DILocation(line: 654, column: 13, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12264, file: !11859, line: 654, column: 12)
!12264 = distinct !DILexicalBlock(scope: !12259, file: !11859, line: 653, column: 7)
!12265 = !DILocation(line: 654, column: 27, scope: !12263)
!12266 = !DILocation(line: 654, column: 41, scope: !12263)
!12267 = !DILocation(line: 654, column: 12, scope: !12264)
!12268 = distinct !{!12268, !12261, !12269}
!12269 = !DILocation(line: 658, column: 7, scope: !12259)
!12270 = !DILocation(line: 666, column: 13, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12254, file: !11859, line: 661, column: 5)
!12272 = !DILocation(line: 666, column: 49, scope: !12271)
!12273 = !DILocation(line: 666, column: 7, scope: !12271)
!12274 = !DILocation(line: 668, column: 13, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !11859, line: 668, column: 12)
!12276 = distinct !DILexicalBlock(scope: !12271, file: !11859, line: 667, column: 7)
!12277 = !DILocation(line: 668, column: 27, scope: !12275)
!12278 = !DILocation(line: 668, column: 41, scope: !12275)
!12279 = !DILocation(line: 668, column: 12, scope: !12276)
!12280 = distinct !{!12280, !12273, !12281}
!12281 = !DILocation(line: 672, column: 7, scope: !12271)
!12282 = !DILocation(line: 676, column: 8, scope: !11956)
!12283 = !DILocation(line: 678, column: 7, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12285, file: !11859, line: 677, column: 5)
!12285 = distinct !DILexicalBlock(scope: !11956, file: !11859, line: 676, column: 8)
!12286 = !DILocation(line: 679, column: 5, scope: !12284)
!12287 = !DILocation(line: 685, column: 31, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !11924, file: !11859, line: 685, column: 7)
!12289 = !DILocation(line: 685, column: 41, scope: !12288)
!12290 = !DILocation(line: 685, column: 7, scope: !11924)
!12291 = !DILocation(line: 688, column: 22, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !11859, line: 688, column: 8)
!12293 = distinct !DILexicalBlock(scope: !12288, file: !11859, line: 686, column: 3)
!12294 = !DILocation(line: 688, column: 8, scope: !12293)
!12295 = !DILocation(line: 690, column: 44, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12297, file: !11859, line: 690, column: 10)
!12297 = distinct !DILexicalBlock(scope: !12292, file: !11859, line: 689, column: 5)
!12298 = !DILocation(line: 0, scope: !12296)
!12299 = !DILocation(line: 690, column: 10, scope: !12297)
!12300 = !DILocation(line: 704, column: 15, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12296, file: !11859, line: 691, column: 7)
!12302 = !DILocation(line: 704, column: 51, scope: !12301)
!12303 = !DILocation(line: 704, column: 9, scope: !12301)
!12304 = !DILocation(line: 706, column: 15, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !11859, line: 706, column: 14)
!12306 = distinct !DILexicalBlock(scope: !12301, file: !11859, line: 705, column: 9)
!12307 = !DILocation(line: 706, column: 29, scope: !12305)
!12308 = !DILocation(line: 706, column: 43, scope: !12305)
!12309 = !DILocation(line: 706, column: 14, scope: !12306)
!12310 = distinct !{!12310, !12303, !12311}
!12311 = !DILocation(line: 710, column: 9, scope: !12301)
!12312 = !DILocation(line: 713, column: 9, scope: !12301)
!12313 = !DILocation(line: 717, column: 9, scope: !12301)
!12314 = !DILocation(line: 720, column: 21, scope: !12301)
!12315 = !DILocation(line: 723, column: 9, scope: !12301)
!12316 = !DILocation(line: 723, column: 15, scope: !12301)
!12317 = !DILocation(line: 723, column: 51, scope: !12301)
!12318 = !DILocation(line: 725, column: 15, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !11859, line: 725, column: 14)
!12320 = distinct !DILexicalBlock(scope: !12301, file: !11859, line: 724, column: 9)
!12321 = !DILocation(line: 725, column: 29, scope: !12319)
!12322 = !DILocation(line: 725, column: 43, scope: !12319)
!12323 = !DILocation(line: 725, column: 14, scope: !12320)
!12324 = distinct !{!12324, !12315, !12325}
!12325 = !DILocation(line: 729, column: 9, scope: !12301)
!12326 = !DILocation(line: 740, column: 15, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12296, file: !11859, line: 732, column: 7)
!12328 = !DILocation(line: 740, column: 51, scope: !12327)
!12329 = !DILocation(line: 740, column: 9, scope: !12327)
!12330 = !DILocation(line: 742, column: 15, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12332, file: !11859, line: 742, column: 14)
!12332 = distinct !DILexicalBlock(scope: !12327, file: !11859, line: 741, column: 9)
!12333 = !DILocation(line: 742, column: 29, scope: !12331)
!12334 = !DILocation(line: 742, column: 43, scope: !12331)
!12335 = !DILocation(line: 742, column: 14, scope: !12332)
!12336 = distinct !{!12336, !12329, !12337}
!12337 = !DILocation(line: 746, column: 9, scope: !12327)
!12338 = !DILocation(line: 752, column: 44, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !11859, line: 752, column: 10)
!12340 = distinct !DILexicalBlock(scope: !12292, file: !11859, line: 750, column: 5)
!12341 = !DILocation(line: 752, column: 10, scope: !12340)
!12342 = !DILocation(line: 759, column: 27, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12339, file: !11859, line: 757, column: 7)
!12344 = !DILocation(line: 760, column: 13, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12343, file: !11859, line: 760, column: 12)
!12346 = !DILocation(line: 760, column: 77, scope: !12345)
!12347 = !DILocation(line: 760, column: 51, scope: !12345)
!12348 = !DILocation(line: 760, column: 88, scope: !12345)
!12349 = !DILocation(line: 761, column: 13, scope: !12345)
!12350 = !DILocation(line: 761, column: 77, scope: !12345)
!12351 = !DILocation(line: 761, column: 51, scope: !12345)
!12352 = !DILocation(line: 761, column: 85, scope: !12345)
!12353 = !DILocation(line: 762, column: 13, scope: !12345)
!12354 = !DILocation(line: 762, column: 77, scope: !12345)
!12355 = !DILocation(line: 762, column: 51, scope: !12345)
!12356 = !DILocation(line: 760, column: 12, scope: !12343)
!12357 = !DILocation(line: 770, column: 3, scope: !11924)
!12358 = !DILocation(line: 771, column: 1, scope: !11924)
!12359 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !11859, file: !11859, line: 1343, type: !11922, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12360)
!12360 = !{!12361, !12362, !12363, !12364}
!12361 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !12359, file: !11859, line: 1343, type: !152)
!12362 = !DILocalVariable(name: "vos", scope: !12359, file: !11859, line: 1345, type: !152)
!12363 = !DILocalVariable(name: "latency", scope: !12359, file: !11859, line: 1346, type: !152)
!12364 = !DILocalVariable(name: "tmpreg", scope: !12365, file: !11859, line: 1357, type: !227)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !11859, line: 1357, column: 7)
!12366 = distinct !DILexicalBlock(scope: !12367, file: !11859, line: 1356, column: 5)
!12367 = distinct !DILexicalBlock(scope: !12368, file: !11859, line: 1351, column: 8)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !11859, line: 1350, column: 3)
!12369 = distinct !DILexicalBlock(scope: !12359, file: !11859, line: 1349, column: 7)
!12370 = !DILocation(line: 0, scope: !12359)
!12371 = !DILocation(line: 1349, column: 7, scope: !12369)
!12372 = !DILocation(line: 1349, column: 42, scope: !12369)
!12373 = !DILocation(line: 1349, column: 7, scope: !12359)
!12374 = !DILocation(line: 1351, column: 8, scope: !12367)
!12375 = !DILocation(line: 1351, column: 8, scope: !12368)
!12376 = !DILocation(line: 1353, column: 13, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12367, file: !11859, line: 1352, column: 5)
!12378 = !DILocation(line: 1354, column: 5, scope: !12377)
!12379 = !DILocation(line: 1357, column: 7, scope: !12365)
!12380 = !DILocation(line: 1357, column: 7, scope: !12366)
!12381 = !DILocation(line: 1358, column: 13, scope: !12366)
!12382 = !DILocation(line: 1359, column: 7, scope: !12366)
!12383 = !DILocation(line: 0, scope: !12367)
!12384 = !DILocation(line: 1363, column: 13, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12368, file: !11859, line: 1363, column: 8)
!12386 = !DILocation(line: 1363, column: 46, scope: !12385)
!12387 = !DILocation(line: 1369, column: 3, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12359, file: !11859, line: 1369, column: 3)
!12389 = !DILocation(line: 1369, column: 3, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !11859, line: 1369, column: 3)
!12391 = distinct !DILexicalBlock(scope: !12388, file: !11859, line: 1369, column: 3)
!12392 = !DILocation(line: 1373, column: 6, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12359, file: !11859, line: 1373, column: 6)
!12394 = !DILocation(line: 1379, column: 1, scope: !12359)
!12395 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11859, file: !11859, line: 799, type: !12396, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12407)
!12396 = !DISubroutineType(types: !12397)
!12397 = !{!11862, !12398, !152}
!12398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12399, size: 32)
!12399 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11929, line: 304, baseType: !12400)
!12400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11929, line: 288, size: 160, elements: !12401)
!12401 = !{!12402, !12403, !12404, !12405, !12406}
!12402 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12400, file: !11929, line: 290, baseType: !152, size: 32)
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12400, file: !11929, line: 293, baseType: !152, size: 32, offset: 32)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12400, file: !11929, line: 296, baseType: !152, size: 32, offset: 64)
!12405 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12400, file: !11929, line: 299, baseType: !152, size: 32, offset: 96)
!12406 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12400, file: !11929, line: 302, baseType: !152, size: 32, offset: 128)
!12407 = !{!12408, !12409, !12410, !12411}
!12408 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12395, file: !11859, line: 799, type: !12398)
!12409 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12395, file: !11859, line: 799, type: !152)
!12410 = !DILocalVariable(name: "tickstart", scope: !12395, file: !11859, line: 801, type: !152)
!12411 = !DILocalVariable(name: "status", scope: !12395, file: !11859, line: 802, type: !11862)
!12412 = !DILocation(line: 0, scope: !12395)
!12413 = !DILocation(line: 805, column: 24, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12395, file: !11859, line: 805, column: 6)
!12415 = !DILocation(line: 805, column: 6, scope: !12395)
!12416 = !DILocation(line: 817, column: 17, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12395, file: !11859, line: 817, column: 6)
!12418 = !DILocation(line: 817, column: 15, scope: !12417)
!12419 = !DILocation(line: 817, column: 6, scope: !12395)
!12420 = !DILocation(line: 820, column: 5, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !11859, line: 820, column: 5)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !11859, line: 820, column: 5)
!12423 = distinct !DILexicalBlock(scope: !12417, file: !11859, line: 818, column: 3)
!12424 = !DILocation(line: 820, column: 5, scope: !12422)
!12425 = !DILocation(line: 820, column: 5, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12421, file: !11859, line: 820, column: 5)
!12427 = !DILocation(line: 824, column: 8, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12423, file: !11859, line: 824, column: 8)
!12429 = !DILocation(line: 824, column: 34, scope: !12428)
!12430 = !DILocation(line: 824, column: 8, scope: !12423)
!12431 = !DILocation(line: 831, column: 27, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12395, file: !11859, line: 831, column: 6)
!12433 = !DILocation(line: 831, column: 38, scope: !12432)
!12434 = !DILocation(line: 831, column: 60, scope: !12432)
!12435 = !DILocation(line: 831, column: 6, scope: !12395)
!12436 = !DILocation(line: 834, column: 5, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12432, file: !11859, line: 832, column: 3)
!12438 = !DILocation(line: 838, column: 27, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12395, file: !11859, line: 838, column: 6)
!12440 = !DILocation(line: 835, column: 3, scope: !12437)
!12441 = !DILocation(line: 838, column: 38, scope: !12439)
!12442 = !DILocation(line: 838, column: 62, scope: !12439)
!12443 = !DILocation(line: 838, column: 6, scope: !12395)
!12444 = !DILocation(line: 843, column: 27, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12446, file: !11859, line: 843, column: 8)
!12446 = distinct !DILexicalBlock(scope: !12439, file: !11859, line: 839, column: 3)
!12447 = !DILocation(line: 843, column: 8, scope: !12446)
!12448 = !DILocation(line: 846, column: 10, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12450, file: !11859, line: 846, column: 10)
!12450 = distinct !DILexicalBlock(scope: !12445, file: !11859, line: 844, column: 5)
!12451 = !DILocation(line: 846, column: 46, scope: !12449)
!12452 = !DILocation(line: 846, column: 10, scope: !12450)
!12453 = !DILocation(line: 855, column: 10, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !11859, line: 855, column: 10)
!12455 = distinct !DILexicalBlock(scope: !12456, file: !11859, line: 853, column: 5)
!12456 = distinct !DILexicalBlock(scope: !12445, file: !11859, line: 852, column: 13)
!12457 = !DILocation(line: 855, column: 46, scope: !12454)
!12458 = !DILocation(line: 855, column: 10, scope: !12455)
!12459 = !DILocation(line: 864, column: 10, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12461, file: !11859, line: 864, column: 10)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !11859, line: 862, column: 5)
!12462 = distinct !DILexicalBlock(scope: !12456, file: !11859, line: 861, column: 13)
!12463 = !DILocation(line: 864, column: 46, scope: !12460)
!12464 = !DILocation(line: 864, column: 10, scope: !12461)
!12465 = !DILocation(line: 873, column: 10, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12467, file: !11859, line: 873, column: 10)
!12467 = distinct !DILexicalBlock(scope: !12462, file: !11859, line: 871, column: 5)
!12468 = !DILocation(line: 873, column: 46, scope: !12466)
!12469 = !DILocation(line: 873, column: 10, scope: !12467)
!12470 = !DILocation(line: 878, column: 5, scope: !12446)
!12471 = !DILocation(line: 881, column: 17, scope: !12446)
!12472 = !DILocation(line: 883, column: 27, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12446, file: !11859, line: 883, column: 8)
!12474 = !DILocation(line: 883, column: 8, scope: !12446)
!12475 = !DILocation(line: 885, column: 14, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12473, file: !11859, line: 884, column: 5)
!12477 = !DILocation(line: 885, column: 44, scope: !12476)
!12478 = !DILocation(line: 885, column: 7, scope: !12476)
!12479 = !DILocation(line: 887, column: 13, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !11859, line: 887, column: 12)
!12481 = distinct !DILexicalBlock(scope: !12476, file: !11859, line: 886, column: 7)
!12482 = !DILocation(line: 887, column: 27, scope: !12480)
!12483 = !DILocation(line: 887, column: 41, scope: !12480)
!12484 = !DILocation(line: 887, column: 12, scope: !12481)
!12485 = distinct !{!12485, !12478, !12486}
!12486 = !DILocation(line: 891, column: 7, scope: !12476)
!12487 = !DILocation(line: 895, column: 14, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !11859, line: 894, column: 5)
!12489 = distinct !DILexicalBlock(scope: !12473, file: !11859, line: 893, column: 13)
!12490 = !DILocation(line: 895, column: 44, scope: !12488)
!12491 = !DILocation(line: 895, column: 7, scope: !12488)
!12492 = !DILocation(line: 897, column: 13, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12494, file: !11859, line: 897, column: 12)
!12494 = distinct !DILexicalBlock(scope: !12488, file: !11859, line: 896, column: 7)
!12495 = !DILocation(line: 897, column: 27, scope: !12493)
!12496 = !DILocation(line: 897, column: 41, scope: !12493)
!12497 = !DILocation(line: 897, column: 12, scope: !12494)
!12498 = distinct !{!12498, !12491, !12499}
!12499 = !DILocation(line: 901, column: 7, scope: !12488)
!12500 = !DILocation(line: 905, column: 14, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !11859, line: 904, column: 5)
!12502 = distinct !DILexicalBlock(scope: !12489, file: !11859, line: 903, column: 13)
!12503 = !DILocation(line: 905, column: 44, scope: !12501)
!12504 = !DILocation(line: 905, column: 7, scope: !12501)
!12505 = !DILocation(line: 907, column: 13, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !11859, line: 907, column: 12)
!12507 = distinct !DILexicalBlock(scope: !12501, file: !11859, line: 906, column: 7)
!12508 = !DILocation(line: 907, column: 27, scope: !12506)
!12509 = !DILocation(line: 907, column: 41, scope: !12506)
!12510 = !DILocation(line: 907, column: 12, scope: !12507)
!12511 = distinct !{!12511, !12504, !12512}
!12512 = !DILocation(line: 911, column: 7, scope: !12501)
!12513 = !DILocation(line: 915, column: 13, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12502, file: !11859, line: 914, column: 5)
!12515 = !DILocation(line: 915, column: 43, scope: !12514)
!12516 = !DILocation(line: 915, column: 7, scope: !12514)
!12517 = !DILocation(line: 917, column: 13, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !11859, line: 917, column: 12)
!12519 = distinct !DILexicalBlock(scope: !12514, file: !11859, line: 916, column: 7)
!12520 = !DILocation(line: 917, column: 27, scope: !12518)
!12521 = !DILocation(line: 917, column: 41, scope: !12518)
!12522 = !DILocation(line: 917, column: 12, scope: !12519)
!12523 = distinct !{!12523, !12516, !12524}
!12524 = !DILocation(line: 921, column: 7, scope: !12514)
!12525 = !DILocation(line: 925, column: 17, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12395, file: !11859, line: 925, column: 6)
!12527 = !DILocation(line: 925, column: 15, scope: !12526)
!12528 = !DILocation(line: 925, column: 6, scope: !12395)
!12529 = !DILocation(line: 928, column: 5, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12531, file: !11859, line: 928, column: 5)
!12531 = distinct !DILexicalBlock(scope: !12526, file: !11859, line: 926, column: 3)
!12532 = !DILocation(line: 932, column: 8, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12531, file: !11859, line: 932, column: 8)
!12534 = !DILocation(line: 932, column: 34, scope: !12533)
!12535 = !DILocation(line: 932, column: 8, scope: !12531)
!12536 = !DILocation(line: 939, column: 27, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12395, file: !11859, line: 939, column: 6)
!12538 = !DILocation(line: 939, column: 38, scope: !12537)
!12539 = !DILocation(line: 939, column: 61, scope: !12537)
!12540 = !DILocation(line: 939, column: 6, scope: !12395)
!12541 = !DILocation(line: 942, column: 5, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12537, file: !11859, line: 940, column: 3)
!12543 = !DILocation(line: 946, column: 27, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12395, file: !11859, line: 946, column: 6)
!12545 = !DILocation(line: 943, column: 3, scope: !12542)
!12546 = !DILocation(line: 946, column: 38, scope: !12544)
!12547 = !DILocation(line: 946, column: 61, scope: !12544)
!12548 = !DILocation(line: 946, column: 6, scope: !12395)
!12549 = !DILocation(line: 949, column: 5, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12544, file: !11859, line: 947, column: 3)
!12551 = !DILocation(line: 950, column: 3, scope: !12550)
!12552 = !DILocation(line: 953, column: 21, scope: !12395)
!12553 = !DILocation(line: 953, column: 70, scope: !12395)
!12554 = !DILocation(line: 953, column: 91, scope: !12395)
!12555 = !DILocation(line: 953, column: 50, scope: !12395)
!12556 = !DILocation(line: 953, column: 47, scope: !12395)
!12557 = !DILocation(line: 953, column: 19, scope: !12395)
!12558 = !DILocation(line: 956, column: 25, scope: !12395)
!12559 = !DILocation(line: 956, column: 12, scope: !12395)
!12560 = !DILocation(line: 958, column: 3, scope: !12395)
!12561 = !DILocation(line: 959, column: 1, scope: !12395)
!12562 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11859, file: !11859, line: 1083, type: !7225, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12563)
!12563 = !{!12564, !12565, !12566, !12567, !12568, !12569}
!12564 = !DILocalVariable(name: "tmpreg", scope: !12562, file: !11859, line: 1085, type: !152)
!12565 = !DILocalVariable(name: "pllm", scope: !12562, file: !11859, line: 1085, type: !152)
!12566 = !DILocalVariable(name: "plld", scope: !12562, file: !11859, line: 1085, type: !152)
!12567 = !DILocalVariable(name: "pllvco", scope: !12562, file: !11859, line: 1085, type: !152)
!12568 = !DILocalVariable(name: "msiclkrange", scope: !12562, file: !11859, line: 1085, type: !152)
!12569 = !DILocalVariable(name: "sysclockfreq", scope: !12562, file: !11859, line: 1085, type: !152)
!12570 = !DILocation(line: 1087, column: 17, scope: !12562)
!12571 = !DILocation(line: 0, scope: !12562)
!12572 = !DILocation(line: 1090, column: 3, scope: !12562)
!12573 = !DILocation(line: 1100, column: 7, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12575, file: !11859, line: 1098, column: 5)
!12575 = distinct !DILexicalBlock(scope: !12562, file: !11859, line: 1091, column: 3)
!12576 = !DILocation(line: 1104, column: 63, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12575, file: !11859, line: 1103, column: 5)
!12578 = !DILocation(line: 1104, column: 14, scope: !12577)
!12579 = !DILocation(line: 1105, column: 52, scope: !12577)
!12580 = !DILocation(line: 1105, column: 76, scope: !12577)
!12581 = !DILocation(line: 1106, column: 11, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12577, file: !11859, line: 1106, column: 11)
!12583 = !DILocation(line: 1106, column: 41, scope: !12582)
!12584 = !DILocation(line: 1106, column: 11, scope: !12577)
!12585 = !DILocation(line: 0, scope: !12582)
!12586 = !DILocation(line: 1117, column: 7, scope: !12577)
!12587 = !DILocation(line: 1122, column: 27, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12575, file: !11859, line: 1121, column: 5)
!12589 = !DILocation(line: 1122, column: 56, scope: !12588)
!12590 = !DILocation(line: 1123, column: 30, scope: !12588)
!12591 = !DILocation(line: 1124, column: 7, scope: !12588)
!12592 = !DILocation(line: 0, scope: !12575)
!12593 = !DILocation(line: 1127, column: 3, scope: !12562)
!12594 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11859, file: !11859, line: 1005, type: !9692, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12595)
!12595 = !{!12596, !12597, !12598, !12599, !12609}
!12596 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12594, file: !11859, line: 1005, type: !152)
!12597 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12594, file: !11859, line: 1005, type: !152)
!12598 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12594, file: !11859, line: 1005, type: !152)
!12599 = !DILocalVariable(name: "gpio", scope: !12594, file: !11859, line: 1007, type: !12600)
!12600 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12601, line: 64, baseType: !12602)
!12601 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12601, line: 48, size: 160, elements: !12603)
!12603 = !{!12604, !12605, !12606, !12607, !12608}
!12604 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12602, file: !12601, line: 50, baseType: !152, size: 32)
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12602, file: !12601, line: 53, baseType: !152, size: 32, offset: 32)
!12606 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12602, file: !12601, line: 56, baseType: !152, size: 32, offset: 64)
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12602, file: !12601, line: 59, baseType: !152, size: 32, offset: 96)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12602, file: !12601, line: 62, baseType: !152, size: 32, offset: 128)
!12609 = !DILocalVariable(name: "tmpreg", scope: !12610, file: !11859, line: 1022, type: !227)
!12610 = distinct !DILexicalBlock(scope: !12594, file: !11859, line: 1022, column: 3)
!12611 = !DILocation(line: 0, scope: !12594)
!12612 = !DILocation(line: 1007, column: 3, scope: !12594)
!12613 = !DILocation(line: 1007, column: 20, scope: !12594)
!12614 = !DILocation(line: 1015, column: 8, scope: !12594)
!12615 = !DILocation(line: 1015, column: 18, scope: !12594)
!12616 = !DILocation(line: 1016, column: 8, scope: !12594)
!12617 = !DILocation(line: 1016, column: 18, scope: !12594)
!12618 = !DILocation(line: 1017, column: 8, scope: !12594)
!12619 = !DILocation(line: 1017, column: 18, scope: !12594)
!12620 = !DILocation(line: 1018, column: 8, scope: !12594)
!12621 = !DILocation(line: 1018, column: 18, scope: !12594)
!12622 = !DILocation(line: 1019, column: 8, scope: !12594)
!12623 = !DILocation(line: 1019, column: 18, scope: !12594)
!12624 = !DILocation(line: 1022, column: 3, scope: !12610)
!12625 = !DILocation(line: 1022, column: 3, scope: !12594)
!12626 = !DILocation(line: 1024, column: 3, scope: !12594)
!12627 = !DILocation(line: 1027, column: 3, scope: !12594)
!12628 = !DILocation(line: 1028, column: 1, scope: !12594)
!12629 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12601, file: !12601, line: 293, type: !12630, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!12630 = !DISubroutineType(types: !12631)
!12631 = !{null, !2952, !12632}
!12632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12600, size: 32)
!12633 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11859, file: !11859, line: 1039, type: !3055, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12634 = !DILocation(line: 1041, column: 38, scope: !12633)
!12635 = !DILocation(line: 1042, column: 1, scope: !12633)
!12636 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11859, file: !11859, line: 1048, type: !3055, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12637 = !DILocation(line: 1050, column: 38, scope: !12636)
!12638 = !DILocation(line: 1051, column: 1, scope: !12636)
!12639 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11859, file: !11859, line: 1139, type: !7225, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12640 = !DILocation(line: 1141, column: 10, scope: !12639)
!12641 = !DILocation(line: 1141, column: 3, scope: !12639)
!12642 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11859, file: !11859, line: 1150, type: !7225, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12643 = !DILocation(line: 1153, column: 11, scope: !12642)
!12644 = !DILocation(line: 1153, column: 56, scope: !12642)
!12645 = !DILocation(line: 1153, column: 79, scope: !12642)
!12646 = !DILocation(line: 1153, column: 36, scope: !12642)
!12647 = !DILocation(line: 1153, column: 33, scope: !12642)
!12648 = !DILocation(line: 1153, column: 3, scope: !12642)
!12649 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11859, file: !11859, line: 1162, type: !7225, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12650 = !DILocation(line: 1165, column: 11, scope: !12649)
!12651 = !DILocation(line: 1165, column: 55, scope: !12649)
!12652 = !DILocation(line: 1165, column: 78, scope: !12649)
!12653 = !DILocation(line: 1165, column: 35, scope: !12649)
!12654 = !DILocation(line: 1165, column: 32, scope: !12649)
!12655 = !DILocation(line: 1165, column: 3, scope: !12649)
!12656 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11859, file: !11859, line: 1175, type: !12657, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12659)
!12657 = !DISubroutineType(types: !12658)
!12658 = !{null, !11927}
!12659 = !{!12660}
!12660 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12656, file: !11859, line: 1175, type: !11927)
!12661 = !DILocation(line: 0, scope: !12656)
!12662 = !DILocation(line: 1181, column: 22, scope: !12656)
!12663 = !DILocation(line: 1181, column: 37, scope: !12656)
!12664 = !DILocation(line: 1186, column: 12, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12656, file: !11859, line: 1186, column: 6)
!12666 = !DILocation(line: 1186, column: 15, scope: !12665)
!12667 = !DILocation(line: 1186, column: 31, scope: !12665)
!12668 = !DILocation(line: 1186, column: 6, scope: !12656)
!12669 = !DILocation(line: 1188, column: 24, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12665, file: !11859, line: 1187, column: 3)
!12671 = !DILocation(line: 1188, column: 33, scope: !12670)
!12672 = !DILocation(line: 1189, column: 3, scope: !12670)
!12673 = !DILocation(line: 1190, column: 17, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12665, file: !11859, line: 1190, column: 11)
!12675 = !DILocation(line: 1190, column: 20, scope: !12674)
!12676 = !DILocation(line: 1190, column: 35, scope: !12674)
!12677 = !DILocation(line: 0, scope: !12674)
!12678 = !DILocation(line: 1190, column: 11, scope: !12665)
!12679 = !DILocation(line: 1192, column: 33, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12674, file: !11859, line: 1191, column: 3)
!12681 = !DILocation(line: 1193, column: 3, scope: !12680)
!12682 = !DILocation(line: 1196, column: 33, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12674, file: !11859, line: 1195, column: 3)
!12684 = !DILocation(line: 1200, column: 12, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12656, file: !11859, line: 1200, column: 6)
!12686 = !DILocation(line: 1200, column: 15, scope: !12685)
!12687 = !DILocation(line: 1206, column: 24, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12685, file: !11859, line: 1205, column: 3)
!12689 = !DILocation(line: 1206, column: 33, scope: !12688)
!12690 = !DILocation(line: 1209, column: 61, scope: !12656)
!12691 = !DILocation(line: 1209, column: 88, scope: !12656)
!12692 = !DILocation(line: 1209, column: 22, scope: !12656)
!12693 = !DILocation(line: 1209, column: 42, scope: !12656)
!12694 = !DILocation(line: 1212, column: 12, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12656, file: !11859, line: 1212, column: 6)
!12696 = !DILocation(line: 1212, column: 6, scope: !12656)
!12697 = !DILocation(line: 1218, column: 24, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12695, file: !11859, line: 1217, column: 3)
!12699 = !DILocation(line: 1218, column: 33, scope: !12698)
!12700 = !DILocation(line: 1221, column: 61, scope: !12656)
!12701 = !DILocation(line: 1221, column: 88, scope: !12656)
!12702 = !DILocation(line: 1221, column: 22, scope: !12656)
!12703 = !DILocation(line: 1221, column: 42, scope: !12656)
!12704 = !DILocation(line: 1222, column: 55, scope: !12656)
!12705 = !DILocation(line: 1222, column: 61, scope: !12656)
!12706 = !DILocation(line: 1222, column: 22, scope: !12656)
!12707 = !DILocation(line: 1222, column: 36, scope: !12656)
!12708 = !DILocation(line: 1225, column: 12, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12656, file: !11859, line: 1225, column: 6)
!12710 = !DILocation(line: 1225, column: 16, scope: !12709)
!12711 = !DILocation(line: 1225, column: 33, scope: !12709)
!12712 = !DILocation(line: 1225, column: 6, scope: !12656)
!12713 = !DILocation(line: 1227, column: 24, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12709, file: !11859, line: 1226, column: 3)
!12715 = !DILocation(line: 1227, column: 33, scope: !12714)
!12716 = !DILocation(line: 1228, column: 3, scope: !12714)
!12717 = !DILocation(line: 1229, column: 17, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12709, file: !11859, line: 1229, column: 11)
!12719 = !DILocation(line: 1229, column: 21, scope: !12718)
!12720 = !DILocation(line: 1229, column: 37, scope: !12718)
!12721 = !DILocation(line: 0, scope: !12718)
!12722 = !DILocation(line: 1229, column: 11, scope: !12709)
!12723 = !DILocation(line: 1231, column: 33, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12718, file: !11859, line: 1230, column: 3)
!12725 = !DILocation(line: 1232, column: 3, scope: !12724)
!12726 = !DILocation(line: 1235, column: 33, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12718, file: !11859, line: 1234, column: 3)
!12728 = !DILocation(line: 1239, column: 12, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12656, file: !11859, line: 1239, column: 6)
!12730 = !DILocation(line: 1239, column: 16, scope: !12729)
!12731 = !DILocation(line: 1245, column: 24, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12729, file: !11859, line: 1244, column: 3)
!12733 = !DILocation(line: 1245, column: 33, scope: !12732)
!12734 = !DILocation(line: 1250, column: 12, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12656, file: !11859, line: 1250, column: 6)
!12736 = !DILocation(line: 1250, column: 15, scope: !12735)
!12737 = !DILocation(line: 1250, column: 30, scope: !12735)
!12738 = !DILocation(line: 1250, column: 6, scope: !12656)
!12739 = !DILocation(line: 1256, column: 28, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12735, file: !11859, line: 1255, column: 3)
!12741 = !DILocation(line: 1256, column: 37, scope: !12740)
!12742 = !DILocation(line: 1258, column: 54, scope: !12656)
!12743 = !DILocation(line: 1258, column: 59, scope: !12656)
!12744 = !DILocation(line: 1258, column: 26, scope: !12656)
!12745 = !DILocation(line: 1258, column: 36, scope: !12656)
!12746 = !DILocation(line: 1259, column: 51, scope: !12656)
!12747 = !DILocation(line: 1259, column: 56, scope: !12656)
!12748 = !DILocation(line: 1259, column: 26, scope: !12656)
!12749 = !DILocation(line: 1259, column: 33, scope: !12656)
!12750 = !DILocation(line: 1260, column: 51, scope: !12656)
!12751 = !DILocation(line: 1260, column: 56, scope: !12656)
!12752 = !DILocation(line: 1260, column: 26, scope: !12656)
!12753 = !DILocation(line: 1260, column: 33, scope: !12656)
!12754 = !DILocation(line: 1261, column: 1, scope: !12656)
!12755 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11859, file: !11859, line: 1271, type: !12756, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12758)
!12756 = !DISubroutineType(types: !12757)
!12757 = !{null, !12398, !1075}
!12758 = !{!12759, !12760}
!12759 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12755, file: !11859, line: 1271, type: !12398)
!12760 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12755, file: !11859, line: 1271, type: !1075)
!12761 = !DILocation(line: 0, scope: !12755)
!12762 = !DILocation(line: 1278, column: 22, scope: !12755)
!12763 = !DILocation(line: 1278, column: 32, scope: !12755)
!12764 = !DILocation(line: 1281, column: 53, scope: !12755)
!12765 = !DILocation(line: 1281, column: 58, scope: !12755)
!12766 = !DILocation(line: 1281, column: 22, scope: !12755)
!12767 = !DILocation(line: 1281, column: 35, scope: !12755)
!12768 = !DILocation(line: 1284, column: 54, scope: !12755)
!12769 = !DILocation(line: 1284, column: 59, scope: !12755)
!12770 = !DILocation(line: 1284, column: 22, scope: !12755)
!12771 = !DILocation(line: 1284, column: 36, scope: !12755)
!12772 = !DILocation(line: 1287, column: 55, scope: !12755)
!12773 = !DILocation(line: 1287, column: 60, scope: !12755)
!12774 = !DILocation(line: 1287, column: 22, scope: !12755)
!12775 = !DILocation(line: 1287, column: 37, scope: !12755)
!12776 = !DILocation(line: 1290, column: 56, scope: !12755)
!12777 = !DILocation(line: 1290, column: 79, scope: !12755)
!12778 = !DILocation(line: 1290, column: 22, scope: !12755)
!12779 = !DILocation(line: 1290, column: 37, scope: !12755)
!12780 = !DILocation(line: 1293, column: 16, scope: !12755)
!12781 = !DILocation(line: 1293, column: 14, scope: !12755)
!12782 = !DILocation(line: 1294, column: 1, scope: !12755)
!12783 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11859, file: !11859, line: 1301, type: !3055, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12784 = !DILocation(line: 1304, column: 6, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12783, file: !11859, line: 1304, column: 6)
!12786 = !DILocation(line: 1304, column: 6, scope: !12783)
!12787 = !DILocation(line: 1307, column: 5, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12785, file: !11859, line: 1305, column: 3)
!12789 = !DILocation(line: 1310, column: 5, scope: !12788)
!12790 = !DILocation(line: 1311, column: 3, scope: !12788)
!12791 = !DILocation(line: 1312, column: 1, scope: !12783)
!12792 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11859, file: !11859, line: 1318, type: !3055, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12793 = !DILocation(line: 1323, column: 1, scope: !12792)
!12794 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12795, file: !12795, line: 147, type: !5908, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12796)
!12795 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12796 = !{!12797}
!12797 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12794, file: !12795, line: 147, type: !152)
!12798 = !DILocation(line: 0, scope: !12794)
!12799 = !DILocation(line: 150, column: 3, scope: !12794)
!12800 = !DILocation(line: 151, column: 1, scope: !12794)
!12801 = distinct !DISubprogram(name: "LL_InitTick", scope: !12802, file: !12802, line: 222, type: !10232, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12803)
!12802 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12803 = !{!12804, !12805}
!12804 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12801, file: !12802, line: 222, type: !152)
!12805 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12801, file: !12802, line: 222, type: !152)
!12806 = !DILocation(line: 0, scope: !12801)
!12807 = !DILocation(line: 225, column: 46, scope: !12801)
!12808 = !DILocation(line: 225, column: 55, scope: !12801)
!12809 = !DILocation(line: 225, column: 18, scope: !12801)
!12810 = !DILocation(line: 226, column: 18, scope: !12801)
!12811 = !DILocation(line: 227, column: 18, scope: !12801)
!12812 = !DILocation(line: 229, column: 1, scope: !12801)
!12813 = distinct !DISubprogram(name: "LL_mDelay", scope: !12795, file: !12795, line: 163, type: !5908, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12814)
!12814 = !{!12815, !12816, !12817}
!12815 = !DILocalVariable(name: "Delay", arg: 1, scope: !12813, file: !12795, line: 163, type: !152)
!12816 = !DILocalVariable(name: "tmp", scope: !12813, file: !12795, line: 165, type: !227)
!12817 = !DILocalVariable(name: "tmpDelay", scope: !12813, file: !12795, line: 166, type: !152)
!12818 = !DILocation(line: 0, scope: !12813)
!12819 = !DILocation(line: 165, column: 3, scope: !12813)
!12820 = !DILocation(line: 165, column: 18, scope: !12813)
!12821 = !DILocation(line: 165, column: 33, scope: !12813)
!12822 = !DILocation(line: 169, column: 10, scope: !12813)
!12823 = !DILocation(line: 172, column: 15, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12813, file: !12795, line: 172, column: 6)
!12825 = !DILocation(line: 177, column: 3, scope: !12813)
!12826 = !DILocation(line: 179, column: 18, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !12795, line: 179, column: 8)
!12828 = distinct !DILexicalBlock(scope: !12813, file: !12795, line: 178, column: 3)
!12829 = !DILocation(line: 177, column: 19, scope: !12813)
!12830 = !DILocation(line: 184, column: 1, scope: !12813)
!12831 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12795, file: !12795, line: 227, type: !5908, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12832)
!12832 = !{!12833}
!12833 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12831, file: !12795, line: 227, type: !152)
!12834 = !DILocation(line: 0, scope: !12831)
!12835 = !DILocation(line: 230, column: 19, scope: !12831)
!12836 = !DILocation(line: 231, column: 1, scope: !12831)
!12837 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12795, file: !12795, line: 242, type: !12838, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12841)
!12838 = !DISubroutineType(types: !12839)
!12839 = !{!12840, !152}
!12840 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1039, line: 194, baseType: !1038)
!12841 = !{!12842, !12843, !12844}
!12842 = !DILocalVariable(name: "Frequency", arg: 1, scope: !12837, file: !12795, line: 242, type: !152)
!12843 = !DILocalVariable(name: "status", scope: !12837, file: !12795, line: 244, type: !12840)
!12844 = !DILocalVariable(name: "latency", scope: !12837, file: !12795, line: 246, type: !152)
!12845 = !DILocation(line: 0, scope: !12837)
!12846 = !DILocation(line: 249, column: 25, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12837, file: !12795, line: 249, column: 7)
!12848 = !DILocation(line: 255, column: 9, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !12795, line: 255, column: 9)
!12850 = distinct !DILexicalBlock(scope: !12847, file: !12795, line: 254, column: 3)
!12851 = !DILocation(line: 255, column: 41, scope: !12849)
!12852 = !DILocation(line: 255, column: 9, scope: !12850)
!12853 = !DILocation(line: 257, column: 21, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12855, file: !12795, line: 257, column: 11)
!12855 = distinct !DILexicalBlock(scope: !12849, file: !12795, line: 256, column: 5)
!12856 = !DILocation(line: 284, column: 9, scope: !12850)
!12857 = !DILocation(line: 264, column: 14, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12849, file: !12795, line: 264, column: 14)
!12859 = !DILocation(line: 264, column: 46, scope: !12858)
!12860 = !DILocation(line: 264, column: 14, scope: !12849)
!12861 = !DILocation(line: 266, column: 21, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !12795, line: 266, column: 11)
!12863 = distinct !DILexicalBlock(scope: !12858, file: !12795, line: 265, column: 5)
!12864 = !DILocation(line: 275, column: 21, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12866, file: !12795, line: 275, column: 11)
!12866 = distinct !DILexicalBlock(scope: !12858, file: !12795, line: 274, column: 5)
!12867 = !DILocation(line: 286, column: 7, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12869, file: !12795, line: 285, column: 5)
!12869 = distinct !DILexicalBlock(scope: !12850, file: !12795, line: 284, column: 9)
!12870 = !DILocation(line: 287, column: 5, scope: !12868)
!12871 = !DILocation(line: 289, column: 5, scope: !12850)
!12872 = !DILocation(line: 293, column: 9, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12850, file: !12795, line: 293, column: 9)
!12874 = !DILocation(line: 293, column: 31, scope: !12873)
!12875 = !DILocation(line: 293, column: 9, scope: !12850)
!12876 = !DILocation(line: 298, column: 3, scope: !12837)
!12877 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !5922, file: !5922, line: 285, type: !7225, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12878 = !DILocation(line: 287, column: 21, scope: !12877)
!12879 = !DILocation(line: 287, column: 3, scope: !12877)
!12880 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !10231, file: !10231, line: 1897, type: !3055, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12881 = !DILocation(line: 1899, column: 3, scope: !12880)
!12882 = !DILocation(line: 1900, column: 1, scope: !12880)
!12883 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !10231, file: !10231, line: 1843, type: !5908, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12884)
!12884 = !{!12885}
!12885 = !DILocalVariable(name: "Latency", arg: 1, scope: !12883, file: !10231, line: 1843, type: !152)
!12886 = !DILocation(line: 0, scope: !12883)
!12887 = !DILocation(line: 1845, column: 3, scope: !12883)
!12888 = !DILocation(line: 1846, column: 1, scope: !12883)
!12889 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !10231, file: !10231, line: 1855, type: !7225, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12890 = !DILocation(line: 1857, column: 21, scope: !12889)
!12891 = !DILocation(line: 1857, column: 3, scope: !12889)
!12892 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12795, file: !12795, line: 323, type: !12893, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12908)
!12893 = !DISubroutineType(types: !12894)
!12894 = !{!12840, !12895, !12901}
!12895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12896, size: 32)
!12896 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12802, line: 103, baseType: !12897)
!12897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12802, line: 90, size: 64, elements: !12898)
!12898 = !{!12899, !12900}
!12899 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !12897, file: !12802, line: 92, baseType: !152, size: 32)
!12900 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !12897, file: !12802, line: 98, baseType: !152, size: 32, offset: 32)
!12901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12902, size: 32)
!12902 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12802, line: 128, baseType: !12903)
!12903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12802, line: 108, size: 96, elements: !12904)
!12904 = !{!12905, !12906, !12907}
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12903, file: !12802, line: 110, baseType: !152, size: 32)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12903, file: !12802, line: 116, baseType: !152, size: 32, offset: 32)
!12907 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12903, file: !12802, line: 122, baseType: !152, size: 32, offset: 64)
!12908 = !{!12909, !12910, !12911, !12912}
!12909 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12892, file: !12795, line: 323, type: !12895)
!12910 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12892, file: !12795, line: 324, type: !12901)
!12911 = !DILocalVariable(name: "status", scope: !12892, file: !12795, line: 326, type: !12840)
!12912 = !DILocalVariable(name: "pllfreq", scope: !12892, file: !12795, line: 327, type: !152)
!12913 = !DILocation(line: 0, scope: !12892)
!12914 = !DILocation(line: 330, column: 7, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12892, file: !12795, line: 330, column: 7)
!12916 = !DILocation(line: 330, column: 26, scope: !12915)
!12917 = !DILocation(line: 330, column: 7, scope: !12892)
!12918 = !DILocation(line: 333, column: 15, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12915, file: !12795, line: 331, column: 3)
!12920 = !DILocation(line: 336, column: 9, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12919, file: !12795, line: 336, column: 9)
!12922 = !DILocation(line: 336, column: 30, scope: !12921)
!12923 = !DILocation(line: 336, column: 9, scope: !12919)
!12924 = !DILocation(line: 338, column: 7, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12921, file: !12795, line: 337, column: 5)
!12926 = !DILocation(line: 339, column: 7, scope: !12925)
!12927 = !DILocation(line: 339, column: 14, scope: !12925)
!12928 = !DILocation(line: 339, column: 35, scope: !12925)
!12929 = distinct !{!12929, !12926, !12930}
!12930 = !DILocation(line: 342, column: 7, scope: !12925)
!12931 = !DILocation(line: 346, column: 76, scope: !12919)
!12932 = !DILocation(line: 346, column: 105, scope: !12919)
!12933 = !DILocation(line: 346, column: 5, scope: !12919)
!12934 = !DILocation(line: 349, column: 14, scope: !12919)
!12935 = !DILocation(line: 350, column: 3, scope: !12919)
!12936 = !DILocation(line: 0, scope: !12915)
!12937 = !DILocation(line: 357, column: 3, scope: !12892)
!12938 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12795, file: !12795, line: 487, type: !12939, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12941)
!12939 = !DISubroutineType(types: !12940)
!12940 = !{!12840}
!12941 = !{!12942}
!12942 = !DILocalVariable(name: "status", scope: !12938, file: !12795, line: 489, type: !12840)
!12943 = !DILocation(line: 0, scope: !12938)
!12944 = !DILocation(line: 492, column: 7, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12938, file: !12795, line: 492, column: 7)
!12946 = !DILocation(line: 492, column: 28, scope: !12945)
!12947 = !DILocation(line: 492, column: 7, scope: !12938)
!12948 = !DILocation(line: 498, column: 3, scope: !12938)
!12949 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12795, file: !12795, line: 457, type: !12950, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12952)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!152, !152, !12895}
!12952 = !{!12953, !12954, !12955}
!12953 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12949, file: !12795, line: 457, type: !152)
!12954 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12949, file: !12795, line: 457, type: !12895)
!12955 = !DILocalVariable(name: "pllfreq", scope: !12949, file: !12795, line: 459, type: !152)
!12956 = !DILocation(line: 0, scope: !12949)
!12957 = !DILocation(line: 470, column: 68, scope: !12949)
!12958 = !DILocation(line: 470, column: 75, scope: !12949)
!12959 = !DILocation(line: 470, column: 35, scope: !12949)
!12960 = !DILocation(line: 470, column: 34, scope: !12949)
!12961 = !DILocation(line: 470, column: 32, scope: !12949)
!12962 = !DILocation(line: 475, column: 46, scope: !12949)
!12963 = !DILocation(line: 475, column: 53, scope: !12949)
!12964 = !DILocation(line: 475, column: 76, scope: !12949)
!12965 = !DILocation(line: 475, column: 21, scope: !12949)
!12966 = !DILocation(line: 478, column: 3, scope: !12949)
!12967 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9569, file: !9569, line: 612, type: !7225, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12968 = !DILocation(line: 614, column: 12, scope: !12967)
!12969 = !DILocation(line: 614, column: 11, scope: !12967)
!12970 = !DILocation(line: 614, column: 3, scope: !12967)
!12971 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9569, file: !9569, line: 592, type: !3055, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12972 = !DILocation(line: 594, column: 3, scope: !12971)
!12973 = !DILocation(line: 595, column: 1, scope: !12971)
!12974 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9569, file: !9569, line: 1219, type: !9692, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12975)
!12975 = !{!12976, !12977, !12978}
!12976 = !DILocalVariable(name: "Source", arg: 1, scope: !12974, file: !9569, line: 1219, type: !152)
!12977 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !12974, file: !9569, line: 1219, type: !152)
!12978 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !12974, file: !9569, line: 1219, type: !152)
!12979 = !DILocation(line: 0, scope: !12974)
!12980 = !DILocation(line: 1221, column: 3, scope: !12974)
!12981 = !DILocation(line: 1222, column: 1, scope: !12974)
!12982 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12795, file: !12795, line: 510, type: !12983, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12985)
!12983 = !DISubroutineType(types: !12984)
!12984 = !{!12840, !152, !12901}
!12985 = !{!12986, !12987, !12988, !12989}
!12986 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12982, file: !12795, line: 510, type: !152)
!12987 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12982, file: !12795, line: 510, type: !12901)
!12988 = !DILocalVariable(name: "status", scope: !12982, file: !12795, line: 512, type: !12840)
!12989 = !DILocalVariable(name: "hclk_frequency", scope: !12982, file: !12795, line: 513, type: !152)
!12990 = !DILocation(line: 0, scope: !12982)
!12991 = !DILocation(line: 520, column: 20, scope: !12982)
!12992 = !DILocation(line: 523, column: 7, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12982, file: !12795, line: 523, column: 7)
!12994 = !DILocation(line: 523, column: 23, scope: !12993)
!12995 = !DILocation(line: 523, column: 7, scope: !12982)
!12996 = !DILocation(line: 526, column: 14, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12993, file: !12795, line: 524, column: 3)
!12998 = !DILocation(line: 530, column: 14, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12982, file: !12795, line: 530, column: 7)
!13000 = !DILocation(line: 530, column: 7, scope: !12982)
!13001 = !DILocation(line: 533, column: 5, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12999, file: !12795, line: 531, column: 3)
!13003 = !DILocation(line: 534, column: 5, scope: !13002)
!13004 = !DILocation(line: 534, column: 12, scope: !13002)
!13005 = !DILocation(line: 534, column: 33, scope: !13002)
!13006 = distinct !{!13006, !13003, !13007}
!13007 = !DILocation(line: 537, column: 5, scope: !13002)
!13008 = !DILocation(line: 540, column: 49, scope: !13002)
!13009 = !DILocation(line: 540, column: 5, scope: !13002)
!13010 = !DILocation(line: 541, column: 5, scope: !13002)
!13011 = !DILocation(line: 542, column: 5, scope: !13002)
!13012 = !DILocation(line: 542, column: 12, scope: !13002)
!13013 = !DILocation(line: 542, column: 37, scope: !13002)
!13014 = distinct !{!13014, !13011, !13015}
!13015 = !DILocation(line: 545, column: 5, scope: !13002)
!13016 = !DILocation(line: 548, column: 50, scope: !13002)
!13017 = !DILocation(line: 548, column: 5, scope: !13002)
!13018 = !DILocation(line: 549, column: 50, scope: !13002)
!13019 = !DILocation(line: 549, column: 5, scope: !13002)
!13020 = !DILocation(line: 550, column: 3, scope: !13002)
!13021 = !DILocation(line: 553, column: 7, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !12982, file: !12795, line: 553, column: 7)
!13023 = !DILocation(line: 553, column: 23, scope: !13022)
!13024 = !DILocation(line: 553, column: 7, scope: !12982)
!13025 = !DILocation(line: 556, column: 14, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13022, file: !12795, line: 554, column: 3)
!13027 = !DILocation(line: 557, column: 3, scope: !13026)
!13028 = !DILocation(line: 560, column: 14, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !12982, file: !12795, line: 560, column: 7)
!13030 = !DILocation(line: 560, column: 7, scope: !12982)
!13031 = !DILocation(line: 562, column: 5, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13029, file: !12795, line: 561, column: 3)
!13033 = !DILocation(line: 563, column: 3, scope: !13032)
!13034 = !DILocation(line: 565, column: 3, scope: !12982)
!13035 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9569, file: !9569, line: 1169, type: !3055, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13036 = !DILocation(line: 1171, column: 3, scope: !13035)
!13037 = !DILocation(line: 1172, column: 1, scope: !13035)
!13038 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9569, file: !9569, line: 1190, type: !7225, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13039 = !DILocation(line: 1192, column: 12, scope: !13038)
!13040 = !DILocation(line: 1192, column: 11, scope: !13038)
!13041 = !DILocation(line: 1192, column: 3, scope: !13038)
!13042 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9569, file: !9569, line: 944, type: !5908, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13043)
!13043 = !{!13044}
!13044 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13042, file: !9569, line: 944, type: !152)
!13045 = !DILocation(line: 0, scope: !13042)
!13046 = !DILocation(line: 946, column: 3, scope: !13042)
!13047 = !DILocation(line: 947, column: 1, scope: !13042)
!13048 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9569, file: !9569, line: 910, type: !5908, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13049)
!13049 = !{!13050}
!13050 = !DILocalVariable(name: "Source", arg: 1, scope: !13048, file: !9569, line: 910, type: !152)
!13051 = !DILocation(line: 0, scope: !13048)
!13052 = !DILocation(line: 912, column: 3, scope: !13048)
!13053 = !DILocation(line: 913, column: 1, scope: !13048)
!13054 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9569, file: !9569, line: 924, type: !7225, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13055 = !DILocation(line: 926, column: 21, scope: !13054)
!13056 = !DILocation(line: 926, column: 3, scope: !13054)
!13057 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9569, file: !9569, line: 960, type: !5908, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13058)
!13058 = !{!13059}
!13059 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13057, file: !9569, line: 960, type: !152)
!13060 = !DILocation(line: 0, scope: !13057)
!13061 = !DILocation(line: 962, column: 3, scope: !13057)
!13062 = !DILocation(line: 963, column: 1, scope: !13057)
!13063 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9569, file: !9569, line: 976, type: !5908, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13064)
!13064 = !{!13065}
!13065 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13063, file: !9569, line: 976, type: !152)
!13066 = !DILocation(line: 0, scope: !13063)
!13067 = !DILocation(line: 978, column: 3, scope: !13063)
!13068 = !DILocation(line: 979, column: 1, scope: !13063)
!13069 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12795, file: !12795, line: 385, type: !13070, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13072)
!13070 = !DISubroutineType(types: !13071)
!13071 = !{!12840, !152, !152, !12895, !12901}
!13072 = !{!13073, !13074, !13075, !13076, !13077, !13078}
!13073 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13069, file: !12795, line: 385, type: !152)
!13074 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13069, file: !12795, line: 385, type: !152)
!13075 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13069, file: !12795, line: 386, type: !12895)
!13076 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13069, file: !12795, line: 386, type: !12901)
!13077 = !DILocalVariable(name: "status", scope: !13069, file: !12795, line: 388, type: !12840)
!13078 = !DILocalVariable(name: "pllfreq", scope: !13069, file: !12795, line: 389, type: !152)
!13079 = !DILocation(line: 0, scope: !13069)
!13080 = !DILocation(line: 396, column: 7, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13069, file: !12795, line: 396, column: 7)
!13082 = !DILocation(line: 396, column: 26, scope: !13081)
!13083 = !DILocation(line: 396, column: 7, scope: !13069)
!13084 = !DILocation(line: 400, column: 15, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13081, file: !12795, line: 397, column: 3)
!13086 = !DILocation(line: 403, column: 9, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13085, file: !12795, line: 403, column: 9)
!13088 = !DILocation(line: 403, column: 30, scope: !13087)
!13089 = !DILocation(line: 403, column: 9, scope: !13085)
!13090 = !DILocation(line: 406, column: 21, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13092, file: !12795, line: 406, column: 11)
!13092 = distinct !DILexicalBlock(scope: !13087, file: !12795, line: 404, column: 5)
!13093 = !DILocation(line: 406, column: 11, scope: !13092)
!13094 = !DILocation(line: 408, column: 9, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13091, file: !12795, line: 407, column: 7)
!13096 = !DILocation(line: 409, column: 7, scope: !13095)
!13097 = !DILocation(line: 412, column: 9, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13091, file: !12795, line: 411, column: 7)
!13099 = !DILocation(line: 416, column: 7, scope: !13092)
!13100 = !DILocation(line: 417, column: 7, scope: !13092)
!13101 = !DILocation(line: 417, column: 14, scope: !13092)
!13102 = !DILocation(line: 417, column: 35, scope: !13092)
!13103 = distinct !{!13103, !13100, !13104}
!13104 = !DILocation(line: 420, column: 7, scope: !13092)
!13105 = !DILocation(line: 424, column: 78, scope: !13085)
!13106 = !DILocation(line: 424, column: 107, scope: !13085)
!13107 = !DILocation(line: 424, column: 7, scope: !13085)
!13108 = !DILocation(line: 427, column: 14, scope: !13085)
!13109 = !DILocation(line: 428, column: 3, scope: !13085)
!13110 = !DILocation(line: 0, scope: !13081)
!13111 = !DILocation(line: 435, column: 3, scope: !13069)
!13112 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9569, file: !9569, line: 545, type: !7225, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13113 = !DILocation(line: 547, column: 12, scope: !13112)
!13114 = !DILocation(line: 547, column: 11, scope: !13112)
!13115 = !DILocation(line: 547, column: 3, scope: !13112)
!13116 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9569, file: !9569, line: 505, type: !3055, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13117 = !DILocation(line: 507, column: 3, scope: !13116)
!13118 = !DILocation(line: 508, column: 1, scope: !13116)
!13119 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9569, file: !9569, line: 515, type: !3055, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13120 = !DILocation(line: 517, column: 3, scope: !13119)
!13121 = !DILocation(line: 518, column: 1, scope: !13119)
!13122 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9569, file: !9569, line: 525, type: !3055, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13123 = !DILocation(line: 527, column: 3, scope: !13122)
!13124 = !DILocation(line: 528, column: 1, scope: !13122)
!13125 = distinct !DISubprogram(name: "z_device_state_init", scope: !13126, file: !13126, line: 23, type: !3055, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13127)
!13126 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13127 = !{!13128}
!13128 = !DILocalVariable(name: "dev", scope: !13125, file: !13126, line: 25, type: !13129)
!13129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13130, size: 32)
!13130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13131)
!13131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !13132)
!13132 = !{!13133, !13134, !13135, !13136, !13142, !13143}
!13133 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13131, file: !260, line: 380, baseType: !118, size: 32)
!13134 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13131, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!13135 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13131, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13131, file: !260, line: 386, baseType: !13137, size: 32, offset: 96)
!13137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13138, size: 32)
!13138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !13139)
!13139 = !{!13140, !13141}
!13140 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13138, file: !260, line: 359, baseType: !195, size: 8)
!13141 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13138, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13142 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13131, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!13143 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13131, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!13144 = !DILocation(line: 0, scope: !13125)
!13145 = !DILocation(line: 31, column: 1, scope: !13125)
!13146 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13126, file: !13126, line: 33, type: !13147, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13149)
!13147 = !DISubroutineType(types: !13148)
!13148 = !{!13129, !118}
!13149 = !{!13150, !13151}
!13150 = !DILocalVariable(name: "name", arg: 1, scope: !13146, file: !13126, line: 33, type: !118)
!13151 = !DILocalVariable(name: "dev", scope: !13146, file: !13126, line: 35, type: !13129)
!13152 = !DILocation(line: 0, scope: !13146)
!13153 = !DILocation(line: 40, column: 12, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13146, file: !13126, line: 40, column: 6)
!13155 = !DILocation(line: 40, column: 21, scope: !13154)
!13156 = !DILocation(line: 40, column: 25, scope: !13154)
!13157 = !DILocation(line: 40, column: 33, scope: !13154)
!13158 = !DILocation(line: 40, column: 6, scope: !13146)
!13159 = !DILocation(line: 55, column: 2, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13146, file: !13126, line: 55, column: 2)
!13161 = !DILocation(line: 50, column: 7, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13163, file: !13126, line: 50, column: 7)
!13163 = distinct !DILexicalBlock(scope: !13164, file: !13126, line: 49, column: 57)
!13164 = distinct !DILexicalBlock(scope: !13165, file: !13126, line: 49, column: 2)
!13165 = distinct !DILexicalBlock(scope: !13146, file: !13126, line: 49, column: 2)
!13166 = !DILocation(line: 50, column: 30, scope: !13162)
!13167 = !DILocation(line: 50, column: 39, scope: !13162)
!13168 = !DILocation(line: 50, column: 44, scope: !13162)
!13169 = !DILocation(line: 50, column: 7, scope: !13163)
!13170 = !DILocation(line: 49, column: 53, scope: !13164)
!13171 = !DILocation(line: 49, column: 33, scope: !13164)
!13172 = !DILocation(line: 49, column: 2, scope: !13165)
!13173 = distinct !{!13173, !13172, !13174}
!13174 = !DILocation(line: 53, column: 2, scope: !13165)
!13175 = !DILocation(line: 56, column: 7, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13177, file: !13126, line: 56, column: 7)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !13126, line: 55, column: 57)
!13178 = distinct !DILexicalBlock(scope: !13160, file: !13126, line: 55, column: 2)
!13179 = !DILocation(line: 56, column: 30, scope: !13176)
!13180 = !DILocation(line: 56, column: 52, scope: !13176)
!13181 = !DILocation(line: 56, column: 34, scope: !13176)
!13182 = !DILocation(line: 56, column: 58, scope: !13176)
!13183 = !DILocation(line: 56, column: 7, scope: !13177)
!13184 = !DILocation(line: 55, column: 53, scope: !13178)
!13185 = !DILocation(line: 55, column: 33, scope: !13178)
!13186 = distinct !{!13186, !13159, !13187}
!13187 = !DILocation(line: 59, column: 2, scope: !13160)
!13188 = !DILocation(line: 62, column: 1, scope: !13146)
!13189 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13126, file: !13126, line: 93, type: !13190, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13192)
!13190 = !DISubroutineType(types: !13191)
!13191 = !{!145, !13129}
!13192 = !{!13193}
!13193 = !DILocalVariable(name: "dev", arg: 1, scope: !13189, file: !13126, line: 93, type: !13129)
!13194 = !DILocation(line: 0, scope: !13189)
!13195 = !DILocation(line: 99, column: 10, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13189, file: !13126, line: 99, column: 6)
!13197 = !DILocation(line: 99, column: 6, scope: !13189)
!13198 = !DILocation(line: 103, column: 14, scope: !13189)
!13199 = !DILocation(line: 103, column: 21, scope: !13189)
!13200 = !DILocation(line: 103, column: 33, scope: !13189)
!13201 = !DILocation(line: 103, column: 49, scope: !13189)
!13202 = !DILocation(line: 103, column: 58, scope: !13189)
!13203 = !DILocation(line: 104, column: 1, scope: !13189)
!13204 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13126, file: !13126, line: 87, type: !13205, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13208)
!13205 = !DISubroutineType(types: !13206)
!13206 = !{!185, !13207}
!13207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13129, size: 32)
!13208 = !{!13209}
!13209 = !DILocalVariable(name: "devices", arg: 1, scope: !13204, file: !13126, line: 87, type: !13207)
!13210 = !DILocation(line: 0, scope: !13204)
!13211 = !DILocation(line: 89, column: 11, scope: !13204)
!13212 = !DILocation(line: 90, column: 2, scope: !13204)
!13213 = distinct !DISubprogram(name: "device_required_foreach", scope: !13126, file: !13126, line: 125, type: !13214, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13220)
!13214 = !DISubroutineType(types: !13215)
!13215 = !{!107, !13129, !13216, !106}
!13216 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !260, line: 471, baseType: !13217)
!13217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13218, size: 32)
!13218 = !DISubroutineType(types: !13219)
!13219 = !{!107, !13129, !106}
!13220 = !{!13221, !13222, !13223, !13224, !13225}
!13221 = !DILocalVariable(name: "dev", arg: 1, scope: !13213, file: !13126, line: 125, type: !13129)
!13222 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13213, file: !13126, line: 126, type: !13216)
!13223 = !DILocalVariable(name: "context", arg: 3, scope: !13213, file: !13126, line: 127, type: !106)
!13224 = !DILocalVariable(name: "handle_count", scope: !13213, file: !13126, line: 129, type: !185)
!13225 = !DILocalVariable(name: "handles", scope: !13213, file: !13126, line: 130, type: !273)
!13226 = !DILocation(line: 0, scope: !13213)
!13227 = !DILocation(line: 129, column: 2, scope: !13213)
!13228 = !DILocation(line: 129, column: 9, scope: !13213)
!13229 = !DILocation(line: 130, column: 35, scope: !13213)
!13230 = !DILocation(line: 132, column: 33, scope: !13213)
!13231 = !DILocation(line: 132, column: 9, scope: !13213)
!13232 = !DILocation(line: 133, column: 1, scope: !13213)
!13233 = !DILocation(line: 132, column: 2, scope: !13213)
!13234 = distinct !DISubprogram(name: "device_required_handles_get", scope: !260, file: !260, line: 493, type: !13235, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13237)
!13235 = !DISubroutineType(types: !13236)
!13236 = !{!273, !13129, !2554}
!13237 = !{!13238, !13239, !13240, !13241}
!13238 = !DILocalVariable(name: "dev", arg: 1, scope: !13234, file: !260, line: 493, type: !13129)
!13239 = !DILocalVariable(name: "count", arg: 2, scope: !13234, file: !260, line: 493, type: !2554)
!13240 = !DILocalVariable(name: "rv", scope: !13234, file: !260, line: 495, type: !273)
!13241 = !DILocalVariable(name: "i", scope: !13242, file: !260, line: 498, type: !185)
!13242 = distinct !DILexicalBlock(scope: !13243, file: !260, line: 497, column: 18)
!13243 = distinct !DILexicalBlock(scope: !13234, file: !260, line: 497, column: 6)
!13244 = !DILocation(line: 0, scope: !13234)
!13245 = !DILocation(line: 495, column: 35, scope: !13234)
!13246 = !DILocation(line: 497, column: 9, scope: !13243)
!13247 = !DILocation(line: 497, column: 6, scope: !13234)
!13248 = !DILocation(line: 0, scope: !13242)
!13249 = !DILocation(line: 500, column: 11, scope: !13242)
!13250 = !DILocation(line: 500, column: 40, scope: !13242)
!13251 = !DILocation(line: 502, column: 4, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13242, file: !260, line: 501, column: 40)
!13253 = distinct !{!13253, !13254, !13255}
!13254 = !DILocation(line: 500, column: 3, scope: !13242)
!13255 = !DILocation(line: 503, column: 3, scope: !13242)
!13256 = !DILocation(line: 504, column: 10, scope: !13242)
!13257 = !DILocation(line: 505, column: 2, scope: !13242)
!13258 = !DILocation(line: 507, column: 2, scope: !13234)
!13259 = distinct !DISubprogram(name: "device_visitor", scope: !13126, file: !13126, line: 106, type: !13260, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13262)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{!107, !273, !185, !13216, !106}
!13262 = !{!13263, !13264, !13265, !13266, !13267, !13269, !13272, !13273}
!13263 = !DILocalVariable(name: "handles", arg: 1, scope: !13259, file: !13126, line: 106, type: !273)
!13264 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13259, file: !13126, line: 107, type: !185)
!13265 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13259, file: !13126, line: 108, type: !13216)
!13266 = !DILocalVariable(name: "context", arg: 4, scope: !13259, file: !13126, line: 109, type: !106)
!13267 = !DILocalVariable(name: "i", scope: !13268, file: !13126, line: 112, type: !185)
!13268 = distinct !DILexicalBlock(scope: !13259, file: !13126, line: 112, column: 2)
!13269 = !DILocalVariable(name: "dh", scope: !13270, file: !13126, line: 113, type: !275)
!13270 = distinct !DILexicalBlock(scope: !13271, file: !13126, line: 112, column: 44)
!13271 = distinct !DILexicalBlock(scope: !13268, file: !13126, line: 112, column: 2)
!13272 = !DILocalVariable(name: "rdev", scope: !13270, file: !13126, line: 114, type: !13129)
!13273 = !DILocalVariable(name: "rc", scope: !13270, file: !13126, line: 115, type: !107)
!13274 = !DILocation(line: 0, scope: !13259)
!13275 = !DILocation(line: 0, scope: !13268)
!13276 = !DILocation(line: 112, column: 23, scope: !13271)
!13277 = !DILocation(line: 112, column: 2, scope: !13268)
!13278 = distinct !{!13278, !13277, !13279}
!13279 = !DILocation(line: 120, column: 2, scope: !13268)
!13280 = !DILocation(line: 113, column: 24, scope: !13270)
!13281 = !DILocation(line: 0, scope: !13270)
!13282 = !DILocation(line: 114, column: 31, scope: !13270)
!13283 = !DILocation(line: 115, column: 12, scope: !13270)
!13284 = !DILocation(line: 117, column: 10, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13270, file: !13126, line: 117, column: 7)
!13286 = !DILocation(line: 112, column: 39, scope: !13271)
!13287 = !DILocation(line: 123, column: 1, scope: !13259)
!13288 = distinct !DISubprogram(name: "device_from_handle", scope: !260, file: !260, line: 439, type: !13289, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13291)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{!13129, !275}
!13291 = !{!13292, !13293, !13294}
!13292 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13288, file: !260, line: 439, type: !275)
!13293 = !DILocalVariable(name: "dev", scope: !13288, file: !260, line: 443, type: !13129)
!13294 = !DILocalVariable(name: "numdev", scope: !13288, file: !260, line: 444, type: !185)
!13295 = !DILocation(line: 0, scope: !13288)
!13296 = !DILocation(line: 446, column: 7, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13288, file: !260, line: 446, column: 6)
!13298 = !DILocation(line: 446, column: 18, scope: !13297)
!13299 = !DILocation(line: 446, column: 23, scope: !13297)
!13300 = !DILocation(line: 450, column: 2, scope: !13288)
!13301 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13126, file: !13126, line: 135, type: !13214, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13302)
!13302 = !{!13303, !13304, !13305, !13306, !13307}
!13303 = !DILocalVariable(name: "dev", arg: 1, scope: !13301, file: !13126, line: 135, type: !13129)
!13304 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13301, file: !13126, line: 136, type: !13216)
!13305 = !DILocalVariable(name: "context", arg: 3, scope: !13301, file: !13126, line: 137, type: !106)
!13306 = !DILocalVariable(name: "handle_count", scope: !13301, file: !13126, line: 139, type: !185)
!13307 = !DILocalVariable(name: "handles", scope: !13301, file: !13126, line: 140, type: !273)
!13308 = !DILocation(line: 0, scope: !13301)
!13309 = !DILocation(line: 139, column: 2, scope: !13301)
!13310 = !DILocation(line: 139, column: 9, scope: !13301)
!13311 = !DILocation(line: 140, column: 35, scope: !13301)
!13312 = !DILocation(line: 142, column: 33, scope: !13301)
!13313 = !DILocation(line: 142, column: 9, scope: !13301)
!13314 = !DILocation(line: 143, column: 1, scope: !13301)
!13315 = !DILocation(line: 142, column: 2, scope: !13301)
!13316 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !260, file: !260, line: 573, type: !13235, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13317)
!13317 = !{!13318, !13319, !13320, !13321, !13322}
!13318 = !DILocalVariable(name: "dev", arg: 1, scope: !13316, file: !260, line: 573, type: !13129)
!13319 = !DILocalVariable(name: "count", arg: 2, scope: !13316, file: !260, line: 573, type: !2554)
!13320 = !DILocalVariable(name: "rv", scope: !13316, file: !260, line: 575, type: !273)
!13321 = !DILocalVariable(name: "region", scope: !13316, file: !260, line: 576, type: !185)
!13322 = !DILocalVariable(name: "i", scope: !13316, file: !260, line: 577, type: !185)
!13323 = !DILocation(line: 0, scope: !13316)
!13324 = !DILocation(line: 575, column: 35, scope: !13316)
!13325 = !DILocation(line: 579, column: 9, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13316, file: !260, line: 579, column: 6)
!13327 = !DILocation(line: 579, column: 6, scope: !13316)
!13328 = !DILocation(line: 582, column: 8, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13330, file: !260, line: 582, column: 8)
!13330 = distinct !DILexicalBlock(scope: !13331, file: !260, line: 581, column: 23)
!13331 = distinct !DILexicalBlock(scope: !13326, file: !260, line: 579, column: 18)
!13332 = !DILocation(line: 582, column: 12, scope: !13329)
!13333 = !DILocation(line: 585, column: 6, scope: !13330)
!13334 = !DILocation(line: 0, scope: !13331)
!13335 = !DILocation(line: 581, column: 17, scope: !13331)
!13336 = !DILocation(line: 581, column: 3, scope: !13331)
!13337 = !DILocation(line: 588, column: 10, scope: !13331)
!13338 = !DILocation(line: 588, column: 16, scope: !13331)
!13339 = !DILocation(line: 589, column: 4, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13331, file: !260, line: 588, column: 39)
!13341 = !DILocation(line: 588, column: 3, scope: !13331)
!13342 = distinct !{!13342, !13341, !13343}
!13343 = !DILocation(line: 590, column: 3, scope: !13331)
!13344 = !DILocation(line: 591, column: 10, scope: !13331)
!13345 = !DILocation(line: 592, column: 2, scope: !13331)
!13346 = !DILocation(line: 575, column: 25, scope: !13316)
!13347 = !DILocation(line: 594, column: 2, scope: !13316)
!13348 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1966, file: !1966, line: 49, type: !13349, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1963, retainedNodes: !2175)
!13349 = !DISubroutineType(types: !13350)
!13350 = !{!187}
!13351 = !DILocation(line: 51, column: 10, scope: !13348)
!13352 = !DILocation(line: 51, column: 20, scope: !13348)
!13353 = !DILocation(line: 51, column: 2, scope: !13348)
!13354 = distinct !DISubprogram(name: "coredump", scope: !3022, file: !3022, line: 209, type: !13355, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13504)
!13355 = !DISubroutineType(types: !13356)
!13356 = !{null, !32, !13357, !13401}
!13357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13358, size: 32)
!13358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13359)
!13359 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2684, line: 141, baseType: !13360)
!13360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2684, line: 97, size: 256, elements: !13361)
!13361 = !{!13362}
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13360, file: !2684, line: 107, baseType: !13363, size: 256)
!13363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2684, line: 98, size: 256, elements: !13364)
!13364 = !{!13365, !13370, !13375, !13380, !13385, !13390, !13395, !13400}
!13365 = !DIDerivedType(tag: DW_TAG_member, scope: !13363, file: !2684, line: 99, baseType: !13366, size: 32)
!13366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13363, file: !2684, line: 99, size: 32, elements: !13367)
!13367 = !{!13368, !13369}
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13366, file: !2684, line: 99, baseType: !152, size: 32)
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13366, file: !2684, line: 99, baseType: !152, size: 32)
!13370 = !DIDerivedType(tag: DW_TAG_member, scope: !13363, file: !2684, line: 100, baseType: !13371, size: 32, offset: 32)
!13371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13363, file: !2684, line: 100, size: 32, elements: !13372)
!13372 = !{!13373, !13374}
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13371, file: !2684, line: 100, baseType: !152, size: 32)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13371, file: !2684, line: 100, baseType: !152, size: 32)
!13375 = !DIDerivedType(tag: DW_TAG_member, scope: !13363, file: !2684, line: 101, baseType: !13376, size: 32, offset: 64)
!13376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13363, file: !2684, line: 101, size: 32, elements: !13377)
!13377 = !{!13378, !13379}
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13376, file: !2684, line: 101, baseType: !152, size: 32)
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13376, file: !2684, line: 101, baseType: !152, size: 32)
!13380 = !DIDerivedType(tag: DW_TAG_member, scope: !13363, file: !2684, line: 102, baseType: !13381, size: 32, offset: 96)
!13381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13363, file: !2684, line: 102, size: 32, elements: !13382)
!13382 = !{!13383, !13384}
!13383 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13381, file: !2684, line: 102, baseType: !152, size: 32)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13381, file: !2684, line: 102, baseType: !152, size: 32)
!13385 = !DIDerivedType(tag: DW_TAG_member, scope: !13363, file: !2684, line: 103, baseType: !13386, size: 32, offset: 128)
!13386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13363, file: !2684, line: 103, size: 32, elements: !13387)
!13387 = !{!13388, !13389}
!13388 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13386, file: !2684, line: 103, baseType: !152, size: 32)
!13389 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13386, file: !2684, line: 103, baseType: !152, size: 32)
!13390 = !DIDerivedType(tag: DW_TAG_member, scope: !13363, file: !2684, line: 104, baseType: !13391, size: 32, offset: 160)
!13391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13363, file: !2684, line: 104, size: 32, elements: !13392)
!13392 = !{!13393, !13394}
!13393 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13391, file: !2684, line: 104, baseType: !152, size: 32)
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13391, file: !2684, line: 104, baseType: !152, size: 32)
!13395 = !DIDerivedType(tag: DW_TAG_member, scope: !13363, file: !2684, line: 105, baseType: !13396, size: 32, offset: 192)
!13396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13363, file: !2684, line: 105, size: 32, elements: !13397)
!13397 = !{!13398, !13399}
!13398 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13396, file: !2684, line: 105, baseType: !152, size: 32)
!13399 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13396, file: !2684, line: 105, baseType: !152, size: 32)
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13363, file: !2684, line: 106, baseType: !152, size: 32, offset: 224)
!13401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13402, size: 32)
!13402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !13403)
!13403 = !{!13404, !13462, !13474, !13475, !13476, !13477, !13478, !13484, !13499}
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13402, file: !322, line: 247, baseType: !13405, size: 384)
!13405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !13406)
!13406 = !{!13407, !13431, !13438, !13439, !13440, !13449, !13450, !13451}
!13407 = !DIDerivedType(tag: DW_TAG_member, scope: !13405, file: !322, line: 60, baseType: !13408, size: 64)
!13408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13405, file: !322, line: 60, size: 64, elements: !13409)
!13409 = !{!13410, !13425}
!13410 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13408, file: !322, line: 61, baseType: !13411, size: 64)
!13411 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !13412)
!13412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !13413)
!13413 = !{!13414, !13420}
!13414 = !DIDerivedType(tag: DW_TAG_member, scope: !13412, file: !332, line: 38, baseType: !13415, size: 32)
!13415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13412, file: !332, line: 38, size: 32, elements: !13416)
!13416 = !{!13417, !13419}
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13415, file: !332, line: 39, baseType: !13418, size: 32)
!13418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13412, size: 32)
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13415, file: !332, line: 40, baseType: !13418, size: 32)
!13420 = !DIDerivedType(tag: DW_TAG_member, scope: !13412, file: !332, line: 42, baseType: !13421, size: 32, offset: 32)
!13421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13412, file: !332, line: 42, size: 32, elements: !13422)
!13422 = !{!13423, !13424}
!13423 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13421, file: !332, line: 43, baseType: !13418, size: 32)
!13424 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13421, file: !332, line: 44, baseType: !13418, size: 32)
!13425 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13408, file: !322, line: 62, baseType: !13426, size: 64)
!13426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !13427)
!13427 = !{!13428}
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13426, file: !348, line: 50, baseType: !13429, size: 64)
!13429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13430, size: 64, elements: !353)
!13430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13426, size: 32)
!13431 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13405, file: !322, line: 68, baseType: !13432, size: 32, offset: 64)
!13432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13433, size: 32)
!13433 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !13434)
!13434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !13435)
!13435 = !{!13436}
!13436 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13434, file: !358, line: 232, baseType: !13437, size: 64)
!13437 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !13412)
!13438 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13405, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!13439 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13405, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!13440 = !DIDerivedType(tag: DW_TAG_member, scope: !13405, file: !322, line: 90, baseType: !13441, size: 16, offset: 112)
!13441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13405, file: !322, line: 90, size: 16, elements: !13442)
!13442 = !{!13443, !13448}
!13443 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !322, line: 91, baseType: !13444, size: 16)
!13444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13441, file: !322, line: 91, size: 16, elements: !13445)
!13445 = !{!13446, !13447}
!13446 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13444, file: !322, line: 96, baseType: !372, size: 8)
!13447 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13444, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!13448 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13441, file: !322, line: 100, baseType: !197, size: 16)
!13449 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13405, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!13450 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13405, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!13451 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13405, file: !322, line: 131, baseType: !13452, size: 192, offset: 192)
!13452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !13453)
!13453 = !{!13454, !13455, !13461}
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13452, file: !358, line: 245, baseType: !13411, size: 64)
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13452, file: !358, line: 246, baseType: !13456, size: 32, offset: 64)
!13456 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !13457)
!13457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13458, size: 32)
!13458 = !DISubroutineType(types: !13459)
!13459 = !{null, !13460}
!13460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13452, size: 32)
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13452, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!13462 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13402, file: !322, line: 250, baseType: !13463, size: 288, offset: 384)
!13463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !13464)
!13464 = !{!13465, !13466, !13467, !13468, !13469, !13470, !13471, !13472, !13473}
!13465 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13463, file: !392, line: 26, baseType: !152, size: 32)
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13463, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!13467 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13463, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!13468 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13463, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!13469 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13463, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!13470 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13463, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13463, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13463, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!13473 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13463, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13402, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!13475 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13402, file: !322, line: 256, baseType: !13433, size: 64, offset: 704)
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13402, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13402, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13402, file: !322, line: 300, baseType: !13479, size: 96, offset: 1056)
!13479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !13480)
!13480 = !{!13481, !13482, !13483}
!13481 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13479, file: !322, line: 153, baseType: !22, size: 32)
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13479, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!13483 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13479, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13402, file: !322, line: 325, baseType: !13485, size: 32, offset: 1152)
!13485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13486, size: 32)
!13486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !13487)
!13487 = !{!13488, !13494, !13495}
!13488 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13486, file: !419, line: 5074, baseType: !13489, size: 96)
!13489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !13490)
!13490 = !{!13491, !13492, !13493}
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13489, file: !423, line: 57, baseType: !426, size: 32)
!13492 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13489, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!13493 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13489, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!13494 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13486, file: !419, line: 5075, baseType: !13433, size: 64, offset: 96)
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13486, file: !419, line: 5076, baseType: !13496, size: 32, offset: 160)
!13496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !13497)
!13497 = !{!13498}
!13498 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13496, file: !433, line: 52, baseType: !22, size: 32)
!13499 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13402, file: !322, line: 343, baseType: !13500, size: 64, offset: 1184)
!13500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !13501)
!13501 = !{!13502, !13503}
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13500, file: !392, line: 63, baseType: !152, size: 32)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13500, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!13504 = !{!13505, !13506, !13507}
!13505 = !DILocalVariable(name: "reason", arg: 1, scope: !13354, file: !3022, line: 209, type: !32)
!13506 = !DILocalVariable(name: "esf", arg: 2, scope: !13354, file: !3022, line: 209, type: !13357)
!13507 = !DILocalVariable(name: "thread", arg: 3, scope: !13354, file: !3022, line: 210, type: !13401)
!13508 = !DILocation(line: 0, scope: !13354)
!13509 = !DILocation(line: 212, column: 1, scope: !13354)
!13510 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3022, file: !3022, line: 214, type: !13511, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13513)
!13511 = !DISubroutineType(types: !13512)
!13512 = !{null, !22, !22}
!13513 = !{!13514, !13515}
!13514 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13510, file: !3022, line: 214, type: !22)
!13515 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13510, file: !3022, line: 214, type: !22)
!13516 = !DILocation(line: 0, scope: !13510)
!13517 = !DILocation(line: 216, column: 1, scope: !13510)
!13518 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3022, file: !3022, line: 218, type: !13519, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13521)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{null, !194, !185}
!13521 = !{!13522, !13523}
!13522 = !DILocalVariable(name: "buf", arg: 1, scope: !13518, file: !3022, line: 218, type: !194)
!13523 = !DILocalVariable(name: "buflen", arg: 2, scope: !13518, file: !3022, line: 218, type: !185)
!13524 = !DILocation(line: 0, scope: !13518)
!13525 = !DILocation(line: 220, column: 1, scope: !13518)
!13526 = distinct !DISubprogram(name: "coredump_query", scope: !3022, file: !3022, line: 222, type: !13527, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13529)
!13527 = !DISubroutineType(types: !13528)
!13528 = !{!107, !3021, !106}
!13529 = !{!13530, !13531}
!13530 = !DILocalVariable(name: "query_id", arg: 1, scope: !13526, file: !3022, line: 222, type: !3021)
!13531 = !DILocalVariable(name: "arg", arg: 2, scope: !13526, file: !3022, line: 222, type: !106)
!13532 = !DILocation(line: 0, scope: !13526)
!13533 = !DILocation(line: 224, column: 2, scope: !13526)
!13534 = distinct !DISubprogram(name: "coredump_cmd", scope: !3022, file: !3022, line: 227, type: !13535, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13537)
!13535 = !DISubroutineType(types: !13536)
!13536 = !{!107, !3028, !106}
!13537 = !{!13538, !13539}
!13538 = !DILocalVariable(name: "query_id", arg: 1, scope: !13534, file: !3022, line: 227, type: !3028)
!13539 = !DILocalVariable(name: "arg", arg: 2, scope: !13534, file: !3022, line: 227, type: !106)
!13540 = !DILocation(line: 0, scope: !13534)
!13541 = !DILocation(line: 229, column: 2, scope: !13534)
!13542 = distinct !DISubprogram(name: "arch_system_halt", scope: !13543, file: !13543, line: 23, type: !5895, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13544)
!13543 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13544 = !{!13545}
!13545 = !DILocalVariable(name: "reason", arg: 1, scope: !13542, file: !13543, line: 23, type: !32)
!13546 = !DILocation(line: 0, scope: !13542)
!13547 = !DILocation(line: 55, column: 2, scope: !13548, inlinedAt: !13552)
!13548 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13549)
!13549 = !{!13550, !13551}
!13550 = !DILocalVariable(name: "key", scope: !13548, file: !5884, line: 44, type: !32)
!13551 = !DILocalVariable(name: "tmp", scope: !13548, file: !5884, line: 53, type: !32)
!13552 = distinct !DILocation(line: 31, column: 8, scope: !13542)
!13553 = !{i64 1655058}
!13554 = !DILocation(line: 0, scope: !13548, inlinedAt: !13552)
!13555 = !DILocation(line: 32, column: 2, scope: !13542)
!13556 = !DILocation(line: 32, column: 2, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13558, file: !13543, line: 32, column: 2)
!13558 = distinct !DILexicalBlock(scope: !13542, file: !13543, line: 32, column: 2)
!13559 = distinct !{!13559, !13560, !13561}
!13560 = !DILocation(line: 32, column: 2, scope: !13558)
!13561 = !DILocation(line: 34, column: 2, scope: !13558)
!13562 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13543, file: !13543, line: 39, type: !13563, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13565)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{null, !32, !13357}
!13565 = !{!13566, !13567}
!13566 = !DILocalVariable(name: "reason", arg: 1, scope: !13562, file: !13543, line: 39, type: !32)
!13567 = !DILocalVariable(name: "esf", arg: 2, scope: !13562, file: !13543, line: 40, type: !13357)
!13568 = !DILocation(line: 0, scope: !13562)
!13569 = !DILocation(line: 45, column: 2, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !13543, line: 45, column: 2)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !13543, line: 45, column: 2)
!13572 = distinct !DILexicalBlock(scope: !13573, file: !13543, line: 45, column: 2)
!13573 = distinct !DILexicalBlock(scope: !13562, file: !13543, line: 45, column: 2)
!13574 = !DILocation(line: 46, column: 2, scope: !13562)
!13575 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13543, file: !13543, line: 81, type: !5895, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13576)
!13576 = !{!13577}
!13577 = !DILocalVariable(name: "reason", arg: 1, scope: !13575, file: !13543, line: 81, type: !32)
!13578 = !DILocation(line: 0, scope: !13575)
!13579 = !DILocation(line: 83, column: 2, scope: !13575)
!13580 = distinct !DISubprogram(name: "z_fatal_error", scope: !13543, file: !13543, line: 96, type: !13563, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13581)
!13581 = !{!13582, !13583, !13584, !13585}
!13582 = !DILocalVariable(name: "reason", arg: 1, scope: !13580, file: !13543, line: 96, type: !32)
!13583 = !DILocalVariable(name: "esf", arg: 2, scope: !13580, file: !13543, line: 96, type: !13357)
!13584 = !DILocalVariable(name: "key", scope: !13580, file: !13543, line: 102, type: !32)
!13585 = !DILocalVariable(name: "thread", scope: !13580, file: !13543, line: 103, type: !13401)
!13586 = !DILocation(line: 0, scope: !13580)
!13587 = !DILocation(line: 55, column: 2, scope: !13548, inlinedAt: !13588)
!13588 = distinct !DILocation(line: 102, column: 21, scope: !13580)
!13589 = !DILocation(line: 0, scope: !13548, inlinedAt: !13588)
!13590 = !DILocation(line: 104, column: 4, scope: !13580)
!13591 = !DILocation(line: 109, column: 2, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13593, file: !13543, line: 109, column: 2)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !13543, line: 109, column: 2)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !13543, line: 109, column: 2)
!13595 = distinct !DILexicalBlock(scope: !13580, file: !13543, line: 109, column: 2)
!13596 = !DILocation(line: 119, column: 11, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13580, file: !13543, line: 119, column: 6)
!13598 = !DILocation(line: 119, column: 20, scope: !13597)
!13599 = !DILocalVariable(name: "esf", arg: 1, scope: !13600, file: !7231, line: 71, type: !13357)
!13600 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7231, file: !7231, line: 71, type: !13601, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13603)
!13601 = !DISubroutineType(types: !13602)
!13602 = !{!145, !13357}
!13603 = !{!13599}
!13604 = !DILocation(line: 0, scope: !13600, inlinedAt: !13605)
!13605 = distinct !DILocation(line: 119, column: 23, scope: !13597)
!13606 = !DILocation(line: 73, column: 21, scope: !13600, inlinedAt: !13605)
!13607 = !DILocation(line: 73, column: 26, scope: !13600, inlinedAt: !13605)
!13608 = !DILocation(line: 73, column: 9, scope: !13600, inlinedAt: !13605)
!13609 = !DILocation(line: 119, column: 6, scope: !13580)
!13610 = !DILocation(line: 120, column: 3, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13612, file: !13543, line: 120, column: 3)
!13612 = distinct !DILexicalBlock(scope: !13613, file: !13543, line: 120, column: 3)
!13613 = distinct !DILexicalBlock(scope: !13614, file: !13543, line: 120, column: 3)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !13543, line: 120, column: 3)
!13615 = distinct !DILexicalBlock(scope: !13597, file: !13543, line: 119, column: 57)
!13616 = !DILocation(line: 121, column: 2, scope: !13615)
!13617 = !DILocation(line: 124, column: 2, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !13543, line: 124, column: 2)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !13543, line: 124, column: 2)
!13620 = distinct !DILexicalBlock(scope: !13621, file: !13543, line: 124, column: 2)
!13621 = distinct !DILexicalBlock(scope: !13580, file: !13543, line: 124, column: 2)
!13622 = !DILocation(line: 131, column: 2, scope: !13580)
!13623 = !DILocation(line: 0, scope: !13600, inlinedAt: !13624)
!13624 = distinct !DILocation(line: 163, column: 24, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13626, file: !13543, line: 163, column: 7)
!13626 = distinct !DILexicalBlock(scope: !13627, file: !13543, line: 160, column: 9)
!13627 = distinct !DILexicalBlock(scope: !13580, file: !13543, line: 146, column: 6)
!13628 = !DILocation(line: 73, column: 21, scope: !13600, inlinedAt: !13624)
!13629 = !DILocation(line: 73, column: 26, scope: !13600, inlinedAt: !13624)
!13630 = !DILocation(line: 73, column: 9, scope: !13600, inlinedAt: !13624)
!13631 = !DILocation(line: 163, column: 7, scope: !13626)
!13632 = !DILocalVariable(name: "key", arg: 1, scope: !13633, file: !5884, line: 84, type: !32)
!13633 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13634)
!13634 = !{!13632}
!13635 = !DILocation(line: 0, scope: !13633, inlinedAt: !13636)
!13636 = distinct !DILocation(line: 171, column: 4, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13625, file: !13543, line: 163, column: 58)
!13638 = !DILocation(line: 95, column: 2, scope: !13633, inlinedAt: !13636)
!13639 = !{i64 1655875}
!13640 = !DILocation(line: 172, column: 4, scope: !13637)
!13641 = !DILocation(line: 163, column: 21, scope: !13625)
!13642 = !DILocation(line: 178, column: 15, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13644, file: !13543, line: 178, column: 8)
!13644 = distinct !DILexicalBlock(scope: !13625, file: !13543, line: 174, column: 10)
!13645 = !DILocation(line: 0, scope: !13633, inlinedAt: !13646)
!13646 = distinct !DILocation(line: 179, column: 5, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13643, file: !13543, line: 178, column: 38)
!13648 = !DILocation(line: 0, scope: !13633, inlinedAt: !13649)
!13649 = distinct !DILocation(line: 186, column: 2, scope: !13580)
!13650 = !DILocation(line: 178, column: 8, scope: !13644)
!13651 = !DILocation(line: 189, column: 3, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13653, file: !13543, line: 188, column: 41)
!13653 = distinct !DILexicalBlock(scope: !13580, file: !13543, line: 188, column: 6)
!13654 = !DILocation(line: 191, column: 1, scope: !13580)
!13655 = distinct !DISubprogram(name: "k_current_get", scope: !419, file: !419, line: 530, type: !13656, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !2175)
!13656 = !DISubroutineType(types: !13657)
!13657 = !{!13658}
!13658 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !13401)
!13659 = !DILocation(line: 535, column: 9, scope: !13655)
!13660 = !DILocation(line: 535, column: 2, scope: !13655)
!13661 = distinct !DISubprogram(name: "reason_to_str", scope: !13543, file: !13543, line: 62, type: !13662, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13664)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{!118, !32}
!13664 = !{!13665}
!13665 = !DILocalVariable(name: "reason", arg: 1, scope: !13661, file: !13543, line: 62, type: !32)
!13666 = !DILocation(line: 0, scope: !13661)
!13667 = !DILocation(line: 64, column: 2, scope: !13661)
!13668 = !DILocation(line: 0, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13661, file: !13543, line: 64, column: 18)
!13670 = !DILocation(line: 78, column: 1, scope: !13661)
!13671 = distinct !DISubprogram(name: "thread_name_get", scope: !13543, file: !13543, line: 51, type: !13672, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13674)
!13672 = !DISubroutineType(types: !13673)
!13673 = !{!118, !13401}
!13674 = !{!13675, !13676}
!13675 = !DILocalVariable(name: "thread", arg: 1, scope: !13671, file: !13543, line: 51, type: !13401)
!13676 = !DILocalVariable(name: "thread_name", scope: !13671, file: !13543, line: 53, type: !118)
!13677 = !DILocation(line: 0, scope: !13671)
!13678 = !DILocation(line: 53, column: 36, scope: !13671)
!13679 = !DILocation(line: 53, column: 28, scope: !13671)
!13680 = !DILocation(line: 53, column: 47, scope: !13671)
!13681 = !DILocation(line: 55, column: 19, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13671, file: !13543, line: 55, column: 6)
!13683 = !DILocation(line: 55, column: 28, scope: !13682)
!13684 = !DILocation(line: 55, column: 32, scope: !13682)
!13685 = !DILocation(line: 55, column: 47, scope: !13682)
!13686 = !DILocation(line: 55, column: 6, scope: !13671)
!13687 = !DILocation(line: 57, column: 2, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13682, file: !13543, line: 55, column: 57)
!13689 = !DILocation(line: 59, column: 2, scope: !13671)
!13690 = distinct !DISubprogram(name: "k_thread_abort", scope: !4383, file: !4383, line: 188, type: !13691, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13693)
!13691 = !DISubroutineType(types: !13692)
!13692 = !{null, !13658}
!13693 = !{!13694}
!13694 = !DILocalVariable(name: "thread", arg: 1, scope: !13690, file: !4383, line: 188, type: !13658)
!13695 = !DILocation(line: 0, scope: !13690)
!13696 = !DILocation(line: 197, column: 2, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13690, file: !4383, line: 197, column: 2)
!13698 = !{i64 2152225309}
!13699 = !DILocation(line: 198, column: 2, scope: !13690)
!13700 = !DILocation(line: 199, column: 1, scope: !13690)
!13701 = distinct !DISubprogram(name: "z_current_get", scope: !4383, file: !4383, line: 173, type: !13656, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !2175)
!13702 = !DILocation(line: 180, column: 2, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13701, file: !4383, line: 180, column: 2)
!13704 = !{i64 2152225241}
!13705 = !DILocation(line: 181, column: 9, scope: !13701)
!13706 = !DILocation(line: 181, column: 2, scope: !13701)
!13707 = distinct !DISubprogram(name: "z_early_memset", scope: !1974, file: !1974, line: 108, type: !13708, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13710)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{null, !106, !107, !185}
!13710 = !{!13711, !13712, !13713}
!13711 = !DILocalVariable(name: "dst", arg: 1, scope: !13707, file: !1974, line: 108, type: !106)
!13712 = !DILocalVariable(name: "c", arg: 2, scope: !13707, file: !1974, line: 108, type: !107)
!13713 = !DILocalVariable(name: "n", arg: 3, scope: !13707, file: !1974, line: 108, type: !185)
!13714 = !DILocation(line: 0, scope: !13707)
!13715 = !DILocation(line: 110, column: 9, scope: !13707)
!13716 = !DILocation(line: 111, column: 1, scope: !13707)
!13717 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1974, file: !1974, line: 121, type: !13718, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13720)
!13718 = !DISubroutineType(types: !13719)
!13719 = !{null, !106, !13, !185}
!13720 = !{!13721, !13722, !13723}
!13721 = !DILocalVariable(name: "dst", arg: 1, scope: !13717, file: !1974, line: 121, type: !106)
!13722 = !DILocalVariable(name: "src", arg: 2, scope: !13717, file: !1974, line: 121, type: !13)
!13723 = !DILocalVariable(name: "n", arg: 3, scope: !13717, file: !1974, line: 121, type: !185)
!13724 = !DILocation(line: 0, scope: !13717)
!13725 = !DILocation(line: 123, column: 9, scope: !13717)
!13726 = !DILocation(line: 124, column: 1, scope: !13717)
!13727 = distinct !DISubprogram(name: "z_bss_zero", scope: !1974, file: !1974, line: 132, type: !3055, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2175)
!13728 = !DILocation(line: 143, column: 2, scope: !13727)
!13729 = !DILocation(line: 168, column: 1, scope: !13727)
!13730 = distinct !DISubprogram(name: "z_init_cpu", scope: !1974, file: !1974, line: 372, type: !9241, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13731)
!13731 = !{!13732}
!13732 = !DILocalVariable(name: "id", arg: 1, scope: !13730, file: !1974, line: 372, type: !107)
!13733 = !DILocation(line: 0, scope: !13730)
!13734 = !DILocation(line: 374, column: 2, scope: !13730)
!13735 = !DILocation(line: 375, column: 34, scope: !13730)
!13736 = !DILocation(line: 375, column: 19, scope: !13730)
!13737 = !DILocation(line: 375, column: 31, scope: !13730)
!13738 = !DILocation(line: 376, column: 24, scope: !13730)
!13739 = !DILocation(line: 376, column: 19, scope: !13730)
!13740 = !DILocation(line: 376, column: 22, scope: !13730)
!13741 = !DILocation(line: 378, column: 26, scope: !13730)
!13742 = !DILocation(line: 378, column: 4, scope: !13730)
!13743 = !DILocation(line: 378, column: 50, scope: !13730)
!13744 = !DILocation(line: 377, column: 19, scope: !13730)
!13745 = !DILocation(line: 377, column: 29, scope: !13730)
!13746 = !DILocation(line: 384, column: 1, scope: !13730)
!13747 = distinct !DISubprogram(name: "init_idle_thread", scope: !1974, file: !1974, line: 343, type: !9241, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13748)
!13748 = !{!13749, !13750, !13751, !13754}
!13749 = !DILocalVariable(name: "i", arg: 1, scope: !13747, file: !1974, line: 343, type: !107)
!13750 = !DILocalVariable(name: "thread", scope: !13747, file: !1974, line: 345, type: !2066)
!13751 = !DILocalVariable(name: "stack", scope: !13747, file: !1974, line: 346, type: !13752)
!13752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13753, size: 32)
!13753 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !681, line: 44, baseType: !2184)
!13754 = !DILocalVariable(name: "tname", scope: !13747, file: !1974, line: 354, type: !193)
!13755 = !DILocation(line: 0, scope: !13747)
!13756 = !DILocation(line: 345, column: 29, scope: !13747)
!13757 = !DILocation(line: 346, column: 28, scope: !13747)
!13758 = !DILocation(line: 362, column: 37, scope: !13747)
!13759 = !DILocation(line: 362, column: 36, scope: !13747)
!13760 = !DILocation(line: 361, column: 2, scope: !13747)
!13761 = !DILocation(line: 365, column: 2, scope: !13747)
!13762 = !DILocation(line: 370, column: 1, scope: !13747)
!13763 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !698, file: !698, line: 331, type: !13764, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13766)
!13764 = !DISubroutineType(types: !13765)
!13765 = !{!193, !13752}
!13766 = !{!13767}
!13767 = !DILocalVariable(name: "sym", arg: 1, scope: !13763, file: !698, line: 331, type: !13752)
!13768 = !DILocation(line: 0, scope: !13763)
!13769 = !DILocation(line: 333, column: 21, scope: !13763)
!13770 = !DILocation(line: 333, column: 2, scope: !13763)
!13771 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13772, file: !13772, line: 155, type: !13773, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13775)
!13772 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13773 = !DISubroutineType(types: !13774)
!13774 = !{null, !2066}
!13775 = !{!13776}
!13776 = !DILocalVariable(name: "thread", arg: 1, scope: !13771, file: !13772, line: 155, type: !2066)
!13777 = !DILocation(line: 0, scope: !13771)
!13778 = !DILocation(line: 157, column: 15, scope: !13771)
!13779 = !DILocation(line: 157, column: 28, scope: !13771)
!13780 = !DILocation(line: 158, column: 1, scope: !13771)
!13781 = distinct !DISubprogram(name: "z_cstart", scope: !1974, file: !1974, line: 501, type: !3055, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13782)
!13782 = !{!13783}
!13783 = !DILocalVariable(name: "dummy_thread", scope: !13781, file: !1974, line: 518, type: !2067)
!13784 = !DILocation(line: 507, column: 2, scope: !13781)
!13785 = !DILocation(line: 43, column: 14, scope: !13786, inlinedAt: !13790)
!13786 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13787, file: !13787, line: 40, type: !3055, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13788)
!13787 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13788 = !{!13789}
!13789 = !DILocalVariable(name: "msp", scope: !13786, file: !13787, line: 42, type: !152)
!13790 = distinct !DILocation(line: 44, column: 2, scope: !13791, inlinedAt: !13793)
!13791 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13792, file: !13792, line: 42, type: !3055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2175)
!13792 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13793 = distinct !DILocation(line: 510, column: 2, scope: !13781)
!13794 = !DILocation(line: 43, column: 3, scope: !13786, inlinedAt: !13790)
!13795 = !DILocation(line: 43, column: 60, scope: !13786, inlinedAt: !13790)
!13796 = !DILocation(line: 0, scope: !13786, inlinedAt: !13790)
!13797 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13798, file: !6220, line: 1153, type: !152)
!13798 = distinct !DISubprogram(name: "__set_MSP", scope: !6220, file: !6220, line: 1153, type: !5908, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13799)
!13799 = !{!13797}
!13800 = !DILocation(line: 0, scope: !13798, inlinedAt: !13801)
!13801 = distinct !DILocation(line: 46, column: 2, scope: !13786, inlinedAt: !13790)
!13802 = !DILocation(line: 1155, column: 3, scope: !13798, inlinedAt: !13801)
!13803 = !{i64 2468498}
!13804 = !DILocation(line: 62, column: 11, scope: !13786, inlinedAt: !13790)
!13805 = !DILocation(line: 102, column: 2, scope: !13806, inlinedAt: !13807)
!13806 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7231, file: !7231, line: 97, type: !3055, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2175)
!13807 = distinct !DILocation(line: 45, column: 2, scope: !13791, inlinedAt: !13793)
!13808 = !DILocation(line: 108, column: 2, scope: !13806, inlinedAt: !13807)
!13809 = !DILocation(line: 112, column: 2, scope: !13806, inlinedAt: !13807)
!13810 = !DILocation(line: 113, column: 2, scope: !13806, inlinedAt: !13807)
!13811 = !DILocation(line: 114, column: 2, scope: !13806, inlinedAt: !13807)
!13812 = !DILocation(line: 116, column: 2, scope: !13806, inlinedAt: !13807)
!13813 = !DILocation(line: 123, column: 13, scope: !13806, inlinedAt: !13807)
!13814 = !DILocation(line: 46, column: 2, scope: !13791, inlinedAt: !13793)
!13815 = !DILocation(line: 47, column: 2, scope: !13791, inlinedAt: !13793)
!13816 = !DILocation(line: 174, column: 12, scope: !13817, inlinedAt: !13818)
!13817 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7231, file: !7231, line: 169, type: !3055, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2175)
!13818 = distinct !DILocation(line: 48, column: 2, scope: !13791, inlinedAt: !13793)
!13819 = !DILocation(line: 179, column: 12, scope: !13817, inlinedAt: !13818)
!13820 = !DILocation(line: 50, column: 2, scope: !13791, inlinedAt: !13793)
!13821 = !DILocation(line: 57, column: 2, scope: !13791, inlinedAt: !13793)
!13822 = !DILocation(line: 518, column: 2, scope: !13781)
!13823 = !DILocation(line: 518, column: 18, scope: !13781)
!13824 = !DILocation(line: 520, column: 2, scope: !13781)
!13825 = !DILocation(line: 523, column: 2, scope: !13781)
!13826 = !DILocation(line: 526, column: 2, scope: !13781)
!13827 = !DILocation(line: 527, column: 2, scope: !13781)
!13828 = !DILocation(line: 543, column: 24, scope: !13781)
!13829 = !DILocation(line: 543, column: 2, scope: !13781)
!13830 = !DILocation(line: 0, scope: !2206)
!13831 = !DILocation(line: 246, column: 15, scope: !2224)
!13832 = !DILocation(line: 246, column: 36, scope: !2223)
!13833 = !DILocation(line: 246, column: 2, scope: !2224)
!13834 = !DILocation(line: 247, column: 37, scope: !2222)
!13835 = !DILocation(line: 0, scope: !2222)
!13836 = !DILocation(line: 248, column: 19, scope: !2222)
!13837 = !DILocation(line: 248, column: 12, scope: !2222)
!13838 = !DILocation(line: 250, column: 11, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !2222, file: !1974, line: 250, column: 7)
!13840 = !DILocation(line: 250, column: 7, scope: !2222)
!13841 = !DILocation(line: 254, column: 11, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13843, file: !1974, line: 254, column: 8)
!13843 = distinct !DILexicalBlock(scope: !13839, file: !1974, line: 250, column: 20)
!13844 = !DILocation(line: 254, column: 8, scope: !13843)
!13845 = !DILocation(line: 255, column: 9, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13842, file: !1974, line: 254, column: 17)
!13847 = !DILocation(line: 258, column: 9, scope: !13846)
!13848 = !DILocation(line: 261, column: 28, scope: !13846)
!13849 = !DILocation(line: 261, column: 10, scope: !13846)
!13850 = !DILocation(line: 261, column: 17, scope: !13846)
!13851 = !DILocation(line: 261, column: 26, scope: !13846)
!13852 = !DILocation(line: 262, column: 4, scope: !13846)
!13853 = !DILocation(line: 263, column: 9, scope: !13843)
!13854 = !DILocation(line: 263, column: 16, scope: !13843)
!13855 = !DILocation(line: 263, column: 28, scope: !13843)
!13856 = !DILocation(line: 264, column: 3, scope: !13843)
!13857 = !DILocation(line: 246, column: 60, scope: !2223)
!13858 = distinct !{!13858, !13833, !13859}
!13859 = !DILocation(line: 265, column: 2, scope: !2224)
!13860 = !DILocation(line: 266, column: 1, scope: !2206)
!13861 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1638, type: !6260, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13862)
!13862 = !{!13863, !13864}
!13863 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13861, file: !476, line: 1638, type: !1002)
!13864 = !DILocalVariable(name: "priority", arg: 2, scope: !13861, file: !476, line: 1638, type: !152)
!13865 = !DILocation(line: 0, scope: !13861)
!13866 = !DILocation(line: 1646, column: 48, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13868, file: !476, line: 1645, column: 3)
!13868 = distinct !DILexicalBlock(scope: !13861, file: !476, line: 1640, column: 7)
!13869 = !DILocation(line: 1646, column: 32, scope: !13867)
!13870 = !DILocation(line: 1646, column: 40, scope: !13867)
!13871 = !DILocation(line: 1646, column: 5, scope: !13867)
!13872 = !DILocation(line: 1646, column: 46, scope: !13867)
!13873 = !DILocation(line: 1648, column: 1, scope: !13861)
!13874 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13792, file: !13792, line: 32, type: !3055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!13875 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13876, file: !13876, line: 215, type: !13773, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13877)
!13876 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13877 = !{!13878}
!13878 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13875, file: !13876, line: 215, type: !2066)
!13879 = !DILocation(line: 0, scope: !13875)
!13880 = !DILocation(line: 217, column: 21, scope: !13875)
!13881 = !DILocation(line: 217, column: 34, scope: !13875)
!13882 = !DILocation(line: 221, column: 21, scope: !13875)
!13883 = !DILocation(line: 221, column: 34, scope: !13875)
!13884 = !DILocation(line: 223, column: 27, scope: !13875)
!13885 = !DILocation(line: 223, column: 33, scope: !13875)
!13886 = !DILocation(line: 224, column: 27, scope: !13875)
!13887 = !DILocation(line: 224, column: 32, scope: !13875)
!13888 = !DILocation(line: 232, column: 16, scope: !13875)
!13889 = !DILocation(line: 232, column: 30, scope: !13875)
!13890 = !DILocation(line: 239, column: 24, scope: !13875)
!13891 = !DILocation(line: 240, column: 1, scope: !13875)
!13892 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1974, file: !1974, line: 399, type: !13893, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13895)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{!193}
!13895 = !{!13896}
!13896 = !DILocalVariable(name: "stack_ptr", scope: !13892, file: !1974, line: 401, type: !193)
!13897 = !DILocation(line: 404, column: 2, scope: !13892)
!13898 = !DILocation(line: 416, column: 24, scope: !13892)
!13899 = !DILocation(line: 418, column: 14, scope: !13892)
!13900 = !DILocation(line: 0, scope: !13892)
!13901 = !DILocation(line: 423, column: 2, scope: !13892)
!13902 = !DILocation(line: 424, column: 2, scope: !13892)
!13903 = !DILocation(line: 426, column: 2, scope: !13892)
!13904 = !DILocation(line: 428, column: 2, scope: !13892)
!13905 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1974, file: !1974, line: 432, type: !13906, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13908)
!13906 = !DISubroutineType(types: !13907)
!13907 = !{null, !193}
!13908 = !{!13909}
!13909 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13905, file: !1974, line: 432, type: !193)
!13910 = !DILocation(line: 0, scope: !13905)
!13911 = !DILocation(line: 435, column: 2, scope: !13905)
!13912 = !DILocation(line: 445, column: 2, scope: !13905)
!13913 = distinct !DISubprogram(name: "bg_thread_main", scope: !1974, file: !1974, line: 277, type: !683, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13914)
!13914 = !{!13915, !13916, !13917}
!13915 = !DILocalVariable(name: "unused1", arg: 1, scope: !13913, file: !1974, line: 277, type: !106)
!13916 = !DILocalVariable(name: "unused2", arg: 2, scope: !13913, file: !1974, line: 277, type: !106)
!13917 = !DILocalVariable(name: "unused3", arg: 3, scope: !13913, file: !1974, line: 277, type: !106)
!13918 = !DILocation(line: 0, scope: !13913)
!13919 = !DILocation(line: 291, column: 20, scope: !13913)
!13920 = !DILocation(line: 293, column: 2, scope: !13913)
!13921 = !DILocation(line: 297, column: 2, scope: !13913)
!13922 = !DILocation(line: 305, column: 2, scope: !13913)
!13923 = !DILocation(line: 307, column: 2, scope: !13913)
!13924 = !DILocation(line: 330, column: 8, scope: !13913)
!13925 = !DILocation(line: 333, column: 34, scope: !13913)
!13926 = !DILocation(line: 339, column: 1, scope: !13913)
!13927 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2235, file: !2235, line: 45, type: !13928, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13936)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{null, !13930, !106}
!13930 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !419, line: 103, baseType: !13931)
!13931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13932, size: 32)
!13932 = !DISubroutineType(types: !13933)
!13933 = !{null, !13934, !106}
!13934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13935, size: 32)
!13935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2240)
!13936 = !{!13937, !13938}
!13937 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13927, file: !2235, line: 45, type: !13930)
!13938 = !DILocalVariable(name: "user_data", arg: 2, scope: !13927, file: !2235, line: 45, type: !106)
!13939 = !DILocation(line: 0, scope: !13927)
!13940 = !DILocation(line: 71, column: 1, scope: !13927)
!13941 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2235, file: !2235, line: 73, type: !13928, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13942)
!13942 = !{!13943, !13944}
!13943 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13941, file: !2235, line: 73, type: !13930)
!13944 = !DILocalVariable(name: "user_data", arg: 2, scope: !13941, file: !2235, line: 73, type: !106)
!13945 = !DILocation(line: 0, scope: !13941)
!13946 = !DILocation(line: 95, column: 1, scope: !13941)
!13947 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2235, file: !2235, line: 97, type: !7232, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13948 = !DILocation(line: 1031, column: 3, scope: !13949, inlinedAt: !13952)
!13949 = distinct !DISubprogram(name: "__get_IPSR", scope: !6220, file: !6220, line: 1027, type: !7225, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13950)
!13950 = !{!13951}
!13951 = !DILocalVariable(name: "result", scope: !13949, file: !6220, line: 1029, type: !152)
!13952 = distinct !DILocation(line: 48, column: 10, scope: !13953, inlinedAt: !13954)
!13953 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7231, file: !7231, line: 46, type: !7232, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13954 = distinct !DILocation(line: 99, column: 9, scope: !13947)
!13955 = !{i64 2474149}
!13956 = !DILocation(line: 0, scope: !13949, inlinedAt: !13952)
!13957 = !DILocation(line: 48, column: 9, scope: !13953, inlinedAt: !13954)
!13958 = !DILocation(line: 99, column: 2, scope: !13947)
!13959 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2235, file: !2235, line: 106, type: !3055, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13960 = !DILocation(line: 108, column: 2, scope: !13959)
!13961 = !DILocation(line: 108, column: 17, scope: !13959)
!13962 = !DILocation(line: 108, column: 30, scope: !13959)
!13963 = !DILocation(line: 109, column: 1, scope: !13959)
!13964 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2235, file: !2235, line: 116, type: !3055, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13965 = !DILocation(line: 118, column: 2, scope: !13964)
!13966 = !DILocation(line: 118, column: 17, scope: !13964)
!13967 = !DILocation(line: 118, column: 30, scope: !13964)
!13968 = !DILocation(line: 119, column: 1, scope: !13964)
!13969 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2235, file: !2235, line: 126, type: !7232, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13970 = !DILocation(line: 128, column: 10, scope: !13969)
!13971 = !DILocation(line: 128, column: 25, scope: !13969)
!13972 = !DILocation(line: 128, column: 38, scope: !13969)
!13973 = !DILocation(line: 128, column: 53, scope: !13969)
!13974 = !DILocation(line: 128, column: 2, scope: !13969)
!13975 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2235, file: !2235, line: 187, type: !13976, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!107, !2239, !118}
!13978 = !{!13979, !13980}
!13979 = !DILocalVariable(name: "thread", arg: 1, scope: !13975, file: !2235, line: 187, type: !2239)
!13980 = !DILocalVariable(name: "value", arg: 2, scope: !13975, file: !2235, line: 187, type: !118)
!13981 = !DILocation(line: 0, scope: !13975)
!13982 = !DILocation(line: 190, column: 13, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13975, file: !2235, line: 190, column: 6)
!13984 = !DILocation(line: 190, column: 6, scope: !13975)
!13985 = !DILocation(line: 194, column: 10, scope: !13975)
!13986 = !DILocation(line: 194, column: 2, scope: !13975)
!13987 = !DILocation(line: 195, column: 2, scope: !13975)
!13988 = !DILocation(line: 195, column: 47, scope: !13975)
!13989 = !DILocation(line: 199, column: 2, scope: !13975)
!13990 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2235, file: !2235, line: 238, type: !13991, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13993)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!118, !2239}
!13993 = !{!13994}
!13994 = !DILocalVariable(name: "thread", arg: 1, scope: !13990, file: !2235, line: 238, type: !2239)
!13995 = !DILocation(line: 0, scope: !13990)
!13996 = !DILocation(line: 241, column: 23, scope: !13990)
!13997 = !DILocation(line: 241, column: 2, scope: !13990)
!13998 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2235, file: !2235, line: 248, type: !13999, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14001)
!13999 = !DISubroutineType(types: !14000)
!14000 = !{!107, !2238, !193, !185}
!14001 = !{!14002, !14003, !14004}
!14002 = !DILocalVariable(name: "thread", arg: 1, scope: !13998, file: !2235, line: 248, type: !2238)
!14003 = !DILocalVariable(name: "buf", arg: 2, scope: !13998, file: !2235, line: 248, type: !193)
!14004 = !DILocalVariable(name: "size", arg: 3, scope: !13998, file: !2235, line: 248, type: !185)
!14005 = !DILocation(line: 0, scope: !13998)
!14006 = !DILocation(line: 251, column: 15, scope: !13998)
!14007 = !DILocation(line: 251, column: 2, scope: !13998)
!14008 = !DILocation(line: 252, column: 2, scope: !13998)
!14009 = !DILocation(line: 0, scope: !2234)
!14010 = !DILocation(line: 281, column: 11, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !2234, file: !2235, line: 281, column: 6)
!14012 = !DILocation(line: 281, column: 20, scope: !14011)
!14013 = !DILocation(line: 275, column: 45, scope: !2234)
!14014 = !DILocation(line: 285, column: 10, scope: !2234)
!14015 = !DILocation(line: 0, scope: !2358)
!14016 = !DILocation(line: 293, column: 39, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !2358, file: !2235, line: 293, column: 2)
!14018 = !DILocation(line: 293, column: 2, scope: !2358)
!14019 = !DILocation(line: 273, column: 14, scope: !2234)
!14020 = !DILocation(line: 309, column: 2, scope: !2234)
!14021 = !DILocation(line: 309, column: 11, scope: !2234)
!14022 = !DILocation(line: 311, column: 2, scope: !2234)
!14023 = !DILocation(line: 293, column: 26, scope: !14017)
!14024 = !DILocation(line: 294, column: 9, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14017, file: !2235, line: 293, column: 54)
!14026 = !DILocation(line: 295, column: 21, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14025, file: !2235, line: 295, column: 7)
!14028 = !DILocation(line: 295, column: 28, scope: !14027)
!14029 = !DILocation(line: 295, column: 7, scope: !14025)
!14030 = !DILocation(line: 299, column: 25, scope: !14025)
!14031 = !DILocation(line: 299, column: 41, scope: !14025)
!14032 = !DILocation(line: 300, column: 7, scope: !14025)
!14033 = !DILocation(line: 300, column: 26, scope: !14025)
!14034 = !DILocation(line: 299, column: 10, scope: !14025)
!14035 = !DILocation(line: 299, column: 7, scope: !14025)
!14036 = !DILocation(line: 302, column: 16, scope: !14025)
!14037 = !DILocation(line: 304, column: 20, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14025, file: !2235, line: 304, column: 7)
!14039 = !DILocation(line: 304, column: 7, scope: !14025)
!14040 = !DILocation(line: 305, column: 26, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14038, file: !2235, line: 304, column: 26)
!14042 = !DILocation(line: 305, column: 42, scope: !14041)
!14043 = !DILocation(line: 305, column: 11, scope: !14041)
!14044 = !DILocation(line: 305, column: 8, scope: !14041)
!14045 = !DILocation(line: 306, column: 3, scope: !14041)
!14046 = !DILocation(line: 293, column: 50, scope: !14017)
!14047 = !DILocation(line: 312, column: 1, scope: !2234)
!14048 = distinct !DISubprogram(name: "copy_bytes", scope: !2235, file: !2235, line: 261, type: !14049, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14051)
!14049 = !DISubroutineType(types: !14050)
!14050 = !{!185, !193, !185, !118, !185}
!14051 = !{!14052, !14053, !14054, !14055, !14056}
!14052 = !DILocalVariable(name: "dest", arg: 1, scope: !14048, file: !2235, line: 261, type: !193)
!14053 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14048, file: !2235, line: 261, type: !185)
!14054 = !DILocalVariable(name: "src", arg: 3, scope: !14048, file: !2235, line: 261, type: !118)
!14055 = !DILocalVariable(name: "src_size", arg: 4, scope: !14048, file: !2235, line: 261, type: !185)
!14056 = !DILocalVariable(name: "bytes_to_copy", scope: !14048, file: !2235, line: 263, type: !185)
!14057 = !DILocation(line: 0, scope: !14048)
!14058 = !DILocation(line: 265, column: 18, scope: !14048)
!14059 = !DILocation(line: 266, column: 2, scope: !14048)
!14060 = !DILocation(line: 268, column: 2, scope: !14048)
!14061 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2235, file: !2235, line: 383, type: !14062, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14064)
!14062 = !DISubroutineType(types: !14063)
!14063 = !{null, !2239}
!14064 = !{!14065}
!14065 = !DILocalVariable(name: "thread", arg: 1, scope: !14061, file: !2235, line: 383, type: !2239)
!14066 = !DILocation(line: 0, scope: !14061)
!14067 = !DILocation(line: 387, column: 2, scope: !14061)
!14068 = !DILocation(line: 388, column: 1, scope: !14061)
!14069 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2235, file: !2235, line: 528, type: !14070, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14077)
!14070 = !DISubroutineType(types: !14071)
!14071 = !{!193, !2239, !14072, !185, !680, !106, !106, !106, !107, !152, !118}
!14072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14073, size: 32)
!14073 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !681, line: 44, baseType: !14074)
!14074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !698, line: 47, size: 8, elements: !14075)
!14075 = !{!14076}
!14076 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14074, file: !698, line: 48, baseType: !120, size: 8)
!14077 = !{!14078, !14079, !14080, !14081, !14082, !14083, !14084, !14085, !14086, !14087, !14088}
!14078 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14069, file: !2235, line: 528, type: !2239)
!14079 = !DILocalVariable(name: "stack", arg: 2, scope: !14069, file: !2235, line: 529, type: !14072)
!14080 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14069, file: !2235, line: 529, type: !185)
!14081 = !DILocalVariable(name: "entry", arg: 4, scope: !14069, file: !2235, line: 530, type: !680)
!14082 = !DILocalVariable(name: "p1", arg: 5, scope: !14069, file: !2235, line: 531, type: !106)
!14083 = !DILocalVariable(name: "p2", arg: 6, scope: !14069, file: !2235, line: 531, type: !106)
!14084 = !DILocalVariable(name: "p3", arg: 7, scope: !14069, file: !2235, line: 531, type: !106)
!14085 = !DILocalVariable(name: "prio", arg: 8, scope: !14069, file: !2235, line: 532, type: !107)
!14086 = !DILocalVariable(name: "options", arg: 9, scope: !14069, file: !2235, line: 532, type: !152)
!14087 = !DILocalVariable(name: "name", arg: 10, scope: !14069, file: !2235, line: 532, type: !118)
!14088 = !DILocalVariable(name: "stack_ptr", scope: !14069, file: !2235, line: 534, type: !193)
!14089 = !DILocation(line: 0, scope: !14069)
!14090 = !DILocation(line: 536, column: 2, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !2235, line: 536, column: 2)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !2235, line: 536, column: 2)
!14093 = distinct !DILexicalBlock(scope: !14069, file: !2235, line: 536, column: 2)
!14094 = !DILocation(line: 536, column: 2, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14091, file: !2235, line: 536, column: 2)
!14096 = !DILocation(line: 550, column: 28, scope: !14069)
!14097 = !DILocation(line: 550, column: 2, scope: !14069)
!14098 = !DILocation(line: 553, column: 34, scope: !14069)
!14099 = !DILocation(line: 553, column: 2, scope: !14069)
!14100 = !DILocation(line: 554, column: 14, scope: !14069)
!14101 = !DILocation(line: 564, column: 2, scope: !14069)
!14102 = !DILocation(line: 567, column: 14, scope: !14069)
!14103 = !DILocation(line: 567, column: 24, scope: !14069)
!14104 = !DILocation(line: 594, column: 11, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14069, file: !2235, line: 594, column: 6)
!14106 = !DILocation(line: 0, scope: !14105)
!14107 = !DILocation(line: 594, column: 6, scope: !14069)
!14108 = !DILocation(line: 595, column: 3, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14105, file: !2235, line: 594, column: 20)
!14110 = !DILocation(line: 598, column: 3, scope: !14109)
!14111 = !DILocation(line: 598, column: 52, scope: !14109)
!14112 = !DILocation(line: 599, column: 2, scope: !14109)
!14113 = !DILocation(line: 600, column: 23, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14105, file: !2235, line: 599, column: 9)
!14115 = !DILocation(line: 612, column: 7, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14069, file: !2235, line: 612, column: 6)
!14117 = !DILocation(line: 612, column: 6, scope: !14069)
!14118 = !DILocation(line: 627, column: 40, scope: !14069)
!14119 = !DILocation(line: 637, column: 2, scope: !14069)
!14120 = !DILocation(line: 613, column: 15, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14116, file: !2235, line: 612, column: 17)
!14122 = !DILocation(line: 613, column: 29, scope: !14121)
!14123 = !DILocation(line: 638, column: 1, scope: !14069)
!14124 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13772, file: !13772, line: 78, type: !14125, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14127)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{!145, !106}
!14127 = !{!14128}
!14128 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14124, file: !13772, line: 78, type: !106)
!14129 = !DILocation(line: 0, scope: !14124)
!14130 = !DILocation(line: 80, column: 21, scope: !14124)
!14131 = !DILocation(line: 80, column: 2, scope: !14124)
!14132 = distinct !DISubprogram(name: "z_waitq_init", scope: !14133, file: !14133, line: 47, type: !14134, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14136)
!14133 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14134 = !DISubroutineType(types: !14135)
!14135 = !{null, !2270}
!14136 = !{!14137}
!14137 = !DILocalVariable(name: "w", arg: 1, scope: !14132, file: !14133, line: 47, type: !2270)
!14138 = !DILocation(line: 0, scope: !14132)
!14139 = !DILocation(line: 49, column: 21, scope: !14132)
!14140 = !DILocation(line: 49, column: 2, scope: !14132)
!14141 = !DILocation(line: 50, column: 1, scope: !14132)
!14142 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2235, file: !2235, line: 791, type: !14143, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14146)
!14143 = !DISubroutineType(types: !14144)
!14144 = !{null, !14145, !107, !152, !32}
!14145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!14146 = !{!14147, !14148, !14149, !14150}
!14147 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14142, file: !2235, line: 791, type: !14145)
!14148 = !DILocalVariable(name: "priority", arg: 2, scope: !14142, file: !2235, line: 791, type: !107)
!14149 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14142, file: !2235, line: 792, type: !152)
!14150 = !DILocalVariable(name: "options", arg: 4, scope: !14142, file: !2235, line: 792, type: !32)
!14151 = !DILocation(line: 0, scope: !14142)
!14152 = !DILocation(line: 795, column: 15, scope: !14142)
!14153 = !DILocation(line: 795, column: 25, scope: !14142)
!14154 = !DILocation(line: 796, column: 30, scope: !14142)
!14155 = !DILocation(line: 796, column: 15, scope: !14142)
!14156 = !DILocation(line: 796, column: 28, scope: !14142)
!14157 = !DILocation(line: 797, column: 30, scope: !14142)
!14158 = !DILocation(line: 797, column: 15, scope: !14142)
!14159 = !DILocation(line: 797, column: 28, scope: !14142)
!14160 = !DILocation(line: 799, column: 22, scope: !14142)
!14161 = !DILocation(line: 799, column: 15, scope: !14142)
!14162 = !DILocation(line: 799, column: 20, scope: !14142)
!14163 = !DILocation(line: 801, column: 15, scope: !14142)
!14164 = !DILocation(line: 801, column: 28, scope: !14142)
!14165 = !DILocation(line: 814, column: 2, scope: !14142)
!14166 = !DILocation(line: 815, column: 1, scope: !14142)
!14167 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2235, file: !2235, line: 449, type: !14168, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14170)
!14168 = !DISubroutineType(types: !14169)
!14169 = !{!193, !2239, !14072, !185}
!14170 = !{!14171, !14172, !14173, !14174, !14175, !14176, !14177, !14178}
!14171 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14167, file: !2235, line: 449, type: !2239)
!14172 = !DILocalVariable(name: "stack", arg: 2, scope: !14167, file: !2235, line: 450, type: !14072)
!14173 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14167, file: !2235, line: 450, type: !185)
!14174 = !DILocalVariable(name: "stack_obj_size", scope: !14167, file: !2235, line: 452, type: !185)
!14175 = !DILocalVariable(name: "stack_buf_size", scope: !14167, file: !2235, line: 452, type: !185)
!14176 = !DILocalVariable(name: "stack_ptr", scope: !14167, file: !2235, line: 453, type: !193)
!14177 = !DILocalVariable(name: "stack_buf_start", scope: !14167, file: !2235, line: 453, type: !193)
!14178 = !DILocalVariable(name: "delta", scope: !14167, file: !2235, line: 454, type: !185)
!14179 = !DILocation(line: 0, scope: !14167)
!14180 = !DILocation(line: 465, column: 20, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14167, file: !2235, line: 463, column: 2)
!14182 = !DILocation(line: 466, column: 21, scope: !14181)
!14183 = !DILocation(line: 473, column: 28, scope: !14167)
!14184 = !DILocation(line: 514, column: 33, scope: !14167)
!14185 = !DILocation(line: 514, column: 25, scope: !14167)
!14186 = !DILocation(line: 514, column: 31, scope: !14167)
!14187 = !DILocation(line: 515, column: 25, scope: !14167)
!14188 = !DILocation(line: 515, column: 30, scope: !14167)
!14189 = !DILocation(line: 516, column: 25, scope: !14167)
!14190 = !DILocation(line: 516, column: 31, scope: !14167)
!14191 = !DILocation(line: 520, column: 2, scope: !14167)
!14192 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !698, file: !698, line: 331, type: !14193, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14195)
!14193 = !DISubroutineType(types: !14194)
!14194 = !{!193, !14072}
!14195 = !{!14196}
!14196 = !DILocalVariable(name: "sym", arg: 1, scope: !14192, file: !698, line: 331, type: !14072)
!14197 = !DILocation(line: 0, scope: !14192)
!14198 = !DILocation(line: 333, column: 21, scope: !14192)
!14199 = !DILocation(line: 333, column: 2, scope: !14192)
!14200 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14201, file: !14201, line: 40, type: !14202, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14204)
!14201 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14202 = !DISubroutineType(types: !14203)
!14203 = !{null, !14145}
!14204 = !{!14205}
!14205 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14200, file: !14201, line: 40, type: !14145)
!14206 = !DILocation(line: 0, scope: !14200)
!14207 = !DILocation(line: 42, column: 31, scope: !14200)
!14208 = !DILocation(line: 42, column: 2, scope: !14200)
!14209 = !DILocation(line: 43, column: 1, scope: !14200)
!14210 = distinct !DISubprogram(name: "z_init_timeout", scope: !14201, file: !14201, line: 25, type: !2296, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14211)
!14211 = !{!14212}
!14212 = !DILocalVariable(name: "to", arg: 1, scope: !14210, file: !14201, line: 25, type: !2298)
!14213 = !DILocation(line: 0, scope: !14210)
!14214 = !DILocation(line: 27, column: 22, scope: !14210)
!14215 = !DILocation(line: 27, column: 2, scope: !14210)
!14216 = !DILocation(line: 28, column: 1, scope: !14210)
!14217 = distinct !DISubprogram(name: "sys_dnode_init", scope: !332, file: !332, line: 211, type: !14218, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14220)
!14218 = !DISubroutineType(types: !14219)
!14219 = !{null, !2345}
!14220 = !{!14221}
!14221 = !DILocalVariable(name: "node", arg: 1, scope: !14217, file: !332, line: 211, type: !2345)
!14222 = !DILocation(line: 0, scope: !14217)
!14223 = !DILocation(line: 213, column: 8, scope: !14217)
!14224 = !DILocation(line: 213, column: 13, scope: !14217)
!14225 = !DILocation(line: 214, column: 8, scope: !14217)
!14226 = !DILocation(line: 214, column: 13, scope: !14217)
!14227 = !DILocation(line: 215, column: 1, scope: !14217)
!14228 = distinct !DISubprogram(name: "sys_dlist_init", scope: !332, file: !332, line: 197, type: !14229, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14232)
!14229 = !DISubroutineType(types: !14230)
!14230 = !{null, !14231}
!14231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!14232 = !{!14233}
!14233 = !DILocalVariable(name: "list", arg: 1, scope: !14228, file: !332, line: 197, type: !14231)
!14234 = !DILocation(line: 0, scope: !14228)
!14235 = !DILocation(line: 199, column: 8, scope: !14228)
!14236 = !DILocation(line: 199, column: 13, scope: !14228)
!14237 = !DILocation(line: 200, column: 8, scope: !14228)
!14238 = !DILocation(line: 200, column: 13, scope: !14228)
!14239 = !DILocation(line: 201, column: 1, scope: !14228)
!14240 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2235, file: !2235, line: 641, type: !14241, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14247)
!14241 = !DISubroutineType(types: !14242)
!14242 = !{!2238, !2239, !14072, !185, !680, !106, !106, !106, !107, !152, !14243}
!14243 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !686, line: 67, baseType: !14244)
!14244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 65, size: 64, elements: !14245)
!14245 = !{!14246}
!14246 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14244, file: !686, line: 66, baseType: !685, size: 64)
!14247 = !{!14248, !14249, !14250, !14251, !14252, !14253, !14254, !14255, !14256, !14257}
!14248 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14240, file: !2235, line: 641, type: !2239)
!14249 = !DILocalVariable(name: "stack", arg: 2, scope: !14240, file: !2235, line: 642, type: !14072)
!14250 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14240, file: !2235, line: 643, type: !185)
!14251 = !DILocalVariable(name: "entry", arg: 4, scope: !14240, file: !2235, line: 643, type: !680)
!14252 = !DILocalVariable(name: "p1", arg: 5, scope: !14240, file: !2235, line: 644, type: !106)
!14253 = !DILocalVariable(name: "p2", arg: 6, scope: !14240, file: !2235, line: 644, type: !106)
!14254 = !DILocalVariable(name: "p3", arg: 7, scope: !14240, file: !2235, line: 644, type: !106)
!14255 = !DILocalVariable(name: "prio", arg: 8, scope: !14240, file: !2235, line: 645, type: !107)
!14256 = !DILocalVariable(name: "options", arg: 9, scope: !14240, file: !2235, line: 645, type: !152)
!14257 = !DILocalVariable(name: "delay", arg: 10, scope: !14240, file: !2235, line: 645, type: !14243)
!14258 = !DILocation(line: 0, scope: !14240)
!14259 = !DILocation(line: 1031, column: 3, scope: !13949, inlinedAt: !14260)
!14260 = distinct !DILocation(line: 48, column: 10, scope: !13953, inlinedAt: !14261)
!14261 = distinct !DILocation(line: 647, column: 2, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14263, file: !2235, line: 647, column: 2)
!14263 = distinct !DILexicalBlock(scope: !14240, file: !2235, line: 647, column: 2)
!14264 = !DILocation(line: 0, scope: !13949, inlinedAt: !14260)
!14265 = !DILocation(line: 48, column: 9, scope: !13953, inlinedAt: !14261)
!14266 = !DILocation(line: 647, column: 2, scope: !14263)
!14267 = !DILocation(line: 647, column: 2, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14262, file: !2235, line: 647, column: 2)
!14269 = !DILocation(line: 649, column: 2, scope: !14240)
!14270 = !DILocation(line: 652, column: 7, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14240, file: !2235, line: 652, column: 6)
!14272 = !DILocation(line: 652, column: 6, scope: !14240)
!14273 = !DILocation(line: 653, column: 3, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14271, file: !2235, line: 652, column: 39)
!14275 = !DILocation(line: 654, column: 2, scope: !14274)
!14276 = !DILocation(line: 656, column: 2, scope: !14240)
!14277 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2235, file: !2235, line: 401, type: !14278, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14280)
!14278 = !DISubroutineType(types: !14279)
!14279 = !{null, !2239, !14243}
!14280 = !{!14281, !14282}
!14281 = !DILocalVariable(name: "thread", arg: 1, scope: !14277, file: !2235, line: 401, type: !2239)
!14282 = !DILocalVariable(name: "delay", arg: 2, scope: !14277, file: !2235, line: 401, type: !14243)
!14283 = !DILocation(line: 0, scope: !14277)
!14284 = !DILocation(line: 404, column: 6, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14277, file: !2235, line: 404, column: 6)
!14286 = !DILocation(line: 404, column: 6, scope: !14277)
!14287 = !DILocation(line: 405, column: 3, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14285, file: !2235, line: 404, column: 38)
!14289 = !DILocation(line: 406, column: 2, scope: !14288)
!14290 = !DILocation(line: 407, column: 3, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14285, file: !2235, line: 406, column: 9)
!14292 = !DILocation(line: 413, column: 1, scope: !14277)
!14293 = distinct !DISubprogram(name: "k_thread_start", scope: !4383, file: !4383, line: 205, type: !14294, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14296)
!14294 = !DISubroutineType(types: !14295)
!14295 = !{null, !2238}
!14296 = !{!14297}
!14297 = !DILocalVariable(name: "thread", arg: 1, scope: !14293, file: !4383, line: 205, type: !2238)
!14298 = !DILocation(line: 0, scope: !14293)
!14299 = !DILocation(line: 214, column: 2, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14293, file: !4383, line: 214, column: 2)
!14301 = !{i64 2152250533}
!14302 = !DILocation(line: 215, column: 2, scope: !14293)
!14303 = !DILocation(line: 216, column: 1, scope: !14293)
!14304 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14201, file: !14201, line: 47, type: !14278, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14305)
!14305 = !{!14306, !14307}
!14306 = !DILocalVariable(name: "thread", arg: 1, scope: !14304, file: !14201, line: 47, type: !2239)
!14307 = !DILocalVariable(name: "ticks", arg: 2, scope: !14304, file: !14201, line: 47, type: !14243)
!14308 = !DILocation(line: 0, scope: !14304)
!14309 = !DILocation(line: 49, column: 30, scope: !14304)
!14310 = !DILocation(line: 49, column: 2, scope: !14304)
!14311 = !DILocation(line: 50, column: 1, scope: !14304)
!14312 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2235, file: !2235, line: 748, type: !3055, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14313)
!14313 = !{!14314, !14332}
!14314 = !DILocalVariable(name: "thread_data", scope: !14315, file: !2235, line: 750, type: !14316)
!14315 = distinct !DILexicalBlock(scope: !14312, file: !2235, line: 750, column: 2)
!14316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14317, size: 32)
!14317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !419, line: 620, size: 384, elements: !14318)
!14318 = !{!14319, !14320, !14321, !14322, !14323, !14324, !14325, !14326, !14327, !14328, !14329, !14331}
!14319 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14317, file: !419, line: 621, baseType: !2239, size: 32)
!14320 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14317, file: !419, line: 622, baseType: !14072, size: 32, offset: 32)
!14321 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14317, file: !419, line: 623, baseType: !32, size: 32, offset: 64)
!14322 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14317, file: !419, line: 624, baseType: !680, size: 32, offset: 96)
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14317, file: !419, line: 625, baseType: !106, size: 32, offset: 128)
!14324 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14317, file: !419, line: 626, baseType: !106, size: 32, offset: 160)
!14325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14317, file: !419, line: 627, baseType: !106, size: 32, offset: 192)
!14326 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14317, file: !419, line: 628, baseType: !107, size: 32, offset: 224)
!14327 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14317, file: !419, line: 629, baseType: !152, size: 32, offset: 256)
!14328 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14317, file: !419, line: 630, baseType: !984, size: 32, offset: 288)
!14329 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14317, file: !419, line: 631, baseType: !14330, size: 32, offset: 320)
!14330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 32)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14317, file: !419, line: 632, baseType: !118, size: 32, offset: 352)
!14332 = !DILocalVariable(name: "thread_data", scope: !14333, file: !2235, line: 781, type: !14316)
!14333 = distinct !DILexicalBlock(scope: !14312, file: !2235, line: 781, column: 2)
!14334 = !DILocation(line: 0, scope: !14315)
!14335 = !DILocation(line: 750, column: 2, scope: !14336)
!14336 = distinct !DILexicalBlock(scope: !14337, file: !2235, line: 750, column: 2)
!14337 = distinct !DILexicalBlock(scope: !14338, file: !2235, line: 750, column: 2)
!14338 = distinct !DILexicalBlock(scope: !14315, file: !2235, line: 750, column: 2)
!14339 = !DILocation(line: 750, column: 2, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !2235, line: 750, column: 2)
!14341 = distinct !DILexicalBlock(scope: !14336, file: !2235, line: 750, column: 2)
!14342 = !DILocation(line: 750, column: 2, scope: !14337)
!14343 = !DILocation(line: 750, column: 2, scope: !14315)
!14344 = !DILocation(line: 780, column: 2, scope: !14312)
!14345 = !DILocation(line: 0, scope: !14333)
!14346 = !DILocation(line: 781, column: 2, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14348, file: !2235, line: 781, column: 2)
!14348 = distinct !DILexicalBlock(scope: !14349, file: !2235, line: 781, column: 2)
!14349 = distinct !DILexicalBlock(scope: !14333, file: !2235, line: 781, column: 2)
!14350 = !DILocation(line: 752, column: 17, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14338, file: !2235, line: 750, column: 38)
!14352 = !DILocation(line: 753, column: 17, scope: !14351)
!14353 = !DILocation(line: 754, column: 17, scope: !14351)
!14354 = !DILocation(line: 755, column: 17, scope: !14351)
!14355 = !DILocation(line: 756, column: 17, scope: !14351)
!14356 = !DILocation(line: 757, column: 17, scope: !14351)
!14357 = !DILocation(line: 758, column: 17, scope: !14351)
!14358 = !DILocation(line: 759, column: 17, scope: !14351)
!14359 = !DILocation(line: 760, column: 17, scope: !14351)
!14360 = !DILocation(line: 761, column: 17, scope: !14351)
!14361 = !DILocation(line: 751, column: 3, scope: !14351)
!14362 = !DILocation(line: 763, column: 16, scope: !14351)
!14363 = !DILocation(line: 763, column: 29, scope: !14351)
!14364 = !DILocation(line: 763, column: 39, scope: !14351)
!14365 = !DILocation(line: 750, column: 2, scope: !14338)
!14366 = !DILocation(line: 750, column: 2, scope: !14341)
!14367 = distinct !{!14367, !14343, !14368}
!14368 = !DILocation(line: 764, column: 2, scope: !14315)
!14369 = !DILocation(line: 781, column: 2, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14371, file: !2235, line: 781, column: 2)
!14371 = distinct !DILexicalBlock(scope: !14347, file: !2235, line: 781, column: 2)
!14372 = !DILocation(line: 781, column: 2, scope: !14348)
!14373 = !DILocation(line: 781, column: 2, scope: !14333)
!14374 = !DILocation(line: 787, column: 2, scope: !14312)
!14375 = !DILocation(line: 788, column: 1, scope: !14312)
!14376 = !DILocation(line: 782, column: 20, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14378, file: !2235, line: 782, column: 7)
!14378 = distinct !DILexicalBlock(scope: !14349, file: !2235, line: 781, column: 38)
!14379 = !DILocation(line: 782, column: 31, scope: !14377)
!14380 = !DILocation(line: 782, column: 7, scope: !14378)
!14381 = !DILocation(line: 783, column: 37, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14377, file: !2235, line: 782, column: 51)
!14383 = !DILocation(line: 784, column: 10, scope: !14382)
!14384 = !DILocation(line: 783, column: 4, scope: !14382)
!14385 = !DILocation(line: 785, column: 3, scope: !14382)
!14386 = !DILocation(line: 781, column: 2, scope: !14349)
!14387 = !DILocation(line: 781, column: 2, scope: !14371)
!14388 = distinct !{!14388, !14373, !14389}
!14389 = !DILocation(line: 786, column: 2, scope: !14333)
!14390 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8795, file: !8795, line: 403, type: !14391, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14393)
!14391 = !DISubroutineType(types: !14392)
!14392 = !{!687, !687}
!14393 = !{!14394}
!14394 = !DILocalVariable(name: "t", arg: 1, scope: !14390, file: !8795, line: 403, type: !687)
!14395 = !DILocation(line: 0, scope: !14390)
!14396 = !DILocalVariable(name: "t", arg: 1, scope: !14397, file: !8795, line: 102, type: !687)
!14397 = distinct !DISubprogram(name: "z_tmcvt", scope: !8795, file: !8795, line: 102, type: !8802, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14398)
!14398 = !{!14396, !14399, !14400, !14401, !14402, !14403, !14404, !14405, !14406, !14407, !14408}
!14399 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14397, file: !8795, line: 102, type: !152)
!14400 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14397, file: !8795, line: 103, type: !152)
!14401 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14397, file: !8795, line: 103, type: !145)
!14402 = !DILocalVariable(name: "result32", arg: 5, scope: !14397, file: !8795, line: 104, type: !145)
!14403 = !DILocalVariable(name: "round_up", arg: 6, scope: !14397, file: !8795, line: 104, type: !145)
!14404 = !DILocalVariable(name: "round_off", arg: 7, scope: !14397, file: !8795, line: 105, type: !145)
!14405 = !DILocalVariable(name: "mul_ratio", scope: !14397, file: !8795, line: 107, type: !145)
!14406 = !DILocalVariable(name: "div_ratio", scope: !14397, file: !8795, line: 109, type: !145)
!14407 = !DILocalVariable(name: "off", scope: !14397, file: !8795, line: 116, type: !687)
!14408 = !DILocalVariable(name: "rdivisor", scope: !14409, file: !8795, line: 119, type: !152)
!14409 = distinct !DILexicalBlock(scope: !14410, file: !8795, line: 118, column: 18)
!14410 = distinct !DILexicalBlock(scope: !14397, file: !8795, line: 118, column: 6)
!14411 = !DILocation(line: 0, scope: !14397, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 406, column: 9, scope: !14390)
!14413 = !DILocation(line: 145, column: 13, scope: !14414, inlinedAt: !14412)
!14414 = distinct !DILexicalBlock(scope: !14415, file: !8795, line: 144, column: 10)
!14415 = distinct !DILexicalBlock(scope: !14416, file: !8795, line: 142, column: 7)
!14416 = distinct !DILexicalBlock(scope: !14417, file: !8795, line: 141, column: 24)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !8795, line: 141, column: 13)
!14418 = distinct !DILexicalBlock(scope: !14397, file: !8795, line: 134, column: 6)
!14419 = !DILocation(line: 406, column: 2, scope: !14390)
!14420 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2235, file: !2235, line: 817, type: !4261, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14421)
!14421 = !{!14422, !14423, !14424, !14425}
!14422 = !DILocalVariable(name: "entry", arg: 1, scope: !14420, file: !2235, line: 817, type: !680)
!14423 = !DILocalVariable(name: "p1", arg: 2, scope: !14420, file: !2235, line: 818, type: !106)
!14424 = !DILocalVariable(name: "p2", arg: 3, scope: !14420, file: !2235, line: 818, type: !106)
!14425 = !DILocalVariable(name: "p3", arg: 4, scope: !14420, file: !2235, line: 818, type: !106)
!14426 = !DILocation(line: 0, scope: !14420)
!14427 = !DILocation(line: 822, column: 2, scope: !14420)
!14428 = !DILocation(line: 822, column: 17, scope: !14420)
!14429 = !DILocation(line: 822, column: 30, scope: !14420)
!14430 = !DILocation(line: 823, column: 2, scope: !14420)
!14431 = !DILocation(line: 845, column: 2, scope: !14420)
!14432 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2235, file: !2235, line: 853, type: !14433, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14436)
!14433 = !DISubroutineType(types: !14434)
!14434 = !{!145, !14435}
!14435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!14436 = !{!14437, !14438}
!14437 = !DILocalVariable(name: "l", arg: 1, scope: !14432, file: !2235, line: 853, type: !14435)
!14438 = !DILocalVariable(name: "thread_cpu", scope: !14432, file: !2235, line: 855, type: !22)
!14439 = !DILocation(line: 0, scope: !14432)
!14440 = !DILocation(line: 855, column: 28, scope: !14432)
!14441 = !DILocation(line: 857, column: 17, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14432, file: !2235, line: 857, column: 6)
!14443 = !DILocation(line: 857, column: 6, scope: !14432)
!14444 = !DILocation(line: 858, column: 19, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14446, file: !2235, line: 858, column: 7)
!14446 = distinct !DILexicalBlock(scope: !14442, file: !2235, line: 857, column: 24)
!14447 = !DILocation(line: 858, column: 42, scope: !14445)
!14448 = !DILocation(line: 858, column: 28, scope: !14445)
!14449 = !DILocation(line: 858, column: 25, scope: !14445)
!14450 = !DILocation(line: 858, column: 7, scope: !14446)
!14451 = !DILocation(line: 862, column: 2, scope: !14432)
!14452 = !DILocation(line: 863, column: 1, scope: !14432)
!14453 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2235, file: !2235, line: 865, type: !14433, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14454)
!14454 = !{!14455}
!14455 = !DILocalVariable(name: "l", arg: 1, scope: !14453, file: !2235, line: 865, type: !14435)
!14456 = !DILocation(line: 0, scope: !14453)
!14457 = !DILocation(line: 867, column: 9, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14453, file: !2235, line: 867, column: 6)
!14459 = !DILocation(line: 867, column: 38, scope: !14458)
!14460 = !DILocation(line: 867, column: 24, scope: !14458)
!14461 = !DILocation(line: 867, column: 54, scope: !14458)
!14462 = !DILocation(line: 867, column: 43, scope: !14458)
!14463 = !DILocation(line: 867, column: 41, scope: !14458)
!14464 = !DILocation(line: 867, column: 20, scope: !14458)
!14465 = !DILocation(line: 867, column: 6, scope: !14453)
!14466 = !DILocation(line: 870, column: 16, scope: !14453)
!14467 = !DILocation(line: 871, column: 2, scope: !14453)
!14468 = !DILocation(line: 872, column: 1, scope: !14453)
!14469 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2235, file: !2235, line: 874, type: !14470, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14472)
!14470 = !DISubroutineType(types: !14471)
!14471 = !{null, !14435}
!14472 = !{!14473}
!14473 = !DILocalVariable(name: "l", arg: 1, scope: !14469, file: !2235, line: 874, type: !14435)
!14474 = !DILocation(line: 0, scope: !14469)
!14475 = !DILocation(line: 876, column: 32, scope: !14469)
!14476 = !DILocation(line: 876, column: 18, scope: !14469)
!14477 = !DILocation(line: 876, column: 48, scope: !14469)
!14478 = !DILocation(line: 876, column: 37, scope: !14469)
!14479 = !DILocation(line: 876, column: 35, scope: !14469)
!14480 = !DILocation(line: 876, column: 5, scope: !14469)
!14481 = !DILocation(line: 876, column: 16, scope: !14469)
!14482 = !DILocation(line: 877, column: 1, scope: !14469)
!14483 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2235, file: !2235, line: 888, type: !14484, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14486)
!14484 = !DISubroutineType(types: !14485)
!14485 = !{!107, !2239}
!14486 = !{!14487}
!14487 = !DILocalVariable(name: "thread", arg: 1, scope: !14483, file: !2235, line: 888, type: !2239)
!14488 = !DILocation(line: 0, scope: !14483)
!14489 = !DILocation(line: 893, column: 2, scope: !14483)
!14490 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2235, file: !2235, line: 897, type: !14491, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14493)
!14491 = !DISubroutineType(types: !14492)
!14492 = !{!107, !2239, !32}
!14493 = !{!14494, !14495}
!14494 = !DILocalVariable(name: "thread", arg: 1, scope: !14490, file: !2235, line: 897, type: !2239)
!14495 = !DILocalVariable(name: "options", arg: 2, scope: !14490, file: !2235, line: 897, type: !32)
!14496 = !DILocation(line: 0, scope: !14490)
!14497 = !DILocation(line: 902, column: 2, scope: !14490)
!14498 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2235, file: !2235, line: 1072, type: !14499, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14504)
!14499 = !DISubroutineType(types: !14500)
!14500 = !{!107, !2238, !14501}
!14501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14502, size: 32)
!14502 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !322, line: 234, baseType: !14503)
!14503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !322, line: 192, elements: !2175)
!14504 = !{!14505, !14506}
!14505 = !DILocalVariable(name: "thread", arg: 1, scope: !14498, file: !2235, line: 1072, type: !2238)
!14506 = !DILocalVariable(name: "stats", arg: 2, scope: !14498, file: !2235, line: 1073, type: !14501)
!14507 = !DILocation(line: 0, scope: !14498)
!14508 = !DILocation(line: 1075, column: 14, scope: !14509)
!14509 = distinct !DILexicalBlock(scope: !14498, file: !2235, line: 1075, column: 6)
!14510 = !DILocation(line: 1075, column: 23, scope: !14509)
!14511 = !DILocation(line: 1086, column: 1, scope: !14498)
!14512 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2235, file: !2235, line: 1088, type: !14513, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14515)
!14513 = !DISubroutineType(types: !14514)
!14514 = !{!107, !14501}
!14515 = !{!14516}
!14516 = !DILocalVariable(name: "stats", arg: 1, scope: !14512, file: !2235, line: 1088, type: !14501)
!14517 = !DILocation(line: 0, scope: !14512)
!14518 = !DILocation(line: 1094, column: 12, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14512, file: !2235, line: 1094, column: 6)
!14520 = !DILocation(line: 1120, column: 1, scope: !14512)
!14521 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14522, file: !14522, line: 20, type: !3055, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2175)
!14522 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14523 = !DILocation(line: 30, column: 2, scope: !14521)
!14524 = !DILocation(line: 31, column: 1, scope: !14521)
!14525 = distinct !DISubprogram(name: "idle", scope: !14522, file: !14522, line: 33, type: !683, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !14526)
!14526 = !{!14527, !14528, !14529}
!14527 = !DILocalVariable(name: "unused1", arg: 1, scope: !14525, file: !14522, line: 33, type: !106)
!14528 = !DILocalVariable(name: "unused2", arg: 2, scope: !14525, file: !14522, line: 33, type: !106)
!14529 = !DILocalVariable(name: "unused3", arg: 3, scope: !14525, file: !14522, line: 33, type: !106)
!14530 = !DILocation(line: 0, scope: !14525)
!14531 = !DILocation(line: 39, column: 2, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14533, file: !14522, line: 39, column: 2)
!14533 = distinct !DILexicalBlock(scope: !14525, file: !14522, line: 39, column: 2)
!14534 = !DILocation(line: 39, column: 2, scope: !14533)
!14535 = !DILocation(line: 39, column: 2, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14532, file: !14522, line: 39, column: 2)
!14537 = !DILocation(line: 55, column: 2, scope: !14538, inlinedAt: !14542)
!14538 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !14539)
!14539 = !{!14540, !14541}
!14540 = !DILocalVariable(name: "key", scope: !14538, file: !5884, line: 44, type: !32)
!14541 = !DILocalVariable(name: "tmp", scope: !14538, file: !5884, line: 53, type: !32)
!14542 = distinct !DILocation(line: 62, column: 10, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14525, file: !14522, line: 41, column: 15)
!14544 = !{i64 1653400}
!14545 = !DILocation(line: 0, scope: !14538, inlinedAt: !14542)
!14546 = !DILocation(line: 86, column: 3, scope: !14543)
!14547 = !DILocation(line: 41, column: 2, scope: !14525)
!14548 = distinct !{!14548, !14547, !14549}
!14549 = !DILocation(line: 105, column: 2, scope: !14525)
!14550 = distinct !DISubprogram(name: "k_cpu_idle", scope: !419, file: !419, line: 5627, type: !3055, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2175)
!14551 = !DILocation(line: 5629, column: 2, scope: !14550)
!14552 = !DILocation(line: 5630, column: 1, scope: !14550)
!14553 = !DISubprogram(name: "arch_cpu_idle", scope: !681, file: !681, line: 167, type: !3055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!14554 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2473, file: !2473, line: 93, type: !14555, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14557)
!14555 = !DISubroutineType(types: !14556)
!14556 = !{!984, !2365, !2365}
!14557 = !{!14558, !14559, !14560, !14561}
!14558 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14554, file: !2473, line: 93, type: !2365)
!14559 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14554, file: !2473, line: 94, type: !2365)
!14560 = !DILocalVariable(name: "b1", scope: !14554, file: !2473, line: 97, type: !984)
!14561 = !DILocalVariable(name: "b2", scope: !14554, file: !2473, line: 98, type: !984)
!14562 = !DILocation(line: 0, scope: !14554)
!14563 = !DILocation(line: 97, column: 30, scope: !14554)
!14564 = !DILocation(line: 98, column: 30, scope: !14554)
!14565 = !DILocation(line: 100, column: 9, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14554, file: !2473, line: 100, column: 6)
!14567 = !DILocation(line: 100, column: 6, scope: !14554)
!14568 = !DILocation(line: 125, column: 1, scope: !14554)
!14569 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2473, file: !2473, line: 428, type: !14570, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14572)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{null, !2365}
!14572 = !{!14573}
!14573 = !DILocalVariable(name: "curr", arg: 1, scope: !14569, file: !2473, line: 428, type: !2365)
!14574 = !DILocation(line: 0, scope: !14569)
!14575 = !DILocation(line: 434, column: 6, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14569, file: !2473, line: 434, column: 6)
!14577 = !DILocation(line: 434, column: 23, scope: !14576)
!14578 = !DILocation(line: 434, column: 6, scope: !14569)
!14579 = !DILocation(line: 435, column: 50, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14576, file: !2473, line: 434, column: 29)
!14581 = !DILocation(line: 435, column: 48, scope: !14580)
!14582 = !DILocation(line: 435, column: 29, scope: !14580)
!14583 = !DILocation(line: 436, column: 24, scope: !14580)
!14584 = !DILocation(line: 436, column: 3, scope: !14580)
!14585 = !DILocation(line: 437, column: 2, scope: !14580)
!14586 = !DILocation(line: 438, column: 1, scope: !14569)
!14587 = distinct !DISubprogram(name: "slice_time", scope: !2473, file: !2473, line: 407, type: !14588, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14590)
!14588 = !DISubroutineType(types: !14589)
!14589 = !{!107, !2365}
!14590 = !{!14591, !14592}
!14591 = !DILocalVariable(name: "curr", arg: 1, scope: !14587, file: !2473, line: 407, type: !2365)
!14592 = !DILocalVariable(name: "ret", scope: !14587, file: !2473, line: 409, type: !107)
!14593 = !DILocation(line: 0, scope: !14587)
!14594 = !DILocation(line: 409, column: 12, scope: !14587)
!14595 = !DILocation(line: 416, column: 2, scope: !14587)
!14596 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2473, file: !2473, line: 440, type: !14597, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14599)
!14597 = !DISubroutineType(types: !14598)
!14598 = !{null, !984, !107}
!14599 = !{!14600, !14601, !14602, !14608}
!14600 = !DILocalVariable(name: "slice", arg: 1, scope: !14596, file: !2473, line: 440, type: !984)
!14601 = !DILocalVariable(name: "prio", arg: 2, scope: !14596, file: !2473, line: 440, type: !107)
!14602 = !DILocalVariable(name: "__i", scope: !14603, file: !2473, line: 442, type: !14604)
!14603 = distinct !DILexicalBlock(scope: !14596, file: !2473, line: 442, column: 2)
!14604 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !433, line: 106, baseType: !14605)
!14605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !433, line: 32, size: 32, elements: !14606)
!14606 = !{!14607}
!14607 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14605, file: !433, line: 33, baseType: !107, size: 32)
!14608 = !DILocalVariable(name: "__key", scope: !14603, file: !2473, line: 442, type: !14604)
!14609 = !DILocation(line: 0, scope: !14596)
!14610 = !DILocation(line: 0, scope: !14603)
!14611 = !DILocalVariable(name: "l", arg: 1, scope: !14612, file: !433, line: 136, type: !14615)
!14612 = distinct !DISubprogram(name: "k_spin_lock", scope: !433, file: !433, line: 136, type: !14613, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14616)
!14613 = !DISubroutineType(types: !14614)
!14614 = !{!14604, !14615}
!14615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!14616 = !{!14611, !14617}
!14617 = !DILocalVariable(name: "k", scope: !14612, file: !433, line: 139, type: !14604)
!14618 = !DILocation(line: 0, scope: !14612, inlinedAt: !14619)
!14619 = distinct !DILocation(line: 442, column: 2, scope: !14603)
!14620 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !14625)
!14621 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14622)
!14622 = !{!14623, !14624}
!14623 = !DILocalVariable(name: "key", scope: !14621, file: !5884, line: 44, type: !32)
!14624 = !DILocalVariable(name: "tmp", scope: !14621, file: !5884, line: 53, type: !32)
!14625 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !14619)
!14626 = !{i64 1697371}
!14627 = !DILocation(line: 0, scope: !14621, inlinedAt: !14625)
!14628 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !14619)
!14629 = distinct !DILexicalBlock(scope: !14630, file: !433, line: 148, column: 2)
!14630 = distinct !DILexicalBlock(scope: !14612, file: !433, line: 148, column: 2)
!14631 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !14619)
!14632 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !14619)
!14633 = distinct !DILexicalBlock(scope: !14629, file: !433, line: 148, column: 2)
!14634 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !14619)
!14635 = !DILocation(line: 443, column: 29, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14637, file: !2473, line: 442, column: 26)
!14637 = distinct !DILexicalBlock(scope: !14603, file: !2473, line: 442, column: 2)
!14638 = !DILocation(line: 444, column: 17, scope: !14636)
!14639 = !DILocation(line: 445, column: 51, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14636, file: !2473, line: 445, column: 7)
!14641 = !DILocation(line: 445, column: 7, scope: !14636)
!14642 = !DILocation(line: 0, scope: !14636)
!14643 = !DILocation(line: 451, column: 18, scope: !14636)
!14644 = !DILocation(line: 452, column: 3, scope: !14636)
!14645 = !DILocalVariable(name: "key", arg: 2, scope: !14646, file: !433, line: 190, type: !14604)
!14646 = distinct !DISubprogram(name: "k_spin_unlock", scope: !433, file: !433, line: 189, type: !14647, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14649)
!14647 = !DISubroutineType(types: !14648)
!14648 = !{null, !14615, !14604}
!14649 = !{!14650, !14645}
!14650 = !DILocalVariable(name: "l", arg: 1, scope: !14646, file: !433, line: 189, type: !14615)
!14651 = !DILocation(line: 0, scope: !14646, inlinedAt: !14652)
!14652 = distinct !DILocation(line: 442, column: 2, scope: !14637)
!14653 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !14652)
!14654 = distinct !DILexicalBlock(scope: !14655, file: !433, line: 194, column: 2)
!14655 = distinct !DILexicalBlock(scope: !14646, file: !433, line: 194, column: 2)
!14656 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !14652)
!14657 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !14652)
!14658 = distinct !DILexicalBlock(scope: !14654, file: !433, line: 194, column: 2)
!14659 = !DILocalVariable(name: "key", arg: 1, scope: !14660, file: !5884, line: 84, type: !32)
!14660 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14661)
!14661 = !{!14659}
!14662 = !DILocation(line: 0, scope: !14660, inlinedAt: !14663)
!14663 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !14652)
!14664 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !14663)
!14665 = !{i64 1698188}
!14666 = !DILocation(line: 454, column: 1, scope: !14596)
!14667 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8795, file: !8795, line: 389, type: !7466, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14668)
!14668 = !{!14669}
!14669 = !DILocalVariable(name: "t", arg: 1, scope: !14667, file: !8795, line: 389, type: !152)
!14670 = !DILocation(line: 0, scope: !14667)
!14671 = !DILocalVariable(name: "t", arg: 1, scope: !14672, file: !8795, line: 102, type: !687)
!14672 = distinct !DISubprogram(name: "z_tmcvt", scope: !8795, file: !8795, line: 102, type: !8802, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14673)
!14673 = !{!14671, !14674, !14675, !14676, !14677, !14678, !14679, !14680, !14681, !14682, !14683}
!14674 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14672, file: !8795, line: 102, type: !152)
!14675 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14672, file: !8795, line: 103, type: !152)
!14676 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14672, file: !8795, line: 103, type: !145)
!14677 = !DILocalVariable(name: "result32", arg: 5, scope: !14672, file: !8795, line: 104, type: !145)
!14678 = !DILocalVariable(name: "round_up", arg: 6, scope: !14672, file: !8795, line: 104, type: !145)
!14679 = !DILocalVariable(name: "round_off", arg: 7, scope: !14672, file: !8795, line: 105, type: !145)
!14680 = !DILocalVariable(name: "mul_ratio", scope: !14672, file: !8795, line: 107, type: !145)
!14681 = !DILocalVariable(name: "div_ratio", scope: !14672, file: !8795, line: 109, type: !145)
!14682 = !DILocalVariable(name: "off", scope: !14672, file: !8795, line: 116, type: !687)
!14683 = !DILocalVariable(name: "rdivisor", scope: !14684, file: !8795, line: 119, type: !152)
!14684 = distinct !DILexicalBlock(scope: !14685, file: !8795, line: 118, column: 18)
!14685 = distinct !DILexicalBlock(scope: !14672, file: !8795, line: 118, column: 6)
!14686 = !DILocation(line: 0, scope: !14672, inlinedAt: !14687)
!14687 = distinct !DILocation(line: 392, column: 9, scope: !14667)
!14688 = !DILocation(line: 143, column: 25, scope: !14689, inlinedAt: !14687)
!14689 = distinct !DILexicalBlock(scope: !14690, file: !8795, line: 142, column: 17)
!14690 = distinct !DILexicalBlock(scope: !14691, file: !8795, line: 142, column: 7)
!14691 = distinct !DILexicalBlock(scope: !14692, file: !8795, line: 141, column: 24)
!14692 = distinct !DILexicalBlock(scope: !14693, file: !8795, line: 141, column: 13)
!14693 = distinct !DILexicalBlock(scope: !14672, file: !8795, line: 134, column: 6)
!14694 = !DILocation(line: 392, column: 2, scope: !14667)
!14695 = distinct !DISubprogram(name: "z_time_slice", scope: !2473, file: !2473, line: 502, type: !9241, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14696)
!14696 = !{!14697, !14698}
!14697 = !DILocalVariable(name: "ticks", arg: 1, scope: !14695, file: !2473, line: 502, type: !107)
!14698 = !DILocalVariable(name: "key", scope: !14695, file: !2473, line: 511, type: !14604)
!14699 = !DILocation(line: 0, scope: !14695)
!14700 = !DILocation(line: 0, scope: !14612, inlinedAt: !14701)
!14701 = distinct !DILocation(line: 511, column: 25, scope: !14695)
!14702 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !14703)
!14703 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !14701)
!14704 = !DILocation(line: 0, scope: !14621, inlinedAt: !14703)
!14705 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !14701)
!14706 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !14701)
!14707 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !14701)
!14708 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !14701)
!14709 = !DILocation(line: 514, column: 6, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14695, file: !2473, line: 514, column: 6)
!14711 = !DILocation(line: 514, column: 25, scope: !14710)
!14712 = !DILocation(line: 514, column: 22, scope: !14710)
!14713 = !DILocation(line: 514, column: 6, scope: !14695)
!14714 = !DILocation(line: 515, column: 3, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14710, file: !2473, line: 514, column: 35)
!14716 = !DILocation(line: 0, scope: !14646, inlinedAt: !14717)
!14717 = distinct !DILocation(line: 516, column: 3, scope: !14715)
!14718 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !14717)
!14719 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !14717)
!14720 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !14717)
!14721 = !DILocation(line: 0, scope: !14660, inlinedAt: !14722)
!14722 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !14717)
!14723 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !14722)
!14724 = !DILocation(line: 517, column: 3, scope: !14715)
!14725 = !DILocation(line: 519, column: 18, scope: !14695)
!14726 = !DILocation(line: 522, column: 6, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14695, file: !2473, line: 522, column: 6)
!14728 = !DILocation(line: 522, column: 27, scope: !14727)
!14729 = !DILocation(line: 522, column: 30, scope: !14727)
!14730 = !DILocation(line: 522, column: 6, scope: !14695)
!14731 = !DILocation(line: 523, column: 30, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14733, file: !2473, line: 523, column: 7)
!14733 = distinct !DILexicalBlock(scope: !14727, file: !2473, line: 522, column: 51)
!14734 = !DILocation(line: 523, column: 13, scope: !14732)
!14735 = !DILocation(line: 523, column: 7, scope: !14733)
!14736 = !DILocation(line: 530, column: 10, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14732, file: !2473, line: 523, column: 43)
!14738 = !DILocation(line: 531, column: 3, scope: !14737)
!14739 = !DILocation(line: 532, column: 30, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14732, file: !2473, line: 531, column: 10)
!14741 = !DILocation(line: 535, column: 29, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !14727, file: !2473, line: 534, column: 9)
!14743 = !DILocation(line: 0, scope: !14646, inlinedAt: !14744)
!14744 = distinct !DILocation(line: 537, column: 2, scope: !14695)
!14745 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !14744)
!14746 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !14744)
!14747 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !14744)
!14748 = !DILocation(line: 0, scope: !14660, inlinedAt: !14749)
!14749 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !14744)
!14750 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !14749)
!14751 = !DILocation(line: 538, column: 1, scope: !14695)
!14752 = distinct !DISubprogram(name: "sliceable", scope: !2473, file: !2473, line: 468, type: !14753, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14755)
!14753 = !DISubroutineType(types: !14754)
!14754 = !{!145, !2365}
!14755 = !{!14756, !14757}
!14756 = !DILocalVariable(name: "thread", arg: 1, scope: !14752, file: !2473, line: 468, type: !2365)
!14757 = !DILocalVariable(name: "ret", scope: !14752, file: !2473, line: 470, type: !145)
!14758 = !DILocation(line: 0, scope: !14752)
!14759 = !DILocation(line: 470, column: 13, scope: !14752)
!14760 = !DILocation(line: 471, column: 3, scope: !14752)
!14761 = !DILocation(line: 471, column: 7, scope: !14752)
!14762 = !DILocation(line: 472, column: 3, scope: !14752)
!14763 = !DILocation(line: 472, column: 37, scope: !14752)
!14764 = !DILocation(line: 472, column: 24, scope: !14752)
!14765 = !DILocation(line: 472, column: 43, scope: !14752)
!14766 = !DILocation(line: 472, column: 7, scope: !14752)
!14767 = !DILocation(line: 473, column: 3, scope: !14752)
!14768 = !DILocation(line: 473, column: 7, scope: !14752)
!14769 = !DILocation(line: 473, column: 6, scope: !14752)
!14770 = !DILocation(line: 479, column: 2, scope: !14752)
!14771 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2473, file: !2473, line: 482, type: !14772, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14774)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{!14604, !14604}
!14774 = !{!14775, !14776}
!14775 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14771, file: !2473, line: 482, type: !14604)
!14776 = !DILocalVariable(name: "curr", scope: !14771, file: !2473, line: 484, type: !2365)
!14777 = !DILocation(line: 0, scope: !14771)
!14778 = !DILocation(line: 484, column: 26, scope: !14771)
!14779 = !DILocation(line: 493, column: 7, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14771, file: !2473, line: 493, column: 6)
!14781 = !DILocation(line: 493, column: 6, scope: !14771)
!14782 = !DILocation(line: 494, column: 3, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14780, file: !2473, line: 493, column: 49)
!14784 = !DILocation(line: 495, column: 2, scope: !14783)
!14785 = !DILocation(line: 496, column: 2, scope: !14771)
!14786 = !DILocation(line: 499, column: 1, scope: !14771)
!14787 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13772, file: !13772, line: 106, type: !14753, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14788)
!14788 = !{!14789, !14790}
!14789 = !DILocalVariable(name: "thread", arg: 1, scope: !14787, file: !13772, line: 106, type: !2365)
!14790 = !DILocalVariable(name: "state", scope: !14787, file: !13772, line: 108, type: !195)
!14791 = !DILocation(line: 0, scope: !14787)
!14792 = !DILocation(line: 108, column: 31, scope: !14787)
!14793 = !DILocation(line: 110, column: 16, scope: !14787)
!14794 = !DILocation(line: 111, column: 41, scope: !14787)
!14795 = !DILocation(line: 110, column: 2, scope: !14787)
!14796 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2473, file: !2473, line: 393, type: !14570, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14797)
!14797 = !{!14798}
!14798 = !DILocalVariable(name: "thread", arg: 1, scope: !14796, file: !2473, line: 393, type: !2365)
!14799 = !DILocation(line: 0, scope: !14796)
!14800 = !DILocation(line: 395, column: 6, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14796, file: !2473, line: 395, column: 6)
!14802 = !DILocation(line: 395, column: 6, scope: !14796)
!14803 = !DILocalVariable(name: "thread", arg: 1, scope: !14804, file: !2473, line: 264, type: !2365)
!14804 = distinct !DISubprogram(name: "dequeue_thread", scope: !2473, file: !2473, line: 264, type: !14570, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14805)
!14805 = !{!14803}
!14806 = !DILocation(line: 0, scope: !14804, inlinedAt: !14807)
!14807 = distinct !DILocation(line: 396, column: 3, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14801, file: !2473, line: 395, column: 34)
!14809 = !DILocation(line: 266, column: 15, scope: !14804, inlinedAt: !14807)
!14810 = !DILocation(line: 266, column: 28, scope: !14804, inlinedAt: !14807)
!14811 = !DILocalVariable(name: "thread", arg: 1, scope: !14812, file: !2473, line: 232, type: !2365)
!14812 = distinct !DISubprogram(name: "runq_remove", scope: !2473, file: !2473, line: 232, type: !14570, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14813)
!14813 = !{!14811}
!14814 = !DILocation(line: 0, scope: !14812, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 268, column: 3, scope: !14816, inlinedAt: !14807)
!14816 = distinct !DILexicalBlock(scope: !14817, file: !2473, line: 267, column: 35)
!14817 = distinct !DILexicalBlock(scope: !14804, file: !2473, line: 267, column: 6)
!14818 = !DILocation(line: 234, column: 2, scope: !14812, inlinedAt: !14815)
!14819 = !DILocation(line: 397, column: 2, scope: !14808)
!14820 = !DILocalVariable(name: "thread", arg: 1, scope: !14821, file: !2473, line: 250, type: !2365)
!14821 = distinct !DISubprogram(name: "queue_thread", scope: !2473, file: !2473, line: 250, type: !14570, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14822)
!14822 = !{!14820}
!14823 = !DILocation(line: 0, scope: !14821, inlinedAt: !14824)
!14824 = distinct !DILocation(line: 398, column: 2, scope: !14796)
!14825 = !DILocation(line: 252, column: 15, scope: !14821, inlinedAt: !14824)
!14826 = !DILocation(line: 252, column: 28, scope: !14821, inlinedAt: !14824)
!14827 = !DILocalVariable(name: "thread", arg: 1, scope: !14828, file: !2473, line: 227, type: !2365)
!14828 = distinct !DISubprogram(name: "runq_add", scope: !2473, file: !2473, line: 227, type: !14570, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14829)
!14829 = !{!14827}
!14830 = !DILocation(line: 0, scope: !14828, inlinedAt: !14831)
!14831 = distinct !DILocation(line: 254, column: 3, scope: !14832, inlinedAt: !14824)
!14832 = distinct !DILexicalBlock(scope: !14833, file: !2473, line: 253, column: 35)
!14833 = distinct !DILexicalBlock(scope: !14821, file: !2473, line: 253, column: 6)
!14834 = !DILocalVariable(name: "pq", arg: 1, scope: !14835, file: !2473, line: 181, type: !14838)
!14835 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2473, file: !2473, line: 181, type: !14836, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14839)
!14836 = !DISubroutineType(types: !14837)
!14837 = !{null, !14838, !2365}
!14838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!14839 = !{!14834, !14840, !14841}
!14840 = !DILocalVariable(name: "thread", arg: 2, scope: !14835, file: !2473, line: 182, type: !2365)
!14841 = !DILocalVariable(name: "t", scope: !14835, file: !2473, line: 184, type: !2365)
!14842 = !DILocation(line: 0, scope: !14835, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 229, column: 2, scope: !14828, inlinedAt: !14831)
!14844 = !DILocation(line: 186, column: 2, scope: !14845, inlinedAt: !14843)
!14845 = distinct !DILexicalBlock(scope: !14846, file: !2473, line: 186, column: 2)
!14846 = distinct !DILexicalBlock(scope: !14835, file: !2473, line: 186, column: 2)
!14847 = !DILocation(line: 186, column: 2, scope: !14846, inlinedAt: !14843)
!14848 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !14843)
!14849 = distinct !DILexicalBlock(scope: !14845, file: !2473, line: 186, column: 2)
!14850 = !DILocation(line: 188, column: 2, scope: !14851, inlinedAt: !14843)
!14851 = distinct !DILexicalBlock(scope: !14835, file: !2473, line: 188, column: 2)
!14852 = !DILocation(line: 188, column: 2, scope: !14853, inlinedAt: !14843)
!14853 = distinct !DILexicalBlock(scope: !14851, file: !2473, line: 188, column: 2)
!14854 = !DILocation(line: 0, scope: !14851, inlinedAt: !14843)
!14855 = !DILocation(line: 189, column: 7, scope: !14856, inlinedAt: !14843)
!14856 = distinct !DILexicalBlock(scope: !14857, file: !2473, line: 189, column: 7)
!14857 = distinct !DILexicalBlock(scope: !14853, file: !2473, line: 188, column: 56)
!14858 = !DILocation(line: 189, column: 35, scope: !14856, inlinedAt: !14843)
!14859 = !DILocation(line: 189, column: 7, scope: !14857, inlinedAt: !14843)
!14860 = !DILocation(line: 191, column: 21, scope: !14861, inlinedAt: !14843)
!14861 = distinct !DILexicalBlock(scope: !14856, file: !2473, line: 189, column: 40)
!14862 = !DILocation(line: 190, column: 4, scope: !14861, inlinedAt: !14843)
!14863 = !DILocation(line: 192, column: 4, scope: !14861, inlinedAt: !14843)
!14864 = distinct !{!14864, !14850, !14865}
!14865 = !DILocation(line: 194, column: 2, scope: !14851, inlinedAt: !14843)
!14866 = !DILocation(line: 196, column: 37, scope: !14835, inlinedAt: !14843)
!14867 = !DILocation(line: 196, column: 2, scope: !14835, inlinedAt: !14843)
!14868 = !DILocation(line: 197, column: 1, scope: !14835, inlinedAt: !14843)
!14869 = !DILocation(line: 399, column: 25, scope: !14796)
!14870 = !DILocation(line: 399, column: 22, scope: !14796)
!14871 = !DILocation(line: 399, column: 2, scope: !14796)
!14872 = !DILocation(line: 400, column: 1, scope: !14796)
!14873 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13772, file: !13772, line: 136, type: !14753, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14874)
!14874 = !{!14875}
!14875 = !DILocalVariable(name: "thread", arg: 1, scope: !14873, file: !13772, line: 136, type: !2365)
!14876 = !DILocation(line: 0, scope: !14873)
!14877 = !DILocation(line: 138, column: 9, scope: !14873)
!14878 = !DILocation(line: 138, column: 2, scope: !14873)
!14879 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2473, file: !2473, line: 1137, type: !14836, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14880)
!14880 = !{!14881, !14882}
!14881 = !DILocalVariable(name: "pq", arg: 1, scope: !14879, file: !2473, line: 1137, type: !14838)
!14882 = !DILocalVariable(name: "thread", arg: 2, scope: !14879, file: !2473, line: 1137, type: !2365)
!14883 = !DILocation(line: 0, scope: !14879)
!14884 = !DILocation(line: 1139, column: 2, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14886, file: !2473, line: 1139, column: 2)
!14886 = distinct !DILexicalBlock(scope: !14879, file: !2473, line: 1139, column: 2)
!14887 = !DILocation(line: 1139, column: 2, scope: !14886)
!14888 = !DILocation(line: 1139, column: 2, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14885, file: !2473, line: 1139, column: 2)
!14890 = !DILocation(line: 1141, column: 33, scope: !14879)
!14891 = !DILocation(line: 1141, column: 2, scope: !14879)
!14892 = !DILocation(line: 1142, column: 1, scope: !14879)
!14893 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13772, file: !13772, line: 83, type: !14753, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14894)
!14894 = !{!14895}
!14895 = !DILocalVariable(name: "thread", arg: 1, scope: !14893, file: !13772, line: 83, type: !2365)
!14896 = !DILocation(line: 0, scope: !14893)
!14897 = !DILocation(line: 89, column: 16, scope: !14893)
!14898 = !DILocation(line: 89, column: 2, scope: !14893)
!14899 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !332, file: !332, line: 294, type: !14900, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14902)
!14900 = !DISubroutineType(types: !14901)
!14901 = !{!2469, !14838}
!14902 = !{!14903}
!14903 = !DILocalVariable(name: "list", arg: 1, scope: !14899, file: !332, line: 294, type: !14838)
!14904 = !DILocation(line: 0, scope: !14899)
!14905 = !DILocation(line: 296, column: 9, scope: !14899)
!14906 = !DILocation(line: 296, column: 49, scope: !14899)
!14907 = !DILocation(line: 296, column: 2, scope: !14899)
!14908 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !332, file: !332, line: 443, type: !14909, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14911)
!14909 = !DISubroutineType(types: !14910)
!14910 = !{null, !2469, !2469}
!14911 = !{!14912, !14913, !14914}
!14912 = !DILocalVariable(name: "successor", arg: 1, scope: !14908, file: !332, line: 443, type: !2469)
!14913 = !DILocalVariable(name: "node", arg: 2, scope: !14908, file: !332, line: 443, type: !2469)
!14914 = !DILocalVariable(name: "prev", scope: !14908, file: !332, line: 445, type: !14915)
!14915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2469)
!14916 = !DILocation(line: 0, scope: !14908)
!14917 = !DILocation(line: 445, column: 39, scope: !14908)
!14918 = !DILocation(line: 447, column: 8, scope: !14908)
!14919 = !DILocation(line: 447, column: 13, scope: !14908)
!14920 = !DILocation(line: 448, column: 8, scope: !14908)
!14921 = !DILocation(line: 448, column: 13, scope: !14908)
!14922 = !DILocation(line: 449, column: 8, scope: !14908)
!14923 = !DILocation(line: 449, column: 13, scope: !14908)
!14924 = !DILocation(line: 450, column: 18, scope: !14908)
!14925 = !DILocation(line: 451, column: 1, scope: !14908)
!14926 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !332, file: !332, line: 341, type: !14927, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14929)
!14927 = !DISubroutineType(types: !14928)
!14928 = !{!2469, !14838, !2469}
!14929 = !{!14930, !14931}
!14930 = !DILocalVariable(name: "list", arg: 1, scope: !14926, file: !332, line: 341, type: !14838)
!14931 = !DILocalVariable(name: "node", arg: 2, scope: !14926, file: !332, line: 342, type: !2469)
!14932 = !DILocation(line: 0, scope: !14926)
!14933 = !DILocation(line: 344, column: 15, scope: !14926)
!14934 = !DILocation(line: 344, column: 9, scope: !14926)
!14935 = !DILocation(line: 344, column: 26, scope: !14926)
!14936 = !DILocation(line: 344, column: 2, scope: !14926)
!14937 = distinct !DISubprogram(name: "sys_dlist_append", scope: !332, file: !332, line: 404, type: !14938, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14940)
!14938 = !DISubroutineType(types: !14939)
!14939 = !{null, !14838, !2469}
!14940 = !{!14941, !14942, !14943}
!14941 = !DILocalVariable(name: "list", arg: 1, scope: !14937, file: !332, line: 404, type: !14838)
!14942 = !DILocalVariable(name: "node", arg: 2, scope: !14937, file: !332, line: 404, type: !2469)
!14943 = !DILocalVariable(name: "tail", scope: !14937, file: !332, line: 406, type: !14915)
!14944 = !DILocation(line: 0, scope: !14937)
!14945 = !DILocation(line: 406, column: 34, scope: !14937)
!14946 = !DILocation(line: 408, column: 8, scope: !14937)
!14947 = !DILocation(line: 408, column: 13, scope: !14937)
!14948 = !DILocation(line: 409, column: 8, scope: !14937)
!14949 = !DILocation(line: 409, column: 13, scope: !14937)
!14950 = !DILocation(line: 411, column: 8, scope: !14937)
!14951 = !DILocation(line: 411, column: 13, scope: !14937)
!14952 = !DILocation(line: 412, column: 13, scope: !14937)
!14953 = !DILocation(line: 413, column: 1, scope: !14937)
!14954 = distinct !DISubprogram(name: "update_cache", scope: !2473, file: !2473, line: 559, type: !9241, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14955)
!14955 = !{!14956, !14957}
!14956 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14954, file: !2473, line: 559, type: !107)
!14957 = !DILocalVariable(name: "thread", scope: !14954, file: !2473, line: 562, type: !2365)
!14958 = !DILocation(line: 0, scope: !14954)
!14959 = !DILocation(line: 239, column: 9, scope: !14960, inlinedAt: !14963)
!14960 = distinct !DISubprogram(name: "runq_best", scope: !2473, file: !2473, line: 237, type: !14961, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!14961 = !DISubroutineType(types: !14962)
!14962 = !{!2365}
!14963 = distinct !DILocation(line: 314, column: 28, scope: !14964, inlinedAt: !14967)
!14964 = distinct !DISubprogram(name: "next_up", scope: !2473, file: !2473, line: 312, type: !14961, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14965)
!14965 = !{!14966}
!14966 = !DILocalVariable(name: "thread", scope: !14964, file: !2473, line: 314, type: !2365)
!14967 = distinct !DILocation(line: 562, column: 28, scope: !14954)
!14968 = !DILocation(line: 0, scope: !14964, inlinedAt: !14967)
!14969 = !DILocation(line: 340, column: 17, scope: !14964, inlinedAt: !14967)
!14970 = !DILocation(line: 340, column: 9, scope: !14964, inlinedAt: !14967)
!14971 = !DILocalVariable(name: "thread", arg: 1, scope: !14972, file: !2473, line: 127, type: !2365)
!14972 = distinct !DISubprogram(name: "should_preempt", scope: !2473, file: !2473, line: 127, type: !14973, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14975)
!14973 = !DISubroutineType(types: !14974)
!14974 = !{!145, !2365, !107}
!14975 = !{!14971, !14976}
!14976 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14972, file: !2473, line: 128, type: !107)
!14977 = !DILocation(line: 0, scope: !14972, inlinedAt: !14978)
!14978 = distinct !DILocation(line: 564, column: 6, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14954, file: !2473, line: 564, column: 6)
!14980 = !DILocation(line: 133, column: 17, scope: !14981, inlinedAt: !14978)
!14981 = distinct !DILexicalBlock(scope: !14972, file: !2473, line: 133, column: 6)
!14982 = !DILocation(line: 0, scope: !14979)
!14983 = !DILocation(line: 133, column: 6, scope: !14972, inlinedAt: !14978)
!14984 = !DILocation(line: 137, column: 2, scope: !14985, inlinedAt: !14978)
!14985 = distinct !DILexicalBlock(scope: !14986, file: !2473, line: 137, column: 2)
!14986 = distinct !DILexicalBlock(scope: !14972, file: !2473, line: 137, column: 2)
!14987 = !DILocation(line: 137, column: 2, scope: !14986, inlinedAt: !14978)
!14988 = !DILocation(line: 137, column: 2, scope: !14989, inlinedAt: !14978)
!14989 = distinct !DILexicalBlock(scope: !14985, file: !2473, line: 137, column: 2)
!14990 = !DILocation(line: 140, column: 6, scope: !14991, inlinedAt: !14978)
!14991 = distinct !DILexicalBlock(scope: !14972, file: !2473, line: 140, column: 6)
!14992 = !DILocation(line: 140, column: 6, scope: !14972, inlinedAt: !14978)
!14993 = !DILocation(line: 150, column: 9, scope: !14994, inlinedAt: !14978)
!14994 = distinct !DILexicalBlock(scope: !14972, file: !2473, line: 149, column: 6)
!14995 = !DILocation(line: 149, column: 6, scope: !14972, inlinedAt: !14978)
!14996 = !DILocation(line: 157, column: 6, scope: !14997, inlinedAt: !14978)
!14997 = distinct !DILexicalBlock(scope: !14972, file: !2473, line: 157, column: 6)
!14998 = !DILocation(line: 564, column: 6, scope: !14954)
!14999 = !DILocation(line: 566, column: 14, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !15001, file: !2473, line: 566, column: 7)
!15001 = distinct !DILexicalBlock(scope: !14979, file: !2473, line: 564, column: 42)
!15002 = !DILocation(line: 566, column: 7, scope: !15001)
!15003 = !DILocation(line: 567, column: 4, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15000, file: !2473, line: 566, column: 27)
!15005 = !DILocation(line: 568, column: 3, scope: !15004)
!15006 = !DILocation(line: 585, column: 1, scope: !14954)
!15007 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2473, file: !2473, line: 1144, type: !15008, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15010)
!15008 = !DISubroutineType(types: !15009)
!15009 = !{!2365, !14838}
!15010 = !{!15011, !15012, !15013}
!15011 = !DILocalVariable(name: "pq", arg: 1, scope: !15007, file: !2473, line: 1144, type: !14838)
!15012 = !DILocalVariable(name: "thread", scope: !15007, file: !2473, line: 1146, type: !2365)
!15013 = !DILocalVariable(name: "n", scope: !15007, file: !2473, line: 1147, type: !2469)
!15014 = !DILocation(line: 0, scope: !15007)
!15015 = !DILocation(line: 1147, column: 19, scope: !15007)
!15016 = !DILocation(line: 1152, column: 2, scope: !15007)
!15017 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13772, file: !13772, line: 115, type: !14753, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15018)
!15018 = !{!15019}
!15019 = !DILocalVariable(name: "thread", arg: 1, scope: !15017, file: !13772, line: 115, type: !2365)
!15020 = !DILocation(line: 0, scope: !15017)
!15021 = !DILocation(line: 117, column: 46, scope: !15017)
!15022 = !DILocation(line: 117, column: 10, scope: !15017)
!15023 = !DILocation(line: 117, column: 9, scope: !15017)
!15024 = !DILocation(line: 117, column: 2, scope: !15017)
!15025 = distinct !DISubprogram(name: "is_preempt", scope: !2473, file: !2473, line: 62, type: !14588, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15026)
!15026 = !{!15027}
!15027 = !DILocalVariable(name: "thread", arg: 1, scope: !15025, file: !2473, line: 62, type: !2365)
!15028 = !DILocation(line: 0, scope: !15025)
!15029 = !DILocation(line: 65, column: 22, scope: !15025)
!15030 = !DILocation(line: 65, column: 30, scope: !15025)
!15031 = !DILocation(line: 65, column: 2, scope: !15025)
!15032 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14201, file: !14201, line: 35, type: !15033, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15037)
!15033 = !DISubroutineType(types: !15034)
!15034 = !{!145, !15035}
!15035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15036, size: 32)
!15036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2416)
!15037 = !{!15038}
!15038 = !DILocalVariable(name: "to", arg: 1, scope: !15032, file: !14201, line: 35, type: !15035)
!15039 = !DILocation(line: 0, scope: !15032)
!15040 = !DILocation(line: 37, column: 35, scope: !15032)
!15041 = !DILocation(line: 37, column: 10, scope: !15032)
!15042 = !DILocation(line: 37, column: 9, scope: !15032)
!15043 = !DILocation(line: 37, column: 2, scope: !15032)
!15044 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !332, file: !332, line: 225, type: !15045, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15049)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{!145, !15047}
!15047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15048, size: 32)
!15048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2375)
!15049 = !{!15050}
!15050 = !DILocalVariable(name: "node", arg: 1, scope: !15044, file: !332, line: 225, type: !15047)
!15051 = !DILocation(line: 0, scope: !15044)
!15052 = !DILocation(line: 227, column: 15, scope: !15044)
!15053 = !DILocation(line: 227, column: 20, scope: !15044)
!15054 = !DILocation(line: 227, column: 2, scope: !15044)
!15055 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !332, file: !332, line: 325, type: !14927, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15056)
!15056 = !{!15057, !15058}
!15057 = !DILocalVariable(name: "list", arg: 1, scope: !15055, file: !332, line: 325, type: !14838)
!15058 = !DILocalVariable(name: "node", arg: 2, scope: !15055, file: !332, line: 326, type: !2469)
!15059 = !DILocation(line: 0, scope: !15055)
!15060 = !DILocation(line: 328, column: 24, scope: !15055)
!15061 = !DILocation(line: 328, column: 15, scope: !15055)
!15062 = !DILocation(line: 328, column: 9, scope: !15055)
!15063 = !DILocation(line: 328, column: 45, scope: !15055)
!15064 = !DILocation(line: 328, column: 2, scope: !15055)
!15065 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !332, file: !332, line: 266, type: !15066, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15068)
!15066 = !DISubroutineType(types: !15067)
!15067 = !{!145, !14838}
!15068 = !{!15069}
!15069 = !DILocalVariable(name: "list", arg: 1, scope: !15065, file: !332, line: 266, type: !14838)
!15070 = !DILocation(line: 0, scope: !15065)
!15071 = !DILocation(line: 268, column: 15, scope: !15065)
!15072 = !DILocation(line: 268, column: 20, scope: !15065)
!15073 = !DILocation(line: 268, column: 2, scope: !15065)
!15074 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !332, file: !332, line: 496, type: !15075, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15077)
!15075 = !DISubroutineType(types: !15076)
!15076 = !{null, !2469}
!15077 = !{!15078, !15079, !15080}
!15078 = !DILocalVariable(name: "node", arg: 1, scope: !15074, file: !332, line: 496, type: !2469)
!15079 = !DILocalVariable(name: "prev", scope: !15074, file: !332, line: 498, type: !14915)
!15080 = !DILocalVariable(name: "next", scope: !15074, file: !332, line: 499, type: !14915)
!15081 = !DILocation(line: 0, scope: !15074)
!15082 = !DILocation(line: 498, column: 34, scope: !15074)
!15083 = !DILocation(line: 499, column: 34, scope: !15074)
!15084 = !DILocation(line: 501, column: 8, scope: !15074)
!15085 = !DILocation(line: 501, column: 13, scope: !15074)
!15086 = !DILocation(line: 502, column: 8, scope: !15074)
!15087 = !DILocation(line: 502, column: 13, scope: !15074)
!15088 = !DILocation(line: 503, column: 2, scope: !15074)
!15089 = !DILocation(line: 504, column: 1, scope: !15074)
!15090 = distinct !DISubprogram(name: "sys_dnode_init", scope: !332, file: !332, line: 211, type: !15075, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15091)
!15091 = !{!15092}
!15092 = !DILocalVariable(name: "node", arg: 1, scope: !15090, file: !332, line: 211, type: !2469)
!15093 = !DILocation(line: 0, scope: !15090)
!15094 = !DILocation(line: 213, column: 8, scope: !15090)
!15095 = !DILocation(line: 213, column: 13, scope: !15090)
!15096 = !DILocation(line: 214, column: 8, scope: !15090)
!15097 = !DILocation(line: 214, column: 13, scope: !15090)
!15098 = !DILocation(line: 215, column: 1, scope: !15090)
!15099 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13772, file: !13772, line: 131, type: !15100, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15102)
!15100 = !DISubroutineType(types: !15101)
!15101 = !{!145, !2365, !152}
!15102 = !{!15103, !15104}
!15103 = !DILocalVariable(name: "thread", arg: 1, scope: !15099, file: !13772, line: 131, type: !2365)
!15104 = !DILocalVariable(name: "state", arg: 2, scope: !15099, file: !13772, line: 131, type: !152)
!15105 = !DILocation(line: 0, scope: !15099)
!15106 = !DILocation(line: 133, column: 23, scope: !15099)
!15107 = !DILocation(line: 133, column: 10, scope: !15099)
!15108 = !DILocation(line: 133, column: 36, scope: !15099)
!15109 = !DILocation(line: 133, column: 45, scope: !15099)
!15110 = !DILocation(line: 133, column: 2, scope: !15099)
!15111 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13772, file: !13772, line: 211, type: !15112, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15114)
!15112 = !DISubroutineType(types: !15113)
!15113 = !{!145, !107, !107}
!15114 = !{!15115, !15116}
!15115 = !DILocalVariable(name: "prio", arg: 1, scope: !15111, file: !13772, line: 211, type: !107)
!15116 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15111, file: !13772, line: 211, type: !107)
!15117 = !DILocation(line: 0, scope: !15111)
!15118 = !DILocation(line: 213, column: 9, scope: !15111)
!15119 = !DILocation(line: 213, column: 2, scope: !15111)
!15120 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13772, file: !13772, line: 206, type: !15112, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15121)
!15121 = !{!15122, !15123}
!15122 = !DILocalVariable(name: "prio1", arg: 1, scope: !15120, file: !13772, line: 206, type: !107)
!15123 = !DILocalVariable(name: "prio2", arg: 2, scope: !15120, file: !13772, line: 206, type: !107)
!15124 = !DILocation(line: 0, scope: !15120)
!15125 = !DILocation(line: 208, column: 15, scope: !15120)
!15126 = !DILocation(line: 208, column: 2, scope: !15120)
!15127 = distinct !DISubprogram(name: "z_ready_thread", scope: !2473, file: !2473, line: 635, type: !14570, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15128)
!15128 = !{!15129, !15130, !15132}
!15129 = !DILocalVariable(name: "thread", arg: 1, scope: !15127, file: !2473, line: 635, type: !2365)
!15130 = !DILocalVariable(name: "__i", scope: !15131, file: !2473, line: 637, type: !14604)
!15131 = distinct !DILexicalBlock(scope: !15127, file: !2473, line: 637, column: 2)
!15132 = !DILocalVariable(name: "__key", scope: !15131, file: !2473, line: 637, type: !14604)
!15133 = !DILocation(line: 0, scope: !15127)
!15134 = !DILocation(line: 0, scope: !15131)
!15135 = !DILocation(line: 0, scope: !14612, inlinedAt: !15136)
!15136 = distinct !DILocation(line: 637, column: 2, scope: !15131)
!15137 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15138)
!15138 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15136)
!15139 = !DILocation(line: 0, scope: !14621, inlinedAt: !15138)
!15140 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15136)
!15141 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15136)
!15142 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15136)
!15143 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15136)
!15144 = !DILocation(line: 639, column: 4, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15146, file: !2473, line: 638, column: 41)
!15146 = distinct !DILexicalBlock(scope: !15147, file: !2473, line: 638, column: 7)
!15147 = distinct !DILexicalBlock(scope: !15148, file: !2473, line: 637, column: 26)
!15148 = distinct !DILexicalBlock(scope: !15131, file: !2473, line: 637, column: 2)
!15149 = !DILocation(line: 0, scope: !14646, inlinedAt: !15150)
!15150 = distinct !DILocation(line: 637, column: 2, scope: !15148)
!15151 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15150)
!15152 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15150)
!15153 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15150)
!15154 = !DILocation(line: 0, scope: !14660, inlinedAt: !15155)
!15155 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15150)
!15156 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15155)
!15157 = !DILocation(line: 642, column: 1, scope: !15127)
!15158 = distinct !DISubprogram(name: "ready_thread", scope: !2473, file: !2473, line: 617, type: !14570, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15159)
!15159 = !{!15160}
!15160 = !DILocalVariable(name: "thread", arg: 1, scope: !15158, file: !2473, line: 617, type: !2365)
!15161 = !DILocation(line: 0, scope: !15158)
!15162 = !DILocation(line: 626, column: 7, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15158, file: !2473, line: 626, column: 6)
!15164 = !DILocation(line: 626, column: 34, scope: !15163)
!15165 = !DILocation(line: 626, column: 37, scope: !15163)
!15166 = !DILocation(line: 626, column: 6, scope: !15158)
!15167 = !DILocation(line: 0, scope: !14821, inlinedAt: !15168)
!15168 = distinct !DILocation(line: 629, column: 3, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15163, file: !2473, line: 626, column: 64)
!15170 = !DILocation(line: 252, column: 15, scope: !14821, inlinedAt: !15168)
!15171 = !DILocation(line: 252, column: 28, scope: !14821, inlinedAt: !15168)
!15172 = !DILocation(line: 0, scope: !14828, inlinedAt: !15173)
!15173 = distinct !DILocation(line: 254, column: 3, scope: !14832, inlinedAt: !15168)
!15174 = !DILocation(line: 0, scope: !14835, inlinedAt: !15175)
!15175 = distinct !DILocation(line: 229, column: 2, scope: !14828, inlinedAt: !15173)
!15176 = !DILocation(line: 186, column: 2, scope: !14845, inlinedAt: !15175)
!15177 = !DILocation(line: 186, column: 2, scope: !14846, inlinedAt: !15175)
!15178 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !15175)
!15179 = !DILocation(line: 188, column: 2, scope: !14851, inlinedAt: !15175)
!15180 = !DILocation(line: 188, column: 2, scope: !14853, inlinedAt: !15175)
!15181 = !DILocation(line: 0, scope: !14851, inlinedAt: !15175)
!15182 = !DILocation(line: 189, column: 7, scope: !14856, inlinedAt: !15175)
!15183 = !DILocation(line: 189, column: 35, scope: !14856, inlinedAt: !15175)
!15184 = !DILocation(line: 189, column: 7, scope: !14857, inlinedAt: !15175)
!15185 = !DILocation(line: 191, column: 21, scope: !14861, inlinedAt: !15175)
!15186 = !DILocation(line: 190, column: 4, scope: !14861, inlinedAt: !15175)
!15187 = !DILocation(line: 192, column: 4, scope: !14861, inlinedAt: !15175)
!15188 = distinct !{!15188, !15179, !15189}
!15189 = !DILocation(line: 194, column: 2, scope: !14851, inlinedAt: !15175)
!15190 = !DILocation(line: 196, column: 37, scope: !14835, inlinedAt: !15175)
!15191 = !DILocation(line: 196, column: 2, scope: !14835, inlinedAt: !15175)
!15192 = !DILocation(line: 197, column: 1, scope: !14835, inlinedAt: !15175)
!15193 = !DILocation(line: 630, column: 3, scope: !15169)
!15194 = !DILocation(line: 632, column: 2, scope: !15169)
!15195 = !DILocation(line: 633, column: 1, scope: !15158)
!15196 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13772, file: !13772, line: 120, type: !14753, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15197)
!15197 = !{!15198}
!15198 = !DILocalVariable(name: "thread", arg: 1, scope: !15196, file: !13772, line: 120, type: !2365)
!15199 = !DILocation(line: 0, scope: !15196)
!15200 = !DILocation(line: 122, column: 12, scope: !15196)
!15201 = !DILocation(line: 122, column: 62, scope: !15196)
!15202 = !DILocation(line: 123, column: 4, scope: !15196)
!15203 = !DILocation(line: 122, column: 2, scope: !15196)
!15204 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2473, file: !2473, line: 644, type: !14570, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15205)
!15205 = !{!15206, !15207, !15209}
!15206 = !DILocalVariable(name: "thread", arg: 1, scope: !15204, file: !2473, line: 644, type: !2365)
!15207 = !DILocalVariable(name: "__i", scope: !15208, file: !2473, line: 646, type: !14604)
!15208 = distinct !DILexicalBlock(scope: !15204, file: !2473, line: 646, column: 2)
!15209 = !DILocalVariable(name: "__key", scope: !15208, file: !2473, line: 646, type: !14604)
!15210 = !DILocation(line: 0, scope: !15204)
!15211 = !DILocation(line: 0, scope: !15208)
!15212 = !DILocation(line: 0, scope: !14612, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 646, column: 2, scope: !15208)
!15214 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15213)
!15216 = !DILocation(line: 0, scope: !14621, inlinedAt: !15215)
!15217 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15213)
!15218 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15213)
!15219 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15213)
!15220 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15213)
!15221 = !DILocation(line: 647, column: 3, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15223, file: !2473, line: 646, column: 26)
!15223 = distinct !DILexicalBlock(scope: !15208, file: !2473, line: 646, column: 2)
!15224 = !DILocation(line: 0, scope: !14646, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 646, column: 2, scope: !15223)
!15226 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15225)
!15227 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15225)
!15228 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15225)
!15229 = !DILocation(line: 0, scope: !14660, inlinedAt: !15230)
!15230 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15225)
!15231 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15230)
!15232 = !DILocation(line: 649, column: 1, scope: !15204)
!15233 = distinct !DISubprogram(name: "z_sched_start", scope: !2473, file: !2473, line: 651, type: !14570, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15234)
!15234 = !{!15235, !15236}
!15235 = !DILocalVariable(name: "thread", arg: 1, scope: !15233, file: !2473, line: 651, type: !2365)
!15236 = !DILocalVariable(name: "key", scope: !15233, file: !2473, line: 653, type: !14604)
!15237 = !DILocation(line: 0, scope: !15233)
!15238 = !DILocation(line: 0, scope: !14612, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 653, column: 25, scope: !15233)
!15240 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15239)
!15242 = !DILocation(line: 0, scope: !14621, inlinedAt: !15241)
!15243 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15239)
!15244 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15239)
!15245 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15239)
!15246 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15239)
!15247 = !DILocation(line: 655, column: 6, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15233, file: !2473, line: 655, column: 6)
!15249 = !DILocation(line: 655, column: 6, scope: !15233)
!15250 = !DILocation(line: 0, scope: !14646, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 656, column: 3, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15248, file: !2473, line: 655, column: 36)
!15253 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15251)
!15254 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15251)
!15255 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15251)
!15256 = !DILocation(line: 0, scope: !14660, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15251)
!15258 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15257)
!15259 = !DILocation(line: 657, column: 3, scope: !15252)
!15260 = !DILocation(line: 660, column: 2, scope: !15233)
!15261 = !DILocation(line: 661, column: 2, scope: !15233)
!15262 = !DILocation(line: 662, column: 2, scope: !15233)
!15263 = !DILocation(line: 663, column: 1, scope: !15233)
!15264 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13772, file: !13772, line: 126, type: !14753, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15265)
!15265 = !{!15266}
!15266 = !DILocalVariable(name: "thread", arg: 1, scope: !15264, file: !13772, line: 126, type: !2365)
!15267 = !DILocation(line: 0, scope: !15264)
!15268 = !DILocation(line: 128, column: 23, scope: !15264)
!15269 = !DILocation(line: 128, column: 36, scope: !15264)
!15270 = !DILocation(line: 128, column: 56, scope: !15264)
!15271 = !DILocation(line: 128, column: 2, scope: !15264)
!15272 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13772, file: !13772, line: 155, type: !14570, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15273)
!15273 = !{!15274}
!15274 = !DILocalVariable(name: "thread", arg: 1, scope: !15272, file: !13772, line: 155, type: !2365)
!15275 = !DILocation(line: 0, scope: !15272)
!15276 = !DILocation(line: 157, column: 15, scope: !15272)
!15277 = !DILocation(line: 157, column: 28, scope: !15272)
!15278 = !DILocation(line: 158, column: 1, scope: !15272)
!15279 = distinct !DISubprogram(name: "z_reschedule", scope: !2473, file: !2473, line: 967, type: !14647, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15280)
!15280 = !{!15281, !15282}
!15281 = !DILocalVariable(name: "lock", arg: 1, scope: !15279, file: !2473, line: 967, type: !14615)
!15282 = !DILocalVariable(name: "key", arg: 2, scope: !15279, file: !2473, line: 967, type: !14604)
!15283 = !DILocation(line: 0, scope: !15279)
!15284 = !DILocation(line: 969, column: 6, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15279, file: !2473, line: 969, column: 6)
!15286 = !DILocation(line: 969, column: 23, scope: !15285)
!15287 = !DILocation(line: 969, column: 26, scope: !15285)
!15288 = !DILocation(line: 969, column: 6, scope: !15279)
!15289 = !DILocalVariable(name: "key", arg: 2, scope: !15290, file: !13876, line: 193, type: !14604)
!15290 = distinct !DISubprogram(name: "z_swap", scope: !13876, file: !13876, line: 193, type: !15291, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15293)
!15291 = !DISubroutineType(types: !15292)
!15292 = !{!107, !14615, !14604}
!15293 = !{!15294, !15289}
!15294 = !DILocalVariable(name: "lock", arg: 1, scope: !15290, file: !13876, line: 193, type: !14615)
!15295 = !DILocation(line: 0, scope: !15290, inlinedAt: !15296)
!15296 = distinct !DILocation(line: 970, column: 3, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !15285, file: !2473, line: 969, column: 39)
!15298 = !DILocalVariable(name: "l", arg: 1, scope: !15299, file: !433, line: 221, type: !14615)
!15299 = distinct !DISubprogram(name: "k_spin_release", scope: !433, file: !433, line: 221, type: !15300, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15302)
!15300 = !DISubroutineType(types: !15301)
!15301 = !{null, !14615}
!15302 = !{!15298}
!15303 = !DILocation(line: 0, scope: !15299, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 195, column: 2, scope: !15290, inlinedAt: !15296)
!15305 = !DILocation(line: 225, column: 2, scope: !15306, inlinedAt: !15304)
!15306 = distinct !DILexicalBlock(scope: !15307, file: !433, line: 225, column: 2)
!15307 = distinct !DILexicalBlock(scope: !15299, file: !433, line: 225, column: 2)
!15308 = !DILocation(line: 225, column: 2, scope: !15307, inlinedAt: !15304)
!15309 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !15304)
!15310 = distinct !DILexicalBlock(scope: !15306, file: !433, line: 225, column: 2)
!15311 = !DILocation(line: 196, column: 9, scope: !15290, inlinedAt: !15296)
!15312 = !DILocation(line: 971, column: 2, scope: !15297)
!15313 = !DILocation(line: 0, scope: !14646, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 972, column: 3, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !15285, file: !2473, line: 971, column: 9)
!15316 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15314)
!15317 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15314)
!15318 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15314)
!15319 = !DILocation(line: 0, scope: !14660, inlinedAt: !15320)
!15320 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15314)
!15321 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15320)
!15322 = !DILocation(line: 975, column: 1, scope: !15279)
!15323 = distinct !DISubprogram(name: "resched", scope: !2473, file: !2473, line: 940, type: !15324, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15326)
!15324 = !DISubroutineType(types: !15325)
!15325 = !{!145, !152}
!15326 = !{!15327}
!15327 = !DILocalVariable(name: "key", arg: 1, scope: !15323, file: !2473, line: 940, type: !152)
!15328 = !DILocation(line: 0, scope: !15323)
!15329 = !DILocalVariable(name: "key", arg: 1, scope: !15330, file: !5884, line: 112, type: !32)
!15330 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5884, file: !5884, line: 112, type: !15331, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15333)
!15331 = !DISubroutineType(types: !15332)
!15332 = !{!145, !32}
!15333 = !{!15329}
!15334 = !DILocation(line: 0, scope: !15330, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 946, column: 9, scope: !15323)
!15336 = !DILocation(line: 115, column: 13, scope: !15330, inlinedAt: !15335)
!15337 = !DILocation(line: 946, column: 32, scope: !15323)
!15338 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !15342)
!15339 = distinct !DISubprogram(name: "__get_IPSR", scope: !6220, file: !6220, line: 1027, type: !7225, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15340)
!15340 = !{!15341}
!15341 = !DILocalVariable(name: "result", scope: !15339, file: !6220, line: 1029, type: !152)
!15342 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !15344)
!15343 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7231, file: !7231, line: 46, type: !7232, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!15344 = distinct !DILocation(line: 946, column: 36, scope: !15323)
!15345 = !{i64 2491306}
!15346 = !DILocation(line: 0, scope: !15339, inlinedAt: !15342)
!15347 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !15344)
!15348 = !DILocation(line: 946, column: 2, scope: !15323)
!15349 = distinct !DISubprogram(name: "need_swap", scope: !2473, file: !2473, line: 953, type: !7232, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15350)
!15350 = !{!15351}
!15351 = !DILocalVariable(name: "new_thread", scope: !15349, file: !2473, line: 959, type: !2365)
!15352 = !DILocation(line: 962, column: 31, scope: !15349)
!15353 = !DILocation(line: 0, scope: !15349)
!15354 = !DILocation(line: 963, column: 23, scope: !15349)
!15355 = !DILocation(line: 963, column: 20, scope: !15349)
!15356 = !DILocation(line: 963, column: 2, scope: !15349)
!15357 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13876, file: !13876, line: 181, type: !6230, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15358)
!15358 = !{!15359, !15360}
!15359 = !DILocalVariable(name: "key", arg: 1, scope: !15357, file: !13876, line: 181, type: !32)
!15360 = !DILocalVariable(name: "ret", scope: !15357, file: !13876, line: 183, type: !107)
!15361 = !DILocation(line: 0, scope: !15357)
!15362 = !DILocation(line: 185, column: 8, scope: !15357)
!15363 = !DILocation(line: 186, column: 2, scope: !15357)
!15364 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2473, file: !2473, line: 665, type: !14570, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15365)
!15365 = !{!15366, !15367, !15369}
!15366 = !DILocalVariable(name: "thread", arg: 1, scope: !15364, file: !2473, line: 665, type: !2365)
!15367 = !DILocalVariable(name: "__i", scope: !15368, file: !2473, line: 671, type: !14604)
!15368 = distinct !DILexicalBlock(scope: !15364, file: !2473, line: 671, column: 2)
!15369 = !DILocalVariable(name: "__key", scope: !15368, file: !2473, line: 671, type: !14604)
!15370 = !DILocation(line: 0, scope: !15364)
!15371 = !DILocation(line: 669, column: 8, scope: !15364)
!15372 = !DILocation(line: 0, scope: !15368)
!15373 = !DILocation(line: 0, scope: !14612, inlinedAt: !15374)
!15374 = distinct !DILocation(line: 671, column: 2, scope: !15368)
!15375 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15374)
!15377 = !DILocation(line: 0, scope: !14621, inlinedAt: !15376)
!15378 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15374)
!15379 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15374)
!15380 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15374)
!15381 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15374)
!15382 = !DILocation(line: 672, column: 7, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15384, file: !2473, line: 672, column: 7)
!15384 = distinct !DILexicalBlock(scope: !15385, file: !2473, line: 671, column: 26)
!15385 = distinct !DILexicalBlock(scope: !15368, file: !2473, line: 671, column: 2)
!15386 = !DILocation(line: 672, column: 7, scope: !15384)
!15387 = !DILocation(line: 0, scope: !14804, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 673, column: 4, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15383, file: !2473, line: 672, column: 35)
!15390 = !DILocation(line: 266, column: 15, scope: !14804, inlinedAt: !15388)
!15391 = !DILocation(line: 266, column: 28, scope: !14804, inlinedAt: !15388)
!15392 = !DILocation(line: 0, scope: !14812, inlinedAt: !15393)
!15393 = distinct !DILocation(line: 268, column: 3, scope: !14816, inlinedAt: !15388)
!15394 = !DILocation(line: 234, column: 2, scope: !14812, inlinedAt: !15393)
!15395 = !DILocation(line: 674, column: 3, scope: !15389)
!15396 = !DILocation(line: 675, column: 3, scope: !15384)
!15397 = !DILocation(line: 676, column: 26, scope: !15384)
!15398 = !DILocation(line: 676, column: 23, scope: !15384)
!15399 = !DILocation(line: 676, column: 3, scope: !15384)
!15400 = !DILocation(line: 0, scope: !14646, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 671, column: 2, scope: !15385)
!15402 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15401)
!15403 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15401)
!15404 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15401)
!15405 = !DILocation(line: 0, scope: !14660, inlinedAt: !15406)
!15406 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15401)
!15407 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15406)
!15408 = !DILocation(line: 679, column: 16, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15364, file: !2473, line: 679, column: 6)
!15410 = !DILocation(line: 679, column: 13, scope: !15409)
!15411 = !DILocation(line: 679, column: 6, scope: !15364)
!15412 = !DILocation(line: 680, column: 3, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15409, file: !2473, line: 679, column: 26)
!15414 = !DILocation(line: 681, column: 2, scope: !15413)
!15415 = !DILocation(line: 684, column: 1, scope: !15364)
!15416 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14201, file: !14201, line: 52, type: !14588, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15417)
!15417 = !{!15418}
!15418 = !DILocalVariable(name: "thread", arg: 1, scope: !15416, file: !14201, line: 52, type: !2365)
!15419 = !DILocation(line: 0, scope: !15416)
!15420 = !DILocation(line: 54, column: 39, scope: !15416)
!15421 = !DILocation(line: 54, column: 9, scope: !15416)
!15422 = !DILocation(line: 54, column: 2, scope: !15416)
!15423 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13772, file: !13772, line: 141, type: !14570, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15424)
!15424 = !{!15425}
!15425 = !DILocalVariable(name: "thread", arg: 1, scope: !15423, file: !13772, line: 141, type: !2365)
!15426 = !DILocation(line: 0, scope: !15423)
!15427 = !DILocation(line: 143, column: 15, scope: !15423)
!15428 = !DILocation(line: 143, column: 28, scope: !15423)
!15429 = !DILocation(line: 146, column: 1, scope: !15423)
!15430 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13772, file: !13772, line: 73, type: !3055, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!15431 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 75, column: 30, scope: !15430)
!15433 = !DILocation(line: 0, scope: !14621, inlinedAt: !15432)
!15434 = !DILocation(line: 75, column: 9, scope: !15430)
!15435 = !DILocation(line: 76, column: 1, scope: !15430)
!15436 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2473, file: !2473, line: 977, type: !5908, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15437)
!15437 = !{!15438}
!15438 = !DILocalVariable(name: "key", arg: 1, scope: !15436, file: !2473, line: 977, type: !152)
!15439 = !DILocation(line: 0, scope: !15436)
!15440 = !DILocation(line: 979, column: 6, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15436, file: !2473, line: 979, column: 6)
!15442 = !DILocation(line: 979, column: 6, scope: !15436)
!15443 = !DILocation(line: 980, column: 3, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15441, file: !2473, line: 979, column: 20)
!15445 = !DILocation(line: 981, column: 2, scope: !15444)
!15446 = !DILocation(line: 0, scope: !14660, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 982, column: 3, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15441, file: !2473, line: 981, column: 9)
!15449 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15447)
!15450 = !DILocation(line: 985, column: 1, scope: !15436)
!15451 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2473, file: !2473, line: 695, type: !14570, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15452)
!15452 = !{!15453, !15454}
!15453 = !DILocalVariable(name: "thread", arg: 1, scope: !15451, file: !2473, line: 695, type: !2365)
!15454 = !DILocalVariable(name: "key", scope: !15451, file: !2473, line: 699, type: !14604)
!15455 = !DILocation(line: 0, scope: !15451)
!15456 = !DILocation(line: 0, scope: !14612, inlinedAt: !15457)
!15457 = distinct !DILocation(line: 699, column: 25, scope: !15451)
!15458 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15457)
!15460 = !DILocation(line: 0, scope: !14621, inlinedAt: !15459)
!15461 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15457)
!15462 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15457)
!15463 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15457)
!15464 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15457)
!15465 = !DILocation(line: 702, column: 7, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15451, file: !2473, line: 702, column: 6)
!15467 = !DILocation(line: 702, column: 6, scope: !15451)
!15468 = !DILocation(line: 0, scope: !14646, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 703, column: 3, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15466, file: !2473, line: 702, column: 38)
!15471 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15469)
!15472 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15469)
!15473 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15469)
!15474 = !DILocation(line: 0, scope: !14660, inlinedAt: !15475)
!15475 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15469)
!15476 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15475)
!15477 = !DILocation(line: 704, column: 3, scope: !15470)
!15478 = !DILocation(line: 707, column: 2, scope: !15451)
!15479 = !DILocation(line: 708, column: 2, scope: !15451)
!15480 = !DILocation(line: 710, column: 2, scope: !15451)
!15481 = !DILocation(line: 713, column: 1, scope: !15451)
!15482 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13772, file: !13772, line: 96, type: !14753, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15483)
!15483 = !{!15484}
!15484 = !DILocalVariable(name: "thread", arg: 1, scope: !15482, file: !13772, line: 96, type: !2365)
!15485 = !DILocation(line: 0, scope: !15482)
!15486 = !DILocation(line: 98, column: 23, scope: !15482)
!15487 = !DILocation(line: 98, column: 36, scope: !15482)
!15488 = !DILocation(line: 98, column: 57, scope: !15482)
!15489 = !DILocation(line: 98, column: 2, scope: !15482)
!15490 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13772, file: !13772, line: 148, type: !14570, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15491)
!15491 = !{!15492}
!15492 = !DILocalVariable(name: "thread", arg: 1, scope: !15490, file: !13772, line: 148, type: !2365)
!15493 = !DILocation(line: 0, scope: !15490)
!15494 = !DILocation(line: 150, column: 15, scope: !15490)
!15495 = !DILocation(line: 150, column: 28, scope: !15490)
!15496 = !DILocation(line: 153, column: 1, scope: !15490)
!15497 = distinct !DISubprogram(name: "z_pend_thread", scope: !2473, file: !2473, line: 770, type: !15498, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15504)
!15498 = !DISubroutineType(types: !15499)
!15499 = !{null, !2365, !2396, !15500}
!15500 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !686, line: 67, baseType: !15501)
!15501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 65, size: 64, elements: !15502)
!15502 = !{!15503}
!15503 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15501, file: !686, line: 66, baseType: !685, size: 64)
!15504 = !{!15505, !15506, !15507, !15508, !15510}
!15505 = !DILocalVariable(name: "thread", arg: 1, scope: !15497, file: !2473, line: 770, type: !2365)
!15506 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15497, file: !2473, line: 770, type: !2396)
!15507 = !DILocalVariable(name: "timeout", arg: 3, scope: !15497, file: !2473, line: 771, type: !15500)
!15508 = !DILocalVariable(name: "__i", scope: !15509, file: !2473, line: 774, type: !14604)
!15509 = distinct !DILexicalBlock(scope: !15497, file: !2473, line: 774, column: 2)
!15510 = !DILocalVariable(name: "__key", scope: !15509, file: !2473, line: 774, type: !14604)
!15511 = !DILocation(line: 0, scope: !15497)
!15512 = !DILocation(line: 773, column: 2, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15514, file: !2473, line: 773, column: 2)
!15514 = distinct !DILexicalBlock(scope: !15497, file: !2473, line: 773, column: 2)
!15515 = !DILocation(line: 773, column: 2, scope: !15514)
!15516 = !DILocation(line: 773, column: 2, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15513, file: !2473, line: 773, column: 2)
!15518 = !DILocation(line: 0, scope: !15509)
!15519 = !DILocation(line: 0, scope: !14612, inlinedAt: !15520)
!15520 = distinct !DILocation(line: 774, column: 2, scope: !15509)
!15521 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15522)
!15522 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15520)
!15523 = !DILocation(line: 0, scope: !14621, inlinedAt: !15522)
!15524 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15520)
!15525 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15520)
!15526 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15520)
!15527 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15520)
!15528 = !DILocation(line: 775, column: 3, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !2473, line: 774, column: 26)
!15530 = distinct !DILexicalBlock(scope: !15509, file: !2473, line: 774, column: 2)
!15531 = !DILocation(line: 0, scope: !14646, inlinedAt: !15532)
!15532 = distinct !DILocation(line: 774, column: 2, scope: !15530)
!15533 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15532)
!15534 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15532)
!15535 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15532)
!15536 = !DILocation(line: 0, scope: !14660, inlinedAt: !15537)
!15537 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15532)
!15538 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15537)
!15539 = !DILocation(line: 777, column: 1, scope: !15497)
!15540 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2473, file: !2473, line: 79, type: !14753, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15541)
!15541 = !{!15542}
!15542 = !DILocalVariable(name: "thread", arg: 1, scope: !15540, file: !2473, line: 79, type: !2365)
!15543 = !DILocation(line: 0, scope: !15540)
!15544 = !DILocation(line: 81, column: 23, scope: !15540)
!15545 = !DILocation(line: 81, column: 36, scope: !15540)
!15546 = !DILocation(line: 81, column: 53, scope: !15540)
!15547 = !DILocation(line: 81, column: 2, scope: !15540)
!15548 = distinct !DISubprogram(name: "pend_locked", scope: !2473, file: !2473, line: 760, type: !15498, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15549)
!15549 = !{!15550, !15551, !15552}
!15550 = !DILocalVariable(name: "thread", arg: 1, scope: !15548, file: !2473, line: 760, type: !2365)
!15551 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15548, file: !2473, line: 760, type: !2396)
!15552 = !DILocalVariable(name: "timeout", arg: 3, scope: !15548, file: !2473, line: 761, type: !15500)
!15553 = !DILocation(line: 0, scope: !15548)
!15554 = !DILocation(line: 766, column: 2, scope: !15548)
!15555 = !DILocation(line: 767, column: 2, scope: !15548)
!15556 = !DILocation(line: 768, column: 1, scope: !15548)
!15557 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2473, file: !2473, line: 740, type: !15558, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15560)
!15558 = !DISubroutineType(types: !15559)
!15559 = !{null, !2365, !2396}
!15560 = !{!15561, !15562}
!15561 = !DILocalVariable(name: "thread", arg: 1, scope: !15557, file: !2473, line: 740, type: !2365)
!15562 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15557, file: !2473, line: 740, type: !2396)
!15563 = !DILocation(line: 0, scope: !15557)
!15564 = !DILocation(line: 742, column: 2, scope: !15557)
!15565 = !DILocation(line: 743, column: 2, scope: !15557)
!15566 = !DILocation(line: 747, column: 13, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15557, file: !2473, line: 747, column: 6)
!15568 = !DILocation(line: 747, column: 6, scope: !15557)
!15569 = !DILocation(line: 748, column: 16, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15567, file: !2473, line: 747, column: 22)
!15571 = !DILocation(line: 748, column: 26, scope: !15570)
!15572 = !DILocation(line: 749, column: 28, scope: !15570)
!15573 = !DILocation(line: 0, scope: !14835, inlinedAt: !15574)
!15574 = distinct !DILocation(line: 749, column: 3, scope: !15570)
!15575 = !DILocation(line: 186, column: 2, scope: !14845, inlinedAt: !15574)
!15576 = !DILocation(line: 186, column: 2, scope: !14846, inlinedAt: !15574)
!15577 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !15574)
!15578 = !DILocation(line: 188, column: 2, scope: !14851, inlinedAt: !15574)
!15579 = !DILocation(line: 188, column: 2, scope: !14853, inlinedAt: !15574)
!15580 = !DILocation(line: 0, scope: !14851, inlinedAt: !15574)
!15581 = !DILocation(line: 189, column: 7, scope: !14856, inlinedAt: !15574)
!15582 = !DILocation(line: 189, column: 35, scope: !14856, inlinedAt: !15574)
!15583 = !DILocation(line: 189, column: 7, scope: !14857, inlinedAt: !15574)
!15584 = !DILocation(line: 191, column: 21, scope: !14861, inlinedAt: !15574)
!15585 = !DILocation(line: 190, column: 4, scope: !14861, inlinedAt: !15574)
!15586 = !DILocation(line: 192, column: 4, scope: !14861, inlinedAt: !15574)
!15587 = distinct !{!15587, !15578, !15588}
!15588 = !DILocation(line: 194, column: 2, scope: !14851, inlinedAt: !15574)
!15589 = !DILocation(line: 196, column: 37, scope: !14835, inlinedAt: !15574)
!15590 = !DILocation(line: 196, column: 2, scope: !14835, inlinedAt: !15574)
!15591 = !DILocation(line: 197, column: 1, scope: !14835, inlinedAt: !15574)
!15592 = !DILocation(line: 751, column: 1, scope: !15557)
!15593 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2473, file: !2473, line: 753, type: !15594, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15596)
!15594 = !DISubroutineType(types: !15595)
!15595 = !{null, !2365, !15500}
!15596 = !{!15597, !15598}
!15597 = !DILocalVariable(name: "thread", arg: 1, scope: !15593, file: !2473, line: 753, type: !2365)
!15598 = !DILocalVariable(name: "timeout", arg: 2, scope: !15593, file: !2473, line: 753, type: !15500)
!15599 = !DILocation(line: 0, scope: !15593)
!15600 = !DILocation(line: 755, column: 7, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15593, file: !2473, line: 755, column: 6)
!15602 = !DILocation(line: 755, column: 6, scope: !15593)
!15603 = !DILocation(line: 756, column: 3, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15601, file: !2473, line: 755, column: 41)
!15605 = !DILocation(line: 757, column: 2, scope: !15604)
!15606 = !DILocation(line: 758, column: 1, scope: !15593)
!15607 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14201, file: !14201, line: 47, type: !15594, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15608)
!15608 = !{!15609, !15610}
!15609 = !DILocalVariable(name: "thread", arg: 1, scope: !15607, file: !14201, line: 47, type: !2365)
!15610 = !DILocalVariable(name: "ticks", arg: 2, scope: !15607, file: !14201, line: 47, type: !15500)
!15611 = !DILocation(line: 0, scope: !15607)
!15612 = !DILocation(line: 49, column: 30, scope: !15607)
!15613 = !DILocation(line: 49, column: 2, scope: !15607)
!15614 = !DILocation(line: 50, column: 1, scope: !15607)
!15615 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2473, file: !2473, line: 795, type: !2422, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15616)
!15616 = !{!15617, !15618, !15619, !15621, !15622}
!15617 = !DILocalVariable(name: "timeout", arg: 1, scope: !15615, file: !2473, line: 795, type: !2424)
!15618 = !DILocalVariable(name: "thread", scope: !15615, file: !2473, line: 797, type: !2365)
!15619 = !DILocalVariable(name: "__i", scope: !15620, file: !2473, line: 800, type: !14604)
!15620 = distinct !DILexicalBlock(scope: !15615, file: !2473, line: 800, column: 2)
!15621 = !DILocalVariable(name: "__key", scope: !15620, file: !2473, line: 800, type: !14604)
!15622 = !DILocalVariable(name: "killed", scope: !15623, file: !2473, line: 801, type: !145)
!15623 = distinct !DILexicalBlock(scope: !15624, file: !2473, line: 800, column: 26)
!15624 = distinct !DILexicalBlock(scope: !15620, file: !2473, line: 800, column: 2)
!15625 = !DILocation(line: 0, scope: !15615)
!15626 = !DILocation(line: 797, column: 28, scope: !15615)
!15627 = !DILocation(line: 0, scope: !15620)
!15628 = !DILocation(line: 0, scope: !14612, inlinedAt: !15629)
!15629 = distinct !DILocation(line: 800, column: 2, scope: !15620)
!15630 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15631)
!15631 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15629)
!15632 = !DILocation(line: 0, scope: !14621, inlinedAt: !15631)
!15633 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15629)
!15634 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15629)
!15635 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15629)
!15636 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15629)
!15637 = !DILocation(line: 801, column: 27, scope: !15623)
!15638 = !DILocation(line: 801, column: 32, scope: !15623)
!15639 = !DILocation(line: 801, column: 61, scope: !15623)
!15640 = !DILocation(line: 0, scope: !15623)
!15641 = !DILocation(line: 804, column: 7, scope: !15623)
!15642 = !DILocation(line: 805, column: 21, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15644, file: !2473, line: 805, column: 8)
!15644 = distinct !DILexicalBlock(scope: !15645, file: !2473, line: 804, column: 16)
!15645 = distinct !DILexicalBlock(scope: !15623, file: !2473, line: 804, column: 7)
!15646 = !DILocation(line: 805, column: 31, scope: !15643)
!15647 = !DILocation(line: 805, column: 8, scope: !15644)
!15648 = !DILocation(line: 806, column: 5, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !15643, file: !2473, line: 805, column: 40)
!15650 = !DILocation(line: 807, column: 4, scope: !15649)
!15651 = !DILocation(line: 808, column: 4, scope: !15644)
!15652 = !DILocation(line: 809, column: 4, scope: !15644)
!15653 = !DILocation(line: 810, column: 4, scope: !15644)
!15654 = !DILocation(line: 811, column: 3, scope: !15644)
!15655 = !DILocation(line: 0, scope: !14646, inlinedAt: !15656)
!15656 = distinct !DILocation(line: 800, column: 2, scope: !15624)
!15657 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15656)
!15658 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15656)
!15659 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15656)
!15660 = !DILocation(line: 0, scope: !14660, inlinedAt: !15661)
!15661 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15656)
!15662 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15661)
!15663 = !DILocation(line: 813, column: 1, scope: !15615)
!15664 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2473, file: !2473, line: 779, type: !14570, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15665)
!15665 = !{!15666}
!15666 = !DILocalVariable(name: "thread", arg: 1, scope: !15664, file: !2473, line: 779, type: !2365)
!15667 = !DILocation(line: 0, scope: !15664)
!15668 = !DILocation(line: 781, column: 21, scope: !15664)
!15669 = !DILocation(line: 781, column: 2, scope: !15664)
!15670 = !DILocation(line: 782, column: 2, scope: !15664)
!15671 = !DILocation(line: 783, column: 15, scope: !15664)
!15672 = !DILocation(line: 783, column: 25, scope: !15664)
!15673 = !DILocation(line: 784, column: 1, scope: !15664)
!15674 = distinct !DISubprogram(name: "pended_on_thread", scope: !2473, file: !2473, line: 724, type: !15675, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15677)
!15675 = !DISubroutineType(types: !15676)
!15676 = !{!2396, !2365}
!15677 = !{!15678}
!15678 = !DILocalVariable(name: "thread", arg: 1, scope: !15674, file: !2473, line: 724, type: !2365)
!15679 = !DILocation(line: 0, scope: !15674)
!15680 = !DILocation(line: 726, column: 2, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15682, file: !2473, line: 726, column: 2)
!15682 = distinct !DILexicalBlock(scope: !15674, file: !2473, line: 726, column: 2)
!15683 = !DILocation(line: 726, column: 2, scope: !15682)
!15684 = !DILocation(line: 726, column: 2, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15681, file: !2473, line: 726, column: 2)
!15686 = !DILocation(line: 728, column: 2, scope: !15674)
!15687 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13772, file: !13772, line: 165, type: !14570, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15688)
!15688 = !{!15689}
!15689 = !DILocalVariable(name: "thread", arg: 1, scope: !15687, file: !13772, line: 165, type: !2365)
!15690 = !DILocation(line: 0, scope: !15687)
!15691 = !DILocation(line: 167, column: 15, scope: !15687)
!15692 = !DILocation(line: 167, column: 28, scope: !15687)
!15693 = !DILocation(line: 168, column: 1, scope: !15687)
!15694 = distinct !DISubprogram(name: "unready_thread", scope: !2473, file: !2473, line: 731, type: !14570, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15695)
!15695 = !{!15696}
!15696 = !DILocalVariable(name: "thread", arg: 1, scope: !15694, file: !2473, line: 731, type: !2365)
!15697 = !DILocation(line: 0, scope: !15694)
!15698 = !DILocation(line: 733, column: 6, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15694, file: !2473, line: 733, column: 6)
!15700 = !DILocation(line: 733, column: 6, scope: !15694)
!15701 = !DILocation(line: 0, scope: !14804, inlinedAt: !15702)
!15702 = distinct !DILocation(line: 734, column: 3, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15699, file: !2473, line: 733, column: 34)
!15704 = !DILocation(line: 266, column: 15, scope: !14804, inlinedAt: !15702)
!15705 = !DILocation(line: 266, column: 28, scope: !14804, inlinedAt: !15702)
!15706 = !DILocation(line: 0, scope: !14812, inlinedAt: !15707)
!15707 = distinct !DILocation(line: 268, column: 3, scope: !14816, inlinedAt: !15702)
!15708 = !DILocation(line: 234, column: 2, scope: !14812, inlinedAt: !15707)
!15709 = !DILocation(line: 735, column: 2, scope: !15703)
!15710 = !DILocation(line: 736, column: 25, scope: !15694)
!15711 = !DILocation(line: 736, column: 22, scope: !15694)
!15712 = !DILocation(line: 736, column: 2, scope: !15694)
!15713 = !DILocation(line: 737, column: 1, scope: !15694)
!15714 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13772, file: !13772, line: 160, type: !14570, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15715)
!15715 = !{!15716}
!15716 = !DILocalVariable(name: "thread", arg: 1, scope: !15714, file: !13772, line: 160, type: !2365)
!15717 = !DILocation(line: 0, scope: !15714)
!15718 = !DILocation(line: 162, column: 15, scope: !15714)
!15719 = !DILocation(line: 162, column: 28, scope: !15714)
!15720 = !DILocation(line: 163, column: 1, scope: !15714)
!15721 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2473, file: !2473, line: 786, type: !14570, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15722)
!15722 = !{!15723, !15724, !15726}
!15723 = !DILocalVariable(name: "thread", arg: 1, scope: !15721, file: !2473, line: 786, type: !2365)
!15724 = !DILocalVariable(name: "__i", scope: !15725, file: !2473, line: 788, type: !14604)
!15725 = distinct !DILexicalBlock(scope: !15721, file: !2473, line: 788, column: 2)
!15726 = !DILocalVariable(name: "__key", scope: !15725, file: !2473, line: 788, type: !14604)
!15727 = !DILocation(line: 0, scope: !15721)
!15728 = !DILocation(line: 0, scope: !15725)
!15729 = !DILocation(line: 0, scope: !14612, inlinedAt: !15730)
!15730 = distinct !DILocation(line: 788, column: 2, scope: !15725)
!15731 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15732)
!15732 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15730)
!15733 = !DILocation(line: 0, scope: !14621, inlinedAt: !15732)
!15734 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15730)
!15735 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15730)
!15736 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15730)
!15737 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15730)
!15738 = !DILocation(line: 789, column: 3, scope: !15739)
!15739 = distinct !DILexicalBlock(scope: !15740, file: !2473, line: 788, column: 26)
!15740 = distinct !DILexicalBlock(scope: !15725, file: !2473, line: 788, column: 2)
!15741 = !DILocation(line: 0, scope: !14646, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 788, column: 2, scope: !15740)
!15743 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15742)
!15744 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15742)
!15745 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15742)
!15746 = !DILocation(line: 0, scope: !14660, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15742)
!15748 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15747)
!15749 = !DILocation(line: 791, column: 1, scope: !15721)
!15750 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2473, file: !2473, line: 816, type: !15751, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15753)
!15751 = !DISubroutineType(types: !15752)
!15752 = !{!107, !152, !2396, !15500}
!15753 = !{!15754, !15755, !15756, !15757, !15758, !15760}
!15754 = !DILocalVariable(name: "key", arg: 1, scope: !15750, file: !2473, line: 816, type: !152)
!15755 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15750, file: !2473, line: 816, type: !2396)
!15756 = !DILocalVariable(name: "timeout", arg: 3, scope: !15750, file: !2473, line: 816, type: !15500)
!15757 = !DILocalVariable(name: "ret", scope: !15750, file: !2473, line: 828, type: !107)
!15758 = !DILocalVariable(name: "__i", scope: !15759, file: !2473, line: 829, type: !14604)
!15759 = distinct !DILexicalBlock(scope: !15750, file: !2473, line: 829, column: 2)
!15760 = !DILocalVariable(name: "__key", scope: !15759, file: !2473, line: 829, type: !14604)
!15761 = !DILocation(line: 0, scope: !15750)
!15762 = !DILocation(line: 823, column: 14, scope: !15750)
!15763 = !DILocation(line: 823, column: 2, scope: !15750)
!15764 = !DILocation(line: 826, column: 20, scope: !15750)
!15765 = !DILocation(line: 826, column: 18, scope: !15750)
!15766 = !DILocation(line: 828, column: 12, scope: !15750)
!15767 = !DILocation(line: 0, scope: !15759)
!15768 = !DILocation(line: 0, scope: !14612, inlinedAt: !15769)
!15769 = distinct !DILocation(line: 829, column: 2, scope: !15759)
!15770 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15771)
!15771 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15769)
!15772 = !DILocation(line: 0, scope: !14621, inlinedAt: !15771)
!15773 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15769)
!15774 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15769)
!15775 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15769)
!15776 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15769)
!15777 = !DILocation(line: 830, column: 7, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15779, file: !2473, line: 830, column: 7)
!15779 = distinct !DILexicalBlock(scope: !15780, file: !2473, line: 829, column: 26)
!15780 = distinct !DILexicalBlock(scope: !15759, file: !2473, line: 829, column: 2)
!15781 = !DILocation(line: 830, column: 26, scope: !15778)
!15782 = !DILocation(line: 830, column: 23, scope: !15778)
!15783 = !DILocation(line: 830, column: 7, scope: !15779)
!15784 = !DILocation(line: 831, column: 20, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15778, file: !2473, line: 830, column: 36)
!15786 = !DILocation(line: 832, column: 3, scope: !15785)
!15787 = !DILocation(line: 0, scope: !14646, inlinedAt: !15788)
!15788 = distinct !DILocation(line: 829, column: 2, scope: !15780)
!15789 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15788)
!15790 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15788)
!15791 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15788)
!15792 = !DILocation(line: 0, scope: !14660, inlinedAt: !15793)
!15793 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15788)
!15794 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15793)
!15795 = !DILocation(line: 834, column: 2, scope: !15750)
!15796 = distinct !DISubprogram(name: "z_pend_curr", scope: !2473, file: !2473, line: 840, type: !15797, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15799)
!15797 = !DISubroutineType(types: !15798)
!15798 = !{!107, !14615, !14604, !2396, !15500}
!15799 = !{!15800, !15801, !15802, !15803}
!15800 = !DILocalVariable(name: "lock", arg: 1, scope: !15796, file: !2473, line: 840, type: !14615)
!15801 = !DILocalVariable(name: "key", arg: 2, scope: !15796, file: !2473, line: 840, type: !14604)
!15802 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15796, file: !2473, line: 841, type: !2396)
!15803 = !DILocalVariable(name: "timeout", arg: 4, scope: !15796, file: !2473, line: 841, type: !15500)
!15804 = !DILocation(line: 0, scope: !15796)
!15805 = !DILocation(line: 844, column: 20, scope: !15796)
!15806 = !DILocation(line: 844, column: 18, scope: !15796)
!15807 = !DILocation(line: 846, column: 2, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15809, file: !2473, line: 846, column: 2)
!15809 = distinct !DILexicalBlock(scope: !15796, file: !2473, line: 846, column: 2)
!15810 = !DILocation(line: 846, column: 2, scope: !15809)
!15811 = !DILocation(line: 846, column: 2, scope: !15812)
!15812 = distinct !DILexicalBlock(scope: !15808, file: !2473, line: 846, column: 2)
!15813 = !DILocation(line: 0, scope: !14612, inlinedAt: !15814)
!15814 = distinct !DILocation(line: 856, column: 9, scope: !15796)
!15815 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15814)
!15817 = !DILocation(line: 0, scope: !14621, inlinedAt: !15816)
!15818 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15814)
!15819 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15814)
!15820 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15814)
!15821 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15814)
!15822 = !DILocation(line: 857, column: 14, scope: !15796)
!15823 = !DILocation(line: 857, column: 2, scope: !15796)
!15824 = !DILocation(line: 0, scope: !15299, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 858, column: 2, scope: !15796)
!15826 = !DILocation(line: 225, column: 2, scope: !15306, inlinedAt: !15825)
!15827 = !DILocation(line: 225, column: 2, scope: !15307, inlinedAt: !15825)
!15828 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !15825)
!15829 = !DILocation(line: 0, scope: !15290, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 859, column: 9, scope: !15796)
!15831 = !DILocation(line: 0, scope: !15299, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 195, column: 2, scope: !15290, inlinedAt: !15830)
!15833 = !DILocation(line: 225, column: 2, scope: !15306, inlinedAt: !15832)
!15834 = !DILocation(line: 225, column: 2, scope: !15307, inlinedAt: !15832)
!15835 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !15832)
!15836 = !DILocation(line: 196, column: 9, scope: !15290, inlinedAt: !15830)
!15837 = !DILocation(line: 859, column: 2, scope: !15796)
!15838 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2473, file: !2473, line: 862, type: !15839, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15841)
!15839 = !DISubroutineType(types: !15840)
!15840 = !{!2365, !2396}
!15841 = !{!15842, !15843, !15844, !15846}
!15842 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15838, file: !2473, line: 862, type: !2396)
!15843 = !DILocalVariable(name: "thread", scope: !15838, file: !2473, line: 864, type: !2365)
!15844 = !DILocalVariable(name: "__i", scope: !15845, file: !2473, line: 866, type: !14604)
!15845 = distinct !DILexicalBlock(scope: !15838, file: !2473, line: 866, column: 2)
!15846 = !DILocalVariable(name: "__key", scope: !15845, file: !2473, line: 866, type: !14604)
!15847 = !DILocation(line: 0, scope: !15838)
!15848 = !DILocation(line: 0, scope: !15845)
!15849 = !DILocation(line: 0, scope: !14612, inlinedAt: !15850)
!15850 = distinct !DILocation(line: 866, column: 2, scope: !15845)
!15851 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15852)
!15852 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15850)
!15853 = !DILocation(line: 0, scope: !14621, inlinedAt: !15852)
!15854 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15850)
!15855 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15850)
!15856 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15850)
!15857 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15850)
!15858 = !DILocation(line: 867, column: 12, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15860, file: !2473, line: 866, column: 26)
!15860 = distinct !DILexicalBlock(scope: !15845, file: !2473, line: 866, column: 2)
!15861 = !DILocation(line: 869, column: 14, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15859, file: !2473, line: 869, column: 7)
!15863 = !DILocation(line: 869, column: 7, scope: !15859)
!15864 = !DILocation(line: 870, column: 4, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15862, file: !2473, line: 869, column: 23)
!15866 = !DILocation(line: 871, column: 3, scope: !15865)
!15867 = !DILocation(line: 0, scope: !14646, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 866, column: 2, scope: !15860)
!15869 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15868)
!15870 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15868)
!15871 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15868)
!15872 = !DILocation(line: 0, scope: !14660, inlinedAt: !15873)
!15873 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15868)
!15874 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15873)
!15875 = !DILocation(line: 874, column: 2, scope: !15838)
!15876 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2473, file: !2473, line: 877, type: !15839, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15877)
!15877 = !{!15878, !15879, !15880, !15882}
!15878 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15876, file: !2473, line: 877, type: !2396)
!15879 = !DILocalVariable(name: "thread", scope: !15876, file: !2473, line: 879, type: !2365)
!15880 = !DILocalVariable(name: "__i", scope: !15881, file: !2473, line: 881, type: !14604)
!15881 = distinct !DILexicalBlock(scope: !15876, file: !2473, line: 881, column: 2)
!15882 = !DILocalVariable(name: "__key", scope: !15881, file: !2473, line: 881, type: !14604)
!15883 = !DILocation(line: 0, scope: !15876)
!15884 = !DILocation(line: 0, scope: !15881)
!15885 = !DILocation(line: 0, scope: !14612, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 881, column: 2, scope: !15881)
!15887 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15886)
!15889 = !DILocation(line: 0, scope: !14621, inlinedAt: !15888)
!15890 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15886)
!15891 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15886)
!15892 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15886)
!15893 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15886)
!15894 = !DILocation(line: 882, column: 12, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15896, file: !2473, line: 881, column: 26)
!15896 = distinct !DILexicalBlock(scope: !15881, file: !2473, line: 881, column: 2)
!15897 = !DILocation(line: 884, column: 14, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15895, file: !2473, line: 884, column: 7)
!15899 = !DILocation(line: 884, column: 7, scope: !15895)
!15900 = !DILocation(line: 885, column: 4, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15898, file: !2473, line: 884, column: 23)
!15902 = !DILocation(line: 886, column: 10, scope: !15901)
!15903 = !DILocation(line: 887, column: 3, scope: !15901)
!15904 = !DILocation(line: 0, scope: !14646, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 881, column: 2, scope: !15896)
!15906 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15905)
!15907 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15905)
!15908 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15905)
!15909 = !DILocation(line: 0, scope: !14660, inlinedAt: !15910)
!15910 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15905)
!15911 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15910)
!15912 = !DILocation(line: 890, column: 2, scope: !15876)
!15913 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2473, file: !2473, line: 893, type: !14570, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15914)
!15914 = !{!15915}
!15915 = !DILocalVariable(name: "thread", arg: 1, scope: !15913, file: !2473, line: 893, type: !2365)
!15916 = !DILocation(line: 0, scope: !15913)
!15917 = !DILocation(line: 0, scope: !15721, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 895, column: 2, scope: !15913)
!15919 = !DILocation(line: 0, scope: !15725, inlinedAt: !15918)
!15920 = !DILocation(line: 0, scope: !14612, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 788, column: 2, scope: !15725, inlinedAt: !15918)
!15922 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15921)
!15924 = !DILocation(line: 0, scope: !14621, inlinedAt: !15923)
!15925 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15921)
!15926 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15921)
!15927 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15921)
!15928 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15921)
!15929 = !DILocation(line: 789, column: 3, scope: !15739, inlinedAt: !15918)
!15930 = !DILocation(line: 0, scope: !14646, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 788, column: 2, scope: !15740, inlinedAt: !15918)
!15932 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !15931)
!15933 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !15931)
!15934 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15931)
!15935 = !DILocation(line: 0, scope: !14660, inlinedAt: !15936)
!15936 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !15931)
!15937 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !15936)
!15938 = !DILocation(line: 896, column: 8, scope: !15913)
!15939 = !DILocation(line: 897, column: 1, scope: !15913)
!15940 = distinct !DISubprogram(name: "z_set_prio", scope: !2473, file: !2473, line: 902, type: !14973, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15941)
!15941 = !{!15942, !15943, !15944, !15945, !15947}
!15942 = !DILocalVariable(name: "thread", arg: 1, scope: !15940, file: !2473, line: 902, type: !2365)
!15943 = !DILocalVariable(name: "prio", arg: 2, scope: !15940, file: !2473, line: 902, type: !107)
!15944 = !DILocalVariable(name: "need_sched", scope: !15940, file: !2473, line: 904, type: !145)
!15945 = !DILocalVariable(name: "__i", scope: !15946, file: !2473, line: 906, type: !14604)
!15946 = distinct !DILexicalBlock(scope: !15940, file: !2473, line: 906, column: 2)
!15947 = !DILocalVariable(name: "__key", scope: !15946, file: !2473, line: 906, type: !14604)
!15948 = !DILocation(line: 0, scope: !15940)
!15949 = !DILocation(line: 0, scope: !15946)
!15950 = !DILocation(line: 0, scope: !14612, inlinedAt: !15951)
!15951 = distinct !DILocation(line: 906, column: 2, scope: !15946)
!15952 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !15953)
!15953 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !15951)
!15954 = !DILocation(line: 0, scope: !14621, inlinedAt: !15953)
!15955 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !15951)
!15956 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !15951)
!15957 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15951)
!15958 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !15951)
!15959 = !DILocation(line: 907, column: 16, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15961, file: !2473, line: 906, column: 26)
!15961 = distinct !DILexicalBlock(scope: !15946, file: !2473, line: 906, column: 2)
!15962 = !DILocation(line: 909, column: 7, scope: !15960)
!15963 = !DILocation(line: 0, scope: !14804, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 912, column: 5, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15966, file: !2473, line: 911, column: 63)
!15966 = distinct !DILexicalBlock(scope: !15967, file: !2473, line: 911, column: 8)
!15967 = distinct !DILexicalBlock(scope: !15968, file: !2473, line: 909, column: 19)
!15968 = distinct !DILexicalBlock(scope: !15960, file: !2473, line: 909, column: 7)
!15969 = !DILocation(line: 266, column: 28, scope: !14804, inlinedAt: !15964)
!15970 = !DILocation(line: 0, scope: !14812, inlinedAt: !15971)
!15971 = distinct !DILocation(line: 268, column: 3, scope: !14816, inlinedAt: !15964)
!15972 = !DILocation(line: 234, column: 2, scope: !14812, inlinedAt: !15971)
!15973 = !DILocation(line: 913, column: 23, scope: !15965)
!15974 = !DILocation(line: 0, scope: !14821, inlinedAt: !15975)
!15975 = distinct !DILocation(line: 914, column: 5, scope: !15965)
!15976 = !DILocation(line: 252, column: 28, scope: !14821, inlinedAt: !15975)
!15977 = !DILocation(line: 0, scope: !14828, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 254, column: 3, scope: !14832, inlinedAt: !15975)
!15979 = !DILocation(line: 0, scope: !14835, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 229, column: 2, scope: !14828, inlinedAt: !15978)
!15981 = !DILocation(line: 186, column: 2, scope: !14845, inlinedAt: !15980)
!15982 = !DILocation(line: 186, column: 2, scope: !14846, inlinedAt: !15980)
!15983 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !15980)
!15984 = !DILocation(line: 188, column: 2, scope: !14851, inlinedAt: !15980)
!15985 = !DILocation(line: 188, column: 2, scope: !14853, inlinedAt: !15980)
!15986 = !DILocation(line: 0, scope: !14851, inlinedAt: !15980)
!15987 = !DILocation(line: 189, column: 7, scope: !14856, inlinedAt: !15980)
!15988 = !DILocation(line: 189, column: 35, scope: !14856, inlinedAt: !15980)
!15989 = !DILocation(line: 189, column: 7, scope: !14857, inlinedAt: !15980)
!15990 = !DILocation(line: 190, column: 4, scope: !14861, inlinedAt: !15980)
!15991 = !DILocation(line: 192, column: 4, scope: !14861, inlinedAt: !15980)
!15992 = distinct !{!15992, !15984, !15993}
!15993 = !DILocation(line: 194, column: 2, scope: !14851, inlinedAt: !15980)
!15994 = !DILocation(line: 196, column: 2, scope: !14835, inlinedAt: !15980)
!15995 = !DILocation(line: 197, column: 1, scope: !14835, inlinedAt: !15980)
!15996 = !DILocation(line: 918, column: 4, scope: !15967)
!15997 = !DILocation(line: 919, column: 3, scope: !15967)
!15998 = !DILocation(line: 920, column: 22, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15968, file: !2473, line: 919, column: 10)
!16000 = !DILocation(line: 0, scope: !14646, inlinedAt: !16001)
!16001 = distinct !DILocation(line: 906, column: 2, scope: !15961)
!16002 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !16001)
!16003 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !16001)
!16004 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16001)
!16005 = !DILocation(line: 0, scope: !14660, inlinedAt: !16006)
!16006 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !16001)
!16007 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !16006)
!16008 = !DILocation(line: 926, column: 2, scope: !15940)
!16009 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2473, file: !2473, line: 929, type: !16010, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16012)
!16010 = !DISubroutineType(types: !16011)
!16011 = !{null, !2365, !107}
!16012 = !{!16013, !16014, !16015}
!16013 = !DILocalVariable(name: "thread", arg: 1, scope: !16009, file: !2473, line: 929, type: !2365)
!16014 = !DILocalVariable(name: "prio", arg: 2, scope: !16009, file: !2473, line: 929, type: !107)
!16015 = !DILocalVariable(name: "need_sched", scope: !16009, file: !2473, line: 931, type: !145)
!16016 = !DILocation(line: 0, scope: !16009)
!16017 = !DILocation(line: 931, column: 20, scope: !16009)
!16018 = !DILocation(line: 935, column: 17, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16009, file: !2473, line: 935, column: 6)
!16020 = !DILocation(line: 935, column: 20, scope: !16019)
!16021 = !DILocation(line: 935, column: 35, scope: !16019)
!16022 = !DILocation(line: 935, column: 48, scope: !16019)
!16023 = !DILocation(line: 935, column: 6, scope: !16009)
!16024 = !DILocation(line: 936, column: 3, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !16019, file: !2473, line: 935, column: 55)
!16026 = !DILocation(line: 937, column: 2, scope: !16025)
!16027 = !DILocation(line: 938, column: 1, scope: !16009)
!16028 = distinct !DISubprogram(name: "k_sched_lock", scope: !2473, file: !2473, line: 987, type: !3055, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16029)
!16029 = !{!16030, !16032}
!16030 = !DILocalVariable(name: "__i", scope: !16031, file: !2473, line: 989, type: !14604)
!16031 = distinct !DILexicalBlock(scope: !16028, file: !2473, line: 989, column: 2)
!16032 = !DILocalVariable(name: "__key", scope: !16031, file: !2473, line: 989, type: !14604)
!16033 = !DILocation(line: 0, scope: !16031)
!16034 = !DILocation(line: 0, scope: !14612, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 989, column: 2, scope: !16031)
!16036 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !16035)
!16038 = !DILocation(line: 0, scope: !14621, inlinedAt: !16037)
!16039 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !16035)
!16040 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !16035)
!16041 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16035)
!16042 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !16035)
!16043 = !DILocation(line: 992, column: 3, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16045, file: !2473, line: 989, column: 26)
!16045 = distinct !DILexicalBlock(scope: !16031, file: !2473, line: 989, column: 2)
!16046 = !DILocation(line: 0, scope: !14646, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 989, column: 2, scope: !16045)
!16048 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !16047)
!16049 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !16047)
!16050 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16047)
!16051 = !DILocation(line: 0, scope: !14660, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !16047)
!16053 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !16052)
!16054 = !DILocation(line: 994, column: 1, scope: !16028)
!16055 = distinct !DISubprogram(name: "z_sched_lock", scope: !13772, file: !13772, line: 251, type: !3055, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16056 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16057)
!16057 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16058)
!16058 = distinct !DILocation(line: 253, column: 2, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !16060, file: !13772, line: 253, column: 2)
!16060 = distinct !DILexicalBlock(scope: !16055, file: !13772, line: 253, column: 2)
!16061 = !DILocation(line: 0, scope: !15339, inlinedAt: !16057)
!16062 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16058)
!16063 = !DILocation(line: 253, column: 2, scope: !16060)
!16064 = !DILocation(line: 253, column: 2, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16059, file: !13772, line: 253, column: 2)
!16066 = !DILocation(line: 254, column: 2, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16068, file: !13772, line: 254, column: 2)
!16068 = distinct !DILexicalBlock(scope: !16055, file: !13772, line: 254, column: 2)
!16069 = !DILocation(line: 254, column: 2, scope: !16068)
!16070 = !DILocation(line: 254, column: 2, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16067, file: !13772, line: 254, column: 2)
!16072 = !DILocation(line: 256, column: 2, scope: !16055)
!16073 = !DILocation(line: 258, column: 2, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16055, file: !13772, line: 258, column: 2)
!16075 = !{i64 2152351940}
!16076 = !DILocation(line: 259, column: 1, scope: !16055)
!16077 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2473, file: !2473, line: 996, type: !3055, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16078)
!16078 = !{!16079, !16081}
!16079 = !DILocalVariable(name: "__i", scope: !16080, file: !2473, line: 998, type: !14604)
!16080 = distinct !DILexicalBlock(scope: !16077, file: !2473, line: 998, column: 2)
!16081 = !DILocalVariable(name: "__key", scope: !16080, file: !2473, line: 998, type: !14604)
!16082 = !DILocation(line: 0, scope: !16080)
!16083 = !DILocation(line: 0, scope: !14612, inlinedAt: !16084)
!16084 = distinct !DILocation(line: 998, column: 2, scope: !16080)
!16085 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !16084)
!16087 = !DILocation(line: 0, scope: !14621, inlinedAt: !16086)
!16088 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !16084)
!16089 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !16084)
!16090 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16084)
!16091 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !16084)
!16092 = !DILocation(line: 999, column: 3, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16094, file: !2473, line: 999, column: 3)
!16094 = distinct !DILexicalBlock(scope: !16095, file: !2473, line: 999, column: 3)
!16095 = distinct !DILexicalBlock(scope: !16096, file: !2473, line: 998, column: 26)
!16096 = distinct !DILexicalBlock(scope: !16080, file: !2473, line: 998, column: 2)
!16097 = !DILocation(line: 999, column: 3, scope: !16094)
!16098 = !DILocation(line: 999, column: 3, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16093, file: !2473, line: 999, column: 3)
!16100 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16101)
!16101 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16102)
!16102 = distinct !DILocation(line: 1000, column: 3, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16104, file: !2473, line: 1000, column: 3)
!16104 = distinct !DILexicalBlock(scope: !16095, file: !2473, line: 1000, column: 3)
!16105 = !DILocation(line: 0, scope: !15339, inlinedAt: !16101)
!16106 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16102)
!16107 = !DILocation(line: 1000, column: 3, scope: !16104)
!16108 = !DILocation(line: 1000, column: 3, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16103, file: !2473, line: 1000, column: 3)
!16110 = !DILocation(line: 1002, column: 5, scope: !16095)
!16111 = !DILocation(line: 1002, column: 20, scope: !16095)
!16112 = !DILocation(line: 1002, column: 3, scope: !16095)
!16113 = !DILocation(line: 1003, column: 3, scope: !16095)
!16114 = !DILocation(line: 0, scope: !14646, inlinedAt: !16115)
!16115 = distinct !DILocation(line: 998, column: 2, scope: !16096)
!16116 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !16115)
!16117 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !16115)
!16118 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16115)
!16119 = !DILocation(line: 0, scope: !14660, inlinedAt: !16120)
!16120 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !16115)
!16121 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !16120)
!16122 = !DILocation(line: 1011, column: 2, scope: !16077)
!16123 = !DILocation(line: 1012, column: 1, scope: !16077)
!16124 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2473, file: !2473, line: 1014, type: !14961, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16125 = !DILocation(line: 1028, column: 25, scope: !16124)
!16126 = !DILocation(line: 1028, column: 2, scope: !16124)
!16127 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2473, file: !2473, line: 1155, type: !16128, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16130)
!16128 = !DISubroutineType(types: !16129)
!16129 = !{!145, !2394, !2394}
!16130 = !{!16131, !16132, !16133, !16134, !16135}
!16131 = !DILocalVariable(name: "a", arg: 1, scope: !16127, file: !2473, line: 1155, type: !2394)
!16132 = !DILocalVariable(name: "b", arg: 2, scope: !16127, file: !2473, line: 1155, type: !2394)
!16133 = !DILocalVariable(name: "thread_a", scope: !16127, file: !2473, line: 1157, type: !2365)
!16134 = !DILocalVariable(name: "thread_b", scope: !16127, file: !2473, line: 1157, type: !2365)
!16135 = !DILocalVariable(name: "cmp", scope: !16127, file: !2473, line: 1158, type: !984)
!16136 = !DILocation(line: 0, scope: !16127)
!16137 = !DILocation(line: 1160, column: 13, scope: !16127)
!16138 = !DILocation(line: 1161, column: 13, scope: !16127)
!16139 = !DILocation(line: 1163, column: 8, scope: !16127)
!16140 = !DILocation(line: 1165, column: 10, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !16127, file: !2473, line: 1165, column: 6)
!16142 = !DILocation(line: 1165, column: 6, scope: !16127)
!16143 = !DILocation(line: 1167, column: 17, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16141, file: !2473, line: 1167, column: 13)
!16145 = !DILocation(line: 1167, column: 13, scope: !16141)
!16146 = !DILocation(line: 1170, column: 25, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16144, file: !2473, line: 1169, column: 9)
!16148 = !DILocation(line: 1170, column: 52, scope: !16147)
!16149 = !DILocation(line: 1170, column: 35, scope: !16147)
!16150 = !DILocation(line: 1170, column: 3, scope: !16147)
!16151 = !DILocation(line: 0, scope: !16141)
!16152 = !DILocation(line: 1173, column: 1, scope: !16127)
!16153 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2473, file: !2473, line: 1175, type: !16154, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16169)
!16154 = !DISubroutineType(types: !16155)
!16155 = !{null, !16156, !2365}
!16156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16157, size: 32)
!16157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16158, line: 37, size: 128, elements: !16159)
!16158 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16159 = !{!16160, !16168}
!16160 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16157, file: !16158, line: 38, baseType: !16161, size: 96)
!16161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !348, line: 83, size: 96, elements: !16162)
!16162 = !{!16163, !16164, !16167}
!16163 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16161, file: !348, line: 84, baseType: !2394, size: 32)
!16164 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16161, file: !348, line: 85, baseType: !16165, size: 32, offset: 32)
!16165 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !348, line: 81, baseType: !16166)
!16166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16128, size: 32)
!16167 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16161, file: !348, line: 86, baseType: !107, size: 32, offset: 64)
!16168 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16157, file: !16158, line: 39, baseType: !107, size: 32, offset: 96)
!16169 = !{!16170, !16171, !16172, !16173, !16182}
!16170 = !DILocalVariable(name: "pq", arg: 1, scope: !16153, file: !2473, line: 1175, type: !16156)
!16171 = !DILocalVariable(name: "thread", arg: 2, scope: !16153, file: !2473, line: 1175, type: !2365)
!16172 = !DILocalVariable(name: "t", scope: !16153, file: !2473, line: 1177, type: !2365)
!16173 = !DILocalVariable(name: "__f", scope: !16174, file: !2473, line: 1190, type: !16177)
!16174 = distinct !DILexicalBlock(scope: !16175, file: !2473, line: 1190, column: 3)
!16175 = distinct !DILexicalBlock(scope: !16176, file: !2473, line: 1189, column: 27)
!16176 = distinct !DILexicalBlock(scope: !16153, file: !2473, line: 1189, column: 6)
!16177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !348, line: 155, size: 96, elements: !16178)
!16178 = !{!16179, !16180, !16181}
!16179 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16177, file: !348, line: 156, baseType: !2468, size: 32)
!16180 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16177, file: !348, line: 157, baseType: !194, size: 32, offset: 32)
!16181 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16177, file: !348, line: 158, baseType: !984, size: 32, offset: 64)
!16182 = !DILocalVariable(name: "n", scope: !16183, file: !2473, line: 1190, type: !2394)
!16183 = distinct !DILexicalBlock(scope: !16184, file: !2473, line: 1190, column: 3)
!16184 = distinct !DILexicalBlock(scope: !16174, file: !2473, line: 1190, column: 3)
!16185 = !DILocation(line: 0, scope: !16153)
!16186 = !DILocation(line: 1179, column: 2, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !2473, line: 1179, column: 2)
!16188 = distinct !DILexicalBlock(scope: !16153, file: !2473, line: 1179, column: 2)
!16189 = !DILocation(line: 1179, column: 2, scope: !16188)
!16190 = !DILocation(line: 1179, column: 2, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16187, file: !2473, line: 1179, column: 2)
!16192 = !DILocation(line: 1181, column: 31, scope: !16153)
!16193 = !DILocation(line: 1181, column: 45, scope: !16153)
!16194 = !DILocation(line: 1181, column: 15, scope: !16153)
!16195 = !DILocation(line: 1181, column: 25, scope: !16153)
!16196 = !DILocation(line: 1189, column: 11, scope: !16176)
!16197 = !DILocation(line: 1189, column: 7, scope: !16176)
!16198 = !DILocation(line: 1189, column: 6, scope: !16153)
!16199 = !DILocation(line: 1190, column: 3, scope: !16174)
!16200 = !DILocation(line: 1190, column: 3, scope: !16183)
!16201 = !DILocation(line: 0, scope: !16183)
!16202 = !DILocation(line: 1190, column: 3, scope: !16184)
!16203 = !DILocation(line: 1193, column: 2, scope: !16175)
!16204 = !DILocation(line: 1191, column: 42, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16184, file: !2473, line: 1190, column: 54)
!16206 = !DILocation(line: 1191, column: 12, scope: !16205)
!16207 = !DILocation(line: 1191, column: 22, scope: !16205)
!16208 = distinct !{!16208, !16199, !16209}
!16209 = !DILocation(line: 1192, column: 3, scope: !16174)
!16210 = !DILocation(line: 1195, column: 17, scope: !16153)
!16211 = !DILocation(line: 1195, column: 37, scope: !16153)
!16212 = !DILocation(line: 1195, column: 2, scope: !16153)
!16213 = !DILocation(line: 1196, column: 1, scope: !16153)
!16214 = !DISubprogram(name: "z_rb_foreach_next", scope: !348, file: !348, line: 176, type: !16215, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!16215 = !DISubroutineType(types: !16216)
!16216 = !{!2394, !16217, !16218}
!16217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16161, size: 32)
!16218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16177, size: 32)
!16219 = !DISubprogram(name: "rb_insert", scope: !348, file: !348, line: 105, type: !16220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!16220 = !DISubroutineType(types: !16221)
!16221 = !{null, !16217, !2394}
!16222 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2473, file: !2473, line: 1198, type: !16154, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16223)
!16223 = !{!16224, !16225}
!16224 = !DILocalVariable(name: "pq", arg: 1, scope: !16222, file: !2473, line: 1198, type: !16156)
!16225 = !DILocalVariable(name: "thread", arg: 2, scope: !16222, file: !2473, line: 1198, type: !2365)
!16226 = !DILocation(line: 0, scope: !16222)
!16227 = !DILocation(line: 1200, column: 2, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16229, file: !2473, line: 1200, column: 2)
!16229 = distinct !DILexicalBlock(scope: !16222, file: !2473, line: 1200, column: 2)
!16230 = !DILocation(line: 1200, column: 2, scope: !16229)
!16231 = !DILocation(line: 1200, column: 2, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16228, file: !2473, line: 1200, column: 2)
!16233 = !DILocation(line: 1202, column: 17, scope: !16222)
!16234 = !DILocation(line: 1202, column: 37, scope: !16222)
!16235 = !DILocation(line: 1202, column: 2, scope: !16222)
!16236 = !DILocation(line: 1204, column: 16, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16222, file: !2473, line: 1204, column: 6)
!16238 = !DILocation(line: 1204, column: 7, scope: !16237)
!16239 = !DILocation(line: 1204, column: 6, scope: !16222)
!16240 = !DILocation(line: 1205, column: 7, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16237, file: !2473, line: 1204, column: 22)
!16242 = !DILocation(line: 1205, column: 22, scope: !16241)
!16243 = !DILocation(line: 1206, column: 2, scope: !16241)
!16244 = !DILocation(line: 1207, column: 1, scope: !16222)
!16245 = !DISubprogram(name: "rb_remove", scope: !348, file: !348, line: 110, type: !16220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!16246 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2473, file: !2473, line: 1209, type: !16247, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16249)
!16247 = !DISubroutineType(types: !16248)
!16248 = !{!2365, !16156}
!16249 = !{!16250, !16251, !16252}
!16250 = !DILocalVariable(name: "pq", arg: 1, scope: !16246, file: !2473, line: 1209, type: !16156)
!16251 = !DILocalVariable(name: "thread", scope: !16246, file: !2473, line: 1211, type: !2365)
!16252 = !DILocalVariable(name: "n", scope: !16246, file: !2473, line: 1212, type: !2394)
!16253 = !DILocation(line: 0, scope: !16246)
!16254 = !DILocation(line: 1212, column: 37, scope: !16246)
!16255 = !DILocation(line: 1212, column: 21, scope: !16246)
!16256 = !DILocation(line: 1217, column: 2, scope: !16246)
!16257 = distinct !DISubprogram(name: "rb_get_min", scope: !348, file: !348, line: 115, type: !16258, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16260)
!16258 = !DISubroutineType(types: !16259)
!16259 = !{!2394, !16217}
!16260 = !{!16261}
!16261 = !DILocalVariable(name: "tree", arg: 1, scope: !16257, file: !348, line: 115, type: !16217)
!16262 = !DILocation(line: 0, scope: !16257)
!16263 = !DILocation(line: 117, column: 9, scope: !16257)
!16264 = !DILocation(line: 117, column: 2, scope: !16257)
!16265 = !DISubprogram(name: "z_rb_get_minmax", scope: !348, file: !348, line: 100, type: !16266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!16266 = !DISubroutineType(types: !16267)
!16267 = !{!2394, !16217, !195}
!16268 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2473, file: !2473, line: 1246, type: !16269, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16277)
!16269 = !DISubroutineType(types: !16270)
!16270 = !{!2365, !16271}
!16271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16272, size: 32)
!16272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16158, line: 53, size: 2080, elements: !16273)
!16273 = !{!16274, !16276}
!16274 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16272, file: !16158, line: 54, baseType: !16275, size: 2048)
!16275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2401, size: 2048, elements: !407)
!16276 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16272, file: !16158, line: 55, baseType: !32, size: 32, offset: 2048)
!16277 = !{!16278, !16279, !16280, !16281}
!16278 = !DILocalVariable(name: "pq", arg: 1, scope: !16268, file: !2473, line: 1246, type: !16271)
!16279 = !DILocalVariable(name: "thread", scope: !16268, file: !2473, line: 1252, type: !2365)
!16280 = !DILocalVariable(name: "l", scope: !16268, file: !2473, line: 1253, type: !14838)
!16281 = !DILocalVariable(name: "n", scope: !16268, file: !2473, line: 1254, type: !2469)
!16282 = !DILocation(line: 0, scope: !16268)
!16283 = !DILocation(line: 1248, column: 11, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16268, file: !2473, line: 1248, column: 6)
!16285 = !DILocation(line: 1248, column: 7, scope: !16284)
!16286 = !DILocation(line: 1248, column: 6, scope: !16268)
!16287 = !DILocation(line: 1253, column: 31, scope: !16268)
!16288 = !DILocation(line: 1253, column: 20, scope: !16268)
!16289 = !DILocation(line: 1254, column: 19, scope: !16268)
!16290 = !DILocation(line: 1260, column: 1, scope: !16268)
!16291 = distinct !DISubprogram(name: "z_unpend_all", scope: !2473, file: !2473, line: 1262, type: !16292, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16294)
!16292 = !DISubroutineType(types: !16293)
!16293 = !{!107, !2396}
!16294 = !{!16295, !16296, !16297}
!16295 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16291, file: !2473, line: 1262, type: !2396)
!16296 = !DILocalVariable(name: "need_sched", scope: !16291, file: !2473, line: 1264, type: !107)
!16297 = !DILocalVariable(name: "thread", scope: !16291, file: !2473, line: 1265, type: !2365)
!16298 = !DILocation(line: 0, scope: !16291)
!16299 = !DILocation(line: 1267, column: 19, scope: !16291)
!16300 = !DILocation(line: 1267, column: 41, scope: !16291)
!16301 = !DILocation(line: 1267, column: 2, scope: !16291)
!16302 = !DILocation(line: 1268, column: 3, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16291, file: !2473, line: 1267, column: 50)
!16304 = !DILocation(line: 1269, column: 3, scope: !16303)
!16305 = distinct !{!16305, !16301, !16306}
!16306 = !DILocation(line: 1271, column: 2, scope: !16291)
!16307 = !DILocation(line: 1273, column: 2, scope: !16291)
!16308 = distinct !DISubprogram(name: "z_waitq_head", scope: !14133, file: !14133, line: 52, type: !15839, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16309)
!16309 = !{!16310}
!16310 = !DILocalVariable(name: "w", arg: 1, scope: !16308, file: !14133, line: 52, type: !2396)
!16311 = !DILocation(line: 0, scope: !16308)
!16312 = !DILocation(line: 54, column: 52, scope: !16308)
!16313 = !DILocation(line: 54, column: 28, scope: !16308)
!16314 = !DILocation(line: 54, column: 9, scope: !16308)
!16315 = !DILocation(line: 54, column: 2, scope: !16308)
!16316 = distinct !DISubprogram(name: "init_ready_q", scope: !2473, file: !2473, line: 1276, type: !16317, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16324)
!16317 = !DISubroutineType(types: !16318)
!16318 = !{null, !16319}
!16319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16320, size: 32)
!16320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !358, line: 83, size: 96, elements: !16321)
!16321 = !{!16322, !16323}
!16322 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16320, file: !358, line: 86, baseType: !2365, size: 32)
!16323 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16320, file: !358, line: 90, baseType: !2401, size: 64, offset: 32)
!16324 = !{!16325}
!16325 = !DILocalVariable(name: "rq", arg: 1, scope: !16316, file: !2473, line: 1276, type: !16319)
!16326 = !DILocation(line: 0, scope: !16316)
!16327 = !DILocation(line: 1289, column: 22, scope: !16316)
!16328 = !DILocation(line: 1289, column: 2, scope: !16316)
!16329 = !DILocation(line: 1291, column: 1, scope: !16316)
!16330 = distinct !DISubprogram(name: "sys_dlist_init", scope: !332, file: !332, line: 197, type: !16331, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16333)
!16331 = !DISubroutineType(types: !16332)
!16332 = !{null, !14838}
!16333 = !{!16334}
!16334 = !DILocalVariable(name: "list", arg: 1, scope: !16330, file: !332, line: 197, type: !14838)
!16335 = !DILocation(line: 0, scope: !16330)
!16336 = !DILocation(line: 199, column: 8, scope: !16330)
!16337 = !DILocation(line: 199, column: 13, scope: !16330)
!16338 = !DILocation(line: 200, column: 8, scope: !16330)
!16339 = !DILocation(line: 200, column: 13, scope: !16330)
!16340 = !DILocation(line: 201, column: 1, scope: !16330)
!16341 = distinct !DISubprogram(name: "z_sched_init", scope: !2473, file: !2473, line: 1293, type: !3055, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16342 = !DILocation(line: 1302, column: 2, scope: !16341)
!16343 = !DILocation(line: 1306, column: 2, scope: !16341)
!16344 = !DILocation(line: 1309, column: 1, scope: !16341)
!16345 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2473, file: !2473, line: 1311, type: !16346, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16349)
!16346 = !DISubroutineType(types: !16347)
!16347 = !{!107, !16348}
!16348 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !2365)
!16349 = !{!16350}
!16350 = !DILocalVariable(name: "thread", arg: 1, scope: !16345, file: !2473, line: 1311, type: !16348)
!16351 = !DILocation(line: 0, scope: !16345)
!16352 = !DILocation(line: 1313, column: 22, scope: !16345)
!16353 = !DILocation(line: 1313, column: 9, scope: !16345)
!16354 = !DILocation(line: 1313, column: 2, scope: !16345)
!16355 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2473, file: !2473, line: 1325, type: !16356, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16358)
!16356 = !DISubroutineType(types: !16357)
!16357 = !{null, !16348, !107}
!16358 = !{!16359, !16360, !16361}
!16359 = !DILocalVariable(name: "thread", arg: 1, scope: !16355, file: !2473, line: 1325, type: !16348)
!16360 = !DILocalVariable(name: "prio", arg: 2, scope: !16355, file: !2473, line: 1325, type: !107)
!16361 = !DILocalVariable(name: "th", scope: !16355, file: !2473, line: 1334, type: !2365)
!16362 = !DILocation(line: 0, scope: !16355)
!16363 = !DILocation(line: 1331, column: 2, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16365, file: !2473, line: 1331, column: 2)
!16365 = distinct !DILexicalBlock(scope: !16366, file: !2473, line: 1331, column: 2)
!16366 = distinct !DILexicalBlock(scope: !16355, file: !2473, line: 1331, column: 2)
!16367 = !DILocation(line: 1331, column: 2, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !16364, file: !2473, line: 1331, column: 2)
!16369 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 1332, column: 2, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16373, file: !2473, line: 1332, column: 2)
!16373 = distinct !DILexicalBlock(scope: !16355, file: !2473, line: 1332, column: 2)
!16374 = !DILocation(line: 0, scope: !15339, inlinedAt: !16370)
!16375 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16371)
!16376 = !DILocation(line: 1332, column: 2, scope: !16373)
!16377 = !DILocation(line: 1332, column: 2, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16372, file: !2473, line: 1332, column: 2)
!16379 = !DILocation(line: 1336, column: 2, scope: !16355)
!16380 = !DILocation(line: 1337, column: 1, scope: !16355)
!16381 = distinct !DISubprogram(name: "k_can_yield", scope: !2473, file: !2473, line: 1384, type: !7232, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16382 = !DILocation(line: 1386, column: 11, scope: !16381)
!16383 = !DILocation(line: 1386, column: 29, scope: !16381)
!16384 = !DILocation(line: 1386, column: 32, scope: !16381)
!16385 = !DILocation(line: 1386, column: 46, scope: !16381)
!16386 = !DILocation(line: 1387, column: 28, scope: !16381)
!16387 = !DILocation(line: 1387, column: 4, scope: !16381)
!16388 = !DILocation(line: 1386, column: 2, scope: !16381)
!16389 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !419, file: !419, line: 989, type: !7232, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16390 = !DILocation(line: 993, column: 10, scope: !16389)
!16391 = !DILocation(line: 993, column: 2, scope: !16389)
!16392 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2473, file: !2473, line: 1390, type: !3055, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16393)
!16393 = !{!16394}
!16394 = !DILocalVariable(name: "key", scope: !16392, file: !2473, line: 1396, type: !14604)
!16395 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16396)
!16396 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16397)
!16397 = distinct !DILocation(line: 1392, column: 2, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16399, file: !2473, line: 1392, column: 2)
!16399 = distinct !DILexicalBlock(scope: !16392, file: !2473, line: 1392, column: 2)
!16400 = !DILocation(line: 0, scope: !15339, inlinedAt: !16396)
!16401 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16397)
!16402 = !DILocation(line: 1392, column: 2, scope: !16399)
!16403 = !DILocation(line: 1392, column: 2, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16398, file: !2473, line: 1392, column: 2)
!16405 = !DILocation(line: 0, scope: !14612, inlinedAt: !16406)
!16406 = distinct !DILocation(line: 1396, column: 25, scope: !16392)
!16407 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !16408)
!16408 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !16406)
!16409 = !DILocation(line: 0, scope: !14621, inlinedAt: !16408)
!16410 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !16406)
!16411 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !16406)
!16412 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16406)
!16413 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !16406)
!16414 = !DILocation(line: 0, scope: !16392)
!16415 = !DILocation(line: 1400, column: 18, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16417, file: !2473, line: 1399, column: 36)
!16417 = distinct !DILexicalBlock(scope: !16392, file: !2473, line: 1398, column: 6)
!16418 = !DILocation(line: 0, scope: !14804, inlinedAt: !16419)
!16419 = distinct !DILocation(line: 1400, column: 3, scope: !16416)
!16420 = !DILocation(line: 266, column: 15, scope: !14804, inlinedAt: !16419)
!16421 = !DILocation(line: 266, column: 28, scope: !14804, inlinedAt: !16419)
!16422 = !DILocation(line: 0, scope: !14812, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 268, column: 3, scope: !14816, inlinedAt: !16419)
!16424 = !DILocation(line: 234, column: 2, scope: !14812, inlinedAt: !16423)
!16425 = !DILocation(line: 1402, column: 15, scope: !16392)
!16426 = !DILocation(line: 0, scope: !14821, inlinedAt: !16427)
!16427 = distinct !DILocation(line: 1402, column: 2, scope: !16392)
!16428 = !DILocation(line: 252, column: 15, scope: !14821, inlinedAt: !16427)
!16429 = !DILocation(line: 252, column: 28, scope: !14821, inlinedAt: !16427)
!16430 = !DILocation(line: 0, scope: !14828, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 254, column: 3, scope: !14832, inlinedAt: !16427)
!16432 = !DILocation(line: 0, scope: !14835, inlinedAt: !16433)
!16433 = distinct !DILocation(line: 229, column: 2, scope: !14828, inlinedAt: !16431)
!16434 = !DILocation(line: 186, column: 2, scope: !14845, inlinedAt: !16433)
!16435 = !DILocation(line: 186, column: 2, scope: !14846, inlinedAt: !16433)
!16436 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !16433)
!16437 = !DILocation(line: 188, column: 2, scope: !14851, inlinedAt: !16433)
!16438 = !DILocation(line: 188, column: 2, scope: !14853, inlinedAt: !16433)
!16439 = !DILocation(line: 0, scope: !14851, inlinedAt: !16433)
!16440 = !DILocation(line: 189, column: 7, scope: !14856, inlinedAt: !16433)
!16441 = !DILocation(line: 189, column: 35, scope: !14856, inlinedAt: !16433)
!16442 = !DILocation(line: 189, column: 7, scope: !14857, inlinedAt: !16433)
!16443 = !DILocation(line: 191, column: 21, scope: !14861, inlinedAt: !16433)
!16444 = !DILocation(line: 190, column: 4, scope: !14861, inlinedAt: !16433)
!16445 = !DILocation(line: 192, column: 4, scope: !14861, inlinedAt: !16433)
!16446 = distinct !{!16446, !16437, !16447}
!16447 = !DILocation(line: 194, column: 2, scope: !14851, inlinedAt: !16433)
!16448 = !DILocation(line: 196, column: 37, scope: !14835, inlinedAt: !16433)
!16449 = !DILocation(line: 196, column: 2, scope: !14835, inlinedAt: !16433)
!16450 = !DILocation(line: 197, column: 1, scope: !14835, inlinedAt: !16433)
!16451 = !DILocation(line: 1403, column: 2, scope: !16392)
!16452 = !DILocation(line: 0, scope: !15290, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 1404, column: 2, scope: !16392)
!16454 = !DILocation(line: 0, scope: !15299, inlinedAt: !16455)
!16455 = distinct !DILocation(line: 195, column: 2, scope: !15290, inlinedAt: !16453)
!16456 = !DILocation(line: 225, column: 2, scope: !15306, inlinedAt: !16455)
!16457 = !DILocation(line: 225, column: 2, scope: !15307, inlinedAt: !16455)
!16458 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !16455)
!16459 = !DILocation(line: 196, column: 9, scope: !15290, inlinedAt: !16453)
!16460 = !DILocation(line: 1405, column: 1, scope: !16392)
!16461 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2473, file: !2473, line: 1459, type: !16462, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16464)
!16462 = !DISubroutineType(types: !16463)
!16463 = !{!984, !15500}
!16464 = !{!16465, !16466, !16467}
!16465 = !DILocalVariable(name: "timeout", arg: 1, scope: !16461, file: !2473, line: 1459, type: !15500)
!16466 = !DILocalVariable(name: "ticks", scope: !16461, file: !2473, line: 1461, type: !685)
!16467 = !DILocalVariable(name: "ret", scope: !16461, file: !2473, line: 1480, type: !984)
!16468 = !DILocation(line: 0, scope: !16461)
!16469 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16470)
!16470 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16471)
!16471 = distinct !DILocation(line: 1463, column: 2, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16473, file: !2473, line: 1463, column: 2)
!16473 = distinct !DILexicalBlock(scope: !16461, file: !2473, line: 1463, column: 2)
!16474 = !DILocation(line: 0, scope: !15339, inlinedAt: !16470)
!16475 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16471)
!16476 = !DILocation(line: 1463, column: 2, scope: !16473)
!16477 = !DILocation(line: 1463, column: 2, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16472, file: !2473, line: 1463, column: 2)
!16479 = !DILocation(line: 1468, column: 6, scope: !16480)
!16480 = distinct !DILexicalBlock(scope: !16461, file: !2473, line: 1468, column: 6)
!16481 = !DILocation(line: 1468, column: 6, scope: !16461)
!16482 = !DILocation(line: 1469, column: 20, scope: !16483)
!16483 = distinct !DILexicalBlock(scope: !16480, file: !2473, line: 1468, column: 40)
!16484 = !DILocation(line: 1469, column: 3, scope: !16483)
!16485 = !DILocation(line: 1473, column: 3, scope: !16483)
!16486 = !DILocation(line: 1478, column: 10, scope: !16461)
!16487 = !DILocation(line: 1480, column: 16, scope: !16461)
!16488 = !DILocation(line: 1485, column: 1, scope: !16461)
!16489 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4383, file: !4383, line: 310, type: !16490, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16492)
!16490 = !DISubroutineType(types: !16491)
!16491 = !{null, !16348}
!16492 = !{!16493}
!16493 = !DILocalVariable(name: "thread", arg: 1, scope: !16489, file: !4383, line: 310, type: !16348)
!16494 = !DILocation(line: 0, scope: !16489)
!16495 = !DILocation(line: 319, column: 2, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16489, file: !4383, line: 319, column: 2)
!16497 = !{i64 2152268098}
!16498 = !DILocation(line: 320, column: 2, scope: !16489)
!16499 = !DILocation(line: 321, column: 1, scope: !16489)
!16500 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2473, file: !2473, line: 1415, type: !16501, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16503)
!16501 = !DISubroutineType(types: !16502)
!16502 = !{!984, !685}
!16503 = !{!16504, !16505, !16506, !16507}
!16504 = !DILocalVariable(name: "ticks", arg: 1, scope: !16500, file: !2473, line: 1415, type: !685)
!16505 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16500, file: !2473, line: 1418, type: !152)
!16506 = !DILocalVariable(name: "timeout", scope: !16500, file: !2473, line: 1430, type: !15500)
!16507 = !DILocalVariable(name: "key", scope: !16500, file: !2473, line: 1437, type: !14604)
!16508 = !DILocation(line: 0, scope: !16500)
!16509 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16511)
!16511 = distinct !DILocation(line: 1420, column: 2, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !16513, file: !2473, line: 1420, column: 2)
!16513 = distinct !DILexicalBlock(scope: !16500, file: !2473, line: 1420, column: 2)
!16514 = !DILocation(line: 0, scope: !15339, inlinedAt: !16510)
!16515 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16511)
!16516 = !DILocation(line: 1420, column: 2, scope: !16513)
!16517 = !DILocation(line: 1420, column: 2, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16512, file: !2473, line: 1420, column: 2)
!16519 = !DILocation(line: 1425, column: 12, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16500, file: !2473, line: 1425, column: 6)
!16521 = !DILocation(line: 1425, column: 6, scope: !16500)
!16522 = !DILocation(line: 1426, column: 3, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16520, file: !2473, line: 1425, column: 18)
!16524 = !DILocation(line: 1427, column: 3, scope: !16523)
!16525 = !DILocation(line: 1431, column: 24, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16500, file: !2473, line: 1431, column: 6)
!16527 = !DILocation(line: 1431, column: 6, scope: !16500)
!16528 = !DILocation(line: 1432, column: 35, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16526, file: !2473, line: 1431, column: 30)
!16530 = !DILocation(line: 1432, column: 27, scope: !16529)
!16531 = !DILocation(line: 1433, column: 2, scope: !16529)
!16532 = !DILocation(line: 1434, column: 27, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16526, file: !2473, line: 1433, column: 9)
!16534 = !DILocation(line: 0, scope: !16526)
!16535 = !DILocation(line: 0, scope: !14612, inlinedAt: !16536)
!16536 = distinct !DILocation(line: 1437, column: 25, scope: !16500)
!16537 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !16536)
!16539 = !DILocation(line: 0, scope: !14621, inlinedAt: !16538)
!16540 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !16536)
!16541 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !16536)
!16542 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16536)
!16543 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !16536)
!16544 = !DILocation(line: 1440, column: 20, scope: !16500)
!16545 = !DILocation(line: 1440, column: 18, scope: !16500)
!16546 = !DILocation(line: 1442, column: 2, scope: !16500)
!16547 = !DILocation(line: 1443, column: 23, scope: !16500)
!16548 = !DILocation(line: 1443, column: 2, scope: !16500)
!16549 = !DILocation(line: 1444, column: 29, scope: !16500)
!16550 = !DILocation(line: 1444, column: 2, scope: !16500)
!16551 = !DILocation(line: 0, scope: !15290, inlinedAt: !16552)
!16552 = distinct !DILocation(line: 1446, column: 8, scope: !16500)
!16553 = !DILocation(line: 0, scope: !15299, inlinedAt: !16554)
!16554 = distinct !DILocation(line: 195, column: 2, scope: !15290, inlinedAt: !16552)
!16555 = !DILocation(line: 225, column: 2, scope: !15306, inlinedAt: !16554)
!16556 = !DILocation(line: 225, column: 2, scope: !15307, inlinedAt: !16554)
!16557 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !16554)
!16558 = !DILocation(line: 196, column: 9, scope: !15290, inlinedAt: !16552)
!16559 = !DILocation(line: 1448, column: 2, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16561, file: !2473, line: 1448, column: 2)
!16561 = distinct !DILexicalBlock(scope: !16500, file: !2473, line: 1448, column: 2)
!16562 = !DILocation(line: 1448, column: 2, scope: !16561)
!16563 = !DILocation(line: 1448, column: 2, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16560, file: !2473, line: 1448, column: 2)
!16565 = !DILocation(line: 1450, column: 10, scope: !16500)
!16566 = !DILocation(line: 1450, column: 45, scope: !16500)
!16567 = !DILocation(line: 1450, column: 43, scope: !16500)
!16568 = !DILocation(line: 1451, column: 6, scope: !16500)
!16569 = !DILocation(line: 1457, column: 1, scope: !16500)
!16570 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8795, file: !8795, line: 1103, type: !14391, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16571)
!16571 = !{!16572}
!16572 = !DILocalVariable(name: "t", arg: 1, scope: !16570, file: !8795, line: 1103, type: !687)
!16573 = !DILocation(line: 0, scope: !16570)
!16574 = !DILocation(line: 0, scope: !14672, inlinedAt: !16575)
!16575 = distinct !DILocation(line: 1106, column: 9, scope: !16570)
!16576 = !DILocation(line: 139, column: 13, scope: !16577, inlinedAt: !16575)
!16577 = distinct !DILexicalBlock(scope: !16578, file: !8795, line: 138, column: 10)
!16578 = distinct !DILexicalBlock(scope: !16579, file: !8795, line: 136, column: 7)
!16579 = distinct !DILexicalBlock(scope: !14693, file: !8795, line: 134, column: 17)
!16580 = !DILocation(line: 1106, column: 2, scope: !16570)
!16581 = distinct !DISubprogram(name: "k_yield", scope: !4383, file: !4383, line: 140, type: !3055, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16582 = !DILocation(line: 148, column: 2, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16581, file: !4383, line: 148, column: 2)
!16584 = !{i64 2152267418}
!16585 = !DILocation(line: 149, column: 2, scope: !16581)
!16586 = !DILocation(line: 150, column: 1, scope: !16581)
!16587 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2473, file: !2473, line: 1495, type: !16588, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16590)
!16588 = !DISubroutineType(types: !16589)
!16589 = !{!984, !107}
!16590 = !{!16591, !16592}
!16591 = !DILocalVariable(name: "us", arg: 1, scope: !16587, file: !2473, line: 1495, type: !107)
!16592 = !DILocalVariable(name: "ticks", scope: !16587, file: !2473, line: 1497, type: !984)
!16593 = !DILocation(line: 0, scope: !16587)
!16594 = !DILocation(line: 1501, column: 31, scope: !16587)
!16595 = !DILocation(line: 1501, column: 10, scope: !16587)
!16596 = !DILocation(line: 1502, column: 23, scope: !16587)
!16597 = !DILocation(line: 1502, column: 10, scope: !16587)
!16598 = !DILocation(line: 1506, column: 31, scope: !16587)
!16599 = !DILocation(line: 1506, column: 9, scope: !16587)
!16600 = !DILocation(line: 1506, column: 2, scope: !16587)
!16601 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8795, file: !8795, line: 571, type: !14391, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16602)
!16602 = !{!16603}
!16603 = !DILocalVariable(name: "t", arg: 1, scope: !16601, file: !8795, line: 571, type: !687)
!16604 = !DILocation(line: 0, scope: !16601)
!16605 = !DILocation(line: 0, scope: !14672, inlinedAt: !16606)
!16606 = distinct !DILocation(line: 574, column: 9, scope: !16601)
!16607 = !DILocation(line: 135, column: 5, scope: !16579, inlinedAt: !16606)
!16608 = !DILocation(line: 139, column: 13, scope: !16577, inlinedAt: !16606)
!16609 = !DILocation(line: 574, column: 2, scope: !16601)
!16610 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8795, file: !8795, line: 1187, type: !14391, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16611)
!16611 = !{!16612}
!16612 = !DILocalVariable(name: "t", arg: 1, scope: !16610, file: !8795, line: 1187, type: !687)
!16613 = !DILocation(line: 0, scope: !16610)
!16614 = !DILocation(line: 0, scope: !14672, inlinedAt: !16615)
!16615 = distinct !DILocation(line: 1190, column: 9, scope: !16610)
!16616 = !DILocation(line: 145, column: 13, scope: !16617, inlinedAt: !16615)
!16617 = distinct !DILexicalBlock(scope: !14690, file: !8795, line: 144, column: 10)
!16618 = !DILocation(line: 1190, column: 2, scope: !16610)
!16619 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2473, file: !2473, line: 1517, type: !16490, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16620)
!16620 = !{!16621}
!16621 = !DILocalVariable(name: "thread", arg: 1, scope: !16619, file: !2473, line: 1517, type: !16348)
!16622 = !DILocation(line: 0, scope: !16619)
!16623 = !DILocation(line: 1521, column: 6, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16619, file: !2473, line: 1521, column: 6)
!16625 = !DILocation(line: 1521, column: 6, scope: !16619)
!16626 = !DILocation(line: 1525, column: 6, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16619, file: !2473, line: 1525, column: 6)
!16628 = !DILocation(line: 1525, column: 37, scope: !16627)
!16629 = !DILocation(line: 1525, column: 6, scope: !16619)
!16630 = !DILocation(line: 1527, column: 20, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16632, file: !2473, line: 1527, column: 7)
!16632 = distinct !DILexicalBlock(scope: !16627, file: !2473, line: 1525, column: 42)
!16633 = !DILocation(line: 1527, column: 33, scope: !16631)
!16634 = !DILocation(line: 1527, column: 7, scope: !16632)
!16635 = !DILocation(line: 1532, column: 2, scope: !16619)
!16636 = !DILocation(line: 1533, column: 2, scope: !16619)
!16637 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 1537, column: 7, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16619, file: !2473, line: 1537, column: 6)
!16641 = !DILocation(line: 0, scope: !15339, inlinedAt: !16638)
!16642 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16639)
!16643 = !DILocation(line: 1537, column: 6, scope: !16619)
!16644 = !DILocation(line: 1538, column: 3, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16640, file: !2473, line: 1537, column: 25)
!16646 = !DILocation(line: 1539, column: 2, scope: !16645)
!16647 = !DILocation(line: 1540, column: 1, scope: !16619)
!16648 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13772, file: !13772, line: 101, type: !14753, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16649)
!16649 = !{!16650}
!16650 = !DILocalVariable(name: "thread", arg: 1, scope: !16648, file: !13772, line: 101, type: !2365)
!16651 = !DILocation(line: 0, scope: !16648)
!16652 = !DILocation(line: 103, column: 23, scope: !16648)
!16653 = !DILocation(line: 103, column: 36, scope: !16648)
!16654 = !DILocation(line: 103, column: 55, scope: !16648)
!16655 = !DILocation(line: 103, column: 2, scope: !16648)
!16656 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2473, file: !2473, line: 1567, type: !16657, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16659)
!16657 = !DISubroutineType(types: !16658)
!16658 = !{!16348}
!16659 = !{!16660}
!16660 = !DILocalVariable(name: "ret", scope: !16656, file: !2473, line: 1577, type: !16348)
!16661 = !DILocation(line: 1577, column: 30, scope: !16656)
!16662 = !DILocation(line: 0, scope: !16656)
!16663 = !DILocation(line: 1582, column: 2, scope: !16656)
!16664 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2473, file: !2473, line: 1593, type: !7535, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16665 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16666)
!16666 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16667)
!16667 = distinct !DILocation(line: 1595, column: 10, scope: !16664)
!16668 = !DILocation(line: 0, scope: !15339, inlinedAt: !16666)
!16669 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16667)
!16670 = !DILocation(line: 1595, column: 27, scope: !16664)
!16671 = !DILocation(line: 1595, column: 41, scope: !16664)
!16672 = !DILocation(line: 1595, column: 30, scope: !16664)
!16673 = !DILocation(line: 1595, column: 2, scope: !16664)
!16674 = distinct !DISubprogram(name: "z_thread_abort", scope: !2473, file: !2473, line: 1725, type: !14570, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16675)
!16675 = !{!16676, !16677}
!16676 = !DILocalVariable(name: "thread", arg: 1, scope: !16674, file: !2473, line: 1725, type: !2365)
!16677 = !DILocalVariable(name: "key", scope: !16674, file: !2473, line: 1727, type: !14604)
!16678 = !DILocation(line: 0, scope: !16674)
!16679 = !DILocation(line: 0, scope: !14612, inlinedAt: !16680)
!16680 = distinct !DILocation(line: 1727, column: 25, scope: !16674)
!16681 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !16680)
!16683 = !DILocation(line: 0, scope: !14621, inlinedAt: !16682)
!16684 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !16680)
!16685 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !16680)
!16686 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16680)
!16687 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !16680)
!16688 = !DILocation(line: 1729, column: 20, scope: !16689)
!16689 = distinct !DILexicalBlock(scope: !16674, file: !2473, line: 1729, column: 6)
!16690 = !DILocation(line: 1729, column: 33, scope: !16689)
!16691 = !DILocation(line: 1729, column: 48, scope: !16689)
!16692 = !DILocation(line: 1729, column: 6, scope: !16674)
!16693 = !DILocation(line: 0, scope: !14646, inlinedAt: !16694)
!16694 = distinct !DILocation(line: 1730, column: 3, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16689, file: !2473, line: 1729, column: 54)
!16696 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !16694)
!16697 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !16694)
!16698 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16694)
!16699 = !DILocation(line: 0, scope: !14660, inlinedAt: !16700)
!16700 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !16694)
!16701 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !16700)
!16702 = !DILocation(line: 1731, column: 3, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16704, file: !2473, line: 1731, column: 3)
!16704 = distinct !DILexicalBlock(scope: !16705, file: !2473, line: 1731, column: 3)
!16705 = distinct !DILexicalBlock(scope: !16695, file: !2473, line: 1731, column: 3)
!16706 = !DILocation(line: 1736, column: 20, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16674, file: !2473, line: 1736, column: 6)
!16708 = !DILocation(line: 1736, column: 33, scope: !16707)
!16709 = !DILocation(line: 1736, column: 49, scope: !16707)
!16710 = !DILocation(line: 1736, column: 6, scope: !16674)
!16711 = !DILocation(line: 0, scope: !14646, inlinedAt: !16712)
!16712 = distinct !DILocation(line: 1737, column: 3, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16707, file: !2473, line: 1736, column: 56)
!16714 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !16712)
!16715 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !16712)
!16716 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16712)
!16717 = !DILocation(line: 0, scope: !14660, inlinedAt: !16718)
!16718 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !16712)
!16719 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !16718)
!16720 = !DILocation(line: 1738, column: 3, scope: !16713)
!16721 = !DILocation(line: 1775, column: 2, scope: !16674)
!16722 = !DILocation(line: 1776, column: 16, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16674, file: !2473, line: 1776, column: 6)
!16724 = !DILocation(line: 1776, column: 13, scope: !16723)
!16725 = !DILocation(line: 1776, column: 25, scope: !16723)
!16726 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 1776, column: 29, scope: !16723)
!16729 = !DILocation(line: 0, scope: !15339, inlinedAt: !16727)
!16730 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16728)
!16731 = !DILocation(line: 1776, column: 6, scope: !16674)
!16732 = !DILocation(line: 0, scope: !15290, inlinedAt: !16733)
!16733 = distinct !DILocation(line: 1777, column: 3, scope: !16734)
!16734 = distinct !DILexicalBlock(scope: !16723, file: !2473, line: 1776, column: 47)
!16735 = !DILocation(line: 0, scope: !15299, inlinedAt: !16736)
!16736 = distinct !DILocation(line: 195, column: 2, scope: !15290, inlinedAt: !16733)
!16737 = !DILocation(line: 225, column: 2, scope: !15306, inlinedAt: !16736)
!16738 = !DILocation(line: 225, column: 2, scope: !15307, inlinedAt: !16736)
!16739 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !16736)
!16740 = !DILocation(line: 196, column: 9, scope: !15290, inlinedAt: !16733)
!16741 = !DILocation(line: 1778, column: 3, scope: !16742)
!16742 = distinct !DILexicalBlock(scope: !16743, file: !2473, line: 1778, column: 3)
!16743 = distinct !DILexicalBlock(scope: !16744, file: !2473, line: 1778, column: 3)
!16744 = distinct !DILexicalBlock(scope: !16734, file: !2473, line: 1778, column: 3)
!16745 = !DILocation(line: 0, scope: !14646, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 1780, column: 2, scope: !16674)
!16747 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !16746)
!16748 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !16746)
!16749 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16746)
!16750 = !DILocation(line: 0, scope: !14660, inlinedAt: !16751)
!16751 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !16746)
!16752 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !16751)
!16753 = !DILocation(line: 1781, column: 1, scope: !16674)
!16754 = distinct !DISubprogram(name: "end_thread", scope: !2473, file: !2473, line: 1690, type: !14570, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16755)
!16755 = !{!16756}
!16756 = !DILocalVariable(name: "thread", arg: 1, scope: !16754, file: !2473, line: 1690, type: !2365)
!16757 = !DILocation(line: 0, scope: !16754)
!16758 = !DILocation(line: 1695, column: 20, scope: !16759)
!16759 = distinct !DILexicalBlock(scope: !16754, file: !2473, line: 1695, column: 6)
!16760 = !DILocation(line: 1695, column: 33, scope: !16759)
!16761 = !DILocation(line: 1695, column: 49, scope: !16759)
!16762 = !DILocation(line: 1695, column: 6, scope: !16754)
!16763 = !DILocation(line: 1697, column: 29, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16759, file: !2473, line: 1695, column: 56)
!16765 = !DILocation(line: 1698, column: 7, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16764, file: !2473, line: 1698, column: 7)
!16767 = !DILocation(line: 1698, column: 7, scope: !16764)
!16768 = !DILocation(line: 0, scope: !14804, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 1699, column: 4, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16766, file: !2473, line: 1698, column: 35)
!16771 = !DILocation(line: 266, column: 28, scope: !14804, inlinedAt: !16769)
!16772 = !DILocation(line: 0, scope: !14812, inlinedAt: !16773)
!16773 = distinct !DILocation(line: 268, column: 3, scope: !14816, inlinedAt: !16769)
!16774 = !DILocation(line: 234, column: 2, scope: !14812, inlinedAt: !16773)
!16775 = !DILocation(line: 1700, column: 3, scope: !16770)
!16776 = !DILocation(line: 1701, column: 20, scope: !16777)
!16777 = distinct !DILexicalBlock(scope: !16764, file: !2473, line: 1701, column: 7)
!16778 = !DILocation(line: 1701, column: 30, scope: !16777)
!16779 = !DILocation(line: 1701, column: 7, scope: !16764)
!16780 = !DILocation(line: 1702, column: 4, scope: !16781)
!16781 = distinct !DILexicalBlock(scope: !16777, file: !2473, line: 1701, column: 39)
!16782 = !DILocation(line: 1703, column: 3, scope: !16781)
!16783 = !DILocation(line: 1704, column: 9, scope: !16764)
!16784 = !DILocation(line: 1705, column: 23, scope: !16764)
!16785 = !DILocation(line: 1705, column: 3, scope: !16764)
!16786 = !DILocation(line: 1706, column: 3, scope: !16764)
!16787 = !DILocation(line: 1722, column: 2, scope: !16764)
!16788 = !DILocation(line: 1723, column: 1, scope: !16754)
!16789 = distinct !DISubprogram(name: "unpend_all", scope: !2473, file: !2473, line: 1674, type: !16790, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16792)
!16790 = !DISubroutineType(types: !16791)
!16791 = !{null, !2396}
!16792 = !{!16793, !16794}
!16793 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16789, file: !2473, line: 1674, type: !2396)
!16794 = !DILocalVariable(name: "thread", scope: !16789, file: !2473, line: 1676, type: !2365)
!16795 = !DILocation(line: 0, scope: !16789)
!16796 = !DILocation(line: 1678, column: 19, scope: !16789)
!16797 = !DILocation(line: 1678, column: 41, scope: !16789)
!16798 = !DILocation(line: 1678, column: 2, scope: !16789)
!16799 = !DILocation(line: 1679, column: 3, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16789, file: !2473, line: 1678, column: 50)
!16801 = !DILocation(line: 1680, column: 9, scope: !16800)
!16802 = !DILocalVariable(name: "thread", arg: 1, scope: !16803, file: !13792, line: 65, type: !2365)
!16803 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13792, file: !13792, line: 65, type: !16804, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16806)
!16804 = !DISubroutineType(types: !16805)
!16805 = !{null, !2365, !32}
!16806 = !{!16802, !16807}
!16807 = !DILocalVariable(name: "value", arg: 2, scope: !16803, file: !13792, line: 65, type: !32)
!16808 = !DILocation(line: 0, scope: !16803, inlinedAt: !16809)
!16809 = distinct !DILocation(line: 1681, column: 3, scope: !16800)
!16810 = !DILocation(line: 67, column: 15, scope: !16803, inlinedAt: !16809)
!16811 = !DILocation(line: 67, column: 33, scope: !16803, inlinedAt: !16809)
!16812 = !DILocation(line: 1682, column: 3, scope: !16800)
!16813 = distinct !{!16813, !16798, !16814}
!16814 = !DILocation(line: 1683, column: 2, scope: !16789)
!16815 = !DILocation(line: 1684, column: 1, scope: !16789)
!16816 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2473, file: !2473, line: 1794, type: !16817, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16819)
!16817 = !DISubroutineType(types: !16818)
!16818 = !{!107, !2365, !15500}
!16819 = !{!16820, !16821, !16822, !16823}
!16820 = !DILocalVariable(name: "thread", arg: 1, scope: !16816, file: !2473, line: 1794, type: !2365)
!16821 = !DILocalVariable(name: "timeout", arg: 2, scope: !16816, file: !2473, line: 1794, type: !15500)
!16822 = !DILocalVariable(name: "key", scope: !16816, file: !2473, line: 1796, type: !14604)
!16823 = !DILocalVariable(name: "ret", scope: !16816, file: !2473, line: 1797, type: !107)
!16824 = !DILocation(line: 0, scope: !16816)
!16825 = !DILocation(line: 0, scope: !14612, inlinedAt: !16826)
!16826 = distinct !DILocation(line: 1796, column: 25, scope: !16816)
!16827 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !16828)
!16828 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !16826)
!16829 = !DILocation(line: 0, scope: !14621, inlinedAt: !16828)
!16830 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !16826)
!16831 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !16826)
!16832 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16826)
!16833 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !16826)
!16834 = !DILocation(line: 1801, column: 20, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16816, file: !2473, line: 1801, column: 6)
!16836 = !DILocation(line: 1801, column: 33, scope: !16835)
!16837 = !DILocation(line: 1801, column: 49, scope: !16835)
!16838 = !DILocation(line: 1801, column: 6, scope: !16816)
!16839 = !DILocation(line: 1803, column: 13, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16835, file: !2473, line: 1803, column: 13)
!16841 = !DILocation(line: 1803, column: 13, scope: !16835)
!16842 = !DILocation(line: 1805, column: 24, scope: !16843)
!16843 = distinct !DILexicalBlock(scope: !16840, file: !2473, line: 1805, column: 13)
!16844 = !DILocation(line: 1805, column: 21, scope: !16843)
!16845 = !DILocation(line: 1805, column: 34, scope: !16843)
!16846 = !DILocation(line: 1806, column: 20, scope: !16843)
!16847 = !DILocation(line: 1806, column: 44, scope: !16843)
!16848 = !DILocation(line: 1806, column: 30, scope: !16843)
!16849 = !DILocation(line: 1805, column: 13, scope: !16840)
!16850 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !16851)
!16851 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !16852)
!16852 = distinct !DILocation(line: 1809, column: 3, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16854, file: !2473, line: 1809, column: 3)
!16854 = distinct !DILexicalBlock(scope: !16855, file: !2473, line: 1809, column: 3)
!16855 = distinct !DILexicalBlock(scope: !16843, file: !2473, line: 1808, column: 9)
!16856 = !DILocation(line: 0, scope: !15339, inlinedAt: !16851)
!16857 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !16852)
!16858 = !DILocation(line: 1809, column: 3, scope: !16854)
!16859 = !DILocation(line: 1809, column: 3, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16853, file: !2473, line: 1809, column: 3)
!16861 = !DILocation(line: 1810, column: 23, scope: !16855)
!16862 = !DILocation(line: 1810, column: 42, scope: !16855)
!16863 = !DILocation(line: 1810, column: 3, scope: !16855)
!16864 = !DILocation(line: 1811, column: 22, scope: !16855)
!16865 = !DILocation(line: 1811, column: 3, scope: !16855)
!16866 = !DILocation(line: 0, scope: !15290, inlinedAt: !16867)
!16867 = distinct !DILocation(line: 1814, column: 9, scope: !16855)
!16868 = !DILocation(line: 0, scope: !15299, inlinedAt: !16869)
!16869 = distinct !DILocation(line: 195, column: 2, scope: !15290, inlinedAt: !16867)
!16870 = !DILocation(line: 225, column: 2, scope: !15306, inlinedAt: !16869)
!16871 = !DILocation(line: 225, column: 2, scope: !15307, inlinedAt: !16869)
!16872 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !16869)
!16873 = !DILocation(line: 196, column: 9, scope: !15290, inlinedAt: !16867)
!16874 = !DILocation(line: 1817, column: 3, scope: !16855)
!16875 = !DILocation(line: 0, scope: !16835)
!16876 = !DILocation(line: 0, scope: !14646, inlinedAt: !16877)
!16877 = distinct !DILocation(line: 1822, column: 2, scope: !16816)
!16878 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !16877)
!16879 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !16877)
!16880 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16877)
!16881 = !DILocation(line: 0, scope: !14660, inlinedAt: !16882)
!16882 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !16877)
!16883 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !16882)
!16884 = !DILocation(line: 1823, column: 2, scope: !16816)
!16885 = !DILocation(line: 1824, column: 1, scope: !16816)
!16886 = distinct !DISubprogram(name: "z_sched_wake", scope: !2473, file: !2473, line: 1882, type: !16887, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16889)
!16887 = !DISubroutineType(types: !16888)
!16888 = !{!145, !2396, !107, !106}
!16889 = !{!16890, !16891, !16892, !16893, !16894, !16895, !16897}
!16890 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16886, file: !2473, line: 1882, type: !2396)
!16891 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16886, file: !2473, line: 1882, type: !107)
!16892 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16886, file: !2473, line: 1882, type: !106)
!16893 = !DILocalVariable(name: "thread", scope: !16886, file: !2473, line: 1884, type: !2365)
!16894 = !DILocalVariable(name: "ret", scope: !16886, file: !2473, line: 1885, type: !145)
!16895 = !DILocalVariable(name: "__i", scope: !16896, file: !2473, line: 1887, type: !14604)
!16896 = distinct !DILexicalBlock(scope: !16886, file: !2473, line: 1887, column: 2)
!16897 = !DILocalVariable(name: "__key", scope: !16896, file: !2473, line: 1887, type: !14604)
!16898 = !DILocation(line: 0, scope: !16886)
!16899 = !DILocation(line: 0, scope: !16896)
!16900 = !DILocation(line: 0, scope: !14612, inlinedAt: !16901)
!16901 = distinct !DILocation(line: 1887, column: 2, scope: !16896)
!16902 = !DILocation(line: 55, column: 2, scope: !14621, inlinedAt: !16903)
!16903 = distinct !DILocation(line: 145, column: 10, scope: !14612, inlinedAt: !16901)
!16904 = !DILocation(line: 0, scope: !14621, inlinedAt: !16903)
!16905 = !DILocation(line: 148, column: 2, scope: !14629, inlinedAt: !16901)
!16906 = !DILocation(line: 148, column: 2, scope: !14630, inlinedAt: !16901)
!16907 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16901)
!16908 = !DILocation(line: 160, column: 2, scope: !14612, inlinedAt: !16901)
!16909 = !DILocation(line: 1888, column: 12, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16911, file: !2473, line: 1887, column: 26)
!16911 = distinct !DILexicalBlock(scope: !16896, file: !2473, line: 1887, column: 2)
!16912 = !DILocation(line: 1890, column: 14, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16910, file: !2473, line: 1890, column: 7)
!16914 = !DILocation(line: 1890, column: 7, scope: !16910)
!16915 = !DILocalVariable(name: "thread", arg: 1, scope: !16916, file: !16917, line: 134, type: !2365)
!16916 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16917, file: !16917, line: 134, type: !16918, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16920)
!16917 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16918 = !DISubroutineType(types: !16919)
!16919 = !{null, !2365, !32, !106}
!16920 = !{!16915, !16921, !16922}
!16921 = !DILocalVariable(name: "value", arg: 2, scope: !16916, file: !16917, line: 135, type: !32)
!16922 = !DILocalVariable(name: "data", arg: 3, scope: !16916, file: !16917, line: 136, type: !106)
!16923 = !DILocation(line: 0, scope: !16916, inlinedAt: !16924)
!16924 = distinct !DILocation(line: 1891, column: 4, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16913, file: !2473, line: 1890, column: 23)
!16926 = !DILocation(line: 0, scope: !16803, inlinedAt: !16927)
!16927 = distinct !DILocation(line: 138, column: 2, scope: !16916, inlinedAt: !16924)
!16928 = !DILocation(line: 67, column: 15, scope: !16803, inlinedAt: !16927)
!16929 = !DILocation(line: 67, column: 33, scope: !16803, inlinedAt: !16927)
!16930 = !DILocation(line: 139, column: 15, scope: !16916, inlinedAt: !16924)
!16931 = !DILocation(line: 139, column: 25, scope: !16916, inlinedAt: !16924)
!16932 = !DILocation(line: 1894, column: 4, scope: !16925)
!16933 = !DILocation(line: 1895, column: 10, scope: !16925)
!16934 = !DILocation(line: 1896, column: 4, scope: !16925)
!16935 = !DILocation(line: 1898, column: 3, scope: !16925)
!16936 = !DILocation(line: 0, scope: !14646, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 1887, column: 2, scope: !16911)
!16938 = !DILocation(line: 194, column: 2, scope: !14654, inlinedAt: !16937)
!16939 = !DILocation(line: 194, column: 2, scope: !14655, inlinedAt: !16937)
!16940 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16937)
!16941 = !DILocation(line: 0, scope: !14660, inlinedAt: !16942)
!16942 = distinct !DILocation(line: 215, column: 2, scope: !14646, inlinedAt: !16937)
!16943 = !DILocation(line: 95, column: 2, scope: !14660, inlinedAt: !16942)
!16944 = !DILocation(line: 1901, column: 2, scope: !16886)
!16945 = distinct !DISubprogram(name: "z_sched_wait", scope: !2473, file: !2473, line: 1904, type: !16946, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16949)
!16946 = !DISubroutineType(types: !16947)
!16947 = !{!107, !14615, !14604, !2396, !15500, !16948}
!16948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16949 = !{!16950, !16951, !16952, !16953, !16954, !16955}
!16950 = !DILocalVariable(name: "lock", arg: 1, scope: !16945, file: !2473, line: 1904, type: !14615)
!16951 = !DILocalVariable(name: "key", arg: 2, scope: !16945, file: !2473, line: 1904, type: !14604)
!16952 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16945, file: !2473, line: 1905, type: !2396)
!16953 = !DILocalVariable(name: "timeout", arg: 4, scope: !16945, file: !2473, line: 1905, type: !15500)
!16954 = !DILocalVariable(name: "data", arg: 5, scope: !16945, file: !2473, line: 1905, type: !16948)
!16955 = !DILocalVariable(name: "ret", scope: !16945, file: !2473, line: 1907, type: !107)
!16956 = !DILocation(line: 0, scope: !16945)
!16957 = !DILocation(line: 1907, column: 12, scope: !16945)
!16958 = !DILocation(line: 1909, column: 11, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16945, file: !2473, line: 1909, column: 6)
!16960 = !DILocation(line: 1909, column: 6, scope: !16945)
!16961 = !DILocation(line: 1910, column: 11, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16959, file: !2473, line: 1909, column: 20)
!16963 = !DILocation(line: 1910, column: 26, scope: !16962)
!16964 = !DILocation(line: 1910, column: 9, scope: !16962)
!16965 = !DILocation(line: 1911, column: 2, scope: !16962)
!16966 = !DILocation(line: 1912, column: 2, scope: !16945)
!16967 = distinct !DISubprogram(name: "z_data_copy", scope: !16968, file: !16968, line: 22, type: !3055, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3038, retainedNodes: !2175)
!16968 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16969 = !DILocation(line: 24, column: 2, scope: !16967)
!16970 = !DILocation(line: 27, column: 2, scope: !16967)
!16971 = !DILocation(line: 71, column: 1, scope: !16967)
!16972 = distinct !DISubprogram(name: "z_add_timeout", scope: !2510, file: !2510, line: 88, type: !16973, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !16979)
!16973 = !DISubroutineType(types: !16974)
!16974 = !{null, !2483, !2502, !16975}
!16975 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !686, line: 67, baseType: !16976)
!16976 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 65, size: 64, elements: !16977)
!16977 = !{!16978}
!16978 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16976, file: !686, line: 66, baseType: !685, size: 64)
!16979 = !{!16980, !16981, !16982, !16983, !16989, !16990, !16993, !16996}
!16980 = !DILocalVariable(name: "to", arg: 1, scope: !16972, file: !2510, line: 88, type: !2483)
!16981 = !DILocalVariable(name: "fn", arg: 2, scope: !16972, file: !2510, line: 88, type: !2502)
!16982 = !DILocalVariable(name: "timeout", arg: 3, scope: !16972, file: !2510, line: 89, type: !16975)
!16983 = !DILocalVariable(name: "__i", scope: !16984, file: !2510, line: 102, type: !16985)
!16984 = distinct !DILexicalBlock(scope: !16972, file: !2510, line: 102, column: 2)
!16985 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !433, line: 106, baseType: !16986)
!16986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !433, line: 32, size: 32, elements: !16987)
!16987 = !{!16988}
!16988 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16986, file: !433, line: 33, baseType: !107, size: 32)
!16989 = !DILocalVariable(name: "__key", scope: !16984, file: !2510, line: 102, type: !16985)
!16990 = !DILocalVariable(name: "t", scope: !16991, file: !2510, line: 103, type: !2483)
!16991 = distinct !DILexicalBlock(scope: !16992, file: !2510, line: 102, column: 24)
!16992 = distinct !DILexicalBlock(scope: !16984, file: !2510, line: 102, column: 2)
!16993 = !DILocalVariable(name: "ticks", scope: !16994, file: !2510, line: 107, type: !685)
!16994 = distinct !DILexicalBlock(scope: !16995, file: !2510, line: 106, column: 39)
!16995 = distinct !DILexicalBlock(scope: !16991, file: !2510, line: 105, column: 7)
!16996 = !DILocalVariable(name: "next_time", scope: !16997, file: !2510, line: 137, type: !984)
!16997 = distinct !DILexicalBlock(scope: !16998, file: !2510, line: 127, column: 22)
!16998 = distinct !DILexicalBlock(scope: !16991, file: !2510, line: 127, column: 7)
!16999 = !DILocation(line: 0, scope: !16972)
!17000 = !DILocation(line: 91, column: 6, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16972, file: !2510, line: 91, column: 6)
!17002 = !DILocation(line: 91, column: 6, scope: !16972)
!17003 = !DILocation(line: 99, column: 2, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !17005, file: !2510, line: 99, column: 2)
!17005 = distinct !DILexicalBlock(scope: !16972, file: !2510, line: 99, column: 2)
!17006 = !DILocation(line: 99, column: 2, scope: !17005)
!17007 = !DILocation(line: 99, column: 2, scope: !17008)
!17008 = distinct !DILexicalBlock(scope: !17004, file: !2510, line: 99, column: 2)
!17009 = !DILocation(line: 100, column: 6, scope: !16972)
!17010 = !DILocation(line: 100, column: 9, scope: !16972)
!17011 = !DILocation(line: 0, scope: !16984)
!17012 = !DILocalVariable(name: "l", arg: 1, scope: !17013, file: !433, line: 136, type: !17016)
!17013 = distinct !DISubprogram(name: "k_spin_lock", scope: !433, file: !433, line: 136, type: !17014, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17017)
!17014 = !DISubroutineType(types: !17015)
!17015 = !{!16985, !17016}
!17016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!17017 = !{!17012, !17018}
!17018 = !DILocalVariable(name: "k", scope: !17013, file: !433, line: 139, type: !16985)
!17019 = !DILocation(line: 0, scope: !17013, inlinedAt: !17020)
!17020 = distinct !DILocation(line: 102, column: 2, scope: !16984)
!17021 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17026)
!17022 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17023)
!17023 = !{!17024, !17025}
!17024 = !DILocalVariable(name: "key", scope: !17022, file: !5884, line: 44, type: !32)
!17025 = !DILocalVariable(name: "tmp", scope: !17022, file: !5884, line: 53, type: !32)
!17026 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17020)
!17027 = !{i64 1658913}
!17028 = !DILocation(line: 0, scope: !17022, inlinedAt: !17026)
!17029 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17020)
!17030 = distinct !DILexicalBlock(scope: !17031, file: !433, line: 148, column: 2)
!17031 = distinct !DILexicalBlock(scope: !17013, file: !433, line: 148, column: 2)
!17032 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17020)
!17033 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17020)
!17034 = distinct !DILexicalBlock(scope: !17030, file: !433, line: 148, column: 2)
!17035 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17020)
!17036 = !DILocation(line: 106, column: 33, scope: !16995)
!17037 = !DILocation(line: 105, column: 7, scope: !16991)
!17038 = !DILocation(line: 107, column: 50, scope: !16994)
!17039 = !DILocation(line: 107, column: 48, scope: !16994)
!17040 = !DILocation(line: 0, scope: !16994)
!17041 = !DILocation(line: 109, column: 17, scope: !16994)
!17042 = !DILocation(line: 110, column: 3, scope: !16994)
!17043 = !DILocation(line: 111, column: 31, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !16995, file: !2510, line: 110, column: 10)
!17045 = !DILocation(line: 111, column: 37, scope: !17044)
!17046 = !DILocation(line: 111, column: 35, scope: !17044)
!17047 = !DILocation(line: 0, scope: !16995)
!17048 = !DILocation(line: 109, column: 8, scope: !16994)
!17049 = !DILocation(line: 109, column: 15, scope: !16994)
!17050 = !DILocation(line: 114, column: 12, scope: !17051)
!17051 = distinct !DILexicalBlock(scope: !16991, file: !2510, line: 114, column: 3)
!17052 = !DILocation(line: 0, scope: !16991)
!17053 = !DILocation(line: 114, column: 3, scope: !17051)
!17054 = !DILocation(line: 115, column: 24, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17056, file: !2510, line: 115, column: 8)
!17056 = distinct !DILexicalBlock(scope: !17057, file: !2510, line: 114, column: 45)
!17057 = distinct !DILexicalBlock(scope: !17051, file: !2510, line: 114, column: 3)
!17058 = !DILocation(line: 115, column: 11, scope: !17055)
!17059 = !DILocation(line: 115, column: 18, scope: !17055)
!17060 = !DILocation(line: 115, column: 8, scope: !17056)
!17061 = !DILocation(line: 116, column: 15, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17055, file: !2510, line: 115, column: 32)
!17063 = !DILocation(line: 117, column: 26, scope: !17062)
!17064 = !DILocation(line: 117, column: 5, scope: !17062)
!17065 = !DILocation(line: 123, column: 7, scope: !16991)
!17066 = !DILocation(line: 120, column: 15, scope: !17056)
!17067 = !DILocation(line: 114, column: 36, scope: !17057)
!17068 = distinct !{!17068, !17053, !17069}
!17069 = !DILocation(line: 121, column: 3, scope: !17051)
!17070 = !DILocation(line: 124, column: 4, scope: !17071)
!17071 = distinct !DILexicalBlock(scope: !17072, file: !2510, line: 123, column: 18)
!17072 = distinct !DILexicalBlock(scope: !16991, file: !2510, line: 123, column: 7)
!17073 = !DILocation(line: 125, column: 3, scope: !17071)
!17074 = !DILocation(line: 127, column: 13, scope: !16998)
!17075 = !DILocation(line: 127, column: 10, scope: !16998)
!17076 = !DILocation(line: 127, column: 7, scope: !16991)
!17077 = !DILocation(line: 137, column: 24, scope: !16997)
!17078 = !DILocation(line: 0, scope: !16997)
!17079 = !DILocation(line: 139, column: 18, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !16997, file: !2510, line: 139, column: 8)
!17081 = !DILocation(line: 139, column: 23, scope: !17080)
!17082 = !DILocation(line: 141, column: 5, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17080, file: !2510, line: 140, column: 48)
!17084 = !DILocation(line: 142, column: 4, scope: !17083)
!17085 = !DILocalVariable(name: "key", arg: 2, scope: !17086, file: !433, line: 190, type: !16985)
!17086 = distinct !DISubprogram(name: "k_spin_unlock", scope: !433, file: !433, line: 189, type: !17087, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17089)
!17087 = !DISubroutineType(types: !17088)
!17088 = !{null, !17016, !16985}
!17089 = !{!17090, !17085}
!17090 = !DILocalVariable(name: "l", arg: 1, scope: !17086, file: !433, line: 189, type: !17016)
!17091 = !DILocation(line: 0, scope: !17086, inlinedAt: !17092)
!17092 = distinct !DILocation(line: 102, column: 2, scope: !16992)
!17093 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17092)
!17094 = distinct !DILexicalBlock(scope: !17095, file: !433, line: 194, column: 2)
!17095 = distinct !DILexicalBlock(scope: !17086, file: !433, line: 194, column: 2)
!17096 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17092)
!17097 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17092)
!17098 = distinct !DILexicalBlock(scope: !17094, file: !433, line: 194, column: 2)
!17099 = !DILocalVariable(name: "key", arg: 1, scope: !17100, file: !5884, line: 84, type: !32)
!17100 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17101)
!17101 = !{!17099}
!17102 = !DILocation(line: 0, scope: !17100, inlinedAt: !17103)
!17103 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17092)
!17104 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17103)
!17105 = !{i64 1659730}
!17106 = !DILocation(line: 148, column: 1, scope: !16972)
!17107 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !332, file: !332, line: 225, type: !17108, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17112)
!17108 = !DISubroutineType(types: !17109)
!17109 = !{!145, !17110}
!17110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17111, size: 32)
!17111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2487)
!17112 = !{!17113}
!17113 = !DILocalVariable(name: "node", arg: 1, scope: !17107, file: !332, line: 225, type: !17110)
!17114 = !DILocation(line: 0, scope: !17107)
!17115 = !DILocation(line: 227, column: 15, scope: !17107)
!17116 = !DILocation(line: 227, column: 20, scope: !17107)
!17117 = !DILocation(line: 227, column: 2, scope: !17107)
!17118 = distinct !DISubprogram(name: "elapsed", scope: !2510, file: !2510, line: 62, type: !17119, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17119 = !DISubroutineType(types: !17120)
!17120 = !{!984}
!17121 = !DILocation(line: 64, column: 9, scope: !17118)
!17122 = !DILocation(line: 64, column: 28, scope: !17118)
!17123 = !DILocation(line: 64, column: 35, scope: !17118)
!17124 = !DILocation(line: 64, column: 2, scope: !17118)
!17125 = distinct !DISubprogram(name: "first", scope: !2510, file: !2510, line: 39, type: !17126, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17128)
!17126 = !DISubroutineType(types: !17127)
!17127 = !{!2483}
!17128 = !{!17129}
!17129 = !DILocalVariable(name: "t", scope: !17125, file: !2510, line: 41, type: !17130)
!17130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!17131 = !DILocation(line: 41, column: 19, scope: !17125)
!17132 = !DILocation(line: 0, scope: !17125)
!17133 = !DILocation(line: 43, column: 9, scope: !17125)
!17134 = !DILocation(line: 43, column: 2, scope: !17125)
!17135 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !332, file: !332, line: 443, type: !17136, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17138)
!17136 = !DISubroutineType(types: !17137)
!17137 = !{null, !17130, !17130}
!17138 = !{!17139, !17140, !17141}
!17139 = !DILocalVariable(name: "successor", arg: 1, scope: !17135, file: !332, line: 443, type: !17130)
!17140 = !DILocalVariable(name: "node", arg: 2, scope: !17135, file: !332, line: 443, type: !17130)
!17141 = !DILocalVariable(name: "prev", scope: !17135, file: !332, line: 445, type: !17142)
!17142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17130)
!17143 = !DILocation(line: 0, scope: !17135)
!17144 = !DILocation(line: 445, column: 39, scope: !17135)
!17145 = !DILocation(line: 447, column: 8, scope: !17135)
!17146 = !DILocation(line: 447, column: 13, scope: !17135)
!17147 = !DILocation(line: 448, column: 8, scope: !17135)
!17148 = !DILocation(line: 448, column: 13, scope: !17135)
!17149 = !DILocation(line: 449, column: 8, scope: !17135)
!17150 = !DILocation(line: 449, column: 13, scope: !17135)
!17151 = !DILocation(line: 450, column: 18, scope: !17135)
!17152 = !DILocation(line: 451, column: 1, scope: !17135)
!17153 = distinct !DISubprogram(name: "next", scope: !2510, file: !2510, line: 46, type: !17154, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17156)
!17154 = !DISubroutineType(types: !17155)
!17155 = !{!2483, !2483}
!17156 = !{!17157, !17158}
!17157 = !DILocalVariable(name: "t", arg: 1, scope: !17153, file: !2510, line: 46, type: !2483)
!17158 = !DILocalVariable(name: "n", scope: !17153, file: !2510, line: 48, type: !17130)
!17159 = !DILocation(line: 0, scope: !17153)
!17160 = !DILocation(line: 48, column: 58, scope: !17153)
!17161 = !DILocation(line: 48, column: 19, scope: !17153)
!17162 = !DILocation(line: 50, column: 9, scope: !17153)
!17163 = !DILocation(line: 50, column: 2, scope: !17153)
!17164 = distinct !DISubprogram(name: "sys_dlist_append", scope: !332, file: !332, line: 404, type: !17165, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17168)
!17165 = !DISubroutineType(types: !17166)
!17166 = !{null, !17167, !17130}
!17167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!17168 = !{!17169, !17170, !17171}
!17169 = !DILocalVariable(name: "list", arg: 1, scope: !17164, file: !332, line: 404, type: !17167)
!17170 = !DILocalVariable(name: "node", arg: 2, scope: !17164, file: !332, line: 404, type: !17130)
!17171 = !DILocalVariable(name: "tail", scope: !17164, file: !332, line: 406, type: !17142)
!17172 = !DILocation(line: 0, scope: !17164)
!17173 = !DILocation(line: 406, column: 34, scope: !17164)
!17174 = !DILocation(line: 408, column: 8, scope: !17164)
!17175 = !DILocation(line: 408, column: 13, scope: !17164)
!17176 = !DILocation(line: 409, column: 8, scope: !17164)
!17177 = !DILocation(line: 409, column: 13, scope: !17164)
!17178 = !DILocation(line: 411, column: 8, scope: !17164)
!17179 = !DILocation(line: 411, column: 13, scope: !17164)
!17180 = !DILocation(line: 412, column: 13, scope: !17164)
!17181 = !DILocation(line: 413, column: 1, scope: !17164)
!17182 = distinct !DISubprogram(name: "next_timeout", scope: !2510, file: !2510, line: 67, type: !17119, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17183)
!17183 = !{!17184, !17185, !17186}
!17184 = !DILocalVariable(name: "to", scope: !17182, file: !2510, line: 69, type: !2483)
!17185 = !DILocalVariable(name: "ticks_elapsed", scope: !17182, file: !2510, line: 70, type: !984)
!17186 = !DILocalVariable(name: "ret", scope: !17182, file: !2510, line: 71, type: !984)
!17187 = !DILocation(line: 69, column: 24, scope: !17182)
!17188 = !DILocation(line: 0, scope: !17182)
!17189 = !DILocation(line: 70, column: 26, scope: !17182)
!17190 = !DILocation(line: 73, column: 10, scope: !17191)
!17191 = distinct !DILexicalBlock(scope: !17182, file: !2510, line: 73, column: 6)
!17192 = !DILocation(line: 73, column: 19, scope: !17191)
!17193 = !DILocation(line: 74, column: 21, scope: !17191)
!17194 = !DILocation(line: 74, column: 30, scope: !17191)
!17195 = !DILocation(line: 74, column: 28, scope: !17191)
!17196 = !DILocation(line: 74, column: 45, scope: !17191)
!17197 = !DILocation(line: 73, column: 6, scope: !17182)
!17198 = !DILocation(line: 77, column: 9, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17191, file: !2510, line: 76, column: 9)
!17200 = !DILocation(line: 0, scope: !17191)
!17201 = !DILocation(line: 81, column: 20, scope: !17202)
!17202 = distinct !DILexicalBlock(scope: !17182, file: !2510, line: 81, column: 6)
!17203 = !DILocation(line: 81, column: 6, scope: !17202)
!17204 = !DILocation(line: 81, column: 32, scope: !17202)
!17205 = !DILocation(line: 85, column: 2, scope: !17182)
!17206 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !332, file: !332, line: 341, type: !17207, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17209)
!17207 = !DISubroutineType(types: !17208)
!17208 = !{!17130, !17167, !17130}
!17209 = !{!17210, !17211}
!17210 = !DILocalVariable(name: "list", arg: 1, scope: !17206, file: !332, line: 341, type: !17167)
!17211 = !DILocalVariable(name: "node", arg: 2, scope: !17206, file: !332, line: 342, type: !17130)
!17212 = !DILocation(line: 0, scope: !17206)
!17213 = !DILocation(line: 344, column: 15, scope: !17206)
!17214 = !DILocation(line: 344, column: 9, scope: !17206)
!17215 = !DILocation(line: 344, column: 26, scope: !17206)
!17216 = !DILocation(line: 344, column: 2, scope: !17206)
!17217 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !332, file: !332, line: 325, type: !17207, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17218)
!17218 = !{!17219, !17220}
!17219 = !DILocalVariable(name: "list", arg: 1, scope: !17217, file: !332, line: 325, type: !17167)
!17220 = !DILocalVariable(name: "node", arg: 2, scope: !17217, file: !332, line: 326, type: !17130)
!17221 = !DILocation(line: 0, scope: !17217)
!17222 = !DILocation(line: 328, column: 24, scope: !17217)
!17223 = !DILocation(line: 328, column: 15, scope: !17217)
!17224 = !DILocation(line: 328, column: 9, scope: !17217)
!17225 = !DILocation(line: 328, column: 45, scope: !17217)
!17226 = !DILocation(line: 328, column: 2, scope: !17217)
!17227 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !332, file: !332, line: 294, type: !17228, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17230)
!17228 = !DISubroutineType(types: !17229)
!17229 = !{!17130, !17167}
!17230 = !{!17231}
!17231 = !DILocalVariable(name: "list", arg: 1, scope: !17227, file: !332, line: 294, type: !17167)
!17232 = !DILocation(line: 0, scope: !17227)
!17233 = !DILocation(line: 296, column: 9, scope: !17227)
!17234 = !DILocation(line: 296, column: 2, scope: !17227)
!17235 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !332, file: !332, line: 266, type: !17236, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17238)
!17236 = !DISubroutineType(types: !17237)
!17237 = !{!145, !17167}
!17238 = !{!17239}
!17239 = !DILocalVariable(name: "list", arg: 1, scope: !17235, file: !332, line: 266, type: !17167)
!17240 = !DILocation(line: 0, scope: !17235)
!17241 = !DILocation(line: 268, column: 15, scope: !17235)
!17242 = !DILocation(line: 268, column: 20, scope: !17235)
!17243 = !DILocation(line: 268, column: 2, scope: !17235)
!17244 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2510, file: !2510, line: 150, type: !17245, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17247)
!17245 = !DISubroutineType(types: !17246)
!17246 = !{!107, !2483}
!17247 = !{!17248, !17249, !17250, !17252}
!17248 = !DILocalVariable(name: "to", arg: 1, scope: !17244, file: !2510, line: 150, type: !2483)
!17249 = !DILocalVariable(name: "ret", scope: !17244, file: !2510, line: 152, type: !107)
!17250 = !DILocalVariable(name: "__i", scope: !17251, file: !2510, line: 154, type: !16985)
!17251 = distinct !DILexicalBlock(scope: !17244, file: !2510, line: 154, column: 2)
!17252 = !DILocalVariable(name: "__key", scope: !17251, file: !2510, line: 154, type: !16985)
!17253 = !DILocation(line: 0, scope: !17244)
!17254 = !DILocation(line: 0, scope: !17251)
!17255 = !DILocation(line: 0, scope: !17013, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 154, column: 2, scope: !17251)
!17257 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17258)
!17258 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17256)
!17259 = !DILocation(line: 0, scope: !17022, inlinedAt: !17258)
!17260 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17256)
!17261 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17256)
!17262 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17256)
!17263 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17256)
!17264 = !DILocation(line: 155, column: 7, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17266, file: !2510, line: 155, column: 7)
!17266 = distinct !DILexicalBlock(scope: !17267, file: !2510, line: 154, column: 24)
!17267 = distinct !DILexicalBlock(scope: !17251, file: !2510, line: 154, column: 2)
!17268 = !DILocation(line: 155, column: 7, scope: !17266)
!17269 = !DILocation(line: 156, column: 4, scope: !17270)
!17270 = distinct !DILexicalBlock(scope: !17265, file: !2510, line: 155, column: 39)
!17271 = !DILocation(line: 158, column: 3, scope: !17270)
!17272 = !DILocation(line: 0, scope: !17086, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 154, column: 2, scope: !17267)
!17274 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17273)
!17275 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17273)
!17276 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17273)
!17277 = !DILocation(line: 0, scope: !17100, inlinedAt: !17278)
!17278 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17273)
!17279 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17278)
!17280 = !DILocation(line: 161, column: 2, scope: !17244)
!17281 = distinct !DISubprogram(name: "remove_timeout", scope: !2510, file: !2510, line: 53, type: !2504, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17282)
!17282 = !{!17283}
!17283 = !DILocalVariable(name: "t", arg: 1, scope: !17281, file: !2510, line: 53, type: !2483)
!17284 = !DILocation(line: 0, scope: !17281)
!17285 = !DILocation(line: 55, column: 6, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17281, file: !2510, line: 55, column: 6)
!17287 = !DILocation(line: 55, column: 14, scope: !17286)
!17288 = !DILocation(line: 55, column: 6, scope: !17281)
!17289 = !DILocation(line: 56, column: 25, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17286, file: !2510, line: 55, column: 23)
!17291 = !DILocation(line: 56, column: 12, scope: !17290)
!17292 = !DILocation(line: 56, column: 19, scope: !17290)
!17293 = !DILocation(line: 57, column: 2, scope: !17290)
!17294 = !DILocation(line: 59, column: 23, scope: !17281)
!17295 = !DILocation(line: 59, column: 2, scope: !17281)
!17296 = !DILocation(line: 60, column: 1, scope: !17281)
!17297 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !332, file: !332, line: 496, type: !17298, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17300)
!17298 = !DISubroutineType(types: !17299)
!17299 = !{null, !17130}
!17300 = !{!17301, !17302, !17303}
!17301 = !DILocalVariable(name: "node", arg: 1, scope: !17297, file: !332, line: 496, type: !17130)
!17302 = !DILocalVariable(name: "prev", scope: !17297, file: !332, line: 498, type: !17142)
!17303 = !DILocalVariable(name: "next", scope: !17297, file: !332, line: 499, type: !17142)
!17304 = !DILocation(line: 0, scope: !17297)
!17305 = !DILocation(line: 498, column: 34, scope: !17297)
!17306 = !DILocation(line: 499, column: 34, scope: !17297)
!17307 = !DILocation(line: 501, column: 8, scope: !17297)
!17308 = !DILocation(line: 501, column: 13, scope: !17297)
!17309 = !DILocation(line: 502, column: 8, scope: !17297)
!17310 = !DILocation(line: 502, column: 13, scope: !17297)
!17311 = !DILocation(line: 503, column: 2, scope: !17297)
!17312 = !DILocation(line: 504, column: 1, scope: !17297)
!17313 = distinct !DISubprogram(name: "sys_dnode_init", scope: !332, file: !332, line: 211, type: !17298, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17314)
!17314 = !{!17315}
!17315 = !DILocalVariable(name: "node", arg: 1, scope: !17313, file: !332, line: 211, type: !17130)
!17316 = !DILocation(line: 0, scope: !17313)
!17317 = !DILocation(line: 213, column: 8, scope: !17313)
!17318 = !DILocation(line: 213, column: 13, scope: !17313)
!17319 = !DILocation(line: 214, column: 8, scope: !17313)
!17320 = !DILocation(line: 214, column: 13, scope: !17313)
!17321 = !DILocation(line: 215, column: 1, scope: !17313)
!17322 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2510, file: !2510, line: 183, type: !17323, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17327)
!17323 = !DISubroutineType(types: !17324)
!17324 = !{!685, !17325}
!17325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17326, size: 32)
!17326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2484)
!17327 = !{!17328, !17329, !17330, !17332}
!17328 = !DILocalVariable(name: "timeout", arg: 1, scope: !17322, file: !2510, line: 183, type: !17325)
!17329 = !DILocalVariable(name: "ticks", scope: !17322, file: !2510, line: 185, type: !685)
!17330 = !DILocalVariable(name: "__i", scope: !17331, file: !2510, line: 187, type: !16985)
!17331 = distinct !DILexicalBlock(scope: !17322, file: !2510, line: 187, column: 2)
!17332 = !DILocalVariable(name: "__key", scope: !17331, file: !2510, line: 187, type: !16985)
!17333 = !DILocation(line: 0, scope: !17322)
!17334 = !DILocation(line: 0, scope: !17331)
!17335 = !DILocation(line: 0, scope: !17013, inlinedAt: !17336)
!17336 = distinct !DILocation(line: 187, column: 2, scope: !17331)
!17337 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17338)
!17338 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17336)
!17339 = !DILocation(line: 0, scope: !17022, inlinedAt: !17338)
!17340 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17336)
!17341 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17336)
!17342 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17336)
!17343 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17336)
!17344 = !DILocation(line: 188, column: 11, scope: !17345)
!17345 = distinct !DILexicalBlock(scope: !17346, file: !2510, line: 187, column: 24)
!17346 = distinct !DILexicalBlock(scope: !17331, file: !2510, line: 187, column: 2)
!17347 = !DILocation(line: 0, scope: !17086, inlinedAt: !17348)
!17348 = distinct !DILocation(line: 187, column: 2, scope: !17346)
!17349 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17348)
!17350 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17348)
!17351 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17348)
!17352 = !DILocation(line: 0, scope: !17100, inlinedAt: !17353)
!17353 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17348)
!17354 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17353)
!17355 = !DILocation(line: 191, column: 2, scope: !17322)
!17356 = distinct !DISubprogram(name: "timeout_rem", scope: !2510, file: !2510, line: 165, type: !17323, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17357)
!17357 = !{!17358, !17359, !17360}
!17358 = !DILocalVariable(name: "timeout", arg: 1, scope: !17356, file: !2510, line: 165, type: !17325)
!17359 = !DILocalVariable(name: "ticks", scope: !17356, file: !2510, line: 167, type: !685)
!17360 = !DILocalVariable(name: "t", scope: !17361, file: !2510, line: 173, type: !2483)
!17361 = distinct !DILexicalBlock(scope: !17356, file: !2510, line: 173, column: 2)
!17362 = !DILocation(line: 0, scope: !17356)
!17363 = !DILocation(line: 169, column: 6, scope: !17364)
!17364 = distinct !DILexicalBlock(scope: !17356, file: !2510, line: 169, column: 6)
!17365 = !DILocation(line: 169, column: 6, scope: !17356)
!17366 = !DILocation(line: 173, column: 28, scope: !17361)
!17367 = !DILocation(line: 0, scope: !17361)
!17368 = !DILocation(line: 173, column: 39, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17361, file: !2510, line: 173, column: 2)
!17370 = !DILocation(line: 173, column: 2, scope: !17361)
!17371 = !DILocation(line: 174, column: 15, scope: !17372)
!17372 = distinct !DILexicalBlock(scope: !17369, file: !2510, line: 173, column: 61)
!17373 = !DILocation(line: 174, column: 9, scope: !17372)
!17374 = !DILocation(line: 175, column: 15, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17372, file: !2510, line: 175, column: 7)
!17376 = !DILocation(line: 175, column: 7, scope: !17372)
!17377 = !DILocation(line: 173, column: 52, scope: !17369)
!17378 = distinct !{!17378, !17370, !17379}
!17379 = !DILocation(line: 178, column: 2, scope: !17361)
!17380 = !DILocation(line: 180, column: 17, scope: !17356)
!17381 = !DILocation(line: 180, column: 15, scope: !17356)
!17382 = !DILocation(line: 180, column: 2, scope: !17356)
!17383 = !DILocation(line: 181, column: 1, scope: !17356)
!17384 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14201, file: !14201, line: 35, type: !17385, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17387)
!17385 = !DISubroutineType(types: !17386)
!17386 = !{!145, !17325}
!17387 = !{!17388}
!17388 = !DILocalVariable(name: "to", arg: 1, scope: !17384, file: !14201, line: 35, type: !17325)
!17389 = !DILocation(line: 0, scope: !17384)
!17390 = !DILocation(line: 37, column: 35, scope: !17384)
!17391 = !DILocation(line: 37, column: 10, scope: !17384)
!17392 = !DILocation(line: 37, column: 9, scope: !17384)
!17393 = !DILocation(line: 37, column: 2, scope: !17384)
!17394 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2510, file: !2510, line: 194, type: !17323, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17395)
!17395 = !{!17396, !17397, !17398, !17400}
!17396 = !DILocalVariable(name: "timeout", arg: 1, scope: !17394, file: !2510, line: 194, type: !17325)
!17397 = !DILocalVariable(name: "ticks", scope: !17394, file: !2510, line: 196, type: !685)
!17398 = !DILocalVariable(name: "__i", scope: !17399, file: !2510, line: 198, type: !16985)
!17399 = distinct !DILexicalBlock(scope: !17394, file: !2510, line: 198, column: 2)
!17400 = !DILocalVariable(name: "__key", scope: !17399, file: !2510, line: 198, type: !16985)
!17401 = !DILocation(line: 0, scope: !17394)
!17402 = !DILocation(line: 0, scope: !17399)
!17403 = !DILocation(line: 0, scope: !17013, inlinedAt: !17404)
!17404 = distinct !DILocation(line: 198, column: 2, scope: !17399)
!17405 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17406)
!17406 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17404)
!17407 = !DILocation(line: 0, scope: !17022, inlinedAt: !17406)
!17408 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17404)
!17409 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17404)
!17410 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17404)
!17411 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17404)
!17412 = !DILocation(line: 199, column: 11, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17414, file: !2510, line: 198, column: 24)
!17414 = distinct !DILexicalBlock(scope: !17399, file: !2510, line: 198, column: 2)
!17415 = !DILocation(line: 199, column: 23, scope: !17413)
!17416 = !DILocation(line: 0, scope: !17086, inlinedAt: !17417)
!17417 = distinct !DILocation(line: 198, column: 2, scope: !17414)
!17418 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17417)
!17419 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17417)
!17420 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17417)
!17421 = !DILocation(line: 0, scope: !17100, inlinedAt: !17422)
!17422 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17417)
!17423 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17422)
!17424 = !DILocation(line: 199, column: 21, scope: !17413)
!17425 = !DILocation(line: 202, column: 2, scope: !17394)
!17426 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2510, file: !2510, line: 205, type: !17119, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17427)
!17427 = !{!17428, !17429, !17431}
!17428 = !DILocalVariable(name: "ret", scope: !17426, file: !2510, line: 207, type: !984)
!17429 = !DILocalVariable(name: "__i", scope: !17430, file: !2510, line: 209, type: !16985)
!17430 = distinct !DILexicalBlock(scope: !17426, file: !2510, line: 209, column: 2)
!17431 = !DILocalVariable(name: "__key", scope: !17430, file: !2510, line: 209, type: !16985)
!17432 = !DILocation(line: 0, scope: !17426)
!17433 = !DILocation(line: 0, scope: !17430)
!17434 = !DILocation(line: 0, scope: !17013, inlinedAt: !17435)
!17435 = distinct !DILocation(line: 209, column: 2, scope: !17430)
!17436 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17437)
!17437 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17435)
!17438 = !DILocation(line: 0, scope: !17022, inlinedAt: !17437)
!17439 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17435)
!17440 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17435)
!17441 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17435)
!17442 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17435)
!17443 = !DILocation(line: 210, column: 9, scope: !17444)
!17444 = distinct !DILexicalBlock(scope: !17445, file: !2510, line: 209, column: 24)
!17445 = distinct !DILexicalBlock(scope: !17430, file: !2510, line: 209, column: 2)
!17446 = !DILocation(line: 0, scope: !17086, inlinedAt: !17447)
!17447 = distinct !DILocation(line: 209, column: 2, scope: !17445)
!17448 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17447)
!17449 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17447)
!17450 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17447)
!17451 = !DILocation(line: 0, scope: !17100, inlinedAt: !17452)
!17452 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17447)
!17453 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17452)
!17454 = !DILocation(line: 212, column: 2, scope: !17426)
!17455 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2510, file: !2510, line: 215, type: !11505, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17456)
!17456 = !{!17457, !17458, !17459, !17461, !17462, !17465, !17466}
!17457 = !DILocalVariable(name: "ticks", arg: 1, scope: !17455, file: !2510, line: 215, type: !984)
!17458 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17455, file: !2510, line: 215, type: !145)
!17459 = !DILocalVariable(name: "__i", scope: !17460, file: !2510, line: 217, type: !16985)
!17460 = distinct !DILexicalBlock(scope: !17455, file: !2510, line: 217, column: 2)
!17461 = !DILocalVariable(name: "__key", scope: !17460, file: !2510, line: 217, type: !16985)
!17462 = !DILocalVariable(name: "next_to", scope: !17463, file: !2510, line: 218, type: !107)
!17463 = distinct !DILexicalBlock(scope: !17464, file: !2510, line: 217, column: 24)
!17464 = distinct !DILexicalBlock(scope: !17460, file: !2510, line: 217, column: 2)
!17465 = !DILocalVariable(name: "sooner", scope: !17463, file: !2510, line: 219, type: !145)
!17466 = !DILocalVariable(name: "imminent", scope: !17463, file: !2510, line: 221, type: !145)
!17467 = !DILocation(line: 0, scope: !17455)
!17468 = !DILocation(line: 0, scope: !17460)
!17469 = !DILocation(line: 0, scope: !17013, inlinedAt: !17470)
!17470 = distinct !DILocation(line: 217, column: 2, scope: !17460)
!17471 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17472)
!17472 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17470)
!17473 = !DILocation(line: 0, scope: !17022, inlinedAt: !17472)
!17474 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17470)
!17475 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17470)
!17476 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17470)
!17477 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17470)
!17478 = !DILocation(line: 218, column: 17, scope: !17463)
!17479 = !DILocation(line: 0, scope: !17463)
!17480 = !DILocation(line: 221, column: 27, scope: !17463)
!17481 = !DILocation(line: 233, column: 17, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17463, file: !2510, line: 233, column: 7)
!17483 = !DILocation(line: 234, column: 26, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17482, file: !2510, line: 233, column: 56)
!17485 = !DILocation(line: 234, column: 4, scope: !17484)
!17486 = !DILocation(line: 235, column: 3, scope: !17484)
!17487 = !DILocation(line: 0, scope: !17086, inlinedAt: !17488)
!17488 = distinct !DILocation(line: 217, column: 2, scope: !17464)
!17489 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17488)
!17490 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17488)
!17491 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17488)
!17492 = !DILocation(line: 0, scope: !17100, inlinedAt: !17493)
!17493 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17488)
!17494 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17493)
!17495 = !DILocation(line: 237, column: 1, scope: !17455)
!17496 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2510, file: !2510, line: 239, type: !17497, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17499)
!17497 = !DISubroutineType(types: !17498)
!17498 = !{null, !984}
!17499 = !{!17500, !17501, !17502, !17504}
!17500 = !DILocalVariable(name: "ticks", arg: 1, scope: !17496, file: !2510, line: 239, type: !984)
!17501 = !DILocalVariable(name: "key", scope: !17496, file: !2510, line: 245, type: !16985)
!17502 = !DILocalVariable(name: "t", scope: !17503, file: !2510, line: 262, type: !2483)
!17503 = distinct !DILexicalBlock(scope: !17496, file: !2510, line: 261, column: 67)
!17504 = !DILocalVariable(name: "dt", scope: !17503, file: !2510, line: 263, type: !107)
!17505 = !DILocation(line: 0, scope: !17496)
!17506 = !DILocation(line: 242, column: 2, scope: !17496)
!17507 = !DILocation(line: 0, scope: !17013, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 245, column: 25, scope: !17496)
!17509 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17510)
!17510 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17508)
!17511 = !DILocation(line: 0, scope: !17022, inlinedAt: !17510)
!17512 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17508)
!17513 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17508)
!17514 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17508)
!17515 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17508)
!17516 = !DILocation(line: 261, column: 9, scope: !17496)
!17517 = !DILocation(line: 261, column: 17, scope: !17496)
!17518 = !DILocation(line: 261, column: 25, scope: !17496)
!17519 = !DILocation(line: 261, column: 37, scope: !17496)
!17520 = !DILocation(line: 261, column: 47, scope: !17496)
!17521 = !DILocation(line: 261, column: 44, scope: !17496)
!17522 = !DILocation(line: 261, column: 2, scope: !17496)
!17523 = !DILocation(line: 0, scope: !17503)
!17524 = !DILocation(line: 263, column: 12, scope: !17503)
!17525 = !DILocation(line: 265, column: 16, scope: !17503)
!17526 = !DILocation(line: 265, column: 13, scope: !17503)
!17527 = !DILocation(line: 266, column: 13, scope: !17503)
!17528 = !DILocation(line: 267, column: 3, scope: !17503)
!17529 = !DILocation(line: 0, scope: !17086, inlinedAt: !17530)
!17530 = distinct !DILocation(line: 269, column: 3, scope: !17503)
!17531 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17530)
!17532 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17530)
!17533 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17530)
!17534 = !DILocation(line: 0, scope: !17100, inlinedAt: !17535)
!17535 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17530)
!17536 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17535)
!17537 = !DILocation(line: 270, column: 6, scope: !17503)
!17538 = !DILocation(line: 270, column: 3, scope: !17503)
!17539 = !DILocation(line: 0, scope: !17013, inlinedAt: !17540)
!17540 = distinct !DILocation(line: 271, column: 9, scope: !17503)
!17541 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17542)
!17542 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17540)
!17543 = !DILocation(line: 0, scope: !17022, inlinedAt: !17542)
!17544 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17540)
!17545 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17540)
!17546 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17540)
!17547 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17540)
!17548 = !DILocation(line: 272, column: 22, scope: !17503)
!17549 = distinct !{!17549, !17522, !17550}
!17550 = !DILocation(line: 273, column: 2, scope: !17496)
!17551 = !DILocation(line: 276, column: 19, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17553, file: !2510, line: 275, column: 23)
!17553 = distinct !DILexicalBlock(scope: !17496, file: !2510, line: 275, column: 6)
!17554 = !DILocation(line: 277, column: 2, scope: !17552)
!17555 = !DILocation(line: 279, column: 15, scope: !17496)
!17556 = !DILocation(line: 279, column: 12, scope: !17496)
!17557 = !DILocation(line: 280, column: 21, scope: !17496)
!17558 = !DILocation(line: 282, column: 24, scope: !17496)
!17559 = !DILocation(line: 282, column: 2, scope: !17496)
!17560 = !DILocation(line: 0, scope: !17086, inlinedAt: !17561)
!17561 = distinct !DILocation(line: 284, column: 2, scope: !17496)
!17562 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17561)
!17563 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17561)
!17564 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17561)
!17565 = !DILocation(line: 0, scope: !17100, inlinedAt: !17566)
!17566 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17561)
!17567 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17566)
!17568 = !DILocation(line: 285, column: 1, scope: !17496)
!17569 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2510, file: !2510, line: 287, type: !17570, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17572)
!17570 = !DISubroutineType(types: !17571)
!17571 = !{!389}
!17572 = !{!17573, !17574, !17576}
!17573 = !DILocalVariable(name: "t", scope: !17569, file: !2510, line: 289, type: !687)
!17574 = !DILocalVariable(name: "__i", scope: !17575, file: !2510, line: 291, type: !16985)
!17575 = distinct !DILexicalBlock(scope: !17569, file: !2510, line: 291, column: 2)
!17576 = !DILocalVariable(name: "__key", scope: !17575, file: !2510, line: 291, type: !16985)
!17577 = !DILocation(line: 0, scope: !17569)
!17578 = !DILocation(line: 0, scope: !17575)
!17579 = !DILocation(line: 0, scope: !17013, inlinedAt: !17580)
!17580 = distinct !DILocation(line: 291, column: 2, scope: !17575)
!17581 = !DILocation(line: 55, column: 2, scope: !17022, inlinedAt: !17582)
!17582 = distinct !DILocation(line: 145, column: 10, scope: !17013, inlinedAt: !17580)
!17583 = !DILocation(line: 0, scope: !17022, inlinedAt: !17582)
!17584 = !DILocation(line: 148, column: 2, scope: !17030, inlinedAt: !17580)
!17585 = !DILocation(line: 148, column: 2, scope: !17031, inlinedAt: !17580)
!17586 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17580)
!17587 = !DILocation(line: 160, column: 2, scope: !17013, inlinedAt: !17580)
!17588 = !DILocation(line: 292, column: 7, scope: !17589)
!17589 = distinct !DILexicalBlock(scope: !17590, file: !2510, line: 291, column: 24)
!17590 = distinct !DILexicalBlock(scope: !17575, file: !2510, line: 291, column: 2)
!17591 = !DILocation(line: 292, column: 19, scope: !17589)
!17592 = !DILocation(line: 0, scope: !17086, inlinedAt: !17593)
!17593 = distinct !DILocation(line: 291, column: 2, scope: !17590)
!17594 = !DILocation(line: 194, column: 2, scope: !17094, inlinedAt: !17593)
!17595 = !DILocation(line: 194, column: 2, scope: !17095, inlinedAt: !17593)
!17596 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17593)
!17597 = !DILocation(line: 0, scope: !17100, inlinedAt: !17598)
!17598 = distinct !DILocation(line: 215, column: 2, scope: !17086, inlinedAt: !17593)
!17599 = !DILocation(line: 95, column: 2, scope: !17100, inlinedAt: !17598)
!17600 = !DILocation(line: 292, column: 17, scope: !17589)
!17601 = !DILocation(line: 294, column: 2, scope: !17569)
!17602 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2510, file: !2510, line: 297, type: !7225, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17603 = !DILocation(line: 300, column: 19, scope: !17602)
!17604 = !DILocation(line: 300, column: 9, scope: !17602)
!17605 = !DILocation(line: 300, column: 2, scope: !17602)
!17606 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2510, file: !2510, line: 306, type: !17570, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17607 = !DILocation(line: 308, column: 9, scope: !17606)
!17608 = !DILocation(line: 308, column: 2, scope: !17606)
!17609 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2510, file: !2510, line: 319, type: !5908, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17610)
!17610 = !{!17611, !17612, !17613, !17614}
!17611 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17609, file: !2510, line: 319, type: !152)
!17612 = !DILocalVariable(name: "start_cycles", scope: !17609, file: !2510, line: 328, type: !152)
!17613 = !DILocalVariable(name: "cycles_to_wait", scope: !17609, file: !2510, line: 331, type: !152)
!17614 = !DILocalVariable(name: "current_cycles", scope: !17615, file: !2510, line: 338, type: !152)
!17615 = distinct !DILexicalBlock(scope: !17616, file: !2510, line: 337, column: 11)
!17616 = distinct !DILexicalBlock(scope: !17617, file: !2510, line: 337, column: 2)
!17617 = distinct !DILexicalBlock(scope: !17609, file: !2510, line: 337, column: 2)
!17618 = !DILocation(line: 0, scope: !17609)
!17619 = !DILocation(line: 322, column: 19, scope: !17620)
!17620 = distinct !DILexicalBlock(scope: !17609, file: !2510, line: 322, column: 6)
!17621 = !DILocation(line: 322, column: 6, scope: !17609)
!17622 = !DILocation(line: 328, column: 26, scope: !17609)
!17623 = !DILocation(line: 333, column: 43, scope: !17609)
!17624 = !DILocation(line: 337, column: 2, scope: !17609)
!17625 = !DILocation(line: 338, column: 29, scope: !17615)
!17626 = !DILocation(line: 0, scope: !17615)
!17627 = !DILocation(line: 341, column: 23, scope: !17628)
!17628 = distinct !DILexicalBlock(scope: !17615, file: !2510, line: 341, column: 7)
!17629 = !DILocation(line: 341, column: 39, scope: !17628)
!17630 = !DILocation(line: 349, column: 1, scope: !17609)
!17631 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !419, file: !419, line: 1675, type: !7225, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17632 = !DILocation(line: 1677, column: 9, scope: !17631)
!17633 = !DILocation(line: 1677, column: 2, scope: !17631)
!17634 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8827, file: !8827, line: 24, type: !7225, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17635 = !DILocation(line: 26, column: 9, scope: !17634)
!17636 = !DILocation(line: 26, column: 2, scope: !17634)
!17637 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2510, file: !2510, line: 364, type: !17638, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17640)
!17638 = !DISubroutineType(types: !17639)
!17639 = !{!687, !16975}
!17640 = !{!17641, !17642}
!17641 = !DILocalVariable(name: "timeout", arg: 1, scope: !17637, file: !2510, line: 364, type: !16975)
!17642 = !DILocalVariable(name: "dt", scope: !17637, file: !2510, line: 366, type: !685)
!17643 = !DILocation(line: 0, scope: !17637)
!17644 = !DILocation(line: 368, column: 6, scope: !17637)
!17645 = !DILocation(line: 371, column: 10, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17647, file: !2510, line: 370, column: 47)
!17647 = distinct !DILexicalBlock(scope: !17648, file: !2510, line: 370, column: 13)
!17648 = distinct !DILexicalBlock(scope: !17637, file: !2510, line: 368, column: 6)
!17649 = !DILocation(line: 371, column: 3, scope: !17646)
!17650 = !DILocation(line: 376, column: 58, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17652, file: !2510, line: 376, column: 7)
!17652 = distinct !DILexicalBlock(scope: !17647, file: !2510, line: 372, column: 9)
!17653 = !DILocation(line: 376, column: 7, scope: !17652)
!17654 = !DILocation(line: 376, column: 43, scope: !17651)
!17655 = !DILocation(line: 377, column: 4, scope: !17656)
!17656 = distinct !DILexicalBlock(scope: !17651, file: !2510, line: 376, column: 64)
!17657 = !DILocation(line: 379, column: 10, scope: !17652)
!17658 = !DILocation(line: 379, column: 33, scope: !17652)
!17659 = !DILocation(line: 379, column: 31, scope: !17652)
!17660 = !DILocation(line: 379, column: 3, scope: !17652)
!17661 = !DILocation(line: 0, scope: !17648)
!17662 = !DILocation(line: 381, column: 1, scope: !17637)
!17663 = distinct !DISubprogram(name: "boot_banner", scope: !17664, file: !17664, line: 26, type: !3055, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2175)
!17664 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17665 = !DILocation(line: 34, column: 2, scope: !17663)
!17666 = !DILocation(line: 36, column: 1, scope: !17663)
